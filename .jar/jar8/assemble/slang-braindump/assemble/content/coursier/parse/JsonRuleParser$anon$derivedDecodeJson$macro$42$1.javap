Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.class
  Last modified May 29, 2022; size 8096 bytes
  SHA-256 checksum 4f92b5d36604b07858bbdeaaf3ce0cd6b24291837309c01d50e9506b202a61a6
  Compiled from "JsonRuleParser.scala"
public final class coursier.parse.JsonRuleParser$anon$derivedDecodeJson$macro$42$1 implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 10, attributes: 6
Constant pool:
    #1 = Utf8               coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1
    #2 = Class              #1            // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               JsonRuleParser.scala
    #8 = Utf8               coursier/parse/JsonRuleParser
    #9 = Class              #8            // coursier/parse/JsonRuleParser
   #10 = Utf8               coursier/parse/JsonRuleParser$Repr$1
   #11 = Class              #10           // coursier/parse/JsonRuleParser$Repr$1
   #12 = Utf8               1
   #13 = Utf8               coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$$anon$2
   #14 = Class              #13           // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$$anon$2
   #15 = Utf8               coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$36$1
   #16 = Class              #15           // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$36$1
   #17 = Utf8               coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$38$1
   #18 = Class              #17           // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$38$1
   #19 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #20 = Class              #19           // java/lang/invoke/MethodHandles$Lookup
   #21 = Utf8               java/lang/invoke/MethodHandles
   #22 = Class              #21           // java/lang/invoke/MethodHandles
   #23 = Utf8               Lookup
   #24 = Utf8               shapeless/Default$AsOptions
   #25 = Class              #24           // shapeless/Default$AsOptions
   #26 = Utf8               shapeless/Default
   #27 = Class              #26           // shapeless/Default
   #28 = Utf8               AsOptions
   #29 = Utf8               shapeless/Default$AsOptions$
   #30 = Class              #29           // shapeless/Default$AsOptions$
   #31 = Utf8
   #32 = Utf8               shapeless/Default$AsOptions$Helper
   #33 = Class              #32           // shapeless/Default$AsOptions$Helper
   #34 = Utf8               Helper
   #35 = Utf8               shapeless/Default$AsOptions$Helper$
   #36 = Class              #35           // shapeless/Default$AsOptions$Helper$
   #37 = Utf8               shapeless/ops/hlist$ZipWithKeys
   #38 = Class              #37           // shapeless/ops/hlist$ZipWithKeys
   #39 = Utf8               shapeless/ops/hlist
   #40 = Class              #39           // shapeless/ops/hlist
   #41 = Utf8               ZipWithKeys
   #42 = Utf8               shapeless/ops/hlist$ZipWithKeys$
   #43 = Class              #42           // shapeless/ops/hlist$ZipWithKeys$
   #44 = Utf8               inst$macro$28
   #45 = Utf8               Largonaut/derive/MkDecodeJson;
   #46 = Utf8               Largonaut/derive/MkDecodeJson<Lcoursier/parse/JsonRuleParser$Repr$1;>;
   #47 = Utf8               inst$macro$39
   #48 = Utf8               Largonaut/derive/HListProductDecodeJson;
   #49 = Utf8               Largonaut/derive/HListProductDecodeJson<Lshapeless/$colon$colon<Lscala/collection/immutable/List<Lcoursier/core/Module;>;Lshapeless/HNil;>;Lshapeless/$colon$colon<Lscala/Option<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;Lshapeless/HNil;>;>;
   #50 = Utf8               inst$macro$40
   #51 = Utf8               Largonaut/DecodeJson;
   #52 = Utf8               Largonaut/DecodeJson<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;
   #53 = Utf8               bitmap$0
   #54 = Utf8               B
   #55 = Utf8               $outer
   #56 = Utf8               Lcoursier/parse/JsonRuleParser;
   #57 = Utf8               Repr$module$1
   #58 = Utf8               Lscala/runtime/LazyRef;
   #59 = Utf8               inst$macro$28$lzycompute
   #60 = Utf8               ()Largonaut/derive/MkDecodeJson;
   #61 = Utf8               ()Largonaut/derive/MkDecodeJson<Lcoursier/parse/JsonRuleParser$Repr$1;>;
   #62 = NameAndType        #53:#54       // bitmap$0:B
   #63 = Fieldref           #2.#62        // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.bitmap$0:B
   #64 = Utf8               argonaut/derive/MkDecodeJson$
   #65 = Class              #64           // argonaut/derive/MkDecodeJson$
   #66 = Utf8               MODULE$
   #67 = Utf8               Largonaut/derive/MkDecodeJson$;
   #68 = NameAndType        #66:#67       // MODULE$:Largonaut/derive/MkDecodeJson$;
   #69 = Fieldref           #65.#68       // argonaut/derive/MkDecodeJson$.MODULE$:Largonaut/derive/MkDecodeJson$;
   #70 = Utf8               argonaut/derive/ProductDecodeJson$
   #71 = Class              #70           // argonaut/derive/ProductDecodeJson$
   #72 = Utf8               Largonaut/derive/ProductDecodeJson$;
   #73 = NameAndType        #66:#72       // MODULE$:Largonaut/derive/ProductDecodeJson$;
   #74 = Fieldref           #71.#73       // argonaut/derive/ProductDecodeJson$.MODULE$:Largonaut/derive/ProductDecodeJson$;
   #75 = Utf8               shapeless/LabelledGeneric$
   #76 = Class              #75           // shapeless/LabelledGeneric$
   #77 = Utf8               Lshapeless/LabelledGeneric$;
   #78 = NameAndType        #66:#77       // MODULE$:Lshapeless/LabelledGeneric$;
   #79 = Fieldref           #76.#78       // shapeless/LabelledGeneric$.MODULE$:Lshapeless/LabelledGeneric$;
   #80 = Utf8               <init>
   #81 = Utf8               (Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
   #82 = NameAndType        #80:#81       // "<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
   #83 = Methodref          #14.#82       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$$anon$2."<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
   #84 = Methodref          #16.#82       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$36$1."<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
   #85 = Utf8               Lshapeless/ops/hlist$ZipWithKeys$;
   #86 = NameAndType        #66:#85       // MODULE$:Lshapeless/ops/hlist$ZipWithKeys$;
   #87 = Fieldref           #43.#86       // shapeless/ops/hlist$ZipWithKeys$.MODULE$:Lshapeless/ops/hlist$ZipWithKeys$;
   #88 = Utf8               hnilZipWithKeys
   #89 = Utf8               ()Lshapeless/ops/hlist$ZipWithKeys;
   #90 = NameAndType        #88:#89       // hnilZipWithKeys:()Lshapeless/ops/hlist$ZipWithKeys;
   #91 = Methodref          #43.#90       // shapeless/ops/hlist$ZipWithKeys$.hnilZipWithKeys:()Lshapeless/ops/hlist$ZipWithKeys;
   #92 = Utf8               shapeless/Witness$
   #93 = Class              #92           // shapeless/Witness$
   #94 = Utf8               Lshapeless/Witness$;
   #95 = NameAndType        #66:#94       // MODULE$:Lshapeless/Witness$;
   #96 = Fieldref           #93.#95       // shapeless/Witness$.MODULE$:Lshapeless/Witness$;
   #97 = Utf8               modules
   #98 = String             #97           // modules
   #99 = Utf8               scala/runtime/SymbolLiteral
  #100 = Class              #99           // scala/runtime/SymbolLiteral
  #101 = Utf8               bootstrap
  #102 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;)Ljava/lang/invoke/CallSite;
  #103 = NameAndType        #101:#102     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;)Ljava/lang/invoke/CallSite;
  #104 = Methodref          #100.#103     // scala/runtime/SymbolLiteral.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;)Ljava/lang/invoke/CallSite;
  #105 = MethodHandle       6:#104        // REF_invokeStatic scala/runtime/SymbolLiteral.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;)Ljava/lang/invoke/CallSite;
  #106 = Utf8               apply
  #107 = Utf8               ()Lscala/Symbol;
  #108 = NameAndType        #106:#107     // apply:()Lscala/Symbol;
  #109 = InvokeDynamic      #0:#108       // #0:apply:()Lscala/Symbol;
  #110 = Utf8               mkWitness
  #111 = Utf8               (Ljava/lang/Object;)Lshapeless/Witness;
  #112 = NameAndType        #110:#111     // mkWitness:(Ljava/lang/Object;)Lshapeless/Witness;
  #113 = Methodref          #93.#112      // shapeless/Witness$.mkWitness:(Ljava/lang/Object;)Lshapeless/Witness;
  #114 = Utf8               hconsZipWithKeys
  #115 = Utf8               (Lshapeless/ops/hlist$ZipWithKeys;Lshapeless/Witness;)Lshapeless/ops/hlist$ZipWithKeys;
  #116 = NameAndType        #114:#115     // hconsZipWithKeys:(Lshapeless/ops/hlist$ZipWithKeys;Lshapeless/Witness;)Lshapeless/ops/hlist$ZipWithKeys;
  #117 = Methodref          #43.#116      // shapeless/ops/hlist$ZipWithKeys$.hconsZipWithKeys:(Lshapeless/ops/hlist$ZipWithKeys;Lshapeless/Witness;)Lshapeless/ops/hlist$ZipWithKeys;
  #118 = Utf8               scala/$less$colon$less$
  #119 = Class              #118          // scala/$less$colon$less$
  #120 = Utf8               Lscala/$less$colon$less$;
  #121 = NameAndType        #66:#120      // MODULE$:Lscala/$less$colon$less$;
  #122 = Fieldref           #119.#121     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #123 = Utf8               refl
  #124 = Utf8               ()Lscala/$eq$colon$eq;
  #125 = NameAndType        #123:#124     // refl:()Lscala/$eq$colon$eq;
  #126 = Methodref          #119.#125     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #127 = Utf8               materializeProduct
  #128 = Utf8               (Lshapeless/DefaultSymbolicLabelling;Lshapeless/Generic;Lshapeless/ops/hlist$ZipWithKeys;Lscala/$less$colon$less;)Lshapeless/LabelledGeneric;
  #129 = NameAndType        #127:#128     // materializeProduct:(Lshapeless/DefaultSymbolicLabelling;Lshapeless/Generic;Lshapeless/ops/hlist$ZipWithKeys;Lscala/$less$colon$less;)Lshapeless/LabelledGeneric;
  #130 = Methodref          #76.#129      // shapeless/LabelledGeneric$.materializeProduct:(Lshapeless/DefaultSymbolicLabelling;Lshapeless/Generic;Lshapeless/ops/hlist$ZipWithKeys;Lscala/$less$colon$less;)Lshapeless/LabelledGeneric;
  #131 = Utf8               Lshapeless/Default$AsOptions$;
  #132 = NameAndType        #66:#131      // MODULE$:Lshapeless/Default$AsOptions$;
  #133 = Fieldref           #30.#132      // shapeless/Default$AsOptions$.MODULE$:Lshapeless/Default$AsOptions$;
  #134 = Utf8               shapeless/Default$
  #135 = Class              #134          // shapeless/Default$
  #136 = Utf8               Lshapeless/Default$;
  #137 = NameAndType        #66:#136      // MODULE$:Lshapeless/Default$;
  #138 = Fieldref           #135.#137     // shapeless/Default$.MODULE$:Lshapeless/Default$;
  #139 = Utf8               shapeless/$colon$colon
  #140 = Class              #139          // shapeless/$colon$colon
  #141 = Utf8               scala/None$
  #142 = Class              #141          // scala/None$
  #143 = Utf8               Lscala/None$;
  #144 = NameAndType        #66:#143      // MODULE$:Lscala/None$;
  #145 = Fieldref           #142.#144     // scala/None$.MODULE$:Lscala/None$;
  #146 = Utf8               shapeless/HNil$
  #147 = Class              #146          // shapeless/HNil$
  #148 = Utf8               Lshapeless/HNil$;
  #149 = NameAndType        #66:#148      // MODULE$:Lshapeless/HNil$;
  #150 = Fieldref           #147.#149     // shapeless/HNil$.MODULE$:Lshapeless/HNil$;
  #151 = Utf8               (Ljava/lang/Object;Lshapeless/HList;)V
  #152 = NameAndType        #80:#151      // "<init>":(Ljava/lang/Object;Lshapeless/HList;)V
  #153 = Methodref          #140.#152     // shapeless/$colon$colon."<init>":(Ljava/lang/Object;Lshapeless/HList;)V
  #154 = Utf8               mkDefault
  #155 = Utf8               (Lshapeless/HList;)Lshapeless/Default;
  #156 = NameAndType        #154:#155     // mkDefault:(Lshapeless/HList;)Lshapeless/Default;
  #157 = Methodref          #135.#156     // shapeless/Default$.mkDefault:(Lshapeless/HList;)Lshapeless/Default;
  #158 = Methodref          #18.#82       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$38$1."<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
  #159 = Utf8               Lshapeless/Default$AsOptions$Helper$;
  #160 = NameAndType        #66:#159      // MODULE$:Lshapeless/Default$AsOptions$Helper$;
  #161 = Fieldref           #36.#160      // shapeless/Default$AsOptions$Helper$.MODULE$:Lshapeless/Default$AsOptions$Helper$;
  #162 = Utf8               hnilHelper
  #163 = Utf8               ()Lshapeless/Default$AsOptions$Helper;
  #164 = NameAndType        #162:#163     // hnilHelper:()Lshapeless/Default$AsOptions$Helper;
  #165 = Methodref          #36.#164      // shapeless/Default$AsOptions$Helper$.hnilHelper:()Lshapeless/Default$AsOptions$Helper;
  #166 = Utf8               hconsNoneHelper
  #167 = Utf8               (Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions$Helper;
  #168 = NameAndType        #166:#167     // hconsNoneHelper:(Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions$Helper;
  #169 = Methodref          #36.#168      // shapeless/Default$AsOptions$Helper$.hconsNoneHelper:(Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions$Helper;
  #170 = Utf8               asOption
  #171 = Utf8               (Lshapeless/Default;Lshapeless/Generic;Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions;
  #172 = NameAndType        #170:#171     // asOption:(Lshapeless/Default;Lshapeless/Generic;Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions;
  #173 = Methodref          #30.#172      // shapeless/Default$AsOptions$.asOption:(Lshapeless/Default;Lshapeless/Generic;Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions;
  #174 = Utf8               shapeless/Lazy$
  #175 = Class              #174          // shapeless/Lazy$
  #176 = Utf8               Lshapeless/Lazy$;
  #177 = NameAndType        #66:#176      // MODULE$:Lshapeless/Lazy$;
  #178 = Fieldref           #175.#177     // shapeless/Lazy$.MODULE$:Lshapeless/Lazy$;
  #179 = Utf8               ()Ljava/lang/Object;
  #180 = MethodType         #179          //  ()Ljava/lang/Object;
  #181 = Utf8               $anonfun$inst$macro$28$1
  #182 = Utf8               (Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
  #183 = NameAndType        #181:#182     // $anonfun$inst$macro$28$1:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
  #184 = Methodref          #2.#183       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.$anonfun$inst$macro$28$1:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
  #185 = MethodHandle       6:#184        // REF_invokeStatic coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.$anonfun$inst$macro$28$1:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
  #186 = Utf8               ()Largonaut/derive/HListProductDecodeJson;
  #187 = MethodType         #186          //  ()Largonaut/derive/HListProductDecodeJson;
  #188 = Integer            5
  #189 = Integer            1
  #190 = Utf8               java/lang/invoke/LambdaMetafactory
  #191 = Class              #190          // java/lang/invoke/LambdaMetafactory
  #192 = Utf8               altMetafactory
  #193 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #194 = NameAndType        #192:#193     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #195 = Methodref          #191.#194     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #196 = MethodHandle       6:#195        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #197 = Utf8               (Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Lscala/Function0;
  #198 = NameAndType        #106:#197     // apply:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Lscala/Function0;
  #199 = InvokeDynamic      #1:#198       // #1:apply:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Lscala/Function0;
  #200 = Utf8               (Lscala/Function0;)Lshapeless/Lazy;
  #201 = NameAndType        #106:#200     // apply:(Lscala/Function0;)Lshapeless/Lazy;
  #202 = Methodref          #175.#201     // shapeless/Lazy$.apply:(Lscala/Function0;)Lshapeless/Lazy;
  #203 = Utf8               generic
  #204 = Utf8               (Lshapeless/LabelledGeneric;Lshapeless/Default$AsOptions;Lshapeless/Lazy;)Largonaut/derive/ProductDecodeJson;
  #205 = NameAndType        #203:#204     // generic:(Lshapeless/LabelledGeneric;Lshapeless/Default$AsOptions;Lshapeless/Lazy;)Largonaut/derive/ProductDecodeJson;
  #206 = Methodref          #71.#205      // argonaut/derive/ProductDecodeJson$.generic:(Lshapeless/LabelledGeneric;Lshapeless/Default$AsOptions;Lshapeless/Lazy;)Largonaut/derive/ProductDecodeJson;
  #207 = Utf8               argonaut/derive/JsonProductCodecFor$
  #208 = Class              #207          // argonaut/derive/JsonProductCodecFor$
  #209 = Utf8               Largonaut/derive/JsonProductCodecFor$;
  #210 = NameAndType        #66:#209      // MODULE$:Largonaut/derive/JsonProductCodecFor$;
  #211 = Fieldref           #208.#210     // argonaut/derive/JsonProductCodecFor$.MODULE$:Largonaut/derive/JsonProductCodecFor$;
  #212 = Utf8               default
  #213 = Utf8               ()Largonaut/derive/JsonProductCodecFor;
  #214 = NameAndType        #212:#213     // default:()Largonaut/derive/JsonProductCodecFor;
  #215 = Methodref          #208.#214     // argonaut/derive/JsonProductCodecFor$.default:()Largonaut/derive/JsonProductCodecFor;
  #216 = Utf8               product
  #217 = Utf8               (Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
  #218 = NameAndType        #216:#217     // product:(Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
  #219 = Methodref          #65.#218      // argonaut/derive/MkDecodeJson$.product:(Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
  #220 = NameAndType        #44:#45       // inst$macro$28:Largonaut/derive/MkDecodeJson;
  #221 = Fieldref           #2.#220       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$28:Largonaut/derive/MkDecodeJson;
  #222 = Utf8               java/lang/Throwable
  #223 = Class              #222          // java/lang/Throwable
  #224 = Utf8               this
  #225 = Utf8               Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
  #226 = NameAndType        #59:#60       // inst$macro$28$lzycompute:()Largonaut/derive/MkDecodeJson;
  #227 = Methodref          #2.#226       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$28$lzycompute:()Largonaut/derive/MkDecodeJson;
  #228 = Utf8               argonaut/derive/MkDecodeJson
  #229 = Class              #228          // argonaut/derive/MkDecodeJson
  #230 = Utf8               inst$macro$39$lzycompute
  #231 = Utf8               ()Largonaut/derive/HListProductDecodeJson<Lshapeless/$colon$colon<Lscala/collection/immutable/List<Lcoursier/core/Module;>;Lshapeless/HNil;>;Lshapeless/$colon$colon<Lscala/Option<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;Lshapeless/HNil;>;>;
  #232 = Utf8               argonaut/derive/HListProductDecodeJson$
  #233 = Class              #232          // argonaut/derive/HListProductDecodeJson$
  #234 = Utf8               Largonaut/derive/HListProductDecodeJson$;
  #235 = NameAndType        #66:#234      // MODULE$:Largonaut/derive/HListProductDecodeJson$;
  #236 = Fieldref           #233.#235     // argonaut/derive/HListProductDecodeJson$.MODULE$:Largonaut/derive/HListProductDecodeJson$;
  #237 = Utf8               shapeless/Strict$
  #238 = Class              #237          // shapeless/Strict$
  #239 = Utf8               Lshapeless/Strict$;
  #240 = NameAndType        #66:#239      // MODULE$:Lshapeless/Strict$;
  #241 = Fieldref           #238.#240     // shapeless/Strict$.MODULE$:Lshapeless/Strict$;
  #242 = Utf8               ()Largonaut/DecodeJson;
  #243 = NameAndType        #50:#242      // inst$macro$40:()Largonaut/DecodeJson;
  #244 = Methodref          #2.#243       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$40:()Largonaut/DecodeJson;
  #245 = Utf8               (Ljava/lang/Object;)Lshapeless/Strict;
  #246 = NameAndType        #106:#245     // apply:(Ljava/lang/Object;)Lshapeless/Strict;
  #247 = Methodref          #238.#246     // shapeless/Strict$.apply:(Ljava/lang/Object;)Lshapeless/Strict;
  #248 = Utf8               hnil
  #249 = NameAndType        #248:#186     // hnil:()Largonaut/derive/HListProductDecodeJson;
  #250 = Methodref          #233.#249     // argonaut/derive/HListProductDecodeJson$.hnil:()Largonaut/derive/HListProductDecodeJson;
  #251 = Utf8               hcons
  #252 = Utf8               (Lshapeless/Witness;Lshapeless/Strict;Largonaut/derive/HListProductDecodeJson;)Largonaut/derive/HListProductDecodeJson;
  #253 = NameAndType        #251:#252     // hcons:(Lshapeless/Witness;Lshapeless/Strict;Largonaut/derive/HListProductDecodeJson;)Largonaut/derive/HListProductDecodeJson;
  #254 = Methodref          #233.#253     // argonaut/derive/HListProductDecodeJson$.hcons:(Lshapeless/Witness;Lshapeless/Strict;Largonaut/derive/HListProductDecodeJson;)Largonaut/derive/HListProductDecodeJson;
  #255 = NameAndType        #47:#48       // inst$macro$39:Largonaut/derive/HListProductDecodeJson;
  #256 = Fieldref           #2.#255       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$39:Largonaut/derive/HListProductDecodeJson;
  #257 = NameAndType        #230:#186     // inst$macro$39$lzycompute:()Largonaut/derive/HListProductDecodeJson;
  #258 = Methodref          #2.#257       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$39$lzycompute:()Largonaut/derive/HListProductDecodeJson;
  #259 = Utf8               argonaut/derive/HListProductDecodeJson
  #260 = Class              #259          // argonaut/derive/HListProductDecodeJson
  #261 = Utf8               inst$macro$40$lzycompute
  #262 = Utf8               ()Largonaut/DecodeJson<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;
  #263 = Utf8               argonaut/Argonaut$
  #264 = Class              #263          // argonaut/Argonaut$
  #265 = Utf8               Largonaut/Argonaut$;
  #266 = NameAndType        #66:#265      // MODULE$:Largonaut/Argonaut$;
  #267 = Fieldref           #264.#266     // argonaut/Argonaut$.MODULE$:Largonaut/Argonaut$;
  #268 = NameAndType        #55:#56       // $outer:Lcoursier/parse/JsonRuleParser;
  #269 = Fieldref           #2.#268       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.$outer:Lcoursier/parse/JsonRuleParser;
  #270 = Utf8               coursier$parse$JsonRuleParser$$decodeModule
  #271 = NameAndType        #270:#242     // coursier$parse$JsonRuleParser$$decodeModule:()Largonaut/DecodeJson;
  #272 = Methodref          #9.#271       // coursier/parse/JsonRuleParser.coursier$parse$JsonRuleParser$$decodeModule:()Largonaut/DecodeJson;
  #273 = Utf8               ListDecodeJson
  #274 = Utf8               (Largonaut/DecodeJson;)Largonaut/DecodeJson;
  #275 = NameAndType        #273:#274     // ListDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
  #276 = Methodref          #264.#275     // argonaut/Argonaut$.ListDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
  #277 = NameAndType        #50:#51       // inst$macro$40:Largonaut/DecodeJson;
  #278 = Fieldref           #2.#277       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$40:Largonaut/DecodeJson;
  #279 = NameAndType        #261:#242     // inst$macro$40$lzycompute:()Largonaut/DecodeJson;
  #280 = Methodref          #2.#279       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$40$lzycompute:()Largonaut/DecodeJson;
  #281 = Utf8               argonaut/DecodeJson
  #282 = Class              #281          // argonaut/DecodeJson
  #283 = Utf8               coursier$parse$JsonRuleParser$anon$derivedDecodeJson$macro$42$$$outer
  #284 = Utf8               ()Lcoursier/parse/JsonRuleParser;
  #285 = Utf8               $this
  #286 = NameAndType        #47:#186      // inst$macro$39:()Largonaut/derive/HListProductDecodeJson;
  #287 = Methodref          #2.#286       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.inst$macro$39:()Largonaut/derive/HListProductDecodeJson;
  #288 = Utf8               (Lcoursier/parse/JsonRuleParser;Lscala/runtime/LazyRef;)V
  #289 = NameAndType        #57:#58       // Repr$module$1:Lscala/runtime/LazyRef;
  #290 = Fieldref           #2.#289       // coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.Repr$module$1:Lscala/runtime/LazyRef;
  #291 = Utf8               ()V
  #292 = NameAndType        #80:#291      // "<init>":()V
  #293 = Methodref          #4.#292       // java/lang/Object."<init>":()V
  #294 = Utf8               $deserializeLambda$
  #295 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #296 = Utf8               scala/runtime/LambdaDeserialize
  #297 = Class              #296          // scala/runtime/LambdaDeserialize
  #298 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #299 = NameAndType        #101:#298     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #300 = Methodref          #297.#299     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #301 = MethodHandle       6:#300        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #302 = Utf8               lambdaDeserialize
  #303 = NameAndType        #302:#295     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #304 = InvokeDynamic      #2:#303       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #305 = Utf8               Signature
  #306 = Utf8               Code
  #307 = Utf8               StackMapTable
  #308 = Utf8               LineNumberTable
  #309 = Utf8               LocalVariableTable
  #310 = Utf8               MethodParameters
  #311 = Utf8               InnerClasses
  #312 = Utf8               EnclosingMethod
  #313 = Utf8               SourceFile
  #314 = Utf8               BootstrapMethods
  #315 = Utf8               ScalaInlineInfo
  #316 = Utf8               Scala
{
  private argonaut.derive.MkDecodeJson<coursier.parse.JsonRuleParser$Repr$1> inst$macro$28;
    descriptor: Largonaut/derive/MkDecodeJson;
    flags: (0x0002) ACC_PRIVATE
    Signature: #46                          // Largonaut/derive/MkDecodeJson<Lcoursier/parse/JsonRuleParser$Repr$1;>;

  private argonaut.derive.HListProductDecodeJson<shapeless.$colon$colon<scala.collection.immutable.List<coursier.core.Module>, shapeless.HNil>, shapeless.$colon$colon<scala.Option<scala.collection.immutable.List<coursier.core.Module>>, shapeless.HNil>> inst$macro$39;
    descriptor: Largonaut/derive/HListProductDecodeJson;
    flags: (0x0002) ACC_PRIVATE
    Signature: #49                          // Largonaut/derive/HListProductDecodeJson<Lshapeless/$colon$colon<Lscala/collection/immutable/List<Lcoursier/core/Module;>;Lshapeless/HNil;>;Lshapeless/$colon$colon<Lscala/Option<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;Lshapeless/HNil;>;>;

  private argonaut.DecodeJson<scala.collection.immutable.List<coursier.core.Module>> inst$macro$40;
    descriptor: Largonaut/DecodeJson;
    flags: (0x0002) ACC_PRIVATE
    Signature: #52                          // Largonaut/DecodeJson<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private final coursier.parse.JsonRuleParser $outer;
    descriptor: Lcoursier/parse/JsonRuleParser;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public final scala.runtime.LazyRef Repr$module$1;
    descriptor: Lscala/runtime/LazyRef;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL

  private argonaut.derive.MkDecodeJson<coursier.parse.JsonRuleParser$Repr$1> inst$macro$28$lzycompute();
    descriptor: ()Largonaut/derive/MkDecodeJson;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=10, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #63                 // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     156
        15: aload_0
        16: getstatic     #69                 // Field argonaut/derive/MkDecodeJson$.MODULE$:Largonaut/derive/MkDecodeJson$;
        19: getstatic     #74                 // Field argonaut/derive/ProductDecodeJson$.MODULE$:Largonaut/derive/ProductDecodeJson$;
        22: getstatic     #79                 // Field shapeless/LabelledGeneric$.MODULE$:Lshapeless/LabelledGeneric$;
        25: new           #14                 // class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$$anon$2
        28: dup
        29: aconst_null
        30: invokespecial #83                 // Method coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$$anon$2."<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
        33: new           #16                 // class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$36$1
        36: dup
        37: aload_0
        38: invokespecial #84                 // Method coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$36$1."<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
        41: getstatic     #87                 // Field shapeless/ops/hlist$ZipWithKeys$.MODULE$:Lshapeless/ops/hlist$ZipWithKeys$;
        44: getstatic     #87                 // Field shapeless/ops/hlist$ZipWithKeys$.MODULE$:Lshapeless/ops/hlist$ZipWithKeys$;
        47: invokevirtual #91                 // Method shapeless/ops/hlist$ZipWithKeys$.hnilZipWithKeys:()Lshapeless/ops/hlist$ZipWithKeys;
        50: getstatic     #96                 // Field shapeless/Witness$.MODULE$:Lshapeless/Witness$;
        53: invokedynamic #109,  0            // InvokeDynamic #0:apply:()Lscala/Symbol;
        58: invokevirtual #113                // Method shapeless/Witness$.mkWitness:(Ljava/lang/Object;)Lshapeless/Witness;
        61: invokevirtual #117                // Method shapeless/ops/hlist$ZipWithKeys$.hconsZipWithKeys:(Lshapeless/ops/hlist$ZipWithKeys;Lshapeless/Witness;)Lshapeless/ops/hlist$ZipWithKeys;
        64: getstatic     #122                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        67: invokevirtual #126                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        70: invokevirtual #130                // Method shapeless/LabelledGeneric$.materializeProduct:(Lshapeless/DefaultSymbolicLabelling;Lshapeless/Generic;Lshapeless/ops/hlist$ZipWithKeys;Lscala/$less$colon$less;)Lshapeless/LabelledGeneric;
        73: getstatic     #133                // Field shapeless/Default$AsOptions$.MODULE$:Lshapeless/Default$AsOptions$;
        76: getstatic     #138                // Field shapeless/Default$.MODULE$:Lshapeless/Default$;
        79: new           #140                // class shapeless/$colon$colon
        82: dup
        83: getstatic     #145                // Field scala/None$.MODULE$:Lscala/None$;
        86: getstatic     #150                // Field shapeless/HNil$.MODULE$:Lshapeless/HNil$;
        89: invokespecial #153                // Method shapeless/$colon$colon."<init>":(Ljava/lang/Object;Lshapeless/HList;)V
        92: invokevirtual #157                // Method shapeless/Default$.mkDefault:(Lshapeless/HList;)Lshapeless/Default;
        95: new           #18                 // class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$38$1
        98: dup
        99: aload_0
       100: invokespecial #158                // Method coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$38$1."<init>":(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)V
       103: getstatic     #161                // Field shapeless/Default$AsOptions$Helper$.MODULE$:Lshapeless/Default$AsOptions$Helper$;
       106: getstatic     #161                // Field shapeless/Default$AsOptions$Helper$.MODULE$:Lshapeless/Default$AsOptions$Helper$;
       109: invokevirtual #165                // Method shapeless/Default$AsOptions$Helper$.hnilHelper:()Lshapeless/Default$AsOptions$Helper;
       112: invokevirtual #169                // Method shapeless/Default$AsOptions$Helper$.hconsNoneHelper:(Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions$Helper;
       115: invokevirtual #173                // Method shapeless/Default$AsOptions$.asOption:(Lshapeless/Default;Lshapeless/Generic;Lshapeless/Default$AsOptions$Helper;)Lshapeless/Default$AsOptions;
       118: getstatic     #178                // Field shapeless/Lazy$.MODULE$:Lshapeless/Lazy$;
       121: aload_0
       122: invokedynamic #199,  0            // InvokeDynamic #1:apply:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Lscala/Function0;
       127: invokevirtual #202                // Method shapeless/Lazy$.apply:(Lscala/Function0;)Lshapeless/Lazy;
       130: invokevirtual #206                // Method argonaut/derive/ProductDecodeJson$.generic:(Lshapeless/LabelledGeneric;Lshapeless/Default$AsOptions;Lshapeless/Lazy;)Largonaut/derive/ProductDecodeJson;
       133: getstatic     #211                // Field argonaut/derive/JsonProductCodecFor$.MODULE$:Largonaut/derive/JsonProductCodecFor$;
       136: invokevirtual #215                // Method argonaut/derive/JsonProductCodecFor$.default:()Largonaut/derive/JsonProductCodecFor;
       139: invokevirtual #219                // Method argonaut/derive/MkDecodeJson$.product:(Largonaut/derive/ProductDecodeJson;Largonaut/derive/JsonProductCodecFor;)Largonaut/derive/MkDecodeJson;
       142: putfield      #221                // Field inst$macro$28:Largonaut/derive/MkDecodeJson;
       145: aload_0
       146: aload_0
       147: getfield      #63                 // Field bitmap$0:B
       150: iconst_1
       151: ior
       152: i2b
       153: putfield      #63                 // Field bitmap$0:B
       156: aload_1
       157: monitorexit
       158: goto          164
       161: aload_1
       162: monitorexit
       163: athrow
       164: aload_0
       165: getfield      #221                // Field inst$macro$28:Largonaut/derive/MkDecodeJson;
       168: areturn
      Exception table:
         from    to  target type
             4   156   161   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 156
          locals = [ class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1 ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     169     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    Signature: #61                          // ()Largonaut/derive/MkDecodeJson<Lcoursier/parse/JsonRuleParser$Repr$1;>;

  public argonaut.derive.MkDecodeJson<coursier.parse.JsonRuleParser$Repr$1> inst$macro$28();
    descriptor: ()Largonaut/derive/MkDecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #63                 // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #227                // Method inst$macro$28$lzycompute:()Largonaut/derive/MkDecodeJson;
        15: goto          22
        18: aload_0
        19: getfield      #221                // Field inst$macro$28:Largonaut/derive/MkDecodeJson;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class argonaut/derive/MkDecodeJson ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    Signature: #61                          // ()Largonaut/derive/MkDecodeJson<Lcoursier/parse/JsonRuleParser$Repr$1;>;

  private argonaut.derive.HListProductDecodeJson<shapeless.$colon$colon<scala.collection.immutable.List<coursier.core.Module>, shapeless.HNil>, shapeless.$colon$colon<scala.Option<scala.collection.immutable.List<coursier.core.Module>>, shapeless.HNil>> inst$macro$39$lzycompute();
    descriptor: ()Largonaut/derive/HListProductDecodeJson;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #63                 // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     63
        15: aload_0
        16: getstatic     #236                // Field argonaut/derive/HListProductDecodeJson$.MODULE$:Largonaut/derive/HListProductDecodeJson$;
        19: getstatic     #96                 // Field shapeless/Witness$.MODULE$:Lshapeless/Witness$;
        22: invokedynamic #109,  0            // InvokeDynamic #0:apply:()Lscala/Symbol;
        27: invokevirtual #113                // Method shapeless/Witness$.mkWitness:(Ljava/lang/Object;)Lshapeless/Witness;
        30: getstatic     #241                // Field shapeless/Strict$.MODULE$:Lshapeless/Strict$;
        33: aload_0
        34: invokevirtual #244                // Method inst$macro$40:()Largonaut/DecodeJson;
        37: invokevirtual #247                // Method shapeless/Strict$.apply:(Ljava/lang/Object;)Lshapeless/Strict;
        40: getstatic     #236                // Field argonaut/derive/HListProductDecodeJson$.MODULE$:Largonaut/derive/HListProductDecodeJson$;
        43: invokevirtual #250                // Method argonaut/derive/HListProductDecodeJson$.hnil:()Largonaut/derive/HListProductDecodeJson;
        46: invokevirtual #254                // Method argonaut/derive/HListProductDecodeJson$.hcons:(Lshapeless/Witness;Lshapeless/Strict;Largonaut/derive/HListProductDecodeJson;)Largonaut/derive/HListProductDecodeJson;
        49: putfield      #256                // Field inst$macro$39:Largonaut/derive/HListProductDecodeJson;
        52: aload_0
        53: aload_0
        54: getfield      #63                 // Field bitmap$0:B
        57: iconst_2
        58: ior
        59: i2b
        60: putfield      #63                 // Field bitmap$0:B
        63: aload_1
        64: monitorexit
        65: goto          71
        68: aload_1
        69: monitorexit
        70: athrow
        71: aload_0
        72: getfield      #256                // Field inst$macro$39:Largonaut/derive/HListProductDecodeJson;
        75: areturn
      Exception table:
         from    to  target type
             4    63    68   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 63
          locals = [ class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1 ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      76     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    Signature: #231                         // ()Largonaut/derive/HListProductDecodeJson<Lshapeless/$colon$colon<Lscala/collection/immutable/List<Lcoursier/core/Module;>;Lshapeless/HNil;>;Lshapeless/$colon$colon<Lscala/Option<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;Lshapeless/HNil;>;>;

  public argonaut.derive.HListProductDecodeJson<shapeless.$colon$colon<scala.collection.immutable.List<coursier.core.Module>, shapeless.HNil>, shapeless.$colon$colon<scala.Option<scala.collection.immutable.List<coursier.core.Module>>, shapeless.HNil>> inst$macro$39();
    descriptor: ()Largonaut/derive/HListProductDecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #63                 // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #258                // Method inst$macro$39$lzycompute:()Largonaut/derive/HListProductDecodeJson;
        15: goto          22
        18: aload_0
        19: getfield      #256                // Field inst$macro$39:Largonaut/derive/HListProductDecodeJson;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class argonaut/derive/HListProductDecodeJson ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    Signature: #231                         // ()Largonaut/derive/HListProductDecodeJson<Lshapeless/$colon$colon<Lscala/collection/immutable/List<Lcoursier/core/Module;>;Lshapeless/HNil;>;Lshapeless/$colon$colon<Lscala/Option<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;Lshapeless/HNil;>;>;

  private argonaut.DecodeJson<scala.collection.immutable.List<coursier.core.Module>> inst$macro$40$lzycompute();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #63                 // Field bitmap$0:B
         8: iconst_4
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     43
        15: aload_0
        16: getstatic     #267                // Field argonaut/Argonaut$.MODULE$:Largonaut/Argonaut$;
        19: aload_0
        20: getfield      #269                // Field $outer:Lcoursier/parse/JsonRuleParser;
        23: invokevirtual #272                // Method coursier/parse/JsonRuleParser.coursier$parse$JsonRuleParser$$decodeModule:()Largonaut/DecodeJson;
        26: invokevirtual #276                // Method argonaut/Argonaut$.ListDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
        29: putfield      #278                // Field inst$macro$40:Largonaut/DecodeJson;
        32: aload_0
        33: aload_0
        34: getfield      #63                 // Field bitmap$0:B
        37: iconst_4
        38: ior
        39: i2b
        40: putfield      #63                 // Field bitmap$0:B
        43: aload_1
        44: monitorexit
        45: goto          51
        48: aload_1
        49: monitorexit
        50: athrow
        51: aload_0
        52: getfield      #278                // Field inst$macro$40:Largonaut/DecodeJson;
        55: areturn
      Exception table:
         from    to  target type
             4    43    48   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 43
          locals = [ class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1 ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    Signature: #262                         // ()Largonaut/DecodeJson<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;

  public argonaut.DecodeJson<scala.collection.immutable.List<coursier.core.Module>> inst$macro$40();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #63                 // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #280                // Method inst$macro$40$lzycompute:()Largonaut/DecodeJson;
        15: goto          22
        18: aload_0
        19: getfield      #278                // Field inst$macro$40:Largonaut/DecodeJson;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class argonaut/DecodeJson ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    Signature: #262                         // ()Largonaut/DecodeJson<Lscala/collection/immutable/List<Lcoursier/core/Module;>;>;

  public coursier.parse.JsonRuleParser coursier$parse$JsonRuleParser$anon$derivedDecodeJson$macro$42$$$outer();
    descriptor: ()Lcoursier/parse/JsonRuleParser;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #269                // Field $outer:Lcoursier/parse/JsonRuleParser;
         4: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;

  public static final argonaut.derive.HListProductDecodeJson $anonfun$inst$macro$28$1(coursier.parse.JsonRuleParser$anon$derivedDecodeJson$macro$42$1);
    descriptor: (Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #287                // Method inst$macro$39:()Largonaut/derive/HListProductDecodeJson;
         4: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public coursier.parse.JsonRuleParser$anon$derivedDecodeJson$macro$42$1(coursier.parse.JsonRuleParser, scala.runtime.LazyRef);
    descriptor: (Lcoursier/parse/JsonRuleParser;Lscala/runtime/LazyRef;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #269                // Field $outer:Lcoursier/parse/JsonRuleParser;
        11: aload_0
        12: aload_2
        13: putfield      #290                // Field Repr$module$1:Lscala/runtime/LazyRef;
        16: aload_0
        17: invokespecial #293                // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 57: 0
        line 55: 11
        line 57: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;
            0      21     1 $outer   Lcoursier/parse/JsonRuleParser;
            0      21     2 Repr$module$1   Lscala/runtime/LazyRef;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      Repr$module$1                  final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #304,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public final #12= #11;                  // 1=class coursier/parse/JsonRuleParser$Repr$1
  public final #12= #2;                   // 1=class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1
  public final #14;                       // class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$$anon$2
  public final #12= #16;                  // 1=class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$36$1
  public final #12= #18;                  // 1=class coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1$anon$macro$38$1
  public static final #23= #20 of #22;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #28= #25 of #27;          // AsOptions=class shapeless/Default$AsOptions of class shapeless/Default
  public static #31= #30 of #27;          // =class shapeless/Default$AsOptions$ of class shapeless/Default
  public static #34= #33 of #30;          // Helper=class shapeless/Default$AsOptions$Helper of class shapeless/Default$AsOptions$
  public static #31= #36 of #30;          // =class shapeless/Default$AsOptions$Helper$ of class shapeless/Default$AsOptions$
  public static #41= #38 of #40;          // ZipWithKeys=class shapeless/ops/hlist$ZipWithKeys of class shapeless/ops/hlist
  public static #31= #43 of #40;          // =class shapeless/ops/hlist$ZipWithKeys$ of class shapeless/ops/hlist
EnclosingMethod: #9.#0                  // coursier.parse.JsonRuleParser
SourceFile: "JsonRuleParser.scala"
BootstrapMethods:
  0: #105 REF_invokeStatic scala/runtime/SymbolLiteral.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 modules
  1: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #180 ()Ljava/lang/Object;
      #185 REF_invokeStatic coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.$anonfun$inst$macro$28$1:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
      #187 ()Largonaut/derive/HListProductDecodeJson;
      #188 5
      #189 1
      #187 ()Largonaut/derive/HListProductDecodeJson;
  2: #301 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #185 REF_invokeStatic coursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1.$anonfun$inst$macro$28$1:(Lcoursier/parse/JsonRuleParser$anon$derivedDecodeJson$macro$42$1;)Largonaut/derive/HListProductDecodeJson;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 BA 00 BB 01 00 55 01 25 01 01 20
   01 21 01 00 31 00 41 01 00 40 00 41 01 00 34 00
   BF 01 00 EB 00 BF 01 00 37 00 F7 01 01 0A 00 F7
   01
  Scala: length = 0x0 (unknown attribute)

