Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/internal/InMemoryCachingFetcher.class
  Last modified May 29, 2022; size 7831 bytes
  SHA-256 checksum a6f7b37e0f4d65dd5ddf0074aeb9f52dabc34618ab9d53a73fea8784e5cddb7e
  Compiled from "InMemoryCachingFetcher.scala"
public final class coursier.internal.InMemoryCachingFetcher<F extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/internal/InMemoryCachingFetcher
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 5, methods: 12, attributes: 7
Constant pool:
    #1 = Utf8               coursier/internal/InMemoryCachingFetcher
    #2 = Class              #1            // coursier/internal/InMemoryCachingFetcher
    #3 = Utf8               <F:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               InMemoryCachingFetcher.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\u0005\u001da\u0001\u0002\b\u0010\u0005QA\u0001\u0002\b\u0001\u0003\u0002\u0003\u0006I!\b\u0005\tk\u0001\u0011\t\u0011)A\u0006m!)A\b\u0001C\u0001{!91\t\u0001b\u0001\n\u0013!\u0005BB3\u0001A\u0003%Q\tC\u0004g\u0001\t\u0007I\u0011B4\t\r%\u0004\u0001\u0015!\u0003i\u0011\u0015Q\u0007\u0001\"\u0001l\u0011\u0015y\u0007\u0001\"\u0001q\u0011\u0015\u0019\b\u0001\"\u0001u\u0011\u001d)\b\u00011A\u0005\nYDqA\u001f\u0001A\u0002\u0013%1\u0010\u0003\u0004\u007f\u0001\u0001\u0006Ka\u001e\u0002\u0017\u0013:lU-\\8ss\u000e\u000b7\r[5oO\u001a+Go\u00195fe*\u0011\u0001#E\u0001\tS:$XM\u001d8bY*\t!#\u0001\u0005d_V\u00148/[3s\u0007\u0001)\"!F\u0015\u0014\u0005\u00011\u0002CA\f\u001b\u001b\u0005A\"\"A\r\u0002\u000bM\u001c\u0017\r\\1\n\u0005mA\"AB!osJ+g-\u0001\u0006v]\u0012,\'\u000f\\=j]\u001e\u00042A\b\u0013(\u001d\ty\"%D\u0001!\u0015\t\t\u0013#\u0001\u0003d_J,\u0017BA\u0012!\u0003)\u0011V\r]8tSR|\'/_\u0005\u0003K\u0019\u0012QAR3uG\"T!a\t\u0011\u0011\u0005!JC\u0002\u0001\u0003\u0006U\u0001\u0011\ra\u000b\u0002\u0002\rV\u0011AfM\t\u0003[A\u0002\"a\u0006\u0018\n\u0005=B\"a\u0002(pi\"Lgn\u001a\t\u0003/EJ!A\r\r\u0003\u0007\u0005s\u0017\u0010B\u00035S\t\u0007AFA\u0001`\u0003\u0005\u0019\u0006cA\u001c;O5\t\u0001H\u0003\u0002:#\u0005!Q\u000f^5m\u0013\tY\u0004H\u0001\u0003Ts:\u001c\u0017A\u0002\u001fj]&$h\b\u0006\u0002?\u0005R\u0011q(\u0011\t\u0004\u0001\u00029S\"A\b\t\u000bU\u001a\u00019\u0001\u001c\t\u000bq\u0019\u0001\u0019A\u000f\u0002\u000b\r\f7\r[3\u0016\u0003\u0015\u0003BA\u0012\'O#6\tqI\u0003\u0002I\u0013\u0006Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005eR%\"A&\u0002\t)\fg/Y\u0005\u0003\u001b\u001e\u0013\u0011cQ8oGV\u0014(/\u001a8u\u0011\u0006\u001c\b.T1q!\t9t*\u0003\u0002Qq\tA\u0011I\u001d;jM\u0006\u001cG\u000f\u0005\u0003S5vkfBA*Y\u001d\t!v+D\u0001V\u0015\t16#\u0001\u0004=e>|GOP\u0005\u00023%\u0011\u0011\fG\u0001\ba\u0006\u001c7.Y4f\u0013\tYFL\u0001\u0004FSRDWM\u001d\u0006\u00033b\u0001\"A\u00182\u000f\u0005}\u0003\u0007C\u0001+\u0019\u0013\t\t\u0007$\u0001\u0004Qe\u0016$WMZ\u0005\u0003G\u0012\u0014aa\u0015;sS:<\'BA1\u0019\u0003\u0019\u0019\u0017m\u00195fA\u0005)!-_+sYV\t\u0001\u000e\u0005\u0003G\u0019v\u000b\u0016A\u00022z+Jd\u0007%A\u0005p]2L8)Y2iKR\tA\u000e\u0005\u0002\u0018[&\u0011a\u000e\u0007\u0002\u0005+:LG/A\u0005ge>l7)Y2iKR\u0011Q,\u001d\u0005\u0006e&\u0001\r!X\u0001\u0004kJd\u0017a\u00024fi\u000eDWM]\u000b\u0002;\u0005QqN\u001c7z\u0007\u0006\u001c\u0007.\u001a\u0019\u0016\u0003]\u0004\"a\u0006=\n\u0005eD\"a\u0002\"p_2,\u0017M\\\u0001\u000f_:d\u0017pQ1dQ\u0016\u0004t\fJ3r)\taG\u0010C\u0004~\u0019\u0005\u0005\t\u0019A<\u0002\u0007a$\u0013\'A\u0006p]2L8)Y2iKB\u0002\u0003fA\u0007\u0002\u0002A\u0019q#a\u0001\n\u0007\u0005\u0015\u0001D\u0001\u0005w_2\fG/\u001b7f\u0001
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               underlying
   #16 = Utf8               Lscala/Function1;
   #17 = Utf8               Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
   #18 = Utf8               S
   #19 = Utf8               Lcoursier/util/Sync;
   #20 = Utf8               Lcoursier/util/Sync<TF;>;
   #21 = Utf8               cache
   #22 = Utf8               Ljava/util/concurrent/ConcurrentHashMap;
   #23 = Utf8               Ljava/util/concurrent/ConcurrentHashMap<Lcoursier/util/Artifact;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;
   #24 = Utf8               byUrl
   #25 = Utf8               Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;
   #26 = Utf8               onlyCache0
   #27 = Utf8               Z
   #28 = Utf8               ()Z
   #29 = NameAndType        #26:#27       // onlyCache0:Z
   #30 = Fieldref           #2.#29        // coursier/internal/InMemoryCachingFetcher.onlyCache0:Z
   #31 = Utf8               this
   #32 = Utf8               Lcoursier/internal/InMemoryCachingFetcher;
   #33 = Utf8               onlyCache0_$eq
   #34 = Utf8               (Z)V
   #35 = Utf8               x$1
   #36 = Utf8               ()Ljava/util/concurrent/ConcurrentHashMap;
   #37 = Utf8               ()Ljava/util/concurrent/ConcurrentHashMap<Lcoursier/util/Artifact;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;
   #38 = NameAndType        #21:#22       // cache:Ljava/util/concurrent/ConcurrentHashMap;
   #39 = Fieldref           #2.#38        // coursier/internal/InMemoryCachingFetcher.cache:Ljava/util/concurrent/ConcurrentHashMap;
   #40 = Utf8               ()Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;
   #41 = NameAndType        #24:#22       // byUrl:Ljava/util/concurrent/ConcurrentHashMap;
   #42 = Fieldref           #2.#41        // coursier/internal/InMemoryCachingFetcher.byUrl:Ljava/util/concurrent/ConcurrentHashMap;
   #43 = Utf8               onlyCache
   #44 = Utf8               ()V
   #45 = NameAndType        #33:#34       // onlyCache0_$eq:(Z)V
   #46 = Methodref          #2.#45        // coursier/internal/InMemoryCachingFetcher.onlyCache0_$eq:(Z)V
   #47 = Utf8               fromCache
   #48 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #49 = Utf8               url
   #50 = Utf8               scala/Option$
   #51 = Class              #50           // scala/Option$
   #52 = Utf8               MODULE$
   #53 = Utf8               Lscala/Option$;
   #54 = NameAndType        #52:#53       // MODULE$:Lscala/Option$;
   #55 = Fieldref           #51.#54       // scala/Option$.MODULE$:Lscala/Option$;
   #56 = NameAndType        #24:#36       // byUrl:()Ljava/util/concurrent/ConcurrentHashMap;
   #57 = Methodref          #2.#56        // coursier/internal/InMemoryCachingFetcher.byUrl:()Ljava/util/concurrent/ConcurrentHashMap;
   #58 = Utf8               java/util/concurrent/ConcurrentHashMap
   #59 = Class              #58           // java/util/concurrent/ConcurrentHashMap
   #60 = Utf8               get
   #61 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #62 = NameAndType        #60:#61       // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #63 = Methodref          #59.#62       // java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #64 = Utf8               apply
   #65 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #66 = NameAndType        #64:#65       // apply:(Ljava/lang/Object;)Lscala/Option;
   #67 = Methodref          #51.#66       // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
   #68 = Utf8               scala/None$
   #69 = Class              #68           // scala/None$
   #70 = Utf8               Lscala/None$;
   #71 = NameAndType        #52:#70       // MODULE$:Lscala/None$;
   #72 = Fieldref           #69.#71       // scala/None$.MODULE$:Lscala/None$;
   #73 = Utf8               equals
   #74 = Utf8               (Ljava/lang/Object;)Z
   #75 = NameAndType        #73:#74       // equals:(Ljava/lang/Object;)Z
   #76 = Methodref          #5.#75        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #77 = Utf8               java/util/NoSuchElementException
   #78 = Class              #77           // java/util/NoSuchElementException
   #79 = Utf8               <init>
   #80 = Utf8               (Ljava/lang/String;)V
   #81 = NameAndType        #79:#80       // "<init>":(Ljava/lang/String;)V
   #82 = Methodref          #78.#81       // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
   #83 = Utf8               java/lang/String
   #84 = Class              #83           // java/lang/String
   #85 = Utf8               scala/Option
   #86 = Class              #85           // scala/Option
   #87 = Utf8               scala/Some
   #88 = Class              #87           // scala/Some
   #89 = Utf8               value
   #90 = Utf8               ()Ljava/lang/Object;
   #91 = NameAndType        #89:#90       // value:()Ljava/lang/Object;
   #92 = Methodref          #88.#91       // scala/Some.value:()Ljava/lang/Object;
   #93 = Utf8               scala/util/Either
   #94 = Class              #93           // scala/util/Either
   #95 = Utf8               scala/util/Left
   #96 = Class              #95           // scala/util/Left
   #97 = Methodref          #96.#91       // scala/util/Left.value:()Ljava/lang/Object;
   #98 = Utf8               scala/sys/package$
   #99 = Class              #98           // scala/sys/package$
  #100 = Utf8               Lscala/sys/package$;
  #101 = NameAndType        #52:#100      // MODULE$:Lscala/sys/package$;
  #102 = Fieldref           #99.#101      // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #103 = Utf8               java/lang/StringBuilder
  #104 = Class              #103          // java/lang/StringBuilder
  #105 = Integer            13
  #106 = Utf8               (I)V
  #107 = NameAndType        #79:#106      // "<init>":(I)V
  #108 = Methodref          #104.#107     // java/lang/StringBuilder."<init>":(I)V
  #109 = Utf8               append
  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #111 = NameAndType        #109:#110     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #112 = Methodref          #104.#111     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #113 = Utf8                is errored:
  #114 = String             #113          //  is errored:
  #115 = Utf8               toString
  #116 = Utf8               ()Ljava/lang/String;
  #117 = NameAndType        #115:#116     // toString:()Ljava/lang/String;
  #118 = Methodref          #104.#117     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #119 = Utf8               error
  #120 = Utf8               (Ljava/lang/String;)Lscala/runtime/Nothing$;
  #121 = NameAndType        #119:#120     // error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #122 = Methodref          #99.#121      // scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #123 = Utf8               scala/util/Right
  #124 = Class              #123          // scala/util/Right
  #125 = Methodref          #124.#91      // scala/util/Right.value:()Ljava/lang/Object;
  #126 = Utf8               scala/MatchError
  #127 = Class              #126          // scala/MatchError
  #128 = Utf8               (Ljava/lang/Object;)V
  #129 = NameAndType        #79:#128      // "<init>":(Ljava/lang/Object;)V
  #130 = Methodref          #127.#129     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #131 = Utf8               err
  #132 = Utf8               Ljava/lang/String;
  #133 = Utf8               s
  #134 = Utf8               fetcher
  #135 = Utf8               ()Lscala/Function1;
  #136 = Utf8               ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
  #137 = MethodType         #61           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #138 = Utf8               $anonfun$fetcher$1
  #139 = Utf8               (Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #140 = NameAndType        #138:#139     // $anonfun$fetcher$1:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #141 = Methodref          #2.#140       // coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$1:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #142 = MethodHandle       6:#141        // REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$1:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #143 = Utf8               (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #144 = MethodType         #143          //  (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #145 = Integer            5
  #146 = Integer            1
  #147 = Utf8               java/lang/invoke/LambdaMetafactory
  #148 = Class              #147          // java/lang/invoke/LambdaMetafactory
  #149 = Utf8               altMetafactory
  #150 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #151 = NameAndType        #149:#150     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #152 = Methodref          #148.#151     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #153 = MethodHandle       6:#152        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #154 = Utf8               (Lcoursier/internal/InMemoryCachingFetcher;)Lscala/Function1;
  #155 = NameAndType        #64:#154      // apply:(Lcoursier/internal/InMemoryCachingFetcher;)Lscala/Function1;
  #156 = InvokeDynamic      #0:#155       // #0:apply:(Lcoursier/internal/InMemoryCachingFetcher;)Lscala/Function1;
  #157 = Utf8               $anonfun$fetcher$3
  #158 = Utf8               (Lscala/util/Either;)Lscala/util/Either;
  #159 = Utf8               res$1
  #160 = Utf8               Lscala/util/Either;
  #161 = Utf8               $anonfun$fetcher$2
  #162 = Utf8               (Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
  #163 = Utf8               $this
  #164 = Utf8               artifact$1
  #165 = Utf8               res
  #166 = NameAndType        #21:#36       // cache:()Ljava/util/concurrent/ConcurrentHashMap;
  #167 = Methodref          #2.#166       // coursier/internal/InMemoryCachingFetcher.cache:()Ljava/util/concurrent/ConcurrentHashMap;
  #168 = Utf8               putIfAbsent
  #169 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #170 = NameAndType        #168:#169     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #171 = Methodref          #59.#170      // java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #172 = MethodType         #90           //  ()Ljava/lang/Object;
  #173 = NameAndType        #157:#158     // $anonfun$fetcher$3:(Lscala/util/Either;)Lscala/util/Either;
  #174 = Methodref          #2.#173       // coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$3:(Lscala/util/Either;)Lscala/util/Either;
  #175 = MethodHandle       6:#174        // REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$3:(Lscala/util/Either;)Lscala/util/Either;
  #176 = Utf8               ()Lscala/util/Either;
  #177 = MethodType         #176          //  ()Lscala/util/Either;
  #178 = Utf8               (Lscala/util/Either;)Lscala/Function0;
  #179 = NameAndType        #64:#178      // apply:(Lscala/util/Either;)Lscala/Function0;
  #180 = InvokeDynamic      #1:#179       // #1:apply:(Lscala/util/Either;)Lscala/Function0;
  #181 = Utf8               getOrElse
  #182 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #183 = NameAndType        #181:#182     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #184 = Methodref          #86.#183      // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #185 = Utf8               coursier/util/Artifact
  #186 = Class              #185          // coursier/util/Artifact
  #187 = NameAndType        #49:#116      // url:()Ljava/lang/String;
  #188 = Methodref          #186.#187     // coursier/util/Artifact.url:()Ljava/lang/String;
  #189 = Utf8               res0
  #190 = Utf8               Lcoursier/util/Artifact;
  #191 = Utf8               artifact
  #192 = Utf8               coursier/util/EitherT
  #193 = Class              #192          // coursier/util/EitherT
  #194 = NameAndType        #26:#28       // onlyCache0:()Z
  #195 = Methodref          #2.#194       // coursier/internal/InMemoryCachingFetcher.onlyCache0:()Z
  #196 = NameAndType        #18:#19       // S:Lcoursier/util/Sync;
  #197 = Fieldref           #2.#196       // coursier/internal/InMemoryCachingFetcher.S:Lcoursier/util/Sync;
  #198 = Utf8               scala/package$
  #199 = Class              #198          // scala/package$
  #200 = Utf8               Lscala/package$;
  #201 = NameAndType        #52:#200      // MODULE$:Lscala/package$;
  #202 = Fieldref           #199.#201     // scala/package$.MODULE$:Lscala/package$;
  #203 = Utf8               Left
  #204 = Utf8               ()Lscala/util/Left$;
  #205 = NameAndType        #203:#204     // Left:()Lscala/util/Left$;
  #206 = Methodref          #199.#205     // scala/package$.Left:()Lscala/util/Left$;
  #207 = Integer            9
  #208 = Utf8               Artifact
  #209 = String             #208          // Artifact
  #210 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #211 = NameAndType        #109:#210     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #212 = Methodref          #104.#211     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #213 = Utf8               scala/util/Left$
  #214 = Class              #213          // scala/util/Left$
  #215 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #216 = NameAndType        #64:#215      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #217 = Methodref          #214.#216     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #218 = Utf8               coursier/util/Sync
  #219 = Class              #218          // coursier/util/Sync
  #220 = Utf8               fromAttempt
  #221 = Utf8               (Lscala/util/Either;)Ljava/lang/Object;
  #222 = NameAndType        #220:#221     // fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
  #223 = InterfaceMethodref #219.#222     // coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
  #224 = NameAndType        #15:#16       // underlying:Lscala/Function1;
  #225 = Fieldref           #2.#224       // coursier/internal/InMemoryCachingFetcher.underlying:Lscala/Function1;
  #226 = Utf8               scala/Function1
  #227 = Class              #226          // scala/Function1
  #228 = NameAndType        #64:#61       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #229 = InterfaceMethodref #227.#228     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #230 = Utf8               run
  #231 = NameAndType        #230:#90      // run:()Ljava/lang/Object;
  #232 = Methodref          #193.#231     // coursier/util/EitherT.run:()Ljava/lang/Object;
  #233 = NameAndType        #161:#162     // $anonfun$fetcher$2:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
  #234 = Methodref          #2.#233       // coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$2:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
  #235 = MethodHandle       6:#234        // REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$2:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
  #236 = MethodType         #158          //  (Lscala/util/Either;)Lscala/util/Either;
  #237 = Utf8               (Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lscala/Function1;
  #238 = NameAndType        #64:#237      // apply:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lscala/Function1;
  #239 = InvokeDynamic      #2:#238       // #2:apply:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lscala/Function1;
  #240 = Utf8               map
  #241 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #242 = NameAndType        #240:#241     // map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #243 = InterfaceMethodref #219.#242     // coursier/util/Sync.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #244 = Utf8               point
  #245 = NameAndType        #244:#61      // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #246 = InterfaceMethodref #219.#245     // coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #247 = Methodref          #193.#129     // coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
  #248 = Utf8               (Lscala/Function1;Lcoursier/util/Sync;)V
  #249 = Utf8               (Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Sync<TF;>;)V
  #250 = NameAndType        #79:#44       // "<init>":()V
  #251 = Methodref          #5.#250       // java/lang/Object."<init>":()V
  #252 = Methodref          #59.#250      // java/util/concurrent/ConcurrentHashMap."<init>":()V
  #253 = Utf8               $deserializeLambda$
  #254 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #255 = Utf8               scala/runtime/LambdaDeserialize
  #256 = Class              #255          // scala/runtime/LambdaDeserialize
  #257 = Utf8               bootstrap
  #258 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #259 = NameAndType        #257:#258     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #260 = Methodref          #256.#259     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #261 = MethodHandle       6:#260        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #262 = Utf8               lambdaDeserialize
  #263 = NameAndType        #262:#254     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #264 = InvokeDynamic      #3:#263       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #265 = Utf8               Signature
  #266 = Utf8               Code
  #267 = Utf8               LineNumberTable
  #268 = Utf8               LocalVariableTable
  #269 = Utf8               MethodParameters
  #270 = Utf8               StackMapTable
  #271 = Utf8               InnerClasses
  #272 = Utf8               SourceFile
  #273 = Utf8               RuntimeVisibleAnnotations
  #274 = Utf8               BootstrapMethods
  #275 = Utf8               ScalaInlineInfo
  #276 = Utf8               ScalaSig
{
  private final scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> underlying;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  private final coursier.util.Sync<F> S;
    descriptor: Lcoursier/util/Sync;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lcoursier/util/Sync<TF;>;

  private final java.util.concurrent.ConcurrentHashMap<coursier.util.Artifact, scala.util.Either<java.lang.String, java.lang.String>> cache;
    descriptor: Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Ljava/util/concurrent/ConcurrentHashMap<Lcoursier/util/Artifact;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;

  private final java.util.concurrent.ConcurrentHashMap<java.lang.String, scala.util.Either<java.lang.String, java.lang.String>> byUrl;
    descriptor: Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #25                          // Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;

  private volatile boolean onlyCache0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private boolean onlyCache0();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #30                 // Field onlyCache0:Z
         4: ireturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/InMemoryCachingFetcher;

  private void onlyCache0_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #30                 // Field onlyCache0:Z
         5: return
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/internal/InMemoryCachingFetcher;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  private java.util.concurrent.ConcurrentHashMap<coursier.util.Artifact, scala.util.Either<java.lang.String, java.lang.String>> cache();
    descriptor: ()Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #39                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/InMemoryCachingFetcher;
    Signature: #37                          // ()Ljava/util/concurrent/ConcurrentHashMap<Lcoursier/util/Artifact;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;

  private java.util.concurrent.ConcurrentHashMap<java.lang.String, scala.util.Either<java.lang.String, java.lang.String>> byUrl();
    descriptor: ()Ljava/util/concurrent/ConcurrentHashMap;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #42                 // Field byUrl:Ljava/util/concurrent/ConcurrentHashMap;
         4: areturn
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/internal/InMemoryCachingFetcher;
    Signature: #40                          // ()Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/String;Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;>;

  public void onlyCache();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_1
         2: invokespecial #46                 // Method onlyCache0_$eq:(Z)V
         5: return
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/internal/InMemoryCachingFetcher;

  public java.lang.String fromCache(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=12, args_size=2
         0: iconst_0
         1: istore_3
         2: aconst_null
         3: astore        4
         5: getstatic     #55                 // Field scala/Option$.MODULE$:Lscala/Option$;
         8: aload_0
         9: invokespecial #57                 // Method byUrl:()Ljava/util/concurrent/ConcurrentHashMap;
        12: aload_1
        13: invokevirtual #63                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        16: invokevirtual #67                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        19: astore        5
        21: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
        24: aload         5
        26: invokevirtual #76                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        29: ifeq          41
        32: new           #78                 // class java/util/NoSuchElementException
        35: dup
        36: aload_1
        37: invokespecial #82                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: goto          44
        44: aload         5
        46: instanceof    #88                 // class scala/Some
        49: ifeq          132
        52: iconst_1
        53: istore_3
        54: aload         5
        56: checkcast     #88                 // class scala/Some
        59: astore        4
        61: aload         4
        63: invokevirtual #92                 // Method scala/Some.value:()Ljava/lang/Object;
        66: checkcast     #94                 // class scala/util/Either
        69: astore        6
        71: aload         6
        73: instanceof    #96                 // class scala/util/Left
        76: ifeq          129
        79: aload         6
        81: checkcast     #96                 // class scala/util/Left
        84: astore        7
        86: aload         7
        88: invokevirtual #97                 // Method scala/util/Left.value:()Ljava/lang/Object;
        91: checkcast     #84                 // class java/lang/String
        94: astore        8
        96: getstatic     #102                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        99: new           #104                // class java/lang/StringBuilder
       102: dup
       103: ldc           #105                // int 13
       105: invokespecial #108                // Method java/lang/StringBuilder."<init>":(I)V
       108: aload_1
       109: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       112: ldc           #114                // String  is errored:
       114: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       117: aload         8
       119: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       122: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       125: invokevirtual #122                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
       128: athrow
       129: goto          135
       132: goto          135
       135: iload_3
       136: ifeq          183
       139: aload         4
       141: invokevirtual #92                 // Method scala/Some.value:()Ljava/lang/Object;
       144: checkcast     #94                 // class scala/util/Either
       147: astore        9
       149: aload         9
       151: instanceof    #124                // class scala/util/Right
       154: ifeq          180
       157: aload         9
       159: checkcast     #124                // class scala/util/Right
       162: astore        10
       164: aload         10
       166: invokevirtual #125                // Method scala/util/Right.value:()Ljava/lang/Object;
       169: checkcast     #84                 // class java/lang/String
       172: astore        11
       174: aload         11
       176: astore_2
       177: goto          196
       180: goto          186
       183: goto          186
       186: new           #127                // class scala/MatchError
       189: dup
       190: aload         5
       192: invokespecial #130                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       195: athrow
       196: aload_2
       197: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, top, int, null, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 84
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, top, int, class scala/Some, class scala/Option, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, top, int, null, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, top, int, class scala/Some, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, top, int, class scala/Some, class scala/Option, top, top, top, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, top, int, class scala/Some, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/internal/InMemoryCachingFetcher, class java/lang/String, class java/lang/String, int, class scala/Some, class scala/Option, top, top, top, class scala/util/Either, class scala/util/Right, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 20: 0
        line 21: 21
        line 22: 32
        line 21: 41
        line 23: 44
        line 24: 96
        line 23: 129
        line 25: 135
        line 20: 186
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           96      33     8   err   Ljava/lang/String;
          174       6    11     s   Ljava/lang/String;
            0     198     0  this   Lcoursier/internal/InMemoryCachingFetcher;
            0     198     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> fetcher();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #156,  0            // InvokeDynamic #0:apply:(Lcoursier/internal/InMemoryCachingFetcher;)Lscala/Function1;
         6: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/internal/InMemoryCachingFetcher;
    Signature: #136                         // ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  public static final scala.util.Either $anonfun$fetcher$3(scala.util.Either);
    descriptor: (Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 res$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      res$1                          final

  public static final scala.util.Either $anonfun$fetcher$2(coursier.internal.InMemoryCachingFetcher, coursier.util.Artifact, scala.util.Either);
    descriptor: (Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #55                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokespecial #167                // Method cache:()Ljava/util/concurrent/ConcurrentHashMap;
         7: aload_1
         8: aload_2
         9: invokevirtual #171                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        12: invokevirtual #67                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        15: aload_2
        16: invokedynamic #180,  0            // InvokeDynamic #1:apply:(Lscala/util/Either;)Lscala/Function0;
        21: invokevirtual #184                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        24: checkcast     #94                 // class scala/util/Either
        27: astore_3
        28: aload_0
        29: invokespecial #57                 // Method byUrl:()Ljava/util/concurrent/ConcurrentHashMap;
        32: aload_1
        33: invokevirtual #188                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        36: aload_3
        37: invokevirtual #171                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        40: pop
        41: aload_3
        42: areturn
      LineNumberTable:
        line 37: 0
        line 38: 15
        line 39: 28
        line 40: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      14     3  res0   Lscala/util/Either;
            0      43     0 $this   Lcoursier/internal/InMemoryCachingFetcher;
            0      43     1 artifact$1   Lcoursier/util/Artifact;
            0      43     2   res   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$1                     final
      res                            final

  public static final coursier.util.EitherT $anonfun$fetcher$1(coursier.internal.InMemoryCachingFetcher, coursier.util.Artifact);
    descriptor: (Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=9, locals=6, args_size=2
         0: new           #193                // class coursier/util/EitherT
         3: dup
         4: getstatic     #55                 // Field scala/Option$.MODULE$:Lscala/Option$;
         7: aload_0
         8: invokespecial #167                // Method cache:()Ljava/util/concurrent/ConcurrentHashMap;
        11: aload_1
        12: invokevirtual #63                 // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        15: invokevirtual #67                 // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        18: astore_3
        19: getstatic     #72                 // Field scala/None$.MODULE$:Lscala/None$;
        22: aload_3
        23: invokevirtual #76                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        26: ifeq          121
        29: aload_0
        30: invokespecial #195                // Method onlyCache0:()Z
        33: ifeq          85
        36: aload_0
        37: getfield      #197                // Field S:Lcoursier/util/Sync;
        40: getstatic     #202                // Field scala/package$.MODULE$:Lscala/package$;
        43: invokevirtual #206                // Method scala/package$.Left:()Lscala/util/Left$;
        46: new           #78                 // class java/util/NoSuchElementException
        49: dup
        50: new           #104                // class java/lang/StringBuilder
        53: dup
        54: ldc           #207                // int 9
        56: invokespecial #108                // Method java/lang/StringBuilder."<init>":(I)V
        59: ldc           #209                // String Artifact
        61: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: aload_1
        65: invokevirtual #212                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        68: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        71: invokespecial #82                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        74: invokevirtual #217                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        77: invokeinterface #223,  2          // InterfaceMethod coursier/util/Sync.fromAttempt:(Lscala/util/Either;)Ljava/lang/Object;
        82: goto          117
        85: aload_0
        86: getfield      #197                // Field S:Lcoursier/util/Sync;
        89: aload_0
        90: getfield      #225                // Field underlying:Lscala/Function1;
        93: aload_1
        94: invokeinterface #229,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        99: checkcast     #193                // class coursier/util/EitherT
       102: invokevirtual #232                // Method coursier/util/EitherT.run:()Ljava/lang/Object;
       105: aload_0
       106: aload_1
       107: invokedynamic #239,  0            // InvokeDynamic #2:apply:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lscala/Function1;
       112: invokeinterface #243,  3          // InterfaceMethod coursier/util/Sync.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       117: astore_2
       118: goto          174
       121: goto          124
       124: aload_3
       125: instanceof    #88                 // class scala/Some
       128: ifeq          162
       131: aload_3
       132: checkcast     #88                 // class scala/Some
       135: astore        4
       137: aload         4
       139: invokevirtual #92                 // Method scala/Some.value:()Ljava/lang/Object;
       142: checkcast     #94                 // class scala/util/Either
       145: astore        5
       147: aload_0
       148: getfield      #197                // Field S:Lcoursier/util/Sync;
       151: aload         5
       153: invokeinterface #246,  2          // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
       158: astore_2
       159: goto          174
       162: goto          165
       165: new           #127                // class scala/MatchError
       168: dup
       169: aload_3
       170: invokespecial #130                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       173: athrow
       174: aload_2
       175: invokespecial #247                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       178: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 85
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, top, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, top, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, top, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, top, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, top, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, top, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0 ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/internal/InMemoryCachingFetcher, class coursier/util/Artifact, class java/lang/Object, class scala/Option ]
          stack = [ uninitialized 0, uninitialized 0 ]
      LineNumberTable:
        line 30: 0
        line 31: 4
        line 32: 19
        line 33: 29
        line 34: 36
        line 36: 85
        line 32: 121
        line 42: 124
        line 31: 165
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          147      15     5   res   Lscala/util/Either;
            0     179     0 $this   Lcoursier/internal/InMemoryCachingFetcher;
            0     179     1 artifact   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact                       final

  public coursier.internal.InMemoryCachingFetcher(scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Sync<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #225                // Field underlying:Lscala/Function1;
         5: aload_0
         6: aload_2
         7: putfield      #197                // Field S:Lcoursier/util/Sync;
        10: aload_0
        11: invokespecial #251                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: iconst_0
        16: putfield      #30                 // Field onlyCache0:Z
        19: aload_0
        20: new           #59                 // class java/util/concurrent/ConcurrentHashMap
        23: dup
        24: invokespecial #252                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        27: putfield      #39                 // Field cache:Ljava/util/concurrent/ConcurrentHashMap;
        30: aload_0
        31: new           #59                 // class java/util/concurrent/ConcurrentHashMap
        34: dup
        35: invokespecial #252                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        38: putfield      #42                 // Field byUrl:Ljava/util/concurrent/ConcurrentHashMap;
        41: return
      LineNumberTable:
        line 9: 0
        line 46: 10
        line 11: 14
        line 12: 19
        line 13: 30
        line 9: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/internal/InMemoryCachingFetcher;
            0      42     1 underlying   Lscala/Function1;
            0      42     2     S   Lcoursier/util/Sync;
    Signature: #249                         // (Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
      S                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #264,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <F:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "InMemoryCachingFetcher.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u001da\u0001\u0002\b\u0010\u0005QA\u0001\u0002\b\u0001\u0003\u0002\u0003\u0006I!\b\u0005\tk\u0001\u0011\t\u0011)A\u0006m!)A\b\u0001C\u0001{!91\t\u0001b\u0001\n\u0013!\u0005BB3\u0001A\u0003%Q\tC\u0004g\u0001\t\u0007I\u0011B4\t\r%\u0004\u0001\u0015!\u0003i\u0011\u0015Q\u0007\u0001\"\u0001l\u0011\u0015y\u0007\u0001\"\u0001q\u0011\u0015\u0019\b\u0001\"\u0001u\u0011\u001d)\b\u00011A\u0005\nYDqA\u001f\u0001A\u0002\u0013%1\u0010\u0003\u0004\u007f\u0001\u0001\u0006Ka\u001e\u0002\u0017\u0013:lU-\\8ss\u000e\u000b7\r[5oO\u001a+Go\u00195fe*\u0011\u0001#E\u0001\tS:$XM\u001d8bY*\t!#\u0001\u0005d_V\u00148/[3s\u0007\u0001)\"!F\u0015\u0014\u0005\u00011\u0002CA\f\u001b\u001b\u0005A\"\"A\r\u0002\u000bM\u001c\u0017\r\\1\n\u0005mA\"AB!osJ+g-\u0001\u0006v]\u0012,\'\u000f\\=j]\u001e\u00042A\b\u0013(\u001d\ty\"%D\u0001!\u0015\t\t\u0013#\u0001\u0003d_J,\u0017BA\u0012!\u0003)\u0011V\r]8tSR|\'/_\u0005\u0003K\u0019\u0012QAR3uG\"T!a\t\u0011\u0011\u0005!JC\u0002\u0001\u0003\u0006U\u0001\u0011\ra\u000b\u0002\u0002\rV\u0011AfM\t\u0003[A\u0002\"a\u0006\u0018\n\u0005=B\"a\u0002(pi\"Lgn\u001a\t\u0003/EJ!A\r\r\u0003\u0007\u0005s\u0017\u0010B\u00035S\t\u0007AFA\u0001`\u0003\u0005\u0019\u0006cA\u001c;O5\t\u0001H\u0003\u0002:#\u0005!Q\u000f^5m\u0013\tY\u0004H\u0001\u0003Ts:\u001c\u0017A\u0002\u001fj]&$h\b\u0006\u0002?\u0005R\u0011q(\u0011\t\u0004\u0001\u00029S\"A\b\t\u000bU\u001a\u00019\u0001\u001c\t\u000bq\u0019\u0001\u0019A\u000f\u0002\u000b\r\f7\r[3\u0016\u0003\u0015\u0003BA\u0012\'O#6\tqI\u0003\u0002I\u0013\u0006Q1m\u001c8dkJ\u0014XM\u001c;\u000b\u0005eR%\"A&\u0002\t)\fg/Y\u0005\u0003\u001b\u001e\u0013\u0011cQ8oGV\u0014(/\u001a8u\u0011\u0006\u001c\b.T1q!\t9t*\u0003\u0002Qq\tA\u0011I\u001d;jM\u0006\u001cG\u000f\u0005\u0003S5vkfBA*Y\u001d\t!v+D\u0001V\u0015\t16#\u0001\u0004=e>|GOP\u0005\u00023%\u0011\u0011\fG\u0001\ba\u0006\u001c7.Y4f\u0013\tYFL\u0001\u0004FSRDWM\u001d\u0006\u00033b\u0001\"A\u00182\u000f\u0005}\u0003\u0007C\u0001+\u0019\u0013\t\t\u0007$\u0001\u0004Qe\u0016$WMZ\u0005\u0003G\u0012\u0014aa\u0015;sS:<\'BA1\u0019\u0003\u0019\u0019\u0017m\u00195fA\u0005)!-_+sYV\t\u0001\u000e\u0005\u0003G\u0019v\u000b\u0016A\u00022z+Jd\u0007%A\u0005p]2L8)Y2iKR\tA\u000e\u0005\u0002\u0018[&\u0011a\u000e\u0007\u0002\u0005+:LG/A\u0005ge>l7)Y2iKR\u0011Q,\u001d\u0005\u0006e&\u0001\r!X\u0001\u0004kJd\u0017a\u00024fi\u000eDWM]\u000b\u0002;\u0005QqN\u001c7z\u0007\u0006\u001c\u0007.\u001a\u0019\u0016\u0003]\u0004\"a\u0006=\n\u0005eD\"a\u0002\"p_2,\u0017M\\\u0001\u000f_:d\u0017pQ1dQ\u0016\u0004t\fJ3r)\taG\u0010C\u0004~\u0019\u0005\u0005\t\u0019A<\u0002\u0007a$\u0013\'A\u0006p]2L8)Y2iKB\u0002\u0003fA\u0007\u0002\u0002A\u0019q#a\u0001\n\u0007\u0005\u0015\u0001D\u0001\u0005w_2\fG/\u001b7f\u0001"
    )
BootstrapMethods:
  0: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #137 (Ljava/lang/Object;)Ljava/lang/Object;
      #142 REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$1:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #144 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #145 5
      #146 1
      #144 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  1: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #172 ()Ljava/lang/Object;
      #175 REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$3:(Lscala/util/Either;)Lscala/util/Either;
      #177 ()Lscala/util/Either;
      #145 5
      #146 1
      #177 ()Lscala/util/Either;
  2: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #137 (Ljava/lang/Object;)Ljava/lang/Object;
      #235 REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$2:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
      #236 (Lscala/util/Either;)Lscala/util/Either;
      #145 5
      #146 1
      #236 (Lscala/util/Either;)Lscala/util/Either;
  3: #261 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #142 REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$1:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #235 REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$2:(Lcoursier/internal/InMemoryCachingFetcher;Lcoursier/util/Artifact;Lscala/util/Either;)Lscala/util/Either;
      #175 REF_invokeStatic coursier/internal/InMemoryCachingFetcher.$anonfun$fetcher$3:(Lscala/util/Either;)Lscala/util/Either;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 8A 00 8B 01 00 A1 00 A2 01 00 9D
   00 9E 01 00 4F 00 F8 01 00 18 00 24 01 00 15 00
   24 01 00 86 00 87 01 00 2F 00 30 01 00 2B 00 2C
   01 00 1A 00 1C 01 00 21 00 22 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
