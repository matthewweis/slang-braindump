Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/HashSMap.class
  Last modified May 29, 2022; size 16109 bytes
  SHA-256 checksum 66a92096da77974cc9664730604e717bf5420a4b8620d104bd398838022f1e39
  Compiled from "HashSMap.scala"
public final class org.sireum.HashSMap<K extends java.lang.Object, T extends java.lang.Object> extends java.lang.Object implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/HashSMap
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 45, attributes: 7
Constant pool:
    #1 = Utf8               org/sireum/HashSMap
    #2 = Class              #1            // org/sireum/HashSMap
    #3 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/DatatypeSig
    #7 = Class              #6            // org/sireum/DatatypeSig
    #8 = Utf8               HashSMap.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\tUt!\u0002\u0016,\u0011\u0003\u0001d!\u0002\u001a,\u0011\u0003\u0019\u0004\"\u0002\u001e\u0002\t\u0003Y\u0004\"\u0002\u001f\u0002\t\u0003i\u0004b\u0002B\b\u0003\u0011\u0005!\u0011\u0003\u0005\b\u0003\u001b\u000bA\u0011\u0001B\u0013\u0011\u001d\tI!\u0001C\u0001\u0005\u0003BqAa\u0016\u0002\t\u0003\u0011IF\u0002\u00033W\t\u0001\u0005\u0002C#\t\u0005\u0003\u0005\u000b\u0011\u0002$\t\u0011]C!\u0011!Q\u0001\naCQA\u000f\u0005\u0005\u0002\tDaA\u001a\u0005!\u0002\u00131\u0005\"B4\t\t\u0003A\u0007\"B5\t\t\u0003A\u0007B\u00026\tA\u0003%\u0001\fC\u0003l\u0011\u0011\u0005A\u000eC\u0003n\u0011\u0011\u0005A\u000eC\u0003o\u0011\u0011\u0005s\u000e\u0003\u0005y\u0011!\u0015\r\u0011\"\u0011z\u0011\u0015i\b\u0002\"\u0011\u007f\u0011\u001d\tI\u0001\u0003C\u0001\u0003\u0017A\u0011\"!\u0005\t#\u0003%\t!a\u0005\t\u0013\u0005%\u0002\"%A\u0005\u0002\u0005-\u0002BCA\u0018\u0011!\u0015\r\u0011\"\u0011\u00022!9\u0011q\n\u0005\u0005\u0002\u0005E\u0003bBA1\u0011\u0011\u0005\u00111\r\u0005\b\u0003WBA\u0011AA7\u0011\u0019\t\u0019\b\u0003C\u0001Y\"9\u0011q\u000f\u0005\u0005\u0002\u0005e\u0004bBAB\u0011\u0011\u0005\u0011Q\u0011\u0005\b\u0003\u001bCA\u0011AAH\u0011\u001d\t\u0019\u000b\u0003C\u0001\u0003KCq!a-\t\t\u0003\t)\fC\u0004\u0002>\"!\t!a0\t\u000f\u0005\u0015\u0007\u0002\"\u0001\u0002H\"9\u0011Q\u001a\u0005\u0005\u0002\u0005=\u0007bBAn\u0011\u0011\u0005\u0011Q\u001c\u0005\b\u0003CDA\u0011AAo\u0011\u001d\t)\u000f\u0003C!\u0003ODq!a<\t\t\u0003\n\t\u0006C\u0004\u0002t\"!\t!!>\u0002\u0011!\u000b7\u000f[*NCBT!\u0001L\u0017\u0002\rML\'/Z;n\u0015\u0005q\u0013aA8sO\u000e\u0001\u0001CA\u0019\u0002\u001b\u0005Y#\u0001\u0003%bg\"\u001cV*\u00199\u0014\u0005\u0005!\u0004CA\u001b9\u001b\u00051$\"A\u001c\u0002\u000bM\u001c\u0017\r\\1\n\u0005e2$AB!osJ+g-\u0001\u0004=S:LGO\u0010\u000b\u0002a\u0005)Q-\u001c9usV)aHa\u0002\u0003\fU\tq\b\u0005\u00042\u0011\t\u0015!\u0011B\u000b\u0004\u0003.+6c\u0001\u00055\u0005B\u0011\u0011gQ\u0005\u0003\t.\u00121\u0002R1uCRL\b/Z*jO\u0006)qlX7baB!\u0011gR%U\u0013\tA5FA\u0004ICNDW*\u00199\u0011\u0005)[E\u0002\u0001\u0003\u0006\u0019\"\u0011\r!\u0014\u0002\u0002\u0017F\u0011a*\u0015\t\u0003k=K!\u0001\u0015\u001c\u0003\u000f9{G\u000f[5oOB\u0011QGU\u0005\u0003\'Z\u00121!\u00118z!\tQU\u000bB\u0003W\u0011\t\u0007QJA\u0001U\u0003\u0019yvl[3zgB\u0019\u0011\fX%\u000f\u0005ER\u0016BA.,\u0003\u001d\u0001\u0018mY6bO\u0016L!!\u00180\u0003\u0007%\u001b&,\u0003\u0002`A\na\u0001+Y2lC\u001e,GK]1ji*\u0011\u0011mK\u0001\nI%tG/\u001a:oC2$2a\u00193f!\u0011\t\u0004\"\u0013+\t\u000b\u0015[\u0001\u0019\u0001$\t\u000b][\u0001\u0019\u0001-\u0002\t}k\u0017\r]\u0001\u0004[\u0006\u0004X#\u0001$\u0002\r\u001d,G/T1q\u0003\u0015y6.Z=t\u0003\u0011YW-_:\u0016\u0003a\u000bqaZ3u\u0017\u0016L8/\u0001\u0005u_N#(/\u001b8h)\u0005\u0001\bCA9w\u001b\u0005\u0011(BA:u\u0003\u0011a\u0017M\\4\u000b\u0003U\fAA[1wC&\u0011qO\u001d\u0002\u0007\'R\u0014\u0018N\\4\u0002\u0011!\f7\u000f[\"pI\u0016,\u0012A\u001f\t\u0003kmL!\u0001 \u001c\u0003\u0007%sG/\u0001\u0004fcV\fGn\u001d\u000b\u0004\u007f\u0006\u0015\u0001cA\u001b\u0002\u0002%\u0019\u00111\u0001\u001c\u0003\u000f\t{w\u000e\\3b]\"1\u0011q\u0001\u000bA\u0002E\u000b\u0011a\\\u0001\u0006CB\u0004H.\u001f\u000b\u0006G\u00065\u0011q\u0002\u0005\bOV\u0001\n\u00111\u0001G\u0011\u001dYW\u0003%AA\u0002a\u000bq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0003\u0003+Q3ARA\fW\t\tI\u0002\u0005\u0003\u0002\u001c\u0005\u0015RBAA\u000f\u0015\u0011\ty\"!\t\u0002\u0013Ut7\r[3dW\u0016$\'bAA\u0012m\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005\u001d\u0012Q\u0004\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017aD1qa2LH\u0005Z3gCVdG\u000f\n\u001a\u0016\u0005\u00055\"f\u0001-\u0002\u0018\u0005AAeY8oi\u0016tG/\u0006\u0002\u00024A1\u0011QGA\"\u0003\u0013rA!a\u000e\u0002B9!\u0011\u0011HA \u001b\t\tYDC\u0002\u0002>=\na\u0001\u0010:p_Rt\u0014\"A\u001c\n\u0005m3\u0014\u0002BA#\u0003\u000f\u00121aU3r\u0015\tYf\u0007E\u00036\u0003\u0017\u0002\u0018+C\u0002\u0002NY\u0012a\u0001V;qY\u0016\u0014\u0014\u0001B:ju\u0016,\"!a\u0015\u0011\u0007E\n)&C\u0002\u0002X-\u0012\u0011A\u0017\u0015\u00043\u0005m\u0003cA\u0019\u0002^%\u0019\u0011qL\u0016\u0003\tA,(/Z\u0001\bK:$(/[3t+\t\t)\u0007\u0005\u0003Z9\u0006\u001d\u0004#B\u001b\u0002L%#\u0006f\u0001\u000e\u0002\\\u00051a/\u00197vKN,\"!a\u001c\u0011\u0007ecF\u000bK\u0002\u001c\u00037\naa[3z\'\u0016$\bf\u0001\u000f\u0002\\\u0005Aa/\u00197vKN+G/\u0006\u0002\u0002|A!\u0011\'! U\u0013\r\tyh\u000b\u0002\u0004\'\u0016$\bfA\u000f\u0002\\\u0005)A\u0005\u001d7vgR\u00191-a\"\t\u000f\u0005%e\u00041\u0001\u0002h\u0005\t\u0001\u000fK\u0002\u001f\u00037\n!\u0002\n9mkN$\u0003\u000f\\;t+\u0011\t\t*!(\u0015\u0007\r\f\u0019\nC\u0004\u0002b}\u0001\r!!&\u0011\u000fE\n9*a\'\u0002h%\u0019\u0011\u0011T\u0016\u0003\u0005%\u001b\u0006c\u0001&\u0002\u001e\u00121\u0011qT\u0010C\u00025\u0013\u0011!\u0013\u0015\u0004?\u0005m\u0013aA4fiR!\u0011qUAW!\u0011\t\u0014\u0011\u0016+\n\u0007\u0005-6F\u0001\u0004PaRLwN\u001c\u0005\u0007\u0003_\u0003\u0003\u0019A%\u0002\u0007-,\u0017\u0010K\u0002!\u00037\nQ!\u001a8uef$B!a.\u0002:B)\u0011\'!+\u0002h!1\u0011qV\u0011A\u0002%C3!IA.\u00031!S.\u001b8vg\u0012j\u0017N\\;t)\r\u0019\u0017\u0011\u0019\u0005\u0006W\n\u0002\r\u0001\u0017\u0015\u0004E\u0005m\u0013A\u0002\u0013nS:,8\u000fF\u0002d\u0003\u0013Dq!!#$\u0001\u0004\t9\u0007K\u0002$\u00037\n\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003#\f9\u000eE\u00022\u0003\'L1!!6,\u0005\u0005\u0011\u0005BBAXI\u0001\u0007\u0011\nK\u0002%\u00037\nq![:F[B$\u00180\u0006\u0002\u0002R\"\u001aQ%a\u0017\u0002\u00119|g.R7qifD3AJA.\u0003\u0019\u0019HO]5oOV\u0011\u0011\u0011\u001e\t\u0004c\u0005-\u0018BA<,Q\r9\u00131L\u0001\u0005Q\u0006\u001c\b\u000eK\u0002)\u00037\nq![:FcV\fG\u000e\u0006\u0003\u0002R\u0006]\bBBA}S\u0001\u00071-A\u0003pi\",\'\u000fK\u0002*\u00037B3\u0001CA\u0000!\r\t$\u0011A\u0005\u0004\u0005\u0007Y#\u0001\u00033bi\u0006$\u0018\u0010]3\u0011\u0007)\u00139\u0001B\u0003M\u0007\t\u0007Q\nE\u0002K\u0005\u0017!QAV\u0002C\u00025C3aAA.\u0003%)W\u000e\u001d;z\u0013:LG/\u0006\u0004\u0003\u0014\te!Q\u0004\u000b\u0005\u0005+\u0011y\u0002\u0005\u00042\u0011\t]!1\u0004\t\u0004\u0015\neA!\u0002\'\u0005\u0005\u0004i\u0005c\u0001&\u0003\u001e\u0011)a\u000b\u0002b\u0001\u001b\"9!\u0011\u0005\u0003A\u0002\u0005M\u0013aD5oSRL\u0017\r\\\"ba\u0006\u001c\u0017\u000e^=)\u0007\u0011\tY&\u0006\u0005\u0003(\tm\"Q\u0006B\u0019)\u0011\u0011ICa\r\u0011\rEB!1\u0006B\u0018!\rQ%Q\u0006\u0003\u0006\u0019\u0016\u0011\r!\u0014\t\u0004\u0015\nEB!\u0002,\u0006\u0005\u0004i\u0005b\u0002B\u001b\u000b\u0001\u0007!qG\u0001\u0002gB9\u0011\'a&\u0003:\tu\u0002c\u0001&\u0003<\u00111\u0011qT\u0003C\u00025\u0003r!NA&\u0005W\u0011y\u0003K\u0002\u0006\u00037*bAa\u0011\u0003J\t5CC\u0002B#\u0005\u001f\u0012\u0019\u0006\u0005\u00042\u0011\t\u001d#1\n\t\u0004\u0015\n%C!\u0002\'\u0007\u0005\u0004i\u0005c\u0001&\u0003N\u0011)aK\u0002b\u0001\u001b\"1qM\u0002a\u0001\u0005#\u0002b!M$\u0003H\t-\u0003BB6\u0007\u0001\u0004\u0011)\u0006\u0005\u0003Z9\n\u001d\u0013aB;oCB\u0004H._\u000b\u0007\u00057\u0012IG!\u001c\u0015\t\tu#\u0011\u000f\t\u0006k\t}#1M\u0005\u0004\u0005C2$\u0001B*p[\u0016\u0004r!NA&\u0005K\u0012y\u0007\u0005\u00042\u000f\n\u001d$1\u000e\t\u0004\u0015\n%D!\u0002\'\b\u0005\u0004i\u0005c\u0001&\u0003n\u0011)ak\u0002b\u0001\u001bB!\u0011\f\u0018B4\u0011\u001d\t9a\u0002a\u0001\u0005g\u0002b!\r\u0005\u0003h\t-\u0004
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               org/sireum/ST$Any
   #18 = Class              #17           // org/sireum/ST$Any
   #19 = Utf8               org/sireum/ST
   #20 = Class              #19           // org/sireum/ST
   #21 = Utf8               Any
   #22 = Utf8               org/sireum/ST$Any$
   #23 = Class              #22           // org/sireum/ST$Any$
   #24 = Utf8               Any$
   #25 = Utf8               org/sireum/ST$Arg
   #26 = Class              #25           // org/sireum/ST$Arg
   #27 = Utf8               Arg
   #28 = Utf8               org/sireum/ST$Templ
   #29 = Class              #28           // org/sireum/ST$Templ
   #30 = Utf8               Templ
   #31 = Utf8               org/sireum/ST$Templ$
   #32 = Class              #31           // org/sireum/ST$Templ$
   #33 = Utf8               Templ$
   #34 = Utf8               org/sireum/Z$$String$
   #35 = Class              #34           // org/sireum/Z$$String$
   #36 = Utf8               org/sireum/Z
   #37 = Class              #36           // org/sireum/Z
   #38 = Utf8               $String$
   #39 = Utf8               hashCode
   #40 = Utf8               I
   #41 = Utf8               $content
   #42 = Utf8               Lscala/collection/immutable/Seq;
   #43 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #44 = Utf8               _map
   #45 = Utf8               Lorg/sireum/HashMap;
   #46 = Utf8               Lorg/sireum/HashMap<TK;TT;>;
   #47 = Utf8               _keys
   #48 = Utf8               Lorg/sireum/IS;
   #49 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;TK;>;
   #50 = Utf8               bitmap$0
   #51 = Utf8               B
   #52 = Utf8               unapply
   #53 = Utf8               (Lorg/sireum/HashSMap;)Lscala/Some;
   #54 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;>;>;
   #55 = Utf8               o
   #56 = Utf8               org/sireum/HashSMap$
   #57 = Class              #56           // org/sireum/HashSMap$
   #58 = Utf8               MODULE$
   #59 = Utf8               Lorg/sireum/HashSMap$;
   #60 = NameAndType        #58:#59       // MODULE$:Lorg/sireum/HashSMap$;
   #61 = Fieldref           #57.#60       // org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
   #62 = NameAndType        #52:#53       // unapply:(Lorg/sireum/HashSMap;)Lscala/Some;
   #63 = Methodref          #57.#62       // org/sireum/HashSMap$.unapply:(Lorg/sireum/HashSMap;)Lscala/Some;
   #64 = Utf8               Lorg/sireum/HashSMap;
   #65 = Utf8               emptyInit
   #66 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashSMap;
   #67 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashSMap<TK;TT;>;
   #68 = Utf8               initialCapacity
   #69 = NameAndType        #65:#66       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
   #70 = Methodref          #57.#69       // org/sireum/HashSMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
   #71 = Utf8               Lorg/sireum/Z;
   #72 = Utf8               empty
   #73 = Utf8               ()Lorg/sireum/HashSMap;
   #74 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashSMap<TK;TT;>;
   #75 = NameAndType        #72:#73       // empty:()Lorg/sireum/HashSMap;
   #76 = Methodref          #57.#75       // org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
   #77 = Utf8               $cannotMixImmutableAndMutable
   #78 = Utf8               ()Lscala/runtime/Nothing$;
   #79 = Utf8               org/sireum/Immutable
   #80 = Class              #79           // org/sireum/Immutable
   #81 = Utf8               $cannotMixImmutableAndMutable$
   #82 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #83 = NameAndType        #81:#82       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #84 = InterfaceMethodref #80.#83       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #85 = Utf8               this
   #86 = Utf8               $hasEquals
   #87 = Utf8               ()Z
   #88 = Utf8               $hasEquals$
   #89 = Utf8               (Lorg/sireum/Immutable;)Z
   #90 = NameAndType        #88:#89       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #91 = InterfaceMethodref #80.#90       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #92 = Utf8               $hasString
   #93 = Utf8               $hasString$
   #94 = NameAndType        #93:#89       // $hasString$:(Lorg/sireum/Immutable;)Z
   #95 = InterfaceMethodref #80.#94       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #96 = Utf8               $clone
   #97 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #98 = Utf8               org/sireum/$internal/ImmutableMarker
   #99 = Class              #98           // org/sireum/$internal/ImmutableMarker
  #100 = Utf8               $clone$
  #101 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #102 = NameAndType        #100:#101     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #103 = InterfaceMethodref #99.#102      // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #104 = Utf8               map
  #105 = Utf8               ()Lorg/sireum/HashMap;
  #106 = Utf8               ()Lorg/sireum/HashMap<TK;TT;>;
  #107 = NameAndType        #44:#45       // _map:Lorg/sireum/HashMap;
  #108 = Fieldref           #2.#107       // org/sireum/HashSMap._map:Lorg/sireum/HashMap;
  #109 = Utf8               getMap
  #110 = Utf8               keys
  #111 = Utf8               ()Lorg/sireum/IS;
  #112 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;
  #113 = NameAndType        #47:#48       // _keys:Lorg/sireum/IS;
  #114 = Fieldref           #2.#113       // org/sireum/HashSMap._keys:Lorg/sireum/IS;
  #115 = Utf8               getKeys
  #116 = Utf8               toString
  #117 = Utf8               ()Ljava/lang/String;
  #118 = Utf8               string
  #119 = NameAndType        #118:#117     // string:()Ljava/lang/String;
  #120 = Methodref          #2.#119       // org/sireum/HashSMap.string:()Ljava/lang/String;
  #121 = Utf8               hashCode$lzycompute
  #122 = Utf8               ()I
  #123 = NameAndType        #50:#51       // bitmap$0:B
  #124 = Fieldref           #2.#123       // org/sireum/HashSMap.bitmap$0:B
  #125 = Utf8               hash
  #126 = Utf8               ()Lorg/sireum/Z;
  #127 = NameAndType        #125:#126     // hash:()Lorg/sireum/Z;
  #128 = Methodref          #2.#127       // org/sireum/HashSMap.hash:()Lorg/sireum/Z;
  #129 = NameAndType        #39:#122      // hashCode:()I
  #130 = Methodref          #5.#129       // java/lang/Object.hashCode:()I
  #131 = NameAndType        #39:#40       // hashCode:I
  #132 = Fieldref           #2.#131       // org/sireum/HashSMap.hashCode:I
  #133 = Utf8               java/lang/Throwable
  #134 = Class              #133          // java/lang/Throwable
  #135 = NameAndType        #121:#122     // hashCode$lzycompute:()I
  #136 = Methodref          #2.#135       // org/sireum/HashSMap.hashCode$lzycompute:()I
  #137 = Utf8               equals
  #138 = Utf8               (Ljava/lang/Object;)Z
  #139 = Utf8               org/sireum/B$
  #140 = Class              #139          // org/sireum/B$
  #141 = Utf8               Lorg/sireum/B$;
  #142 = NameAndType        #58:#141      // MODULE$:Lorg/sireum/B$;
  #143 = Fieldref           #140.#142     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #144 = Utf8               isEqual
  #145 = Utf8               (Lorg/sireum/HashSMap;)Z
  #146 = NameAndType        #144:#145     // isEqual:(Lorg/sireum/HashSMap;)Z
  #147 = Methodref          #2.#146       // org/sireum/HashSMap.isEqual:(Lorg/sireum/HashSMap;)Z
  #148 = Utf8               $4B
  #149 = Utf8               (Z)Z
  #150 = NameAndType        #148:#149     // $4B:(Z)Z
  #151 = Methodref          #140.#150     // org/sireum/B$.$4B:(Z)Z
  #152 = Utf8               Ljava/lang/Object;
  #153 = Utf8               apply
  #154 = Utf8               (Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #155 = Utf8               (Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)Lorg/sireum/HashSMap<TK;TT;>;
  #156 = Utf8               <init>
  #157 = Utf8               (Lorg/sireum/HashMap;Lorg/sireum/IS;)V
  #158 = NameAndType        #156:#157     // "<init>":(Lorg/sireum/HashMap;Lorg/sireum/IS;)V
  #159 = Methodref          #2.#158       // org/sireum/HashSMap."<init>":(Lorg/sireum/HashMap;Lorg/sireum/IS;)V
  #160 = Utf8               apply$default$1
  #161 = NameAndType        #104:#105     // map:()Lorg/sireum/HashMap;
  #162 = Methodref          #2.#161       // org/sireum/HashSMap.map:()Lorg/sireum/HashMap;
  #163 = Utf8               apply$default$2
  #164 = NameAndType        #110:#111     // keys:()Lorg/sireum/IS;
  #165 = Methodref          #2.#164       // org/sireum/HashSMap.keys:()Lorg/sireum/IS;
  #166 = Utf8               $content$lzycompute
  #167 = Utf8               ()Lscala/collection/immutable/Seq;
  #168 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #169 = Utf8               scala/package$
  #170 = Class              #169          // scala/package$
  #171 = Utf8               Lscala/package$;
  #172 = NameAndType        #58:#171      // MODULE$:Lscala/package$;
  #173 = Fieldref           #170.#172     // scala/package$.MODULE$:Lscala/package$;
  #174 = Utf8               Seq
  #175 = Utf8               ()Lscala/collection/immutable/Seq$;
  #176 = NameAndType        #174:#175     // Seq:()Lscala/collection/immutable/Seq$;
  #177 = Methodref          #170.#176     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #178 = Utf8               scala/runtime/ScalaRunTime$
  #179 = Class              #178          // scala/runtime/ScalaRunTime$
  #180 = Utf8               Lscala/runtime/ScalaRunTime$;
  #181 = NameAndType        #58:#180      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #182 = Fieldref           #179.#181     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #183 = Utf8               scala/Tuple2
  #184 = Class              #183          // scala/Tuple2
  #185 = Utf8               type
  #186 = String             #185          // type
  #187 = Utf8               List
  #188 = Utf8               ()Lscala/collection/immutable/List$;
  #189 = NameAndType        #187:#188     // List:()Lscala/collection/immutable/List$;
  #190 = Methodref          #170.#189     // scala/package$.List:()Lscala/collection/immutable/List$;
  #191 = Utf8               java/lang/String
  #192 = Class              #191          // java/lang/String
  #193 = Utf8               org
  #194 = String             #193          // org
  #195 = Utf8               sireum
  #196 = String             #195          // sireum
  #197 = Utf8               HashSMap
  #198 = String             #197          // HashSMap
  #199 = Utf8               [Ljava/lang/Object;
  #200 = Class              #199          // "[Ljava/lang/Object;"
  #201 = Utf8               wrapRefArray
  #202 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #203 = NameAndType        #201:#202     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #204 = Methodref          #179.#203     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #205 = Utf8               scala/collection/immutable/List$
  #206 = Class              #205          // scala/collection/immutable/List$
  #207 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #208 = NameAndType        #153:#207     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #209 = Methodref          #206.#208     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #210 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #211 = NameAndType        #156:#210     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #212 = Methodref          #184.#211     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #213 = String             #104          // map
  #214 = String             #110          // keys
  #215 = Utf8               scala/collection/immutable/Seq$
  #216 = Class              #215          // scala/collection/immutable/Seq$
  #217 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #218 = NameAndType        #153:#217     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #219 = Methodref          #216.#218     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #220 = Utf8               scala/collection/immutable/Seq
  #221 = Class              #220          // scala/collection/immutable/Seq
  #222 = NameAndType        #41:#42       // $content:Lscala/collection/immutable/Seq;
  #223 = Fieldref           #2.#222       // org/sireum/HashSMap.$content:Lscala/collection/immutable/Seq;
  #224 = NameAndType        #166:#167     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #225 = Methodref          #2.#224       // org/sireum/HashSMap.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #226 = Utf8               size
  #227 = Utf8               org/sireum/IS
  #228 = Class              #227          // org/sireum/IS
  #229 = NameAndType        #226:#126     // size:()Lorg/sireum/Z;
  #230 = Methodref          #228.#229     // org/sireum/IS.size:()Lorg/sireum/Z;
  #231 = Utf8               entries
  #232 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;
  #233 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #234 = MethodType         #233          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #235 = Utf8               $anonfun$entries$1
  #236 = Utf8               (Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #237 = NameAndType        #235:#236     // $anonfun$entries$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #238 = Methodref          #2.#237       // org/sireum/HashSMap.$anonfun$entries$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #239 = MethodHandle       6:#238        // REF_invokeStatic org/sireum/HashSMap.$anonfun$entries$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
  #240 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
  #241 = MethodType         #240          //  (Ljava/lang/Object;)Lscala/Tuple2;
  #242 = Integer            5
  #243 = Integer            1
  #244 = Utf8               java/lang/invoke/LambdaMetafactory
  #245 = Class              #244          // java/lang/invoke/LambdaMetafactory
  #246 = Utf8               altMetafactory
  #247 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #248 = NameAndType        #246:#247     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #249 = Methodref          #245.#248     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #250 = MethodHandle       6:#249        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #251 = Utf8               (Lorg/sireum/HashSMap;)Lscala/Function1;
  #252 = NameAndType        #153:#251     // apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
  #253 = InvokeDynamic      #0:#252       // #0:apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
  #254 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #255 = NameAndType        #104:#254     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #256 = Methodref          #228.#255     // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
  #257 = Utf8               values
  #258 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
  #259 = Utf8               $anonfun$values$1
  #260 = Utf8               (Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
  #261 = NameAndType        #259:#260     // $anonfun$values$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
  #262 = Methodref          #2.#261       // org/sireum/HashSMap.$anonfun$values$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
  #263 = MethodHandle       6:#262        // REF_invokeStatic org/sireum/HashSMap.$anonfun$values$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
  #264 = InvokeDynamic      #1:#252       // #1:apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
  #265 = Utf8               keySet
  #266 = Utf8               valueSet
  #267 = Utf8               ()Lorg/sireum/Set;
  #268 = Utf8               ()Lorg/sireum/Set<TT;>;
  #269 = Utf8               org/sireum/Set$
  #270 = Class              #269          // org/sireum/Set$
  #271 = Utf8               Lorg/sireum/Set$;
  #272 = NameAndType        #58:#271      // MODULE$:Lorg/sireum/Set$;
  #273 = Fieldref           #270.#272     // org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
  #274 = NameAndType        #72:#267      // empty:()Lorg/sireum/Set;
  #275 = Methodref          #270.#274     // org/sireum/Set$.empty:()Lorg/sireum/Set;
  #276 = NameAndType        #257:#111     // values:()Lorg/sireum/IS;
  #277 = Methodref          #2.#276       // org/sireum/HashSMap.values:()Lorg/sireum/IS;
  #278 = Utf8               org/sireum/Set
  #279 = Class              #278          // org/sireum/Set
  #280 = Utf8               $plus$plus
  #281 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Set;
  #282 = NameAndType        #280:#281     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
  #283 = Methodref          #279.#282     // org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
  #284 = Utf8               $plus
  #285 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #286 = Utf8               (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/HashSMap<TK;TT;>;
  #287 = Utf8               p
  #288 = Utf8               org/sireum/HashMap
  #289 = Class              #288          // org/sireum/HashMap
  #290 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashMap;
  #291 = NameAndType        #284:#290     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #292 = Methodref          #289.#291     // org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #293 = Methodref          #289.#229     // org/sireum/HashMap.size:()Lorg/sireum/Z;
  #294 = NameAndType        #137:#138     // equals:(Ljava/lang/Object;)Z
  #295 = Methodref          #5.#294       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #296 = Utf8               _1
  #297 = Utf8               ()Ljava/lang/Object;
  #298 = NameAndType        #296:#297     // _1:()Ljava/lang/Object;
  #299 = Methodref          #184.#298     // scala/Tuple2._1:()Ljava/lang/Object;
  #300 = Utf8               $colon$plus
  #301 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #302 = NameAndType        #300:#301     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #303 = Methodref          #228.#302     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #304 = NameAndType        #153:#154     // apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #305 = Methodref          #57.#304      // org/sireum/HashSMap$.apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #306 = Utf8               newMap
  #307 = Utf8               Lscala/Tuple2;
  #308 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
  #309 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashSMap<TK;TT;>;
  #310 = Utf8               isEmpty
  #311 = NameAndType        #310:#87      // isEmpty:()Z
  #312 = Methodref          #228.#311     // org/sireum/IS.isEmpty:()Z
  #313 = Utf8               scala/runtime/ObjectRef
  #314 = Class              #313          // scala/runtime/ObjectRef
  #315 = Utf8               create
  #316 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #317 = NameAndType        #315:#316     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #318 = Methodref          #314.#317     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #319 = Utf8               $anonfun$$plus$plus$1$adapted
  #320 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #321 = NameAndType        #319:#320     // $anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #322 = Methodref          #2.#321       // org/sireum/HashSMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #323 = MethodHandle       6:#322        // REF_invokeStatic org/sireum/HashSMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #324 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #325 = MethodType         #324          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #326 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #327 = NameAndType        #153:#326     // apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #328 = InvokeDynamic      #2:#327       // #2:apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #329 = Utf8               foreach
  #330 = Utf8               (Lscala/Function1;)V
  #331 = NameAndType        #329:#330     // foreach:(Lscala/Function1;)V
  #332 = Methodref          #228.#331     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #333 = Utf8               elem
  #334 = NameAndType        #333:#152     // elem:Ljava/lang/Object;
  #335 = Fieldref           #314.#334     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #336 = Utf8               Lscala/runtime/ObjectRef;
  #337 = Utf8               newKeys
  #338 = Utf8               get
  #339 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #340 = Utf8               (TK;)Lorg/sireum/Option<TT;>;
  #341 = Utf8               key
  #342 = NameAndType        #338:#339     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #343 = Methodref          #289.#342     // org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #344 = Utf8               entry
  #345 = Utf8               (TK;)Lorg/sireum/Option<Lscala/Tuple2<TK;TT;>;>;
  #346 = NameAndType        #344:#339     // entry:(Ljava/lang/Object;)Lorg/sireum/Option;
  #347 = Methodref          #289.#346     // org/sireum/HashMap.entry:(Ljava/lang/Object;)Lorg/sireum/Option;
  #348 = Utf8               $minus$minus
  #349 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)Lorg/sireum/HashSMap<TK;TT;>;
  #350 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #351 = NameAndType        #348:#350     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #352 = Methodref          #289.#351     // org/sireum/HashMap.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #353 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #354 = NameAndType        #348:#353     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #355 = Methodref          #228.#354     // org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #356 = Utf8               $minus
  #357 = NameAndType        #356:#290     // $minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #358 = Methodref          #289.#357     // org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #359 = NameAndType        #356:#301     // $minus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #360 = Methodref          #228.#359     // org/sireum/IS.$minus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #361 = Utf8               contains
  #362 = Utf8               (TK;)Z
  #363 = NameAndType        #361:#138     // contains:(Ljava/lang/Object;)Z
  #364 = Methodref          #289.#363     // org/sireum/HashMap.contains:(Ljava/lang/Object;)Z
  #365 = Methodref          #2.#229       // org/sireum/HashSMap.size:()Lorg/sireum/Z;
  #366 = Utf8               Lorg/sireum/Z$$String$;
  #367 = NameAndType        #58:#366      // MODULE$:Lorg/sireum/Z$$String$;
  #368 = Fieldref           #35.#367      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #369 = Utf8               0
  #370 = String             #369          // 0
  #371 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #372 = NameAndType        #153:#371     // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #373 = Methodref          #35.#372      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #374 = NameAndType        #153:#149     // apply:(Z)Z
  #375 = Methodref          #140.#374     // org/sireum/B$.apply:(Z)Z
  #376 = Utf8               nonEmpty
  #377 = Utf8               org/sireum/ST$
  #378 = Class              #377          // org/sireum/ST$
  #379 = Utf8               Lorg/sireum/ST$;
  #380 = NameAndType        #58:#379      // MODULE$:Lorg/sireum/ST$;
  #381 = Fieldref           #378.#380     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #382 = Utf8               {\n      |
  #383 = String             #382          // {\n      |
  #384 = Utf8               \n      |}
  #385 = String             #384          // \n      |}
  #386 = Utf8               Lorg/sireum/ST$Templ$;
  #387 = NameAndType        #58:#386      // MODULE$:Lorg/sireum/ST$Templ$;
  #388 = Fieldref           #32.#387      // org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
  #389 = NameAndType        #231:#111     // entries:()Lorg/sireum/IS;
  #390 = Methodref          #2.#389       // org/sireum/HashSMap.entries:()Lorg/sireum/IS;
  #391 = Utf8               $anonfun$string$1
  #392 = Utf8               (Lscala/Tuple2;)Lorg/sireum/ST;
  #393 = NameAndType        #391:#392     // $anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #394 = Methodref          #2.#393       // org/sireum/HashSMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #395 = MethodHandle       6:#394        // REF_invokeStatic org/sireum/HashSMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
  #396 = MethodType         #392          //  (Lscala/Tuple2;)Lorg/sireum/ST;
  #397 = Utf8               ()Lscala/Function1;
  #398 = NameAndType        #153:#397     // apply:()Lscala/Function1;
  #399 = InvokeDynamic      #3:#398       // #3:apply:()Lscala/Function1;
  #400 = Utf8               elements
  #401 = NameAndType        #400:#167     // elements:()Lscala/collection/immutable/Seq;
  #402 = Methodref          #228.#401     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #403 = Utf8               org/sireum/String$
  #404 = Class              #403          // org/sireum/String$
  #405 = Utf8               Lorg/sireum/String$;
  #406 = NameAndType        #58:#405      // MODULE$:Lorg/sireum/String$;
  #407 = Fieldref           #404.#406     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #408 = Utf8               ,\n
  #409 = String             #408          // ,\n
  #410 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #411 = NameAndType        #153:#410     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #412 = Methodref          #404.#411     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #413 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #414 = NameAndType        #153:#413     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #415 = Methodref          #32.#414      // org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #416 = Utf8                     st\"\"\"{\n      |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n      |}\"\"\"
  #417 = String             #416          //       st\"\"\"{\n      |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n      |}\"\"\"
  #418 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #419 = NameAndType        #153:#418     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #420 = Methodref          #378.#419     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #421 = Utf8               render
  #422 = NameAndType        #421:#117     // render:()Ljava/lang/String;
  #423 = Methodref          #20.#422      // org/sireum/ST.render:()Ljava/lang/String;
  #424 = Utf8               r
  #425 = Utf8               Lorg/sireum/ST;
  #426 = Utf8               org/sireum/Z$
  #427 = Class              #426          // org/sireum/Z$
  #428 = Utf8               Lorg/sireum/Z$;
  #429 = NameAndType        #58:#428      // MODULE$:Lorg/sireum/Z$;
  #430 = Fieldref           #427.#429     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #431 = Methodref          #289.#129     // org/sireum/HashMap.hashCode:()I
  #432 = Utf8               (I)Lorg/sireum/Z;
  #433 = NameAndType        #153:#432     // apply:(I)Lorg/sireum/Z;
  #434 = Methodref          #427.#433     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #435 = Utf8               (Lorg/sireum/HashSMap<TK;TT;>;)Z
  #436 = Utf8               other
  #437 = Utf8               (Lorg/sireum/HashMap;)Z
  #438 = NameAndType        #144:#437     // isEqual:(Lorg/sireum/HashMap;)Z
  #439 = Methodref          #289.#438     // org/sireum/HashMap.isEqual:(Lorg/sireum/HashMap;)Z
  #440 = NameAndType        #96:#97       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #441 = Methodref          #2.#440       // org/sireum/HashSMap.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #442 = Utf8               $this
  #443 = Utf8               k
  #444 = Utf8               org/sireum/Option
  #445 = Class              #444          // org/sireum/Option
  #446 = NameAndType        #338:#297     // get:()Ljava/lang/Object;
  #447 = InterfaceMethodref #445.#446     // org/sireum/Option.get:()Ljava/lang/Object;
  #448 = Utf8               $anonfun$$plus$plus$1
  #449 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #450 = Utf8               newMap$1
  #451 = Utf8               newKeys$1
  #452 = Utf8               kv
  #453 = Utf8               oldNewMapSize
  #454 = Utf8               e
  #455 = Utf8               scala/StringContext$
  #456 = Class              #455          // scala/StringContext$
  #457 = Utf8               Lscala/StringContext$;
  #458 = NameAndType        #58:#457      // MODULE$:Lscala/StringContext$;
  #459 = Fieldref           #456.#458     // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #460 = Utf8
  #461 = String             #460          //
  #462 = Utf8               processEscapes
  #463 = NameAndType        #462:#410     // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #464 = Methodref          #456.#463     // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #465 = Utf8                ->
  #466 = String             #465          //  ->
  #467 = Utf8               Lorg/sireum/ST$Any$;
  #468 = NameAndType        #58:#467      // MODULE$:Lorg/sireum/ST$Any$;
  #469 = Fieldref           #23.#468      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #470 = Utf8               org/sireum/$internal/Option$
  #471 = Class              #470          // org/sireum/$internal/Option$
  #472 = Utf8               Lorg/sireum/$internal/Option$;
  #473 = NameAndType        #58:#472      // MODULE$:Lorg/sireum/$internal/Option$;
  #474 = Fieldref           #471.#473     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #475 = NameAndType        #153:#233     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #476 = Methodref          #471.#475     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #477 = Utf8               genericWrapArray
  #478 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #479 = NameAndType        #477:#478     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #480 = Methodref          #179.#479     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #481 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #482 = NameAndType        #153:#481     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #483 = Methodref          #23.#482      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #484 = Utf8               _2
  #485 = NameAndType        #484:#297     // _2:()Ljava/lang/Object;
  #486 = Methodref          #184.#485     // scala/Tuple2._2:()Ljava/lang/Object;
  #487 = Utf8                                                    st\"${e._1} -> ${e._2}\"
  #488 = String             #487          //                                      st\"${e._1} -> ${e._2}\"
  #489 = Utf8               (Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)V
  #490 = Utf8               __map
  #491 = Utf8               __keys
  #492 = Utf8               ()V
  #493 = NameAndType        #156:#492     // "<init>":()V
  #494 = Methodref          #5.#493       // java/lang/Object."<init>":()V
  #495 = Utf8               $init$
  #496 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #497 = NameAndType        #495:#496     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #498 = InterfaceMethodref #99.#497      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #499 = Utf8               (Lorg/sireum/Immutable;)V
  #500 = NameAndType        #495:#499     // $init$:(Lorg/sireum/Immutable;)V
  #501 = InterfaceMethodref #80.#500      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #502 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #503 = NameAndType        #495:#502     // $init$:(Lorg/sireum/DatatypeSig;)V
  #504 = InterfaceMethodref #7.#503       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #505 = NameAndType        #448:#449     // $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #506 = Methodref          #2.#505       // org/sireum/HashSMap.$anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #507 = Utf8               scala/runtime/BoxedUnit
  #508 = Class              #507          // scala/runtime/BoxedUnit
  #509 = Utf8               UNIT
  #510 = Utf8               Lscala/runtime/BoxedUnit;
  #511 = NameAndType        #509:#510     // UNIT:Lscala/runtime/BoxedUnit;
  #512 = Fieldref           #508.#511     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #513 = Utf8               $deserializeLambda$
  #514 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #515 = Utf8               scala/runtime/LambdaDeserialize
  #516 = Class              #515          // scala/runtime/LambdaDeserialize
  #517 = Utf8               bootstrap
  #518 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #519 = NameAndType        #517:#518     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #520 = Methodref          #516.#519     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #521 = MethodHandle       6:#520        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #522 = Utf8               lambdaDeserialize
  #523 = NameAndType        #522:#514     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #524 = InvokeDynamic      #4:#523       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #525 = Utf8               Signature
  #526 = Utf8               Code
  #527 = Utf8               LocalVariableTable
  #528 = Utf8               MethodParameters
  #529 = Utf8               LineNumberTable
  #530 = Utf8               StackMapTable
  #531 = Utf8               InnerClasses
  #532 = Utf8               SourceFile
  #533 = Utf8               RuntimeVisibleAnnotations
  #534 = Utf8               BootstrapMethods
  #535 = Utf8               ScalaInlineInfo
  #536 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #43                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.HashMap<K, T> _map;
    descriptor: Lorg/sireum/HashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #46                          // Lorg/sireum/HashMap<TK;TT;>;

  private final org.sireum.IS<org.sireum.Z, K> _keys;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #49                          // Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <K extends java.lang.Object, T extends java.lang.Object> scala.Some<scala.Tuple2<org.sireum.HashMap<K, T>, org.sireum.IS<org.sireum.Z, K>>> unapply(org.sireum.HashSMap<K, T>);
    descriptor: (Lorg/sireum/HashSMap;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: aload_0
         4: invokevirtual #63                 // Method org/sireum/HashSMap$.unapply:(Lorg/sireum/HashSMap;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/HashSMap;
    Signature: #54                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashSMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashSMap<K, T> emptyInit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashSMap;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: aload_0
         4: invokevirtual #70                 // Method org/sireum/HashSMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 initialCapacity   Lorg/sireum/Z;
    Signature: #67                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      initialCapacity                final

  public static <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashSMap<K, T> empty();
    descriptor: ()Lorg/sireum/HashSMap;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: invokevirtual #76                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
         6: areturn
    Signature: #74                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashSMap<TK;TT;>;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #84                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #95                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #103                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;

  public org.sireum.HashMap<K, T> map();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _map:Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #106                         // ()Lorg/sireum/HashMap<TK;TT;>;

  public org.sireum.HashMap<K, T> getMap();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _map:Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #106                         // ()Lorg/sireum/HashMap<TK;TT;>;

  public org.sireum.IS<org.sireum.Z, K> keys();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _keys:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  public org.sireum.IS<org.sireum.Z, K> getKeys();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field _keys:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #120                // Method string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #124                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     37
        15: aload_0
        16: aload_0
        17: invokevirtual #128                // Method hash:()Lorg/sireum/Z;
        20: invokevirtual #130                // Method java/lang/Object.hashCode:()I
        23: putfield      #132                // Field hashCode:I
        26: aload_0
        27: aload_0
        28: getfield      #124                // Field bitmap$0:B
        31: iconst_1
        32: ior
        33: i2b
        34: putfield      #124                // Field bitmap$0:B
        37: aload_1
        38: monitorexit
        39: goto          45
        42: aload_1
        43: monitorexit
        44: athrow
        45: aload_0
        46: getfield      #132                // Field hashCode:I
        49: ireturn
      Exception table:
         from    to  target type
             4    37    42   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/HashSMap ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lorg/sireum/HashSMap;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #124                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #136                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #132                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSMap;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     9
         5: iconst_1
         6: goto          46
         9: aload_1
        10: astore_3
        11: aload_3
        12: instanceof    #2                  // class org/sireum/HashSMap
        15: ifeq          40
        18: aload_3
        19: checkcast     #2                  // class org/sireum/HashSMap
        22: astore        4
        24: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        27: aload_0
        28: aload         4
        30: invokevirtual #147                // Method isEqual:(Lorg/sireum/HashSMap;)Z
        33: invokevirtual #151                // Method org/sireum/B$.$4B:(Z)Z
        36: istore_2
        37: goto          45
        40: goto          43
        43: iconst_0
        44: ireturn
        45: iload_2
        46: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/HashSMap, class java/lang/Object, int, class java/lang/Object, class org/sireum/HashSMap ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashSMap, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lorg/sireum/HashSMap;
            0      47     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.HashSMap<K, T> apply(org.sireum.HashMap<K, T>, org.sireum.IS<org.sireum.Z, K>);
    descriptor: (Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/sireum/HashSMap
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #159                // Method "<init>":(Lorg/sireum/HashMap;Lorg/sireum/IS;)V
         9: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/HashSMap;
            0      10     1   map   Lorg/sireum/HashMap;
            0      10     2  keys   Lorg/sireum/IS;
    Signature: #155                         // (Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      map                            final
      keys                           final

  public org.sireum.HashMap<K, T> apply$default$1();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #106                         // ()Lorg/sireum/HashMap<TK;TT;>;

  public org.sireum.IS<org.sireum.Z, K> apply$default$2();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #124                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     136
        15: aload_0
        16: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_3
        26: anewarray     #184                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #184                // class scala/Tuple2
        34: dup
        35: ldc           #186                // String type
        37: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #190                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #192                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #194                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #196                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #198                // String HashSMap
        64: aastore
        65: checkcast     #200                // class "[Ljava/lang/Object;"
        68: invokevirtual #204                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #209                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #212                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #184                // class scala/Tuple2
        83: dup
        84: ldc           #213                // String map
        86: aload_0
        87: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
        90: invokespecial #212                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: dup
        95: iconst_2
        96: new           #184                // class scala/Tuple2
        99: dup
       100: ldc           #214                // String keys
       102: aload_0
       103: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
       106: invokespecial #212                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       109: aastore
       110: checkcast     #200                // class "[Ljava/lang/Object;"
       113: invokevirtual #204                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       116: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       119: checkcast     #221                // class scala/collection/immutable/Seq
       122: putfield      #223                // Field $content:Lscala/collection/immutable/Seq;
       125: aload_0
       126: aload_0
       127: getfield      #124                // Field bitmap$0:B
       130: iconst_2
       131: ior
       132: i2b
       133: putfield      #124                // Field bitmap$0:B
       136: aload_1
       137: monitorexit
       138: goto          144
       141: aload_1
       142: monitorexit
       143: athrow
       144: aload_0
       145: getfield      #223                // Field $content:Lscala/collection/immutable/Seq;
       148: areturn
      Exception table:
         from    to  target type
             4   136   141   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 136
          locals = [ class org/sireum/HashSMap ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     149     0  this   Lorg/sireum/HashSMap;
    Signature: #168                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #124                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #225                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #223                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSMap;
    Signature: #168                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
         4: invokevirtual #230                // Method org/sireum/IS.size:()Lorg/sireum/Z;
         7: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/HashSMap;

  public org.sireum.IS<org.sireum.Z, scala.Tuple2<K, T>> entries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
         4: aload_0
         5: invokedynamic #253,  0            // InvokeDynamic #0:apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
        10: invokevirtual #256                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        13: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashSMap;
    Signature: #232                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TK;TT;>;>;

  public org.sireum.IS<org.sireum.Z, T> values();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
         4: aload_0
         5: invokedynamic #264,  0            // InvokeDynamic #1:apply:(Lorg/sireum/HashSMap;)Lscala/Function1;
        10: invokevirtual #256                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        13: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashSMap;
    Signature: #258                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public org.sireum.IS<org.sireum.Z, K> keySet();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;
    Signature: #112                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TK;>;

  public org.sireum.Set<T> valueSet();
    descriptor: ()Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #273                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
         3: invokevirtual #275                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
         6: aload_0
         7: invokevirtual #277                // Method values:()Lorg/sireum/IS;
        10: invokevirtual #283                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        13: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashSMap;
    Signature: #268                         // ()Lorg/sireum/Set<TT;>;

  public org.sireum.HashSMap<K, T> $plus(scala.Tuple2<K, T>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #292                // Method org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
         8: astore_2
         9: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        12: aload_2
        13: aload_2
        14: invokevirtual #293                // Method org/sireum/HashMap.size:()Lorg/sireum/Z;
        17: aload_0
        18: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
        21: invokevirtual #293                // Method org/sireum/HashMap.size:()Lorg/sireum/Z;
        24: astore_3
        25: dup
        26: ifnonnull     37
        29: pop
        30: aload_3
        31: ifnull        44
        34: goto          51
        37: aload_3
        38: invokevirtual #295                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        41: ifeq          51
        44: aload_0
        45: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
        48: goto          62
        51: aload_0
        52: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
        55: aload_1
        56: invokevirtual #299                // Method scala/Tuple2._1:()Ljava/lang/Object;
        59: invokevirtual #303                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        62: invokevirtual #305                // Method org/sireum/HashSMap$.apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        65: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class org/sireum/HashSMap, class scala/Tuple2, class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/HashSMap$, class org/sireum/HashMap, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/HashSMap, class scala/Tuple2, class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/HashSMap$, class org/sireum/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/HashSMap, class scala/Tuple2, class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/HashSMap$, class org/sireum/HashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class org/sireum/HashSMap, class scala/Tuple2, class org/sireum/HashMap, class org/sireum/Z ]
          stack = [ class org/sireum/HashSMap$, class org/sireum/HashMap, class org/sireum/IS ]
      LineNumberTable:
        line 68: 0
        line 69: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      57     2 newMap   Lorg/sireum/HashMap;
            0      66     0  this   Lorg/sireum/HashSMap;
            0      66     1     p   Lscala/Tuple2;
    Signature: #286                         // (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public <I extends java.lang.Object> org.sireum.HashSMap<K, T> $plus$plus(org.sireum.IS<I, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #312                // Method org/sireum/IS.isEmpty:()Z
         7: invokevirtual #151                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          15
        13: aload_0
        14: areturn
        15: aload_0
        16: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
        19: invokestatic  #318                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        22: astore_2
        23: aload_0
        24: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
        27: invokestatic  #318                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        30: astore_3
        31: aload_1
        32: aload_2
        33: aload_3
        34: invokedynamic #328,  0            // InvokeDynamic #2:apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
        39: invokevirtual #332                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        42: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        45: aload_2
        46: getfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        49: checkcast     #289                // class org/sireum/HashMap
        52: aload_3
        53: getfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        56: checkcast     #228                // class org/sireum/IS
        59: invokevirtual #305                // Method org/sireum/HashSMap$.apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        62: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 73: 0
        line 74: 13
        line 76: 15
        line 77: 23
        line 78: 31
        line 85: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      40     2 newMap   Lscala/runtime/ObjectRef;
           31      32     3 newKeys   Lscala/runtime/ObjectRef;
            0      63     0  this   Lorg/sireum/HashSMap;
            0      63     1 entries   Lorg/sireum/IS;
    Signature: #309                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      entries                        final

  public org.sireum.Option<T> get(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #343                // Method org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
         8: areturn
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSMap;
            0       9     1   key   Ljava/lang/Object;
    Signature: #340                         // (TK;)Lorg/sireum/Option<TT;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public org.sireum.Option<scala.Tuple2<K, T>> entry(K);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #347                // Method org/sireum/HashMap.entry:(Ljava/lang/Object;)Lorg/sireum/Option;
         8: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSMap;
            0       9     1   key   Ljava/lang/Object;
    Signature: #345                         // (TK;)Lorg/sireum/Option<Lscala/Tuple2<TK;TT;>;>;
    MethodParameters:
      Name                           Flags
      key                            final

  public org.sireum.HashSMap<K, T> $minus$minus(org.sireum.IS<org.sireum.Z, K>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: aload_0
         4: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         7: aload_1
         8: invokevirtual #352                // Method org/sireum/HashMap.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
        11: aload_0
        12: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
        15: aload_1
        16: invokevirtual #355                // Method org/sireum/IS.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        19: invokevirtual #305                // Method org/sireum/HashSMap$.apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        22: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashSMap;
            0      23     1  keys   Lorg/sireum/IS;
    Signature: #349                         // (Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      keys                           final

  public org.sireum.HashSMap<K, T> $minus(scala.Tuple2<K, T>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #61                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: aload_0
         4: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         7: aload_1
         8: invokevirtual #358                // Method org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        11: aload_0
        12: invokevirtual #165                // Method keys:()Lorg/sireum/IS;
        15: aload_1
        16: invokevirtual #299                // Method scala/Tuple2._1:()Ljava/lang/Object;
        19: invokevirtual #360                // Method org/sireum/IS.$minus:(Ljava/lang/Object;)Lorg/sireum/IS;
        22: invokevirtual #305                // Method org/sireum/HashSMap$.apply:(Lorg/sireum/HashMap;Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        25: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/sireum/HashSMap;
            0      26     1     p   Lscala/Tuple2;
    Signature: #286                         // (Lscala/Tuple2<TK;TT;>;)Lorg/sireum/HashSMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public boolean contains(K);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #364                // Method org/sireum/HashMap.contains:(Ljava/lang/Object;)Z
         8: ireturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashSMap;
            0       9     1   key   Ljava/lang/Object;
    Signature: #362                         // (TK;)Z
    MethodParameters:
      Name                           Flags
      key                            final

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #365                // Method size:()Lorg/sireum/Z;
         7: getstatic     #368                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        10: ldc_w         #370                // String 0
        13: invokevirtual #373                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        16: astore_1
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_1
        23: ifnull        36
        26: goto          40
        29: aload_1
        30: invokevirtual #295                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifeq          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #375                // Method org/sireum/B$.apply:(Z)Z
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashSMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashSMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/HashSMap;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #365                // Method size:()Lorg/sireum/Z;
         7: getstatic     #368                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
        10: ldc_w         #370                // String 0
        13: invokevirtual #373                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
        16: astore_1
        17: dup
        18: ifnonnull     29
        21: pop
        22: aload_1
        23: ifnull        40
        26: goto          36
        29: aload_1
        30: invokevirtual #295                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        33: ifne          40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #375                // Method org/sireum/B$.apply:(Z)Z
        44: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/sireum/HashSMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashSMap, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 113: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/HashSMap;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=2, args_size=1
         0: getstatic     #381                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_2
        13: anewarray     #192                // class java/lang/String
        16: dup
        17: iconst_0
        18: ldc_w         #383                // String {\n      |
        21: aastore
        22: dup
        23: iconst_1
        24: ldc_w         #385                // String \n      |}
        27: aastore
        28: checkcast     #200                // class "[Ljava/lang/Object;"
        31: invokevirtual #204                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        34: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        37: checkcast     #221                // class scala/collection/immutable/Seq
        40: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
        43: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        46: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        49: iconst_1
        50: anewarray     #26                 // class org/sireum/ST$Arg
        53: dup
        54: iconst_0
        55: getstatic     #388                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        58: aload_0
        59: invokevirtual #390                // Method entries:()Lorg/sireum/IS;
        62: invokedynamic #399,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        67: invokevirtual #256                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        70: invokevirtual #402                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        73: getstatic     #407                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        76: ldc_w         #409                // String ,\n
        79: invokevirtual #412                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        82: invokevirtual #415                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
        85: aastore
        86: checkcast     #200                // class "[Ljava/lang/Object;"
        89: invokevirtual #204                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        92: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        95: checkcast     #221                // class scala/collection/immutable/Seq
        98: ldc_w         #417                // String       st\"\"\"{\n      |  ${(for (e <- entries) yield st\"${e._1} -> ${e._2}\", \",\\n\")}\n      |}\"\"\"
       101: invokevirtual #420                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       104: astore_1
       105: aload_1
       106: invokevirtual #423                // Method org/sireum/ST.render:()Ljava/lang/String;
       109: areturn
      LineNumberTable:
        line 118: 0
        line 119: 24
        line 118: 40
        line 119: 58
        line 118: 98
        line 121: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          105       5     1     r   Lorg/sireum/ST;
            0     110     0  this   Lorg/sireum/HashSMap;

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #430                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: aload_0
         4: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         7: invokevirtual #431                // Method org/sireum/HashMap.hashCode:()I
        10: invokevirtual #434                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        13: areturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/HashSMap;

  public boolean isEqual(org.sireum.HashSMap<K, T>);
    descriptor: (Lorg/sireum/HashSMap;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         8: invokevirtual #439                // Method org/sireum/HashMap.isEqual:(Lorg/sireum/HashMap;)Z
        11: ireturn
      LineNumberTable:
        line 129: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/HashSMap;
            0      12     1 other   Lorg/sireum/HashSMap;
    Signature: #435                         // (Lorg/sireum/HashSMap<TK;TT;>;)Z
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #441                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashSMap;

  public static final scala.Tuple2 $anonfun$entries$1(org.sireum.HashSMap, java.lang.Object);
    descriptor: (Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #184                // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         9: aload_1
        10: invokevirtual #343                // Method org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        13: invokeinterface #447,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        18: invokespecial #212                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        21: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 $this   Lorg/sireum/HashSMap;
            0      22     1     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      k                              final

  public static final java.lang.Object $anonfun$values$1(org.sireum.HashSMap, java.lang.Object);
    descriptor: (Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #162                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #343                // Method org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
         8: invokeinterface #447,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        13: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Lorg/sireum/HashSMap;
            0      14     1     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      k                              final

  public static final void $anonfun$$plus$plus$1(scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_0
         1: getfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #289                // class org/sireum/HashMap
         7: invokevirtual #293                // Method org/sireum/HashMap.size:()Lorg/sireum/Z;
        10: astore_3
        11: aload_0
        12: aload_0
        13: getfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        16: checkcast     #289                // class org/sireum/HashMap
        19: aload_2
        20: invokevirtual #292                // Method org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        23: putfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        26: aload_0
        27: getfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        30: checkcast     #289                // class org/sireum/HashMap
        33: invokevirtual #293                // Method org/sireum/HashMap.size:()Lorg/sireum/Z;
        36: aload_3
        37: astore        4
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         4
        46: ifnull        81
        49: goto          60
        52: aload         4
        54: invokevirtual #295                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifne          81
        60: aload_1
        61: aload_1
        62: getfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        65: checkcast     #228                // class org/sireum/IS
        68: aload_2
        69: invokevirtual #299                // Method scala/Tuple2._1:()Ljava/lang/Object;
        72: invokevirtual #303                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        75: putfield      #335                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        78: goto          81
        81: return
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 52
          locals = [ class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/Tuple2, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 20 /* same */
      LineNumberTable:
        line 79: 0
        line 80: 11
        line 81: 26
        line 82: 60
        line 81: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      70     3 oldNewMapSize   Lorg/sireum/Z;
            0      82     0 newMap$1   Lscala/runtime/ObjectRef;
            0      82     1 newKeys$1   Lscala/runtime/ObjectRef;
            0      82     2    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      newMap$1                       final
      newKeys$1                      final
      kv                             final

  public static final org.sireum.ST $anonfun$string$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/ST;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=15, locals=1, args_size=1
         0: getstatic     #381                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_3
        13: anewarray     #192                // class java/lang/String
        16: dup
        17: iconst_0
        18: getstatic     #459                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        21: ldc_w         #461                // String
        24: invokevirtual #464                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        27: aastore
        28: dup
        29: iconst_1
        30: getstatic     #459                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        33: ldc_w         #466                // String  ->
        36: invokevirtual #464                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        39: aastore
        40: dup
        41: iconst_2
        42: getstatic     #459                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        45: ldc_w         #461                // String
        48: invokevirtual #464                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        51: aastore
        52: checkcast     #200                // class "[Ljava/lang/Object;"
        55: invokevirtual #204                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        58: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        61: checkcast     #221                // class scala/collection/immutable/Seq
        64: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
        67: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        70: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        73: iconst_2
        74: anewarray     #26                 // class org/sireum/ST$Arg
        77: dup
        78: iconst_0
        79: getstatic     #469                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
        82: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
        85: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        88: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        91: iconst_1
        92: anewarray     #5                  // class java/lang/Object
        95: dup
        96: iconst_0
        97: getstatic     #474                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       100: aload_0
       101: invokevirtual #299                // Method scala/Tuple2._1:()Ljava/lang/Object;
       104: invokevirtual #476                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       107: aastore
       108: invokevirtual #480                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       111: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       114: checkcast     #221                // class scala/collection/immutable/Seq
       117: ldc_w         #461                // String
       120: invokevirtual #483                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       123: aastore
       124: dup
       125: iconst_1
       126: getstatic     #469                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       129: getstatic     #173                // Field scala/package$.MODULE$:Lscala/package$;
       132: invokevirtual #177                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       135: getstatic     #182                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       138: iconst_1
       139: anewarray     #5                  // class java/lang/Object
       142: dup
       143: iconst_0
       144: getstatic     #474                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       147: aload_0
       148: invokevirtual #486                // Method scala/Tuple2._2:()Ljava/lang/Object;
       151: invokevirtual #476                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       154: aastore
       155: invokevirtual #480                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       158: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       161: checkcast     #221                // class scala/collection/immutable/Seq
       164: ldc_w         #461                // String
       167: invokevirtual #483                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       170: aastore
       171: checkcast     #200                // class "[Ljava/lang/Object;"
       174: invokevirtual #204                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       177: invokevirtual #219                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       180: checkcast     #221                // class scala/collection/immutable/Seq
       183: ldc_w         #488                // String                                      st\"${e._1} -> ${e._2}\"
       186: invokevirtual #420                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       189: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     190     0     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      e                              final

  public org.sireum.HashSMap(org.sireum.HashMap<K, T>, org.sireum.IS<org.sireum.Z, K>);
    descriptor: (Lorg/sireum/HashMap;Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #494                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #498                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #501                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #504                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #108                // Field _map:Lorg/sireum/HashMap;
        21: aload_0
        22: aload_2
        23: putfield      #114                // Field _keys:Lorg/sireum/IS;
        26: return
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/HashSMap;
            0      27     1 __map   Lorg/sireum/HashMap;
            0      27     2 __keys   Lorg/sireum/IS;
    Signature: #489                         // (Lorg/sireum/HashMap<TK;TT;>;Lorg/sireum/IS<Lorg/sireum/Z;TK;>;)V
    MethodParameters:
      Name                           Flags
      __map                          final
      __keys                         final

  public static final java.lang.Object $anonfun$$plus$plus$1$adapted(scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #506                // Method $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         6: getstatic     #512                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 newMap$1   Lscala/runtime/ObjectRef;
            0      10     1 newKeys$1   Lscala/runtime/ObjectRef;
            0      10     2    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      newMap$1                       final
      newKeys$1                      final
      kv                             final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #524,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #21= #18 of #20;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #24= #23 of #20;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #27= #26 of #20;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #30= #29 of #20;    // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #33= #32 of #20;          // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
  public static #38= #35 of #37;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
Signature: #3                           // <K:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
SourceFile: "HashSMap.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\tUt!\u0002\u0016,\u0011\u0003\u0001d!\u0002\u001a,\u0011\u0003\u0019\u0004\"\u0002\u001e\u0002\t\u0003Y\u0004\"\u0002\u001f\u0002\t\u0003i\u0004b\u0002B\b\u0003\u0011\u0005!\u0011\u0003\u0005\b\u0003\u001b\u000bA\u0011\u0001B\u0013\u0011\u001d\tI!\u0001C\u0001\u0005\u0003BqAa\u0016\u0002\t\u0003\u0011IF\u0002\u00033W\t\u0001\u0005\u0002C#\t\u0005\u0003\u0005\u000b\u0011\u0002$\t\u0011]C!\u0011!Q\u0001\naCQA\u000f\u0005\u0005\u0002\tDaA\u001a\u0005!\u0002\u00131\u0005\"B4\t\t\u0003A\u0007\"B5\t\t\u0003A\u0007B\u00026\tA\u0003%\u0001\fC\u0003l\u0011\u0011\u0005A\u000eC\u0003n\u0011\u0011\u0005A\u000eC\u0003o\u0011\u0011\u0005s\u000e\u0003\u0005y\u0011!\u0015\r\u0011\"\u0011z\u0011\u0015i\b\u0002\"\u0011\u007f\u0011\u001d\tI\u0001\u0003C\u0001\u0003\u0017A\u0011\"!\u0005\t#\u0003%\t!a\u0005\t\u0013\u0005%\u0002\"%A\u0005\u0002\u0005-\u0002BCA\u0018\u0011!\u0015\r\u0011\"\u0011\u00022!9\u0011q\n\u0005\u0005\u0002\u0005E\u0003bBA1\u0011\u0011\u0005\u00111\r\u0005\b\u0003WBA\u0011AA7\u0011\u0019\t\u0019\b\u0003C\u0001Y\"9\u0011q\u000f\u0005\u0005\u0002\u0005e\u0004bBAB\u0011\u0011\u0005\u0011Q\u0011\u0005\b\u0003\u001bCA\u0011AAH\u0011\u001d\t\u0019\u000b\u0003C\u0001\u0003KCq!a-\t\t\u0003\t)\fC\u0004\u0002>\"!\t!a0\t\u000f\u0005\u0015\u0007\u0002\"\u0001\u0002H\"9\u0011Q\u001a\u0005\u0005\u0002\u0005=\u0007bBAn\u0011\u0011\u0005\u0011Q\u001c\u0005\b\u0003CDA\u0011AAo\u0011\u001d\t)\u000f\u0003C!\u0003ODq!a<\t\t\u0003\n\t\u0006C\u0004\u0002t\"!\t!!>\u0002\u0011!\u000b7\u000f[*NCBT!\u0001L\u0017\u0002\rML\'/Z;n\u0015\u0005q\u0013aA8sO\u000e\u0001\u0001CA\u0019\u0002\u001b\u0005Y#\u0001\u0003%bg\"\u001cV*\u00199\u0014\u0005\u0005!\u0004CA\u001b9\u001b\u00051$\"A\u001c\u0002\u000bM\u001c\u0017\r\\1\n\u0005e2$AB!osJ+g-\u0001\u0004=S:LGO\u0010\u000b\u0002a\u0005)Q-\u001c9usV)aHa\u0002\u0003\fU\tq\b\u0005\u00042\u0011\t\u0015!\u0011B\u000b\u0004\u0003.+6c\u0001\u00055\u0005B\u0011\u0011gQ\u0005\u0003\t.\u00121\u0002R1uCRL\b/Z*jO\u0006)qlX7baB!\u0011gR%U\u0013\tA5FA\u0004ICNDW*\u00199\u0011\u0005)[E\u0002\u0001\u0003\u0006\u0019\"\u0011\r!\u0014\u0002\u0002\u0017F\u0011a*\u0015\t\u0003k=K!\u0001\u0015\u001c\u0003\u000f9{G\u000f[5oOB\u0011QGU\u0005\u0003\'Z\u00121!\u00118z!\tQU\u000bB\u0003W\u0011\t\u0007QJA\u0001U\u0003\u0019yvl[3zgB\u0019\u0011\fX%\u000f\u0005ER\u0016BA.,\u0003\u001d\u0001\u0018mY6bO\u0016L!!\u00180\u0003\u0007%\u001b&,\u0003\u0002`A\na\u0001+Y2lC\u001e,GK]1ji*\u0011\u0011mK\u0001\nI%tG/\u001a:oC2$2a\u00193f!\u0011\t\u0004\"\u0013+\t\u000b\u0015[\u0001\u0019\u0001$\t\u000b][\u0001\u0019\u0001-\u0002\t}k\u0017\r]\u0001\u0004[\u0006\u0004X#\u0001$\u0002\r\u001d,G/T1q\u0003\u0015y6.Z=t\u0003\u0011YW-_:\u0016\u0003a\u000bqaZ3u\u0017\u0016L8/\u0001\u0005u_N#(/\u001b8h)\u0005\u0001\bCA9w\u001b\u0005\u0011(BA:u\u0003\u0011a\u0017M\\4\u000b\u0003U\fAA[1wC&\u0011qO\u001d\u0002\u0007\'R\u0014\u0018N\\4\u0002\u0011!\f7\u000f[\"pI\u0016,\u0012A\u001f\t\u0003kmL!\u0001 \u001c\u0003\u0007%sG/\u0001\u0004fcV\fGn\u001d\u000b\u0004\u007f\u0006\u0015\u0001cA\u001b\u0002\u0002%\u0019\u00111\u0001\u001c\u0003\u000f\t{w\u000e\\3b]\"1\u0011q\u0001\u000bA\u0002E\u000b\u0011a\\\u0001\u0006CB\u0004H.\u001f\u000b\u0006G\u00065\u0011q\u0002\u0005\bOV\u0001\n\u00111\u0001G\u0011\u001dYW\u0003%AA\u0002a\u000bq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0003\u0003+Q3ARA\fW\t\tI\u0002\u0005\u0003\u0002\u001c\u0005\u0015RBAA\u000f\u0015\u0011\ty\"!\t\u0002\u0013Ut7\r[3dW\u0016$\'bAA\u0012m\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005\u001d\u0012Q\u0004\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017aD1qa2LH\u0005Z3gCVdG\u000f\n\u001a\u0016\u0005\u00055\"f\u0001-\u0002\u0018\u0005AAeY8oi\u0016tG/\u0006\u0002\u00024A1\u0011QGA\"\u0003\u0013rA!a\u000e\u0002B9!\u0011\u0011HA \u001b\t\tYDC\u0002\u0002>=\na\u0001\u0010:p_Rt\u0014\"A\u001c\n\u0005m3\u0014\u0002BA#\u0003\u000f\u00121aU3r\u0015\tYf\u0007E\u00036\u0003\u0017\u0002\u0018+C\u0002\u0002NY\u0012a\u0001V;qY\u0016\u0014\u0014\u0001B:ju\u0016,\"!a\u0015\u0011\u0007E\n)&C\u0002\u0002X-\u0012\u0011A\u0017\u0015\u00043\u0005m\u0003cA\u0019\u0002^%\u0019\u0011qL\u0016\u0003\tA,(/Z\u0001\bK:$(/[3t+\t\t)\u0007\u0005\u0003Z9\u0006\u001d\u0004#B\u001b\u0002L%#\u0006f\u0001\u000e\u0002\\\u00051a/\u00197vKN,\"!a\u001c\u0011\u0007ecF\u000bK\u0002\u001c\u00037\naa[3z\'\u0016$\bf\u0001\u000f\u0002\\\u0005Aa/\u00197vKN+G/\u0006\u0002\u0002|A!\u0011\'! U\u0013\r\tyh\u000b\u0002\u0004\'\u0016$\bfA\u000f\u0002\\\u0005)A\u0005\u001d7vgR\u00191-a\"\t\u000f\u0005%e\u00041\u0001\u0002h\u0005\t\u0001\u000fK\u0002\u001f\u00037\n!\u0002\n9mkN$\u0003\u000f\\;t+\u0011\t\t*!(\u0015\u0007\r\f\u0019\nC\u0004\u0002b}\u0001\r!!&\u0011\u000fE\n9*a\'\u0002h%\u0019\u0011\u0011T\u0016\u0003\u0005%\u001b\u0006c\u0001&\u0002\u001e\u00121\u0011qT\u0010C\u00025\u0013\u0011!\u0013\u0015\u0004?\u0005m\u0013aA4fiR!\u0011qUAW!\u0011\t\u0014\u0011\u0016+\n\u0007\u0005-6F\u0001\u0004PaRLwN\u001c\u0005\u0007\u0003_\u0003\u0003\u0019A%\u0002\u0007-,\u0017\u0010K\u0002!\u00037\nQ!\u001a8uef$B!a.\u0002:B)\u0011\'!+\u0002h!1\u0011qV\u0011A\u0002%C3!IA.\u00031!S.\u001b8vg\u0012j\u0017N\\;t)\r\u0019\u0017\u0011\u0019\u0005\u0006W\n\u0002\r\u0001\u0017\u0015\u0004E\u0005m\u0013A\u0002\u0013nS:,8\u000fF\u0002d\u0003\u0013Dq!!#$\u0001\u0004\t9\u0007K\u0002$\u00037\n\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003#\f9\u000eE\u00022\u0003\'L1!!6,\u0005\u0005\u0011\u0005BBAXI\u0001\u0007\u0011\nK\u0002%\u00037\nq![:F[B$\u00180\u0006\u0002\u0002R\"\u001aQ%a\u0017\u0002\u00119|g.R7qifD3AJA.\u0003\u0019\u0019HO]5oOV\u0011\u0011\u0011\u001e\t\u0004c\u0005-\u0018BA<,Q\r9\u00131L\u0001\u0005Q\u0006\u001c\b\u000eK\u0002)\u00037\nq![:FcV\fG\u000e\u0006\u0003\u0002R\u0006]\bBBA}S\u0001\u00071-A\u0003pi\",\'\u000fK\u0002*\u00037B3\u0001CA\u0000!\r\t$\u0011A\u0005\u0004\u0005\u0007Y#\u0001\u00033bi\u0006$\u0018\u0010]3\u0011\u0007)\u00139\u0001B\u0003M\u0007\t\u0007Q\nE\u0002K\u0005\u0017!QAV\u0002C\u00025C3aAA.\u0003%)W\u000e\u001d;z\u0013:LG/\u0006\u0004\u0003\u0014\te!Q\u0004\u000b\u0005\u0005+\u0011y\u0002\u0005\u00042\u0011\t]!1\u0004\t\u0004\u0015\neA!\u0002\'\u0005\u0005\u0004i\u0005c\u0001&\u0003\u001e\u0011)a\u000b\u0002b\u0001\u001b\"9!\u0011\u0005\u0003A\u0002\u0005M\u0013aD5oSRL\u0017\r\\\"ba\u0006\u001c\u0017\u000e^=)\u0007\u0011\tY&\u0006\u0005\u0003(\tm\"Q\u0006B\u0019)\u0011\u0011ICa\r\u0011\rEB!1\u0006B\u0018!\rQ%Q\u0006\u0003\u0006\u0019\u0016\u0011\r!\u0014\t\u0004\u0015\nEB!\u0002,\u0006\u0005\u0004i\u0005b\u0002B\u001b\u000b\u0001\u0007!qG\u0001\u0002gB9\u0011\'a&\u0003:\tu\u0002c\u0001&\u0003<\u00111\u0011qT\u0003C\u00025\u0003r!NA&\u0005W\u0011y\u0003K\u0002\u0006\u00037*bAa\u0011\u0003J\t5CC\u0002B#\u0005\u001f\u0012\u0019\u0006\u0005\u00042\u0011\t\u001d#1\n\t\u0004\u0015\n%C!\u0002\'\u0007\u0005\u0004i\u0005c\u0001&\u0003N\u0011)aK\u0002b\u0001\u001b\"1qM\u0002a\u0001\u0005#\u0002b!M$\u0003H\t-\u0003BB6\u0007\u0001\u0004\u0011)\u0006\u0005\u0003Z9\n\u001d\u0013aB;oCB\u0004H._\u000b\u0007\u00057\u0012IG!\u001c\u0015\t\tu#\u0011\u000f\t\u0006k\t}#1M\u0005\u0004\u0005C2$\u0001B*p[\u0016\u0004r!NA&\u0005K\u0012y\u0007\u0005\u00042\u000f\n\u001d$1\u000e\t\u0004\u0015\n%D!\u0002\'\b\u0005\u0004i\u0005c\u0001&\u0003n\u0011)ak\u0002b\u0001\u001bB!\u0011\f\u0018B4\u0011\u001d\t9a\u0002a\u0001\u0005g\u0002b!\r\u0005\u0003h\t-\u0004"
    )
BootstrapMethods:
  0: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #239 REF_invokeStatic org/sireum/HashSMap.$anonfun$entries$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
      #241 (Ljava/lang/Object;)Lscala/Tuple2;
      #242 5
      #243 1
      #241 (Ljava/lang/Object;)Lscala/Tuple2;
  1: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 REF_invokeStatic org/sireum/HashSMap.$anonfun$values$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #243 1
  2: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #323 REF_invokeStatic org/sireum/HashSMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #325 (Lscala/Tuple2;)Ljava/lang/Object;
      #242 5
      #243 1
      #325 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #395 REF_invokeStatic org/sireum/HashSMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
      #396 (Lscala/Tuple2;)Lorg/sireum/ST;
      #242 5
      #243 1
      #396 (Lscala/Tuple2;)Lorg/sireum/ST;
  4: #521 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #323 REF_invokeStatic org/sireum/HashSMap.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #239 REF_invokeStatic org/sireum/HashSMap.$anonfun$entries$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Lscala/Tuple2;
      #395 REF_invokeStatic org/sireum/HashSMap.$anonfun$string$1:(Lscala/Tuple2;)Lorg/sireum/ST;
      #263 REF_invokeStatic org/sireum/HashSMap.$anonfun$values$1:(Lorg/sireum/HashSMap;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xD1 (unknown attribute)
   01 01 00 29 01 C0 01 C1 01 01 3F 01 40 01 00 EB
   00 EC 01 01 87 01 88 01 01 03 01 04 01 00 4D 00
   4E 01 00 60 01 29 01 00 60 00 61 01 00 29 00 A7
   01 00 A6 00 A7 01 00 56 00 57 01 00 5C 00 57 01
   01 64 01 1D 01 01 5C 01 34 01 01 1C 01 1D 01 01
   18 01 34 01 00 9C 00 9D 01 00 99 00 9A 01 00 A0
   00 69 01 00 A3 00 6F 01 01 69 00 8A 01 00 E7 00
   6F 01 01 58 01 53 01 00 89 00 8A 01 01 52 01 53
   01 00 73 00 6F 01 00 6D 00 69 01 00 7D 00 7E 01
   00 27 00 7A 01 00 79 00 7A 01 01 36 00 57 01 00
   90 00 91 01 01 09 00 6F 01 00 6E 00 6F 01 00 68
   00 69 01 01 78 00 57 01 00 E2 00 7E 01 00 76 00
   75 01 00 74 00 75 01 01 0A 01 0B 01 01 01 00 6F
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
