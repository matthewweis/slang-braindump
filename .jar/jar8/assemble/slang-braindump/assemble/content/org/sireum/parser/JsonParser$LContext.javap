Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/JsonParser$LContext.class
  Last modified May 29, 2022; size 9503 bytes
  SHA-256 checksum bf1e2983e57c6a2156f5d5b82f6e5f6d67fac4fd38d8f095d63ee0e5cd7a21ef
  Compiled from "JsonParser.scala"
public final class org.sireum.parser.JsonParser$LContext implements org.sireum.RecordSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/JsonParser$LContext
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 43, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/parser/JsonParser$LContext
    #2 = Class              #1            // org/sireum/parser/JsonParser$LContext
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/RecordSig
    #6 = Class              #5            // org/sireum/RecordSig
    #7 = Utf8               JsonParser.scala
    #8 = Utf8               org/sireum/parser/Json$State
    #9 = Class              #8            // org/sireum/parser/Json$State
   #10 = Utf8               org/sireum/parser/Json
   #11 = Class              #10           // org/sireum/parser/Json
   #12 = Utf8               State
   #13 = Utf8               org/sireum/parser/JsonParser
   #14 = Class              #13           // org/sireum/parser/JsonParser
   #15 = Utf8               LContext
   #16 = Utf8               _accepting
   #17 = Utf8               Lorg/sireum/IS;
   #18 = Utf8               Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;
   #19 = Utf8               _state
   #20 = Utf8               Lorg/sireum/Z;
   #21 = Utf8               _j
   #22 = Utf8               _afterAcceptIndex
   #23 = Utf8               _found
   #24 = Utf8               Z
   #25 = Utf8               org$sireum$RecordSig$$$isOwned
   #26 = Utf8               $owned
   #27 = Utf8               ()Z
   #28 = Utf8               $owned$
   #29 = Utf8               (Lorg/sireum/RecordSig;)Z
   #30 = NameAndType        #28:#29       // $owned$:(Lorg/sireum/RecordSig;)Z
   #31 = InterfaceMethodref #6.#30        // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
   #32 = Utf8               this
   #33 = Utf8               Lorg/sireum/parser/JsonParser$LContext;
   #34 = Utf8               $owned_$eq
   #35 = Utf8               (Z)Lorg/sireum/RecordSig;
   #36 = Utf8               b
   #37 = Utf8               $owned_$eq$
   #38 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #39 = NameAndType        #37:#38       // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #40 = InterfaceMethodref #6.#39        // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #41 = Utf8               hash
   #42 = Utf8               ()Lorg/sireum/Z;
   #43 = Utf8               hash$
   #44 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #45 = NameAndType        #43:#44       // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #46 = InterfaceMethodref #6.#45        // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #47 = Utf8               $cannotMixImmutableAndMutable
   #48 = Utf8               ()Lscala/runtime/Nothing$;
   #49 = Utf8               org/sireum/Mutable
   #50 = Class              #49           // org/sireum/Mutable
   #51 = Utf8               $cannotMixImmutableAndMutable$
   #52 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #53 = NameAndType        #51:#52       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #54 = InterfaceMethodref #50.#53       // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #55 = Utf8               $hasEquals
   #56 = Utf8               $hasEquals$
   #57 = Utf8               (Lorg/sireum/Mutable;)Z
   #58 = NameAndType        #56:#57       // $hasEquals$:(Lorg/sireum/Mutable;)Z
   #59 = InterfaceMethodref #50.#58       // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
   #60 = Utf8               $hasString
   #61 = Utf8               $hasString$
   #62 = NameAndType        #61:#57       // $hasString$:(Lorg/sireum/Mutable;)Z
   #63 = InterfaceMethodref #50.#62       // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
   #64 = NameAndType        #25:#24       // org$sireum$RecordSig$$$isOwned:Z
   #65 = Fieldref           #2.#64        // org/sireum/parser/JsonParser$LContext.org$sireum$RecordSig$$$isOwned:Z
   #66 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
   #67 = Utf8               (Z)V
   #68 = Utf8               x$1
   #69 = Utf8               accepting
   #70 = Utf8               ()Lorg/sireum/IS;
   #71 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;
   #72 = NameAndType        #16:#17       // _accepting:Lorg/sireum/IS;
   #73 = Fieldref           #2.#72        // org/sireum/parser/JsonParser$LContext._accepting:Lorg/sireum/IS;
   #74 = Utf8               getAccepting
   #75 = Utf8               state
   #76 = NameAndType        #19:#20       // _state:Lorg/sireum/Z;
   #77 = Fieldref           #2.#76        // org/sireum/parser/JsonParser$LContext._state:Lorg/sireum/Z;
   #78 = Utf8               getState
   #79 = Utf8               state_$eq
   #80 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
   #81 = Utf8               setState
   #82 = Utf8               j
   #83 = NameAndType        #21:#20       // _j:Lorg/sireum/Z;
   #84 = Fieldref           #2.#83        // org/sireum/parser/JsonParser$LContext._j:Lorg/sireum/Z;
   #85 = Utf8               getJ
   #86 = Utf8               j_$eq
   #87 = Utf8               setJ
   #88 = Utf8               afterAcceptIndex
   #89 = NameAndType        #22:#20       // _afterAcceptIndex:Lorg/sireum/Z;
   #90 = Fieldref           #2.#89        // org/sireum/parser/JsonParser$LContext._afterAcceptIndex:Lorg/sireum/Z;
   #91 = Utf8               getAfterAcceptIndex
   #92 = Utf8               afterAcceptIndex_$eq
   #93 = Utf8               setAfterAcceptIndex
   #94 = Utf8               found
   #95 = NameAndType        #23:#24       // _found:Z
   #96 = Fieldref           #2.#95        // org/sireum/parser/JsonParser$LContext._found:Z
   #97 = Utf8               getFound
   #98 = Utf8               found_$eq
   #99 = Utf8               (Z)Lorg/sireum/parser/JsonParser$LContext;
  #100 = Utf8               setFound
  #101 = Utf8               toString
  #102 = Utf8               ()Ljava/lang/String;
  #103 = NameAndType        #60:#27       // $hasString:()Z
  #104 = Methodref          #2.#103       // org/sireum/parser/JsonParser$LContext.$hasString:()Z
  #105 = Utf8               string$
  #106 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
  #107 = NameAndType        #105:#106     // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #108 = InterfaceMethodref #6.#107       // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #109 = Utf8               java/lang/StringBuilder
  #110 = Class              #109          // java/lang/StringBuilder
  #111 = Utf8               <init>
  #112 = Utf8               ()V
  #113 = NameAndType        #111:#112     // "<init>":()V
  #114 = Methodref          #110.#113     // java/lang/StringBuilder."<init>":()V
  #115 = String             #15           // LContext
  #116 = Utf8               append
  #117 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #118 = NameAndType        #116:#117     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #119 = Methodref          #110.#118     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #120 = Utf8               (C)Ljava/lang/StringBuilder;
  #121 = NameAndType        #116:#120     // append:(C)Ljava/lang/StringBuilder;
  #122 = Methodref          #110.#121     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #123 = Utf8               org/sireum/String$
  #124 = Class              #123          // org/sireum/String$
  #125 = Utf8               MODULE$
  #126 = Utf8               Lorg/sireum/String$;
  #127 = NameAndType        #125:#126     // MODULE$:Lorg/sireum/String$;
  #128 = Fieldref           #124.#127     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #129 = NameAndType        #69:#70       // accepting:()Lorg/sireum/IS;
  #130 = Methodref          #2.#129       // org/sireum/parser/JsonParser$LContext.accepting:()Lorg/sireum/IS;
  #131 = Utf8               escape
  #132 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #133 = NameAndType        #131:#132     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #134 = Methodref          #124.#133     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #135 = Utf8               ,
  #136 = String             #135          // ,
  #137 = NameAndType        #75:#42       // state:()Lorg/sireum/Z;
  #138 = Methodref          #2.#137       // org/sireum/parser/JsonParser$LContext.state:()Lorg/sireum/Z;
  #139 = Utf8               (Lorg/sireum/Z;)V
  #140 = NameAndType        #111:#139     // "<init>":(Lorg/sireum/Z;)V
  #141 = Methodref          #9.#140       // org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
  #142 = NameAndType        #82:#42       // j:()Lorg/sireum/Z;
  #143 = Methodref          #2.#142       // org/sireum/parser/JsonParser$LContext.j:()Lorg/sireum/Z;
  #144 = NameAndType        #88:#42       // afterAcceptIndex:()Lorg/sireum/Z;
  #145 = Methodref          #2.#144       // org/sireum/parser/JsonParser$LContext.afterAcceptIndex:()Lorg/sireum/Z;
  #146 = Utf8               org/sireum/B
  #147 = Class              #146          // org/sireum/B
  #148 = NameAndType        #94:#27       // found:()Z
  #149 = Methodref          #2.#148       // org/sireum/parser/JsonParser$LContext.found:()Z
  #150 = NameAndType        #111:#67      // "<init>":(Z)V
  #151 = Methodref          #147.#150     // org/sireum/B."<init>":(Z)V
  #152 = NameAndType        #101:#102     // toString:()Ljava/lang/String;
  #153 = Methodref          #110.#152     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #154 = Utf8               sb
  #155 = Utf8               Ljava/lang/StringBuilder;
  #156 = Utf8               java/lang/String
  #157 = Class              #156          // java/lang/String
  #158 = Utf8               string
  #159 = Methodref          #2.#152       // org/sireum/parser/JsonParser$LContext.toString:()Ljava/lang/String;
  #160 = Utf8               apply
  #161 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #162 = NameAndType        #160:#161     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #163 = Methodref          #124.#162     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #164 = Utf8               hashCode
  #165 = Utf8               ()I
  #166 = NameAndType        #55:#27       // $hasEquals:()Z
  #167 = Methodref          #2.#166       // org/sireum/parser/JsonParser$LContext.$hasEquals:()Z
  #168 = NameAndType        #164:#165     // hashCode:()I
  #169 = Methodref          #4.#168       // java/lang/Object.hashCode:()I
  #170 = Utf8               scala/package$
  #171 = Class              #170          // scala/package$
  #172 = Utf8               Lscala/package$;
  #173 = NameAndType        #125:#172     // MODULE$:Lscala/package$;
  #174 = Fieldref           #171.#173     // scala/package$.MODULE$:Lscala/package$;
  #175 = Utf8               Seq
  #176 = Utf8               ()Lscala/collection/immutable/Seq$;
  #177 = NameAndType        #175:#176     // Seq:()Lscala/collection/immutable/Seq$;
  #178 = Methodref          #171.#177     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #179 = Utf8               scala/runtime/ScalaRunTime$
  #180 = Class              #179          // scala/runtime/ScalaRunTime$
  #181 = Utf8               Lscala/runtime/ScalaRunTime$;
  #182 = NameAndType        #125:#181     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #183 = Fieldref           #180.#182     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #184 = Utf8               getClass
  #185 = Utf8               ()Ljava/lang/Class;
  #186 = NameAndType        #184:#185     // getClass:()Ljava/lang/Class;
  #187 = Methodref          #2.#186       // org/sireum/parser/JsonParser$LContext.getClass:()Ljava/lang/Class;
  #188 = Utf8               java/lang/Class
  #189 = Class              #188          // java/lang/Class
  #190 = Utf8               getName
  #191 = NameAndType        #190:#102     // getName:()Ljava/lang/String;
  #192 = Methodref          #189.#191     // java/lang/Class.getName:()Ljava/lang/String;
  #193 = Utf8               genericWrapArray
  #194 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #195 = NameAndType        #193:#194     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #196 = Methodref          #180.#195     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #197 = Utf8               scala/collection/immutable/Seq$
  #198 = Class              #197          // scala/collection/immutable/Seq$
  #199 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #200 = NameAndType        #160:#199     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #201 = Methodref          #198.#200     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #202 = Utf8               scala/collection/Seq
  #203 = Class              #202          // scala/collection/Seq
  #204 = InterfaceMethodref #203.#168     // scala/collection/Seq.hashCode:()I
  #205 = Utf8               equals
  #206 = Utf8               (Ljava/lang/Object;)Z
  #207 = Utf8               o
  #208 = NameAndType        #205:#206     // equals:(Ljava/lang/Object;)Z
  #209 = Methodref          #4.#208       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #210 = Methodref          #2.#168       // org/sireum/parser/JsonParser$LContext.hashCode:()I
  #211 = Utf8               Ljava/lang/Object;
  #212 = Utf8               org/sireum/IS
  #213 = Class              #212          // org/sireum/IS
  #214 = Utf8               org/sireum/Z
  #215 = Class              #214          // org/sireum/Z
  #216 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
  #217 = Utf8               (Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
  #218 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #219 = NameAndType        #111:#218     // "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #220 = Methodref          #2.#219       // org/sireum/parser/JsonParser$LContext."<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #221 = Utf8               apply$default$1
  #222 = Utf8               apply$default$2
  #223 = Utf8               apply$default$3
  #224 = Utf8               apply$default$4
  #225 = Utf8               apply$default$5
  #226 = Utf8               $content
  #227 = Utf8               ()Lscala/collection/immutable/Seq;
  #228 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #229 = Utf8               scala/Tuple2
  #230 = Class              #229          // scala/Tuple2
  #231 = Utf8               type
  #232 = String             #231          // type
  #233 = Utf8               List
  #234 = Utf8               ()Lscala/collection/immutable/List$;
  #235 = NameAndType        #233:#234     // List:()Lscala/collection/immutable/List$;
  #236 = Methodref          #171.#235     // scala/package$.List:()Lscala/collection/immutable/List$;
  #237 = Utf8               org
  #238 = String             #237          // org
  #239 = Utf8               sireum
  #240 = String             #239          // sireum
  #241 = Utf8               parser
  #242 = String             #241          // parser
  #243 = Utf8               [Ljava/lang/Object;
  #244 = Class              #243          // "[Ljava/lang/Object;"
  #245 = Utf8               wrapRefArray
  #246 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #247 = NameAndType        #245:#246     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #248 = Methodref          #180.#247     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #249 = Utf8               scala/collection/immutable/List$
  #250 = Class              #249          // scala/collection/immutable/List$
  #251 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #252 = NameAndType        #160:#251     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #253 = Methodref          #250.#252     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #254 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #255 = NameAndType        #111:#254     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #256 = Methodref          #230.#255     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #257 = String             #69           // accepting
  #258 = String             #75           // state
  #259 = String             #82           // j
  #260 = String             #88           // afterAcceptIndex
  #261 = String             #94           // found
  #262 = Utf8               scala/collection/immutable/Seq
  #263 = Class              #262          // scala/collection/immutable/Seq
  #264 = Utf8               $clone
  #265 = Utf8               ()Lorg/sireum/parser/JsonParser$LContext;
  #266 = Utf8               org/sireum/helper$
  #267 = Class              #266          // org/sireum/helper$
  #268 = Utf8               Lorg/sireum/helper$;
  #269 = NameAndType        #125:#268     // MODULE$:Lorg/sireum/helper$;
  #270 = Fieldref           #267.#269     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #271 = Utf8               cloneAssign
  #272 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #273 = NameAndType        #271:#272     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #274 = Methodref          #267.#273     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #275 = Utf8               value
  #276 = NameAndType        #275:#42      // value:()Lorg/sireum/Z;
  #277 = Methodref          #9.#276       // org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
  #278 = NameAndType        #275:#27      // value:()Z
  #279 = Methodref          #147.#278     // org/sireum/B.value:()Z
  #280 = Utf8               r
  #281 = Utf8               update
  #282 = Utf8               newState
  #283 = NameAndType        #79:#80       // state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
  #284 = Methodref          #2.#283       // org/sireum/parser/JsonParser$LContext.state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
  #285 = Utf8               org/sireum/package$
  #286 = Class              #285          // org/sireum/package$
  #287 = Utf8               Lorg/sireum/package$;
  #288 = NameAndType        #125:#287     // MODULE$:Lorg/sireum/package$;
  #289 = Fieldref           #286.#288     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #290 = Utf8               T
  #291 = NameAndType        #290:#27      // T:()Z
  #292 = Methodref          #286.#291     // org/sireum/package$.T:()Z
  #293 = NameAndType        #98:#99       // found_$eq:(Z)Lorg/sireum/parser/JsonParser$LContext;
  #294 = Methodref          #2.#293       // org/sireum/parser/JsonParser$LContext.found_$eq:(Z)Lorg/sireum/parser/JsonParser$LContext;
  #295 = Utf8               org/sireum/B$
  #296 = Class              #295          // org/sireum/B$
  #297 = Utf8               Lorg/sireum/B$;
  #298 = NameAndType        #125:#297     // MODULE$:Lorg/sireum/B$;
  #299 = Fieldref           #296.#298     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #300 = NameAndType        #160:#272     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #301 = Methodref          #213.#300     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #302 = Utf8               $4B
  #303 = Utf8               (Z)Z
  #304 = NameAndType        #302:#303     // $4B:(Z)Z
  #305 = Methodref          #296.#304     // org/sireum/B$.$4B:(Z)Z
  #306 = Utf8               org/sireum/Z$
  #307 = Class              #306          // org/sireum/Z$
  #308 = Utf8               Lorg/sireum/Z$;
  #309 = NameAndType        #125:#308     // MODULE$:Lorg/sireum/Z$;
  #310 = Fieldref           #307.#309     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #311 = Utf8               (I)Lorg/sireum/Z;
  #312 = NameAndType        #160:#311     // apply:(I)Lorg/sireum/Z;
  #313 = Methodref          #307.#312     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #314 = Utf8               $plus
  #315 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #316 = NameAndType        #314:#315     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #317 = InterfaceMethodref #215.#316     // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #318 = NameAndType        #92:#80       // afterAcceptIndex_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
  #319 = Methodref          #2.#318       // org/sireum/parser/JsonParser$LContext.afterAcceptIndex_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
  #320 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #321 = NameAndType        #34:#35       // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #322 = Methodref          #2.#321       // org/sireum/parser/JsonParser$LContext.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #323 = Utf8               ()Ljava/lang/Object;
  #324 = NameAndType        #264:#265     // $clone:()Lorg/sireum/parser/JsonParser$LContext;
  #325 = Methodref          #2.#324       // org/sireum/parser/JsonParser$LContext.$clone:()Lorg/sireum/parser/JsonParser$LContext;
  #326 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #327 = Utf8               (Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
  #328 = Utf8               __accepting
  #329 = Utf8               __state
  #330 = Utf8               __j
  #331 = Utf8               __afterAcceptIndex
  #332 = Utf8               __found
  #333 = Methodref          #4.#113       // java/lang/Object."<init>":()V
  #334 = Utf8               $init$
  #335 = Utf8               (Lorg/sireum/Mutable;)V
  #336 = NameAndType        #334:#335     // $init$:(Lorg/sireum/Mutable;)V
  #337 = InterfaceMethodref #50.#336      // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #338 = Utf8               (Lorg/sireum/RecordSig;)V
  #339 = NameAndType        #334:#338     // $init$:(Lorg/sireum/RecordSig;)V
  #340 = InterfaceMethodref #6.#339       // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #341 = Utf8               Signature
  #342 = Utf8               Code
  #343 = Utf8               LineNumberTable
  #344 = Utf8               LocalVariableTable
  #345 = Utf8               MethodParameters
  #346 = Utf8               StackMapTable
  #347 = Utf8               InnerClasses
  #348 = Utf8               SourceFile
  #349 = Utf8               ScalaInlineInfo
  #350 = Utf8               Scala
{
  private org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> _accepting;
    descriptor: Lorg/sireum/IS;
    flags: (0x0002) ACC_PRIVATE
    Signature: #18                          // Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  private org.sireum.Z _state;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _j;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.Z _afterAcceptIndex;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private boolean _found;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #31                 // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #40                 // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #46                 // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #54                 // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #63                 // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #65                 // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #65                 // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> accepting();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #73                 // Field _accepting:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;
    Signature: #71                          // ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  public org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> getAccepting();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #73                 // Field _accepting:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;
    Signature: #71                          // ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  public org.sireum.Z state();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #77                 // Field _state:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.Z getState();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #77                 // Field _state:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.parser.JsonParser$LContext state_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #77                 // Field _state:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1 state   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      state                          final

  public org.sireum.parser.JsonParser$LContext setState(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #77                 // Field _state:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1 state   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      state                          final

  public org.sireum.Z j();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field _j:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.Z getJ();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field _j:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.parser.JsonParser$LContext j_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #84                 // Field _j:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      j                              final

  public org.sireum.parser.JsonParser$LContext setJ(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #84                 // Field _j:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1     j   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      j                              final

  public org.sireum.Z afterAcceptIndex();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #90                 // Field _afterAcceptIndex:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.Z getAfterAcceptIndex();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #90                 // Field _afterAcceptIndex:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.parser.JsonParser$LContext afterAcceptIndex_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #90                 // Field _afterAcceptIndex:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1 afterAcceptIndex   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      afterAcceptIndex               final

  public org.sireum.parser.JsonParser$LContext setAfterAcceptIndex(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #90                 // Field _afterAcceptIndex:Lorg/sireum/Z;
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1 afterAcceptIndex   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      afterAcceptIndex               final

  public boolean found();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #96                 // Field _found:Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public boolean getFound();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #96                 // Field _found:Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.parser.JsonParser$LContext found_$eq(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #96                 // Field _found:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1 found   Z
    MethodParameters:
      Name                           Flags
      found                          final

  public org.sireum.parser.JsonParser$LContext setFound(boolean);
    descriptor: (Z)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #96                 // Field _found:Z
         5: aload_0
         6: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       7     1 found   Z
    MethodParameters:
      Name                           Flags
      found                          final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #104                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #108                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          164
        14: new           #110                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #114                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #115                // String LContext
        25: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #122                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #128                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        44: invokevirtual #134                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #136                // String ,
        54: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #128                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: new           #9                  // class org/sireum/parser/Json$State
        65: dup
        66: aload_0
        67: invokevirtual #138                // Method state:()Lorg/sireum/Z;
        70: invokespecial #141                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        73: invokevirtual #134                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: ldc           #136                // String ,
        83: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: getstatic     #128                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        91: aload_0
        92: invokevirtual #143                // Method j:()Lorg/sireum/Z;
        95: invokevirtual #134                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        98: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: ldc           #136                // String ,
       105: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: getstatic     #128                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       113: aload_0
       114: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
       117: invokevirtual #134                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       120: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       123: pop
       124: aload_1
       125: ldc           #136                // String ,
       127: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: getstatic     #128                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       135: new           #147                // class org/sireum/B
       138: dup
       139: aload_0
       140: invokevirtual #149                // Method found:()Z
       143: invokespecial #151                // Method org/sireum/B."<init>":(Z)V
       146: invokevirtual #134                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       149: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       152: pop
       153: aload_1
       154: bipush        41
       156: invokevirtual #122                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       159: pop
       160: aload_1
       161: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       164: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 149
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     142     1    sb   Ljava/lang/StringBuilder;
            0     165     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #104                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #108                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #128                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #159                // Method toString:()Ljava/lang/String;
        21: invokevirtual #163                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #167                // Method $hasEquals:()Z
         4: ifeq          14
         7: aload_0
         8: invokespecial #169                // Method java/lang/Object.hashCode:()I
        11: goto          101
        14: getstatic     #174                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #178                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        20: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: bipush        6
        25: anewarray     #4                  // class java/lang/Object
        28: dup
        29: iconst_0
        30: aload_0
        31: invokevirtual #187                // Method getClass:()Ljava/lang/Class;
        34: invokevirtual #192                // Method java/lang/Class.getName:()Ljava/lang/String;
        37: aastore
        38: dup
        39: iconst_1
        40: aload_0
        41: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        44: aastore
        45: dup
        46: iconst_2
        47: new           #9                  // class org/sireum/parser/Json$State
        50: dup
        51: aload_0
        52: invokevirtual #138                // Method state:()Lorg/sireum/Z;
        55: invokespecial #141                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        58: aastore
        59: dup
        60: iconst_3
        61: aload_0
        62: invokevirtual #143                // Method j:()Lorg/sireum/Z;
        65: aastore
        66: dup
        67: iconst_4
        68: aload_0
        69: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
        72: aastore
        73: dup
        74: iconst_5
        75: new           #147                // class org/sireum/B
        78: dup
        79: aload_0
        80: invokevirtual #149                // Method found:()Z
        83: invokespecial #151                // Method org/sireum/B."<init>":(Z)V
        86: aastore
        87: invokevirtual #196                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        90: invokevirtual #201                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        93: checkcast     #203                // class scala/collection/Seq
        96: invokeinterface #204,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       101: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 86
          stack = [ int ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     102     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=9, args_size=2
         0: aload_0
         1: invokevirtual #167                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          213
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          213
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/parser/JsonParser$LContext
        30: ifeq          204
        33: aload_3
        34: checkcast     #2                  // class org/sireum/parser/JsonParser$LContext
        37: astore        4
        39: aload_0
        40: invokevirtual #210                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #210                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          200
        55: aload_0
        56: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        59: aload         4
        61: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          199
        79: aload         5
        81: invokevirtual #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          199
        87: aload_0
        88: invokevirtual #138                // Method state:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #138                // Method state:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          199
       111: aload         6
       113: invokevirtual #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          199
       119: aload_0
       120: invokevirtual #143                // Method j:()Lorg/sireum/Z;
       123: aload         4
       125: invokevirtual #143                // Method j:()Lorg/sireum/Z;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          199
       143: aload         7
       145: invokevirtual #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          199
       151: aload_0
       152: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
       155: aload         4
       157: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
       160: astore        8
       162: dup
       163: ifnonnull     175
       166: pop
       167: aload         8
       169: ifnull        183
       172: goto          199
       175: aload         8
       177: invokevirtual #209                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       180: ifeq          199
       183: aload_0
       184: invokevirtual #149                // Method found:()Z
       187: aload         4
       189: invokevirtual #149                // Method found:()Z
       192: if_icmpne     199
       195: iconst_1
       196: goto          200
       199: iconst_0
       200: istore_2
       201: goto          212
       204: goto          207
       207: iconst_0
       208: istore_2
       209: goto          212
       212: iload_2
       213: ireturn
      StackMapTable: number_of_entries = 17
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/parser/JsonParser$LContext ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$LContext, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$LContext, class org/sireum/IS, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$LContext, class org/sireum/IS, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$LContext, class org/sireum/IS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 248 /* chop */
          offset_delta = 15
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$LContext ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$LContext, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     214     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0     214     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.parser.JsonParser$LContext apply(org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.Z, org.sireum.Z, org.sireum.Z, boolean);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: new           #2                  // class org/sireum/parser/JsonParser$LContext
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: iload         5
        11: invokespecial #220                // Method "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
        14: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0      15     1 accepting   Lorg/sireum/IS;
            0      15     2 state   Lorg/sireum/Z;
            0      15     3     j   Lorg/sireum/Z;
            0      15     4 afterAcceptIndex   Lorg/sireum/Z;
            0      15     5 found   Z
    Signature: #217                         // (Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)Lorg/sireum/parser/JsonParser$LContext;
    MethodParameters:
      Name                           Flags
      accepting                      final
      state                          final
      j                              final
      afterAcceptIndex               final
      found                          final

  public org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B> apply$default$1();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;
    Signature: #71                          // ()Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #138                // Method state:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.Z apply$default$3();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #143                // Method j:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.Z apply$default$4();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public boolean apply$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #149                // Method found:()Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #174                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #178                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: bipush        6
        11: anewarray     #230                // class scala/Tuple2
        14: dup
        15: iconst_0
        16: new           #230                // class scala/Tuple2
        19: dup
        20: ldc           #232                // String type
        22: getstatic     #174                // Field scala/package$.MODULE$:Lscala/package$;
        25: invokevirtual #236                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        28: getstatic     #183                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        31: iconst_4
        32: anewarray     #157                // class java/lang/String
        35: dup
        36: iconst_0
        37: ldc           #238                // String org
        39: aastore
        40: dup
        41: iconst_1
        42: ldc           #240                // String sireum
        44: aastore
        45: dup
        46: iconst_2
        47: ldc           #242                // String parser
        49: aastore
        50: dup
        51: iconst_3
        52: ldc           #115                // String LContext
        54: aastore
        55: checkcast     #244                // class "[Ljava/lang/Object;"
        58: invokevirtual #248                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        61: invokevirtual #253                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        64: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        67: aastore
        68: dup
        69: iconst_1
        70: new           #230                // class scala/Tuple2
        73: dup
        74: ldc_w         #257                // String accepting
        77: aload_0
        78: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        81: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        84: aastore
        85: dup
        86: iconst_2
        87: new           #230                // class scala/Tuple2
        90: dup
        91: ldc_w         #258                // String state
        94: new           #9                  // class org/sireum/parser/Json$State
        97: dup
        98: aload_0
        99: invokevirtual #138                // Method state:()Lorg/sireum/Z;
       102: invokespecial #141                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
       105: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       108: aastore
       109: dup
       110: iconst_3
       111: new           #230                // class scala/Tuple2
       114: dup
       115: ldc_w         #259                // String j
       118: aload_0
       119: invokevirtual #143                // Method j:()Lorg/sireum/Z;
       122: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       125: aastore
       126: dup
       127: iconst_4
       128: new           #230                // class scala/Tuple2
       131: dup
       132: ldc_w         #260                // String afterAcceptIndex
       135: aload_0
       136: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
       139: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       142: aastore
       143: dup
       144: iconst_5
       145: new           #230                // class scala/Tuple2
       148: dup
       149: ldc_w         #261                // String found
       152: new           #147                // class org/sireum/B
       155: dup
       156: aload_0
       157: invokevirtual #149                // Method found:()Z
       160: invokespecial #151                // Method org/sireum/B."<init>":(Z)V
       163: invokespecial #256                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       166: aastore
       167: checkcast     #244                // class "[Ljava/lang/Object;"
       170: invokevirtual #248                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       173: invokevirtual #201                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       176: checkcast     #263                // class scala/collection/immutable/Seq
       179: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     180     0  this   Lorg/sireum/parser/JsonParser$LContext;
    Signature: #228                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.parser.JsonParser$LContext $clone();
    descriptor: ()Lorg/sireum/parser/JsonParser$LContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=2, args_size=1
         0: new           #2                  // class org/sireum/parser/JsonParser$LContext
         3: dup
         4: getstatic     #270                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: aload_0
         8: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        11: invokevirtual #274                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        14: checkcast     #213                // class org/sireum/IS
        17: getstatic     #270                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        20: new           #9                  // class org/sireum/parser/Json$State
        23: dup
        24: aload_0
        25: invokevirtual #138                // Method state:()Lorg/sireum/Z;
        28: invokespecial #141                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        31: invokevirtual #274                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        34: checkcast     #9                  // class org/sireum/parser/Json$State
        37: invokevirtual #277                // Method org/sireum/parser/Json$State.value:()Lorg/sireum/Z;
        40: getstatic     #270                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        43: aload_0
        44: invokevirtual #143                // Method j:()Lorg/sireum/Z;
        47: invokevirtual #274                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        50: checkcast     #215                // class org/sireum/Z
        53: getstatic     #270                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        56: aload_0
        57: invokevirtual #145                // Method afterAcceptIndex:()Lorg/sireum/Z;
        60: invokevirtual #274                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        63: checkcast     #215                // class org/sireum/Z
        66: getstatic     #270                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        69: new           #147                // class org/sireum/B
        72: dup
        73: aload_0
        74: invokevirtual #149                // Method found:()Z
        77: invokespecial #151                // Method org/sireum/B."<init>":(Z)V
        80: invokevirtual #274                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        83: checkcast     #147                // class org/sireum/B
        86: invokevirtual #279                // Method org/sireum/B.value:()Z
        89: invokespecial #220                // Method "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
        92: astore_1
        93: aload_1
        94: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           93       1     1     r   Lorg/sireum/parser/JsonParser$LContext;
            0      95     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public void update(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #284                // Method state_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
         5: pop
         6: aload_0
         7: getstatic     #289                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        10: invokevirtual #292                // Method org/sireum/package$.T:()Z
        13: invokevirtual #294                // Method found_$eq:(Z)Lorg/sireum/parser/JsonParser$LContext;
        16: pop
        17: getstatic     #299                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        20: aload_0
        21: invokevirtual #130                // Method accepting:()Lorg/sireum/IS;
        24: new           #9                  // class org/sireum/parser/Json$State
        27: dup
        28: aload_0
        29: invokevirtual #138                // Method state:()Lorg/sireum/Z;
        32: invokespecial #141                // Method org/sireum/parser/Json$State."<init>":(Lorg/sireum/Z;)V
        35: invokevirtual #301                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        38: checkcast     #147                // class org/sireum/B
        41: invokevirtual #279                // Method org/sireum/B.value:()Z
        44: invokevirtual #305                // Method org/sireum/B$.$4B:(Z)Z
        47: ifeq          74
        50: aload_0
        51: aload_0
        52: invokevirtual #143                // Method j:()Lorg/sireum/Z;
        55: getstatic     #310                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        58: iconst_1
        59: invokevirtual #313                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        62: invokeinterface #317,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        67: invokevirtual #319                // Method afterAcceptIndex_$eq:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$LContext;
        70: pop
        71: goto          74
        74: return
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 74
      LineNumberTable:
        line 129: 0
        line 130: 6
        line 131: 17
        line 132: 50
        line 131: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      75     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0      75     1 newState   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      newState                       final

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #322                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #325                // Method $clone:()Lorg/sireum/parser/JsonParser$LContext;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #325                // Method $clone:()Lorg/sireum/parser/JsonParser$LContext;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$LContext;

  public org.sireum.parser.JsonParser$LContext(org.sireum.IS<org.sireum.parser.Json$State, org.sireum.B>, org.sireum.Z, org.sireum.Z, org.sireum.Z, boolean);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: invokespecial #333                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #337                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #340                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: aload_1
        14: putfield      #73                 // Field _accepting:Lorg/sireum/IS;
        17: aload_0
        18: aload_2
        19: putfield      #77                 // Field _state:Lorg/sireum/Z;
        22: aload_0
        23: aload_3
        24: putfield      #84                 // Field _j:Lorg/sireum/Z;
        27: aload_0
        28: aload         4
        30: putfield      #90                 // Field _afterAcceptIndex:Lorg/sireum/Z;
        33: aload_0
        34: iload         5
        36: putfield      #96                 // Field _found:Z
        39: return
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lorg/sireum/parser/JsonParser$LContext;
            0      40     1 __accepting   Lorg/sireum/IS;
            0      40     2 __state   Lorg/sireum/Z;
            0      40     3   __j   Lorg/sireum/Z;
            0      40     4 __afterAcceptIndex   Lorg/sireum/Z;
            0      40     5 __found   Z
    Signature: #327                         // (Lorg/sireum/IS<Lorg/sireum/parser/Json$State;Lorg/sireum/B;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;Z)V
    MethodParameters:
      Name                           Flags
      __accepting                    final
      __state                        final
      __j                            final
      __afterAcceptIndex             final
      __found                        final
}
InnerClasses:
  public static final #12= #9 of #11;     // State=class org/sireum/parser/Json$State of class org/sireum/parser/Json
  public static final #15= #2 of #14;     // LContext=class org/sireum/parser/JsonParser$LContext of class org/sireum/parser/JsonParser
SourceFile: "JsonParser.scala"
  ScalaInlineInfo: length = 0xDB (unknown attribute)
   01 01 00 2B 00 2F 00 30 01 01 08 01 43 01 01 08
   01 46 01 01 08 01 09 01 00 E2 00 E3 01 00 37 00
   1B 01 00 3C 00 1B 01 00 1A 00 1B 01 00 22 01 40
   01 00 22 00 23 01 00 6F 00 DA 01 00 45 00 46 01
   00 58 00 2A 01 00 5C 00 50 01 00 A0 00 D8 01 00
   DD 00 46 01 00 DE 00 2A 01 00 DF 00 2A 01 00 E0
   00 2A 01 00 E1 00 1B 01 00 CD 00 CE 01 00 5E 00
   1B 01 00 62 00 63 01 00 4A 00 46 01 00 5B 00 2A
   01 00 61 00 1B 01 00 55 00 2A 01 00 4E 00 2A 01
   00 29 00 2A 01 00 A4 00 A5 01 00 52 00 2A 01 00
   56 00 50 01 00 19 00 1B 01 00 42 00 43 01 00 5D
   00 50 01 00 64 00 63 01 00 57 00 50 01 00 51 00
   50 01 00 4B 00 2A 01 00 4F 00 50 01 00 9E 00 66
   01 00 65 00 66 01 01 19 00 8B 01
  Scala: length = 0x0 (unknown attribute)

