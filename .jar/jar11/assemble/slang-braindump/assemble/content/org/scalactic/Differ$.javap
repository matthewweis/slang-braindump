Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/Differ$.class
  Last modified May 29, 2022; size 2863 bytes
  SHA-256 checksum 16623f2f1d9092f9275ba6af7ceb87ef7cc58acad54062ea3fd5aad239d4294d
  Compiled from "Differ.scala"
public final class org.scalactic.Differ$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalactic/Differ$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               org/scalactic/Differ$
    #2 = Class              #1            // org/scalactic/Differ$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Differ.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               MODULE$
   #12 = Utf8               Lorg/scalactic/Differ$;
   #13 = Utf8               <clinit>
   #14 = Utf8               ()V
   #15 = Utf8               <init>
   #16 = NameAndType        #15:#14       // "<init>":()V
   #17 = Methodref          #2.#16        // org/scalactic/Differ$."<init>":()V
   #18 = NameAndType        #11:#12       // MODULE$:Lorg/scalactic/Differ$;
   #19 = Fieldref           #2.#18        // org/scalactic/Differ$.MODULE$:Lorg/scalactic/Differ$;
   #20 = Utf8               simpleClassName
   #21 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #22 = Utf8               v
   #23 = Utf8               getClass
   #24 = Utf8               ()Ljava/lang/Class;
   #25 = NameAndType        #23:#24       // getClass:()Ljava/lang/Class;
   #26 = Methodref          #4.#25        // java/lang/Object.getClass:()Ljava/lang/Class;
   #27 = Utf8               java/lang/Class
   #28 = Class              #27           // java/lang/Class
   #29 = Utf8               getName
   #30 = Utf8               ()Ljava/lang/String;
   #31 = NameAndType        #29:#30       // getName:()Ljava/lang/String;
   #32 = Methodref          #28.#31       // java/lang/Class.getName:()Ljava/lang/String;
   #33 = Utf8               .
   #34 = String             #33           // .
   #35 = Utf8               java/lang/String
   #36 = Class              #35           // java/lang/String
   #37 = Utf8               lastIndexOf
   #38 = Utf8               (Ljava/lang/String;)I
   #39 = NameAndType        #37:#38       // lastIndexOf:(Ljava/lang/String;)I
   #40 = Methodref          #36.#39       // java/lang/String.lastIndexOf:(Ljava/lang/String;)I
   #41 = Utf8               substring
   #42 = Utf8               (I)Ljava/lang/String;
   #43 = NameAndType        #41:#42       // substring:(I)Ljava/lang/String;
   #44 = Methodref          #36.#43       // java/lang/String.substring:(I)Ljava/lang/String;
   #45 = Utf8               $colon$colon
   #46 = String             #45           // $colon$colon
   #47 = Utf8               equals
   #48 = Utf8               (Ljava/lang/Object;)Z
   #49 = NameAndType        #47:#48       // equals:(Ljava/lang/Object;)Z
   #50 = Methodref          #4.#49        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #51 = Utf8               List
   #52 = String             #51           // List
   #53 = Utf8               Set$Set
   #54 = String             #53           // Set$Set
   #55 = Utf8               startsWith
   #56 = Utf8               (Ljava/lang/String;)Z
   #57 = NameAndType        #55:#56       // startsWith:(Ljava/lang/String;)Z
   #58 = Methodref          #36.#57       // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #59 = Utf8               Set
   #60 = String             #59           // Set
   #61 = Utf8               Map$Map
   #62 = String             #61           // Map$Map
   #63 = Utf8               Map
   #64 = String             #63           // Map
   #65 = Utf8               Tuple
   #66 = String             #65           // Tuple
   #67 = Utf8               scala/collection/StringOps$
   #68 = Class              #67           // scala/collection/StringOps$
   #69 = Utf8               Lscala/collection/StringOps$;
   #70 = NameAndType        #11:#69       // MODULE$:Lscala/collection/StringOps$;
   #71 = Fieldref           #68.#70       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #72 = Utf8               scala/Predef$
   #73 = Class              #72           // scala/Predef$
   #74 = Utf8               Lscala/Predef$;
   #75 = NameAndType        #11:#74       // MODULE$:Lscala/Predef$;
   #76 = Fieldref           #73.#75       // scala/Predef$.MODULE$:Lscala/Predef$;
   #77 = Utf8               augmentString
   #78 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #79 = NameAndType        #77:#78       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #80 = Methodref          #73.#79       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #81 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #82 = MethodType         #81           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #83 = Utf8               $anonfun$simpleClassName$1$adapted
   #84 = NameAndType        #83:#81       // $anonfun$simpleClassName$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #85 = Methodref          #2.#84        // org/scalactic/Differ$.$anonfun$simpleClassName$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #86 = MethodHandle       6:#85         // REF_invokeStatic org/scalactic/Differ$.$anonfun$simpleClassName$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #87 = Integer            1
   #88 = Utf8               java/lang/invoke/LambdaMetafactory
   #89 = Class              #88           // java/lang/invoke/LambdaMetafactory
   #90 = Utf8               altMetafactory
   #91 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #92 = NameAndType        #90:#91       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #93 = Methodref          #89.#92       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #94 = MethodHandle       6:#93         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = Utf8               apply
   #96 = Utf8               ()Lscala/Function1;
   #97 = NameAndType        #95:#96       // apply:()Lscala/Function1;
   #98 = InvokeDynamic      #0:#97        // #0:apply:()Lscala/Function1;
   #99 = Utf8               takeWhile$extension
  #100 = Utf8               (Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #101 = NameAndType        #99:#100      // takeWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #102 = Methodref          #68.#101      // scala/collection/StringOps$.takeWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #103 = Utf8               className
  #104 = Utf8               Ljava/lang/String;
  #105 = Utf8               lastIdxOfDot
  #106 = Utf8               I
  #107 = Utf8               shortName
  #108 = Utf8               this
  #109 = Utf8               Ljava/lang/Object;
  #110 = Utf8               $anonfun$simpleClassName$1
  #111 = Utf8               (C)Z
  #112 = Utf8               x$1
  #113 = Utf8               C
  #114 = Methodref          #4.#16        // java/lang/Object."<init>":()V
  #115 = Utf8               scala/runtime/BoxesRunTime
  #116 = Class              #115          // scala/runtime/BoxesRunTime
  #117 = Utf8               unboxToChar
  #118 = Utf8               (Ljava/lang/Object;)C
  #119 = NameAndType        #117:#118     // unboxToChar:(Ljava/lang/Object;)C
  #120 = Methodref          #116.#119     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #121 = NameAndType        #110:#111     // $anonfun$simpleClassName$1:(C)Z
  #122 = Methodref          #2.#121       // org/scalactic/Differ$.$anonfun$simpleClassName$1:(C)Z
  #123 = Utf8               boxToBoolean
  #124 = Utf8               (Z)Ljava/lang/Boolean;
  #125 = NameAndType        #123:#124     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #126 = Methodref          #116.#125     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #127 = Utf8               $deserializeLambda$
  #128 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #129 = Utf8               scala/runtime/LambdaDeserialize
  #130 = Class              #129          // scala/runtime/LambdaDeserialize
  #131 = Utf8               bootstrap
  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #133 = NameAndType        #131:#132     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #134 = Methodref          #130.#133     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #135 = MethodHandle       6:#134        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #136 = Utf8               lambdaDeserialize
  #137 = NameAndType        #136:#128     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #138 = InvokeDynamic      #1:#137       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #139 = Utf8               Code
  #140 = Utf8               LineNumberTable
  #141 = Utf8               StackMapTable
  #142 = Utf8               LocalVariableTable
  #143 = Utf8               MethodParameters
  #144 = Utf8               InnerClasses
  #145 = Utf8               SourceFile
  #146 = Utf8               BootstrapMethods
  #147 = Utf8               ScalaInlineInfo
  #148 = Utf8               Scala
{
  public static final org.scalactic.Differ$ MODULE$;
    descriptor: Lorg/scalactic/Differ$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalactic/Differ$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Lorg/scalactic/Differ$;
        10: return
      LineNumberTable:
        line 28: 0

  public java.lang.String simpleClassName(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
         4: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
         7: astore_2
         8: aload_2
         9: ldc           #34                 // String .
        11: invokevirtual #40                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
        14: istore_3
        15: iload_3
        16: iconst_0
        17: if_icmplt     30
        20: aload_2
        21: iload_3
        22: iconst_1
        23: iadd
        24: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
        27: goto          31
        30: aload_2
        31: astore        4
        33: aload         4
        35: ldc           #46                 // String $colon$colon
        37: astore        5
        39: dup
        40: ifnonnull     52
        43: pop
        44: aload         5
        46: ifnull        60
        49: goto          65
        52: aload         5
        54: invokevirtual #50                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          65
        60: ldc           #52                 // String List
        62: goto          129
        65: aload         4
        67: ldc           #54                 // String Set$Set
        69: invokevirtual #58                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        72: ifeq          80
        75: ldc           #60                 // String Set
        77: goto          129
        80: aload         4
        82: ldc           #62                 // String Map$Map
        84: invokevirtual #58                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        87: ifeq          95
        90: ldc           #64                 // String Map
        92: goto          129
        95: aload         4
        97: ldc           #66                 // String Tuple
        99: invokevirtual #58                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       102: ifeq          127
       105: getstatic     #71                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       108: getstatic     #76                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       111: aload         4
       113: invokevirtual #80                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       116: invokedynamic #98,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       121: invokevirtual #102                // Method scala/collection/StringOps$.takeWhile$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
       124: goto          129
       127: aload         4
       129: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ class java/lang/String, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class org/scalactic/Differ$, class java/lang/Object, class java/lang/String, int, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 4 /* same */
        frame_type = 14 /* same */
        frame_type = 14 /* same */
        frame_type = 31 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 31: 0
        line 32: 8
        line 34: 15
        line 35: 20
        line 37: 30
        line 38: 33
        line 39: 60
        line 40: 65
        line 41: 75
        line 42: 80
        line 43: 90
        line 44: 95
        line 45: 108
        line 47: 127
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8     121     2 className   Ljava/lang/String;
           15     114     3 lastIdxOfDot   I
           33      96     4 shortName   Ljava/lang/String;
            0     130     0  this   Lorg/scalactic/Differ$;
            0     130     1     v   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v                              final

  public static final boolean $anonfun$simpleClassName$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        36
         3: if_icmpeq     10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$1   C
    MethodParameters:
      Name                           Flags
      x$1                            final

  private org.scalactic.Differ$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #114                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 51: 0
        line 28: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/Differ$;

  public static final java.lang.Object $anonfun$simpleClassName$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #120                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #122                // Method $anonfun$simpleClassName$1:(C)Z
         7: invokestatic  #126                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #138,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Differ.scala"
BootstrapMethods:
  0: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #86 REF_invokeStatic org/scalactic/Differ$.$anonfun$simpleClassName$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #82 (Ljava/lang/Object;)Ljava/lang/Object;
      #87 1
  1: #135 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #86 REF_invokeStatic org/scalactic/Differ$.$anonfun$simpleClassName$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 6E 00 6F 01 00 53 00 51 01 00 0F
   00 0E 01 00 14 00 15 01
  Scala: length = 0x0 (unknown attribute)

