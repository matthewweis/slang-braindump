Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/paths/Util.class
  Last modified May 29, 2022; size 4483 bytes
  SHA-256 checksum 11c5f25e1bb42c18331562b3ba2d4ff47cf54719b045c4cd24ee137e61b0ad9a
  Compiled from "Util.java"
public class coursier.paths.Util
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/paths/Util
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 9, attributes: 1
Constant pool:
    #1 = Utf8               coursier/paths/Util
    #2 = Class              #1            // coursier/paths/Util
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Util.java
    #6 = Utf8               propertyRegex
    #7 = Utf8               Ljava/util/regex/Pattern;
    #8 = Utf8               useColorOutput0
    #9 = Utf8               Ljava/lang/Boolean;
   #10 = Utf8               useAnsiOutput0
   #11 = Utf8               <init>
   #12 = Utf8               ()V
   #13 = NameAndType        #11:#12       // "<init>":()V
   #14 = Methodref          #4.#13        // java/lang/Object."<init>":()V
   #15 = Utf8               expandProperties
   #16 = Utf8               (Ljava/util/Map;)Ljava/util/Map;
   #17 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
   #18 = Utf8               java/lang/System
   #19 = Class              #18           // java/lang/System
   #20 = Utf8               getProperties
   #21 = Utf8               ()Ljava/util/Properties;
   #22 = NameAndType        #20:#21       // getProperties:()Ljava/util/Properties;
   #23 = Methodref          #19.#22       // java/lang/System.getProperties:()Ljava/util/Properties;
   #24 = Utf8               (Ljava/util/Properties;Ljava/util/Map;)Ljava/util/Map;
   #25 = NameAndType        #15:#24       // expandProperties:(Ljava/util/Properties;Ljava/util/Map;)Ljava/util/Map;
   #26 = Methodref          #2.#25        // coursier/paths/Util.expandProperties:(Ljava/util/Properties;Ljava/util/Map;)Ljava/util/Map;
   #27 = Utf8               (Ljava/util/Properties;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
   #28 = Utf8               java/util/LinkedHashMap
   #29 = Class              #28           // java/util/LinkedHashMap
   #30 = Utf8               java/util/Map
   #31 = Class              #30           // java/util/Map
   #32 = Utf8               size
   #33 = Utf8               ()I
   #34 = NameAndType        #32:#33       // size:()I
   #35 = InterfaceMethodref #31.#34       // java/util/Map.size:()I
   #36 = Utf8               (I)V
   #37 = NameAndType        #11:#36       // "<init>":(I)V
   #38 = Methodref          #29.#37       // java/util/LinkedHashMap."<init>":(I)V
   #39 = Utf8               keySet
   #40 = Utf8               ()Ljava/util/Set;
   #41 = NameAndType        #39:#40       // keySet:()Ljava/util/Set;
   #42 = InterfaceMethodref #31.#41       // java/util/Map.keySet:()Ljava/util/Set;
   #43 = Utf8               java/util/Set
   #44 = Class              #43           // java/util/Set
   #45 = Utf8               iterator
   #46 = Utf8               ()Ljava/util/Iterator;
   #47 = NameAndType        #45:#46       // iterator:()Ljava/util/Iterator;
   #48 = InterfaceMethodref #44.#47       // java/util/Set.iterator:()Ljava/util/Iterator;
   #49 = Utf8               java/util/Iterator
   #50 = Class              #49           // java/util/Iterator
   #51 = Utf8               hasNext
   #52 = Utf8               ()Z
   #53 = NameAndType        #51:#52       // hasNext:()Z
   #54 = InterfaceMethodref #50.#53       // java/util/Iterator.hasNext:()Z
   #55 = Utf8               next
   #56 = Utf8               ()Ljava/lang/Object;
   #57 = NameAndType        #55:#56       // next:()Ljava/lang/Object;
   #58 = InterfaceMethodref #50.#57       // java/util/Iterator.next:()Ljava/lang/Object;
   #59 = Utf8               java/lang/String
   #60 = Class              #59           // java/lang/String
   #61 = Utf8               get
   #62 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #63 = NameAndType        #61:#62       // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #64 = InterfaceMethodref #31.#63       // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #65 = Utf8               ?
   #66 = String             #65           // ?
   #67 = Utf8               endsWith
   #68 = Utf8               (Ljava/lang/String;)Z
   #69 = NameAndType        #67:#68       // endsWith:(Ljava/lang/String;)Z
   #70 = Methodref          #60.#69       // java/lang/String.endsWith:(Ljava/lang/String;)Z
   #71 = Utf8               length
   #72 = NameAndType        #71:#33       // length:()I
   #73 = Methodref          #60.#72       // java/lang/String.length:()I
   #74 = Utf8               substring
   #75 = Utf8               (II)Ljava/lang/String;
   #76 = NameAndType        #74:#75       // substring:(II)Ljava/lang/String;
   #77 = Methodref          #60.#76       // java/lang/String.substring:(II)Ljava/lang/String;
   #78 = Utf8               java/util/Properties
   #79 = Class              #78           // java/util/Properties
   #80 = Utf8               containsKey
   #81 = Utf8               (Ljava/lang/Object;)Z
   #82 = NameAndType        #80:#81       // containsKey:(Ljava/lang/Object;)Z
   #83 = Methodref          #79.#82       // java/util/Properties.containsKey:(Ljava/lang/Object;)Z
   #84 = NameAndType        #6:#7         // propertyRegex:Ljava/util/regex/Pattern;
   #85 = Fieldref           #2.#84        // coursier/paths/Util.propertyRegex:Ljava/util/regex/Pattern;
   #86 = Utf8               java/util/regex/Pattern
   #87 = Class              #86           // java/util/regex/Pattern
   #88 = Utf8               matcher
   #89 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #90 = NameAndType        #88:#89       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #91 = Methodref          #87.#90       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #92 = Utf8               java/util/regex/Matcher
   #93 = Class              #92           // java/util/regex/Matcher
   #94 = Utf8               find
   #95 = NameAndType        #94:#52       // find:()Z
   #96 = Methodref          #93.#95       // java/util/regex/Matcher.find:()Z
   #97 = Utf8               put
   #98 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #99 = NameAndType        #97:#98       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #100 = InterfaceMethodref #31.#99       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #101 = Utf8               start
  #102 = Utf8               (I)I
  #103 = NameAndType        #101:#102     // start:(I)I
  #104 = Methodref          #93.#103      // java/util/regex/Matcher.start:(I)I
  #105 = Utf8               end
  #106 = NameAndType        #105:#102     // end:(I)I
  #107 = Methodref          #93.#106      // java/util/regex/Matcher.end:(I)I
  #108 = Utf8               getProperty
  #109 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #110 = NameAndType        #108:#109     // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #111 = Methodref          #79.#110      // java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #112 = Utf8
  #113 = String             #112          //
  #114 = Utf8               java/lang/StringBuilder
  #115 = Class              #114          // java/lang/StringBuilder
  #116 = Methodref          #115.#13      // java/lang/StringBuilder."<init>":()V
  #117 = Utf8               append
  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #119 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #120 = Methodref          #115.#119     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #121 = Utf8               (I)Ljava/lang/String;
  #122 = NameAndType        #74:#121      // substring:(I)Ljava/lang/String;
  #123 = Methodref          #60.#122      // java/lang/String.substring:(I)Ljava/lang/String;
  #124 = Utf8               toString
  #125 = Utf8               ()Ljava/lang/String;
  #126 = NameAndType        #124:#125     // toString:()Ljava/lang/String;
  #127 = Methodref          #115.#126     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #128 = Utf8               createDirectories
  #129 = Utf8               (Ljava/nio/file/Path;)V
  #130 = Utf8               java/io/IOException
  #131 = Class              #130          // java/io/IOException
  #132 = Utf8               java/nio/file/FileAlreadyExistsException
  #133 = Class              #132          // java/nio/file/FileAlreadyExistsException
  #134 = Utf8               java/nio/file/attribute/FileAttribute
  #135 = Class              #134          // java/nio/file/attribute/FileAttribute
  #136 = Utf8               java/nio/file/Files
  #137 = Class              #136          // java/nio/file/Files
  #138 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
  #139 = NameAndType        #128:#138     // createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
  #140 = Methodref          #137.#139     // java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
  #141 = Utf8               java/nio/file/LinkOption
  #142 = Class              #141          // java/nio/file/LinkOption
  #143 = Utf8               isDirectory
  #144 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #145 = NameAndType        #143:#144     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #146 = Methodref          #137.#145     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #147 = Utf8               computeUseColorOutput
  #148 = Utf8               INSIDE_EMACS
  #149 = String             #148          // INSIDE_EMACS
  #150 = Utf8               getenv
  #151 = NameAndType        #150:#109     // getenv:(Ljava/lang/String;)Ljava/lang/String;
  #152 = Methodref          #19.#151      // java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
  #153 = Utf8               COURSIER_PROGRESS
  #154 = String             #153          // COURSIER_PROGRESS
  #155 = Utf8               true
  #156 = String             #155          // true
  #157 = Utf8               equalsIgnoreCase
  #158 = NameAndType        #157:#68      // equalsIgnoreCase:(Ljava/lang/String;)Z
  #159 = Methodref          #60.#158      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
  #160 = Utf8               enable
  #161 = String             #160          // enable
  #162 = Utf8               1
  #163 = String             #162          // 1
  #164 = Utf8               false
  #165 = String             #164          // false
  #166 = Utf8               disable
  #167 = String             #166          // disable
  #168 = Utf8               0
  #169 = String             #168          // 0
  #170 = Utf8               COURSIER_NO_TERM
  #171 = String             #170          // COURSIER_NO_TERM
  #172 = Utf8               useColorOutput
  #173 = NameAndType        #8:#9         // useColorOutput0:Ljava/lang/Boolean;
  #174 = Fieldref           #2.#173       // coursier/paths/Util.useColorOutput0:Ljava/lang/Boolean;
  #175 = NameAndType        #147:#52      // computeUseColorOutput:()Z
  #176 = Methodref          #2.#175       // coursier/paths/Util.computeUseColorOutput:()Z
  #177 = Utf8               java/lang/Boolean
  #178 = Class              #177          // java/lang/Boolean
  #179 = Utf8               valueOf
  #180 = Utf8               (Z)Ljava/lang/Boolean;
  #181 = NameAndType        #179:#180     // valueOf:(Z)Ljava/lang/Boolean;
  #182 = Methodref          #178.#181     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
  #183 = Utf8               booleanValue
  #184 = NameAndType        #183:#52      // booleanValue:()Z
  #185 = Methodref          #178.#184     // java/lang/Boolean.booleanValue:()Z
  #186 = Utf8               computeUseAnsiOutput
  #187 = Utf8               console
  #188 = Utf8               ()Ljava/io/Console;
  #189 = NameAndType        #187:#188     // console:()Ljava/io/Console;
  #190 = Methodref          #19.#189      // java/lang/System.console:()Ljava/io/Console;
  #191 = Utf8               CI
  #192 = String             #191          // CI
  #193 = Utf8               useAnsiOutput
  #194 = NameAndType        #10:#9        // useAnsiOutput0:Ljava/lang/Boolean;
  #195 = Fieldref           #2.#194       // coursier/paths/Util.useAnsiOutput0:Ljava/lang/Boolean;
  #196 = NameAndType        #186:#52      // computeUseAnsiOutput:()Z
  #197 = Methodref          #2.#196       // coursier/paths/Util.computeUseAnsiOutput:()Z
  #198 = Utf8               <clinit>
  #199 = Utf8               ${
  #200 = String             #199          // ${
  #201 = Utf8               quote
  #202 = NameAndType        #201:#109     // quote:(Ljava/lang/String;)Ljava/lang/String;
  #203 = Methodref          #87.#202      // java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
  #204 = Utf8               [^
  #205 = String             #204          // [^
  #206 = Utf8               {[()]}
  #207 = String             #206          // {[()]}
  #208 = Utf8               ]*
  #209 = String             #208          // ]*
  #210 = Utf8               }
  #211 = String             #210          // }
  #212 = Utf8               compile
  #213 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;
  #214 = NameAndType        #212:#213     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
  #215 = Methodref          #87.#214      // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
  #216 = Utf8               Code
  #217 = Utf8               LineNumberTable
  #218 = Utf8               Signature
  #219 = Utf8               StackMapTable
  #220 = Utf8               Exceptions
  #221 = Utf8               SourceFile
{
  private static final java.util.regex.Pattern propertyRegex;
    descriptor: Ljava/util/regex/Pattern;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static volatile java.lang.Boolean useColorOutput0;
    descriptor: Ljava/lang/Boolean;
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  private static volatile java.lang.Boolean useAnsiOutput0;
    descriptor: Ljava/lang/Boolean;
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  public coursier.paths.Util();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #14                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 13: 0

  public static java.util.Map<java.lang.String, java.lang.String> expandProperties(java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Map;)Ljava/util/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: invokestatic  #23                 // Method java/lang/System.getProperties:()Ljava/util/Properties;
         3: aload_0
         4: invokestatic  #26                 // Method expandProperties:(Ljava/util/Properties;Ljava/util/Map;)Ljava/util/Map;
         7: areturn
      LineNumberTable:
        line 22: 0
    Signature: #17                          // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;

  public static java.util.Map<java.lang.String, java.lang.String> expandProperties(java.util.Properties, java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Properties;Ljava/util/Map;)Ljava/util/Map;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=12, args_size=2
         0: new           #29                 // class java/util/LinkedHashMap
         3: dup
         4: aload_1
         5: invokeinterface #35,  1           // InterfaceMethod java/util/Map.size:()I
        10: invokespecial #38                 // Method java/util/LinkedHashMap."<init>":(I)V
        13: astore_2
        14: new           #29                 // class java/util/LinkedHashMap
        17: dup
        18: aload_1
        19: invokeinterface #35,  1           // InterfaceMethod java/util/Map.size:()I
        24: invokespecial #38                 // Method java/util/LinkedHashMap."<init>":(I)V
        27: astore_3
        28: aload_1
        29: invokeinterface #42,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
        34: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        39: astore        4
        41: aload         4
        43: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        48: ifeq          175
        51: aload         4
        53: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        58: checkcast     #60                 // class java/lang/String
        61: astore        5
        63: aload_1
        64: aload         5
        66: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
        71: checkcast     #60                 // class java/lang/String
        74: astore        6
        76: aload         5
        78: astore        7
        80: iconst_1
        81: istore        8
        83: aload         5
        85: ldc           #66                 // String ?
        87: invokevirtual #70                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        90: ifeq          124
        93: aload         5
        95: iconst_0
        96: aload         5
        98: invokevirtual #73                 // Method java/lang/String.length:()I
       101: iconst_1
       102: isub
       103: invokevirtual #77                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       106: astore        7
       108: aload_0
       109: aload         7
       111: invokevirtual #83                 // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
       114: ifne          121
       117: iconst_1
       118: goto          122
       121: iconst_0
       122: istore        8
       124: iload         8
       126: ifeq          172
       129: getstatic     #85                 // Field propertyRegex:Ljava/util/regex/Pattern;
       132: aload         6
       134: invokevirtual #91                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       137: astore        9
       139: aload         9
       141: invokevirtual #96                 // Method java/util/regex/Matcher.find:()Z
       144: ifeq          161
       147: aload_3
       148: aload         7
       150: aload         6
       152: invokeinterface #100,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       157: pop
       158: goto          172
       161: aload_2
       162: aload         7
       164: aload         6
       166: invokeinterface #100,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       171: pop
       172: goto          41
       175: aload_3
       176: invokeinterface #42,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       181: invokeinterface #48,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       186: astore        4
       188: aload         4
       190: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       195: ifeq          362
       198: aload         4
       200: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       205: checkcast     #60                 // class java/lang/String
       208: astore        5
       210: aload_3
       211: aload         5
       213: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       218: checkcast     #60                 // class java/lang/String
       221: astore        6
       223: getstatic     #85                 // Field propertyRegex:Ljava/util/regex/Pattern;
       226: aload         6
       228: invokevirtual #91                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       231: astore        7
       233: aload         7
       235: invokevirtual #96                 // Method java/util/regex/Matcher.find:()Z
       238: ifeq          348
       241: aload         7
       243: iconst_0
       244: invokevirtual #104                // Method java/util/regex/Matcher.start:(I)I
       247: istore        8
       249: aload         7
       251: iconst_0
       252: invokevirtual #107                // Method java/util/regex/Matcher.end:(I)I
       255: istore        9
       257: aload         6
       259: iload         8
       261: iconst_2
       262: iadd
       263: iload         9
       265: iconst_1
       266: isub
       267: invokevirtual #77                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       270: astore        10
       272: aload_2
       273: aload         10
       275: invokeinterface #64,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       280: checkcast     #60                 // class java/lang/String
       283: astore        11
       285: aload         11
       287: ifnonnull     298
       290: aload_0
       291: aload         10
       293: invokevirtual #111                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       296: astore        11
       298: aload         11
       300: ifnonnull     307
       303: ldc           #113                // String
       305: astore        11
       307: new           #115                // class java/lang/StringBuilder
       310: dup
       311: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
       314: aload         6
       316: iconst_0
       317: iload         8
       319: invokevirtual #77                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       322: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       325: aload         11
       327: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       330: aload         6
       332: iload         9
       334: invokevirtual #123                // Method java/lang/String.substring:(I)Ljava/lang/String;
       337: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       340: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       343: astore        6
       345: goto          233
       348: aload_2
       349: aload         5
       351: aload         6
       353: invokeinterface #100,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       358: pop
       359: goto          188
       362: aload_2
       363: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 254 /* append */
          offset_delta = 41
          locals = [ class java/util/Map, class java/util/Map, class java/util/Iterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 79
          locals = [ class java/util/Properties, class java/util/Map, class java/util/Map, class java/util/Map, class java/util/Iterator, class java/lang/String, class java/lang/String, class java/lang/String, int ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class java/util/regex/Matcher ]
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class java/util/Properties, class java/util/Map, class java/util/Map, class java/util/Map, class java/util/Iterator ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ class java/util/Iterator ]
        frame_type = 254 /* append */
          offset_delta = 44
          locals = [ class java/lang/String, class java/lang/String, class java/util/regex/Matcher ]
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class java/util/Properties, class java/util/Map, class java/util/Map, class java/util/Map, class java/util/Iterator, class java/lang/String, class java/lang/String, class java/util/regex/Matcher, int, int, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class java/util/Properties, class java/util/Map, class java/util/Map, class java/util/Map, class java/util/Iterator, class java/lang/String, class java/lang/String, class java/util/regex/Matcher ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class java/util/Properties, class java/util/Map, class java/util/Map, class java/util/Map ]
          stack = []
      LineNumberTable:
        line 28: 0
        line 29: 14
        line 31: 28
        line 32: 63
        line 34: 76
        line 35: 80
        line 37: 83
        line 38: 93
        line 39: 108
        line 42: 124
        line 43: 129
        line 44: 139
        line 45: 147
        line 47: 161
        line 50: 172
        line 54: 175
        line 55: 210
        line 57: 223
        line 60: 233
        line 61: 241
        line 62: 249
        line 63: 257
        line 64: 272
        line 65: 285
        line 66: 290
        line 67: 298
        line 68: 303
        line 69: 307
        line 70: 345
        line 72: 348
        line 73: 359
        line 75: 362
    Signature: #27                          // (Ljava/util/Properties;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;

  public static void createDirectories(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: iconst_0
         2: anewarray     #135                // class java/nio/file/attribute/FileAttribute
         5: invokestatic  #140                // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
         8: pop
         9: goto          26
        12: astore_1
        13: aload_0
        14: iconst_0
        15: anewarray     #142                // class java/nio/file/LinkOption
        18: invokestatic  #146                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        21: ifne          26
        24: aload_1
        25: athrow
        26: return
      Exception table:
         from    to  target type
             0     9    12   Class java/nio/file/FileAlreadyExistsException
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/nio/file/FileAlreadyExistsException ]
        frame_type = 13 /* same */
      LineNumberTable:
        line 80: 0
        line 86: 9
        line 81: 12
        line 84: 13
        line 85: 24
        line 87: 26
    Exceptions:
      throws java.io.IOException

  private static boolean computeUseColorOutput();
    descriptor: ()Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=0
         0: ldc           #149                // String INSIDE_EMACS
         2: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         5: ifnull        10
         8: iconst_0
         9: ireturn
        10: ldc           #154                // String COURSIER_PROGRESS
        12: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        15: astore_1
        16: aload_1
        17: ifnull        52
        20: aload_1
        21: ldc           #156                // String true
        23: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        26: ifne          47
        29: aload_1
        30: ldc           #161                // String enable
        32: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        35: ifne          47
        38: aload_1
        39: ldc           #163                // String 1
        41: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        44: ifeq          52
        47: iconst_0
        48: istore_0
        49: goto          102
        52: aload_1
        53: ifnull        88
        56: aload_1
        57: ldc           #165                // String false
        59: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        62: ifne          83
        65: aload_1
        66: ldc           #167                // String disable
        68: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        71: ifne          83
        74: aload_1
        75: ldc           #169                // String 0
        77: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        80: ifeq          88
        83: iconst_1
        84: istore_0
        85: goto          102
        88: ldc           #171                // String COURSIER_NO_TERM
        90: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        93: ifnull        100
        96: iconst_1
        97: goto          101
       100: iconst_0
       101: istore_0
       102: iload_0
       103: ifeq          108
       106: iconst_0
       107: ireturn
       108: iconst_1
       109: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 10 /* same */
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class java/lang/String ]
        frame_type = 4 /* same */
        frame_type = 30 /* same */
        frame_type = 4 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ int, class java/lang/String ]
          stack = []
        frame_type = 5 /* same */
      LineNumberTable:
        line 92: 0
        line 93: 8
        line 96: 10
        line 97: 16
        line 98: 47
        line 99: 52
        line 100: 83
        line 102: 88
        line 105: 102
        line 106: 106
        line 108: 108

  public static boolean useColorOutput();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #174                // Field useColorOutput0:Ljava/lang/Boolean;
         3: ifnonnull     15
         6: invokestatic  #176                // Method computeUseColorOutput:()Z
         9: invokestatic  #182                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        12: putstatic     #174                // Field useColorOutput0:Ljava/lang/Boolean;
        15: getstatic     #174                // Field useColorOutput0:Ljava/lang/Boolean;
        18: invokevirtual #185                // Method java/lang/Boolean.booleanValue:()Z
        21: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 113: 0
        line 114: 6
        line 116: 15

  private static boolean computeUseAnsiOutput();
    descriptor: ()Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=0
         0: invokestatic  #190                // Method java/lang/System.console:()Ljava/io/Console;
         3: ifnonnull     8
         6: iconst_0
         7: ireturn
         8: ldc           #149                // String INSIDE_EMACS
        10: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        13: ifnull        18
        16: iconst_0
        17: ireturn
        18: ldc           #192                // String CI
        20: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        23: ifnull        28
        26: iconst_0
        27: ireturn
        28: ldc           #154                // String COURSIER_PROGRESS
        30: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        33: astore_1
        34: aload_1
        35: ifnull        70
        38: aload_1
        39: ldc           #156                // String true
        41: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        44: ifne          65
        47: aload_1
        48: ldc           #161                // String enable
        50: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        53: ifne          65
        56: aload_1
        57: ldc           #163                // String 1
        59: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        62: ifeq          70
        65: iconst_0
        66: istore_0
        67: goto          120
        70: aload_1
        71: ifnull        106
        74: aload_1
        75: ldc           #165                // String false
        77: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        80: ifne          101
        83: aload_1
        84: ldc           #167                // String disable
        86: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        89: ifne          101
        92: aload_1
        93: ldc           #169                // String 0
        95: invokevirtual #159                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        98: ifeq          106
       101: iconst_1
       102: istore_0
       103: goto          120
       106: ldc           #171                // String COURSIER_NO_TERM
       108: invokestatic  #152                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       111: ifnull        118
       114: iconst_1
       115: goto          119
       118: iconst_0
       119: istore_0
       120: iload_0
       121: ifeq          126
       124: iconst_0
       125: ireturn
       126: iconst_1
       127: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 8 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ top, class java/lang/String ]
        frame_type = 4 /* same */
        frame_type = 30 /* same */
        frame_type = 4 /* same */
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ int, class java/lang/String ]
          stack = []
        frame_type = 5 /* same */
      LineNumberTable:
        line 122: 0
        line 123: 6
        line 125: 8
        line 126: 16
        line 128: 18
        line 129: 26
        line 132: 28
        line 133: 34
        line 134: 65
        line 135: 70
        line 136: 101
        line 138: 106
        line 141: 120
        line 142: 124
        line 144: 126

  public static boolean useAnsiOutput();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #195                // Field useAnsiOutput0:Ljava/lang/Boolean;
         3: ifnonnull     15
         6: invokestatic  #197                // Method computeUseAnsiOutput:()Z
         9: invokestatic  #182                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
        12: putstatic     #195                // Field useAnsiOutput0:Ljava/lang/Boolean;
        15: getstatic     #195                // Field useAnsiOutput0:Ljava/lang/Boolean;
        18: invokevirtual #185                // Method java/lang/Boolean.booleanValue:()Z
        21: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */
      LineNumberTable:
        line 148: 0
        line 149: 6
        line 151: 15

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #115                // class java/lang/StringBuilder
         3: dup
         4: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
         7: ldc           #200                // String ${
         9: invokestatic  #203                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
        12: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        15: ldc           #205                // String [^
        17: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc           #207                // String {[()]}
        22: invokestatic  #203                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
        25: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: ldc           #209                // String ]*
        30: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: ldc           #211                // String }
        35: invokestatic  #203                // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
        38: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #127                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: invokestatic  #215                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
        47: putstatic     #85                 // Field propertyRegex:Ljava/util/regex/Pattern;
        50: aconst_null
        51: putstatic     #174                // Field useColorOutput0:Ljava/lang/Boolean;
        54: aconst_null
        55: putstatic     #195                // Field useAnsiOutput0:Ljava/lang/Boolean;
        58: return
      LineNumberTable:
        line 18: 0
        line 19: 9
        line 89: 50
        line 119: 54
}
SourceFile: "Util.java"
