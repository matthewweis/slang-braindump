Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/FileSystem.class
  Last modified May 29, 2022; size 6346 bytes
  SHA-256 checksum 106d7743a14093f718619c35c4fd0d3827496bd4a25a026ae25443904521aca8
  Compiled from "FileSystem.java"
public final class org.apache.commons.io.FileSystem extends java.lang.Enum<org.apache.commons.io.FileSystem>
  minor version: 0
  major version: 52
  flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM
  this_class: #4                          // org/apache/commons/io/FileSystem
  super_class: #96                        // java/lang/Enum
  interfaces: 0, fields: 15, methods: 18, attributes: 2
Constant pool:
    #1 = Fieldref           #4.#184       // org/apache/commons/io/FileSystem.$VALUES:[Lorg/apache/commons/io/FileSystem;
    #2 = Methodref          #185.#186     // "[Lorg/apache/commons/io/FileSystem;".clone:()Ljava/lang/Object;
    #3 = Class              #119          // "[Lorg/apache/commons/io/FileSystem;"
    #4 = Class              #187          // org/apache/commons/io/FileSystem
    #5 = Methodref          #96.#188      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
    #6 = Fieldref           #4.#189       // org/apache/commons/io/FileSystem.IS_OS_LINUX:Z
    #7 = Fieldref           #4.#190       // org/apache/commons/io/FileSystem.LINUX:Lorg/apache/commons/io/FileSystem;
    #8 = Fieldref           #4.#191       // org/apache/commons/io/FileSystem.IS_OS_MAC:Z
    #9 = Fieldref           #4.#192       // org/apache/commons/io/FileSystem.MAC_OSX:Lorg/apache/commons/io/FileSystem;
   #10 = Fieldref           #4.#193       // org/apache/commons/io/FileSystem.IS_OS_WINDOWS:Z
   #11 = Fieldref           #4.#194       // org/apache/commons/io/FileSystem.WINDOWS:Lorg/apache/commons/io/FileSystem;
   #12 = Fieldref           #4.#195       // org/apache/commons/io/FileSystem.GENERIC:Lorg/apache/commons/io/FileSystem;
   #13 = String             #196          // os.name
   #14 = Methodref          #4.#197       // org/apache/commons/io/FileSystem.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;
   #15 = Methodref          #4.#198       // org/apache/commons/io/FileSystem.isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z
   #16 = Methodref          #199.#200     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
   #17 = Class              #201          // java/lang/SecurityException
   #18 = Fieldref           #199.#202     // java/lang/System.err:Ljava/io/PrintStream;
   #19 = Class              #203          // java/lang/StringBuilder
   #20 = Methodref          #19.#204      // java/lang/StringBuilder."<init>":()V
   #21 = String             #205          // Caught a SecurityException reading the system property \'
   #22 = Methodref          #19.#206      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #23 = String             #207          // \'; the SystemUtils property value will default to null.
   #24 = Methodref          #19.#208      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #25 = Methodref          #209.#210     // java/io/PrintStream.println:(Ljava/lang/String;)V
   #26 = Fieldref           #211.#212     // java/util/Locale.ROOT:Ljava/util/Locale;
   #27 = Methodref          #65.#213      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
   #28 = Methodref          #65.#214      // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #29 = Methodref          #96.#215      // java/lang/Enum."<init>":(Ljava/lang/String;I)V
   #30 = Fieldref           #4.#216       // org/apache/commons/io/FileSystem.maxFileNameLength:I
   #31 = Fieldref           #4.#217       // org/apache/commons/io/FileSystem.maxPathLength:I
   #32 = String             #111          // illegalFileNameChars
   #33 = Methodref          #218.#219     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #34 = Class              #112          // "[C"
   #35 = Fieldref           #4.#220       // org/apache/commons/io/FileSystem.illegalFileNameChars:[C
   #36 = String             #116          // reservedFileNames
   #37 = Class              #117          // "[Ljava/lang/String;"
   #38 = Fieldref           #4.#221       // org/apache/commons/io/FileSystem.reservedFileNames:[Ljava/lang/String;
   #39 = Fieldref           #4.#222       // org/apache/commons/io/FileSystem.caseSensitive:Z
   #40 = Fieldref           #4.#223       // org/apache/commons/io/FileSystem.casePreserving:Z
   #41 = Methodref          #224.#186     // "[C".clone:()Ljava/lang/Object;
   #42 = Methodref          #225.#186     // "[Ljava/lang/String;".clone:()Ljava/lang/Object;
   #43 = Methodref          #226.#227     // java/util/Arrays.binarySearch:([CC)I
   #44 = InterfaceMethodref #228.#229     // java/lang/CharSequence.length:()I
   #45 = Methodref          #4.#230       // org/apache/commons/io/FileSystem.isReservedFileName:(Ljava/lang/CharSequence;)Z
   #46 = InterfaceMethodref #228.#231     // java/lang/CharSequence.charAt:(I)C
   #47 = Methodref          #4.#232       // org/apache/commons/io/FileSystem.isIllegalFileNameChar:(C)Z
   #48 = Methodref          #226.#233     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
   #49 = Class              #234          // java/lang/IllegalArgumentException
   #50 = String             #235          // The replacement character \'%s\' cannot be one of the %s illegal characters: %s
   #51 = Class              #236          // java/lang/Object
   #52 = String             #237          // \\0
   #53 = Methodref          #238.#239     // java/lang/Character.valueOf:(C)Ljava/lang/Character;
   #54 = Methodref          #4.#240       // org/apache/commons/io/FileSystem.name:()Ljava/lang/String;
   #55 = Methodref          #226.#241     // java/util/Arrays.toString:([C)Ljava/lang/String;
   #56 = Methodref          #65.#242      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #57 = Methodref          #49.#243      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #58 = Methodref          #65.#229      // java/lang/String.length:()I
   #59 = Methodref          #65.#244      // java/lang/String.substring:(II)Ljava/lang/String;
   #60 = Methodref          #65.#245      // java/lang/String.toCharArray:()[C
   #61 = Methodref          #65.#246      // java/lang/String.valueOf:([C)Ljava/lang/String;
   #62 = String             #97           // GENERIC
   #63 = Class              #247          // java/lang/Integer
   #64 = Integer            2147483647
   #65 = Class              #248          // java/lang/String
   #66 = Methodref          #4.#249       // org/apache/commons/io/FileSystem."<init>":(Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
   #67 = String             #99           // LINUX
   #68 = String             #100          // MAC_OSX
   #69 = String             #101          // WINDOWS
   #70 = String             #250          // AUX
   #71 = String             #251          // COM1
   #72 = String             #252          // COM2
   #73 = String             #253          // COM3
   #74 = String             #254          // COM4
   #75 = String             #255          // COM5
   #76 = String             #256          // COM6
   #77 = String             #257          // COM7
   #78 = String             #258          // COM8
   #79 = String             #259          // COM9
   #80 = String             #260          // CON
   #81 = String             #261          // LPT1
   #82 = String             #262          // LPT2
   #83 = String             #263          // LPT3
   #84 = String             #264          // LPT4
   #85 = String             #265          // LPT5
   #86 = String             #266          // LPT6
   #87 = String             #267          // LPT7
   #88 = String             #268          // LPT8
   #89 = String             #269          // LPT9
   #90 = String             #270          // NUL
   #91 = String             #271          // PRN
   #92 = String             #272          // Linux
   #93 = Methodref          #4.#273       // org/apache/commons/io/FileSystem.getOsMatchesName:(Ljava/lang/String;)Z
   #94 = String             #274          // Mac
   #95 = String             #275          // Windows
   #96 = Class              #276          // java/lang/Enum
   #97 = Utf8               GENERIC
   #98 = Utf8               Lorg/apache/commons/io/FileSystem;
   #99 = Utf8               LINUX
  #100 = Utf8               MAC_OSX
  #101 = Utf8               WINDOWS
  #102 = Utf8               IS_OS_LINUX
  #103 = Utf8               Z
  #104 = Utf8               IS_OS_MAC
  #105 = Utf8               OS_NAME_WINDOWS_PREFIX
  #106 = Utf8               Ljava/lang/String;
  #107 = Utf8               ConstantValue
  #108 = Utf8               IS_OS_WINDOWS
  #109 = Utf8               casePreserving
  #110 = Utf8               caseSensitive
  #111 = Utf8               illegalFileNameChars
  #112 = Utf8               [C
  #113 = Utf8               maxFileNameLength
  #114 = Utf8               I
  #115 = Utf8               maxPathLength
  #116 = Utf8               reservedFileNames
  #117 = Utf8               [Ljava/lang/String;
  #118 = Utf8               $VALUES
  #119 = Utf8               [Lorg/apache/commons/io/FileSystem;
  #120 = Utf8               values
  #121 = Utf8               ()[Lorg/apache/commons/io/FileSystem;
  #122 = Utf8               Code
  #123 = Utf8               LineNumberTable
  #124 = Utf8               valueOf
  #125 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/FileSystem;
  #126 = Utf8               LocalVariableTable
  #127 = Utf8               name
  #128 = Utf8               getCurrent
  #129 = Utf8               ()Lorg/apache/commons/io/FileSystem;
  #130 = Utf8               StackMapTable
  #131 = Utf8               getOsMatchesName
  #132 = Utf8               (Ljava/lang/String;)Z
  #133 = Utf8               osNamePrefix
  #134 = Utf8               getSystemProperty
  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #136 = Utf8               ex
  #137 = Utf8               Ljava/lang/SecurityException;
  #138 = Utf8               property
  #139 = Class              #201          // java/lang/SecurityException
  #140 = Utf8               isOsNameMatch
  #141 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #142 = Utf8               osName
  #143 = Utf8               <init>
  #144 = Utf8               (Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
  #145 = Utf8               this
  #146 = Utf8               maxFileLength
  #147 = Utf8               Signature
  #148 = Utf8               (ZZII[C[Ljava/lang/String;)V
  #149 = Utf8               getIllegalFileNameChars
  #150 = Utf8               ()[C
  #151 = Utf8               getMaxFileNameLength
  #152 = Utf8               ()I
  #153 = Utf8               getMaxPathLength
  #154 = Utf8               getReservedFileNames
  #155 = Utf8               ()[Ljava/lang/String;
  #156 = Utf8               isCasePreserving
  #157 = Utf8               ()Z
  #158 = Utf8               isCaseSensitive
  #159 = Utf8               isIllegalFileNameChar
  #160 = Utf8               (C)Z
  #161 = Utf8               c
  #162 = Utf8               C
  #163 = Utf8               isLegalFileName
  #164 = Utf8               (Ljava/lang/CharSequence;)Z
  #165 = Utf8               i
  #166 = Utf8               candidate
  #167 = Utf8               Ljava/lang/CharSequence;
  #168 = Utf8               isReservedFileName
  #169 = Utf8               toLegalFileName
  #170 = Utf8               (Ljava/lang/String;C)Ljava/lang/String;
  #171 = Utf8               replacement
  #172 = Utf8               truncated
  #173 = Utf8               changed
  #174 = Utf8               charArray
  #175 = Class              #187          // org/apache/commons/io/FileSystem
  #176 = Class              #248          // java/lang/String
  #177 = Class              #277          // "[Ljava/lang/Object;"
  #178 = Class              #236          // java/lang/Object
  #179 = Utf8               <clinit>
  #180 = Utf8               ()V
  #181 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;
  #182 = Utf8               SourceFile
  #183 = Utf8               FileSystem.java
  #184 = NameAndType        #118:#119     // $VALUES:[Lorg/apache/commons/io/FileSystem;
  #185 = Class              #119          // "[Lorg/apache/commons/io/FileSystem;"
  #186 = NameAndType        #278:#279     // clone:()Ljava/lang/Object;
  #187 = Utf8               org/apache/commons/io/FileSystem
  #188 = NameAndType        #124:#280     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
  #189 = NameAndType        #102:#103     // IS_OS_LINUX:Z
  #190 = NameAndType        #99:#98       // LINUX:Lorg/apache/commons/io/FileSystem;
  #191 = NameAndType        #104:#103     // IS_OS_MAC:Z
  #192 = NameAndType        #100:#98      // MAC_OSX:Lorg/apache/commons/io/FileSystem;
  #193 = NameAndType        #108:#103     // IS_OS_WINDOWS:Z
  #194 = NameAndType        #101:#98      // WINDOWS:Lorg/apache/commons/io/FileSystem;
  #195 = NameAndType        #97:#98       // GENERIC:Lorg/apache/commons/io/FileSystem;
  #196 = Utf8               os.name
  #197 = NameAndType        #134:#135     // getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;
  #198 = NameAndType        #140:#141     // isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z
  #199 = Class              #281          // java/lang/System
  #200 = NameAndType        #282:#135     // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #201 = Utf8               java/lang/SecurityException
  #202 = NameAndType        #283:#284     // err:Ljava/io/PrintStream;
  #203 = Utf8               java/lang/StringBuilder
  #204 = NameAndType        #143:#180     // "<init>":()V
  #205 = Utf8               Caught a SecurityException reading the system property \'
  #206 = NameAndType        #285:#286     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #207 = Utf8               \'; the SystemUtils property value will default to null.
  #208 = NameAndType        #287:#288     // toString:()Ljava/lang/String;
  #209 = Class              #289          // java/io/PrintStream
  #210 = NameAndType        #290:#291     // println:(Ljava/lang/String;)V
  #211 = Class              #292          // java/util/Locale
  #212 = NameAndType        #293:#294     // ROOT:Ljava/util/Locale;
  #213 = NameAndType        #295:#296     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
  #214 = NameAndType        #297:#132     // startsWith:(Ljava/lang/String;)Z
  #215 = NameAndType        #143:#298     // "<init>":(Ljava/lang/String;I)V
  #216 = NameAndType        #113:#114     // maxFileNameLength:I
  #217 = NameAndType        #115:#114     // maxPathLength:I
  #218 = Class              #299          // java/util/Objects
  #219 = NameAndType        #300:#301     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #220 = NameAndType        #111:#112     // illegalFileNameChars:[C
  #221 = NameAndType        #116:#117     // reservedFileNames:[Ljava/lang/String;
  #222 = NameAndType        #110:#103     // caseSensitive:Z
  #223 = NameAndType        #109:#103     // casePreserving:Z
  #224 = Class              #112          // "[C"
  #225 = Class              #117          // "[Ljava/lang/String;"
  #226 = Class              #302          // java/util/Arrays
  #227 = NameAndType        #303:#304     // binarySearch:([CC)I
  #228 = Class              #305          // java/lang/CharSequence
  #229 = NameAndType        #306:#152     // length:()I
  #230 = NameAndType        #168:#164     // isReservedFileName:(Ljava/lang/CharSequence;)Z
  #231 = NameAndType        #307:#308     // charAt:(I)C
  #232 = NameAndType        #159:#160     // isIllegalFileNameChar:(C)Z
  #233 = NameAndType        #303:#309     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
  #234 = Utf8               java/lang/IllegalArgumentException
  #235 = Utf8               The replacement character \'%s\' cannot be one of the %s illegal characters: %s
  #236 = Utf8               java/lang/Object
  #237 = Utf8               \\0
  #238 = Class              #310          // java/lang/Character
  #239 = NameAndType        #124:#311     // valueOf:(C)Ljava/lang/Character;
  #240 = NameAndType        #127:#288     // name:()Ljava/lang/String;
  #241 = NameAndType        #287:#312     // toString:([C)Ljava/lang/String;
  #242 = NameAndType        #313:#314     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #243 = NameAndType        #143:#291     // "<init>":(Ljava/lang/String;)V
  #244 = NameAndType        #315:#316     // substring:(II)Ljava/lang/String;
  #245 = NameAndType        #317:#150     // toCharArray:()[C
  #246 = NameAndType        #124:#312     // valueOf:([C)Ljava/lang/String;
  #247 = Utf8               java/lang/Integer
  #248 = Utf8               java/lang/String
  #249 = NameAndType        #143:#144     // "<init>":(Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
  #250 = Utf8               AUX
  #251 = Utf8               COM1
  #252 = Utf8               COM2
  #253 = Utf8               COM3
  #254 = Utf8               COM4
  #255 = Utf8               COM5
  #256 = Utf8               COM6
  #257 = Utf8               COM7
  #258 = Utf8               COM8
  #259 = Utf8               COM9
  #260 = Utf8               CON
  #261 = Utf8               LPT1
  #262 = Utf8               LPT2
  #263 = Utf8               LPT3
  #264 = Utf8               LPT4
  #265 = Utf8               LPT5
  #266 = Utf8               LPT6
  #267 = Utf8               LPT7
  #268 = Utf8               LPT8
  #269 = Utf8               LPT9
  #270 = Utf8               NUL
  #271 = Utf8               PRN
  #272 = Utf8               Linux
  #273 = NameAndType        #131:#132     // getOsMatchesName:(Ljava/lang/String;)Z
  #274 = Utf8               Mac
  #275 = Utf8               Windows
  #276 = Utf8               java/lang/Enum
  #277 = Utf8               [Ljava/lang/Object;
  #278 = Utf8               clone
  #279 = Utf8               ()Ljava/lang/Object;
  #280 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
  #281 = Utf8               java/lang/System
  #282 = Utf8               getProperty
  #283 = Utf8               err
  #284 = Utf8               Ljava/io/PrintStream;
  #285 = Utf8               append
  #286 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #287 = Utf8               toString
  #288 = Utf8               ()Ljava/lang/String;
  #289 = Utf8               java/io/PrintStream
  #290 = Utf8               println
  #291 = Utf8               (Ljava/lang/String;)V
  #292 = Utf8               java/util/Locale
  #293 = Utf8               ROOT
  #294 = Utf8               Ljava/util/Locale;
  #295 = Utf8               toUpperCase
  #296 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #297 = Utf8               startsWith
  #298 = Utf8               (Ljava/lang/String;I)V
  #299 = Utf8               java/util/Objects
  #300 = Utf8               requireNonNull
  #301 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #302 = Utf8               java/util/Arrays
  #303 = Utf8               binarySearch
  #304 = Utf8               ([CC)I
  #305 = Utf8               java/lang/CharSequence
  #306 = Utf8               length
  #307 = Utf8               charAt
  #308 = Utf8               (I)C
  #309 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I
  #310 = Utf8               java/lang/Character
  #311 = Utf8               (C)Ljava/lang/Character;
  #312 = Utf8               ([C)Ljava/lang/String;
  #313 = Utf8               format
  #314 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #315 = Utf8               substring
  #316 = Utf8               (II)Ljava/lang/String;
  #317 = Utf8               toCharArray
{
  public static final org.apache.commons.io.FileSystem GENERIC;
    descriptor: Lorg/apache/commons/io/FileSystem;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final org.apache.commons.io.FileSystem LINUX;
    descriptor: Lorg/apache/commons/io/FileSystem;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final org.apache.commons.io.FileSystem MAC_OSX;
    descriptor: Lorg/apache/commons/io/FileSystem;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final org.apache.commons.io.FileSystem WINDOWS;
    descriptor: Lorg/apache/commons/io/FileSystem;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  private static final boolean IS_OS_LINUX;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final boolean IS_OS_MAC;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.lang.String OS_NAME_WINDOWS_PREFIX;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String Windows

  private static final boolean IS_OS_WINDOWS;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private final boolean casePreserving;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean caseSensitive;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final char[] illegalFileNameChars;
    descriptor: [C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int maxFileNameLength;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int maxPathLength;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String[] reservedFileNames;
    descriptor: [Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private static final org.apache.commons.io.FileSystem[] $VALUES;
    descriptor: [Lorg/apache/commons/io/FileSystem;
    flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC

  public static org.apache.commons.io.FileSystem[] values();
    descriptor: ()[Lorg/apache/commons/io/FileSystem;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/FileSystem;
         3: invokevirtual #2                  // Method "[Lorg/apache/commons/io/FileSystem;".clone:()Ljava/lang/Object;
         6: checkcast     #3                  // class "[Lorg/apache/commons/io/FileSystem;"
         9: areturn
      LineNumberTable:
        line 34: 0

  public static org.apache.commons.io.FileSystem valueOf(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/FileSystem;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc           #4                  // class org/apache/commons/io/FileSystem
         2: aload_0
         3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
         6: checkcast     #4                  // class org/apache/commons/io/FileSystem
         9: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  name   Ljava/lang/String;

  public static org.apache.commons.io.FileSystem getCurrent();
    descriptor: ()Lorg/apache/commons/io/FileSystem;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #6                  // Field IS_OS_LINUX:Z
         3: ifeq          10
         6: getstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;
         9: areturn
        10: getstatic     #8                  // Field IS_OS_MAC:Z
        13: ifeq          20
        16: getstatic     #9                  // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;
        19: areturn
        20: getstatic     #10                 // Field IS_OS_WINDOWS:Z
        23: ifeq          30
        26: getstatic     #11                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;
        29: areturn
        30: getstatic     #12                 // Field GENERIC:Lorg/apache/commons/io/FileSystem;
        33: areturn
      LineNumberTable:
        line 125: 0
        line 126: 6
        line 128: 10
        line 129: 16
        line 131: 20
        line 132: 26
        line 134: 30
      StackMapTable: number_of_entries = 3
        frame_type = 10 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */

  private static boolean getOsMatchesName(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc           #13                 // String os.name
         2: invokestatic  #14                 // Method getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;
         5: aload_0
         6: invokestatic  #15                 // Method isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z
         9: ireturn
      LineNumberTable:
        line 145: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 osNamePrefix   Ljava/lang/String;

  private static java.lang.String getSystemProperty(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
         4: areturn
         5: astore_1
         6: getstatic     #18                 // Field java/lang/System.err:Ljava/io/PrintStream;
         9: new           #19                 // class java/lang/StringBuilder
        12: dup
        13: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
        16: ldc           #21                 // String Caught a SecurityException reading the system property \'
        18: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: aload_0
        22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: ldc           #23                 // String \'; the SystemUtils property value will default to null.
        27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: invokevirtual #25                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        36: aconst_null
        37: areturn
      Exception table:
         from    to  target type
             0     4     5   Class java/lang/SecurityException
      LineNumberTable:
        line 163: 0
        line 164: 5
        line 166: 6
        line 168: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      32     1    ex   Ljava/lang/SecurityException;
            0      38     0 property   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/SecurityException ]

  private static boolean isOsNameMatch(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: iconst_0
         5: ireturn
         6: aload_0
         7: getstatic     #26                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
        10: invokevirtual #27                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
        13: aload_1
        14: getstatic     #26                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
        17: invokevirtual #27                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
        20: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        23: ireturn
      LineNumberTable:
        line 185: 0
        line 186: 4
        line 188: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 osName   Ljava/lang/String;
            0      24     1 osNamePrefix   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  private org.apache.commons.io.FileSystem(boolean, boolean, int, int, char[], java.lang.String[]);
    descriptor: (Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=9, args_size=9
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokespecial #29                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
         6: aload_0
         7: iload         5
         9: putfield      #30                 // Field maxFileNameLength:I
        12: aload_0
        13: iload         6
        15: putfield      #31                 // Field maxPathLength:I
        18: aload_0
        19: aload         7
        21: ldc           #32                 // String illegalFileNameChars
        23: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        26: checkcast     #34                 // class "[C"
        29: putfield      #35                 // Field illegalFileNameChars:[C
        32: aload_0
        33: aload         8
        35: ldc           #36                 // String reservedFileNames
        37: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        40: checkcast     #37                 // class "[Ljava/lang/String;"
        43: putfield      #38                 // Field reservedFileNames:[Ljava/lang/String;
        46: aload_0
        47: iload_3
        48: putfield      #39                 // Field caseSensitive:Z
        51: aload_0
        52: iload         4
        54: putfield      #40                 // Field casePreserving:Z
        57: return
      LineNumberTable:
        line 215: 0
        line 216: 6
        line 217: 12
        line 218: 18
        line 219: 32
        line 220: 46
        line 221: 51
        line 222: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lorg/apache/commons/io/FileSystem;
            0      58     3 caseSensitive   Z
            0      58     4 casePreserving   Z
            0      58     5 maxFileLength   I
            0      58     6 maxPathLength   I
            0      58     7 illegalFileNameChars   [C
            0      58     8 reservedFileNames   [Ljava/lang/String;
    Signature: #148                         // (ZZII[C[Ljava/lang/String;)V

  public char[] getIllegalFileNameChars();
    descriptor: ()[C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #35                 // Field illegalFileNameChars:[C
         4: invokevirtual #41                 // Method "[C".clone:()Ljava/lang/Object;
         7: checkcast     #34                 // class "[C"
        10: areturn
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/FileSystem;

  public int getMaxFileNameLength();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #30                 // Field maxFileNameLength:I
         4: ireturn
      LineNumberTable:
        line 239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/FileSystem;

  public int getMaxPathLength();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field maxPathLength:I
         4: ireturn
      LineNumberTable:
        line 248: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/FileSystem;

  public java.lang.String[] getReservedFileNames();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #38                 // Field reservedFileNames:[Ljava/lang/String;
         4: invokevirtual #42                 // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
         7: checkcast     #37                 // class "[Ljava/lang/String;"
        10: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/FileSystem;

  public boolean isCasePreserving();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field casePreserving:Z
         4: ireturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/FileSystem;

  public boolean isCaseSensitive();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #39                 // Field caseSensitive:Z
         4: ireturn
      LineNumberTable:
        line 275: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/FileSystem;

  private boolean isIllegalFileNameChar(char);
    descriptor: (C)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #35                 // Field illegalFileNameChars:[C
         4: iload_1
         5: invokestatic  #43                 // Method java/util/Arrays.binarySearch:([CC)I
         8: iflt          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      LineNumberTable:
        line 286: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/apache/commons/io/FileSystem;
            0      17     1     c   C
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean isLegalFileName(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: ifnull        26
         4: aload_1
         5: invokeinterface #44,  1           // InterfaceMethod java/lang/CharSequence.length:()I
        10: ifeq          26
        13: aload_1
        14: invokeinterface #44,  1           // InterfaceMethod java/lang/CharSequence.length:()I
        19: aload_0
        20: getfield      #30                 // Field maxFileNameLength:I
        23: if_icmple     28
        26: iconst_0
        27: ireturn
        28: aload_0
        29: aload_1
        30: invokevirtual #45                 // Method isReservedFileName:(Ljava/lang/CharSequence;)Z
        33: ifeq          38
        36: iconst_0
        37: ireturn
        38: iconst_0
        39: istore_2
        40: iload_2
        41: aload_1
        42: invokeinterface #44,  1           // InterfaceMethod java/lang/CharSequence.length:()I
        47: if_icmpge     72
        50: aload_0
        51: aload_1
        52: iload_2
        53: invokeinterface #46,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
        58: invokespecial #47                 // Method isIllegalFileNameChar:(C)Z
        61: ifeq          66
        64: iconst_0
        65: ireturn
        66: iinc          2, 1
        69: goto          40
        72: iconst_1
        73: ireturn
      LineNumberTable:
        line 299: 0
        line 300: 26
        line 302: 28
        line 303: 36
        line 305: 38
        line 306: 50
        line 307: 64
        line 305: 66
        line 310: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      32     2     i   I
            0      74     0  this   Lorg/apache/commons/io/FileSystem;
            0      74     1 candidate   Ljava/lang/CharSequence;
      StackMapTable: number_of_entries = 6
        frame_type = 26 /* same */
        frame_type = 1 /* same */
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 25 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public boolean isReservedFileName(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #38                 // Field reservedFileNames:[Ljava/lang/String;
         4: aload_1
         5: invokestatic  #48                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I
         8: iflt          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      LineNumberTable:
        line 321: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/apache/commons/io/FileSystem;
            0      17     1 candidate   Ljava/lang/CharSequence;
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public java.lang.String toLegalFileName(java.lang.String, char);
    descriptor: (Ljava/lang/String;C)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=7, args_size=3
         0: aload_0
         1: iload_2
         2: invokespecial #47                 // Method isIllegalFileNameChar:(C)Z
         5: ifeq          58
         8: new           #49                 // class java/lang/IllegalArgumentException
        11: dup
        12: ldc           #50                 // String The replacement character \'%s\' cannot be one of the %s illegal characters: %s
        14: iconst_3
        15: anewarray     #51                 // class java/lang/Object
        18: dup
        19: iconst_0
        20: iload_2
        21: ifne          29
        24: ldc           #52                 // String \\0
        26: goto          33
        29: iload_2
        30: invokestatic  #53                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        33: aastore
        34: dup
        35: iconst_1
        36: aload_0
        37: invokevirtual #54                 // Method name:()Ljava/lang/String;
        40: aastore
        41: dup
        42: iconst_2
        43: aload_0
        44: getfield      #35                 // Field illegalFileNameChars:[C
        47: invokestatic  #55                 // Method java/util/Arrays.toString:([C)Ljava/lang/String;
        50: aastore
        51: invokestatic  #56                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        54: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        57: athrow
        58: aload_1
        59: invokevirtual #58                 // Method java/lang/String.length:()I
        62: aload_0
        63: getfield      #30                 // Field maxFileNameLength:I
        66: if_icmple     81
        69: aload_1
        70: iconst_0
        71: aload_0
        72: getfield      #30                 // Field maxFileNameLength:I
        75: invokevirtual #59                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        78: goto          82
        81: aload_1
        82: astore_3
        83: iconst_0
        84: istore        4
        86: aload_3
        87: invokevirtual #60                 // Method java/lang/String.toCharArray:()[C
        90: astore        5
        92: iconst_0
        93: istore        6
        95: iload         6
        97: aload         5
        99: arraylength
       100: if_icmpge     130
       103: aload_0
       104: aload         5
       106: iload         6
       108: caload
       109: invokespecial #47                 // Method isIllegalFileNameChar:(C)Z
       112: ifeq          124
       115: aload         5
       117: iload         6
       119: iload_2
       120: castore
       121: iconst_1
       122: istore        4
       124: iinc          6, 1
       127: goto          95
       130: iload         4
       132: ifeq          143
       135: aload         5
       137: invokestatic  #61                 // Method java/lang/String.valueOf:([C)Ljava/lang/String;
       140: goto          144
       143: aload_3
       144: areturn
      LineNumberTable:
        line 337: 0
        line 338: 8
        line 341: 30
        line 339: 51
        line 343: 58
        line 345: 83
        line 346: 86
        line 347: 92
        line 348: 103
        line 349: 115
        line 350: 121
        line 347: 124
        line 353: 130
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           95      35     6     i   I
            0     145     0  this   Lorg/apache/commons/io/FileSystem;
            0     145     1 candidate   Ljava/lang/String;
            0     145     2 replacement   C
           83      62     3 truncated   Ljava/lang/String;
           86      59     4 changed   Z
           92      53     5 charArray   [C
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class org/apache/commons/io/FileSystem, class java/lang/String, int ]
          stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/apache/commons/io/FileSystem, class java/lang/String, int ]
          stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int, class java/lang/Object ]
        frame_type = 24 /* same */
        frame_type = 22 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class org/apache/commons/io/FileSystem, class java/lang/String, int, class java/lang/String, int, class "[C", int ]
          stack = []
        frame_type = 28 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=13, locals=0, args_size=0
         0: new           #4                  // class org/apache/commons/io/FileSystem
         3: dup
         4: ldc           #62                 // String GENERIC
         6: iconst_0
         7: iconst_0
         8: iconst_0
         9: ldc           #64                 // int 2147483647
        11: ldc           #64                 // int 2147483647
        13: iconst_1
        14: newarray       char
        16: dup
        17: iconst_0
        18: iconst_0
        19: castore
        20: iconst_0
        21: anewarray     #65                 // class java/lang/String
        24: invokespecial #66                 // Method "<init>":(Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
        27: putstatic     #12                 // Field GENERIC:Lorg/apache/commons/io/FileSystem;
        30: new           #4                  // class org/apache/commons/io/FileSystem
        33: dup
        34: ldc           #67                 // String LINUX
        36: iconst_1
        37: iconst_1
        38: iconst_1
        39: sipush        255
        42: sipush        4096
        45: iconst_2
        46: newarray       char
        48: dup
        49: iconst_0
        50: iconst_0
        51: castore
        52: dup
        53: iconst_1
        54: bipush        47
        56: castore
        57: iconst_0
        58: anewarray     #65                 // class java/lang/String
        61: invokespecial #66                 // Method "<init>":(Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
        64: putstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;
        67: new           #4                  // class org/apache/commons/io/FileSystem
        70: dup
        71: ldc           #68                 // String MAC_OSX
        73: iconst_2
        74: iconst_1
        75: iconst_1
        76: sipush        255
        79: sipush        1024
        82: iconst_3
        83: newarray       char
        85: dup
        86: iconst_0
        87: iconst_0
        88: castore
        89: dup
        90: iconst_1
        91: bipush        47
        93: castore
        94: dup
        95: iconst_2
        96: bipush        58
        98: castore
        99: iconst_0
       100: anewarray     #65                 // class java/lang/String
       103: invokespecial #66                 // Method "<init>":(Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
       106: putstatic     #9                  // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;
       109: new           #4                  // class org/apache/commons/io/FileSystem
       112: dup
       113: ldc           #69                 // String WINDOWS
       115: iconst_3
       116: iconst_0
       117: iconst_1
       118: sipush        255
       121: sipush        32000
       124: bipush        41
       126: newarray       char
       128: dup
       129: iconst_0
       130: iconst_0
       131: castore
       132: dup
       133: iconst_1
       134: iconst_1
       135: castore
       136: dup
       137: iconst_2
       138: iconst_2
       139: castore
       140: dup
       141: iconst_3
       142: iconst_3
       143: castore
       144: dup
       145: iconst_4
       146: iconst_4
       147: castore
       148: dup
       149: iconst_5
       150: iconst_5
       151: castore
       152: dup
       153: bipush        6
       155: bipush        6
       157: castore
       158: dup
       159: bipush        7
       161: bipush        7
       163: castore
       164: dup
       165: bipush        8
       167: bipush        8
       169: castore
       170: dup
       171: bipush        9
       173: bipush        9
       175: castore
       176: dup
       177: bipush        10
       179: bipush        10
       181: castore
       182: dup
       183: bipush        11
       185: bipush        11
       187: castore
       188: dup
       189: bipush        12
       191: bipush        12
       193: castore
       194: dup
       195: bipush        13
       197: bipush        13
       199: castore
       200: dup
       201: bipush        14
       203: bipush        14
       205: castore
       206: dup
       207: bipush        15
       209: bipush        15
       211: castore
       212: dup
       213: bipush        16
       215: bipush        16
       217: castore
       218: dup
       219: bipush        17
       221: bipush        17
       223: castore
       224: dup
       225: bipush        18
       227: bipush        18
       229: castore
       230: dup
       231: bipush        19
       233: bipush        19
       235: castore
       236: dup
       237: bipush        20
       239: bipush        20
       241: castore
       242: dup
       243: bipush        21
       245: bipush        21
       247: castore
       248: dup
       249: bipush        22
       251: bipush        22
       253: castore
       254: dup
       255: bipush        23
       257: bipush        23
       259: castore
       260: dup
       261: bipush        24
       263: bipush        24
       265: castore
       266: dup
       267: bipush        25
       269: bipush        25
       271: castore
       272: dup
       273: bipush        26
       275: bipush        26
       277: castore
       278: dup
       279: bipush        27
       281: bipush        27
       283: castore
       284: dup
       285: bipush        28
       287: bipush        28
       289: castore
       290: dup
       291: bipush        29
       293: bipush        29
       295: castore
       296: dup
       297: bipush        30
       299: bipush        30
       301: castore
       302: dup
       303: bipush        31
       305: bipush        31
       307: castore
       308: dup
       309: bipush        32
       311: bipush        34
       313: castore
       314: dup
       315: bipush        33
       317: bipush        42
       319: castore
       320: dup
       321: bipush        34
       323: bipush        47
       325: castore
       326: dup
       327: bipush        35
       329: bipush        58
       331: castore
       332: dup
       333: bipush        36
       335: bipush        60
       337: castore
       338: dup
       339: bipush        37
       341: bipush        62
       343: castore
       344: dup
       345: bipush        38
       347: bipush        63
       349: castore
       350: dup
       351: bipush        39
       353: bipush        92
       355: castore
       356: dup
       357: bipush        40
       359: bipush        124
       361: castore
       362: bipush        22
       364: anewarray     #65                 // class java/lang/String
       367: dup
       368: iconst_0
       369: ldc           #70                 // String AUX
       371: aastore
       372: dup
       373: iconst_1
       374: ldc           #71                 // String COM1
       376: aastore
       377: dup
       378: iconst_2
       379: ldc           #72                 // String COM2
       381: aastore
       382: dup
       383: iconst_3
       384: ldc           #73                 // String COM3
       386: aastore
       387: dup
       388: iconst_4
       389: ldc           #74                 // String COM4
       391: aastore
       392: dup
       393: iconst_5
       394: ldc           #75                 // String COM5
       396: aastore
       397: dup
       398: bipush        6
       400: ldc           #76                 // String COM6
       402: aastore
       403: dup
       404: bipush        7
       406: ldc           #77                 // String COM7
       408: aastore
       409: dup
       410: bipush        8
       412: ldc           #78                 // String COM8
       414: aastore
       415: dup
       416: bipush        9
       418: ldc           #79                 // String COM9
       420: aastore
       421: dup
       422: bipush        10
       424: ldc           #80                 // String CON
       426: aastore
       427: dup
       428: bipush        11
       430: ldc           #81                 // String LPT1
       432: aastore
       433: dup
       434: bipush        12
       436: ldc           #82                 // String LPT2
       438: aastore
       439: dup
       440: bipush        13
       442: ldc           #83                 // String LPT3
       444: aastore
       445: dup
       446: bipush        14
       448: ldc           #84                 // String LPT4
       450: aastore
       451: dup
       452: bipush        15
       454: ldc           #85                 // String LPT5
       456: aastore
       457: dup
       458: bipush        16
       460: ldc           #86                 // String LPT6
       462: aastore
       463: dup
       464: bipush        17
       466: ldc           #87                 // String LPT7
       468: aastore
       469: dup
       470: bipush        18
       472: ldc           #88                 // String LPT8
       474: aastore
       475: dup
       476: bipush        19
       478: ldc           #89                 // String LPT9
       480: aastore
       481: dup
       482: bipush        20
       484: ldc           #90                 // String NUL
       486: aastore
       487: dup
       488: bipush        21
       490: ldc           #91                 // String PRN
       492: aastore
       493: invokespecial #66                 // Method "<init>":(Ljava/lang/String;IZZII[C[Ljava/lang/String;)V
       496: putstatic     #11                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;
       499: iconst_4
       500: anewarray     #4                  // class org/apache/commons/io/FileSystem
       503: dup
       504: iconst_0
       505: getstatic     #12                 // Field GENERIC:Lorg/apache/commons/io/FileSystem;
       508: aastore
       509: dup
       510: iconst_1
       511: getstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;
       514: aastore
       515: dup
       516: iconst_2
       517: getstatic     #9                  // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;
       520: aastore
       521: dup
       522: iconst_3
       523: getstatic     #11                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;
       526: aastore
       527: putstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/FileSystem;
       530: ldc           #92                 // String Linux
       532: invokestatic  #93                 // Method getOsMatchesName:(Ljava/lang/String;)Z
       535: putstatic     #6                  // Field IS_OS_LINUX:Z
       538: ldc           #94                 // String Mac
       540: invokestatic  #93                 // Method getOsMatchesName:(Ljava/lang/String;)Z
       543: putstatic     #8                  // Field IS_OS_MAC:Z
       546: ldc           #95                 // String Windows
       548: invokestatic  #93                 // Method getOsMatchesName:(Ljava/lang/String;)Z
       551: putstatic     #10                 // Field IS_OS_WINDOWS:Z
       554: return
      LineNumberTable:
        line 39: 0
        line 44: 30
        line 56: 67
        line 69: 109
        line 34: 499
        line 92: 530
        line 102: 538
        line 117: 546
}
Signature: #181                         // Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;
SourceFile: "FileSystem.java"
