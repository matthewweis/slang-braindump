Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/HashBag.class
  Last modified May 29, 2022; size 17298 bytes
  SHA-256 checksum 43cb6bbad63acd83641c3d19ff0355c9ecdd19ec1bafd8c1fe37eeb781a906b7
  Compiled from "HashBag.scala"
public final class org.sireum.HashBag<T extends java.lang.Object> extends java.lang.Object implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/HashBag
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 53, attributes: 7
Constant pool:
    #1 = Utf8               org/sireum/HashBag
    #2 = Class              #1            // org/sireum/HashBag
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/DatatypeSig
    #7 = Class              #6            // org/sireum/DatatypeSig
    #8 = Utf8               HashBag.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\t\u0015t!B\u0015+\u0011\u0003yc!B\u0019+\u0011\u0003\u0011\u0004\"B\u001d\u0002\t\u0003Q\u0004\"B\u001e\u0002\t\u0003a\u0004b\u0002B\u000e\u0003\u0011\u0005!Q\u0004\u0005\b\u0003\u001b\u000bA\u0011\u0001B\u0017\u0011\u0019\u0019\u0018\u0001\"\u0001\u0003B!9!qJ\u0001\u0005\u0002\tEc\u0001B\u0019+\u0005}B\u0001\u0002\u0012\u0005\u0003\u0002\u0003\u0006I!\u0012\u0005\u0006s!!\tA\u0016\u0005\u00073\"\u0001\u000b\u0011B#\t\u000biCA\u0011A.\t\u000bqCA\u0011A.\t\u000buCA\u0011\t0\t\u0011\u001dD\u0001R1A\u0005B!DQ\u0001\u001c\u0005\u0005B5DQa\u001d\u0005\u0005\u0002QDqA\u001e\u0005\u0012\u0002\u0013\u0005q\u000f\u0003\u0006\u0002\u0006!A)\u0019!C!\u0003\u000fAq!a\n\t\t\u0003\tI\u0003C\u0004\u00024!!\t!!\u000e\t\u000f\u0005-\u0003\u0002\"\u0001\u0002N!9\u0011q\u000b\u0005\u0005\u0002\u00055\u0003bBA.\u0011\u0011\u0005\u0011Q\f\u0005\b\u0003KBA\u0011AA4\u0011\u001d\ti\u0007\u0003C\u0001\u0003_Bq!!\u001e\t\t\u0003\t9\bC\u0004\u0002\u0002\"!\t!a!\t\u000f\u00055\u0005\u0002\"\u0001\u0002\u0010\"9\u0011Q\u0015\u0005\u0005\u0002\u0005\u001d\u0006bBAW\u0011\u0011\u0005\u0011q\u0016\u0005\b\u0003\u007fCA\u0011AAa\u0011\u001d\t9\r\u0003C\u0001\u0003\u0013Dq!!5\t\t\u0003\t\u0019\u000eC\u0004\u0002\\\"!\t!!8\t\u000f\u0005\r\b\u0002\"\u0001\u0002f\"9\u00111\u001e\u0005\u0005\u0002\u00055\bbBAz\u0011\u0011\u0005\u0011Q\u001f\u0005\b\u0003wDA\u0011AA\u007f\u0011\u001d\u0011\u0019\u0001\u0003C!\u0005\u000b\tq\u0001S1tQ\n\u000bwM\u0003\u0002,Y\u000511/\u001b:fk6T\u0011!L\u0001\u0004_J<7\u0001\u0001\t\u0003a\u0005i\u0011A\u000b\u0002\b\u0011\u0006\u001c\bNQ1h\'\t\t1\u0007\u0005\u00025o5\tQGC\u00017\u0003\u0015\u00198-\u00197b\u0013\tATG\u0001\u0004B]f\u0014VMZ\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003=\nQ!Z7qif,2!\u0010B\f+\u0005q\u0004\u0003\u0002\u0019\t\u0005+)\"\u0001\u0011&\u0014\u0007!\u0019\u0014\t\u0005\u00021\u0005&\u00111I\u000b\u0002\f\t\u0006$\u0018\r^=qKNKw-A\u0003`?6\f\u0007\u000f\u0005\u00031\r\"\u001b\u0016BA$+\u0005\u001dA\u0015m\u001d5NCB\u0004\"!\u0013&\r\u0001\u0011)1\n\u0003b\u0001\u0019\n\tA+\u0005\u0002N!B\u0011AGT\u0005\u0003\u001fV\u0012qAT8uQ&tw\r\u0005\u00025#&\u0011!+\u000e\u0002\u0004\u0003:L\bC\u0001\u0019U\u0013\t)&FA\u0001[)\t9\u0006\fE\u00021\u0011!CQ\u0001\u0012\u0006A\u0002\u0015\u000bAaX7ba\u0006\u0019Q.\u00199\u0016\u0003\u0015\u000baaZ3u\u001b\u0006\u0004\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003}\u0003\"\u0001Y3\u000e\u0003\u0005T!AY2\u0002\t1\fgn\u001a\u0006\u0002I\u0006!!.\u0019<b\u0013\t1\u0017M\u0001\u0004TiJLgnZ\u0001\tQ\u0006\u001c\bnQ8eKV\t\u0011\u000e\u0005\u00025U&\u00111.\u000e\u0002\u0004\u0013:$\u0018AB3rk\u0006d7\u000f\u0006\u0002ocB\u0011Ag\\\u0005\u0003aV\u0012qAQ8pY\u0016\fg\u000eC\u0003s!\u0001\u0007\u0001+A\u0001p\u0003\u0015\t\u0007\u000f\u001d7z)\t9V\u000fC\u0004[#A\u0005\t\u0019A#\u0002\u001f\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uIE*\u0012\u0001\u001f\u0016\u0003\u000bf\\\u0013A\u001f\t\u0004w\u0006\u0005Q\"\u0001?\u000b\u0005ut\u0018!C;oG\",7m[3e\u0015\tyX\'\u0001\u0006b]:|G/\u0019;j_:L1!a\u0001}\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\tI\r|g\u000e^3oiV\u0011\u0011\u0011\u0002\t\u0007\u0003\u0017\tY\"!\t\u000f\t\u00055\u0011q\u0003\b\u0005\u0003\u001f\t)\"\u0004\u0002\u0002\u0012)\u0019\u00111\u0003\u0018\u0002\rq\u0012xn\u001c;?\u0013\u00051\u0014bAA\rk\u00059\u0001/Y2lC\u001e,\u0017\u0002BA\u000f\u0003?\u00111aU3r\u0015\r\tI\"\u000e\t\u0006i\u0005\rr\fU\u0005\u0004\u0003K)$A\u0002+va2,\'\'\u0001\u0003tSj,W#A*)\u0007Q\ti\u0003E\u00021\u0003_I1!!\r+\u0005\u0011\u0001XO]3\u0002\u0011\u0015dW-\\3oiN,\"!a\u000e\u0011\u000b\u0005e\u0012Q\b%\u000f\u0007A\nY$C\u0002\u0002\u001a)JA!a\u0010\u0002B\t\u0019\u0011j\u0015.\n\t\u0005\r\u0013Q\t\u0002\r!\u0006\u001c7.Y4f)J\f\u0017\u000e\u001e\u0006\u0004\u0003\u000fR\u0013!\u0003\u0013j]R,\'O\\1mQ\r)\u0012QF\u0001\bSN,U\u000e\u001d;z+\t\ty\u0005E\u00021\u0003#J1!a\u0015+\u0005\u0005\u0011\u0005f\u0001\f\u0002.\u0005Aan\u001c8F[B$\u0018\u0010K\u0002\u0018\u0003[\tQaY8v]R$2aUA0\u0011\u0019\t\t\u0007\u0007a\u0001\u0011\u0006\tQ\rK\u0002\u0019\u0003[\t\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003\u001f\nI\u0007\u0003\u0004\u0002be\u0001\r\u0001\u0013\u0015\u00043\u00055\u0012!\u0002\u0013qYV\u001cHcA,\u0002r!1\u0011\u0011\r\u000eA\u0002!C3AGA\u0017\u0003)!\u0003\u000f\\;tI!\f7\u000f\u001b\u000b\u0004/\u0006e\u0004bBA>7\u0001\u0007\u0011QP\u0001\u0002aB)A\'a\tI\'\"\u001a1$!\f\u0002\t\u0005$GM\u0014\u000b\u0006/\u0006\u0015\u0015q\u0011\u0005\u0007\u0003Cb\u0002\u0019\u0001%\t\r\u0005%E\u00041\u0001T\u0003\u0005q\u0007f\u0001\u000f\u0002.\u0005QA\u0005\u001d7vg\u0012\u0002H.^:\u0016\t\u0005E\u0015q\u0014\u000b\u0004/\u0006M\u0005bBAK;\u0001\u0007\u0011qS\u0001\u0003KN\u0004b\u0001MAM\u0003;C\u0015bAANU\t\u0011\u0011j\u0015\t\u0004\u0013\u0006}EABAQ;\t\u0007AJA\u0001JQ\ri\u0012QF\u0001\u0007I5Lg.^:\u0015\u0007]\u000bI\u000b\u0003\u0004\u0002by\u0001\r\u0001\u0013\u0015\u0004=\u00055\u0012\u0001\u0004\u0013nS:,8\u000fJ7j]V\u001cX\u0003BAY\u0003w#2aVAZ\u0011\u001d\t)l\ba\u0001\u0003o\u000b\u0011a\u001d\t\u0007a\u0005e\u0015\u0011\u0018%\u0011\u0007%\u000bY\f\u0002\u0004\u0002\"~\u0011\r\u0001\u0014\u0015\u0004?\u00055\u0012a\u0003\u0013nS:,8\u000f\n5bg\"$2aVAb\u0011\u001d\tY\b\ta\u0001\u0003{B3\u0001IA\u0017\u0003\u001d\u0011X-\\8wK:#RaVAf\u0003\u001bDa!!\u0019\"\u0001\u0004A\u0005BBAEC\u0001\u00071\u000bK\u0002\"\u0003[\tq\u0001\n2tY\u0006\u001c\b\u000eF\u0002X\u0003+Da!a6#\u0001\u00049\u0016!B8uQ\u0016\u0014\bf\u0001\u0012\u0002.\u00059QM\u001c;sS\u0016\u001cXCAAp!\u0019\tI$!\u0010\u0002~!\u001a1%!\f\u0002\u000bUt\u0017n\u001c8\u0015\u0007]\u000b9\u000f\u0003\u0004\u0002X\u0012\u0002\ra\u0016\u0015\u0004I\u00055\u0012A\u0002\u0013veI\u0012\u0014\tF\u0002X\u0003_Da!a6&\u0001\u00049\u0006fA\u0013\u0002.\u0005I\u0011N\u001c;feN,7\r\u001e\u000b\u0004/\u0006]\bBBAlM\u0001\u0007q\u000bK\u0002\'\u0003[\ta\u0001J;3eIJDcA,\u0002\u0000\"1\u0011q[\u0014A\u0002]C3aJA\u0017\u0003\u0019\u0019HO]5oOV\u0011!q\u0001\t\u0004a\t%\u0011B\u00014+Q\rA\u0013Q\u0006\u0015\u0004\u0011\t=\u0001c\u0001\u0019\u0003\u0012%\u0019!1\u0003\u0016\u0003\u0011\u0011\fG/\u0019;za\u0016\u00042!\u0013B\f\t\u0015Y5A1\u0001MQ\r\u0019\u0011QF\u0001\nK6\u0004H/_%oSR,BAa\b\u0003&Q!!\u0011\u0005B\u0014!\u0011\u0001\u0004Ba\t\u0011\u0007%\u0013)\u0003B\u0003L\t\t\u0007A\n\u0003\u0004\u0003*\u0011\u0001\raU\u0001\u0010S:LG/[1m\u0007\u0006\u0004\u0018mY5us\"\u001aA!!\f\u0016\r\t=\"Q\bB\u001b)\u0011\u0011\tDa\u000e\u0011\tAB!1\u0007\t\u0004\u0013\nUB!B&\u0006\u0005\u0004a\u0005bBA[\u000b\u0001\u0007!\u0011\b\t\ba\u0005e%1\bB\u001a!\rI%Q\b\u0003\u0007\u0003C+!\u0019\u0001\')\u0007\u0015\ti#\u0006\u0003\u0003D\t%C\u0003\u0002B#\u0005\u0017\u0002B\u0001\r\u0005\u0003HA\u0019\u0011J!\u0013\u0005\u000b-3!\u0019\u0001\'\t\ri3\u0001\u0019\u0001B\'!\u0015\u0001dIa\u0012T\u0003\u001d)h.\u00199qYf,BAa\u0015\u0003`Q!!Q\u000bB1!\u0015!$q\u000bB.\u0013\r\u0011I&\u000e\u0002\u0005\'>lW\rE\u00031\r\nu3\u000bE\u0002J\u0005?\"QaS\u0004C\u00021CaA]\u0004A\u0002\t\r\u0004\u0003\u0002\u0019\t\u0005;\u0002
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #18 = Class              #17           // org/sireum/$internal/PackageTrait$ISZ$
   #19 = Utf8               org/sireum/$internal/PackageTrait
   #20 = Class              #19           // org/sireum/$internal/PackageTrait
   #21 = Utf8               ISZ$
   #22 = Utf8               org/sireum/Z$$String$
   #23 = Class              #22           // org/sireum/Z$$String$
   #24 = Utf8               org/sireum/Z
   #25 = Class              #24           // org/sireum/Z
   #26 = Utf8               $String$
   #27 = Utf8               org/sireum/package$$Arrow$
   #28 = Class              #27           // org/sireum/package$$Arrow$
   #29 = Utf8               org/sireum/package
   #30 = Class              #29           // org/sireum/package
   #31 = Utf8               $Arrow$
   #32 = Utf8               hashCode
   #33 = Utf8               I
   #34 = Utf8               $content
   #35 = Utf8               Lscala/collection/immutable/Seq;
   #36 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #37 = Utf8               _map
   #38 = Utf8               Lorg/sireum/HashMap;
   #39 = Utf8               Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;
   #40 = Utf8               bitmap$0
   #41 = Utf8               B
   #42 = Utf8               unapply
   #43 = Utf8               (Lorg/sireum/HashBag;)Lscala/Some;
   #44 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/HashBag<TT;>;)Lscala/Some<Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;>;
   #45 = Utf8               o
   #46 = Utf8               org/sireum/HashBag$
   #47 = Class              #46           // org/sireum/HashBag$
   #48 = Utf8               MODULE$
   #49 = Utf8               Lorg/sireum/HashBag$;
   #50 = NameAndType        #48:#49       // MODULE$:Lorg/sireum/HashBag$;
   #51 = Fieldref           #47.#50       // org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
   #52 = NameAndType        #42:#43       // unapply:(Lorg/sireum/HashBag;)Lscala/Some;
   #53 = Methodref          #47.#52       // org/sireum/HashBag$.unapply:(Lorg/sireum/HashBag;)Lscala/Some;
   #54 = Utf8               Lorg/sireum/HashBag;
   #55 = Utf8               emptyInit
   #56 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashBag;
   #57 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashBag<TT;>;
   #58 = Utf8               initialCapacity
   #59 = NameAndType        #55:#56       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashBag;
   #60 = Methodref          #47.#59       // org/sireum/HashBag$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashBag;
   #61 = Utf8               Lorg/sireum/Z;
   #62 = Utf8               empty
   #63 = Utf8               ()Lorg/sireum/HashBag;
   #64 = Utf8               <T:Ljava/lang/Object;>()Lorg/sireum/HashBag<TT;>;
   #65 = NameAndType        #62:#63       // empty:()Lorg/sireum/HashBag;
   #66 = Methodref          #47.#65       // org/sireum/HashBag$.empty:()Lorg/sireum/HashBag;
   #67 = Utf8               hash
   #68 = Utf8               ()Lorg/sireum/Z;
   #69 = Utf8               hash$
   #70 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #71 = NameAndType        #69:#70       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #72 = InterfaceMethodref #7.#71        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #73 = Utf8               this
   #74 = Utf8               $cannotMixImmutableAndMutable
   #75 = Utf8               ()Lscala/runtime/Nothing$;
   #76 = Utf8               org/sireum/Immutable
   #77 = Class              #76           // org/sireum/Immutable
   #78 = Utf8               $cannotMixImmutableAndMutable$
   #79 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #80 = NameAndType        #78:#79       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #81 = InterfaceMethodref #77.#80       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #82 = Utf8               $hasEquals
   #83 = Utf8               ()Z
   #84 = Utf8               $hasEquals$
   #85 = Utf8               (Lorg/sireum/Immutable;)Z
   #86 = NameAndType        #84:#85       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #87 = InterfaceMethodref #77.#86       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #88 = Utf8               $hasString
   #89 = Utf8               $hasString$
   #90 = NameAndType        #89:#85       // $hasString$:(Lorg/sireum/Immutable;)Z
   #91 = InterfaceMethodref #77.#90       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #92 = Utf8               $clone
   #93 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #94 = Utf8               org/sireum/$internal/ImmutableMarker
   #95 = Class              #94           // org/sireum/$internal/ImmutableMarker
   #96 = Utf8               $clone$
   #97 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #98 = NameAndType        #96:#97       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #99 = InterfaceMethodref #95.#98       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #100 = Utf8               map
  #101 = Utf8               ()Lorg/sireum/HashMap;
  #102 = Utf8               ()Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;
  #103 = NameAndType        #37:#38       // _map:Lorg/sireum/HashMap;
  #104 = Fieldref           #2.#103       // org/sireum/HashBag._map:Lorg/sireum/HashMap;
  #105 = Utf8               getMap
  #106 = Utf8               toString
  #107 = Utf8               ()Ljava/lang/String;
  #108 = Utf8               string
  #109 = NameAndType        #108:#107     // string:()Ljava/lang/String;
  #110 = Methodref          #2.#109       // org/sireum/HashBag.string:()Ljava/lang/String;
  #111 = Utf8               hashCode$lzycompute
  #112 = Utf8               ()I
  #113 = NameAndType        #40:#41       // bitmap$0:B
  #114 = Fieldref           #2.#113       // org/sireum/HashBag.bitmap$0:B
  #115 = NameAndType        #82:#83       // $hasEquals:()Z
  #116 = Methodref          #2.#115       // org/sireum/HashBag.$hasEquals:()Z
  #117 = NameAndType        #32:#112      // hashCode:()I
  #118 = Methodref          #5.#117       // java/lang/Object.hashCode:()I
  #119 = Utf8               scala/package$
  #120 = Class              #119          // scala/package$
  #121 = Utf8               Lscala/package$;
  #122 = NameAndType        #48:#121      // MODULE$:Lscala/package$;
  #123 = Fieldref           #120.#122     // scala/package$.MODULE$:Lscala/package$;
  #124 = Utf8               Seq
  #125 = Utf8               ()Lscala/collection/immutable/Seq$;
  #126 = NameAndType        #124:#125     // Seq:()Lscala/collection/immutable/Seq$;
  #127 = Methodref          #120.#126     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #128 = Utf8               scala/runtime/ScalaRunTime$
  #129 = Class              #128          // scala/runtime/ScalaRunTime$
  #130 = Utf8               Lscala/runtime/ScalaRunTime$;
  #131 = NameAndType        #48:#130      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #132 = Fieldref           #129.#131     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #133 = Utf8               getClass
  #134 = Utf8               ()Ljava/lang/Class;
  #135 = NameAndType        #133:#134     // getClass:()Ljava/lang/Class;
  #136 = Methodref          #2.#135       // org/sireum/HashBag.getClass:()Ljava/lang/Class;
  #137 = Utf8               java/lang/Class
  #138 = Class              #137          // java/lang/Class
  #139 = Utf8               getName
  #140 = NameAndType        #139:#107     // getName:()Ljava/lang/String;
  #141 = Methodref          #138.#140     // java/lang/Class.getName:()Ljava/lang/String;
  #142 = NameAndType        #100:#101     // map:()Lorg/sireum/HashMap;
  #143 = Methodref          #2.#142       // org/sireum/HashBag.map:()Lorg/sireum/HashMap;
  #144 = Utf8               wrapRefArray
  #145 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #146 = NameAndType        #144:#145     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #147 = Methodref          #129.#146     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #148 = Utf8               scala/collection/immutable/Seq$
  #149 = Class              #148          // scala/collection/immutable/Seq$
  #150 = Utf8               apply
  #151 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #152 = NameAndType        #150:#151     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #153 = Methodref          #149.#152     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #154 = Utf8               scala/collection/Seq
  #155 = Class              #154          // scala/collection/Seq
  #156 = InterfaceMethodref #155.#117     // scala/collection/Seq.hashCode:()I
  #157 = NameAndType        #32:#33       // hashCode:I
  #158 = Fieldref           #2.#157       // org/sireum/HashBag.hashCode:I
  #159 = Utf8               java/lang/Throwable
  #160 = Class              #159          // java/lang/Throwable
  #161 = NameAndType        #111:#112     // hashCode$lzycompute:()I
  #162 = Methodref          #2.#161       // org/sireum/HashBag.hashCode$lzycompute:()I
  #163 = Utf8               equals
  #164 = Utf8               (Ljava/lang/Object;)Z
  #165 = NameAndType        #163:#164     // equals:(Ljava/lang/Object;)Z
  #166 = Methodref          #5.#165       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #167 = Methodref          #2.#117       // org/sireum/HashBag.hashCode:()I
  #168 = Utf8               Ljava/lang/Object;
  #169 = Utf8               org/sireum/HashMap
  #170 = Class              #169          // org/sireum/HashMap
  #171 = Utf8               (Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
  #172 = Utf8               (Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;)Lorg/sireum/HashBag<TT;>;
  #173 = Utf8               <init>
  #174 = Utf8               (Lorg/sireum/HashMap;)V
  #175 = NameAndType        #173:#174     // "<init>":(Lorg/sireum/HashMap;)V
  #176 = Methodref          #2.#175       // org/sireum/HashBag."<init>":(Lorg/sireum/HashMap;)V
  #177 = Utf8               apply$default$1
  #178 = Utf8               $content$lzycompute
  #179 = Utf8               ()Lscala/collection/immutable/Seq;
  #180 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #181 = Utf8               scala/Tuple2
  #182 = Class              #181          // scala/Tuple2
  #183 = Utf8               type
  #184 = String             #183          // type
  #185 = Utf8               List
  #186 = Utf8               ()Lscala/collection/immutable/List$;
  #187 = NameAndType        #185:#186     // List:()Lscala/collection/immutable/List$;
  #188 = Methodref          #120.#187     // scala/package$.List:()Lscala/collection/immutable/List$;
  #189 = Utf8               java/lang/String
  #190 = Class              #189          // java/lang/String
  #191 = Utf8               org
  #192 = String             #191          // org
  #193 = Utf8               sireum
  #194 = String             #193          // sireum
  #195 = Utf8               HashBag
  #196 = String             #195          // HashBag
  #197 = Utf8               [Ljava/lang/Object;
  #198 = Class              #197          // "[Ljava/lang/Object;"
  #199 = Utf8               scala/collection/immutable/List$
  #200 = Class              #199          // scala/collection/immutable/List$
  #201 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #202 = NameAndType        #150:#201     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #203 = Methodref          #200.#202     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #204 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #205 = NameAndType        #173:#204     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #206 = Methodref          #182.#205     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #207 = String             #100          // map
  #208 = Utf8               scala/collection/immutable/Seq
  #209 = Class              #208          // scala/collection/immutable/Seq
  #210 = NameAndType        #34:#35       // $content:Lscala/collection/immutable/Seq;
  #211 = Fieldref           #2.#210       // org/sireum/HashBag.$content:Lscala/collection/immutable/Seq;
  #212 = NameAndType        #178:#179     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #213 = Methodref          #2.#212       // org/sireum/HashBag.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #214 = Utf8               size
  #215 = Utf8               Lorg/sireum/Z$$String$;
  #216 = NameAndType        #48:#215      // MODULE$:Lorg/sireum/Z$$String$;
  #217 = Fieldref           #23.#216      // org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
  #218 = Utf8               0
  #219 = String             #218          // 0
  #220 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #221 = NameAndType        #150:#220     // apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #222 = Methodref          #23.#221      // org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
  #223 = Utf8               scala/runtime/ObjectRef
  #224 = Class              #223          // scala/runtime/ObjectRef
  #225 = Utf8               create
  #226 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #227 = NameAndType        #225:#226     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #228 = Methodref          #224.#227     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #229 = Utf8               values
  #230 = Utf8               ()Lorg/sireum/IS;
  #231 = NameAndType        #229:#230     // values:()Lorg/sireum/IS;
  #232 = Methodref          #170.#231     // org/sireum/HashMap.values:()Lorg/sireum/IS;
  #233 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #234 = MethodType         #233          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #235 = Utf8               $anonfun$size$1$adapted
  #236 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #237 = NameAndType        #235:#236     // $anonfun$size$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #238 = Methodref          #2.#237       // org/sireum/HashBag.$anonfun$size$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #239 = MethodHandle       6:#238        // REF_invokeStatic org/sireum/HashBag.$anonfun$size$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  #240 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #241 = MethodType         #240          //  (Lorg/sireum/Z;)Ljava/lang/Object;
  #242 = Integer            5
  #243 = Integer            1
  #244 = Utf8               java/lang/invoke/LambdaMetafactory
  #245 = Class              #244          // java/lang/invoke/LambdaMetafactory
  #246 = Utf8               altMetafactory
  #247 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #248 = NameAndType        #246:#247     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #249 = Methodref          #245.#248     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #250 = MethodHandle       6:#249        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #251 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #252 = NameAndType        #150:#251     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #253 = InvokeDynamic      #0:#252       // #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #254 = Utf8               org/sireum/IS
  #255 = Class              #254          // org/sireum/IS
  #256 = Utf8               foreach
  #257 = Utf8               (Lscala/Function1;)V
  #258 = NameAndType        #256:#257     // foreach:(Lscala/Function1;)V
  #259 = Methodref          #255.#258     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #260 = Utf8               elem
  #261 = NameAndType        #260:#168     // elem:Ljava/lang/Object;
  #262 = Fieldref           #224.#261     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #263 = Utf8               r
  #264 = Utf8               Lscala/runtime/ObjectRef;
  #265 = Utf8               elements
  #266 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;
  #267 = Utf8               org/sireum/package$
  #268 = Class              #267          // org/sireum/package$
  #269 = Utf8               Lorg/sireum/package$;
  #270 = NameAndType        #48:#269      // MODULE$:Lorg/sireum/package$;
  #271 = Fieldref           #268.#270     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #272 = Utf8               ISZ
  #273 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #274 = NameAndType        #272:#273     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #275 = Methodref          #268.#274     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #276 = Utf8               scala/collection/immutable/Nil$
  #277 = Class              #276          // scala/collection/immutable/Nil$
  #278 = Utf8               Lscala/collection/immutable/Nil$;
  #279 = NameAndType        #48:#278      // MODULE$:Lscala/collection/immutable/Nil$;
  #280 = Fieldref           #277.#279     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #281 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #282 = NameAndType        #150:#281     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #283 = Methodref          #18.#282      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #284 = Utf8               entries
  #285 = NameAndType        #284:#230     // entries:()Lorg/sireum/IS;
  #286 = Methodref          #2.#285       // org/sireum/HashBag.entries:()Lorg/sireum/IS;
  #287 = Utf8               $anonfun$elements$1$adapted
  #288 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #289 = NameAndType        #287:#288     // $anonfun$elements$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #290 = Methodref          #2.#289       // org/sireum/HashBag.$anonfun$elements$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #291 = MethodHandle       6:#290        // REF_invokeStatic org/sireum/HashBag.$anonfun$elements$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #292 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #293 = MethodType         #292          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #294 = InvokeDynamic      #1:#252       // #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #295 = Utf8               isEmpty
  #296 = Utf8               org/sireum/B$
  #297 = Class              #296          // org/sireum/B$
  #298 = Utf8               Lorg/sireum/B$;
  #299 = NameAndType        #48:#298      // MODULE$:Lorg/sireum/B$;
  #300 = Fieldref           #297.#299     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #301 = NameAndType        #214:#68      // size:()Lorg/sireum/Z;
  #302 = Methodref          #2.#301       // org/sireum/HashBag.size:()Lorg/sireum/Z;
  #303 = Utf8               org/sireum/Z$
  #304 = Class              #303          // org/sireum/Z$
  #305 = Utf8               Lorg/sireum/Z$;
  #306 = NameAndType        #48:#305      // MODULE$:Lorg/sireum/Z$;
  #307 = Fieldref           #304.#306     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #308 = Utf8               (I)Lorg/sireum/Z;
  #309 = NameAndType        #150:#308     // apply:(I)Lorg/sireum/Z;
  #310 = Methodref          #304.#309     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #311 = Utf8               (Z)Z
  #312 = NameAndType        #150:#311     // apply:(Z)Z
  #313 = Methodref          #297.#312     // org/sireum/B$.apply:(Z)Z
  #314 = Utf8               nonEmpty
  #315 = NameAndType        #295:#83      // isEmpty:()Z
  #316 = Methodref          #2.#315       // org/sireum/HashBag.isEmpty:()Z
  #317 = Utf8               unary_$bang$extension
  #318 = NameAndType        #317:#311     // unary_$bang$extension:(Z)Z
  #319 = Methodref          #297.#318     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #320 = Utf8               count
  #321 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Z;
  #322 = Utf8               (TT;)Lorg/sireum/Z;
  #323 = Utf8               e
  #324 = Utf8               get
  #325 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
  #326 = NameAndType        #324:#325     // get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #327 = Methodref          #170.#326     // org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
  #328 = Utf8               org/sireum/Some
  #329 = Class              #328          // org/sireum/Some
  #330 = Utf8               org/sireum/Some$
  #331 = Class              #330          // org/sireum/Some$
  #332 = Utf8               Lorg/sireum/Some$;
  #333 = NameAndType        #48:#332      // MODULE$:Lorg/sireum/Some$;
  #334 = Fieldref           #331.#333     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #335 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #336 = NameAndType        #42:#335      // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #337 = Methodref          #331.#336     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #338 = Utf8               scala/Some
  #339 = Class              #338          // scala/Some
  #340 = Methodref          #339.#315     // scala/Some.isEmpty:()Z
  #341 = Utf8               ()Ljava/lang/Object;
  #342 = NameAndType        #324:#341     // get:()Ljava/lang/Object;
  #343 = Methodref          #339.#342     // scala/Some.get:()Ljava/lang/Object;
  #344 = Utf8               n
  #345 = Utf8               org/sireum/Option
  #346 = Class              #345          // org/sireum/Option
  #347 = Utf8               contains
  #348 = Utf8               (TT;)Z
  #349 = NameAndType        #320:#321     // count:(Ljava/lang/Object;)Lorg/sireum/Z;
  #350 = Methodref          #2.#349       // org/sireum/HashBag.count:(Ljava/lang/Object;)Lorg/sireum/Z;
  #351 = Utf8               $greater
  #352 = Utf8               (Lorg/sireum/Z;)Z
  #353 = NameAndType        #351:#352     // $greater:(Lorg/sireum/Z;)Z
  #354 = InterfaceMethodref #25.#353      // org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
  #355 = Utf8               $plus
  #356 = Utf8               (Ljava/lang/Object;)Lorg/sireum/HashBag;
  #357 = Utf8               (TT;)Lorg/sireum/HashBag<TT;>;
  #358 = Utf8               addN
  #359 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
  #360 = NameAndType        #358:#359     // addN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
  #361 = Methodref          #2.#360       // org/sireum/HashBag.addN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
  #362 = Utf8               $plus$hash
  #363 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashBag;
  #364 = Utf8               (Lscala/Tuple2<TT;Lorg/sireum/Z;>;)Lorg/sireum/HashBag<TT;>;
  #365 = Utf8               p
  #366 = Utf8               _1
  #367 = NameAndType        #366:#341     // _1:()Ljava/lang/Object;
  #368 = Methodref          #182.#367     // scala/Tuple2._1:()Ljava/lang/Object;
  #369 = Utf8               _2
  #370 = NameAndType        #369:#341     // _2:()Ljava/lang/Object;
  #371 = Methodref          #182.#370     // scala/Tuple2._2:()Ljava/lang/Object;
  #372 = Utf8               Lscala/Tuple2;
  #373 = Utf8               (TT;Lorg/sireum/Z;)Lorg/sireum/HashBag<TT;>;
  #374 = Utf8               $less$eq
  #375 = NameAndType        #374:#352     // $less$eq:(Lorg/sireum/Z;)Z
  #376 = InterfaceMethodref #25.#375      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #377 = Utf8               $4B
  #378 = NameAndType        #377:#311     // $4B:(Z)Z
  #379 = Methodref          #297.#378     // org/sireum/B$.$4B:(Z)Z
  #380 = Utf8               Lorg/sireum/package$$Arrow$;
  #381 = NameAndType        #48:#380      // MODULE$:Lorg/sireum/package$$Arrow$;
  #382 = Fieldref           #28.#381      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #383 = Utf8               $Arrow
  #384 = NameAndType        #383:#233     // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #385 = Methodref          #268.#384     // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #386 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #387 = NameAndType        #355:#386     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #388 = InterfaceMethodref #25.#387      // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #389 = Utf8               $tilde$greater$extension
  #390 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #391 = NameAndType        #389:#390     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #392 = Methodref          #28.#391      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #393 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashMap;
  #394 = NameAndType        #355:#393     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #395 = Methodref          #170.#394     // org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #396 = NameAndType        #150:#171     // apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
  #397 = Methodref          #2.#396       // org/sireum/HashBag.apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
  #398 = Utf8               $plus$plus
  #399 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashBag;
  #400 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/HashBag<TT;>;
  #401 = Utf8               es
  #402 = Utf8               $anonfun$$plus$plus$1$adapted
  #403 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #404 = NameAndType        #402:#403     // $anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #405 = Methodref          #2.#404       // org/sireum/HashBag.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #406 = MethodHandle       6:#405        // REF_invokeStatic org/sireum/HashBag.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #407 = InvokeDynamic      #2:#252       // #2:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #408 = Utf8               Lorg/sireum/IS;
  #409 = Utf8               $minus
  #410 = Utf8               removeN
  #411 = NameAndType        #410:#359     // removeN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
  #412 = Methodref          #2.#411       // org/sireum/HashBag.removeN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
  #413 = Utf8               $minus$minus
  #414 = Utf8               s
  #415 = Utf8               $anonfun$$minus$minus$1$adapted
  #416 = NameAndType        #415:#403     // $anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #417 = Methodref          #2.#416       // org/sireum/HashBag.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #418 = MethodHandle       6:#417        // REF_invokeStatic org/sireum/HashBag.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
  #419 = InvokeDynamic      #3:#252       // #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #420 = Utf8               $minus$hash
  #421 = NameAndType        #409:#386     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #422 = InterfaceMethodref #25.#421      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #423 = NameAndType        #409:#393     // $minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #424 = Methodref          #170.#423     // org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #425 = Utf8               current
  #426 = Utf8               newN
  #427 = Utf8               $bslash
  #428 = Utf8               (Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
  #429 = Utf8               (Lorg/sireum/HashBag<TT;>;)Lorg/sireum/HashBag<TT;>;
  #430 = Utf8               other
  #431 = NameAndType        #265:#230     // elements:()Lorg/sireum/IS;
  #432 = Methodref          #2.#431       // org/sireum/HashBag.elements:()Lorg/sireum/IS;
  #433 = NameAndType        #413:#399     // $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashBag;
  #434 = Methodref          #2.#433       // org/sireum/HashBag.$minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashBag;
  #435 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TT;Lorg/sireum/Z;>;>;
  #436 = Methodref          #170.#285     // org/sireum/HashMap.entries:()Lorg/sireum/IS;
  #437 = Utf8               union
  #438 = Utf8               $u222A
  #439 = NameAndType        #438:#428     // $u222A:(Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
  #440 = Methodref          #2.#439       // org/sireum/HashBag.$u222A:(Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
  #441 = NameAndType        #398:#399     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashBag;
  #442 = Methodref          #2.#441       // org/sireum/HashBag.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashBag;
  #443 = Utf8               intersect
  #444 = Utf8               $u2229
  #445 = NameAndType        #444:#428     // $u2229:(Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
  #446 = Methodref          #2.#445       // org/sireum/HashBag.$u2229:(Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
  #447 = Utf8               $anonfun$$u2229$1$adapted
  #448 = Utf8               (Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #449 = NameAndType        #447:#448     // $anonfun$$u2229$1$adapted:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #450 = Methodref          #2.#449       // org/sireum/HashBag.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #451 = MethodHandle       6:#450        // REF_invokeStatic org/sireum/HashBag.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #452 = Utf8               (Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #453 = NameAndType        #150:#452     // apply:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #454 = InvokeDynamic      #4:#453       // #4:apply:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #455 = Methodref          #170.#109     // org/sireum/HashMap.string:()Ljava/lang/String;
  #456 = NameAndType        #92:#93       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #457 = Methodref          #2.#456       // org/sireum/HashBag.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #458 = Utf8               $anonfun$size$1
  #459 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
  #460 = Utf8               r$1
  #461 = Utf8               $anonfun$elements$2
  #462 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #463 = Utf8               e$1
  #464 = Utf8               x$2
  #465 = Utf8               $anonfun$elements$1
  #466 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #467 = Utf8               r$2
  #468 = Utf8               entry
  #469 = Utf8               org/sireum/helper$
  #470 = Class              #469          // org/sireum/helper$
  #471 = Utf8               Lorg/sireum/helper$;
  #472 = NameAndType        #48:#471      // MODULE$:Lorg/sireum/helper$;
  #473 = Fieldref           #470.#472     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #474 = Utf8               assign
  #475 = NameAndType        #474:#233     // assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #476 = Methodref          #470.#475     // org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
  #477 = Utf8               scala/MatchError
  #478 = Class              #477          // scala/MatchError
  #479 = Utf8               (Ljava/lang/Object;)V
  #480 = NameAndType        #173:#479     // "<init>":(Ljava/lang/Object;)V
  #481 = Methodref          #478.#480     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #482 = Utf8               until
  #483 = Utf8               (Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #484 = NameAndType        #482:#483     // until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #485 = InterfaceMethodref #25.#484      // org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #486 = NameAndType        #461:#462     // $anonfun$elements$2:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #487 = Methodref          #2.#486       // org/sireum/HashBag.$anonfun$elements$2:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #488 = MethodHandle       6:#487        // REF_invokeStatic org/sireum/HashBag.$anonfun$elements$2:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #489 = Utf8               (Ljava/lang/Object;)Lscala/Function1;
  #490 = NameAndType        #150:#489     // apply:(Ljava/lang/Object;)Lscala/Function1;
  #491 = InvokeDynamic      #5:#490       // #5:apply:(Ljava/lang/Object;)Lscala/Function1;
  #492 = Utf8               org/sireum/ZRange
  #493 = Class              #492          // org/sireum/ZRange
  #494 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #495 = NameAndType        #100:#494     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #496 = Methodref          #493.#495     // org/sireum/ZRange.map:(Lscala/Function1;)Lorg/sireum/IS;
  #497 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
  #498 = NameAndType        #398:#497     // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #499 = Methodref          #255.#498     // org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
  #500 = Utf8               x
  #501 = Utf8               $anonfun$$plus$plus$1
  #502 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #503 = Utf8               r$3
  #504 = NameAndType        #355:#356     // $plus:(Ljava/lang/Object;)Lorg/sireum/HashBag;
  #505 = Methodref          #2.#504       // org/sireum/HashBag.$plus:(Ljava/lang/Object;)Lorg/sireum/HashBag;
  #506 = Utf8               $anonfun$$minus$minus$1
  #507 = Utf8               r$4
  #508 = NameAndType        #409:#356     // $minus:(Ljava/lang/Object;)Lorg/sireum/HashBag;
  #509 = Methodref          #2.#508       // org/sireum/HashBag.$minus:(Ljava/lang/Object;)Lorg/sireum/HashBag;
  #510 = Utf8               $anonfun$$u2229$1
  #511 = Utf8               (Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #512 = Utf8               other$1
  #513 = Utf8               r$5
  #514 = Utf8               $less
  #515 = NameAndType        #514:#352     // $less:(Lorg/sireum/Z;)Z
  #516 = InterfaceMethodref #25.#515      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #517 = Utf8               m
  #518 = Utf8               (Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;)V
  #519 = Utf8               __map
  #520 = Utf8               ()V
  #521 = NameAndType        #173:#520     // "<init>":()V
  #522 = Methodref          #5.#521       // java/lang/Object."<init>":()V
  #523 = Utf8               $init$
  #524 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #525 = NameAndType        #523:#524     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #526 = InterfaceMethodref #95.#525      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #527 = Utf8               (Lorg/sireum/Immutable;)V
  #528 = NameAndType        #523:#527     // $init$:(Lorg/sireum/Immutable;)V
  #529 = InterfaceMethodref #77.#528      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #530 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #531 = NameAndType        #523:#530     // $init$:(Lorg/sireum/DatatypeSig;)V
  #532 = InterfaceMethodref #7.#531       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #533 = NameAndType        #458:#459     // $anonfun$size$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
  #534 = Methodref          #2.#533       // org/sireum/HashBag.$anonfun$size$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
  #535 = Utf8               scala/runtime/BoxedUnit
  #536 = Class              #535          // scala/runtime/BoxedUnit
  #537 = Utf8               UNIT
  #538 = Utf8               Lscala/runtime/BoxedUnit;
  #539 = NameAndType        #537:#538     // UNIT:Lscala/runtime/BoxedUnit;
  #540 = Fieldref           #536.#539     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #541 = NameAndType        #465:#466     // $anonfun$elements$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #542 = Methodref          #2.#541       // org/sireum/HashBag.$anonfun$elements$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #543 = NameAndType        #501:#502     // $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #544 = Methodref          #2.#543       // org/sireum/HashBag.$anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #545 = NameAndType        #506:#502     // $anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #546 = Methodref          #2.#545       // org/sireum/HashBag.$anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
  #547 = NameAndType        #510:#511     // $anonfun$$u2229$1:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #548 = Methodref          #2.#547       // org/sireum/HashBag.$anonfun$$u2229$1:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #549 = Utf8               $deserializeLambda$
  #550 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #551 = Utf8               scala/runtime/LambdaDeserialize
  #552 = Class              #551          // scala/runtime/LambdaDeserialize
  #553 = Utf8               bootstrap
  #554 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #555 = NameAndType        #553:#554     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #556 = Methodref          #552.#555     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #557 = MethodHandle       6:#556        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #558 = Utf8               lambdaDeserialize
  #559 = NameAndType        #558:#550     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #560 = InvokeDynamic      #6:#559       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #561 = Utf8               Signature
  #562 = Utf8               Code
  #563 = Utf8               LocalVariableTable
  #564 = Utf8               MethodParameters
  #565 = Utf8               LineNumberTable
  #566 = Utf8               StackMapTable
  #567 = Utf8               InnerClasses
  #568 = Utf8               SourceFile
  #569 = Utf8               RuntimeVisibleAnnotations
  #570 = Utf8               BootstrapMethods
  #571 = Utf8               ScalaInlineInfo
  #572 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #36                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.HashMap<T, org.sireum.Z> _map;
    descriptor: Lorg/sireum/HashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #39                          // Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <T extends java.lang.Object> scala.Some<org.sireum.HashMap<T, org.sireum.Z>> unapply(org.sireum.HashBag<T>);
    descriptor: (Lorg/sireum/HashBag;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #51                 // Field org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
         3: aload_0
         4: invokevirtual #53                 // Method org/sireum/HashBag$.unapply:(Lorg/sireum/HashBag;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/HashBag;
    Signature: #44                          // <T:Ljava/lang/Object;>(Lorg/sireum/HashBag<TT;>;)Lscala/Some<Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static <T extends java.lang.Object> org.sireum.HashBag<T> emptyInit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashBag;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #51                 // Field org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
         3: aload_0
         4: invokevirtual #60                 // Method org/sireum/HashBag$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashBag;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 initialCapacity   Lorg/sireum/Z;
    Signature: #57                          // <T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      initialCapacity                final

  public static <T extends java.lang.Object> org.sireum.HashBag<T> empty();
    descriptor: ()Lorg/sireum/HashBag;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #51                 // Field org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
         3: invokevirtual #66                 // Method org/sireum/HashBag$.empty:()Lorg/sireum/HashBag;
         6: areturn
    Signature: #64                          // <T:Ljava/lang/Object;>()Lorg/sireum/HashBag<TT;>;

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #81                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #99                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  public org.sireum.HashMap<T, org.sireum.Z> map();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _map:Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;
    Signature: #102                         // ()Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;

  public org.sireum.HashMap<T, org.sireum.Z> getMap();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _map:Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;
    Signature: #102                         // ()Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #110                // Method string:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #114                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     88
        15: aload_0
        16: aload_0
        17: invokevirtual #116                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #118                // Method java/lang/Object.hashCode:()I
        27: goto          74
        30: getstatic     #123                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #127                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #132                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #5                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #136                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        59: aastore
        60: invokevirtual #147                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        63: invokevirtual #153                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        66: checkcast     #155                // class scala/collection/Seq
        69: invokeinterface #156,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        74: putfield      #158                // Field hashCode:I
        77: aload_0
        78: aload_0
        79: getfield      #114                // Field bitmap$0:B
        82: iconst_1
        83: ior
        84: i2b
        85: putfield      #114                // Field bitmap$0:B
        88: aload_1
        89: monitorexit
        90: goto          96
        93: aload_1
        94: monitorexit
        95: athrow
        96: aload_0
        97: getfield      #158                // Field hashCode:I
       100: ireturn
      Exception table:
         from    to  target type
             4    88    93   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/HashBag, class org/sireum/HashBag ]
          stack = [ class org/sireum/HashBag ]
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/sireum/HashBag, class org/sireum/HashBag ]
          stack = [ class org/sireum/HashBag, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lorg/sireum/HashBag;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #162                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #158                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashBag;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #116                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #166                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/HashBag
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/HashBag
        37: astore        4
        39: aload_0
        40: invokevirtual #167                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #167                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        59: aload         4
        61: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #166                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/HashBag ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/HashBag, class java/lang/Object, top, class java/lang/Object, class org/sireum/HashBag, class org/sireum/HashMap ]
          stack = [ class org/sireum/HashMap ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashBag, class java/lang/Object, top, class java/lang/Object, class org/sireum/HashBag ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/HashBag, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashBag, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/HashBag;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.HashBag<T> apply(org.sireum.HashMap<T, org.sireum.Z>);
    descriptor: (Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/HashBag
         3: dup
         4: aload_1
         5: invokespecial #176                // Method "<init>":(Lorg/sireum/HashMap;)V
         8: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashBag;
            0       9     1   map   Lorg/sireum/HashMap;
    Signature: #172                         // (Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      map                            final

  public org.sireum.HashMap<T, org.sireum.Z> apply$default$1();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;
    Signature: #102                         // ()Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #114                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     120
        15: aload_0
        16: getstatic     #123                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #127                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #132                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #182                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #182                // class scala/Tuple2
        34: dup
        35: ldc           #184                // String type
        37: getstatic     #123                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #188                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #132                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #190                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #192                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #194                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #196                // String HashBag
        64: aastore
        65: checkcast     #198                // class "[Ljava/lang/Object;"
        68: invokevirtual #147                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #203                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #206                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #182                // class scala/Tuple2
        83: dup
        84: ldc           #207                // String map
        86: aload_0
        87: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        90: invokespecial #206                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: checkcast     #198                // class "[Ljava/lang/Object;"
        97: invokevirtual #147                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       100: invokevirtual #153                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       103: checkcast     #209                // class scala/collection/immutable/Seq
       106: putfield      #211                // Field $content:Lscala/collection/immutable/Seq;
       109: aload_0
       110: aload_0
       111: getfield      #114                // Field bitmap$0:B
       114: iconst_2
       115: ior
       116: i2b
       117: putfield      #114                // Field bitmap$0:B
       120: aload_1
       121: monitorexit
       122: goto          128
       125: aload_1
       126: monitorexit
       127: athrow
       128: aload_0
       129: getfield      #211                // Field $content:Lscala/collection/immutable/Seq;
       132: areturn
      Exception table:
         from    to  target type
             4   120   125   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 120
          locals = [ class org/sireum/HashBag ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     133     0  this   Lorg/sireum/HashBag;
    Signature: #180                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #213                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #211                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashBag;
    Signature: #180                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Z size();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #217                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
         3: ldc           #219                // String 0
         5: invokevirtual #222                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
         8: invokestatic  #228                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        11: astore_1
        12: aload_0
        13: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        16: invokevirtual #232                // Method org/sireum/HashMap.values:()Lorg/sireum/IS;
        19: aload_1
        20: invokedynamic #253,  0            // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        25: invokevirtual #259                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        28: aload_1
        29: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        32: checkcast     #25                 // class org/sireum/Z
        35: areturn
      LineNumberTable:
        line 47: 0
        line 48: 12
        line 51: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      24     1     r   Lscala/runtime/ObjectRef;
            0      36     0  this   Lorg/sireum/HashBag;

  public org.sireum.IS<org.sireum.Z, T> elements();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #271                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #275                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #280                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #283                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: invokestatic  #228                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        15: astore_1
        16: aload_0
        17: invokevirtual #286                // Method entries:()Lorg/sireum/IS;
        20: aload_1
        21: invokedynamic #294,  0            // InvokeDynamic #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        26: invokevirtual #259                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        29: aload_1
        30: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        33: checkcast     #255                // class org/sireum/IS
        36: areturn
      LineNumberTable:
        line 55: 0
        line 56: 16
        line 60: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      21     1     r   Lscala/runtime/ObjectRef;
            0      37     0  this   Lorg/sireum/HashBag;
    Signature: #266                         // ()Lorg/sireum/IS<Lorg/sireum/Z;TT;>;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #300                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #302                // Method size:()Lorg/sireum/Z;
         7: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: iconst_0
        11: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: astore_1
        15: dup
        16: ifnonnull     27
        19: pop
        20: aload_1
        21: ifnull        34
        24: goto          38
        27: aload_1
        28: invokevirtual #166                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: invokevirtual #313                // Method org/sireum/B$.apply:(Z)Z
        42: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class org/sireum/HashBag, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/HashBag, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/sireum/HashBag;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #300                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #316                // Method isEmpty:()Z
         7: invokevirtual #319                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        10: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/HashBag;

  public org.sireum.Z count(T);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_0
         1: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
         4: aload_1
         5: invokevirtual #327                // Method org/sireum/HashMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
         8: astore_3
         9: aload_3
        10: instanceof    #329                // class org/sireum/Some
        13: ifeq          56
        16: aload_3
        17: checkcast     #329                // class org/sireum/Some
        20: astore        4
        22: getstatic     #334                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        25: aload         4
        27: invokevirtual #337                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        30: astore        5
        32: aload         5
        34: invokevirtual #340                // Method scala/Some.isEmpty:()Z
        37: ifne          53
        40: aload         5
        42: invokevirtual #343                // Method scala/Some.get:()Ljava/lang/Object;
        45: checkcast     #25                 // class org/sireum/Z
        48: astore        6
        50: aload         6
        52: areturn
        53: goto          59
        56: goto          59
        59: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        62: iconst_0
        63: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        66: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class org/sireum/HashBag, class java/lang/Object, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 72: 0
        line 73: 9
        line 72: 40
        line 73: 50
        line 74: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50       3     6     n   Lorg/sireum/Z;
            0      67     0  this   Lorg/sireum/HashBag;
            0      67     1     e   Ljava/lang/Object;
    Signature: #322                         // (TT;)Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      e                              final

  public boolean contains(T);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #350                // Method count:(Ljava/lang/Object;)Lorg/sireum/Z;
         5: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         8: iconst_0
         9: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        12: invokeinterface #354,  2          // InterfaceMethod org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
        17: ireturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/HashBag;
            0      18     1     e   Ljava/lang/Object;
    Signature: #348                         // (TT;)Z
    MethodParameters:
      Name                           Flags
      e                              final

  public org.sireum.HashBag<T> $plus(T);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         5: iconst_1
         6: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         9: invokevirtual #361                // Method addN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
        12: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/HashBag;
            0      13     1     e   Ljava/lang/Object;
    Signature: #357                         // (TT;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public org.sireum.HashBag<T> $plus$hash(scala.Tuple2<T, org.sireum.Z>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
         5: aload_1
         6: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
         9: checkcast     #25                 // class org/sireum/Z
        12: invokevirtual #361                // Method addN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
        15: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/HashBag;
            0      16     1     p   Lscala/Tuple2;
    Signature: #364                         // (Lscala/Tuple2<TT;Lorg/sireum/Z;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public org.sireum.HashBag<T> addN(T, org.sireum.Z);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: getstatic     #300                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_2
         4: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         7: iconst_0
         8: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        11: invokeinterface #376,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        16: invokevirtual #379                // Method org/sireum/B$.$4B:(Z)Z
        19: ifeq          24
        22: aload_0
        23: areturn
        24: aload_0
        25: aload_0
        26: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        29: getstatic     #382                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        32: getstatic     #271                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        35: aload_1
        36: invokevirtual #385                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        39: aload_0
        40: aload_1
        41: invokevirtual #350                // Method count:(Ljava/lang/Object;)Lorg/sireum/Z;
        44: aload_2
        45: invokeinterface #388,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        50: invokevirtual #392                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        53: invokevirtual #395                // Method org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        56: invokevirtual #397                // Method apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
        59: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 24 /* same */
      LineNumberTable:
        line 91: 0
        line 92: 22
        line 94: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lorg/sireum/HashBag;
            0      60     1     e   Ljava/lang/Object;
            0      60     2     n   Lorg/sireum/Z;
    Signature: #373                         // (TT;Lorg/sireum/Z;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      e                              final
      n                              final

  public <I extends java.lang.Object> org.sireum.HashBag<T> $plus$plus(org.sireum.IS<I, T>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokestatic  #228                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokedynamic #407,  0            // InvokeDynamic #2:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        12: invokevirtual #259                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: aload_2
        16: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/HashBag
        22: areturn
      LineNumberTable:
        line 98: 0
        line 99: 5
        line 102: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2     r   Lscala/runtime/ObjectRef;
            0      23     0  this   Lorg/sireum/HashBag;
            0      23     1    es   Lorg/sireum/IS;
    Signature: #400                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      es                             final

  public org.sireum.HashBag<T> $minus(T);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         5: iconst_1
         6: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         9: invokevirtual #412                // Method removeN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
        12: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/HashBag;
            0      13     1     e   Ljava/lang/Object;
    Signature: #357                         // (TT;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public <I extends java.lang.Object> org.sireum.HashBag<T> $minus$minus(org.sireum.IS<I, T>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokestatic  #228                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_2
         5: aload_1
         6: aload_2
         7: invokedynamic #419,  0            // InvokeDynamic #3:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        12: invokevirtual #259                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        15: aload_2
        16: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #2                  // class org/sireum/HashBag
        22: areturn
      LineNumberTable:
        line 110: 0
        line 111: 5
        line 114: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      18     2     r   Lscala/runtime/ObjectRef;
            0      23     0  this   Lorg/sireum/HashBag;
            0      23     1     s   Lorg/sireum/IS;
    Signature: #400                         // <I:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public org.sireum.HashBag<T> $minus$hash(scala.Tuple2<T, org.sireum.Z>);
    descriptor: (Lscala/Tuple2;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
         5: aload_1
         6: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
         9: checkcast     #25                 // class org/sireum/Z
        12: invokevirtual #412                // Method removeN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
        15: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/HashBag;
            0      16     1     p   Lscala/Tuple2;
    Signature: #364                         // (Lscala/Tuple2<TT;Lorg/sireum/Z;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public org.sireum.HashBag<T> removeN(T, org.sireum.Z);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #350                // Method count:(Ljava/lang/Object;)Lorg/sireum/Z;
         5: astore_3
         6: aload_3
         7: aload_2
         8: invokeinterface #422,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        13: astore        4
        15: getstatic     #300                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: aload         4
        20: getstatic     #307                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        23: iconst_0
        24: invokevirtual #310                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        27: invokeinterface #376,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        32: invokevirtual #379                // Method org/sireum/B$.$4B:(Z)Z
        35: ifeq          64
        38: aload_0
        39: aload_0
        40: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        43: getstatic     #382                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        46: getstatic     #271                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        49: aload_1
        50: invokevirtual #385                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        53: aload_3
        54: invokevirtual #392                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        57: invokevirtual #424                // Method org/sireum/HashMap.$minus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        60: invokevirtual #397                // Method apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
        63: areturn
        64: aload_0
        65: aload_0
        66: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
        69: getstatic     #382                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        72: getstatic     #271                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        75: aload_1
        76: invokevirtual #385                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        79: aload         4
        81: invokevirtual #392                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        84: invokevirtual #395                // Method org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        87: invokevirtual #397                // Method apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
        90: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 64
          locals = [ class org/sireum/Z, class org/sireum/Z ]
      LineNumberTable:
        line 122: 0
        line 123: 6
        line 124: 15
        line 125: 38
        line 127: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      85     3 current   Lorg/sireum/Z;
           15      76     4  newN   Lorg/sireum/Z;
            0      91     0  this   Lorg/sireum/HashBag;
            0      91     1     e   Ljava/lang/Object;
            0      91     2     n   Lorg/sireum/Z;
    Signature: #373                         // (TT;Lorg/sireum/Z;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      e                              final
      n                              final

  public org.sireum.HashBag<T> $bslash(org.sireum.HashBag<T>);
    descriptor: (Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #432                // Method elements:()Lorg/sireum/IS;
         5: invokevirtual #434                // Method $minus$minus:(Lorg/sireum/IS;)Lorg/sireum/HashBag;
         8: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashBag;
            0       9     1 other   Lorg/sireum/HashBag;
    Signature: #429                         // (Lorg/sireum/HashBag<TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.IS<org.sireum.Z, scala.Tuple2<T, org.sireum.Z>> entries();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
         4: invokevirtual #436                // Method org/sireum/HashMap.entries:()Lorg/sireum/IS;
         7: areturn
      LineNumberTable:
        line 136: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/HashBag;
    Signature: #435                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lscala/Tuple2<TT;Lorg/sireum/Z;>;>;

  public org.sireum.HashBag<T> union(org.sireum.HashBag<T>);
    descriptor: (Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #440                // Method $u222A:(Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
         5: areturn
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/HashBag;
            0       6     1 other   Lorg/sireum/HashBag;
    Signature: #429                         // (Lorg/sireum/HashBag<TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashBag<T> $u222A(org.sireum.HashBag<T>);
    descriptor: (Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #432                // Method elements:()Lorg/sireum/IS;
         5: invokevirtual #442                // Method $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashBag;
         8: areturn
      LineNumberTable:
        line 144: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/HashBag;
            0       9     1 other   Lorg/sireum/HashBag;
    Signature: #429                         // (Lorg/sireum/HashBag<TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashBag<T> intersect(org.sireum.HashBag<T>);
    descriptor: (Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #446                // Method $u2229:(Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
         5: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/HashBag;
            0       6     1 other   Lorg/sireum/HashBag;
    Signature: #429                         // (Lorg/sireum/HashBag<TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public org.sireum.HashBag<T> $u2229(org.sireum.HashBag<T>);
    descriptor: (Lorg/sireum/HashBag;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #51                 // Field org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
         3: invokevirtual #66                 // Method org/sireum/HashBag$.empty:()Lorg/sireum/HashBag;
         6: invokestatic  #228                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore_2
        10: aload_0
        11: invokevirtual #286                // Method entries:()Lorg/sireum/IS;
        14: aload_1
        15: aload_2
        16: invokedynamic #454,  0            // InvokeDynamic #4:apply:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;)Lscala/Function1;
        21: invokevirtual #259                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        24: aload_2
        25: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        28: checkcast     #2                  // class org/sireum/HashBag
        31: areturn
      LineNumberTable:
        line 152: 0
        line 153: 10
        line 162: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      22     2     r   Lscala/runtime/ObjectRef;
            0      32     0  this   Lorg/sireum/HashBag;
            0      32     1 other   Lorg/sireum/HashBag;
    Signature: #429                         // (Lorg/sireum/HashBag<TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #143                // Method map:()Lorg/sireum/HashMap;
         4: invokevirtual #455                // Method org/sireum/HashMap.string:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/HashBag;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #457                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashBag;

  public static final void $anonfun$size$1(scala.runtime.ObjectRef, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #25                 // class org/sireum/Z
         8: aload_1
         9: invokeinterface #388,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        14: putfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        17: return
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0   r$1   Lscala/runtime/ObjectRef;
            0      18     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      r$1                            final
      n                              final

  public static final java.lang.Object $anonfun$elements$2(java.lang.Object, org.sireum.Z);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_0
         3: astore_2
         4: goto          7
         7: aload_2
         8: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 7
          locals = [ class java/lang/Object, class org/sireum/Z ]
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   e$1   Ljava/lang/Object;
            0       9     1   x$2   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      e$1                            final
      x$2                            final

  public static final void $anonfun$elements$1(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=11, args_size=2
         0: aload_1
         1: astore        6
         3: new           #182                // class scala/Tuple2
         6: dup
         7: getstatic     #473                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        10: aload         6
        12: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
        15: invokevirtual #476                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        18: getstatic     #473                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        21: aload         6
        23: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
        26: invokevirtual #476                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        29: invokespecial #206                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        32: astore        5
        34: aload         5
        36: ifnull        71
        39: aload         5
        41: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
        44: astore        7
        46: aload         5
        48: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
        51: checkcast     #25                 // class org/sireum/Z
        54: astore        8
        56: new           #182                // class scala/Tuple2
        59: dup
        60: aload         7
        62: aload         8
        64: invokespecial #206                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        67: astore_2
        68: goto          84
        71: goto          74
        74: new           #478                // class scala/MatchError
        77: dup
        78: aload         5
        80: invokespecial #481                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        83: athrow
        84: aload_2
        85: astore        4
        87: new           #182                // class scala/Tuple2
        90: dup
        91: getstatic     #473                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        94: aload         4
        96: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
        99: invokevirtual #476                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       102: getstatic     #473                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       105: aload         4
       107: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
       110: invokevirtual #476                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       113: invokespecial #206                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       116: astore_3
       117: aload_3
       118: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
       121: astore        9
       123: aload_3
       124: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
       127: checkcast     #25                 // class org/sireum/Z
       130: astore        10
       132: aload_0
       133: aload_0
       134: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       137: checkcast     #255                // class org/sireum/IS
       140: getstatic     #217                // Field org/sireum/Z$$String$.MODULE$:Lorg/sireum/Z$$String$;
       143: ldc           #219                // String 0
       145: invokevirtual #222                // Method org/sireum/Z$$String$.apply:(Ljava/lang/String;)Lorg/sireum/Z;
       148: aload         10
       150: invokeinterface #485,  2          // InterfaceMethod org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
       155: aload         9
       157: invokedynamic #491,  0            // InvokeDynamic #5:apply:(Ljava/lang/Object;)Lscala/Function1;
       162: invokevirtual #496                // Method org/sireum/ZRange.map:(Lscala/Function1;)Lorg/sireum/IS;
       165: invokevirtual #499                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
       168: putfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       171: return
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class scala/runtime/ObjectRef, class scala/Tuple2, top, top, top, class scala/Tuple2, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/runtime/ObjectRef, class scala/Tuple2, class scala/Tuple2, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class org/sireum/Z ]
          stack = []
      LineNumberTable:
        line 57: 0
        line 58: 132
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      29     6     x   Lscala/Tuple2;
           46      25     7     e   Ljava/lang/Object;
           56      15     8  size   Lorg/sireum/Z;
           87      29     4     x   Lscala/Tuple2;
          123      48     9     e   Ljava/lang/Object;
          132      39    10  size   Lorg/sireum/Z;
            0     172     0   r$2   Lscala/runtime/ObjectRef;
            0     172     1 entry   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$2                            final
      entry                          final

  public static final void $anonfun$$plus$plus$1(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/HashBag
         8: aload_1
         9: invokevirtual #505                // Method $plus:(Ljava/lang/Object;)Lorg/sireum/HashBag;
        12: putfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        15: return
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   r$3   Lscala/runtime/ObjectRef;
            0      16     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$3                            final
      e                              final

  public static final void $anonfun$$minus$minus$1(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class org/sireum/HashBag
         8: aload_1
         9: invokevirtual #509                // Method $minus:(Ljava/lang/Object;)Lorg/sireum/HashBag;
        12: putfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        15: return
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   r$4   Lscala/runtime/ObjectRef;
            0      16     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$4                            final
      e                              final

  public static final void $anonfun$$u2229$1(org.sireum.HashBag, scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=3
         0: aload_2
         1: invokevirtual #371                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #25                 // class org/sireum/Z
         7: astore_3
         8: aload_0
         9: aload_2
        10: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: invokevirtual #350                // Method count:(Ljava/lang/Object;)Lorg/sireum/Z;
        16: astore        4
        18: getstatic     #300                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        21: aload_3
        22: aload         4
        24: invokeinterface #516,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        29: invokevirtual #379                // Method org/sireum/B$.$4B:(Z)Z
        32: ifeq          57
        35: aload_1
        36: aload_1
        37: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        40: checkcast     #2                  // class org/sireum/HashBag
        43: aload_2
        44: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
        47: aload_3
        48: invokevirtual #361                // Method addN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
        51: putfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        54: goto          77
        57: aload_1
        58: aload_1
        59: getfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        62: checkcast     #2                  // class org/sireum/HashBag
        65: aload_2
        66: invokevirtual #368                // Method scala/Tuple2._1:()Ljava/lang/Object;
        69: aload         4
        71: invokevirtual #361                // Method addN:(Ljava/lang/Object;Lorg/sireum/Z;)Lorg/sireum/HashBag;
        74: putfield      #262                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        77: return
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 57
          locals = [ class org/sireum/Z, class org/sireum/Z ]
        frame_type = 19 /* same */
      LineNumberTable:
        line 154: 0
        line 155: 8
        line 156: 18
        line 157: 35
        line 159: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      69     3     n   Lorg/sireum/Z;
           18      59     4     m   Lorg/sireum/Z;
            0      78     0 other$1   Lorg/sireum/HashBag;
            0      78     1   r$5   Lscala/runtime/ObjectRef;
            0      78     2     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      other$1                        final
      r$5                            final
      e                              final

  public org.sireum.HashBag(org.sireum.HashMap<T, org.sireum.Z>);
    descriptor: (Lorg/sireum/HashMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #522                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #526                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #529                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #532                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #104                // Field _map:Lorg/sireum/HashMap;
        21: return
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/HashBag;
            0      22     1 __map   Lorg/sireum/HashMap;
    Signature: #518                         // (Lorg/sireum/HashMap<TT;Lorg/sireum/Z;>;)V
    MethodParameters:
      Name                           Flags
      __map                          final

  public static final java.lang.Object $anonfun$size$1$adapted(scala.runtime.ObjectRef, org.sireum.Z);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #534                // Method $anonfun$size$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)V
         5: getstatic     #540                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$1   Lscala/runtime/ObjectRef;
            0       9     1     n   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      r$1                            final
      n                              final

  public static final java.lang.Object $anonfun$elements$1$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #542                // Method $anonfun$elements$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #540                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$2   Lscala/runtime/ObjectRef;
            0       9     1 entry   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$2                            final
      entry                          final

  public static final java.lang.Object $anonfun$$plus$plus$1$adapted(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #544                // Method $anonfun$$plus$plus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         5: getstatic     #540                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$3   Lscala/runtime/ObjectRef;
            0       9     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$3                            final
      e                              final

  public static final java.lang.Object $anonfun$$minus$minus$1$adapted(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #546                // Method $anonfun$$minus$minus$1:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         5: getstatic     #540                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$4   Lscala/runtime/ObjectRef;
            0       9     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      r$4                            final
      e                              final

  public static final java.lang.Object $anonfun$$u2229$1$adapted(org.sireum.HashBag, scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #548                // Method $anonfun$$u2229$1:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         6: getstatic     #540                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 other$1   Lorg/sireum/HashBag;
            0      10     1   r$5   Lscala/runtime/ObjectRef;
            0      10     2     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      other$1                        final
      r$5                            final
      e                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #560,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #21= #18 of #20;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #26= #23 of #25;          // $String$=class org/sireum/Z$$String$ of class org/sireum/Z
  public static #31= #28 of #30;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
SourceFile: "HashBag.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\u0015t!B\u0015+\u0011\u0003yc!B\u0019+\u0011\u0003\u0011\u0004\"B\u001d\u0002\t\u0003Q\u0004\"B\u001e\u0002\t\u0003a\u0004b\u0002B\u000e\u0003\u0011\u0005!Q\u0004\u0005\b\u0003\u001b\u000bA\u0011\u0001B\u0017\u0011\u0019\u0019\u0018\u0001\"\u0001\u0003B!9!qJ\u0001\u0005\u0002\tEc\u0001B\u0019+\u0005}B\u0001\u0002\u0012\u0005\u0003\u0002\u0003\u0006I!\u0012\u0005\u0006s!!\tA\u0016\u0005\u00073\"\u0001\u000b\u0011B#\t\u000biCA\u0011A.\t\u000bqCA\u0011A.\t\u000buCA\u0011\t0\t\u0011\u001dD\u0001R1A\u0005B!DQ\u0001\u001c\u0005\u0005B5DQa\u001d\u0005\u0005\u0002QDqA\u001e\u0005\u0012\u0002\u0013\u0005q\u000f\u0003\u0006\u0002\u0006!A)\u0019!C!\u0003\u000fAq!a\n\t\t\u0003\tI\u0003C\u0004\u00024!!\t!!\u000e\t\u000f\u0005-\u0003\u0002\"\u0001\u0002N!9\u0011q\u000b\u0005\u0005\u0002\u00055\u0003bBA.\u0011\u0011\u0005\u0011Q\f\u0005\b\u0003KBA\u0011AA4\u0011\u001d\ti\u0007\u0003C\u0001\u0003_Bq!!\u001e\t\t\u0003\t9\bC\u0004\u0002\u0002\"!\t!a!\t\u000f\u00055\u0005\u0002\"\u0001\u0002\u0010\"9\u0011Q\u0015\u0005\u0005\u0002\u0005\u001d\u0006bBAW\u0011\u0011\u0005\u0011q\u0016\u0005\b\u0003\u007fCA\u0011AAa\u0011\u001d\t9\r\u0003C\u0001\u0003\u0013Dq!!5\t\t\u0003\t\u0019\u000eC\u0004\u0002\\\"!\t!!8\t\u000f\u0005\r\b\u0002\"\u0001\u0002f\"9\u00111\u001e\u0005\u0005\u0002\u00055\bbBAz\u0011\u0011\u0005\u0011Q\u001f\u0005\b\u0003wDA\u0011AA\u007f\u0011\u001d\u0011\u0019\u0001\u0003C!\u0005\u000b\tq\u0001S1tQ\n\u000bwM\u0003\u0002,Y\u000511/\u001b:fk6T\u0011!L\u0001\u0004_J<7\u0001\u0001\t\u0003a\u0005i\u0011A\u000b\u0002\b\u0011\u0006\u001c\bNQ1h\'\t\t1\u0007\u0005\u00025o5\tQGC\u00017\u0003\u0015\u00198-\u00197b\u0013\tATG\u0001\u0004B]f\u0014VMZ\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003=\nQ!Z7qif,2!\u0010B\f+\u0005q\u0004\u0003\u0002\u0019\t\u0005+)\"\u0001\u0011&\u0014\u0007!\u0019\u0014\t\u0005\u00021\u0005&\u00111I\u000b\u0002\f\t\u0006$\u0018\r^=qKNKw-A\u0003`?6\f\u0007\u000f\u0005\u00031\r\"\u001b\u0016BA$+\u0005\u001dA\u0015m\u001d5NCB\u0004\"!\u0013&\r\u0001\u0011)1\n\u0003b\u0001\u0019\n\tA+\u0005\u0002N!B\u0011AGT\u0005\u0003\u001fV\u0012qAT8uQ&tw\r\u0005\u00025#&\u0011!+\u000e\u0002\u0004\u0003:L\bC\u0001\u0019U\u0013\t)&FA\u0001[)\t9\u0006\fE\u00021\u0011!CQ\u0001\u0012\u0006A\u0002\u0015\u000bAaX7ba\u0006\u0019Q.\u00199\u0016\u0003\u0015\u000baaZ3u\u001b\u0006\u0004\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003}\u0003\"\u0001Y3\u000e\u0003\u0005T!AY2\u0002\t1\fgn\u001a\u0006\u0002I\u0006!!.\u0019<b\u0013\t1\u0017M\u0001\u0004TiJLgnZ\u0001\tQ\u0006\u001c\bnQ8eKV\t\u0011\u000e\u0005\u00025U&\u00111.\u000e\u0002\u0004\u0013:$\u0018AB3rk\u0006d7\u000f\u0006\u0002ocB\u0011Ag\\\u0005\u0003aV\u0012qAQ8pY\u0016\fg\u000eC\u0003s!\u0001\u0007\u0001+A\u0001p\u0003\u0015\t\u0007\u000f\u001d7z)\t9V\u000fC\u0004[#A\u0005\t\u0019A#\u0002\u001f\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uIE*\u0012\u0001\u001f\u0016\u0003\u000bf\\\u0013A\u001f\t\u0004w\u0006\u0005Q\"\u0001?\u000b\u0005ut\u0018!C;oG\",7m[3e\u0015\tyX\'\u0001\u0006b]:|G/\u0019;j_:L1!a\u0001}\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\tI\r|g\u000e^3oiV\u0011\u0011\u0011\u0002\t\u0007\u0003\u0017\tY\"!\t\u000f\t\u00055\u0011q\u0003\b\u0005\u0003\u001f\t)\"\u0004\u0002\u0002\u0012)\u0019\u00111\u0003\u0018\u0002\rq\u0012xn\u001c;?\u0013\u00051\u0014bAA\rk\u00059\u0001/Y2lC\u001e,\u0017\u0002BA\u000f\u0003?\u00111aU3r\u0015\r\tI\"\u000e\t\u0006i\u0005\rr\fU\u0005\u0004\u0003K)$A\u0002+va2,\'\'\u0001\u0003tSj,W#A*)\u0007Q\ti\u0003E\u00021\u0003_I1!!\r+\u0005\u0011\u0001XO]3\u0002\u0011\u0015dW-\\3oiN,\"!a\u000e\u0011\u000b\u0005e\u0012Q\b%\u000f\u0007A\nY$C\u0002\u0002\u001a)JA!a\u0010\u0002B\t\u0019\u0011j\u0015.\n\t\u0005\r\u0013Q\t\u0002\r!\u0006\u001c7.Y4f)J\f\u0017\u000e\u001e\u0006\u0004\u0003\u000fR\u0013!\u0003\u0013j]R,\'O\\1mQ\r)\u0012QF\u0001\bSN,U\u000e\u001d;z+\t\ty\u0005E\u00021\u0003#J1!a\u0015+\u0005\u0005\u0011\u0005f\u0001\f\u0002.\u0005Aan\u001c8F[B$\u0018\u0010K\u0002\u0018\u0003[\tQaY8v]R$2aUA0\u0011\u0019\t\t\u0007\u0007a\u0001\u0011\u0006\tQ\rK\u0002\u0019\u0003[\t\u0001bY8oi\u0006Lgn\u001d\u000b\u0005\u0003\u001f\nI\u0007\u0003\u0004\u0002be\u0001\r\u0001\u0013\u0015\u00043\u00055\u0012!\u0002\u0013qYV\u001cHcA,\u0002r!1\u0011\u0011\r\u000eA\u0002!C3AGA\u0017\u0003)!\u0003\u000f\\;tI!\f7\u000f\u001b\u000b\u0004/\u0006e\u0004bBA>7\u0001\u0007\u0011QP\u0001\u0002aB)A\'a\tI\'\"\u001a1$!\f\u0002\t\u0005$GM\u0014\u000b\u0006/\u0006\u0015\u0015q\u0011\u0005\u0007\u0003Cb\u0002\u0019\u0001%\t\r\u0005%E\u00041\u0001T\u0003\u0005q\u0007f\u0001\u000f\u0002.\u0005QA\u0005\u001d7vg\u0012\u0002H.^:\u0016\t\u0005E\u0015q\u0014\u000b\u0004/\u0006M\u0005bBAK;\u0001\u0007\u0011qS\u0001\u0003KN\u0004b\u0001MAM\u0003;C\u0015bAANU\t\u0011\u0011j\u0015\t\u0004\u0013\u0006}EABAQ;\t\u0007AJA\u0001JQ\ri\u0012QF\u0001\u0007I5Lg.^:\u0015\u0007]\u000bI\u000b\u0003\u0004\u0002by\u0001\r\u0001\u0013\u0015\u0004=\u00055\u0012\u0001\u0004\u0013nS:,8\u000fJ7j]V\u001cX\u0003BAY\u0003w#2aVAZ\u0011\u001d\t)l\ba\u0001\u0003o\u000b\u0011a\u001d\t\u0007a\u0005e\u0015\u0011\u0018%\u0011\u0007%\u000bY\f\u0002\u0004\u0002\"~\u0011\r\u0001\u0014\u0015\u0004?\u00055\u0012a\u0003\u0013nS:,8\u000f\n5bg\"$2aVAb\u0011\u001d\tY\b\ta\u0001\u0003{B3\u0001IA\u0017\u0003\u001d\u0011X-\\8wK:#RaVAf\u0003\u001bDa!!\u0019\"\u0001\u0004A\u0005BBAEC\u0001\u00071\u000bK\u0002\"\u0003[\tq\u0001\n2tY\u0006\u001c\b\u000eF\u0002X\u0003+Da!a6#\u0001\u00049\u0016!B8uQ\u0016\u0014\bf\u0001\u0012\u0002.\u00059QM\u001c;sS\u0016\u001cXCAAp!\u0019\tI$!\u0010\u0002~!\u001a1%!\f\u0002\u000bUt\u0017n\u001c8\u0015\u0007]\u000b9\u000f\u0003\u0004\u0002X\u0012\u0002\ra\u0016\u0015\u0004I\u00055\u0012A\u0002\u0013veI\u0012\u0014\tF\u0002X\u0003_Da!a6&\u0001\u00049\u0006fA\u0013\u0002.\u0005I\u0011N\u001c;feN,7\r\u001e\u000b\u0004/\u0006]\bBBAlM\u0001\u0007q\u000bK\u0002\'\u0003[\ta\u0001J;3eIJDcA,\u0002\u0000\"1\u0011q[\u0014A\u0002]C3aJA\u0017\u0003\u0019\u0019HO]5oOV\u0011!q\u0001\t\u0004a\t%\u0011B\u00014+Q\rA\u0013Q\u0006\u0015\u0004\u0011\t=\u0001c\u0001\u0019\u0003\u0012%\u0019!1\u0003\u0016\u0003\u0011\u0011\fG/\u0019;za\u0016\u00042!\u0013B\f\t\u0015Y5A1\u0001MQ\r\u0019\u0011QF\u0001\nK6\u0004H/_%oSR,BAa\b\u0003&Q!!\u0011\u0005B\u0014!\u0011\u0001\u0004Ba\t\u0011\u0007%\u0013)\u0003B\u0003L\t\t\u0007A\n\u0003\u0004\u0003*\u0011\u0001\raU\u0001\u0010S:LG/[1m\u0007\u0006\u0004\u0018mY5us\"\u001aA!!\f\u0016\r\t=\"Q\bB\u001b)\u0011\u0011\tDa\u000e\u0011\tAB!1\u0007\t\u0004\u0013\nUB!B&\u0006\u0005\u0004a\u0005bBA[\u000b\u0001\u0007!\u0011\b\t\ba\u0005e%1\bB\u001a!\rI%Q\b\u0003\u0007\u0003C+!\u0019\u0001\')\u0007\u0015\ti#\u0006\u0003\u0003D\t%C\u0003\u0002B#\u0005\u0017\u0002B\u0001\r\u0005\u0003HA\u0019\u0011J!\u0013\u0005\u000b-3!\u0019\u0001\'\t\ri3\u0001\u0019\u0001B\'!\u0015\u0001dIa\u0012T\u0003\u001d)h.\u00199qYf,BAa\u0015\u0003`Q!!Q\u000bB1!\u0015!$q\u000bB.\u0013\r\u0011I&\u000e\u0002\u0005\'>lW\rE\u00031\r\nu3\u000bE\u0002J\u0005?\"QaS\u0004C\u00021CaA]\u0004A\u0002\t\r\u0004\u0003\u0002\u0019\t\u0005;\u0002"
    )
BootstrapMethods:
  0: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #239 REF_invokeStatic org/sireum/HashBag.$anonfun$size$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
      #241 (Lorg/sireum/Z;)Ljava/lang/Object;
      #242 5
      #243 1
      #241 (Lorg/sireum/Z;)Ljava/lang/Object;
  1: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #291 REF_invokeStatic org/sireum/HashBag.$anonfun$elements$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #293 (Lscala/Tuple2;)Ljava/lang/Object;
      #242 5
      #243 1
      #293 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #406 REF_invokeStatic org/sireum/HashBag.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #243 1
  3: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #418 REF_invokeStatic org/sireum/HashBag.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #243 1
  4: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #451 REF_invokeStatic org/sireum/HashBag.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #293 (Lscala/Tuple2;)Ljava/lang/Object;
      #242 5
      #243 1
      #293 (Lscala/Tuple2;)Ljava/lang/Object;
  5: #250 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #234 (Ljava/lang/Object;)Ljava/lang/Object;
      #488 REF_invokeStatic org/sireum/HashBag.$anonfun$elements$2:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
      #241 (Lorg/sireum/Z;)Ljava/lang/Object;
      #242 5
      #243 1
      #241 (Lorg/sireum/Z;)Ljava/lang/Object;
  6: #557 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #418 REF_invokeStatic org/sireum/HashBag.$anonfun$$minus$minus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #406 REF_invokeStatic org/sireum/HashBag.$anonfun$$plus$plus$1$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #451 REF_invokeStatic org/sireum/HashBag.$anonfun$$u2229$1$adapted:(Lorg/sireum/HashBag;Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #291 REF_invokeStatic org/sireum/HashBag.$anonfun$elements$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #488 REF_invokeStatic org/sireum/HashBag.$anonfun$elements$2:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
      #239 REF_invokeStatic org/sireum/HashBag.$anonfun$size$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xF9 (unknown attribute)
   01 01 00 31 01 FA 01 F6 01 01 9F 01 93 01 01 F5
   01 F6 01 01 92 01 93 01 01 FE 01 FF 01 01 BF 01
   C0 01 01 D1 01 D2 01 01 1F 01 20 01 01 CD 01 CE
   01 01 CA 01 CB 01 00 EB 00 EC 01 01 AB 01 AC 01
   00 4A 00 4B 01 00 5C 01 55 01 00 5C 00 5D 01 00
   22 00 B3 01 00 B2 00 B3 01 00 52 00 53 01 00 58
   00 53 01 01 99 01 64 01 01 A4 01 6B 01 01 9D 01
   8F 01 01 63 01 64 01 01 6A 01 6B 01 01 8E 01 8F
   01 01 BC 01 AC 01 01 B6 01 AC 01 00 AD 00 AE 01
   01 66 01 67 01 00 96 00 AB 01 00 B1 00 65 01 01
   5B 00 A4 01 01 40 01 41 01 01 09 00 E6 01 01 1C
   00 E6 01 00 A3 00 A4 01 00 69 00 65 01 00 43 00
   44 01 00 20 00 70 01 00 6F 00 70 01 01 BB 01 AC
   01 01 27 00 53 01 00 64 00 65 01 01 3A 00 53 01
   01 9A 01 67 01 00 D6 00 44 01 00 6C 00 6B 01 00
   6A 00 6B 01 01 B5 01 AC 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
