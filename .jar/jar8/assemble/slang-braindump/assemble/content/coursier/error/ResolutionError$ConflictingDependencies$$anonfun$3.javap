Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.class
  Last modified May 29, 2022; size 8300 bytes
  SHA-256 checksum 5a4cdb24b67734a2c18e59c9fcd7de6dae7ddc06f418248d438505ba22e6fbb6
  Compiled from "ResolutionError.scala"
public final class coursier.error.ResolutionError$ConflictingDependencies$$anonfun$3 extends scala.runtime.AbstractFunction1<coursier.graph.ReverseModuleTree, java.lang.String> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3
  super_class: #5                         // scala/runtime/AbstractFunction1
  interfaces: 1, fields: 2, methods: 12, attributes: 7
Constant pool:
    #1 = Utf8               coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3
    #2 = Class              #1            // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3
    #3 = Utf8               Lscala/runtime/AbstractFunction1<Lcoursier/graph/ReverseModuleTree;Ljava/lang/String;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractFunction1
    #5 = Class              #4            // scala/runtime/AbstractFunction1
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               ResolutionError.scala
    #9 = Utf8               coursier/error/ResolutionError$ConflictingDependencies
   #10 = Class              #9            // coursier/error/ResolutionError$ConflictingDependencies
   #11 = Utf8               <init>
   #12 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Set;)V
   #13 = NameAndType        #11:#12       // "<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Set;)V
   #14 = Utf8               coursier/error/ResolutionError
   #15 = Class              #14           // coursier/error/ResolutionError
   #16 = Utf8               ConflictingDependencies
   #17 = Utf8               coursier/util/Print$Colors
   #18 = Class              #17           // coursier/util/Print$Colors
   #19 = Utf8               coursier/util/Print
   #20 = Class              #19           // coursier/util/Print
   #21 = Utf8               Colors
   #22 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #23 = Class              #22           // java/lang/invoke/MethodHandles$Lookup
   #24 = Utf8               java/lang/invoke/MethodHandles
   #25 = Class              #24           // java/lang/invoke/MethodHandles
   #26 = Utf8               Lookup
   #27 = Utf8               scala/math/Ordering$Boolean$
   #28 = Class              #27           // scala/math/Ordering$Boolean$
   #29 = Utf8               scala/math/Ordering
   #30 = Class              #29           // scala/math/Ordering
   #31 = Utf8
   #32 = Utf8               serialVersionUID
   #33 = Utf8               J
   #34 = Long               0l
   #36 = Utf8               colors0$1
   #37 = Utf8               Lcoursier/util/Print$Colors;
   #38 = Utf8               apply
   #39 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
   #40 = Utf8               t
   #41 = Utf8               coursier/util/Tree$
   #42 = Class              #41           // coursier/util/Tree$
   #43 = Utf8               MODULE$
   #44 = Utf8               Lcoursier/util/Tree$;
   #45 = NameAndType        #43:#44       // MODULE$:Lcoursier/util/Tree$;
   #46 = Fieldref           #42.#45       // coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
   #47 = Utf8               coursier/graph/ReverseModuleTree
   #48 = Class              #47           // coursier/graph/ReverseModuleTree
   #49 = Utf8               dependees
   #50 = Utf8               ()Lscala/collection/immutable/Seq;
   #51 = NameAndType        #49:#50       // dependees:()Lscala/collection/immutable/Seq;
   #52 = Methodref          #48.#51       // coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
   #53 = Utf8               scala/collection/immutable/Seq
   #54 = Class              #53           // scala/collection/immutable/Seq
   #55 = Utf8               toVector
   #56 = Utf8               ()Lscala/collection/immutable/Vector;
   #57 = NameAndType        #55:#56       // toVector:()Lscala/collection/immutable/Vector;
   #58 = InterfaceMethodref #54.#57       // scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
   #59 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #60 = MethodType         #59           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #61 = Utf8               $anonfun$new$1
   #62 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #63 = NameAndType        #61:#62       // $anonfun$new$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #64 = Methodref          #2.#63        // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #65 = MethodHandle       6:#64         // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #66 = MethodType         #62           //  (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
   #67 = Integer            5
   #68 = Integer            1
   #69 = Utf8               java/lang/invoke/LambdaMetafactory
   #70 = Class              #69           // java/lang/invoke/LambdaMetafactory
   #71 = Utf8               altMetafactory
   #72 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #73 = NameAndType        #71:#72       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #74 = Methodref          #70.#73       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #75 = MethodHandle       6:#74         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #76 = Utf8               ()Lscala/Function1;
   #77 = NameAndType        #38:#76       // apply:()Lscala/Function1;
   #78 = InvokeDynamic      #0:#77        // #0:apply:()Lscala/Function1;
   #79 = Utf8               (Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
   #80 = NameAndType        #38:#79       // apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
   #81 = Methodref          #42.#80       // coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
   #82 = Utf8
   #83 = String             #82           //
   #84 = Utf8               scala/Some
   #85 = Class              #84           // scala/Some
   #86 = String             #31           //
   #87 = Utf8               (Ljava/lang/Object;)V
   #88 = NameAndType        #11:#87       // "<init>":(Ljava/lang/Object;)V
   #89 = Methodref          #85.#88       // scala/Some."<init>":(Ljava/lang/Object;)V
   #90 = Utf8               $anonfun$new$2
   #91 = Utf8               (Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
   #92 = NameAndType        #90:#91       // $anonfun$new$2:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
   #93 = Methodref          #2.#92        // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$2:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
   #94 = MethodHandle       6:#93         // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$2:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
   #95 = MethodType         #39           //  (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
   #96 = Utf8               (Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;)Lscala/Function1;
   #97 = NameAndType        #38:#96       // apply:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;)Lscala/Function1;
   #98 = InvokeDynamic      #1:#97        // #1:apply:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;)Lscala/Function1;
   #99 = Utf8               coursier/util/Tree
  #100 = Class              #99           // coursier/util/Tree
  #101 = Utf8               customRender
  #102 = Utf8               (ZLjava/lang/String;Lscala/Option;Lscala/Function1;)Ljava/lang/String;
  #103 = NameAndType        #101:#102     // customRender:(ZLjava/lang/String;Lscala/Option;Lscala/Function1;)Ljava/lang/String;
  #104 = Methodref          #100.#103     // coursier/util/Tree.customRender:(ZLjava/lang/String;Lscala/Option;Lscala/Function1;)Ljava/lang/String;
  #105 = Utf8               $anonfun$new$3
  #106 = NameAndType        #105:#39      // $anonfun$new$3:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #107 = Methodref          #2.#106       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$3:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #108 = MethodHandle       6:#107        // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$3:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #109 = InvokeDynamic      #2:#77        // #2:apply:()Lscala/Function1;
  #110 = Utf8               map
  #111 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #112 = NameAndType        #110:#111     // map:(Lscala/Function1;)Ljava/lang/Object;
  #113 = InterfaceMethodref #54.#112      // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #114 = Utf8               scala/collection/SeqOps
  #115 = Class              #114          // scala/collection/SeqOps
  #116 = Utf8               distinct
  #117 = Utf8               ()Ljava/lang/Object;
  #118 = NameAndType        #116:#117     // distinct:()Ljava/lang/Object;
  #119 = InterfaceMethodref #115.#118     // scala/collection/SeqOps.distinct:()Ljava/lang/Object;
  #120 = Utf8               scala/collection/IterableOps
  #121 = Class              #120          // scala/collection/IterableOps
  #122 = Utf8               $anonfun$new$4
  #123 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
  #124 = NameAndType        #122:#123     // $anonfun$new$4:(Ljava/lang/String;)Lscala/Tuple2;
  #125 = Methodref          #2.#124       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$4:(Ljava/lang/String;)Lscala/Tuple2;
  #126 = MethodHandle       6:#125        // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$4:(Ljava/lang/String;)Lscala/Tuple2;
  #127 = MethodType         #123          //  (Ljava/lang/String;)Lscala/Tuple2;
  #128 = InvokeDynamic      #3:#77        // #3:apply:()Lscala/Function1;
  #129 = InterfaceMethodref #121.#112     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #130 = Utf8               $anonfun$new$7
  #131 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #132 = NameAndType        #130:#131     // $anonfun$new$7:(Lscala/Tuple2;)Lscala/Tuple2;
  #133 = Methodref          #2.#132       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$7:(Lscala/Tuple2;)Lscala/Tuple2;
  #134 = MethodHandle       6:#133        // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$7:(Lscala/Tuple2;)Lscala/Tuple2;
  #135 = MethodType         #131          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #136 = InvokeDynamic      #4:#77        // #4:apply:()Lscala/Function1;
  #137 = Utf8               scala/math/Ordering$
  #138 = Class              #137          // scala/math/Ordering$
  #139 = Utf8               Lscala/math/Ordering$;
  #140 = NameAndType        #43:#139      // MODULE$:Lscala/math/Ordering$;
  #141 = Fieldref           #138.#140     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #142 = Utf8               Lscala/math/Ordering$Boolean$;
  #143 = NameAndType        #43:#142      // MODULE$:Lscala/math/Ordering$Boolean$;
  #144 = Fieldref           #28.#143      // scala/math/Ordering$Boolean$.MODULE$:Lscala/math/Ordering$Boolean$;
  #145 = Utf8               scala/Predef$
  #146 = Class              #145          // scala/Predef$
  #147 = Utf8               Lscala/Predef$;
  #148 = NameAndType        #43:#147      // MODULE$:Lscala/Predef$;
  #149 = Fieldref           #146.#148     // scala/Predef$.MODULE$:Lscala/Predef$;
  #150 = Utf8               $conforms
  #151 = NameAndType        #150:#76      // $conforms:()Lscala/Function1;
  #152 = Methodref          #146.#151     // scala/Predef$.$conforms:()Lscala/Function1;
  #153 = Utf8               ordered
  #154 = Utf8               (Lscala/Function1;)Lscala/math/Ordering;
  #155 = NameAndType        #153:#154     // ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #156 = Methodref          #138.#155     // scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #157 = Utf8               Tuple2
  #158 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #159 = NameAndType        #157:#158     // Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #160 = Methodref          #138.#159     // scala/math/Ordering$.Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #161 = Utf8               sortBy
  #162 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #163 = NameAndType        #161:#162     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #164 = InterfaceMethodref #115.#163     // scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #165 = Utf8               $anonfun$new$8
  #166 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #167 = NameAndType        #165:#166     // $anonfun$new$8:(Lscala/Tuple2;)Ljava/lang/String;
  #168 = Methodref          #2.#167       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$8:(Lscala/Tuple2;)Ljava/lang/String;
  #169 = MethodHandle       6:#168        // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$8:(Lscala/Tuple2;)Ljava/lang/String;
  #170 = MethodType         #166          //  (Lscala/Tuple2;)Ljava/lang/String;
  #171 = InvokeDynamic      #5:#77        // #5:apply:()Lscala/Function1;
  #172 = Utf8               java/lang/StringBuilder
  #173 = Class              #172          // java/lang/StringBuilder
  #174 = Integer            0
  #175 = Utf8               (I)V
  #176 = NameAndType        #11:#175      // "<init>":(I)V
  #177 = Methodref          #173.#176     // java/lang/StringBuilder."<init>":(I)V
  #178 = Integer            11
  #179 = Utf8               module
  #180 = Utf8               ()Lcoursier/core/Module;
  #181 = NameAndType        #179:#180     // module:()Lcoursier/core/Module;
  #182 = Methodref          #48.#181      // coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
  #183 = Utf8               coursier/core/Module
  #184 = Class              #183          // coursier/core/Module
  #185 = Utf8               repr
  #186 = Utf8               ()Ljava/lang/String;
  #187 = NameAndType        #185:#186     // repr:()Ljava/lang/String;
  #188 = Methodref          #184.#187     // coursier/core/Module.repr:()Ljava/lang/String;
  #189 = Utf8               append
  #190 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #191 = NameAndType        #189:#190     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #192 = Methodref          #173.#191     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #193 = Utf8               :
  #194 = String             #193          // :
  #195 = Utf8                or
  #196 = String             #195          //  or
  #197 = Utf8               mkString
  #198 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #199 = NameAndType        #197:#198     // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #200 = InterfaceMethodref #54.#199      // scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #201 = Utf8                wanted by
  #202 = String             #201          //  wanted by
  #203 = Utf8               toString
  #204 = NameAndType        #203:#186     // toString:()Ljava/lang/String;
  #205 = Methodref          #173.#204     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #206 = Utf8               java/lang/System
  #207 = Class              #206          // java/lang/System
  #208 = Utf8               lineSeparator
  #209 = NameAndType        #208:#186     // lineSeparator:()Ljava/lang/String;
  #210 = Methodref          #207.#209     // java/lang/System.lineSeparator:()Ljava/lang/String;
  #211 = Utf8               rendered
  #212 = Utf8               Ljava/lang/String;
  #213 = Utf8               dependeesWantVersions
  #214 = Utf8               Lscala/collection/immutable/Seq;
  #215 = Utf8               this
  #216 = Utf8               Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;
  #217 = Utf8               Lcoursier/graph/ReverseModuleTree;
  #218 = Utf8               v1
  #219 = NameAndType        #38:#39       // apply:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #220 = Methodref          #2.#219       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.apply:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #221 = Utf8               Ljava/lang/Object;
  #222 = Utf8               x$3
  #223 = Utf8               $this
  #224 = Utf8               t$1
  #225 = Utf8               node
  #226 = Utf8               excludedDependsOn
  #227 = Utf8               ()Z
  #228 = NameAndType        #226:#227     // excludedDependsOn:()Z
  #229 = Methodref          #48.#228      // coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
  #230 = Integer            15
  #231 = NameAndType        #36:#37       // colors0$1:Lcoursier/util/Print$Colors;
  #232 = Fieldref           #2.#231       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.colors0$1:Lcoursier/util/Print$Colors;
  #233 = Utf8               yellow
  #234 = NameAndType        #233:#186     // yellow:()Ljava/lang/String;
  #235 = Methodref          #18.#234      // coursier/util/Print$Colors.yellow:()Ljava/lang/String;
  #236 = Utf8               (excluded by)
  #237 = String             #236          // (excluded by)
  #238 = Utf8               reset
  #239 = NameAndType        #238:#186     // reset:()Ljava/lang/String;
  #240 = Methodref          #18.#239      // coursier/util/Print$Colors.reset:()Ljava/lang/String;
  #241 = Utf8
  #242 = String             #241          //
  #243 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #244 = NameAndType        #189:#243     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #245 = Methodref          #173.#244     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #246 = Utf8               reconciledVersion
  #247 = NameAndType        #246:#186     // reconciledVersion:()Ljava/lang/String;
  #248 = Methodref          #48.#247      // coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
  #249 = Utf8               dependsOnModule
  #250 = NameAndType        #249:#180     // dependsOnModule:()Lcoursier/core/Module;
  #251 = Methodref          #48.#250      // coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
  #252 = Utf8               java/lang/Object
  #253 = Class              #252          // java/lang/Object
  #254 = Utf8               equals
  #255 = Utf8               (Ljava/lang/Object;)Z
  #256 = NameAndType        #254:#255     // equals:(Ljava/lang/Object;)Z
  #257 = Methodref          #253.#256     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #258 = Utf8               coursier/util/Print$
  #259 = Class              #258          // coursier/util/Print$
  #260 = Utf8               Lcoursier/util/Print$;
  #261 = NameAndType        #43:#260      // MODULE$:Lcoursier/util/Print$;
  #262 = Fieldref           #259.#261     // coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
  #263 = Utf8               dependsOnVersion
  #264 = NameAndType        #263:#186     // dependsOnVersion:()Ljava/lang/String;
  #265 = Methodref          #48.#264      // coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
  #266 = Utf8               dependsOnReconciledVersion
  #267 = NameAndType        #266:#186     // dependsOnReconciledVersion:()Ljava/lang/String;
  #268 = Methodref          #48.#267      // coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
  #269 = Utf8               compatibleVersions
  #270 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #271 = NameAndType        #269:#270     // compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
  #272 = Methodref          #259.#271     // coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
  #273 = Integer            2
  #274 = Utf8               red
  #275 = NameAndType        #274:#186     // red:()Ljava/lang/String;
  #276 = Methodref          #18.#275      // coursier/util/Print$Colors.red:()Ljava/lang/String;
  #277 = Utf8               java/lang/String
  #278 = Class              #277          // java/lang/String
  #279 = Integer            6
  #280 = Utf8               wants
  #281 = String             #280          // wants
  #282 = Integer            7
  #283 = Utf8               assumeCompatibleVersions
  #284 = Utf8               Z
  #285 = Utf8               x$4
  #286 = Utf8               $anonfun$new$5
  #287 = Utf8               (Lcoursier/core/VersionConstraint;)Lscala/Option;
  #288 = Utf8               constraint$1
  #289 = Utf8               coursier/core/VersionConstraint
  #290 = Class              #289          // coursier/core/VersionConstraint
  #291 = Utf8               interval
  #292 = Utf8               ()Lcoursier/core/VersionInterval;
  #293 = NameAndType        #291:#292     // interval:()Lcoursier/core/VersionInterval;
  #294 = Methodref          #290.#293     // coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
  #295 = Utf8               coursier/core/VersionInterval
  #296 = Class              #295          // coursier/core/VersionInterval
  #297 = Utf8               from
  #298 = Utf8               ()Lscala/Option;
  #299 = NameAndType        #297:#298     // from:()Lscala/Option;
  #300 = Methodref          #296.#299     // coursier/core/VersionInterval.from:()Lscala/Option;
  #301 = Utf8               Lcoursier/core/VersionConstraint;
  #302 = Utf8               $anonfun$new$6
  #303 = Utf8               ()Lcoursier/core/Version;
  #304 = Utf8               coursier/core/Version$
  #305 = Class              #304          // coursier/core/Version$
  #306 = Utf8               Lcoursier/core/Version$;
  #307 = NameAndType        #43:#306      // MODULE$:Lcoursier/core/Version$;
  #308 = Fieldref           #305.#307     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #309 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #310 = NameAndType        #38:#309      // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #311 = Methodref          #305.#310     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #312 = Utf8               ver
  #313 = Utf8               coursier/core/Parse$
  #314 = Class              #313          // coursier/core/Parse$
  #315 = Utf8               Lcoursier/core/Parse$;
  #316 = NameAndType        #43:#315      // MODULE$:Lcoursier/core/Parse$;
  #317 = Fieldref           #314.#316     // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
  #318 = Utf8               versionConstraint
  #319 = Utf8               (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #320 = NameAndType        #318:#319     // versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #321 = Methodref          #314.#320     // coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #322 = Utf8               preferred
  #323 = NameAndType        #322:#50      // preferred:()Lscala/collection/immutable/Seq;
  #324 = Methodref          #290.#323     // coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
  #325 = Utf8               headOption
  #326 = NameAndType        #325:#298     // headOption:()Lscala/Option;
  #327 = InterfaceMethodref #54.#326      // scala/collection/immutable/Seq.headOption:()Lscala/Option;
  #328 = MethodType         #117          //  ()Ljava/lang/Object;
  #329 = NameAndType        #286:#287     // $anonfun$new$5:(Lcoursier/core/VersionConstraint;)Lscala/Option;
  #330 = Methodref          #2.#329       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$5:(Lcoursier/core/VersionConstraint;)Lscala/Option;
  #331 = MethodHandle       6:#330        // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$5:(Lcoursier/core/VersionConstraint;)Lscala/Option;
  #332 = MethodType         #298          //  ()Lscala/Option;
  #333 = Utf8               (Lcoursier/core/VersionConstraint;)Lscala/Function0;
  #334 = NameAndType        #38:#333      // apply:(Lcoursier/core/VersionConstraint;)Lscala/Function0;
  #335 = InvokeDynamic      #6:#334       // #6:apply:(Lcoursier/core/VersionConstraint;)Lscala/Function0;
  #336 = Utf8               scala/Option
  #337 = Class              #336          // scala/Option
  #338 = Utf8               orElse
  #339 = Utf8               (Lscala/Function0;)Lscala/Option;
  #340 = NameAndType        #338:#339     // orElse:(Lscala/Function0;)Lscala/Option;
  #341 = Methodref          #337.#340     // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
  #342 = NameAndType        #302:#303     // $anonfun$new$6:()Lcoursier/core/Version;
  #343 = Methodref          #2.#342       // coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$6:()Lcoursier/core/Version;
  #344 = MethodHandle       6:#343        // REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$6:()Lcoursier/core/Version;
  #345 = MethodType         #303          //  ()Lcoursier/core/Version;
  #346 = Utf8               ()Lscala/Function0;
  #347 = NameAndType        #38:#346      // apply:()Lscala/Function0;
  #348 = InvokeDynamic      #7:#347       // #7:apply:()Lscala/Function0;
  #349 = Utf8               getOrElse
  #350 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #351 = NameAndType        #349:#350     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #352 = Methodref          #337.#351     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #353 = Utf8               coursier/core/Version
  #354 = Class              #353          // coursier/core/Version
  #355 = Utf8               scala/Tuple2
  #356 = Class              #355          // scala/Tuple2
  #357 = Utf8               isEmpty
  #358 = NameAndType        #357:#227     // isEmpty:()Z
  #359 = InterfaceMethodref #54.#358      // scala/collection/immutable/Seq.isEmpty:()Z
  #360 = Utf8               scala/runtime/BoxesRunTime
  #361 = Class              #360          // scala/runtime/BoxesRunTime
  #362 = Utf8               boxToBoolean
  #363 = Utf8               (Z)Ljava/lang/Boolean;
  #364 = NameAndType        #362:#363     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #365 = Methodref          #361.#364     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #366 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #367 = NameAndType        #11:#366      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #368 = Methodref          #356.#367     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #369 = Utf8               constraint
  #370 = Utf8               sortWith
  #371 = Utf8               Lcoursier/core/Version;
  #372 = Utf8               x$5
  #373 = Utf8               _1
  #374 = NameAndType        #373:#117     // _1:()Ljava/lang/Object;
  #375 = Methodref          #356.#374     // scala/Tuple2._1:()Ljava/lang/Object;
  #376 = Utf8               Lscala/Tuple2;
  #377 = Utf8               x$6
  #378 = Utf8               _2
  #379 = NameAndType        #378:#117     // _2:()Ljava/lang/Object;
  #380 = Methodref          #356.#379     // scala/Tuple2._2:()Ljava/lang/Object;
  #381 = Utf8               (Lcoursier/util/Print$Colors;)V
  #382 = Utf8               ()V
  #383 = NameAndType        #11:#382      // "<init>":()V
  #384 = Methodref          #5.#383       // scala/runtime/AbstractFunction1."<init>":()V
  #385 = Utf8               $deserializeLambda$
  #386 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #387 = Utf8               scala/runtime/LambdaDeserialize
  #388 = Class              #387          // scala/runtime/LambdaDeserialize
  #389 = Utf8               bootstrap
  #390 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #391 = NameAndType        #389:#390     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #392 = Methodref          #388.#391     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #393 = MethodHandle       6:#392        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #394 = Utf8               lambdaDeserialize
  #395 = NameAndType        #394:#386     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #396 = InvokeDynamic      #8:#395       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #397 = Utf8               ConstantValue
  #398 = Utf8               Code
  #399 = Utf8               LineNumberTable
  #400 = Utf8               LocalVariableTable
  #401 = Utf8               MethodParameters
  #402 = Utf8               StackMapTable
  #403 = Utf8               InnerClasses
  #404 = Utf8               EnclosingMethod
  #405 = Utf8               Signature
  #406 = Utf8               SourceFile
  #407 = Utf8               BootstrapMethods
  #408 = Utf8               ScalaInlineInfo
  #409 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final coursier.util.Print$Colors colors0$1;
    descriptor: Lcoursier/util/Print$Colors;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final java.lang.String apply(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=6, locals=4, args_size=2
         0: getstatic     #46                 // Field coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
         3: aload_1
         4: invokevirtual #52                 // Method coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
         7: invokeinterface #58,  1           // InterfaceMethod scala/collection/immutable/Seq.toVector:()Lscala/collection/immutable/Vector;
        12: invokedynamic #78,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        17: invokevirtual #81                 // Method coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
        20: iconst_0
        21: ldc           #83                 // String
        23: new           #85                 // class scala/Some
        26: dup
        27: ldc           #86                 // String
        29: invokespecial #89                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        32: aload_0
        33: aload_1
        34: invokedynamic #98,  0             // InvokeDynamic #1:apply:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;)Lscala/Function1;
        39: invokevirtual #104                // Method coursier/util/Tree.customRender:(ZLjava/lang/String;Lscala/Option;Lscala/Function1;)Ljava/lang/String;
        42: astore_2
        43: aload_1
        44: invokevirtual #52                 // Method coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
        47: invokedynamic #109,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        52: invokeinterface #113,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        57: checkcast     #115                // class scala/collection/SeqOps
        60: invokeinterface #119,  1          // InterfaceMethod scala/collection/SeqOps.distinct:()Ljava/lang/Object;
        65: checkcast     #121                // class scala/collection/IterableOps
        68: invokedynamic #128,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        73: invokeinterface #129,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        78: checkcast     #115                // class scala/collection/SeqOps
        81: invokedynamic #136,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        86: getstatic     #141                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        89: getstatic     #144                // Field scala/math/Ordering$Boolean$.MODULE$:Lscala/math/Ordering$Boolean$;
        92: getstatic     #141                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        95: getstatic     #149                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: invokevirtual #152                // Method scala/Predef$.$conforms:()Lscala/Function1;
       101: invokevirtual #156                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
       104: invokevirtual #160                // Method scala/math/Ordering$.Tuple2:(Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
       107: invokeinterface #164,  3          // InterfaceMethod scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       112: checkcast     #121                // class scala/collection/IterableOps
       115: invokedynamic #171,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       120: invokeinterface #129,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
       125: checkcast     #54                 // class scala/collection/immutable/Seq
       128: astore_3
       129: new           #173                // class java/lang/StringBuilder
       132: dup
       133: ldc           #174                // int 0
       135: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       138: new           #173                // class java/lang/StringBuilder
       141: dup
       142: ldc           #178                // int 11
       144: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       147: aload_1
       148: invokevirtual #182                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       151: invokevirtual #188                // Method coursier/core/Module.repr:()Ljava/lang/String;
       154: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       157: ldc           #194                // String :
       159: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       162: aload_3
       163: ldc           #196                // String  or
       165: invokeinterface #200,  2          // InterfaceMethod scala/collection/immutable/Seq.mkString:(Ljava/lang/String;)Ljava/lang/String;
       170: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       173: ldc           #202                // String  wanted by
       175: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       178: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       181: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       184: invokestatic  #210                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       187: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: invokestatic  #210                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       193: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       196: aload_2
       197: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       200: invokestatic  #210                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       203: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       206: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       209: areturn
      LineNumberTable:
        line 51: 0
        line 52: 20
        line 73: 43
        line 74: 47
        line 76: 68
        line 83: 81
        line 84: 115
        line 88: 129
        line 85: 138
        line 86: 184
        line 87: 190
        line 88: 196
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43     166     2 rendered   Ljava/lang/String;
          129      80     3 dependeesWantVersions   Lscala/collection/immutable/Seq;
            0     210     0  this   Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;
            0     210     1     t   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      t                              final

  public final java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #48                 // class coursier/graph/ReverseModuleTree
         5: invokevirtual #220                // Method apply:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public static final scala.collection.immutable.Seq $anonfun$new$1(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #52                 // Method coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.String $anonfun$new$2(coursier.error.ResolutionError$ConflictingDependencies$$anonfun$3, coursier.graph.ReverseModuleTree, coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: invokevirtual #229                // Method coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
         4: ifeq          71
         7: new           #173                // class java/lang/StringBuilder
        10: dup
        11: ldc           #230                // int 15
        13: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
        16: aload_0
        17: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
        20: invokevirtual #235                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
        23: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: ldc           #237                // String (excluded by)
        28: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_0
        32: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
        35: invokevirtual #240                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
        38: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: ldc           #242                // String
        43: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        46: aload_2
        47: invokevirtual #182                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        50: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        53: ldc           #194                // String :
        55: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: aload_2
        59: invokevirtual #248                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
        62: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        65: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        68: goto          443
        71: aload_2
        72: invokevirtual #251                // Method coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
        75: aload_1
        76: invokevirtual #182                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        79: astore_3
        80: dup
        81: ifnonnull     92
        84: pop
        85: aload_3
        86: ifnull        99
        89: goto          234
        92: aload_3
        93: invokevirtual #257                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        96: ifeq          234
        99: getstatic     #262                // Field coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
       102: aload_2
       103: invokevirtual #265                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       106: aload_2
       107: invokevirtual #268                // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       110: invokevirtual #272                // Method coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
       113: istore        4
       115: new           #173                // class java/lang/StringBuilder
       118: dup
       119: ldc           #174                // int 0
       121: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       124: new           #173                // class java/lang/StringBuilder
       127: dup
       128: ldc_w         #273                // int 2
       131: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       134: aload_2
       135: invokevirtual #182                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       138: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       141: ldc           #194                // String :
       143: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       146: aload_2
       147: invokevirtual #248                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       150: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       153: ldc           #242                // String
       155: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       158: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       161: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       164: iload         4
       166: ifeq          179
       169: aload_0
       170: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
       173: invokevirtual #235                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
       176: goto          186
       179: aload_0
       180: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
       183: invokevirtual #276                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       186: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       189: new           #173                // class java/lang/StringBuilder
       192: dup
       193: ldc_w         #279                // int 6
       196: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       199: ldc_w         #281                // String wants
       202: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       205: aload_2
       206: invokevirtual #265                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       209: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       212: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       215: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: aload_0
       219: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
       222: invokevirtual #240                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       225: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       228: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       231: goto          443
       234: aload_2
       235: invokevirtual #265                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       238: aload_2
       239: invokevirtual #268                // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       242: astore        5
       244: dup
       245: ifnonnull     257
       248: pop
       249: aload         5
       251: ifnull        412
       254: goto          265
       257: aload         5
       259: invokevirtual #257                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       262: ifne          412
       265: getstatic     #262                // Field coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
       268: aload_2
       269: invokevirtual #265                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       272: aload_2
       273: invokevirtual #268                // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       276: invokevirtual #272                // Method coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
       279: istore        6
       281: new           #173                // class java/lang/StringBuilder
       284: dup
       285: ldc           #174                // int 0
       287: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       290: new           #173                // class java/lang/StringBuilder
       293: dup
       294: ldc_w         #273                // int 2
       297: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       300: aload_2
       301: invokevirtual #182                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       304: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       307: ldc           #194                // String :
       309: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       312: aload_2
       313: invokevirtual #248                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       316: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       319: ldc           #242                // String
       321: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       324: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       327: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       330: iload         6
       332: ifeq          345
       335: aload_0
       336: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
       339: invokevirtual #235                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
       342: goto          352
       345: aload_0
       346: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
       349: invokevirtual #276                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       352: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       355: new           #173                // class java/lang/StringBuilder
       358: dup
       359: ldc_w         #282                // int 7
       362: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       365: ldc_w         #281                // String wants
       368: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       371: aload_2
       372: invokevirtual #251                // Method coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
       375: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       378: ldc           #194                // String :
       380: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       383: aload_2
       384: invokevirtual #265                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       387: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       390: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       393: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       396: aload_0
       397: getfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
       400: invokevirtual #240                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       403: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       406: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       409: goto          443
       412: new           #173                // class java/lang/StringBuilder
       415: dup
       416: ldc           #68                 // int 1
       418: invokespecial #177                // Method java/lang/StringBuilder."<init>":(I)V
       421: aload_2
       422: invokevirtual #182                // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       425: invokevirtual #245                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       428: ldc           #194                // String :
       430: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       433: aload_2
       434: invokevirtual #248                // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       437: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       440: invokevirtual #205                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       443: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 251 /* same_frame_extended */
          offset_delta = 71
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree, class coursier/core/Module ]
          stack = [ class coursier/core/Module ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 79
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree, class coursier/core/Module, int ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree, class coursier/core/Module, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 47
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree, class coursier/core/Module, top, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 79
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree, class coursier/core/Module, top, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree, class coursier/core/Module, top, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 59
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3, class coursier/graph/ReverseModuleTree, class coursier/graph/ReverseModuleTree ]
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 53: 0
        line 54: 7
        line 55: 71
        line 56: 99
        line 60: 115
        line 58: 124
        line 59: 164
        line 60: 189
        line 61: 218
        line 62: 234
        line 63: 265
        line 67: 281
        line 65: 290
        line 66: 330
        line 67: 355
        line 68: 396
        line 70: 412
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          115     116     4 assumeCompatibleVersions   Z
          281     128     6 assumeCompatibleVersions   Z
            0     444     0 $this   Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;
            0     444     1   t$1   Lcoursier/graph/ReverseModuleTree;
            0     444     2  node   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      t$1                            final
      node                           final

  public static final java.lang.String $anonfun$new$3(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #265                // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final scala.Option $anonfun$new$5(coursier.core.VersionConstraint);
    descriptor: (Lcoursier/core/VersionConstraint;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #294                // Method coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
         4: invokevirtual #300                // Method coursier/core/VersionInterval.from:()Lscala/Option;
         7: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 constraint$1   Lcoursier/core/VersionConstraint;
    MethodParameters:
      Name                           Flags
      constraint$1                   final

  public static final coursier.core.Version $anonfun$new$6();
    descriptor: ()Lcoursier/core/Version;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #308                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: ldc           #86                 // String
         5: invokevirtual #311                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
         8: areturn
      LineNumberTable:
        line 80: 0

  public static final scala.Tuple2 $anonfun$new$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=1
         0: getstatic     #317                // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #321                // Method coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
         7: astore_1
         8: aload_1
         9: invokevirtual #324                // Method coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
        12: invokeinterface #327,  1          // InterfaceMethod scala/collection/immutable/Seq.headOption:()Lscala/Option;
        17: aload_1
        18: invokedynamic #335,  0            // InvokeDynamic #6:apply:(Lcoursier/core/VersionConstraint;)Lscala/Function0;
        23: invokevirtual #341                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        26: invokedynamic #348,  0            // InvokeDynamic #7:apply:()Lscala/Function0;
        31: invokevirtual #352                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        34: checkcast     #354                // class coursier/core/Version
        37: astore_2
        38: new           #356                // class scala/Tuple2
        41: dup
        42: new           #356                // class scala/Tuple2
        45: dup
        46: aload_1
        47: invokevirtual #324                // Method coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
        50: invokeinterface #359,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
        55: invokestatic  #365                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        58: aload_2
        59: invokespecial #368                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        62: aload_0
        63: invokespecial #368                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        66: areturn
      LineNumberTable:
        line 77: 0
        line 78: 8
        line 79: 17
        line 80: 26
        line 81: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      58     1 constraint   Lcoursier/core/VersionConstraint;
           38      28     2 sortWith   Lcoursier/core/Version;
            0      67     0   ver   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      ver                            final

  public static final scala.Tuple2 $anonfun$new$7(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #375                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #356                // class scala/Tuple2
         7: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.String $anonfun$new$8(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #380                // Method scala/Tuple2._2:()Ljava/lang/Object;
         4: checkcast     #278                // class java/lang/String
         7: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public coursier.error.ResolutionError$ConflictingDependencies$$anonfun$3(coursier.util.Print$Colors);
    descriptor: (Lcoursier/util/Print$Colors;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #232                // Field colors0$1:Lcoursier/util/Print$Colors;
         5: aload_0
         6: invokespecial #384                // Method scala/runtime/AbstractFunction1."<init>":()V
         9: return
      LineNumberTable:
        line 48: 0
        line 50: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;
            0      10     1 colors0$1   Lcoursier/util/Print$Colors;
    MethodParameters:
      Name                           Flags
      colors0$1                      final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #396,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #10 of #15;    // ConflictingDependencies=class coursier/error/ResolutionError$ConflictingDependencies of class coursier/error/ResolutionError
  public final #2;                        // class coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3
  public static final #21= #18 of #20;    // Colors=class coursier/util/Print$Colors of class coursier/util/Print
  public static final #26= #23 of #25;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #31= #28 of #30;          // =class scala/math/Ordering$Boolean$ of class scala/math/Ordering
EnclosingMethod: #10.#13                // coursier.error.ResolutionError$ConflictingDependencies.<init>
Signature: #3                           // Lscala/runtime/AbstractFunction1<Lcoursier/graph/ReverseModuleTree;Ljava/lang/String;>;Ljava/io/Serializable;
SourceFile: "ResolutionError.scala"
BootstrapMethods:
  0: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 (Ljava/lang/Object;)Ljava/lang/Object;
      #65 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #66 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #67 5
      #68 1
      #66 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  1: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 (Ljava/lang/Object;)Ljava/lang/Object;
      #94 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$2:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #95 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #67 5
      #68 1
      #95 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  2: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 (Ljava/lang/Object;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$3:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #95 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #67 5
      #68 1
      #95 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  3: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 (Ljava/lang/Object;)Ljava/lang/Object;
      #126 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$4:(Ljava/lang/String;)Lscala/Tuple2;
      #127 (Ljava/lang/String;)Lscala/Tuple2;
      #67 5
      #68 1
      #127 (Ljava/lang/String;)Lscala/Tuple2;
  4: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 (Ljava/lang/Object;)Ljava/lang/Object;
      #134 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$7:(Lscala/Tuple2;)Lscala/Tuple2;
      #135 (Lscala/Tuple2;)Lscala/Tuple2;
      #67 5
      #68 1
      #135 (Lscala/Tuple2;)Lscala/Tuple2;
  5: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 (Ljava/lang/Object;)Ljava/lang/Object;
      #169 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$8:(Lscala/Tuple2;)Ljava/lang/String;
      #170 (Lscala/Tuple2;)Ljava/lang/String;
      #67 5
      #68 1
      #170 (Lscala/Tuple2;)Ljava/lang/String;
  6: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #328 ()Ljava/lang/Object;
      #331 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$5:(Lcoursier/core/VersionConstraint;)Lscala/Option;
      #332 ()Lscala/Option;
      #67 5
      #68 1
      #332 ()Lscala/Option;
  7: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #328 ()Ljava/lang/Object;
      #344 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$6:()Lcoursier/core/Version;
      #345 ()Lcoursier/core/Version;
      #67 5
      #68 1
      #345 ()Lcoursier/core/Version;
  8: #393 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #65 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #94 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$2:(Lcoursier/error/ResolutionError$ConflictingDependencies$$anonfun$3;Lcoursier/graph/ReverseModuleTree;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #108 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$3:(Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #126 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$4:(Ljava/lang/String;)Lscala/Tuple2;
      #331 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$5:(Lcoursier/core/VersionConstraint;)Lscala/Option;
      #344 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$6:()Lcoursier/core/Version;
      #134 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$7:(Lscala/Tuple2;)Lscala/Tuple2;
      #169 REF_invokeStatic coursier/error/ResolutionError$ConflictingDependencies$$anonfun$3.$anonfun$new$8:(Lscala/Tuple2;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 01 00 0B 00 3D 00 3E 01 00 5B 00 5C 01 00 6A
   00 27 01 00 7B 00 7C 01 01 1F 01 20 01 01 2F 01
   30 01 00 83 00 84 01 00 A6 00 A7 01 00 0B 01 7E
   01 00 26 00 27 01 00 26 00 3B 01
  Scala: length = 0x0 (unknown attribute)

