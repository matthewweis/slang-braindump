Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/params/rule/DontBumpRootDependencies.class
  Last modified May 29, 2022; size 14793 bytes
  SHA-256 checksum ccfed85cbab30291e49883e6ffafaec6ba68554addc49728f0474f9058693054
  Compiled from "DontBumpRootDependencies.scala"
public final class coursier.params.rule.DontBumpRootDependencies extends coursier.params.rule.Rule
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/params/rule/DontBumpRootDependencies
  super_class: #4                         // coursier/params/rule/Rule
  interfaces: 0, fields: 1, methods: 30, attributes: 6
Constant pool:
    #1 = Utf8               coursier/params/rule/DontBumpRootDependencies
    #2 = Class              #1            // coursier/params/rule/DontBumpRootDependencies
    #3 = Utf8               coursier/params/rule/Rule
    #4 = Class              #3            // coursier/params/rule/Rule
    #5 = Utf8               DontBumpRootDependencies.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u0005\u0005h\u0001\u0002\u0013&\u00051B\u0001b\u0011\u0001\u0003\u0006\u0004%\t\u0001\u0012\u0005\t\u0017\u0002\u0011\t\u0011)A\u0005\u000b\")A\n\u0001C\u0001\u001b\u0016!\u0001\u000b\u0001\u0001R\u0011\u001d\t\u0019\b\u0001C\u0001\u0003kBq!!!\u0001\t\u0003\t\u0019\tC\u0004\u0002\u0010\u0002!\t!!%\t\u000f\u0005U\u0005\u0001\"\u0011\u0002\u0018\"9\u0011Q\u0014\u0001\u0005B\u0005}\u0005bBAY\u0001\u0011\u0005\u00131\u0017\u0005\b\u0003o\u0003A\u0011IA]\u0011\u001d\t\t\r\u0001C\u0005\u0003\u0007Dq!a3\u0001\t\u0003\ni\rC\u0004\u0002P\u0002!\t%!5\t\u000f\u0005M\u0007\u0001\"\u0011\u0002V\"9\u00111\u001c\u0001\u0005B\u0005uw!B*&\u0011\u0003!f!\u0002\u0013&\u0011\u0003)\u0006\"\u0002\'\u0013\t\u0003\u0001\u0007\"B1\u0013\t\u0003\u0011g\u0001B2\u0013\u0005\u0011D\u0001\"\\\u000b\u0003\u0006\u0004%\tA\u001c\u0005\n\u0003\u000f)\"\u0011!Q\u0001\n=D\u0011BJ\u000b\u0003\u0006\u0004%\t%!\u0003\t\u0017\u0005-QC!A!\u0002\u0013q\u0015Q\u0002\u0005\u0007\u0019V!\t!a\u0004\u0007\r\u0005e!CAA\u000e\u00111\t\u0019d\u0007B\u0001B\u0003%\u0011QGA\u001e\u0011)\t\te\u0007B\u0001B\u0003%\u00111\t\u0005\fQn\u0011\t\u0011)A\u0005\u0003#\ty\u0005C\u0005\'7\t\u0015\r\u0011\"\u0011\u0002\n!Y\u00111B\u000e\u0003\u0002\u0003\u0006IATA)\u0011\u0019a5\u0004\"\u0001\u0002T!1\u0011M\u0005C\u0001\u0003?B\u0011\"a\u0019\u0013\u0003\u0003%I!!\u001a\u00031\u0011{g\u000e\u001e\"v[B\u0014vn\u001c;EKB,g\u000eZ3oG&,7O\u0003\u0002\'O\u0005!!/\u001e7f\u0015\tA\u0013&\u0001\u0004qCJ\fWn\u001d\u0006\u0002U\u0005A1m\\;sg&,\'o\u0001\u0001\u0014\t\u0001i\u0013g\u000e\t\u0003]=j\u0011!J\u0005\u0003a\u0015\u0012AAU;mKB\u0011!\'N\u0007\u0002g)\tA\'A\u0003tG\u0006d\u0017-\u0003\u00027g\t9\u0001K]8ek\u000e$\bC\u0001\u001dA\u001d\tIdH\u0004\u0002;{5\t1H\u0003\u0002=W\u00051AH]8pizJ\u0011\u0001N\u0005\u0003\u007fM\nq\u0001]1dW\u0006<W-\u0003\u0002B\u0005\na1+\u001a:jC2L\'0\u00192mK*\u0011qhM\u0001\t[\u0006$8\r[3sgV\tQ\t\u0005\u0002G\u00136\tqI\u0003\u0002IS\u0005!Q\u000f^5m\u0013\tQuI\u0001\bN_\u0012,H.Z\'bi\u000eDWM]:\u0002\u00135\fGo\u00195feN\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002O\u001fB\u0011a\u0006\u0001\u0005\u0006\u0007\u000e\u0001\r!\u0012\u0002\u0002\u0007B\u0011!+\u0006\b\u0003]E\t\u0001\u0004R8oi\n+X\u000e\u001d*p_R$U\r]3oI\u0016t7-[3t!\tq#cE\u0002\u0013-f\u0003\"AM,\n\u0005a\u001b$AB!osJ+g\r\u0005\u0002[?6\t1L\u0003\u0002];\u0006\u0011\u0011n\u001c\u0006\u0002=\u0006!!.\u0019<b\u0013\t\t5\fF\u0001U\u0003\u0015\t\u0007\u000f\u001d7z)\u0005q%A\u0006\"v[B,GMU8pi\u0012+\u0007/\u001a8eK:\u001c\u0017.Z:\u0014\u0005U)\u0007C\u00014l\u001b\u00059\'B\u00015j\u0003!\u0019wN\u001c4mS\u000e$(B\u00016*\u0003\u0015)\'O]8s\u0013\tawMA\bV]N\fG/[:gS\u0016$\'+\u001e7f\u0003Y\u0011W/\u001c9fIJ{w\u000e\u001e#fa\u0016tG-\u001a8dS\u0016\u001cX#A8\u0011\u0007a\u0002(/\u0003\u0002r\u0005\n\u00191+Z9\u0011\tI\u001aXo_\u0005\u0003iN\u0012a\u0001V;qY\u0016\u0014\u0004C\u0001<z\u001b\u00059(B\u0001=*\u0003\u0011\u0019wN]3\n\u0005i<(A\u0003#fa\u0016tG-\u001a8dsB\u0019A0!\u0001\u000f\u0005ut\bC\u0001\u001e4\u0013\ty8\'\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u0007\t)A\u0001\u0004TiJLgn\u001a\u0006\u0003\u007fN\nqCY;na\u0016$\'k\\8u\t\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u0011\u0016\u00039\u000bQA];mK\u0002J!AJ6\u0015\r\u0005E\u0011QCA\f!\r\t\u0019\"F\u0007\u0002%!)QN\u0007a\u0001_\")aE\u0007a\u0001\u001d\ny2)\u00198u\r>\u00148-\u001a*p_R$U\r]3oI\u0016t7-\u001f,feNLwN\\:\u0014\u0007m\ti\u0002\u0005\u0003\u0002 \u00055b\u0002BA\u0011\u0003SqA!a\t\u0002(9\u0019!(!\n\n\u0003)J!A[\u0015\n\u0007\u0005-\u0012.A\bSKN|G.\u001e;j_:,%O]8s\u0013\u0011\ty#!\r\u0003#Us7/\u0019;jg\u001aL\u0017M\u00197f%VdWMC\u0002\u0002,%\f!B]3t_2,H/[8o!\r1\u0018qG\u0005\u0004\u0003s9(A\u0003*fg>dW\u000f^5p]&!\u00111GA\u001f\u0013\r\ty$\u001b\u0002\u0010%\u0016\u001cx\u000e\\;uS>tWI\u001d:pe\u0006A1-\u00198u\u0005Vl\u0007\u000f\u0005\u0004}\u0003\u000b\nIe_\u0005\u0005\u0003\u000f\n)AA\u0002NCB\u00042A^A&\u0013\r\tie\u001e\u0002\u0007\u001b>$W\u000f\\3\n\u0007!\fi#C\u0002\'\u0003[!\"\"!\u0016\u0002X\u0005e\u00131LA/!\r\t\u0019b\u0007\u0005\b\u0003g\t\u0003\u0019AA\u001b\u0011\u001d\t\t%\ta\u0001\u0003\u0007Ba\u0001[\u0011A\u0002\u0005E\u0001\"\u0002\u0014\"\u0001\u0004qEc\u0001(\u0002b!)1I\ta\u0001\u000b\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011q\r\t\u0005\u0003S\ny\'\u0004\u0002\u0002l)\u0019\u0011QN/\u0002\t1\fgnZ\u0005\u0005\u0003c\nYG\u0001\u0004PE*,7\r^\u0001\u0006G\",7m\u001b\u000b\u0005\u0003o\ni\b\u0005\u00033\u0003s\n\u0016bAA>g\t1q\n\u001d;j_:Dq!a \u0006\u0001\u0004\t)$A\u0002sKN\f!\u0002\u001e:z%\u0016\u001cx\u000e\u001c<f)\u0019\t))a#\u0002\u000eB9\u0001(a\"\u0002\u001e\u0005U\u0012bAAE\u0005\n1Q)\u001b;iKJDq!a \u0007\u0001\u0004\t)\u0004C\u0003i\r\u0001\u0007\u0011+\u0001\u0007xSRDW*\u0019;dQ\u0016\u00148\u000fF\u0002O\u0003\'CQaQ\u0004A\u0002\u0015\u000b\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u00033\u0003B!!\u001b\u0002\u001c&!\u00111AA6\u0003!\u0019\u0017M\\#rk\u0006dG\u0003BAQ\u0003O\u00032AMAR\u0013\r\t)k\r\u0002\b\u0005>|G.Z1o\u0011\u001d\tI+\u0003a\u0001\u0003W\u000b1a\u001c2k!\r\u0011\u0014QV\u0005\u0004\u0003_\u001b$aA!os\u00061Q-];bYN$B!!)\u00026\"9\u0011\u0011\u0016\u0006A\u0002\u0005-\u0016\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005m\u0006c\u0001\u001a\u0002>&\u0019\u0011qX\u001a\u0003\u0007%sG/A\u0003ukBdW-\u0006\u0002\u0002FB!!\'a2F\u0013\r\tIm\r\u0002\u0007)V\u0004H.Z\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\tI*\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0006\u0002\u0002<\u0006q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BAV\u0003/Dq!!7\u0010\u0001\u0004\tY,A\u0001o\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005e\u0015q\u001c\u0005\b\u00033\u0004\u0002\u0019AA^\u0001
    #9 = Utf8               coursier/error/ResolutionError$UnsatisfiableRule
   #10 = Class              #9            // coursier/error/ResolutionError$UnsatisfiableRule
   #11 = Utf8               coursier/error/ResolutionError
   #12 = Class              #11           // coursier/error/ResolutionError
   #13 = Utf8               UnsatisfiableRule
   #14 = Utf8               coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies
   #15 = Class              #14           // coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies
   #16 = Utf8               BumpedRootDependencies
   #17 = Utf8               coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions
   #18 = Class              #17           // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions
   #19 = Utf8               CantForceRootDependencyVersions
   #20 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #21 = Class              #20           // java/lang/invoke/MethodHandles$Lookup
   #22 = Utf8               java/lang/invoke/MethodHandles
   #23 = Class              #22           // java/lang/invoke/MethodHandles
   #24 = Utf8               Lookup
   #25 = Utf8               scala/Predef$ArrowAssoc$
   #26 = Class              #25           // scala/Predef$ArrowAssoc$
   #27 = Utf8               scala/Predef
   #28 = Class              #27           // scala/Predef
   #29 = Utf8
   #30 = Utf8               matchers
   #31 = Utf8               Lcoursier/util/ModuleMatchers;
   #32 = Utf8               apply
   #33 = Utf8               (Lcoursier/util/ModuleMatchers;)Lcoursier/params/rule/DontBumpRootDependencies;
   #34 = Utf8               coursier/params/rule/DontBumpRootDependencies$
   #35 = Class              #34           // coursier/params/rule/DontBumpRootDependencies$
   #36 = Utf8               MODULE$
   #37 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies$;
   #38 = NameAndType        #36:#37       // MODULE$:Lcoursier/params/rule/DontBumpRootDependencies$;
   #39 = Fieldref           #35.#38       // coursier/params/rule/DontBumpRootDependencies$.MODULE$:Lcoursier/params/rule/DontBumpRootDependencies$;
   #40 = NameAndType        #32:#33       // apply:(Lcoursier/util/ModuleMatchers;)Lcoursier/params/rule/DontBumpRootDependencies;
   #41 = Methodref          #35.#40       // coursier/params/rule/DontBumpRootDependencies$.apply:(Lcoursier/util/ModuleMatchers;)Lcoursier/params/rule/DontBumpRootDependencies;
   #42 = Utf8               ()Lcoursier/params/rule/DontBumpRootDependencies;
   #43 = NameAndType        #32:#42       // apply:()Lcoursier/params/rule/DontBumpRootDependencies;
   #44 = Methodref          #35.#43       // coursier/params/rule/DontBumpRootDependencies$.apply:()Lcoursier/params/rule/DontBumpRootDependencies;
   #45 = Utf8               ()Lcoursier/util/ModuleMatchers;
   #46 = NameAndType        #30:#31       // matchers:Lcoursier/util/ModuleMatchers;
   #47 = Fieldref           #2.#46        // coursier/params/rule/DontBumpRootDependencies.matchers:Lcoursier/util/ModuleMatchers;
   #48 = Utf8               this
   #49 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies;
   #50 = Utf8               check
   #51 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option;
   #52 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option<Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;>;
   #53 = Utf8               res
   #54 = Utf8               coursier/core/Resolution
   #55 = Class              #54           // coursier/core/Resolution
   #56 = Utf8               rootDependencies
   #57 = Utf8               ()Lscala/collection/immutable/Seq;
   #58 = NameAndType        #56:#57       // rootDependencies:()Lscala/collection/immutable/Seq;
   #59 = Methodref          #55.#58       // coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
   #60 = Utf8               scala/collection/immutable/Seq
   #61 = Class              #60           // scala/collection/immutable/Seq
   #62 = Utf8               iterator
   #63 = Utf8               ()Lscala/collection/Iterator;
   #64 = NameAndType        #62:#63       // iterator:()Lscala/collection/Iterator;
   #65 = InterfaceMethodref #61.#64       // scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
   #66 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #67 = MethodType         #66           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               $anonfun$check$1
   #69 = Utf8               (Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
   #70 = NameAndType        #68:#69       // $anonfun$check$1:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
   #71 = Methodref          #2.#70        // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$1:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
   #72 = MethodHandle       6:#71         // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$1:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
   #73 = Utf8               (Lcoursier/core/Dependency;)Lscala/Tuple2;
   #74 = MethodType         #73           //  (Lcoursier/core/Dependency;)Lscala/Tuple2;
   #75 = Integer            5
   #76 = Integer            1
   #77 = Utf8               java/lang/invoke/LambdaMetafactory
   #78 = Class              #77           // java/lang/invoke/LambdaMetafactory
   #79 = Utf8               altMetafactory
   #80 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = NameAndType        #79:#80       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = Methodref          #78.#81       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = MethodHandle       6:#82         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = Utf8               (Lcoursier/core/Resolution;)Lscala/Function1;
   #85 = NameAndType        #32:#84       // apply:(Lcoursier/core/Resolution;)Lscala/Function1;
   #86 = InvokeDynamic      #0:#85        // #0:apply:(Lcoursier/core/Resolution;)Lscala/Function1;
   #87 = Utf8               scala/collection/Iterator
   #88 = Class              #87           // scala/collection/Iterator
   #89 = Utf8               map
   #90 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
   #91 = NameAndType        #89:#90       // map:(Lscala/Function1;)Lscala/collection/Iterator;
   #92 = InterfaceMethodref #88.#91       // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
   #93 = Utf8               $anonfun$check$3$adapted
   #94 = Utf8               (Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
   #95 = NameAndType        #93:#94       // $anonfun$check$3$adapted:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
   #96 = Methodref          #2.#95        // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$3$adapted:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
   #97 = MethodHandle       6:#96         // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$3$adapted:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
   #98 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #99 = MethodType         #98           //  (Lscala/Tuple2;)Ljava/lang/Object;
  #100 = Utf8               (Lcoursier/params/rule/DontBumpRootDependencies;)Lscala/Function1;
  #101 = NameAndType        #32:#100      // apply:(Lcoursier/params/rule/DontBumpRootDependencies;)Lscala/Function1;
  #102 = InvokeDynamic      #1:#101       // #1:apply:(Lcoursier/params/rule/DontBumpRootDependencies;)Lscala/Function1;
  #103 = Utf8               filter
  #104 = NameAndType        #103:#90      // filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #105 = InterfaceMethodref #88.#104      // scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
  #106 = Utf8               $anonfun$check$4$adapted
  #107 = NameAndType        #106:#98      // $anonfun$check$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #108 = Methodref          #2.#107       // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #109 = MethodHandle       6:#108        // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #110 = Utf8               ()Lscala/Function1;
  #111 = NameAndType        #32:#110      // apply:()Lscala/Function1;
  #112 = InvokeDynamic      #2:#111       // #2:apply:()Lscala/Function1;
  #113 = Utf8               $anonfun$check$5
  #114 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #115 = NameAndType        #113:#114     // $anonfun$check$5:(Lscala/Tuple2;)Lscala/Tuple2;
  #116 = Methodref          #2.#115       // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$5:(Lscala/Tuple2;)Lscala/Tuple2;
  #117 = MethodHandle       6:#116        // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$5:(Lscala/Tuple2;)Lscala/Tuple2;
  #118 = MethodType         #114          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #119 = InvokeDynamic      #3:#111       // #3:apply:()Lscala/Function1;
  #120 = Utf8               toVector
  #121 = Utf8               ()Lscala/collection/immutable/Vector;
  #122 = NameAndType        #120:#121     // toVector:()Lscala/collection/immutable/Vector;
  #123 = InterfaceMethodref #88.#122      // scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
  #124 = Utf8               scala/collection/immutable/Vector
  #125 = Class              #124          // scala/collection/immutable/Vector
  #126 = Utf8               isEmpty
  #127 = Utf8               ()Z
  #128 = NameAndType        #126:#127     // isEmpty:()Z
  #129 = Methodref          #125.#128     // scala/collection/immutable/Vector.isEmpty:()Z
  #130 = Utf8               scala/None$
  #131 = Class              #130          // scala/None$
  #132 = Utf8               Lscala/None$;
  #133 = NameAndType        #36:#132      // MODULE$:Lscala/None$;
  #134 = Fieldref           #131.#133     // scala/None$.MODULE$:Lscala/None$;
  #135 = Utf8               scala/Some
  #136 = Class              #135          // scala/Some
  #137 = Utf8               <init>
  #138 = Utf8               (Lscala/collection/immutable/Seq;Lcoursier/params/rule/DontBumpRootDependencies;)V
  #139 = NameAndType        #137:#138     // "<init>":(Lscala/collection/immutable/Seq;Lcoursier/params/rule/DontBumpRootDependencies;)V
  #140 = Methodref          #15.#139      // coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies."<init>":(Lscala/collection/immutable/Seq;Lcoursier/params/rule/DontBumpRootDependencies;)V
  #141 = Utf8               (Ljava/lang/Object;)V
  #142 = NameAndType        #137:#141     // "<init>":(Ljava/lang/Object;)V
  #143 = Methodref          #136.#142     // scala/Some."<init>":(Ljava/lang/Object;)V
  #144 = Utf8               scala/Option
  #145 = Class              #144          // scala/Option
  #146 = Utf8               bumped
  #147 = Utf8               Lscala/collection/immutable/Vector;
  #148 = Utf8               Lcoursier/core/Resolution;
  #149 = Utf8               tryResolve
  #150 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either;
  #151 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either<Lcoursier/error/ResolutionError$UnsatisfiableRule;Lcoursier/core/Resolution;>;
  #152 = Utf8               conflict
  #153 = Utf8               bumpedRootDependencies
  #154 = NameAndType        #153:#57      // bumpedRootDependencies:()Lscala/collection/immutable/Seq;
  #155 = Methodref          #15.#154      // coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies.bumpedRootDependencies:()Lscala/collection/immutable/Seq;
  #156 = Utf8               $anonfun$tryResolve$1
  #157 = NameAndType        #156:#114     // $anonfun$tryResolve$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #158 = Methodref          #2.#157       // coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #159 = MethodHandle       6:#158        // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #160 = InvokeDynamic      #4:#111       // #4:apply:()Lscala/Function1;
  #161 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #162 = NameAndType        #89:#161      // map:(Lscala/Function1;)Ljava/lang/Object;
  #163 = InterfaceMethodref #61.#162      // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #164 = Utf8               scala/collection/IterableOnceOps
  #165 = Class              #164          // scala/collection/IterableOnceOps
  #166 = Utf8               scala/$less$colon$less$
  #167 = Class              #166          // scala/$less$colon$less$
  #168 = Utf8               Lscala/$less$colon$less$;
  #169 = NameAndType        #36:#168      // MODULE$:Lscala/$less$colon$less$;
  #170 = Fieldref           #167.#169     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #171 = Utf8               refl
  #172 = Utf8               ()Lscala/$eq$colon$eq;
  #173 = NameAndType        #171:#172     // refl:()Lscala/$eq$colon$eq;
  #174 = Methodref          #167.#173     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #175 = Utf8               toMap
  #176 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #177 = NameAndType        #175:#176     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #178 = InterfaceMethodref #165.#177     // scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #179 = Utf8               forceVersions
  #180 = Utf8               ()Lscala/collection/immutable/Map;
  #181 = NameAndType        #179:#180     // forceVersions:()Lscala/collection/immutable/Map;
  #182 = Methodref          #55.#181      // coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
  #183 = Utf8               $anonfun$tryResolve$2$adapted
  #184 = Utf8               (Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #185 = NameAndType        #183:#184     // $anonfun$tryResolve$2$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #186 = Methodref          #2.#185       // coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$2$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #187 = MethodHandle       6:#186        // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$2$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #188 = Utf8               (Lscala/collection/immutable/Map;)Lscala/Function1;
  #189 = NameAndType        #32:#188      // apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #190 = InvokeDynamic      #5:#189       // #5:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #191 = Utf8               scala/collection/immutable/Map
  #192 = Class              #191          // scala/collection/immutable/Map
  #193 = NameAndType        #103:#161     // filter:(Lscala/Function1;)Ljava/lang/Object;
  #194 = InterfaceMethodref #192.#193     // scala/collection/immutable/Map.filter:(Lscala/Function1;)Ljava/lang/Object;
  #195 = InterfaceMethodref #192.#128     // scala/collection/immutable/Map.isEmpty:()Z
  #196 = Utf8               $plus$plus
  #197 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #198 = NameAndType        #196:#197     // $plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #199 = InterfaceMethodref #192.#198     // scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #200 = Utf8               withForceVersions
  #201 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #202 = NameAndType        #200:#201     // withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #203 = Methodref          #55.#202      // coursier/core/Resolution.withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #204 = Utf8               scala/package$
  #205 = Class              #204          // scala/package$
  #206 = Utf8               Lscala/package$;
  #207 = NameAndType        #36:#206      // MODULE$:Lscala/package$;
  #208 = Fieldref           #205.#207     // scala/package$.MODULE$:Lscala/package$;
  #209 = Utf8               Right
  #210 = Utf8               ()Lscala/util/Right$;
  #211 = NameAndType        #209:#210     // Right:()Lscala/util/Right$;
  #212 = Methodref          #205.#211     // scala/package$.Right:()Lscala/util/Right$;
  #213 = Utf8               scala/util/Right$
  #214 = Class              #213          // scala/util/Right$
  #215 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #216 = NameAndType        #32:#215      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #217 = Methodref          #214.#216     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #218 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Map;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
  #219 = NameAndType        #137:#218     // "<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Map;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
  #220 = Methodref          #18.#219      // coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions."<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Map;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
  #221 = Utf8               Left
  #222 = Utf8               ()Lscala/util/Left$;
  #223 = NameAndType        #221:#222     // Left:()Lscala/util/Left$;
  #224 = Methodref          #205.#223     // scala/package$.Left:()Lscala/util/Left$;
  #225 = Utf8               scala/util/Left$
  #226 = Class              #225          // scala/util/Left$
  #227 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #228 = NameAndType        #32:#227      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #229 = Methodref          #226.#228     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #230 = Utf8               scala/util/Either
  #231 = Class              #230          // scala/util/Either
  #232 = Utf8               res0
  #233 = Utf8               c
  #234 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions;
  #235 = Utf8               modules
  #236 = Utf8               Lscala/collection/immutable/Map;
  #237 = Utf8               cantForce
  #238 = Utf8               Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;
  #239 = Utf8               withMatchers
  #240 = Utf8               (Lcoursier/util/ModuleMatchers;)V
  #241 = NameAndType        #137:#240     // "<init>":(Lcoursier/util/ModuleMatchers;)V
  #242 = Methodref          #2.#241       // coursier/params/rule/DontBumpRootDependencies."<init>":(Lcoursier/util/ModuleMatchers;)V
  #243 = Utf8               toString
  #244 = Utf8               ()Ljava/lang/String;
  #245 = Utf8               java/lang/StringBuilder
  #246 = Class              #245          // java/lang/StringBuilder
  #247 = Utf8               DontBumpRootDependencies(
  #248 = String             #247          // DontBumpRootDependencies(
  #249 = Utf8               (Ljava/lang/String;)V
  #250 = NameAndType        #137:#249     // "<init>":(Ljava/lang/String;)V
  #251 = Methodref          #246.#250     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #252 = NameAndType        #30:#45       // matchers:()Lcoursier/util/ModuleMatchers;
  #253 = Methodref          #2.#252       // coursier/params/rule/DontBumpRootDependencies.matchers:()Lcoursier/util/ModuleMatchers;
  #254 = Utf8               java/lang/String
  #255 = Class              #254          // java/lang/String
  #256 = Utf8               valueOf
  #257 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #258 = NameAndType        #256:#257     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #259 = Methodref          #255.#258     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #260 = Utf8               append
  #261 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #262 = NameAndType        #260:#261     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #263 = Methodref          #246.#262     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #264 = Utf8               )
  #265 = String             #264          // )
  #266 = NameAndType        #243:#244     // toString:()Ljava/lang/String;
  #267 = Methodref          #246.#266     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #268 = Utf8               b
  #269 = Utf8               Ljava/lang/StringBuilder;
  #270 = Utf8               canEqual
  #271 = Utf8               (Ljava/lang/Object;)Z
  #272 = Utf8               obj
  #273 = Utf8               Ljava/lang/Object;
  #274 = Utf8               equals
  #275 = NameAndType        #270:#271     // canEqual:(Ljava/lang/Object;)Z
  #276 = Methodref          #2.#275       // coursier/params/rule/DontBumpRootDependencies.canEqual:(Ljava/lang/Object;)Z
  #277 = Utf8               java/lang/Object
  #278 = Class              #277          // java/lang/Object
  #279 = Utf8               coursier/util/ModuleMatchers
  #280 = Class              #279          // coursier/util/ModuleMatchers
  #281 = NameAndType        #274:#271     // equals:(Ljava/lang/Object;)Z
  #282 = Methodref          #278.#281     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #283 = Utf8               other
  #284 = Utf8               hashCode
  #285 = Utf8               ()I
  #286 = Utf8               DontBumpRootDependencies
  #287 = String             #286          // DontBumpRootDependencies
  #288 = Utf8               scala/runtime/Statics
  #289 = Class              #288          // scala/runtime/Statics
  #290 = Utf8               anyHash
  #291 = Utf8               (Ljava/lang/Object;)I
  #292 = NameAndType        #290:#291     // anyHash:(Ljava/lang/Object;)I
  #293 = Methodref          #289.#292     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #294 = Utf8               code
  #295 = Utf8               I
  #296 = Utf8               tuple
  #297 = Utf8               ()Lscala/Tuple1;
  #298 = Utf8               ()Lscala/Tuple1<Lcoursier/util/ModuleMatchers;>;
  #299 = Utf8               scala/Tuple1
  #300 = Class              #299          // scala/Tuple1
  #301 = Methodref          #300.#142     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #302 = Utf8               productPrefix
  #303 = Utf8               productArity
  #304 = Utf8               productElement
  #305 = Utf8               (I)Ljava/lang/Object;
  #306 = Utf8               n
  #307 = Utf8               java/lang/IndexOutOfBoundsException
  #308 = Class              #307          // java/lang/IndexOutOfBoundsException
  #309 = Utf8               scala/runtime/BoxesRunTime
  #310 = Class              #309          // scala/runtime/BoxesRunTime
  #311 = Utf8               boxToInteger
  #312 = Utf8               (I)Ljava/lang/Integer;
  #313 = NameAndType        #311:#312     // boxToInteger:(I)Ljava/lang/Integer;
  #314 = Methodref          #310.#313     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #315 = Methodref          #278.#266     // java/lang/Object.toString:()Ljava/lang/String;
  #316 = Methodref          #308.#250     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #317 = Utf8               productElementName
  #318 = Utf8               (I)Ljava/lang/String;
  #319 = String             #30           // matchers
  #320 = Utf8               (Lcoursier/core/Resolution;Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/util/Either;
  #321 = NameAndType        #149:#150     // tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either;
  #322 = Methodref          #2.#321       // coursier/params/rule/DontBumpRootDependencies.tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either;
  #323 = Utf8               Lcoursier/error/conflict/UnsatisfiedRule;
  #324 = Utf8               $anonfun$check$2
  #325 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/String;
  #326 = Utf8               rootDep$1
  #327 = Utf8               coursier/core/Dependency
  #328 = Class              #327          // coursier/core/Dependency
  #329 = Utf8               version
  #330 = NameAndType        #329:#244     // version:()Ljava/lang/String;
  #331 = Methodref          #328.#330     // coursier/core/Dependency.version:()Ljava/lang/String;
  #332 = Utf8               Lcoursier/core/Dependency;
  #333 = Utf8               res$1
  #334 = Utf8               rootDep
  #335 = Utf8               coursier/core/Version$
  #336 = Class              #335          // coursier/core/Version$
  #337 = Utf8               Lcoursier/core/Version$;
  #338 = NameAndType        #36:#337      // MODULE$:Lcoursier/core/Version$;
  #339 = Fieldref           #336.#338     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #340 = Utf8               reconciledVersions
  #341 = NameAndType        #340:#180     // reconciledVersions:()Lscala/collection/immutable/Map;
  #342 = Methodref          #55.#341      // coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
  #343 = Utf8               module
  #344 = Utf8               ()Lcoursier/core/Module;
  #345 = NameAndType        #343:#344     // module:()Lcoursier/core/Module;
  #346 = Methodref          #328.#345     // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #347 = Utf8               ()Ljava/lang/Object;
  #348 = MethodType         #347          //  ()Ljava/lang/Object;
  #349 = NameAndType        #324:#325     // $anonfun$check$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #350 = Methodref          #2.#349       // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #351 = MethodHandle       6:#350        // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
  #352 = MethodType         #244          //  ()Ljava/lang/String;
  #353 = Utf8               (Lcoursier/core/Dependency;)Lscala/Function0;
  #354 = NameAndType        #32:#353      // apply:(Lcoursier/core/Dependency;)Lscala/Function0;
  #355 = InvokeDynamic      #6:#354       // #6:apply:(Lcoursier/core/Dependency;)Lscala/Function0;
  #356 = Utf8               getOrElse
  #357 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #358 = NameAndType        #356:#357     // getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #359 = InterfaceMethodref #192.#358     // scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #360 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #361 = NameAndType        #32:#360      // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #362 = Methodref          #336.#361     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #363 = Utf8               Lscala/Predef$ArrowAssoc$;
  #364 = NameAndType        #36:#363      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #365 = Fieldref           #26.#364      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #366 = Utf8               scala/Predef$
  #367 = Class              #366          // scala/Predef$
  #368 = Utf8               Lscala/Predef$;
  #369 = NameAndType        #36:#368      // MODULE$:Lscala/Predef$;
  #370 = Fieldref           #367.#369     // scala/Predef$.MODULE$:Lscala/Predef$;
  #371 = Utf8               ArrowAssoc
  #372 = NameAndType        #371:#66      // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #373 = Methodref          #367.#372     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #374 = Utf8               $minus$greater$extension
  #375 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #376 = NameAndType        #374:#375     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #377 = Methodref          #26.#376      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #378 = Utf8               selected
  #379 = Utf8               Lcoursier/core/Version;
  #380 = Utf8               $anonfun$check$3
  #381 = Utf8               (Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Z
  #382 = Utf8               $this
  #383 = Utf8               x0$1
  #384 = Utf8               scala/Tuple2
  #385 = Class              #384          // scala/Tuple2
  #386 = Utf8               _1
  #387 = NameAndType        #386:#347     // _1:()Ljava/lang/Object;
  #388 = Methodref          #385.#387     // scala/Tuple2._1:()Ljava/lang/Object;
  #389 = Utf8               matches
  #390 = Utf8               (Lcoursier/core/Module;)Z
  #391 = NameAndType        #389:#390     // matches:(Lcoursier/core/Module;)Z
  #392 = Methodref          #280.#391     // coursier/util/ModuleMatchers.matches:(Lcoursier/core/Module;)Z
  #393 = Utf8               scala/MatchError
  #394 = Class              #393          // scala/MatchError
  #395 = Methodref          #394.#142     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #396 = Utf8               dep
  #397 = Utf8               Lscala/Tuple2;
  #398 = Utf8               $anonfun$check$4
  #399 = Utf8               (Lscala/Tuple2;)Z
  #400 = Utf8               x0$2
  #401 = Utf8               _2
  #402 = NameAndType        #401:#347     // _2:()Ljava/lang/Object;
  #403 = Methodref          #385.#402     // scala/Tuple2._2:()Ljava/lang/Object;
  #404 = Utf8               coursier/core/Version
  #405 = Class              #404          // coursier/core/Version
  #406 = Utf8               coursier/core/Parse$
  #407 = Class              #406          // coursier/core/Parse$
  #408 = Utf8               Lcoursier/core/Parse$;
  #409 = NameAndType        #36:#408      // MODULE$:Lcoursier/core/Parse$;
  #410 = Fieldref           #407.#409     // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
  #411 = Utf8               versionConstraint
  #412 = Utf8               (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #413 = NameAndType        #411:#412     // versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #414 = Methodref          #407.#413     // coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #415 = Utf8               coursier/core/VersionConstraint
  #416 = Class              #415          // coursier/core/VersionConstraint
  #417 = Utf8               preferred
  #418 = NameAndType        #417:#57      // preferred:()Lscala/collection/immutable/Seq;
  #419 = Methodref          #416.#418     // coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
  #420 = Utf8               nonEmpty
  #421 = NameAndType        #420:#127     // nonEmpty:()Z
  #422 = InterfaceMethodref #61.#421      // scala/collection/immutable/Seq.nonEmpty:()Z
  #423 = Utf8               contains
  #424 = NameAndType        #423:#271     // contains:(Ljava/lang/Object;)Z
  #425 = InterfaceMethodref #61.#424      // scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
  #426 = Utf8               interval
  #427 = Utf8               ()Lcoursier/core/VersionInterval;
  #428 = NameAndType        #426:#427     // interval:()Lcoursier/core/VersionInterval;
  #429 = Methodref          #416.#428     // coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
  #430 = Utf8               coursier/core/VersionInterval
  #431 = Class              #430          // coursier/core/VersionInterval
  #432 = Utf8               (Lcoursier/core/Version;)Z
  #433 = NameAndType        #423:#432     // contains:(Lcoursier/core/Version;)Z
  #434 = Methodref          #431.#433     // coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
  #435 = Utf8               wanted
  #436 = Utf8               Lcoursier/core/VersionConstraint;
  #437 = Utf8               selectedVer
  #438 = Utf8               x0$3
  #439 = Utf8               repr
  #440 = NameAndType        #439:#244     // repr:()Ljava/lang/String;
  #441 = Methodref          #405.#440     // coursier/core/Version.repr:()Ljava/lang/String;
  #442 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #443 = NameAndType        #137:#442     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #444 = Methodref          #385.#443     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #445 = Utf8               $anonfun$tryResolve$3
  #446 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #447 = Utf8               ver$1
  #448 = Utf8               x$1
  #449 = Utf8               Ljava/lang/String;
  #450 = Utf8               $anonfun$tryResolve$2
  #451 = Utf8               (Lscala/collection/immutable/Map;Lscala/Tuple2;)Z
  #452 = Utf8               modules$1
  #453 = Utf8               coursier/core/Module
  #454 = Class              #453          // coursier/core/Module
  #455 = Utf8               get
  #456 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #457 = NameAndType        #455:#456     // get:(Ljava/lang/Object;)Lscala/Option;
  #458 = InterfaceMethodref #192.#457     // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #459 = Utf8               $anonfun$tryResolve$3$adapted
  #460 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #461 = NameAndType        #459:#460     // $anonfun$tryResolve$3$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #462 = Methodref          #2.#461       // coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$3$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #463 = MethodHandle       6:#462        // REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$3$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  #464 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #465 = MethodType         #464          //  (Ljava/lang/String;)Ljava/lang/Object;
  #466 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #467 = NameAndType        #32:#466      // apply:(Ljava/lang/String;)Lscala/Function1;
  #468 = InvokeDynamic      #7:#467       // #7:apply:(Ljava/lang/String;)Lscala/Function1;
  #469 = Utf8               exists
  #470 = Utf8               (Lscala/Function1;)Z
  #471 = NameAndType        #469:#470     // exists:(Lscala/Function1;)Z
  #472 = Methodref          #145.#471     // scala/Option.exists:(Lscala/Function1;)Z
  #473 = Utf8               mod
  #474 = Utf8               Lcoursier/core/Module;
  #475 = Utf8               ver
  #476 = Utf8               ()V
  #477 = NameAndType        #137:#476     // "<init>":()V
  #478 = Methodref          #4.#477       // coursier/params/rule/Rule."<init>":()V
  #479 = NameAndType        #380:#381     // $anonfun$check$3:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Z
  #480 = Methodref          #2.#479       // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$3:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Z
  #481 = Utf8               boxToBoolean
  #482 = Utf8               (Z)Ljava/lang/Boolean;
  #483 = NameAndType        #481:#482     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #484 = Methodref          #310.#483     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #485 = NameAndType        #398:#399     // $anonfun$check$4:(Lscala/Tuple2;)Z
  #486 = Methodref          #2.#485       // coursier/params/rule/DontBumpRootDependencies.$anonfun$check$4:(Lscala/Tuple2;)Z
  #487 = NameAndType        #450:#451     // $anonfun$tryResolve$2:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Z
  #488 = Methodref          #2.#487       // coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$2:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Z
  #489 = NameAndType        #445:#446     // $anonfun$tryResolve$3:(Ljava/lang/String;Ljava/lang/String;)Z
  #490 = Methodref          #2.#489       // coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$3:(Ljava/lang/String;Ljava/lang/String;)Z
  #491 = Utf8               $deserializeLambda$
  #492 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #493 = Utf8               scala/runtime/LambdaDeserialize
  #494 = Class              #493          // scala/runtime/LambdaDeserialize
  #495 = Utf8               bootstrap
  #496 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #497 = NameAndType        #495:#496     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #498 = Methodref          #494.#497     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #499 = MethodHandle       6:#498        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #500 = Utf8               lambdaDeserialize
  #501 = NameAndType        #500:#492     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #502 = InvokeDynamic      #8:#501       // #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #503 = Utf8               Code
  #504 = Utf8               MethodParameters
  #505 = Utf8               LineNumberTable
  #506 = Utf8               LocalVariableTable
  #507 = Utf8               StackMapTable
  #508 = Utf8               Signature
  #509 = Utf8               InnerClasses
  #510 = Utf8               SourceFile
  #511 = Utf8               RuntimeVisibleAnnotations
  #512 = Utf8               BootstrapMethods
  #513 = Utf8               ScalaInlineInfo
  #514 = Utf8               ScalaSig
{
  private final coursier.util.ModuleMatchers matchers;
    descriptor: Lcoursier/util/ModuleMatchers;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static coursier.params.rule.DontBumpRootDependencies apply(coursier.util.ModuleMatchers);
    descriptor: (Lcoursier/util/ModuleMatchers;)Lcoursier/params/rule/DontBumpRootDependencies;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #39                 // Field coursier/params/rule/DontBumpRootDependencies$.MODULE$:Lcoursier/params/rule/DontBumpRootDependencies$;
         3: aload_0
         4: invokevirtual #41                 // Method coursier/params/rule/DontBumpRootDependencies$.apply:(Lcoursier/util/ModuleMatchers;)Lcoursier/params/rule/DontBumpRootDependencies;
         7: areturn
    MethodParameters:
      Name                           Flags
      matchers                       final

  public static coursier.params.rule.DontBumpRootDependencies apply();
    descriptor: ()Lcoursier/params/rule/DontBumpRootDependencies;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #39                 // Field coursier/params/rule/DontBumpRootDependencies$.MODULE$:Lcoursier/params/rule/DontBumpRootDependencies$;
         3: invokevirtual #44                 // Method coursier/params/rule/DontBumpRootDependencies$.apply:()Lcoursier/params/rule/DontBumpRootDependencies;
         6: areturn

  public coursier.util.ModuleMatchers matchers();
    descriptor: ()Lcoursier/util/ModuleMatchers;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #47                 // Field matchers:Lcoursier/util/ModuleMatchers;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/DontBumpRootDependencies;

  public scala.Option<coursier.params.rule.DontBumpRootDependencies$BumpedRootDependencies> check(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #59                 // Method coursier/core/Resolution.rootDependencies:()Lscala/collection/immutable/Seq;
         4: invokeinterface #65,  1           // InterfaceMethod scala/collection/immutable/Seq.iterator:()Lscala/collection/Iterator;
         9: aload_1
        10: invokedynamic #86,  0             // InvokeDynamic #0:apply:(Lcoursier/core/Resolution;)Lscala/Function1;
        15: invokeinterface #92,  2           // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        20: aload_0
        21: invokedynamic #102,  0            // InvokeDynamic #1:apply:(Lcoursier/params/rule/DontBumpRootDependencies;)Lscala/Function1;
        26: invokeinterface #105,  2          // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        31: invokedynamic #112,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        36: invokeinterface #105,  2          // InterfaceMethod scala/collection/Iterator.filter:(Lscala/Function1;)Lscala/collection/Iterator;
        41: invokedynamic #119,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        46: invokeinterface #92,  2           // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        51: invokeinterface #123,  1          // InterfaceMethod scala/collection/Iterator.toVector:()Lscala/collection/immutable/Vector;
        56: astore_2
        57: aload_2
        58: invokevirtual #129                // Method scala/collection/immutable/Vector.isEmpty:()Z
        61: ifeq          70
        64: getstatic     #134                // Field scala/None$.MODULE$:Lscala/None$;
        67: goto          86
        70: new           #136                // class scala/Some
        73: dup
        74: new           #15                 // class coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies
        77: dup
        78: aload_2
        79: aload_0
        80: invokespecial #140                // Method coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies."<init>":(Lscala/collection/immutable/Seq;Lcoursier/params/rule/DontBumpRootDependencies;)V
        83: invokespecial #143                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        86: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 70
          locals = [ class scala/collection/immutable/Vector ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 17: 0
        line 20: 9
        line 24: 20
        line 28: 31
        line 36: 41
        line 42: 57
        line 43: 64
        line 45: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           57      29     2 bumped   Lscala/collection/immutable/Vector;
            0      87     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      87     1   res   Lcoursier/core/Resolution;
    Signature: #52                          // (Lcoursier/core/Resolution;)Lscala/Option<Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;>;
    MethodParameters:
      Name                           Flags
      res                            final

  public scala.util.Either<coursier.error.ResolutionError$UnsatisfiableRule, coursier.core.Resolution> tryResolve(coursier.core.Resolution, coursier.params.rule.DontBumpRootDependencies$BumpedRootDependencies);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=7, args_size=3
         0: aload_2
         1: invokevirtual #155                // Method coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies.bumpedRootDependencies:()Lscala/collection/immutable/Seq;
         4: invokedynamic #160,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
         9: invokeinterface #163,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        14: checkcast     #165                // class scala/collection/IterableOnceOps
        17: getstatic     #170                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        20: invokevirtual #174                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        23: invokeinterface #178,  2          // InterfaceMethod scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        28: astore_3
        29: aload_1
        30: invokevirtual #182                // Method coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
        33: aload_3
        34: invokedynamic #190,  0            // InvokeDynamic #5:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
        39: invokeinterface #194,  2          // InterfaceMethod scala/collection/immutable/Map.filter:(Lscala/Function1;)Ljava/lang/Object;
        44: checkcast     #192                // class scala/collection/immutable/Map
        47: astore        4
        49: aload         4
        51: invokeinterface #195,  1          // InterfaceMethod scala/collection/immutable/Map.isEmpty:()Z
        56: ifeq          92
        59: aload_1
        60: aload_1
        61: invokevirtual #182                // Method coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
        64: aload_3
        65: invokeinterface #199,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
        70: checkcast     #192                // class scala/collection/immutable/Map
        73: invokevirtual #203                // Method coursier/core/Resolution.withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
        76: astore        5
        78: getstatic     #208                // Field scala/package$.MODULE$:Lscala/package$;
        81: invokevirtual #212                // Method scala/package$.Right:()Lscala/util/Right$;
        84: aload         5
        86: invokevirtual #217                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        89: goto          117
        92: new           #18                 // class coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions
        95: dup
        96: aload_1
        97: aload         4
        99: aload_2
       100: aload_0
       101: invokespecial #220                // Method coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions."<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Map;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;Lcoursier/params/rule/DontBumpRootDependencies;)V
       104: astore        6
       106: getstatic     #208                // Field scala/package$.MODULE$:Lscala/package$;
       109: invokevirtual #224                // Method scala/package$.Left:()Lscala/util/Left$;
       112: aload         6
       114: invokevirtual #229                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       117: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 92
          locals = [ class scala/collection/immutable/Map, class scala/collection/immutable/Map ]
        frame_type = 88 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 50: 0
        line 51: 29
        line 53: 33
        line 58: 49
        line 59: 59
        line 60: 78
        line 62: 92
        line 63: 106
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           78      11     5  res0   Lcoursier/core/Resolution;
          106      11     6     c   Lcoursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions;
           29      88     3 modules   Lscala/collection/immutable/Map;
           49      68     4 cantForce   Lscala/collection/immutable/Map;
            0     118     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0     118     1   res   Lcoursier/core/Resolution;
            0     118     2 conflict   Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;
    Signature: #151                         // (Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either<Lcoursier/error/ResolutionError$UnsatisfiableRule;Lcoursier/core/Resolution;>;
    MethodParameters:
      Name                           Flags
      res                            final
      conflict                       final

  public coursier.params.rule.DontBumpRootDependencies withMatchers(coursier.util.ModuleMatchers);
    descriptor: (Lcoursier/util/ModuleMatchers;)Lcoursier/params/rule/DontBumpRootDependencies;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/DontBumpRootDependencies
         3: dup
         4: aload_1
         5: invokespecial #242                // Method "<init>":(Lcoursier/util/ModuleMatchers;)V
         8: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0       9     1 matchers   Lcoursier/util/ModuleMatchers;
    MethodParameters:
      Name                           Flags
      matchers                       final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #246                // class java/lang/StringBuilder
         3: dup
         4: ldc           #248                // String DontBumpRootDependencies(
         6: invokespecial #251                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
        15: invokestatic  #259                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc_w         #265                // String )
        26: invokevirtual #263                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: pop
        30: aload_1
        31: invokevirtual #267                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        34: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      24     1     b   Ljava/lang/StringBuilder;
            0      35     0  this   Lcoursier/params/rule/DontBumpRootDependencies;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/params/rule/DontBumpRootDependencies
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #276                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/params/rule/DontBumpRootDependencies
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
        26: aload_2
        27: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #282                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/params/rule/DontBumpRootDependencies, class java/lang/Object, class coursier/params/rule/DontBumpRootDependencies, class coursier/util/ModuleMatchers ]
          stack = [ class coursier/util/ModuleMatchers ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/params/rule/DontBumpRootDependencies;
            0      64     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #287                // String DontBumpRootDependencies
         5: invokestatic  #293                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
        18: invokestatic  #293                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      17     1  code   I
            0      28     0  this   Lcoursier/params/rule/DontBumpRootDependencies;

  private scala.Tuple1<coursier.util.ModuleMatchers> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #300                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
         8: invokespecial #301                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
    Signature: #298                         // ()Lscala/Tuple1<Lcoursier/util/ModuleMatchers;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #287                // String DontBumpRootDependencies
         3: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/params/rule/DontBumpRootDependencies;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/params/rule/DontBumpRootDependencies;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
        24: goto          42
        27: new           #308                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #314                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #315                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #316                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class coursier/util/ModuleMatchers ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #319                // String matchers
        23: goto          41
        26: new           #308                // class java/lang/IndexOutOfBoundsException
        29: dup
        30: iload_2
        31: invokestatic  #314                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        34: invokevirtual #315                // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #316                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      42     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.util.Either tryResolve(coursier.core.Resolution, coursier.error.conflict.UnsatisfiedRule);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/util/Either;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: checkcast     #15                 // class coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies
         6: invokevirtual #322                // Method tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies;)Lscala/util/Either;
         9: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      10     1   res   Lcoursier/core/Resolution;
            0      10     2 conflict   Lcoursier/error/conflict/UnsatisfiedRule;
    MethodParameters:
      Name                           Flags
      res                            final
      conflict                       final

  public static final java.lang.String $anonfun$check$2(coursier.core.Dependency);
    descriptor: (Lcoursier/core/Dependency;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #331                // Method coursier/core/Dependency.version:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 rootDep$1   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      rootDep$1                      final

  public static final scala.Tuple2 $anonfun$check$1(coursier.core.Resolution, coursier.core.Dependency);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #339                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #342                // Method coursier/core/Resolution.reconciledVersions:()Lscala/collection/immutable/Map;
         7: aload_1
         8: invokevirtual #346                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        11: aload_1
        12: invokedynamic #355,  0            // InvokeDynamic #6:apply:(Lcoursier/core/Dependency;)Lscala/Function0;
        17: invokeinterface #359,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        22: checkcast     #255                // class java/lang/String
        25: invokevirtual #362                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
        28: astore_2
        29: getstatic     #365                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        32: getstatic     #370                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        35: aload_1
        36: invokevirtual #373                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        39: aload_2
        40: invokevirtual #377                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        43: areturn
      LineNumberTable:
        line 21: 0
        line 22: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      14     2 selected   Lcoursier/core/Version;
            0      44     0 res$1   Lcoursier/core/Resolution;
            0      44     1 rootDep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      res$1                          final
      rootDep                        final

  public static final boolean $anonfun$check$3(coursier.params.rule.DontBumpRootDependencies, scala.Tuple2);
    descriptor: (Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        31
         6: aload_3
         7: invokevirtual #388                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #328                // class coursier/core/Dependency
        13: astore        4
        15: aload_0
        16: invokevirtual #253                // Method matchers:()Lcoursier/util/ModuleMatchers;
        19: aload         4
        21: invokevirtual #346                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        24: invokevirtual #392                // Method coursier/util/ModuleMatchers.matches:(Lcoursier/core/Module;)Z
        27: istore_2
        28: goto          43
        31: goto          34
        34: new           #394                // class scala/MatchError
        37: dup
        38: aload_3
        39: invokespecial #395                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        42: athrow
        43: iload_2
        44: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/params/rule/DontBumpRootDependencies, class scala/Tuple2, int, class scala/Tuple2, class coursier/core/Dependency ]
          stack = []
      LineNumberTable:
        line 24: 0
        line 25: 2
        line 26: 15
        line 25: 31
        line 24: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      16     4   dep   Lcoursier/core/Dependency;
            0      45     0 $this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      45     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x0$1                           final

  public static final boolean $anonfun$check$4(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        93
         6: aload_2
         7: invokevirtual #388                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #328                // class coursier/core/Dependency
        13: astore_3
        14: aload_2
        15: invokevirtual #403                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #405                // class coursier/core/Version
        21: astore        4
        23: getstatic     #410                // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
        26: aload_3
        27: invokevirtual #331                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        30: invokevirtual #414                // Method coursier/core/Parse$.versionConstraint:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
        33: astore        5
        35: aload         5
        37: invokevirtual #419                // Method coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
        40: invokeinterface #422,  1          // InterfaceMethod scala/collection/immutable/Seq.nonEmpty:()Z
        45: ifeq          71
        48: aload         5
        50: invokevirtual #419                // Method coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
        53: aload         4
        55: invokeinterface #425,  2          // InterfaceMethod scala/collection/immutable/Seq.contains:(Ljava/lang/Object;)Z
        60: ifne          67
        63: iconst_1
        64: goto          68
        67: iconst_0
        68: goto          89
        71: aload         5
        73: invokevirtual #429                // Method coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
        76: aload         4
        78: invokevirtual #434                // Method coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
        81: ifne          88
        84: iconst_1
        85: goto          89
        88: iconst_0
        89: istore_1
        90: goto          105
        93: goto          96
        96: new           #394                // class scala/MatchError
        99: dup
       100: aload_2
       101: invokespecial #395                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       104: athrow
       105: iload_1
       106: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = [ class scala/Tuple2, top, class scala/Tuple2, class coursier/core/Dependency, class coursier/core/Version, class coursier/core/VersionConstraint ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, int, class scala/Tuple2, class coursier/core/Dependency, class coursier/core/Version, class coursier/core/VersionConstraint ]
          stack = []
      LineNumberTable:
        line 28: 0
        line 29: 2
        line 30: 23
        line 31: 35
        line 32: 48
        line 34: 71
        line 29: 93
        line 28: 96
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           35      54     5 wanted   Lcoursier/core/VersionConstraint;
           14      79     3   dep   Lcoursier/core/Dependency;
           23      70     4 selectedVer   Lcoursier/core/Version;
            0     107     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final scala.Tuple2 $anonfun$check$5(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        40
         6: aload_2
         7: invokevirtual #388                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #328                // class coursier/core/Dependency
        13: astore_3
        14: aload_2
        15: invokevirtual #403                // Method scala/Tuple2._2:()Ljava/lang/Object;
        18: checkcast     #405                // class coursier/core/Version
        21: astore        4
        23: new           #385                // class scala/Tuple2
        26: dup
        27: aload_3
        28: aload         4
        30: invokevirtual #441                // Method coursier/core/Version.repr:()Ljava/lang/String;
        33: invokespecial #444                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        36: astore_1
        37: goto          52
        40: goto          43
        43: new           #394                // class scala/MatchError
        46: dup
        47: aload_2
        48: invokespecial #395                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        51: athrow
        52: aload_1
        53: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 40
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class coursier/core/Dependency, class coursier/core/Version ]
          stack = []
      LineNumberTable:
        line 36: 0
        line 37: 2
        line 38: 23
        line 37: 40
        line 36: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      26     3   dep   Lcoursier/core/Dependency;
           23      17     4 selectedVer   Lcoursier/core/Version;
            0      54     0  x0$3   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$3                           final

  public static final scala.Tuple2 $anonfun$tryResolve$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        38
         6: aload_2
         7: invokevirtual #388                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #328                // class coursier/core/Dependency
        13: astore_3
        14: getstatic     #365                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        17: getstatic     #370                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_3
        21: invokevirtual #346                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
        24: invokevirtual #373                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        27: aload_3
        28: invokevirtual #331                // Method coursier/core/Dependency.version:()Ljava/lang/String;
        31: invokevirtual #377                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        34: astore_1
        35: goto          50
        38: goto          41
        41: new           #394                // class scala/MatchError
        44: dup
        45: aload_2
        46: invokespecial #395                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        49: athrow
        50: aload_1
        51: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class scala/Tuple2, class scala/Tuple2, class coursier/core/Dependency ]
          stack = []
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      24     3   dep   Lcoursier/core/Dependency;
            0      52     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final boolean $anonfun$tryResolve$3(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: astore_2
         3: dup
         4: ifnonnull     15
         7: pop
         8: aload_2
         9: ifnull        26
        12: goto          22
        15: aload_2
        16: invokevirtual #282                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        19: ifne          26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 ver$1   Ljava/lang/String;
            0      28     1   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      ver$1                          final
      x$1                            final

  public static final boolean $anonfun$tryResolve$2(scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lscala/collection/immutable/Map;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        46
         6: aload_3
         7: invokevirtual #388                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #454                // class coursier/core/Module
        13: astore        4
        15: aload_3
        16: invokevirtual #403                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #255                // class java/lang/String
        22: astore        5
        24: aload_0
        25: aload         4
        27: invokeinterface #458,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        32: aload         5
        34: invokedynamic #468,  0            // InvokeDynamic #7:apply:(Ljava/lang/String;)Lscala/Function1;
        39: invokevirtual #472                // Method scala/Option.exists:(Lscala/Function1;)Z
        42: istore_2
        43: goto          58
        46: goto          49
        49: new           #394                // class scala/MatchError
        52: dup
        53: aload_3
        54: invokespecial #395                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        57: athrow
        58: iload_2
        59: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/Map, class scala/Tuple2, int, class scala/Tuple2, class coursier/core/Module, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 53: 0
        line 54: 2
        line 55: 24
        line 54: 46
        line 53: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      31     4   mod   Lcoursier/core/Module;
           24      22     5   ver   Ljava/lang/String;
            0      60     0 modules$1   Lscala/collection/immutable/Map;
            0      60     1  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      modules$1                      final
      x0$2                           final

  public coursier.params.rule.DontBumpRootDependencies(coursier.util.ModuleMatchers);
    descriptor: (Lcoursier/util/ModuleMatchers;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #47                 // Field matchers:Lcoursier/util/ModuleMatchers;
         5: aload_0
         6: invokespecial #478                // Method coursier/params/rule/Rule."<init>":()V
         9: return
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/DontBumpRootDependencies;
            0      10     1 matchers   Lcoursier/util/ModuleMatchers;
    MethodParameters:
      Name                           Flags
      matchers                       final

  public static final java.lang.Object $anonfun$check$3$adapted(coursier.params.rule.DontBumpRootDependencies, scala.Tuple2);
    descriptor: (Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #480                // Method $anonfun$check$3:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Z
         5: invokestatic  #484                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/params/rule/DontBumpRootDependencies;
            0       9     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      x0$1                           final

  public static final java.lang.Object $anonfun$check$4$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #486                // Method $anonfun$check$4:(Lscala/Tuple2;)Z
         4: invokestatic  #484                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final java.lang.Object $anonfun$tryResolve$2$adapted(scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #488                // Method $anonfun$tryResolve$2:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Z
         5: invokestatic  #484                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 modules$1   Lscala/collection/immutable/Map;
            0       9     1  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      modules$1                      final
      x0$2                           final

  public static final java.lang.Object $anonfun$tryResolve$3$adapted(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #490                // Method $anonfun$tryResolve$3:(Ljava/lang/String;Ljava/lang/String;)Z
         5: invokestatic  #484                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 ver$1   Ljava/lang/String;
            0       9     1   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      ver$1                          final
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #502,  0            // InvokeDynamic #8:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static abstract #13= #10 of #12; // UnsatisfiableRule=class coursier/error/ResolutionError$UnsatisfiableRule of class coursier/error/ResolutionError
  public static final #16= #15 of #2;     // BumpedRootDependencies=class coursier/params/rule/DontBumpRootDependencies$BumpedRootDependencies of class coursier/params/rule/DontBumpRootDependencies
  public static final #19= #18 of #2;     // CantForceRootDependencyVersions=class coursier/params/rule/DontBumpRootDependencies$CantForceRootDependencyVersions of class coursier/params/rule/DontBumpRootDependencies
  public static final #24= #21 of #23;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #29= #26 of #28;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
SourceFile: "DontBumpRootDependencies.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u0005h\u0001\u0002\u0013&\u00051B\u0001b\u0011\u0001\u0003\u0006\u0004%\t\u0001\u0012\u0005\t\u0017\u0002\u0011\t\u0011)A\u0005\u000b\")A\n\u0001C\u0001\u001b\u0016!\u0001\u000b\u0001\u0001R\u0011\u001d\t\u0019\b\u0001C\u0001\u0003kBq!!!\u0001\t\u0003\t\u0019\tC\u0004\u0002\u0010\u0002!\t!!%\t\u000f\u0005U\u0005\u0001\"\u0011\u0002\u0018\"9\u0011Q\u0014\u0001\u0005B\u0005}\u0005bBAY\u0001\u0011\u0005\u00131\u0017\u0005\b\u0003o\u0003A\u0011IA]\u0011\u001d\t\t\r\u0001C\u0005\u0003\u0007Dq!a3\u0001\t\u0003\ni\rC\u0004\u0002P\u0002!\t%!5\t\u000f\u0005M\u0007\u0001\"\u0011\u0002V\"9\u00111\u001c\u0001\u0005B\u0005uw!B*&\u0011\u0003!f!\u0002\u0013&\u0011\u0003)\u0006\"\u0002\'\u0013\t\u0003\u0001\u0007\"B1\u0013\t\u0003\u0011g\u0001B2\u0013\u0005\u0011D\u0001\"\\\u000b\u0003\u0006\u0004%\tA\u001c\u0005\n\u0003\u000f)\"\u0011!Q\u0001\n=D\u0011BJ\u000b\u0003\u0006\u0004%\t%!\u0003\t\u0017\u0005-QC!A!\u0002\u0013q\u0015Q\u0002\u0005\u0007\u0019V!\t!a\u0004\u0007\r\u0005e!CAA\u000e\u00111\t\u0019d\u0007B\u0001B\u0003%\u0011QGA\u001e\u0011)\t\te\u0007B\u0001B\u0003%\u00111\t\u0005\fQn\u0011\t\u0011)A\u0005\u0003#\ty\u0005C\u0005\'7\t\u0015\r\u0011\"\u0011\u0002\n!Y\u00111B\u000e\u0003\u0002\u0003\u0006IATA)\u0011\u0019a5\u0004\"\u0001\u0002T!1\u0011M\u0005C\u0001\u0003?B\u0011\"a\u0019\u0013\u0003\u0003%I!!\u001a\u00031\u0011{g\u000e\u001e\"v[B\u0014vn\u001c;EKB,g\u000eZ3oG&,7O\u0003\u0002\'O\u0005!!/\u001e7f\u0015\tA\u0013&\u0001\u0004qCJ\fWn\u001d\u0006\u0002U\u0005A1m\\;sg&,\'o\u0001\u0001\u0014\t\u0001i\u0013g\u000e\t\u0003]=j\u0011!J\u0005\u0003a\u0015\u0012AAU;mKB\u0011!\'N\u0007\u0002g)\tA\'A\u0003tG\u0006d\u0017-\u0003\u00027g\t9\u0001K]8ek\u000e$\bC\u0001\u001dA\u001d\tIdH\u0004\u0002;{5\t1H\u0003\u0002=W\u00051AH]8pizJ\u0011\u0001N\u0005\u0003\u007fM\nq\u0001]1dW\u0006<W-\u0003\u0002B\u0005\na1+\u001a:jC2L\'0\u00192mK*\u0011qhM\u0001\t[\u0006$8\r[3sgV\tQ\t\u0005\u0002G\u00136\tqI\u0003\u0002IS\u0005!Q\u000f^5m\u0013\tQuI\u0001\bN_\u0012,H.Z\'bi\u000eDWM]:\u0002\u00135\fGo\u00195feN\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002O\u001fB\u0011a\u0006\u0001\u0005\u0006\u0007\u000e\u0001\r!\u0012\u0002\u0002\u0007B\u0011!+\u0006\b\u0003]E\t\u0001\u0004R8oi\n+X\u000e\u001d*p_R$U\r]3oI\u0016t7-[3t!\tq#cE\u0002\u0013-f\u0003\"AM,\n\u0005a\u001b$AB!osJ+g\r\u0005\u0002[?6\t1L\u0003\u0002];\u0006\u0011\u0011n\u001c\u0006\u0002=\u0006!!.\u0019<b\u0013\t\t5\fF\u0001U\u0003\u0015\t\u0007\u000f\u001d7z)\u0005q%A\u0006\"v[B,GMU8pi\u0012+\u0007/\u001a8eK:\u001c\u0017.Z:\u0014\u0005U)\u0007C\u00014l\u001b\u00059\'B\u00015j\u0003!\u0019wN\u001c4mS\u000e$(B\u00016*\u0003\u0015)\'O]8s\u0013\tawMA\bV]N\fG/[:gS\u0016$\'+\u001e7f\u0003Y\u0011W/\u001c9fIJ{w\u000e\u001e#fa\u0016tG-\u001a8dS\u0016\u001cX#A8\u0011\u0007a\u0002(/\u0003\u0002r\u0005\n\u00191+Z9\u0011\tI\u001aXo_\u0005\u0003iN\u0012a\u0001V;qY\u0016\u0014\u0004C\u0001<z\u001b\u00059(B\u0001=*\u0003\u0011\u0019wN]3\n\u0005i<(A\u0003#fa\u0016tG-\u001a8dsB\u0019A0!\u0001\u000f\u0005ut\bC\u0001\u001e4\u0013\ty8\'\u0001\u0004Qe\u0016$WMZ\u0005\u0005\u0003\u0007\t)A\u0001\u0004TiJLgn\u001a\u0006\u0003\u007fN\nqCY;na\u0016$\'k\\8u\t\u0016\u0004XM\u001c3f]\u000eLWm\u001d\u0011\u0016\u00039\u000bQA];mK\u0002J!AJ6\u0015\r\u0005E\u0011QCA\f!\r\t\u0019\"F\u0007\u0002%!)QN\u0007a\u0001_\")aE\u0007a\u0001\u001d\ny2)\u00198u\r>\u00148-\u001a*p_R$U\r]3oI\u0016t7-\u001f,feNLwN\\:\u0014\u0007m\ti\u0002\u0005\u0003\u0002 \u00055b\u0002BA\u0011\u0003SqA!a\t\u0002(9\u0019!(!\n\n\u0003)J!A[\u0015\n\u0007\u0005-\u0012.A\bSKN|G.\u001e;j_:,%O]8s\u0013\u0011\ty#!\r\u0003#Us7/\u0019;jg\u001aL\u0017M\u00197f%VdWMC\u0002\u0002,%\f!B]3t_2,H/[8o!\r1\u0018qG\u0005\u0004\u0003s9(A\u0003*fg>dW\u000f^5p]&!\u00111GA\u001f\u0013\r\ty$\u001b\u0002\u0010%\u0016\u001cx\u000e\\;uS>tWI\u001d:pe\u0006A1-\u00198u\u0005Vl\u0007\u000f\u0005\u0004}\u0003\u000b\nIe_\u0005\u0005\u0003\u000f\n)AA\u0002NCB\u00042A^A&\u0013\r\tie\u001e\u0002\u0007\u001b>$W\u000f\\3\n\u0007!\fi#C\u0002\'\u0003[!\"\"!\u0016\u0002X\u0005e\u00131LA/!\r\t\u0019b\u0007\u0005\b\u0003g\t\u0003\u0019AA\u001b\u0011\u001d\t\t%\ta\u0001\u0003\u0007Ba\u0001[\u0011A\u0002\u0005E\u0001\"\u0002\u0014\"\u0001\u0004qEc\u0001(\u0002b!)1I\ta\u0001\u000b\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011\u0011q\r\t\u0005\u0003S\ny\'\u0004\u0002\u0002l)\u0019\u0011QN/\u0002\t1\fgnZ\u0005\u0005\u0003c\nYG\u0001\u0004PE*,7\r^\u0001\u0006G\",7m\u001b\u000b\u0005\u0003o\ni\b\u0005\u00033\u0003s\n\u0016bAA>g\t1q\n\u001d;j_:Dq!a \u0006\u0001\u0004\t)$A\u0002sKN\f!\u0002\u001e:z%\u0016\u001cx\u000e\u001c<f)\u0019\t))a#\u0002\u000eB9\u0001(a\"\u0002\u001e\u0005U\u0012bAAE\u0005\n1Q)\u001b;iKJDq!a \u0007\u0001\u0004\t)\u0004C\u0003i\r\u0001\u0007\u0011+\u0001\u0007xSRDW*\u0019;dQ\u0016\u00148\u000fF\u0002O\u0003\'CQaQ\u0004A\u0002\u0015\u000b\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u00033\u0003B!!\u001b\u0002\u001c&!\u00111AA6\u0003!\u0019\u0017M\\#rk\u0006dG\u0003BAQ\u0003O\u00032AMAR\u0013\r\t)k\r\u0002\b\u0005>|G.Z1o\u0011\u001d\tI+\u0003a\u0001\u0003W\u000b1a\u001c2k!\r\u0011\u0014QV\u0005\u0004\u0003_\u001b$aA!os\u00061Q-];bYN$B!!)\u00026\"9\u0011\u0011\u0016\u0006A\u0002\u0005-\u0016\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005m\u0006c\u0001\u001a\u0002>&\u0019\u0011qX\u001a\u0003\u0007%sG/A\u0003ukBdW-\u0006\u0002\u0002FB!!\'a2F\u0013\r\tIm\r\u0002\u0007)V\u0004H.Z\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\tI*\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0006\u0002\u0002<\u0006q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BAV\u0003/Dq!!7\u0010\u0001\u0004\tY,A\u0001o\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\t\u0005e\u0015q\u001c\u0005\b\u00033\u0004\u0002\u0019AA^\u0001"
    )
BootstrapMethods:
  0: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #72 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$1:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
      #74 (Lcoursier/core/Dependency;)Lscala/Tuple2;
      #75 5
      #76 1
      #74 (Lcoursier/core/Dependency;)Lscala/Tuple2;
  1: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #97 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$3$adapted:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
      #99 (Lscala/Tuple2;)Ljava/lang/Object;
      #75 5
      #76 1
      #99 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #109 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #99 (Lscala/Tuple2;)Ljava/lang/Object;
      #75 5
      #76 1
      #99 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #117 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$5:(Lscala/Tuple2;)Lscala/Tuple2;
      #118 (Lscala/Tuple2;)Lscala/Tuple2;
      #75 5
      #76 1
      #118 (Lscala/Tuple2;)Lscala/Tuple2;
  4: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #159 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$1:(Lscala/Tuple2;)Lscala/Tuple2;
      #118 (Lscala/Tuple2;)Lscala/Tuple2;
      #75 5
      #76 1
      #118 (Lscala/Tuple2;)Lscala/Tuple2;
  5: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #187 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$2$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
      #99 (Lscala/Tuple2;)Ljava/lang/Object;
      #75 5
      #76 1
      #99 (Lscala/Tuple2;)Ljava/lang/Object;
  6: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #348 ()Ljava/lang/Object;
      #351 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #352 ()Ljava/lang/String;
      #75 5
      #76 1
      #352 ()Ljava/lang/String;
  7: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 (Ljava/lang/Object;)Ljava/lang/Object;
      #463 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$3$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      #465 (Ljava/lang/String;)Ljava/lang/Object;
      #75 5
      #76 1
      #465 (Ljava/lang/String;)Ljava/lang/Object;
  8: #499 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #72 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$1:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lscala/Tuple2;
      #351 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$2:(Lcoursier/core/Dependency;)Ljava/lang/String;
      #97 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$3$adapted:(Lcoursier/params/rule/DontBumpRootDependencies;Lscala/Tuple2;)Ljava/lang/Object;
      #109 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$4$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #117 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$check$5:(Lscala/Tuple2;)Lscala/Tuple2;
      #159 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$1:(Lscala/Tuple2;)Lscala/Tuple2;
      #187 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$2$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
      #463 REF_invokeStatic coursier/params/rule/DontBumpRootDependencies.$anonfun$tryResolve$3$adapted:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 01 00 1B 00 44 00 45 01 01 44 01 45 01 01 7C
   01 7D 01 00 5D 00 5E 01 01 8E 01 8F 01 00 6A 00
   62 01 00 71 00 72 01 00 9C 00 72 01 01 C2 01 C3
   01 00 B7 00 B8 01 01 BD 01 BE 01 01 CB 01 CC 01
   00 89 00 F0 01 01 0E 01 0F 01 00 32 00 33 01 01
   12 01 0F 01 01 1C 01 1D 01 00 1E 00 2D 01 01 2F
   01 1D 01 01 30 01 31 01 01 3D 01 3E 01 01 2E 00
   F4 01 00 F3 00 F4 01 00 95 01 40 01 00 95 00 96
   01 01 28 01 29 01 00 EF 00 21 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
