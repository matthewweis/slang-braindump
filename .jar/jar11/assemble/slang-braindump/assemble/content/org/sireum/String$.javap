Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/String$.class
  Last modified May 29, 2022; size 7152 bytes
  SHA-256 checksum 419c1fa1d12bc114b450ae52872db2566b6906b13003b16e2c5369fc771c7f99
  Compiled from "String.scala"
public final class org.sireum.String$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/String$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 22, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/String$
    #2 = Class              #1            // org/sireum/String$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               String.scala
    #6 = Utf8               org/sireum/String$Boxer$
    #7 = Class              #6            // org/sireum/String$Boxer$
    #8 = Utf8               org/sireum/String
    #9 = Class              #8            // org/sireum/String
   #10 = Utf8               Boxer$
   #11 = Utf8               org/sireum/Z$MP$
   #12 = Class              #11           // org/sireum/Z$MP$
   #13 = Utf8               org/sireum/Z
   #14 = Class              #13           // org/sireum/Z
   #15 = Utf8               MP$
   #16 = Utf8               org/sireum/Z$MP$BigInt
   #17 = Class              #16           // org/sireum/Z$MP$BigInt
   #18 = Utf8               BigInt
   #19 = Utf8               org/sireum/Z$MP$Long
   #20 = Class              #19           // org/sireum/Z$MP$Long
   #21 = Utf8               Long
   #22 = Utf8               org/sireum/contract$Contract$
   #23 = Class              #22           // org/sireum/contract$Contract$
   #24 = Utf8               org/sireum/contract
   #25 = Class              #24           // org/sireum/contract
   #26 = Utf8               Contract$
   #27 = Utf8               org/sireum/contract$Contract$Justification
   #28 = Class              #27           // org/sireum/contract$Contract$Justification
   #29 = Utf8               Justification
   #30 = Utf8               MODULE$
   #31 = Utf8               Lorg/sireum/String$;
   #32 = Utf8               <clinit>
   #33 = Utf8               ()V
   #34 = Utf8               <init>
   #35 = NameAndType        #34:#33       // "<init>":()V
   #36 = Methodref          #2.#35        // org/sireum/String$."<init>":()V
   #37 = NameAndType        #30:#31       // MODULE$:Lorg/sireum/String$;
   #38 = Fieldref           #2.#37        // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #39 = Utf8               escape
   #40 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #41 = Utf8               o
   #42 = Utf8               value
   #43 = Utf8               ()Ljava/lang/String;
   #44 = NameAndType        #42:#43       // value:()Ljava/lang/String;
   #45 = Methodref          #9.#44        // org/sireum/String.value:()Ljava/lang/String;
   #46 = Utf8               org/sireum/helper$
   #47 = Class              #46           // org/sireum/helper$
   #48 = Utf8               Lorg/sireum/helper$;
   #49 = NameAndType        #30:#48       // MODULE$:Lorg/sireum/helper$;
   #50 = Fieldref           #47.#49       // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #51 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #52 = NameAndType        #39:#51       // escape:(Ljava/lang/String;)Ljava/lang/String;
   #53 = Methodref          #47.#52       // org/sireum/helper$.escape:(Ljava/lang/String;)Ljava/lang/String;
   #54 = Utf8               org/sireum/C
   #55 = Class              #54           // org/sireum/C
   #56 = Utf8               ()I
   #57 = NameAndType        #42:#56       // value:()I
   #58 = Methodref          #55.#57       // org/sireum/C.value:()I
   #59 = Utf8               org/sireum/C$
   #60 = Class              #59           // org/sireum/C$
   #61 = Utf8               Lorg/sireum/C$;
   #62 = NameAndType        #30:#61       // MODULE$:Lorg/sireum/C$;
   #63 = Fieldref           #60.#62       // org/sireum/C$.MODULE$:Lorg/sireum/C$;
   #64 = Utf8               toString$extension
   #65 = Utf8               (I)Ljava/lang/String;
   #66 = NameAndType        #64:#65       // toString$extension:(I)Ljava/lang/String;
   #67 = Methodref          #60.#66       // org/sireum/C$.toString$extension:(I)Ljava/lang/String;
   #68 = Utf8               java/lang/StringBuilder
   #69 = Class              #68           // java/lang/StringBuilder
   #70 = Integer            2
   #71 = Utf8               (I)V
   #72 = NameAndType        #34:#71       // "<init>":(I)V
   #73 = Methodref          #69.#72       // java/lang/StringBuilder."<init>":(I)V
   #74 = Utf8               \'
   #75 = String             #74           // \'
   #76 = Utf8               append
   #77 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #78 = NameAndType        #76:#77       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #79 = Methodref          #69.#78       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #80 = Utf8               java/lang/String
   #81 = Class              #80           // java/lang/String
   #82 = Utf8               length
   #83 = NameAndType        #82:#56       // length:()I
   #84 = Methodref          #81.#83       // java/lang/String.length:()I
   #85 = Utf8               substring
   #86 = Utf8               (II)Ljava/lang/String;
   #87 = NameAndType        #85:#86       // substring:(II)Ljava/lang/String;
   #88 = Methodref          #81.#87       // java/lang/String.substring:(II)Ljava/lang/String;
   #89 = Utf8               toString
   #90 = NameAndType        #89:#43       // toString:()Ljava/lang/String;
   #91 = Methodref          #69.#90       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #92 = Utf8               org/sireum/F32
   #93 = Class              #92           // org/sireum/F32
   #94 = Utf8               ()F
   #95 = NameAndType        #42:#94       // value:()F
   #96 = Methodref          #93.#95       // org/sireum/F32.value:()F
   #97 = Integer            1
   #98 = Utf8               org/sireum/F32$
   #99 = Class              #98           // org/sireum/F32$
  #100 = Utf8               Lorg/sireum/F32$;
  #101 = NameAndType        #30:#100      // MODULE$:Lorg/sireum/F32$;
  #102 = Fieldref           #99.#101      // org/sireum/F32$.MODULE$:Lorg/sireum/F32$;
  #103 = Utf8               (F)Ljava/lang/String;
  #104 = NameAndType        #64:#103      // toString$extension:(F)Ljava/lang/String;
  #105 = Methodref          #99.#104      // org/sireum/F32$.toString$extension:(F)Ljava/lang/String;
  #106 = Utf8               f
  #107 = String             #106          // f
  #108 = Utf8               org/sireum/R
  #109 = Class              #108          // org/sireum/R
  #110 = Utf8               ()Lscala/math/BigDecimal;
  #111 = NameAndType        #42:#110      // value:()Lscala/math/BigDecimal;
  #112 = Methodref          #109.#111     // org/sireum/R.value:()Lscala/math/BigDecimal;
  #113 = Integer            13
  #114 = Utf8               r\"
  #115 = String             #114          // r\"
  #116 = Utf8               (Lscala/math/BigDecimal;)V
  #117 = NameAndType        #34:#116      // "<init>":(Lscala/math/BigDecimal;)V
  #118 = Methodref          #109.#117     // org/sireum/R."<init>":(Lscala/math/BigDecimal;)V
  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #120 = NameAndType        #76:#119      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #121 = Methodref          #69.#120      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #122 = Utf8               (C)Ljava/lang/StringBuilder;
  #123 = NameAndType        #76:#122      // append:(C)Ljava/lang/StringBuilder;
  #124 = Methodref          #69.#123      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #125 = Utf8               ()J
  #126 = NameAndType        #42:#125      // value:()J
  #127 = Methodref          #20.#126      // org/sireum/Z$MP$Long.value:()J
  #128 = Utf8               z2s$1
  #129 = Utf8               (J)Ljava/lang/String;
  #130 = NameAndType        #128:#129     // z2s$1:(J)Ljava/lang/String;
  #131 = Methodref          #2.#130       // org/sireum/String$.z2s$1:(J)Ljava/lang/String;
  #132 = Utf8               pack
  #133 = Utf8               ()Lorg/sireum/Z;
  #134 = NameAndType        #132:#133     // pack:()Lorg/sireum/Z;
  #135 = Methodref          #17.#134      // org/sireum/Z$MP$BigInt.pack:()Lorg/sireum/Z;
  #136 = Utf8               z\"
  #137 = String             #136          // z\"
  #138 = Integer            22
  #139 = Utf8               Name
  #140 = NameAndType        #139:#43      // Name:()Ljava/lang/String;
  #141 = InterfaceMethodref #14.#140      // org/sireum/Z.Name:()Ljava/lang/String;
  #142 = Utf8               toLowerCase
  #143 = NameAndType        #142:#43      // toLowerCase:()Ljava/lang/String;
  #144 = Methodref          #81.#143      // java/lang/String.toLowerCase:()Ljava/lang/String;
  #145 = Methodref          #4.#90        // java/lang/Object.toString:()Ljava/lang/String;
  #146 = Utf8               s
  #147 = Utf8               Ljava/lang/String;
  #148 = Utf8               this
  #149 = Utf8               Ljava/lang/Object;
  #150 = Utf8               scala/math/BigDecimal
  #151 = Class              #150          // scala/math/BigDecimal
  #152 = Utf8               random
  #153 = Utf8               scala/util/Random$
  #154 = Class              #153          // scala/util/Random$
  #155 = Utf8               Lscala/util/Random$;
  #156 = NameAndType        #30:#155      // MODULE$:Lscala/util/Random$;
  #157 = Fieldref           #154.#156     // scala/util/Random$.MODULE$:Lscala/util/Random$;
  #158 = Utf8               alphanumeric
  #159 = Utf8               ()Lscala/collection/immutable/LazyList;
  #160 = NameAndType        #158:#159     // alphanumeric:()Lscala/collection/immutable/LazyList;
  #161 = Methodref          #154.#160     // scala/util/Random$.alphanumeric:()Lscala/collection/immutable/LazyList;
  #162 = Utf8               org/sireum/Z$
  #163 = Class              #162          // org/sireum/Z$
  #164 = Utf8               Lorg/sireum/Z$;
  #165 = NameAndType        #30:#164      // MODULE$:Lorg/sireum/Z$;
  #166 = Fieldref           #163.#165     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #167 = NameAndType        #152:#133     // random:()Lorg/sireum/Z;
  #168 = Methodref          #163.#167     // org/sireum/Z$.random:()Lorg/sireum/Z;
  #169 = Utf8               toBigInt
  #170 = Utf8               ()Lscala/math/BigInt;
  #171 = NameAndType        #169:#170     // toBigInt:()Lscala/math/BigInt;
  #172 = InterfaceMethodref #14.#171      // org/sireum/Z.toBigInt:()Lscala/math/BigInt;
  #173 = Utf8               scala/math/BigInt$
  #174 = Class              #173          // scala/math/BigInt$
  #175 = Utf8               Lscala/math/BigInt$;
  #176 = NameAndType        #30:#175      // MODULE$:Lscala/math/BigInt$;
  #177 = Fieldref           #174.#176     // scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
  #178 = Utf8               int2bigInt
  #179 = Utf8               (I)Lscala/math/BigInt;
  #180 = NameAndType        #178:#179     // int2bigInt:(I)Lscala/math/BigInt;
  #181 = Methodref          #174.#180     // scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
  #182 = Utf8               scala/math/BigInt
  #183 = Class              #182          // scala/math/BigInt
  #184 = Utf8               $percent
  #185 = Utf8               (Lscala/math/BigInt;)Lscala/math/BigInt;
  #186 = NameAndType        #184:#185     // $percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #187 = Methodref          #183.#186     // scala/math/BigInt.$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
  #188 = Utf8               toInt
  #189 = NameAndType        #188:#56      // toInt:()I
  #190 = Methodref          #183.#189     // scala/math/BigInt.toInt:()I
  #191 = Utf8               scala/collection/immutable/LazyList
  #192 = Class              #191          // scala/collection/immutable/LazyList
  #193 = Utf8               take
  #194 = Utf8               (I)Lscala/collection/immutable/LazyList;
  #195 = NameAndType        #193:#194     // take:(I)Lscala/collection/immutable/LazyList;
  #196 = Methodref          #192.#195     // scala/collection/immutable/LazyList.take:(I)Lscala/collection/immutable/LazyList;
  #197 = Utf8               mkString
  #198 = NameAndType        #197:#43      // mkString:()Ljava/lang/String;
  #199 = Methodref          #192.#198     // scala/collection/immutable/LazyList.mkString:()Ljava/lang/String;
  #200 = Utf8               apply
  #201 = NameAndType        #200:#51      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #202 = Methodref          #2.#201       // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #203 = Utf8               unapply
  #204 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #205 = Utf8               (Ljava/lang/String;)Lscala/Option<Ljava/lang/String;>;
  #206 = Utf8               scala/Some
  #207 = Class              #206          // scala/Some
  #208 = Utf8               (Ljava/lang/Object;)V
  #209 = NameAndType        #34:#208      // "<init>":(Ljava/lang/Object;)V
  #210 = Methodref          #207.#209     // scala/Some."<init>":(Ljava/lang/Object;)V
  #211 = Utf8               apply$extension
  #212 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lorg/sireum/contract$Contract$Justification;
  #213 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq<Ljava/lang/Object;>;)Lorg/sireum/contract$Contract$Justification;
  #214 = Utf8               $this
  #215 = Utf8               args
  #216 = Utf8               org/sireum/package$
  #217 = Class              #216          // org/sireum/package$
  #218 = Utf8               Lorg/sireum/package$;
  #219 = NameAndType        #30:#218      // MODULE$:Lorg/sireum/package$;
  #220 = Fieldref           #217.#219     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #221 = Utf8
  #222 = String             #221          //
  #223 = Utf8               halt
  #224 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #225 = NameAndType        #223:#224     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #226 = Methodref          #217.#225     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #227 = Utf8               Lscala/collection/immutable/Seq;
  #228 = Utf8               native$extension
  #229 = Utf8               string$extension
  #230 = Utf8               stripPrefix$extension
  #231 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #232 = Utf8               prefix
  #233 = Utf8               scala/collection/StringOps$
  #234 = Class              #233          // scala/collection/StringOps$
  #235 = Utf8               Lscala/collection/StringOps$;
  #236 = NameAndType        #30:#235      // MODULE$:Lscala/collection/StringOps$;
  #237 = Fieldref           #234.#236     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #238 = Utf8               scala/Predef$
  #239 = Class              #238          // scala/Predef$
  #240 = Utf8               Lscala/Predef$;
  #241 = NameAndType        #30:#240      // MODULE$:Lscala/Predef$;
  #242 = Fieldref           #239.#241     // scala/Predef$.MODULE$:Lscala/Predef$;
  #243 = Utf8               augmentString
  #244 = NameAndType        #243:#51      // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #245 = Methodref          #239.#244     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #246 = NameAndType        #230:#231     // stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #247 = Methodref          #234.#246     // scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #248 = Utf8               boxer$extension
  #249 = Utf8               (Ljava/lang/String;)Lorg/sireum/$internal/Boxer;
  #250 = Utf8               Lorg/sireum/String$Boxer$;
  #251 = NameAndType        #30:#250      // MODULE$:Lorg/sireum/String$Boxer$;
  #252 = Fieldref           #7.#251       // org/sireum/String$Boxer$.MODULE$:Lorg/sireum/String$Boxer$;
  #253 = Utf8               size$extension
  #254 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #255 = Utf8               codePointCount
  #256 = Utf8               (II)I
  #257 = NameAndType        #255:#256     // codePointCount:(II)I
  #258 = Methodref          #81.#257      // java/lang/String.codePointCount:(II)I
  #259 = Utf8               (I)Lorg/sireum/Z;
  #260 = NameAndType        #200:#259     // apply:(I)Lorg/sireum/Z;
  #261 = Methodref          #163.#260     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #262 = Utf8               $less$extension
  #263 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #264 = Utf8               other
  #265 = Utf8               org/sireum/B$
  #266 = Class              #265          // org/sireum/B$
  #267 = Utf8               Lorg/sireum/B$;
  #268 = NameAndType        #30:#267      // MODULE$:Lorg/sireum/B$;
  #269 = Fieldref           #266.#268     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #270 = NameAndType        #262:#263     // $less$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #271 = Methodref          #234.#270     // scala/collection/StringOps$.$less$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #272 = Utf8               (Z)Z
  #273 = NameAndType        #200:#272     // apply:(Z)Z
  #274 = Methodref          #266.#273     // org/sireum/B$.apply:(Z)Z
  #275 = Utf8               $less$eq$extension
  #276 = NameAndType        #275:#263     // $less$eq$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #277 = Methodref          #234.#276     // scala/collection/StringOps$.$less$eq$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #278 = Utf8               $greater$extension
  #279 = NameAndType        #278:#263     // $greater$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #280 = Methodref          #234.#279     // scala/collection/StringOps$.$greater$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #281 = Utf8               $greater$eq$extension
  #282 = NameAndType        #281:#263     // $greater$eq$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #283 = Methodref          #234.#282     // scala/collection/StringOps$.$greater$eq$extension:(Ljava/lang/String;Ljava/lang/String;)Z
  #284 = Utf8               $eq$eq$eq$extension
  #285 = Utf8               equals
  #286 = Utf8               (Ljava/lang/Object;)Z
  #287 = NameAndType        #285:#286     // equals:(Ljava/lang/Object;)Z
  #288 = Methodref          #4.#287       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #289 = Utf8               $eq$bang$eq$extension
  #290 = Utf8               hashCode$extension
  #291 = Utf8               (Ljava/lang/String;)I
  #292 = Utf8               hashCode
  #293 = NameAndType        #292:#56      // hashCode:()I
  #294 = Methodref          #81.#293      // java/lang/String.hashCode:()I
  #295 = Utf8               equals$extension
  #296 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Z
  #297 = Utf8               x$1
  #298 = Utf8               n
  #299 = Long               -2147483648l
  #301 = Long               2147483647l
  #303 = Utf8               java/lang/Long
  #304 = Class              #303          // java/lang/Long
  #305 = NameAndType        #89:#129      // toString:(J)Ljava/lang/String;
  #306 = Methodref          #304.#305     // java/lang/Long.toString:(J)Ljava/lang/String;
  #307 = Integer            11
  #308 = Utf8               J
  #309 = Methodref          #4.#35        // java/lang/Object."<init>":()V
  #310 = Utf8               Code
  #311 = Utf8               LineNumberTable
  #312 = Utf8               StackMapTable
  #313 = Utf8               LocalVariableTable
  #314 = Utf8               MethodParameters
  #315 = Utf8               Signature
  #316 = Utf8               InnerClasses
  #317 = Utf8               SourceFile
  #318 = Utf8               ScalaInlineInfo
  #319 = Utf8               Scala
{
  public static final org.sireum.String$ MODULE$;
    descriptor: Lorg/sireum/String$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/String$
         3: dup
         4: invokespecial #36                 // Method "<init>":()V
         7: putstatic     #38                 // Field MODULE$:Lorg/sireum/String$;
        10: return
      LineNumberTable:
        line 28: 0

  public java.lang.String escape(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=15, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #9                  // class org/sireum/String
         8: ifeq          42
        11: aload         4
        13: ifnonnull     20
        16: aconst_null
        17: goto          28
        20: aload         4
        22: checkcast     #9                  // class org/sireum/String
        25: invokevirtual #45                 // Method org/sireum/String.value:()Ljava/lang/String;
        28: astore        5
        30: getstatic     #50                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        33: aload         5
        35: invokevirtual #53                 // Method org/sireum/helper$.escape:(Ljava/lang/String;)Ljava/lang/String;
        38: astore_2
        39: goto          436
        42: goto          45
        45: aload         4
        47: instanceof    #55                 // class org/sireum/C
        50: ifeq          121
        53: aload         4
        55: checkcast     #55                 // class org/sireum/C
        58: invokevirtual #58                 // Method org/sireum/C.value:()I
        61: istore        6
        63: getstatic     #50                 // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        66: getstatic     #63                 // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        69: iload         6
        71: invokevirtual #67                 // Method org/sireum/C$.toString$extension:(I)Ljava/lang/String;
        74: invokevirtual #53                 // Method org/sireum/helper$.escape:(Ljava/lang/String;)Ljava/lang/String;
        77: astore        7
        79: new           #69                 // class java/lang/StringBuilder
        82: dup
        83: ldc           #70                 // int 2
        85: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
        88: ldc           #75                 // String \'
        90: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        93: aload         7
        95: iconst_1
        96: aload         7
        98: invokevirtual #84                 // Method java/lang/String.length:()I
       101: iconst_1
       102: isub
       103: invokevirtual #88                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       106: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       109: ldc           #75                 // String \'
       111: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       114: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       117: astore_2
       118: goto          436
       121: goto          124
       124: aload         4
       126: instanceof    #93                 // class org/sireum/F32
       129: ifeq          174
       132: aload         4
       134: checkcast     #93                 // class org/sireum/F32
       137: invokevirtual #96                 // Method org/sireum/F32.value:()F
       140: fstore        8
       142: new           #69                 // class java/lang/StringBuilder
       145: dup
       146: ldc           #97                 // int 1
       148: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       151: getstatic     #102                // Field org/sireum/F32$.MODULE$:Lorg/sireum/F32$;
       154: fload         8
       156: invokevirtual #105                // Method org/sireum/F32$.toString$extension:(F)Ljava/lang/String;
       159: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       162: ldc           #107                // String f
       164: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       167: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       170: astore_2
       171: goto          436
       174: goto          177
       177: aload         4
       179: instanceof    #109                // class org/sireum/R
       182: ifeq          242
       185: aload         4
       187: ifnonnull     194
       190: aconst_null
       191: goto          202
       194: aload         4
       196: checkcast     #109                // class org/sireum/R
       199: invokevirtual #112                // Method org/sireum/R.value:()Lscala/math/BigDecimal;
       202: astore        9
       204: new           #69                 // class java/lang/StringBuilder
       207: dup
       208: ldc           #113                // int 13
       210: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       213: ldc           #115                // String r\"
       215: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: new           #109                // class org/sireum/R
       221: dup
       222: aload         9
       224: invokespecial #118                // Method org/sireum/R."<init>":(Lscala/math/BigDecimal;)V
       227: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       230: bipush        34
       232: invokevirtual #124                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       235: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       238: astore_2
       239: goto          436
       242: goto          245
       245: aload         4
       247: instanceof    #20                 // class org/sireum/Z$MP$Long
       250: ifeq          272
       253: aload         4
       255: checkcast     #20                 // class org/sireum/Z$MP$Long
       258: astore        10
       260: aload         10
       262: invokevirtual #127                // Method org/sireum/Z$MP$Long.value:()J
       265: invokestatic  #131                // Method z2s$1:(J)Ljava/lang/String;
       268: astore_2
       269: goto          436
       272: goto          275
       275: aload         4
       277: instanceof    #17                 // class org/sireum/Z$MP$BigInt
       280: ifeq          363
       283: aload         4
       285: checkcast     #17                 // class org/sireum/Z$MP$BigInt
       288: astore        11
       290: aload         11
       292: invokevirtual #135                // Method org/sireum/Z$MP$BigInt.pack:()Lorg/sireum/Z;
       295: astore        12
       297: aload         12
       299: instanceof    #20                 // class org/sireum/Z$MP$Long
       302: ifeq          324
       305: aload         12
       307: checkcast     #20                 // class org/sireum/Z$MP$Long
       310: astore        13
       312: aload         13
       314: invokevirtual #127                // Method org/sireum/Z$MP$Long.value:()J
       317: invokestatic  #131                // Method z2s$1:(J)Ljava/lang/String;
       320: astore_3
       321: goto          358
       324: goto          327
       327: new           #69                 // class java/lang/StringBuilder
       330: dup
       331: ldc           #113                // int 13
       333: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       336: ldc           #137                // String z\"
       338: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       341: aload         11
       343: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       346: bipush        34
       348: invokevirtual #124                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       351: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       354: astore_3
       355: goto          358
       358: aload_3
       359: astore_2
       360: goto          436
       363: goto          366
       366: aload         4
       368: instanceof    #14                 // class org/sireum/Z
       371: ifeq          425
       374: aload         4
       376: checkcast     #14                 // class org/sireum/Z
       379: astore        14
       381: new           #69                 // class java/lang/StringBuilder
       384: dup
       385: ldc           #138                // int 22
       387: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       390: aload         14
       392: invokeinterface #141,  1          // InterfaceMethod org/sireum/Z.Name:()Ljava/lang/String;
       397: invokevirtual #144                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       400: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       403: bipush        34
       405: invokevirtual #124                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       408: aload         14
       410: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       413: bipush        34
       415: invokevirtual #124                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       418: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       421: astore_2
       422: goto          436
       425: goto          428
       428: aload_1
       429: invokevirtual #145                // Method java/lang/Object.toString:()Ljava/lang/String;
       432: astore_2
       433: goto          436
       436: aload_2
       437: areturn
      StackMapTable: number_of_entries = 22
        frame_type = 254 /* append */
          offset_delta = 20
          locals = [ top, top, class java/lang/Object ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 13 /* same */
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 75
        frame_type = 2 /* same */
        frame_type = 49 /* same */
        frame_type = 2 /* same */
        frame_type = 16 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class scala/math/BigDecimal ]
        frame_type = 39 /* same */
        frame_type = 2 /* same */
        frame_type = 26 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class org/sireum/String$, class java/lang/Object, top, top, class java/lang/Object, top, top, top, top, top, top, class org/sireum/Z$MP$BigInt, class org/sireum/Z ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/String$, class java/lang/Object, top, class java/lang/String, class java/lang/Object, top, top, top, top, top, top, class org/sireum/Z$MP$BigInt, class org/sireum/Z ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/String$, class java/lang/Object, top, top, class java/lang/Object ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 58 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/String$, class java/lang/Object, class java/lang/String, top, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 48: 0
        line 49: 3
        line 50: 45
        line 51: 124
        line 52: 177
        line 53: 245
        line 54: 275
        line 55: 297
        line 56: 327
        line 54: 358
        line 58: 366
        line 59: 428
        line 48: 436
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           79      38     7     s   Ljava/lang/String;
            0     438     0  this   Lorg/sireum/String$;
            0     438     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public java.lang.String random();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getstatic     #157                // Field scala/util/Random$.MODULE$:Lscala/util/Random$;
         4: invokevirtual #161                // Method scala/util/Random$.alphanumeric:()Lscala/collection/immutable/LazyList;
         7: getstatic     #166                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: invokevirtual #168                // Method org/sireum/Z$.random:()Lorg/sireum/Z;
        13: invokeinterface #172,  1          // InterfaceMethod org/sireum/Z.toBigInt:()Lscala/math/BigInt;
        18: getstatic     #177                // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
        21: sipush        1024
        24: invokevirtual #181                // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
        27: invokevirtual #187                // Method scala/math/BigInt.$percent:(Lscala/math/BigInt;)Lscala/math/BigInt;
        30: invokevirtual #190                // Method scala/math/BigInt.toInt:()I
        33: invokevirtual #196                // Method scala/collection/immutable/LazyList.take:(I)Lscala/collection/immutable/LazyList;
        36: invokevirtual #199                // Method scala/collection/immutable/LazyList.mkString:()Ljava/lang/String;
        39: invokevirtual #202                // Method apply:(Ljava/lang/String;)Ljava/lang/String;
        42: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/sireum/String$;

  public scala.Option<java.lang.String> unapply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #207                // class scala/Some
         3: dup
         4: aload_1
         5: invokespecial #210                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/String$;
            0       9     1     s   Ljava/lang/String;
    Signature: #205                         // (Ljava/lang/String;)Lscala/Option<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/String$;
            0       2     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public final org.sireum.contract$Contract$Justification apply$extension(java.lang.String, scala.collection.immutable.Seq<java.lang.Object>);
    descriptor: (Ljava/lang/String;Lscala/collection/immutable/Seq;)Lorg/sireum/contract$Contract$Justification;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: getstatic     #220                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: ldc           #222                // String
         5: invokevirtual #226                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         8: athrow
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/String$;
            0       9     1 $this   Ljava/lang/String;
            0       9     2  args   Lscala/collection/immutable/Seq;
    Signature: #213                         // (Ljava/lang/String;Lscala/collection/immutable/Seq<Ljava/lang/Object;>;)Lorg/sireum/contract$Contract$Justification;
    MethodParameters:
      Name                           Flags
      $this                          final
      args                           final

  public final java.lang.String native$extension(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/String$;
            0       2     1 $this   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final java.lang.String string$extension(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/String$;
            0       2     1 $this   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final java.lang.String toString$extension(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/String$;
            0       2     1 $this   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final java.lang.String stripPrefix$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #237                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #242                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #245                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: aload_2
        11: invokevirtual #247                // Method scala/collection/StringOps$.stripPrefix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        14: areturn
      LineNumberTable:
        line 82: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/String$;
            0      15     1 $this   Ljava/lang/String;
            0      15     2 prefix   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      prefix                         final

  public final org.sireum.$internal.Boxer boxer$extension(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/$internal/Boxer;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #252                // Field org/sireum/String$Boxer$.MODULE$:Lorg/sireum/String$Boxer$;
         3: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/String$;
            0       4     1 $this   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final org.sireum.Z size$extension(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Z;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #166                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: aload_1
         4: iconst_0
         5: aload_1
         6: invokevirtual #84                 // Method java/lang/String.length:()I
         9: invokevirtual #258                // Method java/lang/String.codePointCount:(II)I
        12: invokevirtual #261                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        15: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/sireum/String$;
            0      16     1 $this   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean $less$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #269                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #237                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         6: getstatic     #242                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         9: aload_1
        10: invokevirtual #245                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        13: aload_2
        14: invokevirtual #271                // Method scala/collection/StringOps$.$less$extension:(Ljava/lang/String;Ljava/lang/String;)Z
        17: invokevirtual #274                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/String$;
            0      21     1 $this   Ljava/lang/String;
            0      21     2 other   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $less$eq$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #269                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #237                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         6: getstatic     #242                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         9: aload_1
        10: invokevirtual #245                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        13: aload_2
        14: invokevirtual #277                // Method scala/collection/StringOps$.$less$eq$extension:(Ljava/lang/String;Ljava/lang/String;)Z
        17: invokevirtual #274                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/String$;
            0      21     1 $this   Ljava/lang/String;
            0      21     2 other   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $greater$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #269                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #237                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         6: getstatic     #242                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         9: aload_1
        10: invokevirtual #245                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        13: aload_2
        14: invokevirtual #280                // Method scala/collection/StringOps$.$greater$extension:(Ljava/lang/String;Ljava/lang/String;)Z
        17: invokevirtual #274                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/String$;
            0      21     1 $this   Ljava/lang/String;
            0      21     2 other   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $greater$eq$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #269                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #237                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         6: getstatic     #242                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         9: aload_1
        10: invokevirtual #245                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        13: aload_2
        14: invokevirtual #283                // Method scala/collection/StringOps$.$greater$eq$extension:(Ljava/lang/String;Ljava/lang/String;)Z
        17: invokevirtual #274                // Method org/sireum/B$.apply:(Z)Z
        20: ireturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/String$;
            0      21     1 $this   Ljava/lang/String;
            0      21     2 other   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $eq$eq$eq$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=3
         0: getstatic     #269                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: astore_3
         6: dup
         7: ifnonnull     18
        10: pop
        11: aload_3
        12: ifnull        25
        15: goto          29
        18: aload_3
        19: invokevirtual #288                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifeq          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: invokevirtual #274                // Method org/sireum/B$.apply:(Z)Z
        33: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class org/sireum/String$, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class org/sireum/B$, class java/lang/String ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/String$, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/String$;
            0      34     1 $this   Ljava/lang/String;
            0      34     2 other   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final boolean $eq$bang$eq$extension(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=4, args_size=3
         0: getstatic     #269                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: astore_3
         6: dup
         7: ifnonnull     18
        10: pop
        11: aload_3
        12: ifnull        29
        15: goto          25
        18: aload_3
        19: invokevirtual #288                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifne          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: invokevirtual #274                // Method org/sireum/B$.apply:(Z)Z
        33: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class org/sireum/String$, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class org/sireum/B$, class java/lang/String ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/String$, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/String$;
            0      34     1 $this   Ljava/lang/String;
            0      34     2 other   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final
      other                          final

  public final int hashCode$extension(java.lang.String);
    descriptor: (Ljava/lang/String;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #294                // Method java/lang/String.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/String$;
            0       5     1 $this   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(java.lang.String, java.lang.Object);
    descriptor: (Ljava/lang/String;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #9                  // class org/sireum/String
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #9                  // class org/sireum/String
        40: invokevirtual #45                 // Method org/sireum/String.value:()Ljava/lang/String;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #288                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/String$, class java/lang/String, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/sireum/String$, class java/lang/String, class java/lang/Object, int, class java/lang/Object, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lorg/sireum/String$;
            0      85     1 $this   Ljava/lang/String;
            0      85     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  private static final java.lang.String z2s$1(long);
    descriptor: (J)Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=1
         0: ldc2_w        #299                // long -2147483648l
         3: lload_0
         4: lcmp
         5: ifgt          23
         8: lload_0
         9: ldc2_w        #301                // long 2147483647l
        12: lcmp
        13: ifgt          23
        16: lload_0
        17: invokestatic  #306                // Method java/lang/Long.toString:(J)Ljava/lang/String;
        20: goto          48
        23: new           #69                 // class java/lang/StringBuilder
        26: dup
        27: ldc_w         #307                // int 11
        30: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
        33: lload_0
        34: invokestatic  #306                // Method java/lang/Long.toString:(J)Ljava/lang/String;
        37: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: bipush        108
        42: invokevirtual #124                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        45: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        48: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 88 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 45: 0
        line 46: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.String$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #309                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/String$;
}
InnerClasses:
  public static #10= #7 of #9;            // Boxer$=class org/sireum/String$Boxer$ of class org/sireum/String
  public static #15= #12 of #14;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
  public static final #18= #17 of #12;    // BigInt=class org/sireum/Z$MP$BigInt of class org/sireum/Z$MP$
  public static final #21= #20 of #12;    // Long=class org/sireum/Z$MP$Long of class org/sireum/Z$MP$
  public #26= #23 of #25;                 // Contract$=class org/sireum/contract$Contract$ of class org/sireum/contract
  public #29= #28 of #23;                 // Justification=class org/sireum/contract$Contract$Justification of class org/sireum/contract$Contract$
SourceFile: "String.scala"
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 01 00 15 01 21 01 07 05 01 1C 01 07 05 01 19
   01 07 05 01 16 01 07 05 01 13 01 07 05 01 06 01
   07 05 00 22 00 21 01 00 C8 00 33 01 00 D3 00 D4
   01 00 F8 00 F9 05 01 27 01 28 01 00 27 00 28 01
   01 22 01 23 01 00 E4 00 33 05 00 98 00 2B 01 00
   FD 00 FE 05 00 E5 00 33 05 00 E6 00 E7 01 00 40
   00 33 05 00 CB 00 CC 01 00 80 00 81 01
  Scala: length = 0x0 (unknown attribute)

