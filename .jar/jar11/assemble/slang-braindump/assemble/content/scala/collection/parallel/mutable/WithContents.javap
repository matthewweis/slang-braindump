Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/mutable/WithContents.class
  Last modified May 29, 2022; size 3221 bytes
  SHA-256 checksum 4e5d649880a51263fb813249b508396b192c9393bb499ad4fada757196296eb1
  Compiled from "ParHashTable.scala"
public interface scala.collection.parallel.mutable.WithContents<K extends java.lang.Object, V extends java.lang.Object, Entry extends scala.collection.mutable.HashEntry<K, Entry>>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/mutable/WithContents
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/mutable/WithContents
    #2 = Class              #1            // scala/collection/parallel/mutable/WithContents
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;Entry::Lscala/collection/mutable/HashEntry<TK;TEntry;>;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               ParHashTable.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005!3\u0001\u0002B\u0003\u0011\u0002\u0007\u0005a\u0002\u0011\u0005\u0006)\u0001!\t!\u0006\u0005\u00063\u0001!\tB\u0007\u0005\u0007y\u0001!\t!C\u001f\u0003\u0019]KG\u000f[\"p]R,g\u000e^:\u000b\u0005\u00199\u0011aB7vi\u0006\u0014G.\u001a\u0006\u0003\u0011%\t\u0001\u0002]1sC2dW\r\u001c\u0006\u0003\u0015-\t!bY8mY\u0016\u001cG/[8o\u0015\u0005a\u0011!B:dC2\f7\u0001A\u000b\u0005\u001f\u001dr\u0014g\u0005\u0002\u0001!A\u0011\u0011CE\u0007\u0002\u0017%\u00111c\u0003\u0002\u0007\u0003:L(+\u001a4\u0002\r\u0011Jg.\u001b;%)\u00051\u0002CA\t\u0018\u0013\tA2B\u0001\u0003V]&$\u0018\u0001E5oSR<\u0016\u000e\u001e5D_:$XM\u001c;t)\t12\u0004C\u0003\u001d\u0005\u0001\u0007Q$A\u0001d!\u0011q\"%\n\u0019\u000f\u0005}\u0001S\"A\u0003\n\u0005\u0005*\u0011\u0001\u0004)be\"\u000b7\u000f\u001b+bE2,\u0017BA\u0012%\u0005!\u0019uN\u001c;f]R\u001c(BA\u0011\u0006!\t1s\u0005\u0004\u0001\u0005\u000b!\u0002!\u0019A\u0015\u0003\u0003-\u000b\"AK\u0017\u0011\u0005EY\u0013B\u0001\u0017\f\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"!\u0005\u0018\n\u0005=Z!aA!osB\u0011a%\r\u0003\u0006e\u0001\u0011\ra\r\u0002\u0006\u000b:$(/_\t\u0003i]\u0002\"!E\u001b\n\u0005YZ!\u0001\u0002(vY2\u0004B\u0001\u000f\u001e&a5\t\u0011H\u0003\u0002\u0007\u0013%\u00111(\u000f\u0002\n\u0011\u0006\u001c\b.\u00128uef\f\u0011\u0003[1tQR\u000b\'\r\\3D_:$XM\u001c;t+\u0005iB!B \u0001\u0005\u0004I#!\u0001,\u0013\u0007\u0005\u001bUI\u0002\u0003C\u0001\u0001\u0001%\u0001\u0004\u001fsK\u001aLg.Z7f]Rt\u0004#B\u0010\u0001K\u0011\u0003\u0004C\u0001\u0014?!\u0015Ad)\n#1\u0013\t9\u0015HA\u0005ICNDG+\u00192mK\u0002
   #10 = Utf8               scala/collection/parallel/mutable/ParHashTable$Contents
   #11 = Class              #10           // scala/collection/parallel/mutable/ParHashTable$Contents
   #12 = Utf8               scala/collection/parallel/mutable/ParHashTable
   #13 = Class              #12           // scala/collection/parallel/mutable/ParHashTable
   #14 = Utf8               Contents
   #15 = Utf8               initWithContents$
   #16 = Utf8               (Lscala/collection/parallel/mutable/WithContents;Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
   #17 = Utf8               $this
   #18 = Utf8               c
   #19 = Utf8               initWithContents
   #20 = Utf8               (Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
   #21 = NameAndType        #19:#20       // initWithContents:(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
   #22 = InterfaceMethodref #2.#21        // scala/collection/parallel/mutable/WithContents.initWithContents:(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
   #23 = Utf8               Lscala/collection/parallel/mutable/WithContents;
   #24 = Utf8               Lscala/collection/parallel/mutable/ParHashTable$Contents;
   #25 = Utf8               (Lscala/collection/parallel/mutable/ParHashTable$Contents<TK;TEntry;>;)V
   #26 = Utf8               scala/collection/mutable/HashTable
   #27 = Class              #26           // scala/collection/mutable/HashTable
   #28 = Utf8               loadFactor
   #29 = Utf8               ()I
   #30 = NameAndType        #28:#29       // loadFactor:()I
   #31 = Methodref          #11.#30       // scala/collection/parallel/mutable/ParHashTable$Contents.loadFactor:()I
   #32 = Utf8               _loadFactor_$eq
   #33 = Utf8               (I)V
   #34 = NameAndType        #32:#33       // _loadFactor_$eq:(I)V
   #35 = InterfaceMethodref #27.#34       // scala/collection/mutable/HashTable._loadFactor_$eq:(I)V
   #36 = Utf8               table
   #37 = Utf8               ()[Lscala/collection/mutable/HashEntry;
   #38 = NameAndType        #36:#37       // table:()[Lscala/collection/mutable/HashEntry;
   #39 = Methodref          #11.#38       // scala/collection/parallel/mutable/ParHashTable$Contents.table:()[Lscala/collection/mutable/HashEntry;
   #40 = Utf8               table_$eq
   #41 = Utf8               ([Lscala/collection/mutable/HashEntry;)V
   #42 = NameAndType        #40:#41       // table_$eq:([Lscala/collection/mutable/HashEntry;)V
   #43 = InterfaceMethodref #27.#42       // scala/collection/mutable/HashTable.table_$eq:([Lscala/collection/mutable/HashEntry;)V
   #44 = Utf8               tableSize
   #45 = NameAndType        #44:#29       // tableSize:()I
   #46 = Methodref          #11.#45       // scala/collection/parallel/mutable/ParHashTable$Contents.tableSize:()I
   #47 = Utf8               tableSize_$eq
   #48 = NameAndType        #47:#33       // tableSize_$eq:(I)V
   #49 = InterfaceMethodref #27.#48       // scala/collection/mutable/HashTable.tableSize_$eq:(I)V
   #50 = Utf8               threshold
   #51 = NameAndType        #50:#29       // threshold:()I
   #52 = Methodref          #11.#51       // scala/collection/parallel/mutable/ParHashTable$Contents.threshold:()I
   #53 = Utf8               threshold_$eq
   #54 = NameAndType        #53:#33       // threshold_$eq:(I)V
   #55 = InterfaceMethodref #27.#54       // scala/collection/mutable/HashTable.threshold_$eq:(I)V
   #56 = Utf8               seedvalue
   #57 = NameAndType        #56:#29       // seedvalue:()I
   #58 = Methodref          #11.#57       // scala/collection/parallel/mutable/ParHashTable$Contents.seedvalue:()I
   #59 = Utf8               seedvalue_$eq
   #60 = NameAndType        #59:#33       // seedvalue_$eq:(I)V
   #61 = InterfaceMethodref #27.#60       // scala/collection/mutable/HashTable.seedvalue_$eq:(I)V
   #62 = Utf8               sizemap
   #63 = Utf8               ()[I
   #64 = NameAndType        #62:#63       // sizemap:()[I
   #65 = Methodref          #11.#64       // scala/collection/parallel/mutable/ParHashTable$Contents.sizemap:()[I
   #66 = Utf8               sizemap_$eq
   #67 = Utf8               ([I)V
   #68 = NameAndType        #66:#67       // sizemap_$eq:([I)V
   #69 = InterfaceMethodref #27.#68       // scala/collection/mutable/HashTable.sizemap_$eq:([I)V
   #70 = Utf8               alwaysInitSizeMap
   #71 = Utf8               ()Z
   #72 = NameAndType        #70:#71       // alwaysInitSizeMap:()Z
   #73 = InterfaceMethodref #27.#72       // scala/collection/mutable/HashTable.alwaysInitSizeMap:()Z
   #74 = InterfaceMethodref #27.#64       // scala/collection/mutable/HashTable.sizemap:()[I
   #75 = Utf8               sizeMapInitAndRebuild
   #76 = Utf8               ()V
   #77 = NameAndType        #75:#76       // sizeMapInitAndRebuild:()V
   #78 = InterfaceMethodref #27.#77       // scala/collection/mutable/HashTable.sizeMapInitAndRebuild:()V
   #79 = Utf8               this
   #80 = Utf8               hashTableContents$
   #81 = Utf8               (Lscala/collection/parallel/mutable/WithContents;)Lscala/collection/parallel/mutable/ParHashTable$Contents;
   #82 = Utf8               hashTableContents
   #83 = Utf8               ()Lscala/collection/parallel/mutable/ParHashTable$Contents;
   #84 = NameAndType        #82:#83       // hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
   #85 = InterfaceMethodref #2.#84        // scala/collection/parallel/mutable/WithContents.hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
   #86 = Utf8               ()Lscala/collection/parallel/mutable/ParHashTable$Contents<TK;TEntry;>;
   #87 = Utf8               _loadFactor
   #88 = NameAndType        #87:#29       // _loadFactor:()I
   #89 = InterfaceMethodref #27.#88       // scala/collection/mutable/HashTable._loadFactor:()I
   #90 = InterfaceMethodref #27.#38       // scala/collection/mutable/HashTable.table:()[Lscala/collection/mutable/HashEntry;
   #91 = InterfaceMethodref #27.#45       // scala/collection/mutable/HashTable.tableSize:()I
   #92 = InterfaceMethodref #27.#51       // scala/collection/mutable/HashTable.threshold:()I
   #93 = InterfaceMethodref #27.#57       // scala/collection/mutable/HashTable.seedvalue:()I
   #94 = Utf8               <init>
   #95 = Utf8               (I[Lscala/collection/mutable/HashEntry;III[I)V
   #96 = NameAndType        #94:#95       // "<init>":(I[Lscala/collection/mutable/HashEntry;III[I)V
   #97 = Methodref          #11.#96       // scala/collection/parallel/mutable/ParHashTable$Contents."<init>":(I[Lscala/collection/mutable/HashEntry;III[I)V
   #98 = Utf8               $init$
   #99 = Utf8               (Lscala/collection/parallel/mutable/WithContents;)V
  #100 = Utf8               Code
  #101 = Utf8               LineNumberTable
  #102 = Utf8               LocalVariableTable
  #103 = Utf8               MethodParameters
  #104 = Utf8               StackMapTable
  #105 = Utf8               Signature
  #106 = Utf8               InnerClasses
  #107 = Utf8               SourceFile
  #108 = Utf8               RuntimeVisibleAnnotations
  #109 = Utf8               ScalaInlineInfo
  #110 = Utf8               ScalaSig
{
  public static void initWithContents$(scala.collection.parallel.mutable.WithContents, scala.collection.parallel.mutable.ParHashTable$Contents);
    descriptor: (Lscala/collection/parallel/mutable/WithContents;Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #22                 // InterfaceMethod initWithContents:(Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
         5: return
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/mutable/WithContents;
            0       6     1     c   Lscala/collection/parallel/mutable/ParHashTable$Contents;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final

  public default void initWithContents(scala.collection.parallel.mutable.ParHashTable$Contents<K, Entry>);
    descriptor: (Lscala/collection/parallel/mutable/ParHashTable$Contents;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnull        85
         4: aload_0
         5: checkcast     #27                 // class scala/collection/mutable/HashTable
         8: aload_1
         9: invokevirtual #31                 // Method scala/collection/parallel/mutable/ParHashTable$Contents.loadFactor:()I
        12: invokeinterface #35,  2           // InterfaceMethod scala/collection/mutable/HashTable._loadFactor_$eq:(I)V
        17: aload_0
        18: checkcast     #27                 // class scala/collection/mutable/HashTable
        21: aload_1
        22: invokevirtual #39                 // Method scala/collection/parallel/mutable/ParHashTable$Contents.table:()[Lscala/collection/mutable/HashEntry;
        25: invokeinterface #43,  2           // InterfaceMethod scala/collection/mutable/HashTable.table_$eq:([Lscala/collection/mutable/HashEntry;)V
        30: aload_0
        31: checkcast     #27                 // class scala/collection/mutable/HashTable
        34: aload_1
        35: invokevirtual #46                 // Method scala/collection/parallel/mutable/ParHashTable$Contents.tableSize:()I
        38: invokeinterface #49,  2           // InterfaceMethod scala/collection/mutable/HashTable.tableSize_$eq:(I)V
        43: aload_0
        44: checkcast     #27                 // class scala/collection/mutable/HashTable
        47: aload_1
        48: invokevirtual #52                 // Method scala/collection/parallel/mutable/ParHashTable$Contents.threshold:()I
        51: invokeinterface #55,  2           // InterfaceMethod scala/collection/mutable/HashTable.threshold_$eq:(I)V
        56: aload_0
        57: checkcast     #27                 // class scala/collection/mutable/HashTable
        60: aload_1
        61: invokevirtual #58                 // Method scala/collection/parallel/mutable/ParHashTable$Contents.seedvalue:()I
        64: invokeinterface #61,  2           // InterfaceMethod scala/collection/mutable/HashTable.seedvalue_$eq:(I)V
        69: aload_0
        70: checkcast     #27                 // class scala/collection/mutable/HashTable
        73: aload_1
        74: invokevirtual #65                 // Method scala/collection/parallel/mutable/ParHashTable$Contents.sizemap:()[I
        77: invokeinterface #69,  2           // InterfaceMethod scala/collection/mutable/HashTable.sizemap_$eq:([I)V
        82: goto          85
        85: aload_0
        86: checkcast     #27                 // class scala/collection/mutable/HashTable
        89: invokeinterface #73,  1           // InterfaceMethod scala/collection/mutable/HashTable.alwaysInitSizeMap:()Z
        94: ifeq          122
        97: aload_0
        98: checkcast     #27                 // class scala/collection/mutable/HashTable
       101: invokeinterface #74,  1           // InterfaceMethod scala/collection/mutable/HashTable.sizemap:()[I
       106: aconst_null
       107: if_acmpne     122
       110: aload_0
       111: checkcast     #27                 // class scala/collection/mutable/HashTable
       114: invokeinterface #78,  1           // InterfaceMethod scala/collection/mutable/HashTable.sizeMapInitAndRebuild:()V
       119: goto          122
       122: return
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 85
        frame_type = 36 /* same */
      LineNumberTable:
        line 154: 0
        line 155: 4
        line 156: 17
        line 157: 30
        line 158: 43
        line 159: 56
        line 160: 69
        line 162: 85
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     123     0  this   Lscala/collection/parallel/mutable/WithContents;
            0     123     1     c   Lscala/collection/parallel/mutable/ParHashTable$Contents;
    Signature: #25                          // (Lscala/collection/parallel/mutable/ParHashTable$Contents<TK;TEntry;>;)V
    MethodParameters:
      Name                           Flags
      c                              final

  public static scala.collection.parallel.mutable.ParHashTable$Contents hashTableContents$(scala.collection.parallel.mutable.WithContents);
    descriptor: (Lscala/collection/parallel/mutable/WithContents;)Lscala/collection/parallel/mutable/ParHashTable$Contents;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #85                 // InterfaceMethod hashTableContents:()Lscala/collection/parallel/mutable/ParHashTable$Contents;
         4: areturn
      LineNumberTable:
        line 165: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/mutable/WithContents;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.parallel.mutable.ParHashTable$Contents<K, Entry> hashTableContents();
    descriptor: ()Lscala/collection/parallel/mutable/ParHashTable$Contents;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: new           #11                 // class scala/collection/parallel/mutable/ParHashTable$Contents
         3: dup
         4: aload_0
         5: checkcast     #27                 // class scala/collection/mutable/HashTable
         8: invokeinterface #89,  1           // InterfaceMethod scala/collection/mutable/HashTable._loadFactor:()I
        13: aload_0
        14: checkcast     #27                 // class scala/collection/mutable/HashTable
        17: invokeinterface #90,  1           // InterfaceMethod scala/collection/mutable/HashTable.table:()[Lscala/collection/mutable/HashEntry;
        22: aload_0
        23: checkcast     #27                 // class scala/collection/mutable/HashTable
        26: invokeinterface #91,  1           // InterfaceMethod scala/collection/mutable/HashTable.tableSize:()I
        31: aload_0
        32: checkcast     #27                 // class scala/collection/mutable/HashTable
        35: invokeinterface #92,  1           // InterfaceMethod scala/collection/mutable/HashTable.threshold:()I
        40: aload_0
        41: checkcast     #27                 // class scala/collection/mutable/HashTable
        44: invokeinterface #93,  1           // InterfaceMethod scala/collection/mutable/HashTable.seedvalue:()I
        49: aload_0
        50: checkcast     #27                 // class scala/collection/mutable/HashTable
        53: invokeinterface #74,  1           // InterfaceMethod scala/collection/mutable/HashTable.sizemap:()[I
        58: invokespecial #97                 // Method scala/collection/parallel/mutable/ParHashTable$Contents."<init>":(I[Lscala/collection/mutable/HashEntry;III[I)V
        61: areturn
      LineNumberTable:
        line 165: 0
        line 166: 4
        line 167: 13
        line 168: 22
        line 169: 31
        line 170: 40
        line 171: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lscala/collection/parallel/mutable/WithContents;
    Signature: #86                          // ()Lscala/collection/parallel/mutable/ParHashTable$Contents<TK;TEntry;>;

  public static void $init$(scala.collection.parallel.mutable.WithContents);
    descriptor: (Lscala/collection/parallel/mutable/WithContents;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/collection/parallel/mutable/WithContents;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public static #14= #11 of #13;          // Contents=class scala/collection/parallel/mutable/ParHashTable$Contents of class scala/collection/parallel/mutable/ParHashTable
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;Entry::Lscala/collection/mutable/HashEntry<TK;TEntry;>;>Ljava/lang/Object;
SourceFile: "ParHashTable.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005!3\u0001\u0002B\u0003\u0011\u0002\u0007\u0005a\u0002\u0011\u0005\u0006)\u0001!\t!\u0006\u0005\u00063\u0001!\tB\u0007\u0005\u0007y\u0001!\t!C\u001f\u0003\u0019]KG\u000f[\"p]R,g\u000e^:\u000b\u0005\u00199\u0011aB7vi\u0006\u0014G.\u001a\u0006\u0003\u0011%\t\u0001\u0002]1sC2dW\r\u001c\u0006\u0003\u0015-\t!bY8mY\u0016\u001cG/[8o\u0015\u0005a\u0011!B:dC2\f7\u0001A\u000b\u0005\u001f\u001dr\u0014g\u0005\u0002\u0001!A\u0011\u0011CE\u0007\u0002\u0017%\u00111c\u0003\u0002\u0007\u0003:L(+\u001a4\u0002\r\u0011Jg.\u001b;%)\u00051\u0002CA\t\u0018\u0013\tA2B\u0001\u0003V]&$\u0018\u0001E5oSR<\u0016\u000e\u001e5D_:$XM\u001c;t)\t12\u0004C\u0003\u001d\u0005\u0001\u0007Q$A\u0001d!\u0011q\"%\n\u0019\u000f\u0005}\u0001S\"A\u0003\n\u0005\u0005*\u0011\u0001\u0004)be\"\u000b7\u000f\u001b+bE2,\u0017BA\u0012%\u0005!\u0019uN\u001c;f]R\u001c(BA\u0011\u0006!\t1s\u0005\u0004\u0001\u0005\u000b!\u0002!\u0019A\u0015\u0003\u0003-\u000b\"AK\u0017\u0011\u0005EY\u0013B\u0001\u0017\f\u0005\u001dqu\u000e\u001e5j]\u001e\u0004\"!\u0005\u0018\n\u0005=Z!aA!osB\u0011a%\r\u0003\u0006e\u0001\u0011\ra\r\u0002\u0006\u000b:$(/_\t\u0003i]\u0002\"!E\u001b\n\u0005YZ!\u0001\u0002(vY2\u0004B\u0001\u000f\u001e&a5\t\u0011H\u0003\u0002\u0007\u0013%\u00111(\u000f\u0002\n\u0011\u0006\u001c\b.\u00128uef\f\u0011\u0003[1tQR\u000b\'\r\\3D_:$XM\u001c;t+\u0005iB!B \u0001\u0005\u0004I#!\u0001,\u0013\u0007\u0005\u001bUI\u0002\u0003C\u0001\u0001\u0001%\u0001\u0004\u001fsK\u001aLg.Z7f]Rt\u0004#B\u0010\u0001K\u0011\u0003\u0004C\u0001\u0014?!\u0015Ad)\n#1\u0013\t9\u0015HA\u0005ICNDG+\u00192mK\u0002"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 62 00 63 01 00 52 00 53 00 00 50
   00 51 01 00 13 00 14 00 00 0F 00 10 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
