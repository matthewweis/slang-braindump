Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/file/CountingPathVisitor.class
  Last modified May 29, 2022; size 3618 bytes
  SHA-256 checksum d67925b3317ab8cfbb4c5e11ec23a7c96b2781c13ab7eb72eb26092a8385b72f
  Compiled from "CountingPathVisitor.java"
public class org.apache.commons.io.file.CountingPathVisitor extends org.apache.commons.io.file.SimplePathVisitor
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #1                          // org/apache/commons/io/file/CountingPathVisitor
  super_class: #29                        // org/apache/commons/io/file/SimplePathVisitor
  interfaces: 0, fields: 2, methods: 13, attributes: 2
Constant pool:
    #1 = Class              #80           // org/apache/commons/io/file/CountingPathVisitor
    #2 = Methodref          #81.#82       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
    #3 = Methodref          #1.#83        // org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
    #4 = Methodref          #81.#84       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
    #5 = Methodref          #29.#85       // org/apache/commons/io/file/SimplePathVisitor."<init>":()V
    #6 = String             #46           // pathCounter
    #7 = Methodref          #86.#87       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
    #8 = Class              #88           // org/apache/commons/io/file/Counters$PathCounters
    #9 = Fieldref           #1.#89        // org/apache/commons/io/file/CountingPathVisitor.pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
   #10 = Methodref          #86.#90       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #11 = Class              #91           // java/lang/Object
   #12 = Methodref          #86.#92       // java/util/Objects.hash:([Ljava/lang/Object;)I
   #13 = InterfaceMethodref #8.#93        // org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;
   #14 = InterfaceMethodref #94.#95       // org/apache/commons/io/file/Counters$Counter.increment:()V
   #15 = Fieldref           #96.#97       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
   #16 = Methodref          #11.#98       // java/lang/Object.toString:()Ljava/lang/String;
   #17 = InterfaceMethodref #8.#99        // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
   #18 = InterfaceMethodref #8.#100       // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
   #19 = InterfaceMethodref #101.#102     // java/nio/file/attribute/BasicFileAttributes.size:()J
   #20 = InterfaceMethodref #94.#103      // org/apache/commons/io/file/Counters$Counter.add:(J)V
   #21 = Class              #104          // java/nio/file/LinkOption
   #22 = Methodref          #105.#106     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #23 = Methodref          #1.#107       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
   #24 = Class              #108          // java/nio/file/Path
   #25 = Methodref          #1.#109       // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
   #26 = Methodref          #1.#110       // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #27 = Class              #111          // java/lang/String
   #28 = Fieldref           #1.#112       // org/apache/commons/io/file/CountingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;
   #29 = Class              #113          // org/apache/commons/io/file/SimplePathVisitor
   #30 = Utf8               EMPTY_STRING_ARRAY
   #31 = Utf8               [Ljava/lang/String;
   #32 = Utf8               pathCounters
   #33 = Utf8               PathCounters
   #34 = Utf8               InnerClasses
   #35 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;
   #36 = Utf8               withBigIntegerCounters
   #37 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;
   #38 = Utf8               Code
   #39 = Utf8               LineNumberTable
   #40 = Utf8               withLongCounters
   #41 = Utf8               <init>
   #42 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V
   #43 = Utf8               LocalVariableTable
   #44 = Utf8               this
   #45 = Utf8               Lorg/apache/commons/io/file/CountingPathVisitor;
   #46 = Utf8               pathCounter
   #47 = Utf8               equals
   #48 = Utf8               (Ljava/lang/Object;)Z
   #49 = Utf8               obj
   #50 = Utf8               Ljava/lang/Object;
   #51 = Utf8               other
   #52 = Utf8               StackMapTable
   #53 = Utf8               getPathCounters
   #54 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;
   #55 = Utf8               hashCode
   #56 = Utf8               ()I
   #57 = Utf8               postVisitDirectory
   #58 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
   #59 = Utf8               dir
   #60 = Utf8               Ljava/nio/file/Path;
   #61 = Utf8               exc
   #62 = Utf8               Ljava/io/IOException;
   #63 = Utf8               Exceptions
   #64 = Class              #114          // java/io/IOException
   #65 = Utf8               toString
   #66 = Utf8               ()Ljava/lang/String;
   #67 = Utf8               updateFileCounters
   #68 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
   #69 = Utf8               file
   #70 = Utf8               attributes
   #71 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;
   #72 = Utf8               visitFile
   #73 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #74 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
   #75 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
   #76 = Utf8               <clinit>
   #77 = Utf8               ()V
   #78 = Utf8               SourceFile
   #79 = Utf8               CountingPathVisitor.java
   #80 = Utf8               org/apache/commons/io/file/CountingPathVisitor
   #81 = Class              #115          // org/apache/commons/io/file/Counters
   #82 = NameAndType        #116:#54      // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #83 = NameAndType        #41:#42       // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
   #84 = NameAndType        #117:#54      // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #85 = NameAndType        #41:#77       // "<init>":()V
   #86 = Class              #118          // java/util/Objects
   #87 = NameAndType        #119:#120     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #88 = Utf8               org/apache/commons/io/file/Counters$PathCounters
   #89 = NameAndType        #32:#35       // pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
   #90 = NameAndType        #47:#121      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #91 = Utf8               java/lang/Object
   #92 = NameAndType        #122:#123     // hash:([Ljava/lang/Object;)I
   #93 = NameAndType        #124:#126     // getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;
   #94 = Class              #127          // org/apache/commons/io/file/Counters$Counter
   #95 = NameAndType        #128:#77      // increment:()V
   #96 = Class              #129          // java/nio/file/FileVisitResult
   #97 = NameAndType        #130:#131     // CONTINUE:Ljava/nio/file/FileVisitResult;
   #98 = NameAndType        #65:#66       // toString:()Ljava/lang/String;
   #99 = NameAndType        #132:#126     // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
  #100 = NameAndType        #133:#126     // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
  #101 = Class              #134          // java/nio/file/attribute/BasicFileAttributes
  #102 = NameAndType        #135:#136     // size:()J
  #103 = NameAndType        #137:#138     // add:(J)V
  #104 = Utf8               java/nio/file/LinkOption
  #105 = Class              #139          // java/nio/file/Files
  #106 = NameAndType        #140:#141     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #107 = NameAndType        #67:#68       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
  #108 = Utf8               java/nio/file/Path
  #109 = NameAndType        #57:#58       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
  #110 = NameAndType        #72:#73       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
  #111 = Utf8               java/lang/String
  #112 = NameAndType        #30:#31       // EMPTY_STRING_ARRAY:[Ljava/lang/String;
  #113 = Utf8               org/apache/commons/io/file/SimplePathVisitor
  #114 = Utf8               java/io/IOException
  #115 = Utf8               org/apache/commons/io/file/Counters
  #116 = Utf8               bigIntegerPathCounters
  #117 = Utf8               longPathCounters
  #118 = Utf8               java/util/Objects
  #119 = Utf8               requireNonNull
  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #121 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #122 = Utf8               hash
  #123 = Utf8               ([Ljava/lang/Object;)I
  #124 = Utf8               getDirectoryCounter
  #125 = Utf8               Counter
  #126 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;
  #127 = Utf8               org/apache/commons/io/file/Counters$Counter
  #128 = Utf8               increment
  #129 = Utf8               java/nio/file/FileVisitResult
  #130 = Utf8               CONTINUE
  #131 = Utf8               Ljava/nio/file/FileVisitResult;
  #132 = Utf8               getFileCounter
  #133 = Utf8               getByteCounter
  #134 = Utf8               java/nio/file/attribute/BasicFileAttributes
  #135 = Utf8               size
  #136 = Utf8               ()J
  #137 = Utf8               add
  #138 = Utf8               (J)V
  #139 = Utf8               java/nio/file/Files
  #140 = Utf8               exists
  #141 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
{
  static final java.lang.String[] EMPTY_STRING_ARRAY;
    descriptor: [Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  private final org.apache.commons.io.file.Counters$PathCounters pathCounters;
    descriptor: Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static org.apache.commons.io.file.CountingPathVisitor withBigIntegerCounters();
    descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #1                  // class org/apache/commons/io/file/CountingPathVisitor
         3: dup
         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
        10: areturn
      LineNumberTable:
        line 44: 0

  public static org.apache.commons.io.file.CountingPathVisitor withLongCounters();
    descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #1                  // class org/apache/commons/io/file/CountingPathVisitor
         3: dup
         4: invokestatic  #4                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: invokespecial #3                  // Method "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
        10: areturn
      LineNumberTable:
        line 53: 0

  public org.apache.commons.io.file.CountingPathVisitor(org.apache.commons.io.file.Counters$PathCounters);
    descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #5                  // Method org/apache/commons/io/file/SimplePathVisitor."<init>":()V
         4: aload_0
         5: aload_1
         6: ldc           #6                  // String pathCounter
         8: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        11: checkcast     #8                  // class org/apache/commons/io/file/Counters$PathCounters
        14: putfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
        17: return
      LineNumberTable:
        line 64: 0
        line 65: 4
        line 66: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
            0      18     1 pathCounter   Lorg/apache/commons/io/file/Counters$PathCounters;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: instanceof    #1                  // class org/apache/commons/io/file/CountingPathVisitor
        11: ifne          16
        14: iconst_0
        15: ireturn
        16: aload_1
        17: checkcast     #1                  // class org/apache/commons/io/file/CountingPathVisitor
        20: astore_2
        21: aload_0
        22: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
        25: aload_2
        26: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
        29: invokestatic  #10                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        32: ireturn
      LineNumberTable:
        line 70: 0
        line 71: 5
        line 73: 7
        line 74: 14
        line 76: 16
        line 77: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
            0      33     1   obj   Ljava/lang/Object;
           21      12     2 other   Lorg/apache/commons/io/file/CountingPathVisitor;
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 8 /* same */

  public org.apache.commons.io.file.Counters$PathCounters getPathCounters();
    descriptor: ()Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
         4: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: iconst_1
         1: anewarray     #11                 // class java/lang/Object
         4: dup
         5: iconst_0
         6: aload_0
         7: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
        10: aastore
        11: invokestatic  #12                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
        14: ireturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;

  public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=3
         0: aload_0
         1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
         4: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;
         9: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V
        14: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
        17: areturn
      LineNumberTable:
        line 96: 0
        line 97: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
            0      18     1   dir   Ljava/nio/file/Path;
            0      18     2   exc   Ljava/io/IOException;
    Exceptions:
      throws java.io.IOException

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
         4: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;

  protected void updateFileCounters(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
         4: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
         9: invokeinterface #14,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V
        14: aload_0
        15: getfield      #9                  // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;
        18: invokeinterface #18,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
        23: aload_2
        24: invokeinterface #19,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.size:()J
        29: invokeinterface #20,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V
        34: return
      LineNumberTable:
        line 112: 0
        line 113: 14
        line 114: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
            0      35     1  file   Ljava/nio/file/Path;
            0      35     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;

  public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: iconst_0
         2: anewarray     #21                 // class java/nio/file/LinkOption
         5: invokestatic  #22                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
         8: ifeq          17
        11: aload_0
        12: aload_1
        13: aload_2
        14: invokevirtual #23                 // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V
        17: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;
        20: areturn
      LineNumberTable:
        line 118: 0
        line 119: 11
        line 121: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
            0      21     1  file   Ljava/nio/file/Path;
            0      21     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;
      StackMapTable: number_of_entries = 1
        frame_type = 17 /* same */
    Exceptions:
      throws java.io.IOException

  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #24                 // class java/nio/file/Path
         5: aload_2
         6: invokevirtual #25                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;
         9: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
    Exceptions:
      throws java.io.IOException

  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #24                 // class java/nio/file/Path
         5: aload_2
         6: invokevirtual #26                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;
         9: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: anewarray     #27                 // class java/lang/String
         4: putstatic     #28                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
         7: return
      LineNumberTable:
        line 36: 0
}
SourceFile: "CountingPathVisitor.java"
InnerClasses:
  public static #33= #8 of #81;           // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters
  public static #125= #94 of #81;         // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters
