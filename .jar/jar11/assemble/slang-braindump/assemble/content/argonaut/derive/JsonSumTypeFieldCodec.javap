Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/derive/JsonSumTypeFieldCodec.class
  Last modified May 29, 2022; size 6653 bytes
  SHA-256 checksum 9acad32c5bee6c2a0286b86dabb17a287c665e9e373d7e0efb50eb740394b843
  Compiled from "JsonSumCodec.scala"
public class argonaut.derive.JsonSumTypeFieldCodec implements argonaut.derive.JsonSumCodec
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // argonaut/derive/JsonSumTypeFieldCodec
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 9, attributes: 6
Constant pool:
    #1 = Utf8               argonaut/derive/JsonSumTypeFieldCodec
    #2 = Class              #1            // argonaut/derive/JsonSumTypeFieldCodec
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               argonaut/derive/JsonSumCodec
    #6 = Class              #5            // argonaut/derive/JsonSumCodec
    #7 = Utf8               JsonSumCodec.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u001d4A\u0001C\u0005\u0001\u001d!)\u0011\u0004\u0001C\u00015!)A\u0004\u0001C\u0001;!)\u0011\u0006\u0001C\u0001U!)Q\u0006\u0001C\u0001]!)!\u0007\u0001C\u0001g!)a\t\u0001C\u0001\u000f\")\u0001\u000b\u0001C\u0001#\n)\"j]8o\'VlG+\u001f9f\r&,G\u000eZ\"pI\u0016\u001c\'B\u0001\u0006\f\u0003\u0019!WM]5wK*\tA\"\u0001\u0005be\u001e|g.Y;u\u0007\u0001\u00192\u0001A\b\u0016!\t\u00012#D\u0001\u0012\u0015\u0005\u0011\u0012!B:dC2\f\u0017B\u0001\u000b\u0012\u0005\u0019\te.\u001f*fMB\u0011acF\u0007\u0002\u0013%\u0011\u0001$\u0003\u0002\r\u0015N|gnU;n\u0007>$WmY\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003m\u0001\"A\u0006\u0001\u0002\u0013QL\b/\u001a$jK2$W#\u0001\u0010\u0011\u0005}1cB\u0001\u0011%!\t\t\u0013#D\u0001#\u0015\t\u0019S\"\u0001\u0004=e>|GOP\u0005\u0003KE\ta\u0001\u0015:fI\u00164\u0017BA\u0014)\u0005\u0019\u0019FO]5oO*\u0011Q%E\u0001\fi>$\u0016\u0010]3WC2,X\r\u0006\u0002\u001fW!)Af\u0001a\u0001=\u0005!a.Y7f\u0003-)gnY8eK\u0016k\u0007\u000f^=\u0016\u0003=\u0002\"\u0001\u0005\u0019\n\u0005E\n\"a\u0002(pi\"LgnZ\u0001\fK:\u001cw\u000eZ3GS\u0016dG\r\u0006\u00025qA\u0011QGN\u0007\u0002\u0017%\u0011qg\u0003\u0002\u0005\u0015N|g\u000eC\u0003:\u000b\u0001\u0007!(\u0001\u0006gS\u0016dGm\u0014:PE*\u0004Ba\u000f!5\u0007:\u0011AH\u0010\b\u0003CuJ\u0011AE\u0005\u0003\u007fE\tq\u0001]1dW\u0006<W-\u0003\u0002B\u0005\n1Q)\u001b;iKJT!aP\t\u0011\tA!e\u0004N\u0005\u0003\u000bF\u0011a\u0001V;qY\u0016\u0014\u0014a\u00033fG>$W-R7qif$\"\u0001S&\u0011\u0007UJu&\u0003\u0002K\u0017\taA)Z2pI\u0016\u0014Vm];mi\")AJ\u0002a\u0001\u001b\u000611-\u001e:t_J\u0004\"!\u000e(\n\u0005=[!a\u0002%DkJ\u001cxN]\u0001\fI\u0016\u001cw\u000eZ3GS\u0016dG-\u0006\u0002S5R!1\u000bY1c!\r)\u0014\n\u0016\t\u0005w\u0001+\u0006\f\u0005\u00026-&\u0011qk\u0003\u0002\b\u0003\u000e+(o]8s!\tI&\f\u0004\u0001\u0005\u000bm;!\u0019\u0001/\u0003\u0003\u0005\u000b\"aL/\u0011\u0005Aq\u0016BA0\u0012\u0005\r\te.\u001f\u0005\u0006Y\u001d\u0001\rA\b\u0005\u0006\u0019\u001e\u0001\r!\u0014\u0005\u0006G\u001e\u0001\r\u0001Z\u0001\u0007I\u0016\u001cw\u000eZ3\u0011\u0007U*\u0007,\u0003\u0002g\u0017\tQA)Z2pI\u0016T5o\u001c8
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/Predef$ArrowAssoc$
   #17 = Class              #16           // scala/Predef$ArrowAssoc$
   #18 = Utf8               scala/Predef
   #19 = Class              #18           // scala/Predef
   #20 = Utf8               ArrowAssoc$
   #21 = Utf8               typeField
   #22 = Utf8               ()Ljava/lang/String;
   #23 = Utf8               type
   #24 = String             #23           // type
   #25 = Utf8               this
   #26 = Utf8               Largonaut/derive/JsonSumTypeFieldCodec;
   #27 = Utf8               toTypeValue
   #28 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #29 = Utf8               name
   #30 = Utf8               Ljava/lang/String;
   #31 = Utf8               encodeEmpty
   #32 = Utf8               ()Lscala/runtime/Nothing$;
   #33 = Utf8               java/lang/IllegalArgumentException
   #34 = Class              #33           // java/lang/IllegalArgumentException
   #35 = Utf8               empty
   #36 = String             #35           // empty
   #37 = Utf8               <init>
   #38 = Utf8               (Ljava/lang/String;)V
   #39 = NameAndType        #37:#38       // "<init>":(Ljava/lang/String;)V
   #40 = Methodref          #34.#39       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #41 = Utf8               encodeField
   #42 = Utf8               (Lscala/util/Either;)Largonaut/Json;
   #43 = Utf8               (Lscala/util/Either<Largonaut/Json;Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
   #44 = Utf8               fieldOrObj
   #45 = Utf8               scala/util/Left
   #46 = Class              #45           // scala/util/Left
   #47 = Utf8               value
   #48 = Utf8               ()Ljava/lang/Object;
   #49 = NameAndType        #47:#48       // value:()Ljava/lang/Object;
   #50 = Methodref          #46.#49       // scala/util/Left.value:()Ljava/lang/Object;
   #51 = Utf8               argonaut/Json
   #52 = Class              #51           // argonaut/Json
   #53 = Utf8               scala/util/Right
   #54 = Class              #53           // scala/util/Right
   #55 = Methodref          #54.#49       // scala/util/Right.value:()Ljava/lang/Object;
   #56 = Utf8               scala/Tuple2
   #57 = Class              #56           // scala/Tuple2
   #58 = Utf8               _1
   #59 = NameAndType        #58:#48       // _1:()Ljava/lang/Object;
   #60 = Methodref          #57.#59       // scala/Tuple2._1:()Ljava/lang/Object;
   #61 = Utf8               java/lang/String
   #62 = Class              #61           // java/lang/String
   #63 = Utf8               _2
   #64 = NameAndType        #63:#48       // _2:()Ljava/lang/Object;
   #65 = Methodref          #57.#64       // scala/Tuple2._2:()Ljava/lang/Object;
   #66 = Utf8               MODULE$
   #67 = Utf8               Lscala/Predef$ArrowAssoc$;
   #68 = NameAndType        #66:#67       // MODULE$:Lscala/Predef$ArrowAssoc$;
   #69 = Fieldref           #17.#68       // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
   #70 = Utf8               scala/Predef$
   #71 = Class              #70           // scala/Predef$
   #72 = Utf8               Lscala/Predef$;
   #73 = NameAndType        #66:#72       // MODULE$:Lscala/Predef$;
   #74 = Fieldref           #71.#73       // scala/Predef$.MODULE$:Lscala/Predef$;
   #75 = NameAndType        #21:#22       // typeField:()Ljava/lang/String;
   #76 = Methodref          #2.#75        // argonaut/derive/JsonSumTypeFieldCodec.typeField:()Ljava/lang/String;
   #77 = Utf8               ArrowAssoc
   #78 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #79 = NameAndType        #77:#78       // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
   #80 = Methodref          #71.#79       // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
   #81 = Utf8               argonaut/Json$
   #82 = Class              #81           // argonaut/Json$
   #83 = Utf8               Largonaut/Json$;
   #84 = NameAndType        #66:#83       // MODULE$:Largonaut/Json$;
   #85 = Fieldref           #82.#84       // argonaut/Json$.MODULE$:Largonaut/Json$;
   #86 = Utf8               jString
   #87 = Utf8               ()Lscala/Function1;
   #88 = NameAndType        #86:#87       // jString:()Lscala/Function1;
   #89 = Methodref          #82.#88       // argonaut/Json$.jString:()Lscala/Function1;
   #90 = NameAndType        #27:#28       // toTypeValue:(Ljava/lang/String;)Ljava/lang/String;
   #91 = Methodref          #2.#90        // argonaut/derive/JsonSumTypeFieldCodec.toTypeValue:(Ljava/lang/String;)Ljava/lang/String;
   #92 = Utf8               scala/Function1
   #93 = Class              #92           // scala/Function1
   #94 = Utf8               apply
   #95 = NameAndType        #94:#78       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #96 = InterfaceMethodref #93.#95       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #97 = Utf8               $minus$greater$extension
   #98 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #99 = NameAndType        #97:#98       // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #100 = Methodref          #17.#99       // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #101 = Utf8               $minus$greater$colon
  #102 = Utf8               (Lscala/Tuple2;)Largonaut/Json;
  #103 = NameAndType        #101:#102     // $minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
  #104 = Methodref          #52.#103      // argonaut/Json.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
  #105 = Utf8               scala/MatchError
  #106 = Class              #105          // scala/MatchError
  #107 = Utf8               (Ljava/lang/Object;)V
  #108 = NameAndType        #37:#107      // "<init>":(Ljava/lang/Object;)V
  #109 = Methodref          #106.#108     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #110 = Utf8               other
  #111 = Utf8               Largonaut/Json;
  #112 = Utf8               content
  #113 = Utf8               Lscala/util/Either;
  #114 = Utf8               scala/util/Either
  #115 = Class              #114          // scala/util/Either
  #116 = Utf8               decodeEmpty
  #117 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult;
  #118 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult<Lscala/runtime/Nothing$;>;
  #119 = Utf8               cursor
  #120 = Utf8               argonaut/DecodeResult$
  #121 = Class              #120          // argonaut/DecodeResult$
  #122 = Utf8               Largonaut/DecodeResult$;
  #123 = NameAndType        #66:#122      // MODULE$:Largonaut/DecodeResult$;
  #124 = Fieldref           #121.#123     // argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
  #125 = Utf8               argonaut/HCursor
  #126 = Class              #125          // argonaut/HCursor
  #127 = Utf8               $minus$minus$bslash
  #128 = Utf8               (Ljava/lang/String;)Largonaut/ACursor;
  #129 = NameAndType        #127:#128     // $minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #130 = Methodref          #126.#129     // argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #131 = Utf8               argonaut/ACursor
  #132 = Class              #131          // argonaut/ACursor
  #133 = Utf8               focus
  #134 = Utf8               ()Lscala/Option;
  #135 = NameAndType        #133:#134     // focus:()Lscala/Option;
  #136 = Methodref          #132.#135     // argonaut/ACursor.focus:()Lscala/Option;
  #137 = Utf8               scala/None$
  #138 = Class              #137          // scala/None$
  #139 = Utf8               Lscala/None$;
  #140 = NameAndType        #66:#139      // MODULE$:Lscala/None$;
  #141 = Fieldref           #138.#140     // scala/None$.MODULE$:Lscala/None$;
  #142 = Utf8               equals
  #143 = Utf8               (Ljava/lang/Object;)Z
  #144 = NameAndType        #142:#143     // equals:(Ljava/lang/Object;)Z
  #145 = Methodref          #4.#144       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #146 = Utf8               no type found
  #147 = String             #146          // no type found
  #148 = Utf8               scala/Some
  #149 = Class              #148          // scala/Some
  #150 = Methodref          #149.#49      // scala/Some.value:()Ljava/lang/Object;
  #151 = Utf8               java/lang/StringBuilder
  #152 = Class              #151          // java/lang/StringBuilder
  #153 = Integer            19
  #154 = Utf8               (I)V
  #155 = NameAndType        #37:#154      // "<init>":(I)V
  #156 = Methodref          #152.#155     // java/lang/StringBuilder."<init>":(I)V
  #157 = Utf8               unrecognized type:
  #158 = String             #157          // unrecognized type:
  #159 = Utf8               append
  #160 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #161 = NameAndType        #159:#160     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #162 = Methodref          #152.#161     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #163 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #164 = NameAndType        #159:#163     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #165 = Methodref          #152.#164     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #166 = Utf8               toString
  #167 = NameAndType        #166:#22      // toString:()Ljava/lang/String;
  #168 = Methodref          #152.#167     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #169 = Utf8               history
  #170 = Utf8               ()Largonaut/CursorHistory;
  #171 = NameAndType        #169:#170     // history:()Largonaut/CursorHistory;
  #172 = Methodref          #126.#171     // argonaut/HCursor.history:()Largonaut/CursorHistory;
  #173 = Utf8               fail
  #174 = Utf8               (Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
  #175 = NameAndType        #173:#174     // fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
  #176 = Methodref          #121.#175     // argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
  #177 = Utf8               type0
  #178 = Utf8               Largonaut/HCursor;
  #179 = Utf8               scala/Option
  #180 = Class              #179          // scala/Option
  #181 = Utf8               decodeField
  #182 = Utf8               (Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #183 = Utf8               <A:Ljava/lang/Object;>(Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<Lscala/util/Either<Largonaut/ACursor;TA;>;>;
  #184 = Utf8               decode
  #185 = Utf8               argonaut/DecodeJson$
  #186 = Class              #185          // argonaut/DecodeJson$
  #187 = Utf8               Largonaut/DecodeJson$;
  #188 = NameAndType        #66:#187      // MODULE$:Largonaut/DecodeJson$;
  #189 = Fieldref           #186.#188     // argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
  #190 = Utf8               StringDecodeJson
  #191 = Utf8               ()Largonaut/DecodeJson;
  #192 = NameAndType        #190:#191     // StringDecodeJson:()Largonaut/DecodeJson;
  #193 = Methodref          #186.#192     // argonaut/DecodeJson$.StringDecodeJson:()Largonaut/DecodeJson;
  #194 = Utf8               as
  #195 = Utf8               (Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #196 = NameAndType        #194:#195     // as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #197 = Methodref          #132.#196     // argonaut/ACursor.as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #198 = Utf8               argonaut/DecodeResult
  #199 = Class              #198          // argonaut/DecodeResult
  #200 = Utf8               result
  #201 = Utf8               ()Lscala/util/Either;
  #202 = NameAndType        #200:#201     // result:()Lscala/util/Either;
  #203 = Methodref          #199.#202     // argonaut/DecodeResult.result:()Lscala/util/Either;
  #204 = Utf8               argonaut/DecodeJson
  #205 = Class              #204          // argonaut/DecodeJson
  #206 = NameAndType        #184:#117     // decode:(Largonaut/HCursor;)Largonaut/DecodeResult;
  #207 = InterfaceMethodref #205.#206     // argonaut/DecodeJson.decode:(Largonaut/HCursor;)Largonaut/DecodeResult;
  #208 = MethodType         #78           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #209 = Utf8               $anonfun$decodeField$2
  #210 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #211 = NameAndType        #209:#210     // $anonfun$decodeField$2:(Ljava/lang/Object;)Lscala/util/Right;
  #212 = Methodref          #2.#211       // argonaut/derive/JsonSumTypeFieldCodec.$anonfun$decodeField$2:(Ljava/lang/Object;)Lscala/util/Right;
  #213 = MethodHandle       6:#212        // REF_invokeStatic argonaut/derive/JsonSumTypeFieldCodec.$anonfun$decodeField$2:(Ljava/lang/Object;)Lscala/util/Right;
  #214 = MethodType         #210          //  (Ljava/lang/Object;)Lscala/util/Right;
  #215 = Integer            5
  #216 = Integer            1
  #217 = Utf8               java/lang/invoke/LambdaMetafactory
  #218 = Class              #217          // java/lang/invoke/LambdaMetafactory
  #219 = Utf8               altMetafactory
  #220 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #221 = NameAndType        #219:#220     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #222 = Methodref          #218.#221     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #223 = MethodHandle       6:#222        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #224 = NameAndType        #94:#87       // apply:()Lscala/Function1;
  #225 = InvokeDynamic      #0:#224       // #0:apply:()Lscala/Function1;
  #226 = Utf8               map
  #227 = Utf8               (Lscala/Function1;)Largonaut/DecodeResult;
  #228 = NameAndType        #226:#227     // map:(Lscala/Function1;)Largonaut/DecodeResult;
  #229 = Methodref          #199.#228     // argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
  #230 = Utf8               scala/package$
  #231 = Class              #230          // scala/package$
  #232 = Utf8               Lscala/package$;
  #233 = NameAndType        #66:#232      // MODULE$:Lscala/package$;
  #234 = Fieldref           #231.#233     // scala/package$.MODULE$:Lscala/package$;
  #235 = Utf8               Left
  #236 = Utf8               ()Lscala/util/Left$;
  #237 = NameAndType        #235:#236     // Left:()Lscala/util/Left$;
  #238 = Methodref          #231.#237     // scala/package$.Left:()Lscala/util/Left$;
  #239 = Utf8               argonaut/ACursor$
  #240 = Class              #239          // argonaut/ACursor$
  #241 = Utf8               Largonaut/ACursor$;
  #242 = NameAndType        #66:#241      // MODULE$:Largonaut/ACursor$;
  #243 = Fieldref           #240.#242     // argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
  #244 = Utf8               ok
  #245 = Utf8               (Largonaut/HCursor;)Largonaut/ACursor;
  #246 = NameAndType        #244:#245     // ok:(Largonaut/HCursor;)Largonaut/ACursor;
  #247 = Methodref          #240.#246     // argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
  #248 = Utf8               scala/util/Left$
  #249 = Class              #248          // scala/util/Left$
  #250 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #251 = NameAndType        #94:#250      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #252 = Methodref          #249.#251     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #253 = Utf8               (Ljava/lang/Object;)Largonaut/DecodeResult;
  #254 = NameAndType        #244:#253     // ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
  #255 = Methodref          #121.#254     // argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
  #256 = Utf8               name0
  #257 = Utf8               Largonaut/DecodeJson;
  #258 = Utf8               x$2
  #259 = Utf8               Right
  #260 = Utf8               ()Lscala/util/Right$;
  #261 = NameAndType        #259:#260     // Right:()Lscala/util/Right$;
  #262 = Methodref          #231.#261     // scala/package$.Right:()Lscala/util/Right$;
  #263 = Utf8               scala/util/Right$
  #264 = Class              #263          // scala/util/Right$
  #265 = NameAndType        #94:#210      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #266 = Methodref          #264.#265     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #267 = Utf8               Ljava/lang/Object;
  #268 = Utf8               ()V
  #269 = NameAndType        #37:#268      // "<init>":()V
  #270 = Methodref          #4.#269       // java/lang/Object."<init>":()V
  #271 = Utf8               $deserializeLambda$
  #272 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #273 = Utf8               scala/runtime/LambdaDeserialize
  #274 = Class              #273          // scala/runtime/LambdaDeserialize
  #275 = Utf8               bootstrap
  #276 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #277 = NameAndType        #275:#276     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #278 = Methodref          #274.#277     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #279 = MethodHandle       6:#278        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #280 = Utf8               lambdaDeserialize
  #281 = NameAndType        #280:#272     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #282 = InvokeDynamic      #1:#281       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #283 = Utf8               Code
  #284 = Utf8               LineNumberTable
  #285 = Utf8               LocalVariableTable
  #286 = Utf8               MethodParameters
  #287 = Utf8               StackMapTable
  #288 = Utf8               Signature
  #289 = Utf8               InnerClasses
  #290 = Utf8               SourceFile
  #291 = Utf8               RuntimeVisibleAnnotations
  #292 = Utf8               BootstrapMethods
  #293 = Utf8               ScalaInlineInfo
  #294 = Utf8               ScalaSig
{
  public java.lang.String typeField();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #24                 // String type
         2: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Largonaut/derive/JsonSumTypeFieldCodec;

  public java.lang.String toTypeValue(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Largonaut/derive/JsonSumTypeFieldCodec;
            0       2     1  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final

  public scala.runtime.Nothing$ encodeEmpty();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #34                 // class java/lang/IllegalArgumentException
         3: dup
         4: ldc           #36                 // String empty
         6: invokespecial #40                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Largonaut/derive/JsonSumTypeFieldCodec;

  public argonaut.Json encodeField(scala.util.Either<argonaut.Json, scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/util/Either;)Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #46                 // class scala/util/Left
         6: ifeq          31
         9: aload_3
        10: checkcast     #46                 // class scala/util/Left
        13: astore        4
        15: aload         4
        17: invokevirtual #50                 // Method scala/util/Left.value:()Ljava/lang/Object;
        20: checkcast     #52                 // class argonaut/Json
        23: astore        5
        25: aload         5
        27: astore_2
        28: goto          143
        31: goto          34
        34: aload_3
        35: instanceof    #54                 // class scala/util/Right
        38: ifeq          131
        41: aload_3
        42: checkcast     #54                 // class scala/util/Right
        45: astore        6
        47: aload         6
        49: invokevirtual #55                 // Method scala/util/Right.value:()Ljava/lang/Object;
        52: checkcast     #57                 // class scala/Tuple2
        55: astore        7
        57: aload         7
        59: ifnull        128
        62: aload         7
        64: invokevirtual #60                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        67: checkcast     #62                 // class java/lang/String
        70: astore        8
        72: aload         7
        74: invokevirtual #65                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        77: checkcast     #52                 // class argonaut/Json
        80: astore        9
        82: getstatic     #69                 // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        85: getstatic     #74                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        88: aload_0
        89: invokevirtual #76                 // Method typeField:()Ljava/lang/String;
        92: invokevirtual #80                 // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        95: getstatic     #85                 // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        98: invokevirtual #89                 // Method argonaut/Json$.jString:()Lscala/Function1;
       101: aload_0
       102: aload         8
       104: invokevirtual #91                 // Method toTypeValue:(Ljava/lang/String;)Ljava/lang/String;
       107: invokeinterface #96,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       112: invokevirtual #100                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       115: astore        10
       117: aload         9
       119: aload         10
       121: invokevirtual #104                // Method argonaut/Json.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
       124: astore_2
       125: goto          143
       128: goto          134
       131: goto          134
       134: new           #106                // class scala/MatchError
       137: dup
       138: aload_3
       139: invokespecial #109                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       142: athrow
       143: aload_2
       144: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 93
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class scala/util/Either, top, class scala/util/Either, top, top, class scala/util/Right, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class scala/util/Either, top, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class scala/util/Either, class argonaut/Json, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 64: 0
        line 65: 2
        line 66: 34
        line 67: 82
        line 66: 128
        line 64: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23       8     5 other   Largonaut/Json;
           70      58     8  name   Ljava/lang/String;
           80      48     9 content   Largonaut/Json;
            0     145     0  this   Largonaut/derive/JsonSumTypeFieldCodec;
            0     145     1 fieldOrObj   Lscala/util/Either;
    Signature: #43                          // (Lscala/util/Either<Largonaut/Json;Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      fieldOrObj                     final

  public argonaut.DecodeResult<scala.runtime.Nothing$> decodeEmpty(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: getstatic     #124                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
         3: aload_1
         4: aload_0
         5: invokevirtual #76                 // Method typeField:()Ljava/lang/String;
         8: invokevirtual #130                // Method argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
        11: invokevirtual #136                // Method argonaut/ACursor.focus:()Lscala/Option;
        14: astore_3
        15: getstatic     #141                // Field scala/None$.MODULE$:Lscala/None$;
        18: aload_3
        19: invokevirtual #145                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifeq          31
        25: ldc           #147                // String no type found
        27: astore_2
        28: goto          95
        31: goto          34
        34: aload_3
        35: instanceof    #149                // class scala/Some
        38: ifeq          83
        41: aload_3
        42: checkcast     #149                // class scala/Some
        45: astore        4
        47: aload         4
        49: invokevirtual #150                // Method scala/Some.value:()Ljava/lang/Object;
        52: checkcast     #52                 // class argonaut/Json
        55: astore        5
        57: new           #152                // class java/lang/StringBuilder
        60: dup
        61: ldc           #153                // int 19
        63: invokespecial #156                // Method java/lang/StringBuilder."<init>":(I)V
        66: ldc           #158                // String unrecognized type:
        68: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        71: aload         5
        73: invokevirtual #165                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        76: invokevirtual #168                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        79: astore_2
        80: goto          95
        83: goto          86
        86: new           #106                // class scala/MatchError
        89: dup
        90: aload_3
        91: invokespecial #109                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        94: athrow
        95: aload_2
        96: aload_1
        97: invokevirtual #172                // Method argonaut/HCursor.history:()Largonaut/CursorHistory;
       100: invokevirtual #176                // Method argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
       103: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class argonaut/HCursor, top, class scala/Option ]
          stack = [ class argonaut/DecodeResult$ ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class argonaut/DecodeResult$ ]
        frame_type = 112 /* same_locals_1_stack_item */
          stack = [ class argonaut/DecodeResult$ ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class argonaut/DecodeResult$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class argonaut/HCursor, class java/lang/String, class scala/Option ]
          stack = [ class argonaut/DecodeResult$ ]
      LineNumberTable:
        line 71: 0
        line 72: 3
        line 73: 15
        line 74: 34
        line 72: 86
        line 76: 96
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      28     5 type0   Largonaut/Json;
            0     104     0  this   Largonaut/derive/JsonSumTypeFieldCodec;
            0     104     1 cursor   Largonaut/HCursor;
    Signature: #118                         // (Largonaut/HCursor;)Largonaut/DecodeResult<Lscala/runtime/Nothing$;>;
    MethodParameters:
      Name                           Flags
      cursor                         final

  public <A extends java.lang.Object> argonaut.DecodeResult<scala.util.Either<argonaut.ACursor, A>> decodeField(java.lang.String, argonaut.HCursor, argonaut.DecodeJson<A>);
    descriptor: (Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=9, args_size=4
         0: aload_2
         1: aload_0
         2: invokevirtual #76                 // Method typeField:()Ljava/lang/String;
         5: invokevirtual #130                // Method argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
         8: getstatic     #189                // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
        11: invokevirtual #193                // Method argonaut/DecodeJson$.StringDecodeJson:()Largonaut/DecodeJson;
        14: invokevirtual #197                // Method argonaut/ACursor.as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
        17: invokevirtual #203                // Method argonaut/DecodeResult.result:()Lscala/util/Either;
        20: astore        5
        22: aload         5
        24: instanceof    #54                 // class scala/util/Right
        27: ifeq          100
        30: aload         5
        32: checkcast     #54                 // class scala/util/Right
        35: astore        6
        37: aload         6
        39: invokevirtual #55                 // Method scala/util/Right.value:()Ljava/lang/Object;
        42: checkcast     #62                 // class java/lang/String
        45: astore        7
        47: aload_0
        48: aload_1
        49: invokevirtual #91                 // Method toTypeValue:(Ljava/lang/String;)Ljava/lang/String;
        52: aload         7
        54: astore        8
        56: dup
        57: ifnonnull     69
        60: pop
        61: aload         8
        63: ifnull        77
        66: goto          97
        69: aload         8
        71: invokevirtual #145                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        74: ifeq          97
        77: aload_3
        78: aload_2
        79: invokeinterface #207,  2          // InterfaceMethod argonaut/DecodeJson.decode:(Largonaut/HCursor;)Largonaut/DecodeResult;
        84: invokedynamic #225,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        89: invokevirtual #229                // Method argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
        92: astore        4
        94: goto          130
        97: goto          103
       100: goto          103
       103: getstatic     #124                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
       106: getstatic     #234                // Field scala/package$.MODULE$:Lscala/package$;
       109: invokevirtual #238                // Method scala/package$.Left:()Lscala/util/Left$;
       112: getstatic     #243                // Field argonaut/ACursor$.MODULE$:Largonaut/ACursor$;
       115: aload_2
       116: invokevirtual #247                // Method argonaut/ACursor$.ok:(Largonaut/HCursor;)Largonaut/ACursor;
       119: invokevirtual #252                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       122: invokevirtual #255                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
       125: astore        4
       127: goto          130
       130: aload         4
       132: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 69
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class java/lang/String, class argonaut/HCursor, class argonaut/DecodeJson, top, class scala/util/Either, class scala/util/Right, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 19 /* same */
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class argonaut/derive/JsonSumTypeFieldCodec, class java/lang/String, class argonaut/HCursor, class argonaut/DecodeJson, class argonaut/DecodeResult, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 79: 0
        line 80: 22
        line 81: 77
        line 80: 97
        line 83: 103
        line 79: 130
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           45      55     7 name0   Ljava/lang/String;
            0     133     0  this   Largonaut/derive/JsonSumTypeFieldCodec;
            0     133     1  name   Ljava/lang/String;
            0     133     2 cursor   Largonaut/HCursor;
            0     133     3 decode   Largonaut/DecodeJson;
    Signature: #183                         // <A:Ljava/lang/Object;>(Ljava/lang/String;Largonaut/HCursor;Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<Lscala/util/Either<Largonaut/ACursor;TA;>;>;
    MethodParameters:
      Name                           Flags
      name                           final
      cursor                         final
      decode                         final

  public static final scala.util.Right $anonfun$decodeField$2(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/util/Right;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #234                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #262                // Method scala/package$.Right:()Lscala/util/Right$;
         6: aload_0
         7: invokevirtual #266                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        10: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public argonaut.derive.JsonSumTypeFieldCodec();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #270                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/derive/JsonSumTypeFieldCodec;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #282,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // ArrowAssoc$=class scala/Predef$ArrowAssoc$ of class scala/Predef
SourceFile: "JsonSumCodec.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u001d4A\u0001C\u0005\u0001\u001d!)\u0011\u0004\u0001C\u00015!)A\u0004\u0001C\u0001;!)\u0011\u0006\u0001C\u0001U!)Q\u0006\u0001C\u0001]!)!\u0007\u0001C\u0001g!)a\t\u0001C\u0001\u000f\")\u0001\u000b\u0001C\u0001#\n)\"j]8o\'VlG+\u001f9f\r&,G\u000eZ\"pI\u0016\u001c\'B\u0001\u0006\f\u0003\u0019!WM]5wK*\tA\"\u0001\u0005be\u001e|g.Y;u\u0007\u0001\u00192\u0001A\b\u0016!\t\u00012#D\u0001\u0012\u0015\u0005\u0011\u0012!B:dC2\f\u0017B\u0001\u000b\u0012\u0005\u0019\te.\u001f*fMB\u0011acF\u0007\u0002\u0013%\u0011\u0001$\u0003\u0002\r\u0015N|gnU;n\u0007>$WmY\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003m\u0001\"A\u0006\u0001\u0002\u0013QL\b/\u001a$jK2$W#\u0001\u0010\u0011\u0005}1cB\u0001\u0011%!\t\t\u0013#D\u0001#\u0015\t\u0019S\"\u0001\u0004=e>|GOP\u0005\u0003KE\ta\u0001\u0015:fI\u00164\u0017BA\u0014)\u0005\u0019\u0019FO]5oO*\u0011Q%E\u0001\fi>$\u0016\u0010]3WC2,X\r\u0006\u0002\u001fW!)Af\u0001a\u0001=\u0005!a.Y7f\u0003-)gnY8eK\u0016k\u0007\u000f^=\u0016\u0003=\u0002\"\u0001\u0005\u0019\n\u0005E\n\"a\u0002(pi\"LgnZ\u0001\fK:\u001cw\u000eZ3GS\u0016dG\r\u0006\u00025qA\u0011QGN\u0007\u0002\u0017%\u0011qg\u0003\u0002\u0005\u0015N|g\u000eC\u0003:\u000b\u0001\u0007!(\u0001\u0006gS\u0016dGm\u0014:PE*\u0004Ba\u000f!5\u0007:\u0011AH\u0010\b\u0003CuJ\u0011AE\u0005\u0003\u007fE\tq\u0001]1dW\u0006<W-\u0003\u0002B\u0005\n1Q)\u001b;iKJT!aP\t\u0011\tA!e\u0004N\u0005\u0003\u000bF\u0011a\u0001V;qY\u0016\u0014\u0014a\u00033fG>$W-R7qif$\"\u0001S&\u0011\u0007UJu&\u0003\u0002K\u0017\taA)Z2pI\u0016\u0014Vm];mi\")AJ\u0002a\u0001\u001b\u000611-\u001e:t_J\u0004\"!\u000e(\n\u0005=[!a\u0002%DkJ\u001cxN]\u0001\fI\u0016\u001cw\u000eZ3GS\u0016dG-\u0006\u0002S5R!1\u000bY1c!\r)\u0014\n\u0016\t\u0005w\u0001+\u0006\f\u0005\u00026-&\u0011qk\u0003\u0002\b\u0003\u000e+(o]8s!\tI&\f\u0004\u0001\u0005\u000bm;!\u0019\u0001/\u0003\u0003\u0005\u000b\"aL/\u0011\u0005Aq\u0016BA0\u0012\u0005\r\te.\u001f\u0005\u0006Y\u001d\u0001\rA\b\u0005\u0006\u0019\u001e\u0001\r!\u0014\u0005\u0006G\u001e\u0001\r\u0001Z\u0001\u0007I\u0016\u001cw\u000eZ3\u0011\u0007U*\u0007,\u0003\u0002g\u0017\tQA)Z2pI\u0016T5o\u001c8"
    )
BootstrapMethods:
  0: #223 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #208 (Ljava/lang/Object;)Ljava/lang/Object;
      #213 REF_invokeStatic argonaut/derive/JsonSumTypeFieldCodec.$anonfun$decodeField$2:(Ljava/lang/Object;)Lscala/util/Right;
      #214 (Ljava/lang/Object;)Lscala/util/Right;
      #215 5
      #216 1
      #214 (Ljava/lang/Object;)Lscala/util/Right;
  1: #279 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #213 REF_invokeStatic argonaut/derive/JsonSumTypeFieldCodec.$anonfun$decodeField$2:(Ljava/lang/Object;)Lscala/util/Right;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 D1 00 D2 01 00 25 01 0C 00 00 74
   00 75 00 00 B5 00 B6 00 00 1F 00 20 00 00 29 00
   2A 00 00 1B 00 1C 00 00 15 00 16 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
