Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/antlr/runtime/debug/BlankDebugEventListener.class
  Last modified May 29, 2022; size 3636 bytes
  SHA-256 checksum be4e0793ccf935c0ce9a58e3ca7336847fbb0cff2f55ac32a09c0e37c07a291c
  Compiled from "BlankDebugEventListener.java"
public class org.antlr.runtime.debug.BlankDebugEventListener implements org.antlr.runtime.debug.DebugEventListener
  minor version: 0
  major version: 49
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/antlr/runtime/debug/BlankDebugEventListener
  super_class: #3                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 32, attributes: 1
Constant pool:
   #1 = Methodref          #3.#83         // java/lang/Object."<init>":()V
   #2 = Class              #84            // org/antlr/runtime/debug/BlankDebugEventListener
   #3 = Class              #85            // java/lang/Object
   #4 = Class              #86            // org/antlr/runtime/debug/DebugEventListener
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Utf8               Code
   #8 = Utf8               LineNumberTable
   #9 = Utf8               LocalVariableTable
  #10 = Utf8               this
  #11 = Utf8               Lorg/antlr/runtime/debug/BlankDebugEventListener;
  #12 = Utf8               enterRule
  #13 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #14 = Utf8               grammarFileName
  #15 = Utf8               Ljava/lang/String;
  #16 = Utf8               ruleName
  #17 = Utf8               exitRule
  #18 = Utf8               enterAlt
  #19 = Utf8               (I)V
  #20 = Utf8               alt
  #21 = Utf8               I
  #22 = Utf8               enterSubRule
  #23 = Utf8               decisionNumber
  #24 = Utf8               exitSubRule
  #25 = Utf8               enterDecision
  #26 = Utf8               (IZ)V
  #27 = Utf8               couldBacktrack
  #28 = Utf8               Z
  #29 = Utf8               exitDecision
  #30 = Utf8               location
  #31 = Utf8               (II)V
  #32 = Utf8               line
  #33 = Utf8               pos
  #34 = Utf8               consumeToken
  #35 = Utf8               (Lorg/antlr/runtime/Token;)V
  #36 = Utf8               token
  #37 = Utf8               Lorg/antlr/runtime/Token;
  #38 = Utf8               consumeHiddenToken
  #39 = Utf8               LT
  #40 = Utf8               (ILorg/antlr/runtime/Token;)V
  #41 = Utf8               i
  #42 = Utf8               t
  #43 = Utf8               mark
  #44 = Utf8               rewind
  #45 = Utf8               beginBacktrack
  #46 = Utf8               level
  #47 = Utf8               endBacktrack
  #48 = Utf8               successful
  #49 = Utf8               recognitionException
  #50 = Utf8               (Lorg/antlr/runtime/RecognitionException;)V
  #51 = Utf8               e
  #52 = Utf8               Lorg/antlr/runtime/RecognitionException;
  #53 = Utf8               beginResync
  #54 = Utf8               endResync
  #55 = Utf8               semanticPredicate
  #56 = Utf8               (ZLjava/lang/String;)V
  #57 = Utf8               result
  #58 = Utf8               predicate
  #59 = Utf8               commence
  #60 = Utf8               terminate
  #61 = Utf8               consumeNode
  #62 = Utf8               (Ljava/lang/Object;)V
  #63 = Utf8               Ljava/lang/Object;
  #64 = Utf8               (ILjava/lang/Object;)V
  #65 = Utf8               nilNode
  #66 = Utf8               errorNode
  #67 = Utf8               createNode
  #68 = Utf8               (Ljava/lang/Object;Lorg/antlr/runtime/Token;)V
  #69 = Utf8               node
  #70 = Utf8               becomeRoot
  #71 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #72 = Utf8               newRoot
  #73 = Utf8               oldRoot
  #74 = Utf8               addChild
  #75 = Utf8               root
  #76 = Utf8               child
  #77 = Utf8               setTokenBoundaries
  #78 = Utf8               (Ljava/lang/Object;II)V
  #79 = Utf8               tokenStartIndex
  #80 = Utf8               tokenStopIndex
  #81 = Utf8               SourceFile
  #82 = Utf8               BlankDebugEventListener.java
  #83 = NameAndType        #5:#6          // "<init>":()V
  #84 = Utf8               org/antlr/runtime/debug/BlankDebugEventListener
  #85 = Utf8               java/lang/Object
  #86 = Utf8               org/antlr/runtime/debug/DebugEventListener
{
  public org.antlr.runtime.debug.BlankDebugEventListener();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;

  public void enterRule(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 grammarFileName   Ljava/lang/String;
            0       1     2 ruleName   Ljava/lang/String;

  public void exitRule(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 grammarFileName   Ljava/lang/String;
            0       1     2 ruleName   Ljava/lang/String;

  public void enterAlt(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 40: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1   alt   I

  public void enterSubRule(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 decisionNumber   I

  public void exitSubRule(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 decisionNumber   I

  public void enterDecision(int, boolean);
    descriptor: (IZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 decisionNumber   I
            0       1     2 couldBacktrack   Z

  public void exitDecision(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 decisionNumber   I

  public void location(int, int);
    descriptor: (II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1  line   I
            0       1     2   pos   I

  public void consumeToken(org.antlr.runtime.Token);
    descriptor: (Lorg/antlr/runtime/Token;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 token   Lorg/antlr/runtime/Token;

  public void consumeHiddenToken(org.antlr.runtime.Token);
    descriptor: (Lorg/antlr/runtime/Token;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 token   Lorg/antlr/runtime/Token;

  public void LT(int, org.antlr.runtime.Token);
    descriptor: (ILorg/antlr/runtime/Token;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     i   I
            0       1     2     t   Lorg/antlr/runtime/Token;

  public void mark(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     i   I

  public void rewind(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     i   I

  public void rewind();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;

  public void beginBacktrack(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 level   I

  public void endBacktrack(int, boolean);
    descriptor: (IZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 level   I
            0       1     2 successful   Z

  public void recognitionException(org.antlr.runtime.RecognitionException);
    descriptor: (Lorg/antlr/runtime/RecognitionException;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     e   Lorg/antlr/runtime/RecognitionException;

  public void beginResync();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;

  public void endResync();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;

  public void semanticPredicate(boolean, java.lang.String);
    descriptor: (ZLjava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 result   Z
            0       1     2 predicate   Ljava/lang/String;

  public void commence();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;

  public void terminate();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;

  public void consumeNode(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     t   Ljava/lang/Object;

  public void LT(int, java.lang.Object);
    descriptor: (ILjava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     i   I
            0       1     2     t   Ljava/lang/Object;

  public void nilNode(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     t   Ljava/lang/Object;

  public void errorNode(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     t   Ljava/lang/Object;

  public void createNode(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     t   Ljava/lang/Object;

  public void createNode(java.lang.Object, org.antlr.runtime.Token);
    descriptor: (Ljava/lang/Object;Lorg/antlr/runtime/Token;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1  node   Ljava/lang/Object;
            0       1     2 token   Lorg/antlr/runtime/Token;

  public void becomeRoot(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1 newRoot   Ljava/lang/Object;
            0       1     2 oldRoot   Ljava/lang/Object;

  public void addChild(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=3, args_size=3
         0: return
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1  root   Ljava/lang/Object;
            0       1     2 child   Ljava/lang/Object;

  public void setTokenBoundaries(java.lang.Object, int, int);
    descriptor: (Ljava/lang/Object;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=4, args_size=4
         0: return
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/antlr/runtime/debug/BlankDebugEventListener;
            0       1     1     t   Ljava/lang/Object;
            0       1     2 tokenStartIndex   I
            0       1     3 tokenStopIndex   I
}
SourceFile: "BlankDebugEventListener.java"
