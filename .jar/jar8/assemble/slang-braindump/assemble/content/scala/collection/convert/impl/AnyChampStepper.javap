Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/AnyChampStepper.class
  Last modified May 29, 2022; size 6595 bytes
  SHA-256 checksum f6547e4ef1888fd0db41a93b71bc4abf39ae5e2c12548df8b2918b535b57e313
  Compiled from "ChampStepper.scala"
public final class scala.collection.convert.impl.AnyChampStepper<A extends java.lang.Object, T extends scala.collection.immutable.Node<T>> extends scala.collection.convert.impl.ChampStepperBase<A, T, scala.collection.AnyStepper<A>, scala.collection.convert.impl.AnyChampStepper<A, T>> implements scala.collection.AnyStepper<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/AnyChampStepper
  super_class: #5                         // scala/collection/convert/impl/ChampStepperBase
  interfaces: 1, fields: 1, methods: 23, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/AnyChampStepper
    #2 = Class              #1            // scala/collection/convert/impl/AnyChampStepper
    #3 = Utf8               <A:Ljava/lang/Object;T:Lscala/collection/immutable/Node<TT;>;>Lscala/collection/convert/impl/ChampStepperBase<TA;TT;Lscala/collection/AnyStepper<TA;>;Lscala/collection/convert/impl/AnyChampStepper<TA;TT;>;>;Lscala/collection/AnyStepper<TA;>;
    #4 = Utf8               scala/collection/convert/impl/ChampStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/ChampStepperBase
    #6 = Utf8               scala/collection/AnyStepper
    #7 = Class              #6            // scala/collection/AnyStepper
    #8 = Utf8               ChampStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\t4Qa\u0003\u0007\u0003!QA\u0001\"\u000f\u0001\u0003\u0002\u0003\u0006IA\u000f\u0005\t{\u0001\u0011)\u0019!C\t}!A!\t\u0001B\u0001B\u0003%q\bC\u0003D\u0001\u0011\u0005A\tC\u0003H\u0001\u0011\u0005\u0001\nC\u0003J\u0001\u0011\u0005!j\u0002\u0004L\u0019!\u0005\u0001\u0003\u0014\u0004\u0007\u00171A\t\u0001E\'\t\u000b\rCA\u0011A)\t\u000bICA\u0011A*\u0003\u001f\u0005s\u0017p\u00115b[B\u001cF/\u001a9qKJT!!\u0004\b\u0002\t%l\u0007\u000f\u001c\u0006\u0003\u001fA\tqaY8om\u0016\u0014HO\u0003\u0002\u0012%\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003M\tQa]2bY\u0006,2!\u0006\u000f)\'\r\u0001a\u0003\u000e\t\u0007/aQr\u0005\u000e\u001d\u000e\u00031I!!\u0007\u0007\u0003!\rC\u0017-\u001c9Ti\u0016\u0004\b/\u001a:CCN,\u0007CA\u000e\u001d\u0019\u0001!Q!\b\u0001C\u0002}\u0011\u0011!Q\u0002\u0001#\t\u0001C\u0005\u0005\u0002\"E5\t!#\u0003\u0002$%\t9aj\u001c;iS:<\u0007CA\u0011&\u0013\t1#CA\u0002B]f\u0004\"a\u0007\u0015\u0005\u000b%\u0002!\u0019\u0001\u0016\u0003\u0003Q\u000b\"a\u000b\u0018\u0011\u0005\u0005b\u0013BA\u0017\u0013\u0005\u0011qU\u000f\u001c7\u0011\u0007=\u0012t%D\u00011\u0015\t\t\u0004#A\u0005j[6,H/\u00192mK&\u00111\u0007\r\u0002\u0005\u001d>$W\rE\u00026mii\u0011\u0001E\u0005\u0003oA\u0011!\"\u00118z\'R,\u0007\u000f]3s!\u00119\u0002AG\u0014\u0002\u0011}k\u0017\r_*ju\u0016\u0004\"!I\u001e\n\u0005q\u0012\"aA%oi\u00069Q\r\u001f;sC\u000e$X#A \u0011\u000b\u0005\u0002uE\u000f\u000e\n\u0005\u0005\u0013\"!\u0003$v]\u000e$\u0018n\u001c83\u0003!)\u0007\u0010\u001e:bGR\u0004\u0013A\u0002\u001fj]&$h\bF\u00029\u000b\u001aCQ!\u000f\u0003A\u0002iBQ!\u0010\u0003A\u0002}\n\u0001B\\3yiN#X\r\u001d\u000b\u00025\u0005I1/Z7jG2|g.\u001a\u000b\u0002q\u0005y\u0011I\\=DQ\u0006l\u0007o\u0015;faB,\'\u000f\u0005\u0002\u0018\u0011M\u0011\u0001B\u0014\t\u0003C=K!\u0001\u0015\n\u0003\r\u0005s\u0017PU3g)\u0005a\u0015\u0001\u00024s_6,2\u0001V,Z)\u0011)FL\u00181\u0011\t]\u0001a\u000b\u0017\t\u00037]#Q!\b\u0006C\u0002}\u0001\"aG-\u0005\u000b%R!\u0019\u0001.\u0012\u0005-Z\u0006cA\u001831\")QL\u0003a\u0001u\u00059Q.\u0019=TSj,\u0007\"B0\u000b\u0001\u0004A\u0016\u0001\u0002:p_RDQ!\u0010\u0006A\u0002\u0005\u0004R!\t!YuY\u0003
   #12 = Utf8               extract
   #13 = Utf8               Lscala/Function2;
   #14 = Utf8               Lscala/Function2<TT;Ljava/lang/Object;TA;>;
   #15 = Utf8               from
   #16 = Utf8               (ILscala/collection/immutable/Node;Lscala/Function2;)Lscala/collection/convert/impl/AnyChampStepper;
   #17 = Utf8               <A:Ljava/lang/Object;T:Lscala/collection/immutable/Node<TT;>;>(ITT;Lscala/Function2<TT;Ljava/lang/Object;TA;>;)Lscala/collection/convert/impl/AnyChampStepper<TA;TT;>;
   #18 = Utf8               maxSize
   #19 = Utf8               root
   #20 = Utf8               scala/collection/convert/impl/AnyChampStepper$
   #21 = Class              #20           // scala/collection/convert/impl/AnyChampStepper$
   #22 = Utf8               MODULE$
   #23 = Utf8               Lscala/collection/convert/impl/AnyChampStepper$;
   #24 = NameAndType        #22:#23       // MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
   #25 = Fieldref           #21.#24       // scala/collection/convert/impl/AnyChampStepper$.MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
   #26 = Utf8               <init>
   #27 = Utf8               (ILscala/Function2;)V
   #28 = NameAndType        #26:#27       // "<init>":(ILscala/Function2;)V
   #29 = Methodref          #2.#28        // scala/collection/convert/impl/AnyChampStepper."<init>":(ILscala/Function2;)V
   #30 = Utf8               initRoot
   #31 = Utf8               (Lscala/collection/immutable/Node;)V
   #32 = NameAndType        #30:#31       // initRoot:(Lscala/collection/immutable/Node;)V
   #33 = Methodref          #2.#32        // scala/collection/convert/impl/AnyChampStepper.initRoot:(Lscala/collection/immutable/Node;)V
   #34 = Utf8               I
   #35 = Utf8               Lscala/collection/immutable/Node;
   #36 = Utf8               from_ans
   #37 = Utf8               Lscala/collection/convert/impl/AnyChampStepper;
   #38 = Utf8               spliterator
   #39 = Utf8               ()Ljava/util/Spliterator;
   #40 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<TB;>;
   #41 = Utf8               spliterator$
   #42 = Utf8               (Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
   #43 = NameAndType        #41:#42       // spliterator$:(Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
   #44 = InterfaceMethodref #7.#43        // scala/collection/AnyStepper.spliterator$:(Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
   #45 = Utf8               this
   #46 = Utf8               javaIterator
   #47 = Utf8               ()Ljava/util/Iterator;
   #48 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<TB;>;
   #49 = Utf8               javaIterator$
   #50 = Utf8               (Lscala/collection/AnyStepper;)Ljava/util/Iterator;
   #51 = NameAndType        #49:#50       // javaIterator$:(Lscala/collection/AnyStepper;)Ljava/util/Iterator;
   #52 = InterfaceMethodref #7.#51        // scala/collection/AnyStepper.javaIterator$:(Lscala/collection/AnyStepper;)Ljava/util/Iterator;
   #53 = Utf8               nextStep$mcD$sp
   #54 = Utf8               ()D
   #55 = Utf8               scala/collection/Stepper
   #56 = Class              #55           // scala/collection/Stepper
   #57 = Utf8               nextStep$mcD$sp$
   #58 = Utf8               (Lscala/collection/Stepper;)D
   #59 = NameAndType        #57:#58       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #60 = InterfaceMethodref #56.#59       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #61 = Utf8               nextStep$mcI$sp
   #62 = Utf8               ()I
   #63 = Utf8               nextStep$mcI$sp$
   #64 = Utf8               (Lscala/collection/Stepper;)I
   #65 = NameAndType        #63:#64       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #66 = InterfaceMethodref #56.#65       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #67 = Utf8               nextStep$mcJ$sp
   #68 = Utf8               ()J
   #69 = Utf8               nextStep$mcJ$sp$
   #70 = Utf8               (Lscala/collection/Stepper;)J
   #71 = NameAndType        #69:#70       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #72 = InterfaceMethodref #56.#71       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #73 = Utf8               trySplit$mcD$sp
   #74 = Utf8               ()Lscala/collection/Stepper;
   #75 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #76 = Utf8               trySplit$mcD$sp$
   #77 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #78 = NameAndType        #76:#77       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #79 = InterfaceMethodref #56.#78       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #80 = Utf8               trySplit$mcI$sp
   #81 = Utf8               trySplit$mcI$sp$
   #82 = NameAndType        #81:#77       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #83 = InterfaceMethodref #56.#82       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #84 = Utf8               trySplit$mcJ$sp
   #85 = Utf8               trySplit$mcJ$sp$
   #86 = NameAndType        #85:#77       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #87 = InterfaceMethodref #56.#86       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #88 = Utf8               spliterator$mcD$sp
   #89 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #90 = Utf8               spliterator$mcD$sp$
   #91 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #92 = NameAndType        #90:#91       // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #93 = InterfaceMethodref #56.#92       // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #94 = Utf8               spliterator$mcI$sp
   #95 = Utf8               spliterator$mcI$sp$
   #96 = NameAndType        #95:#91       // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #97 = InterfaceMethodref #56.#96       // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #98 = Utf8               spliterator$mcJ$sp
   #99 = Utf8               spliterator$mcJ$sp$
  #100 = NameAndType        #99:#91       // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #101 = InterfaceMethodref #56.#100      // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
  #102 = Utf8               javaIterator$mcD$sp
  #103 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
  #104 = Utf8               javaIterator$mcD$sp$
  #105 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
  #106 = NameAndType        #104:#105     // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #107 = InterfaceMethodref #56.#106      // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #108 = Utf8               javaIterator$mcI$sp
  #109 = Utf8               javaIterator$mcI$sp$
  #110 = NameAndType        #109:#105     // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #111 = InterfaceMethodref #56.#110      // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #112 = Utf8               javaIterator$mcJ$sp
  #113 = Utf8               javaIterator$mcJ$sp$
  #114 = NameAndType        #113:#105     // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #115 = InterfaceMethodref #56.#114      // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
  #116 = Utf8               iterator
  #117 = Utf8               ()Lscala/collection/Iterator;
  #118 = Utf8               ()Lscala/collection/Iterator<TA;>;
  #119 = Utf8               iterator$
  #120 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #121 = NameAndType        #119:#120     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #122 = InterfaceMethodref #56.#121      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #123 = Utf8               ()Lscala/Function2;
  #124 = Utf8               ()Lscala/Function2<TT;Ljava/lang/Object;TA;>;
  #125 = NameAndType        #12:#13       // extract:Lscala/Function2;
  #126 = Fieldref           #2.#125       // scala/collection/convert/impl/AnyChampStepper.extract:Lscala/Function2;
  #127 = Utf8               nextStep
  #128 = Utf8               ()Ljava/lang/Object;
  #129 = Utf8               ()TA;
  #130 = Utf8               hasStep
  #131 = Utf8               ()Z
  #132 = NameAndType        #130:#131     // hasStep:()Z
  #133 = Methodref          #2.#132       // scala/collection/convert/impl/AnyChampStepper.hasStep:()Z
  #134 = NameAndType        #12:#123      // extract:()Lscala/Function2;
  #135 = Methodref          #2.#134       // scala/collection/convert/impl/AnyChampStepper.extract:()Lscala/Function2;
  #136 = Utf8               currentValueNode
  #137 = Utf8               ()Lscala/collection/immutable/Node;
  #138 = NameAndType        #136:#137     // currentValueNode:()Lscala/collection/immutable/Node;
  #139 = Methodref          #2.#138       // scala/collection/convert/impl/AnyChampStepper.currentValueNode:()Lscala/collection/immutable/Node;
  #140 = Utf8               currentValueCursor
  #141 = NameAndType        #140:#62      // currentValueCursor:()I
  #142 = Methodref          #2.#141       // scala/collection/convert/impl/AnyChampStepper.currentValueCursor:()I
  #143 = Utf8               java/lang/Integer
  #144 = Class              #143          // java/lang/Integer
  #145 = Utf8               valueOf
  #146 = Utf8               (I)Ljava/lang/Integer;
  #147 = NameAndType        #145:#146     // valueOf:(I)Ljava/lang/Integer;
  #148 = Methodref          #144.#147     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #149 = Utf8               scala/Function2
  #150 = Class              #149          // scala/Function2
  #151 = Utf8               apply
  #152 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #153 = NameAndType        #151:#152     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #154 = InterfaceMethodref #150.#153     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #155 = Utf8               currentValueCursor_$eq
  #156 = Utf8               (I)V
  #157 = NameAndType        #155:#156     // currentValueCursor_$eq:(I)V
  #158 = Methodref          #2.#157       // scala/collection/convert/impl/AnyChampStepper.currentValueCursor_$eq:(I)V
  #159 = NameAndType        #18:#62       // maxSize:()I
  #160 = Methodref          #2.#159       // scala/collection/convert/impl/AnyChampStepper.maxSize:()I
  #161 = Utf8               maxSize_$eq
  #162 = NameAndType        #161:#156     // maxSize_$eq:(I)V
  #163 = Methodref          #2.#162       // scala/collection/convert/impl/AnyChampStepper.maxSize_$eq:(I)V
  #164 = Utf8               scala/collection/Stepper$
  #165 = Class              #164          // scala/collection/Stepper$
  #166 = Utf8               Lscala/collection/Stepper$;
  #167 = NameAndType        #22:#166      // MODULE$:Lscala/collection/Stepper$;
  #168 = Fieldref           #165.#167     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #169 = Utf8               java/util/NoSuchElementException
  #170 = Class              #169          // java/util/NoSuchElementException
  #171 = Utf8               Empty Stepper
  #172 = String             #171          // Empty Stepper
  #173 = Utf8               (Ljava/lang/String;)V
  #174 = NameAndType        #26:#173      // "<init>":(Ljava/lang/String;)V
  #175 = Methodref          #170.#174     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #176 = Utf8               ans
  #177 = Utf8               Ljava/lang/Object;
  #178 = Utf8               semiclone
  #179 = Utf8               ()Lscala/collection/convert/impl/AnyChampStepper;
  #180 = Utf8               ()Lscala/collection/convert/impl/AnyChampStepper<TA;TT;>;
  #181 = Utf8               trySplit
  #182 = NameAndType        #181:#128     // trySplit:()Ljava/lang/Object;
  #183 = Methodref          #2.#182       // scala/collection/convert/impl/AnyChampStepper.trySplit:()Ljava/lang/Object;
  #184 = Utf8               ()Lscala/collection/AnyStepper;
  #185 = Utf8               ()Lscala/collection/convert/impl/ChampStepperBase;
  #186 = NameAndType        #178:#179     // semiclone:()Lscala/collection/convert/impl/AnyChampStepper;
  #187 = Methodref          #2.#186       // scala/collection/convert/impl/AnyChampStepper.semiclone:()Lscala/collection/convert/impl/AnyChampStepper;
  #188 = Utf8               (ILscala/Function2<TT;Ljava/lang/Object;TA;>;)V
  #189 = Utf8               _maxSize
  #190 = NameAndType        #26:#156      // "<init>":(I)V
  #191 = Methodref          #5.#190       // scala/collection/convert/impl/ChampStepperBase."<init>":(I)V
  #192 = Utf8               Signature
  #193 = Utf8               Code
  #194 = Utf8               LineNumberTable
  #195 = Utf8               LocalVariableTable
  #196 = Utf8               MethodParameters
  #197 = Utf8               StackMapTable
  #198 = Utf8               SourceFile
  #199 = Utf8               RuntimeVisibleAnnotations
  #200 = Utf8               ScalaInlineInfo
  #201 = Utf8               ScalaSig
{
  private final scala.Function2<T, java.lang.Object, A> extract;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/Function2<TT;Ljava/lang/Object;TA;>;

  public static <A extends java.lang.Object, T extends scala.collection.immutable.Node<T>> scala.collection.convert.impl.AnyChampStepper<A, T> from(int, T, scala.Function2<T, java.lang.Object, A>);
    descriptor: (ILscala/collection/immutable/Node;Lscala/Function2;)Lscala/collection/convert/impl/AnyChampStepper;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #25                 // Field scala/collection/convert/impl/AnyChampStepper$.MODULE$:Lscala/collection/convert/impl/AnyChampStepper$;
         3: pop
         4: new           #2                  // class scala/collection/convert/impl/AnyChampStepper
         7: dup
         8: iload_0
         9: aload_2
        10: invokespecial #29                 // Method "<init>":(ILscala/Function2;)V
        13: astore_3
        14: aload_3
        15: aload_1
        16: invokevirtual #33                 // Method initRoot:(Lscala/collection/immutable/Node;)V
        19: aload_3
        20: areturn
      LineNumberTable:
        line 175: 4
        line 176: 14
        line 177: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 maxSize   I
            0      21     1  root   Lscala/collection/immutable/Node;
            0      21     2 extract   Lscala/Function2;
           14       5     3 from_ans   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #17                          // <A:Ljava/lang/Object;T:Lscala/collection/immutable/Node<TT;>;>(ITT;Lscala/Function2<TT;Ljava/lang/Object;TA;>;)Lscala/collection/convert/impl/AnyChampStepper<TA;TT;>;
    MethodParameters:
      Name                           Flags
      maxSize                        final
      root                           final
      extract                        final

  public <B extends java.lang.Object> java.util.Spliterator<B> spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod scala/collection/AnyStepper.spliterator$:(Lscala/collection/AnyStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #40                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<TB;>;

  public <B extends java.lang.Object> java.util.Iterator<B> javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod scala/collection/AnyStepper.javaIterator$:(Lscala/collection/AnyStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #48                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<TB;>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #60                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #66                 // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #75                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #83                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #75                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #75                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #89                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #97                 // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #89                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #101                // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #89                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #107                // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #103                         // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #111                // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #103                         // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #115                // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #103                         // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<A> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #122                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #118                         // ()Lscala/collection/Iterator<TA;>;

  public scala.Function2<T, java.lang.Object, A> extract();
    descriptor: ()Lscala/Function2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #126                // Field extract:Lscala/Function2;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #124                         // ()Lscala/Function2<TT;Ljava/lang/Object;TA;>;

  public A nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #133                // Method hasStep:()Z
         4: ifeq          50
         7: aload_0
         8: invokevirtual #135                // Method extract:()Lscala/Function2;
        11: aload_0
        12: invokevirtual #139                // Method currentValueNode:()Lscala/collection/immutable/Node;
        15: aload_0
        16: invokevirtual #142                // Method currentValueCursor:()I
        19: invokestatic  #148                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        22: invokeinterface #154,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        27: astore_1
        28: aload_0
        29: aload_0
        30: invokevirtual #142                // Method currentValueCursor:()I
        33: iconst_1
        34: iadd
        35: invokevirtual #158                // Method currentValueCursor_$eq:(I)V
        38: aload_0
        39: aload_0
        40: invokevirtual #160                // Method maxSize:()I
        43: iconst_1
        44: isub
        45: invokevirtual #163                // Method maxSize_$eq:(I)V
        48: aload_1
        49: areturn
        50: getstatic     #168                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        53: pop
        54: new           #170                // class java/util/NoSuchElementException
        57: dup
        58: ldc           #172                // String Empty Stepper
        60: invokespecial #175                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        63: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 50 /* same */
      LineNumberTable:
        line 163: 0
        line 164: 7
        line 165: 28
        line 166: 38
        line 167: 48
        line 169: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      21     1   ans   Ljava/lang/Object;
            0      64     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #129                         // ()TA;

  public scala.collection.convert.impl.AnyChampStepper<A, T> semiclone();
    descriptor: ()Lscala/collection/convert/impl/AnyChampStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class scala/collection/convert/impl/AnyChampStepper
         3: dup
         4: iconst_0
         5: aload_0
         6: invokevirtual #135                // Method extract:()Lscala/Function2;
         9: invokespecial #29                 // Method "<init>":(ILscala/Function2;)V
        12: areturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/convert/impl/AnyChampStepper;
    Signature: #180                         // ()Lscala/collection/convert/impl/AnyChampStepper<TA;TT;>;

  public final scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #183                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #56                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/AnyChampStepper;

  public final scala.collection.AnyStepper trySplit();
    descriptor: ()Lscala/collection/AnyStepper;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #183                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/AnyStepper
         7: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/AnyChampStepper;

  public scala.collection.convert.impl.ChampStepperBase semiclone();
    descriptor: ()Lscala/collection/convert/impl/ChampStepperBase;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #187                // Method semiclone:()Lscala/collection/convert/impl/AnyChampStepper;
         4: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/AnyChampStepper;

  public scala.collection.convert.impl.AnyChampStepper(int, scala.Function2<T, java.lang.Object, A>);
    descriptor: (ILscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #126                // Field extract:Lscala/Function2;
         5: aload_0
         6: iload_1
         7: invokespecial #191                // Method scala/collection/convert/impl/ChampStepperBase."<init>":(I)V
        10: return
      LineNumberTable:
        line 159: 0
        line 160: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/convert/impl/AnyChampStepper;
            0      11     1 _maxSize   I
            0      11     2 extract   Lscala/Function2;
    Signature: #188                         // (ILscala/Function2<TT;Ljava/lang/Object;TA;>;)V
    MethodParameters:
      Name                           Flags
      _maxSize                       final
      extract                        final
}
Signature: #3                           // <A:Ljava/lang/Object;T:Lscala/collection/immutable/Node<TT;>;>Lscala/collection/convert/impl/ChampStepperBase<TA;TT;Lscala/collection/AnyStepper<TA;>;Lscala/collection/convert/impl/AnyChampStepper<TA;TT;>;>;Lscala/collection/AnyStepper<TA;>;
SourceFile: "ChampStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t4Qa\u0003\u0007\u0003!QA\u0001\"\u000f\u0001\u0003\u0002\u0003\u0006IA\u000f\u0005\t{\u0001\u0011)\u0019!C\t}!A!\t\u0001B\u0001B\u0003%q\bC\u0003D\u0001\u0011\u0005A\tC\u0003H\u0001\u0011\u0005\u0001\nC\u0003J\u0001\u0011\u0005!j\u0002\u0004L\u0019!\u0005\u0001\u0003\u0014\u0004\u0007\u00171A\t\u0001E\'\t\u000b\rCA\u0011A)\t\u000bICA\u0011A*\u0003\u001f\u0005s\u0017p\u00115b[B\u001cF/\u001a9qKJT!!\u0004\b\u0002\t%l\u0007\u000f\u001c\u0006\u0003\u001fA\tqaY8om\u0016\u0014HO\u0003\u0002\u0012%\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003M\tQa]2bY\u0006,2!\u0006\u000f)\'\r\u0001a\u0003\u000e\t\u0007/aQr\u0005\u000e\u001d\u000e\u00031I!!\u0007\u0007\u0003!\rC\u0017-\u001c9Ti\u0016\u0004\b/\u001a:CCN,\u0007CA\u000e\u001d\u0019\u0001!Q!\b\u0001C\u0002}\u0011\u0011!Q\u0002\u0001#\t\u0001C\u0005\u0005\u0002\"E5\t!#\u0003\u0002$%\t9aj\u001c;iS:<\u0007CA\u0011&\u0013\t1#CA\u0002B]f\u0004\"a\u0007\u0015\u0005\u000b%\u0002!\u0019\u0001\u0016\u0003\u0003Q\u000b\"a\u000b\u0018\u0011\u0005\u0005b\u0013BA\u0017\u0013\u0005\u0011qU\u000f\u001c7\u0011\u0007=\u0012t%D\u00011\u0015\t\t\u0004#A\u0005j[6,H/\u00192mK&\u00111\u0007\r\u0002\u0005\u001d>$W\rE\u00026mii\u0011\u0001E\u0005\u0003oA\u0011!\"\u00118z\'R,\u0007\u000f]3s!\u00119\u0002AG\u0014\u0002\u0011}k\u0017\r_*ju\u0016\u0004\"!I\u001e\n\u0005q\u0012\"aA%oi\u00069Q\r\u001f;sC\u000e$X#A \u0011\u000b\u0005\u0002uE\u000f\u000e\n\u0005\u0005\u0013\"!\u0003$v]\u000e$\u0018n\u001c83\u0003!)\u0007\u0010\u001e:bGR\u0004\u0013A\u0002\u001fj]&$h\bF\u00029\u000b\u001aCQ!\u000f\u0003A\u0002iBQ!\u0010\u0003A\u0002}\n\u0001B\\3yiN#X\r\u001d\u000b\u00025\u0005I1/Z7jG2|g.\u001a\u000b\u0002q\u0005y\u0011I\\=DQ\u0006l\u0007o\u0015;faB,\'\u000f\u0005\u0002\u0018\u0011M\u0011\u0001B\u0014\t\u0003C=K!\u0001\u0015\n\u0003\r\u0005s\u0017PU3g)\u0005a\u0015\u0001\u00024s_6,2\u0001V,Z)\u0011)FL\u00181\u0011\t]\u0001a\u000b\u0017\t\u00037]#Q!\b\u0006C\u0002}\u0001\"aG-\u0005\u000b%R!\u0019\u0001.\u0012\u0005-Z\u0006cA\u001831\")QL\u0003a\u0001u\u00059Q.\u0019=TSj,\u0007\"B0\u000b\u0001\u0004A\u0016\u0001\u0002:p_RDQ!\u0010\u0006A\u0002\u0005\u0004R!\t!YuY\u0003"
    )
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 01 00 16 00 1A 00 1B 01 00 0C 00 7B 01 00 74
   00 75 01 00 2E 00 2F 01 00 66 00 2F 01 00 6C 00
   2F 01 00 70 00 2F 01 00 7F 00 80 01 00 35 00 36
   01 00 3D 00 3E 01 00 43 00 44 01 00 B2 00 B3 01
   00 B2 00 B9 01 00 26 00 27 01 00 58 00 27 01 00
   5E 00 27 01 00 62 00 27 01 00 B5 00 B8 01 00 B5
   00 4A 01 00 49 00 4A 01 00 50 00 4A 01 00 54 00
   4A 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
