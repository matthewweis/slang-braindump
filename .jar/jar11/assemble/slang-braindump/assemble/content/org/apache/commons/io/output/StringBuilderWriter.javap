Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/output/StringBuilderWriter.class
  Last modified May 29, 2022; size 2632 bytes
  SHA-256 checksum b747afc07f9838ffd3af8f7b930ff901a3461073b9e3869bae86325568ea4dff
  Compiled from "StringBuilderWriter.java"
public class org.apache.commons.io.output.StringBuilderWriter extends java.io.Writer implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #15                         // org/apache/commons/io/output/StringBuilderWriter
  super_class: #16                        // java/io/Writer
  interfaces: 1, fields: 2, methods: 15, attributes: 1
Constant pool:
   #1 = Methodref          #16.#68        // java/io/Writer."<init>":()V
   #2 = Class              #69            // java/lang/StringBuilder
   #3 = Methodref          #2.#68         // java/lang/StringBuilder."<init>":()V
   #4 = Fieldref           #15.#70        // org/apache/commons/io/output/StringBuilderWriter.builder:Ljava/lang/StringBuilder;
   #5 = Methodref          #2.#71         // java/lang/StringBuilder."<init>":(I)V
   #6 = Methodref          #2.#72         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #7 = Methodref          #2.#73         // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
   #8 = Methodref          #2.#74         // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
   #9 = Methodref          #2.#75         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #10 = Methodref          #2.#76         // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
  #11 = Methodref          #2.#77         // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #12 = Methodref          #15.#78        // org/apache/commons/io/output/StringBuilderWriter.append:(C)Ljava/io/Writer;
  #13 = Methodref          #15.#79        // org/apache/commons/io/output/StringBuilderWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
  #14 = Methodref          #15.#80        // org/apache/commons/io/output/StringBuilderWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
  #15 = Class              #81            // org/apache/commons/io/output/StringBuilderWriter
  #16 = Class              #82            // java/io/Writer
  #17 = Class              #83            // java/io/Serializable
  #18 = Utf8               serialVersionUID
  #19 = Utf8               J
  #20 = Utf8               ConstantValue
  #21 = Long               -146927496096066153l
  #23 = Utf8               builder
  #24 = Utf8               Ljava/lang/StringBuilder;
  #25 = Utf8               <init>
  #26 = Utf8               ()V
  #27 = Utf8               Code
  #28 = Utf8               LineNumberTable
  #29 = Utf8               LocalVariableTable
  #30 = Utf8               this
  #31 = Utf8               Lorg/apache/commons/io/output/StringBuilderWriter;
  #32 = Utf8               (I)V
  #33 = Utf8               capacity
  #34 = Utf8               I
  #35 = Utf8               (Ljava/lang/StringBuilder;)V
  #36 = Utf8               StackMapTable
  #37 = Class              #81            // org/apache/commons/io/output/StringBuilderWriter
  #38 = Class              #69            // java/lang/StringBuilder
  #39 = Utf8               append
  #40 = Utf8               (C)Ljava/io/Writer;
  #41 = Utf8               value
  #42 = Utf8               C
  #43 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;
  #44 = Utf8               Ljava/lang/CharSequence;
  #45 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;
  #46 = Utf8               start
  #47 = Utf8               end
  #48 = Utf8               close
  #49 = Utf8               flush
  #50 = Utf8               write
  #51 = Utf8               (Ljava/lang/String;)V
  #52 = Utf8               Ljava/lang/String;
  #53 = Utf8               ([CII)V
  #54 = Utf8               [C
  #55 = Utf8               offset
  #56 = Utf8               length
  #57 = Utf8               getBuilder
  #58 = Utf8               ()Ljava/lang/StringBuilder;
  #59 = Utf8               toString
  #60 = Utf8               ()Ljava/lang/String;
  #61 = Utf8               (C)Ljava/lang/Appendable;
  #62 = Utf8               Exceptions
  #63 = Class              #84            // java/io/IOException
  #64 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
  #65 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
  #66 = Utf8               SourceFile
  #67 = Utf8               StringBuilderWriter.java
  #68 = NameAndType        #25:#26        // "<init>":()V
  #69 = Utf8               java/lang/StringBuilder
  #70 = NameAndType        #23:#24        // builder:Ljava/lang/StringBuilder;
  #71 = NameAndType        #25:#32        // "<init>":(I)V
  #72 = NameAndType        #39:#85        // append:(C)Ljava/lang/StringBuilder;
  #73 = NameAndType        #39:#86        // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
  #74 = NameAndType        #39:#87        // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
  #75 = NameAndType        #39:#88        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #76 = NameAndType        #39:#89        // append:([CII)Ljava/lang/StringBuilder;
  #77 = NameAndType        #59:#60        // toString:()Ljava/lang/String;
  #78 = NameAndType        #39:#40        // append:(C)Ljava/io/Writer;
  #79 = NameAndType        #39:#45        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
  #80 = NameAndType        #39:#43        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
  #81 = Utf8               org/apache/commons/io/output/StringBuilderWriter
  #82 = Utf8               java/io/Writer
  #83 = Utf8               java/io/Serializable
  #84 = Utf8               java/io/IOException
  #85 = Utf8               (C)Ljava/lang/StringBuilder;
  #86 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
  #87 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
  #88 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #89 = Utf8               ([CII)Ljava/lang/StringBuilder;
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long -146927496096066153l

  private final java.lang.StringBuilder builder;
    descriptor: Ljava/lang/StringBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.output.StringBuilderWriter();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: new           #2                  // class java/lang/StringBuilder
         8: dup
         9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
        12: putfield      #4                  // Field builder:Ljava/lang/StringBuilder;
        15: return
      LineNumberTable:
        line 41: 0
        line 42: 4
        line 43: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;

  public org.apache.commons.io.output.StringBuilderWriter(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: new           #2                  // class java/lang/StringBuilder
         8: dup
         9: iload_1
        10: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
        13: putfield      #4                  // Field builder:Ljava/lang/StringBuilder;
        16: return
      LineNumberTable:
        line 50: 0
        line 51: 4
        line 52: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      17     1 capacity   I

  public org.apache.commons.io.output.StringBuilderWriter(java.lang.StringBuilder);
    descriptor: (Ljava/lang/StringBuilder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/io/Writer."<init>":()V
         4: aload_0
         5: aload_1
         6: ifnull        13
         9: aload_1
        10: goto          20
        13: new           #2                  // class java/lang/StringBuilder
        16: dup
        17: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
        20: putfield      #4                  // Field builder:Ljava/lang/StringBuilder;
        23: return
      LineNumberTable:
        line 61: 0
        line 62: 4
        line 63: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      24     1 builder   Ljava/lang/StringBuilder;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class org/apache/commons/io/output/StringBuilderWriter, class java/lang/StringBuilder ]
          stack = [ class org/apache/commons/io/output/StringBuilderWriter ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/apache/commons/io/output/StringBuilderWriter, class java/lang/StringBuilder ]
          stack = [ class org/apache/commons/io/output/StringBuilderWriter, class java/lang/StringBuilder ]

  public java.io.Writer append(char);
    descriptor: (C)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         4: iload_1
         5: invokevirtual #6                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
         8: pop
         9: aload_0
        10: areturn
      LineNumberTable:
        line 73: 0
        line 74: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      11     1 value   C

  public java.io.Writer append(java.lang.CharSequence);
    descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         4: aload_1
         5: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
         8: pop
         9: aload_0
        10: areturn
      LineNumberTable:
        line 85: 0
        line 86: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      11     1 value   Ljava/lang/CharSequence;

  public java.io.Writer append(java.lang.CharSequence, int, int);
    descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
        10: pop
        11: aload_0
        12: areturn
      LineNumberTable:
        line 99: 0
        line 100: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      13     1 value   Ljava/lang/CharSequence;
            0      13     2 start   I
            0      13     3   end   I

  public void close();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;

  public void flush();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 117: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;

  public void write(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnull        13
         4: aload_0
         5: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         8: aload_1
         9: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        12: pop
        13: return
      LineNumberTable:
        line 127: 0
        line 128: 4
        line 130: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      14     1 value   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */

  public void write(char[], int, int);
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_1
         1: ifnull        15
         4: aload_0
         5: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         8: aload_1
         9: iload_2
        10: iload_3
        11: invokevirtual #10                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
        14: pop
        15: return
      LineNumberTable:
        line 141: 0
        line 142: 4
        line 144: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
            0      16     1 value   [C
            0      16     2 offset   I
            0      16     3 length   I
      StackMapTable: number_of_entries = 1
        frame_type = 15 /* same */

  public java.lang.StringBuilder getBuilder();
    descriptor: ()Ljava/lang/StringBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         4: areturn
      LineNumberTable:
        line 152: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field builder:Ljava/lang/StringBuilder;
         4: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;

  public java.lang.Appendable append(char) throws java.io.IOException;
    descriptor: (C)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #12                 // Method append:(C)Ljava/io/Writer;
         5: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
    Exceptions:
      throws java.io.IOException

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: invokevirtual #13                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;
         7: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
    Exceptions:
      throws java.io.IOException

  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #14                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
         5: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/output/StringBuilderWriter;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "StringBuilderWriter.java"
