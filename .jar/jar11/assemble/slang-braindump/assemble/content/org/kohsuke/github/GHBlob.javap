Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/kohsuke/github/GHBlob.class
  Last modified May 29, 2022; size 1920 bytes
  SHA-256 checksum 31908c3828127b396f945992dd5e3f399a6c3e7d8b2efcdb3f9776001c53af53
  Compiled from "GHBlob.java"
public class org.kohsuke.github.GHBlob
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #24                         // org/kohsuke/github/GHBlob
  super_class: #25                        // java/lang/Object
  interfaces: 0, fields: 5, methods: 7, attributes: 2
Constant pool:
    #1 = Methodref          #25.#60       // java/lang/Object."<init>":()V
    #2 = Fieldref           #24.#61       // org/kohsuke/github/GHBlob.url:Ljava/lang/String;
    #3 = Methodref          #62.#63       // org/kohsuke/github/GitHubClient.parseURL:(Ljava/lang/String;)Ljava/net/URL;
    #4 = Fieldref           #24.#64       // org/kohsuke/github/GHBlob.sha:Ljava/lang/String;
    #5 = Fieldref           #24.#65       // org/kohsuke/github/GHBlob.size:J
    #6 = Fieldref           #24.#66       // org/kohsuke/github/GHBlob.encoding:Ljava/lang/String;
    #7 = Fieldref           #24.#67       // org/kohsuke/github/GHBlob.content:Ljava/lang/String;
    #8 = String             #68           // base64
    #9 = Methodref          #69.#70       // java/lang/String.equals:(Ljava/lang/Object;)Z
   #10 = Methodref          #71.#72       // java/util/Base64.getMimeDecoder:()Ljava/util/Base64$Decoder;
   #11 = Class              #73           // java/io/ByteArrayInputStream
   #12 = Methodref          #51.#74       // java/util/Base64$Decoder.decode:(Ljava/lang/String;)[B
   #13 = Methodref          #11.#75       // java/io/ByteArrayInputStream."<init>":([B)V
   #14 = Class              #76           // java/lang/IllegalArgumentException
   #15 = Class              #77           // java/lang/AssertionError
   #16 = Methodref          #15.#78       // java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
   #17 = Class              #79           // java/lang/UnsupportedOperationException
   #18 = Class              #80           // java/lang/StringBuilder
   #19 = Methodref          #18.#60       // java/lang/StringBuilder."<init>":()V
   #20 = String             #81           // Unrecognized encoding:
   #21 = Methodref          #18.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #22 = Methodref          #18.#83       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #23 = Methodref          #17.#84       // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
   #24 = Class              #85           // org/kohsuke/github/GHBlob
   #25 = Class              #86           // java/lang/Object
   #26 = Utf8               content
   #27 = Utf8               Ljava/lang/String;
   #28 = Utf8               encoding
   #29 = Utf8               url
   #30 = Utf8               sha
   #31 = Utf8               size
   #32 = Utf8               J
   #33 = Utf8               <init>
   #34 = Utf8               ()V
   #35 = Utf8               Code
   #36 = Utf8               LineNumberTable
   #37 = Utf8               LocalVariableTable
   #38 = Utf8               this
   #39 = Utf8               Lorg/kohsuke/github/GHBlob;
   #40 = Utf8               getUrl
   #41 = Utf8               ()Ljava/net/URL;
   #42 = Utf8               getSha
   #43 = Utf8               ()Ljava/lang/String;
   #44 = Utf8               getSize
   #45 = Utf8               ()J
   #46 = Utf8               getEncoding
   #47 = Utf8               getContent
   #48 = Utf8               read
   #49 = Utf8               ()Ljava/io/InputStream;
   #50 = Utf8               decoder
   #51 = Class              #87           // java/util/Base64$Decoder
   #52 = Utf8               Decoder
   #53 = Utf8               InnerClasses
   #54 = Utf8               Ljava/util/Base64$Decoder;
   #55 = Utf8               e
   #56 = Utf8               Ljava/lang/IllegalArgumentException;
   #57 = Utf8               StackMapTable
   #58 = Utf8               SourceFile
   #59 = Utf8               GHBlob.java
   #60 = NameAndType        #33:#34       // "<init>":()V
   #61 = NameAndType        #29:#27       // url:Ljava/lang/String;
   #62 = Class              #88           // org/kohsuke/github/GitHubClient
   #63 = NameAndType        #89:#90       // parseURL:(Ljava/lang/String;)Ljava/net/URL;
   #64 = NameAndType        #30:#27       // sha:Ljava/lang/String;
   #65 = NameAndType        #31:#32       // size:J
   #66 = NameAndType        #28:#27       // encoding:Ljava/lang/String;
   #67 = NameAndType        #26:#27       // content:Ljava/lang/String;
   #68 = Utf8               base64
   #69 = Class              #91           // java/lang/String
   #70 = NameAndType        #92:#93       // equals:(Ljava/lang/Object;)Z
   #71 = Class              #94           // java/util/Base64
   #72 = NameAndType        #95:#96       // getMimeDecoder:()Ljava/util/Base64$Decoder;
   #73 = Utf8               java/io/ByteArrayInputStream
   #74 = NameAndType        #97:#98       // decode:(Ljava/lang/String;)[B
   #75 = NameAndType        #33:#99       // "<init>":([B)V
   #76 = Utf8               java/lang/IllegalArgumentException
   #77 = Utf8               java/lang/AssertionError
   #78 = NameAndType        #33:#100      // "<init>":(Ljava/lang/Object;)V
   #79 = Utf8               java/lang/UnsupportedOperationException
   #80 = Utf8               java/lang/StringBuilder
   #81 = Utf8               Unrecognized encoding:
   #82 = NameAndType        #101:#102     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #83 = NameAndType        #103:#43      // toString:()Ljava/lang/String;
   #84 = NameAndType        #33:#104      // "<init>":(Ljava/lang/String;)V
   #85 = Utf8               org/kohsuke/github/GHBlob
   #86 = Utf8               java/lang/Object
   #87 = Utf8               java/util/Base64$Decoder
   #88 = Utf8               org/kohsuke/github/GitHubClient
   #89 = Utf8               parseURL
   #90 = Utf8               (Ljava/lang/String;)Ljava/net/URL;
   #91 = Utf8               java/lang/String
   #92 = Utf8               equals
   #93 = Utf8               (Ljava/lang/Object;)Z
   #94 = Utf8               java/util/Base64
   #95 = Utf8               getMimeDecoder
   #96 = Utf8               ()Ljava/util/Base64$Decoder;
   #97 = Utf8               decode
   #98 = Utf8               (Ljava/lang/String;)[B
   #99 = Utf8               ([B)V
  #100 = Utf8               (Ljava/lang/Object;)V
  #101 = Utf8               append
  #102 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #103 = Utf8               toString
  #104 = Utf8               (Ljava/lang/String;)V
{
  private java.lang.String content;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private java.lang.String encoding;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private java.lang.String url;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private java.lang.String sha;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private long size;
    descriptor: J
    flags: (0x0002) ACC_PRIVATE

  public org.kohsuke.github.GHBlob();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHBlob;

  public java.net.URL getUrl();
    descriptor: ()Ljava/net/URL;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field url:Ljava/lang/String;
         4: invokestatic  #3                  // Method org/kohsuke/github/GitHubClient.parseURL:(Ljava/lang/String;)Ljava/net/URL;
         7: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/kohsuke/github/GHBlob;

  public java.lang.String getSha();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field sha:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHBlob;

  public long getSize();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field size:J
         4: lreturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHBlob;

  public java.lang.String getEncoding();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field encoding:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHBlob;

  public java.lang.String getContent();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field content:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHBlob;

  public java.io.InputStream read();
    descriptor: ()Ljava/io/InputStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #6                  // Field encoding:Ljava/lang/String;
         4: ldc           #8                  // String base64
         6: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
         9: ifeq          42
        12: invokestatic  #10                 // Method java/util/Base64.getMimeDecoder:()Ljava/util/Base64$Decoder;
        15: astore_1
        16: new           #11                 // class java/io/ByteArrayInputStream
        19: dup
        20: aload_1
        21: aload_0
        22: getfield      #7                  // Field content:Ljava/lang/String;
        25: invokevirtual #12                 // Method java/util/Base64$Decoder.decode:(Ljava/lang/String;)[B
        28: invokespecial #13                 // Method java/io/ByteArrayInputStream."<init>":([B)V
        31: areturn
        32: astore_1
        33: new           #15                 // class java/lang/AssertionError
        36: dup
        37: aload_1
        38: invokespecial #16                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
        41: athrow
        42: new           #17                 // class java/lang/UnsupportedOperationException
        45: dup
        46: new           #18                 // class java/lang/StringBuilder
        49: dup
        50: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
        53: ldc           #20                 // String Unrecognized encoding:
        55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: aload_0
        59: getfield      #6                  // Field encoding:Ljava/lang/String;
        62: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        65: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        68: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        71: athrow
      Exception table:
         from    to  target type
            12    31    32   Class java/lang/IllegalArgumentException
      LineNumberTable:
        line 72: 0
        line 74: 12
        line 75: 16
        line 76: 32
        line 77: 33
        line 81: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      16     1 decoder   Ljava/util/Base64$Decoder;
           33       9     1     e   Ljava/lang/IllegalArgumentException;
            0      72     0  this   Lorg/kohsuke/github/GHBlob;
      StackMapTable: number_of_entries = 2
        frame_type = 96 /* same_locals_1_stack_item */
          stack = [ class java/lang/IllegalArgumentException ]
        frame_type = 9 /* same */
}
SourceFile: "GHBlob.java"
InnerClasses:
  public static #52= #51 of #71;          // Decoder=class java/util/Base64$Decoder of class java/util/Base64
