Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/core/ResolutionProcess.class
  Last modified May 29, 2022; size 9968 bytes
  SHA-256 checksum 9b7cca2199a70e45984e40f4613bf4653df0ffa4811e9f15aadb5b31a06f3c28
  Compiled from "ResolutionProcess.scala"
public abstract class coursier.core.ResolutionProcess implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // coursier/core/ResolutionProcess
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 18, attributes: 6
Constant pool:
    #1 = Utf8               coursier/core/ResolutionProcess
    #2 = Class              #1            // coursier/core/ResolutionProcess
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               ResolutionProcess.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\t=c!B\n\u0015\u0003CI\u0002\"B\u0018\u0001\t\u0003\u0001\u0004\"B\u001a\u0001\t\u0003!\u0004\"CAz\u0001E\u0005I\u0011AA{\u0011\u001d\u0011\t\u0001\u0001C\u0003\u0005\u0007AqAa\f\u0001\r\u0003\u0011\t\u0004C\u0005\u00034\u0001\t\n\u0011\"\u0002\u00036\u001d)Q\u000b\u0006E\u0001-\u001a)1\u0003\u0006E\u0001/\")q\u0006\u0003C\u0001?\u0016!\u0001\r\u0003\u0001b\u000b\u0011q\b\u0002A@\t\u000f\u0005U\u0001\u0002\"\u0001\u0002\u0018!1!\u000b\u0003C\u0001\u00037B\u0011\"!\u001f\t#\u0003%\t!a\u001f\t\u000f\u0005%\u0006\u0002\"\u0001\u0002,\"9\u00111\u0017\u0005\u0005\u0002\u0005U\u0006\u0002CA^\u0011\u0011\u0005a#!0\t\u0013\u0005}\u0007\"!A\u0005\n\u0005\u0005(!\u0005*fg>dW\u000f^5p]B\u0013xnY3tg*\u0011QCF\u0001\u0005G>\u0014XMC\u0001\u0018\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\u0005\u0001i\u00013\u0005\u0005\u0002\u001c=5\tADC\u0001\u001e\u0003\u0015\u00198-\u00197b\u0013\tyBD\u0001\u0004B]f\u0014VM\u001a\t\u00037\u0005J!A\t\u000f\u0003\u000fA\u0013x\u000eZ;diB\u0011A\u0005\f\b\u0003K)r!AJ\u0015\u000e\u0003\u001dR!\u0001\u000b\r\u0002\rq\u0012xn\u001c;?\u0013\u0005i\u0012BA\u0016\u001d\u0003\u001d\u0001\u0018mY6bO\u0016L!!\f\u0018\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005-b\u0012A\u0002\u001fj]&$h\bF\u00012!\t\u0011\u0004!D\u0001\u0015\u0003\r\u0011XO\\\u000b\u0003ke\"BAN)\u0002pR\u0011q\u0007\u0013\t\u0004qe*E\u0002\u0001\u0003\u0006u\t\u0011\ra\u000f\u0002\u0002\rV\u0011AhQ\t\u0003{\u0001\u0003\"a\u0007 \n\u0005}b\"a\u0002(pi\"Lgn\u001a\t\u00037\u0005K!A\u0011\u000f\u0003\u0007\u0005s\u0017\u0010B\u0003Es\t\u0007AHA\u0001`!\t\u0011d)\u0003\u0002H)\tQ!+Z:pYV$\u0018n\u001c8\t\u000b%\u0013\u00019\u0001&\u0002\u0003\u0019\u00032a\u0013(Q\u001b\u0005a%BA\'\u0017\u0003\u0011)H/\u001b7\n\u0005=c%!B\'p]\u0006$\u0007C\u0001\u001d:\u0011\u0015\u0011&\u00011\u0001T\u0003\u00151W\r^2i!\r!6\u0002\u0015\b\u0003e\u001d\t\u0011CU3t_2,H/[8o!J|7-Z:t!\t\u0011\u0004bE\u0002\t5a\u0003\"!\u00170\u000e\u0003iS!a\u0017/\u0002\u0005%|\'\"A/\u0002\t)\fg/Y\u0005\u0003[i#\u0012A\u0016\u0002\u0003\u001b\u0012\u00032\u0001\n2e\u0013\t\u0019gFA\u0002TKF\u0004BaG3hg&\u0011a\r\b\u0002\u0007)V\u0004H.\u001a\u001a\u0011\tm)\u0007n\u001b\t\u0003e%L!A\u001b\u000b\u0003\r5{G-\u001e7f!\ta\u0007O\u0004\u0002n]B\u0011a\u0005H\u0005\u0003_r\ta\u0001\u0015:fI\u00164\u0017BA9s\u0005\u0019\u0019FO]5oO*\u0011q\u000e\b\t\u0005IQ4x/\u0003\u0002v]\t1Q)\u001b;iKJ\u00042\u0001\n2l!\u0011YR\r_>\u0011\u0005IJ\u0018B\u0001>\u0015\u00059\t%\u000f^5gC\u000e$8k\\;sG\u0016\u0004\"A\r?\n\u0005u$\"a\u0002)s_*,7\r\u001e\u0002\u0006\r\u0016$8\r[\u000b\u0005\u0003\u0003\tY\u0001E\u0004\u001c\u0003\u0007\t9!!\u0003\n\u0007\u0005\u0015ADA\u0005Gk:\u001cG/[8ocA\u0019AEY4\u0011\u000ba\nY!!\u0005\u0005\riZ!\u0019AA\u0007+\ra\u0014q\u0002\u0003\u0007\t\u0006-!\u0019\u0001\u001f\u0011\u0007\u0005M!\"D\u0001\t\u0003!1W\r^2i\u001f:,W\u0003BA\r\u0003K!B\"a\u0007\u00024\u0005}\u00121IA$\u0003+\"B!!\b\u0002,A91*a\b\u0002$Y<\u0018bAA\u0011\u0019\n9Q)\u001b;iKJ$\u0006c\u0001\u001d\u0002&\u00111!\b\u0004b\u0001\u0003O)2\u0001PA\u0015\t\u0019!\u0015Q\u0005b\u0001y!1\u0011\n\u0004a\u0002\u0003[\u0001RaSA\u0018\u0003GI1!!\rM\u0005\u00199\u0015\r\u001e5fe\"9\u0011Q\u0007\u0007A\u0002\u0005]\u0012\u0001\u0004:fa>\u001c\u0018\u000e^8sS\u0016\u001c\b\u0003\u0002\u0013c\u0003s\u00012AMA\u001e\u0013\r\ti\u0004\u0006\u0002\u000b%\u0016\u0004xn]5u_JL\bBBA!\u0019\u0001\u0007\u0001.\u0001\u0004n_\u0012,H.\u001a\u0005\u0007\u0003\u000bb\u0001\u0019A6\u0002\u000fY,\'o]5p]\"1!\u000b\u0004a\u0001\u0003\u0013\u0002b!a\u0013\u0002R\u0005\rbb\u0001\u001a\u0002N%\u0019\u0011q\n\u000b\u0002\u0015I+\u0007o\\:ji>\u0014\u00180C\u0002\u007f\u0003\'R1!a\u0014\u0015\u0011\u001d\t9\u0006\u0004a\u0001\u00033\naAZ3uG\"\u001c\b\u0003\u0002\u0013c\u0003\u0013*B!!\u0018\u0002fQA\u0011qLA8\u0003c\n)\b\u0006\u0003\u0002b\u0005-\u0004#BA\n\u0017\u0005\r\u0004c\u0001\u001d\u0002f\u00111!(\u0004b\u0001\u0003O*2\u0001PA5\t\u0019!\u0015Q\rb\u0001y!1\u0011*\u0004a\u0002\u0003[\u0002RaSA\u0018\u0003GBq!!\u000e\u000e\u0001\u0004\t9\u0004\u0003\u0004S\u001b\u0001\u0007\u00111\u000f\t\u0007\u0003\u0017\n\t&a\u0019\t\u0013\u0005]S\u0002%AA\u0002\u0005]\u0004\u0003\u0002\u0013c\u0003g\nqBZ3uG\"$C-\u001a4bk2$HeM\u000b\u0005\u0003{\n\u0019+\u0006\u0002\u0002\u0000)\"\u0011\u0011QAI\u001d\u0011\t\u0019)!$\u000e\u0005\u0005\u0015%\u0002BAD\u0003\u0013\u000b\u0011\"[7nkR\f\'\r\\3\u000b\u0007\u0005-E$\u0001\u0006d_2dWm\u0019;j_:LA!a$\u0002\u0006\u0006\u0019a*\u001b7,\u0005\u0005M\u0005\u0003BAK\u0003?k!!a&\u000b\t\u0005e\u00151T\u0001\nk:\u001c\u0007.Z2lK\u0012T1!!(\u001d\u0003)\tgN\\8uCRLwN\\\u0005\u0005\u0003C\u000b9JA\tv]\u000eDWmY6fIZ\u000b\'/[1oG\u0016$aA\u000f\bC\u0002\u0005\u0015Vc\u0001\u001f\u0002(\u00121A)a)C\u0002q\nA\u0003Z3gCVdG/T1y\u0013R,\'/\u0019;j_:\u001cXCAAW!\rY\u0012qV\u0005\u0004\u0003cc\"aA%oi\u0006)\u0011\r\u001d9msR\u0019\u0011\'a.\t\r\u0005e\u0006\u00031\u0001F\u0003)\u0011Xm]8mkRLwN\\\u0001\tM\u0016$8\r[!mYV!\u0011qXAc)\u0019\t\t-a6\u0002\\R!\u00111YAi!\u0015A\u0014QYAf\t\u0019Q\u0014C1\u0001\u0002HV\u0019A(!3\u0005\r\u0011\u000b)M1\u0001=!\u0011!\u0013Q\u001a3\n\u0007\u0005=gF\u0001\u0004WK\u000e$xN\u001d\u0005\u0007\u0013F\u0001\u001d!a5\u0011\t-s\u0015Q\u001b\t\u0004q\u0005\u0015\u0007bBAm#\u0001\u0007\u0011qA\u0001\b[>$g+\u001a:t\u0011\u0019\u0011\u0016\u00031\u0001\u0002^B!AkCAk\u000319(/\u001b;f%\u0016\u0004H.Y2f)\t\t\u0019\u000f\u0005\u0003\u0002f\u0006-XBAAt\u0015\r\tI\u000fX\u0001\u0005Y\u0006tw-\u0003\u0003\u0002n\u0006\u001d(AB(cU\u0016\u001cG\u000fC\u0005\u0002r\n\u0001\n\u00111\u0001\u0002.\u0006iQ.\u0019=Ji\u0016\u0014\u0018\r^5p]N\fQB];oI\u0011,g-Y;mi\u0012\u0012T\u0003BA|\u0003w,\"!!?+\t\u00055\u0016\u0011\u0013\u0003\u0007u\r\u0011\r!!@\u0016\u0007q\ny\u0010\u0002\u0004E\u0003w\u0014\r\u0001P\u0001\u0005]\u0016DH/\u0006\u0003\u0003\u0006\t-AC\u0002B\u0004\u0005/\u0011Y\u0002\u0006\u0003\u0003\n\tE\u0001\u0003\u0002\u001d\u0003\fE\"aA\u000f\u0003C\u0002\t5Qc\u0001\u001f\u0003\u0010\u00111AIa\u0003C\u0002qBa!\u0013\u0003A\u0004\tM\u0001\u0003B&O\u0005+\u00012\u0001\u000fB\u0006\u0011\u0019\u0011F\u00011\u0001\u0003\u001aA!Ak\u0003B\u000b\u0011%\u0011i\u0002\u0002I\u0001\u0002\u0004\u0011y\"A\u0006gCN$hi\u001c:xCJ$\u0007cA\u000e\u0003\"%\u0019!1\u0005\u000f\u0003\u000f\t{w\u000e\\3b]\"\u001aAAa\n\u0011\t\t%\"1F\u0007\u0003\u00037KAA!\f\u0002\u001c\n9A/Y5me\u0016\u001c\u0017aB2veJ,g\u000e^\u000b\u0002\u000b\u0006qa.\u001a=uI\u0011,g-Y;mi\u0012\u0012T\u0003\u0002B\u001c\u0005w)\"A!\u000f+\t\t}\u0011\u0011\u0013\u0003\u0007u\u0019\u0011\rA!\u0010\u0016\u0007q\u0012y\u0004\u0002\u0004E\u0005w\u0011\r\u0001P\u0015\b\u0001\t\r#q\tB&\u0013\r\u0011)\u0005\u0006\u0002\t\u0007>tG/\u001b8vK&\u0019!\u0011\n\u000b\u0003\t\u0011{g.Z\u0005\u0004\u0005\u001b\"\"aB\'jgNLgn\u001a
   #13 = Utf8               coursier/util/Monad$AllOps
   #14 = Class              #13           // coursier/util/Monad$AllOps
   #15 = Utf8               coursier/util/Monad
   #16 = Class              #15           // coursier/util/Monad
   #17 = Utf8               AllOps
   #18 = Utf8               coursier/util/Monad$ops$
   #19 = Class              #18           // coursier/util/Monad$ops$
   #20 = Utf8
   #21 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #22 = Class              #21           // java/lang/invoke/MethodHandles$Lookup
   #23 = Utf8               java/lang/invoke/MethodHandles
   #24 = Class              #23           // java/lang/invoke/MethodHandles
   #25 = Utf8               Lookup
   #26 = Utf8               apply
   #27 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
   #28 = Utf8               resolution
   #29 = Utf8               coursier/core/ResolutionProcess$
   #30 = Class              #29           // coursier/core/ResolutionProcess$
   #31 = Utf8               MODULE$
   #32 = Utf8               Lcoursier/core/ResolutionProcess$;
   #33 = NameAndType        #31:#32       // MODULE$:Lcoursier/core/ResolutionProcess$;
   #34 = Fieldref           #30.#33       // coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
   #35 = NameAndType        #26:#27       // apply:(Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
   #36 = Methodref          #30.#35       // coursier/core/ResolutionProcess$.apply:(Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
   #37 = Utf8               defaultMaxIterations
   #38 = Utf8               ()I
   #39 = NameAndType        #37:#38       // defaultMaxIterations:()I
   #40 = Methodref          #30.#39       // coursier/core/ResolutionProcess$.defaultMaxIterations:()I
   #41 = Utf8               fetch$default$3
   #42 = Utf8               ()Lscala/collection/immutable/Nil$;
   #43 = Utf8               <F:Ljava/lang/Object;>()Lscala/collection/immutable/Nil$;
   #44 = NameAndType        #41:#42       // fetch$default$3:()Lscala/collection/immutable/Nil$;
   #45 = Methodref          #30.#44       // coursier/core/ResolutionProcess$.fetch$default$3:()Lscala/collection/immutable/Nil$;
   #46 = Utf8               fetch
   #47 = Utf8               (Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
   #48 = Utf8               <F:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;>;Lcoursier/util/Gather<TF;>;)Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;
   #49 = Utf8               repositories
   #50 = Utf8               fetchs
   #51 = Utf8               F
   #52 = NameAndType        #46:#47       // fetch:(Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
   #53 = Methodref          #30.#52       // coursier/core/ResolutionProcess$.fetch:(Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
   #54 = Utf8               fetchOne
   #55 = Utf8               (Lscala/collection/immutable/Seq;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lcoursier/util/EitherT;
   #56 = Utf8               <F:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;>;Lcoursier/util/Gather<TF;>;)Lcoursier/util/EitherT<TF;Lscala/collection/immutable/Seq<Ljava/lang/String;>;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
   #57 = Utf8               module
   #58 = Utf8               version
   #59 = NameAndType        #54:#55       // fetchOne:(Lscala/collection/immutable/Seq;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lcoursier/util/EitherT;
   #60 = Methodref          #30.#59       // coursier/core/ResolutionProcess$.fetchOne:(Lscala/collection/immutable/Seq;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lcoursier/util/EitherT;
   #61 = Utf8               productIterator
   #62 = Utf8               ()Lscala/collection/Iterator;
   #63 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #64 = Utf8               productIterator$
   #65 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #66 = NameAndType        #64:#65       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #67 = InterfaceMethodref #6.#66        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #68 = Utf8               this
   #69 = Utf8               Lcoursier/core/ResolutionProcess;
   #70 = Utf8               productPrefix
   #71 = Utf8               ()Ljava/lang/String;
   #72 = Utf8               productPrefix$
   #73 = Utf8               (Lscala/Product;)Ljava/lang/String;
   #74 = NameAndType        #72:#73       // productPrefix$:(Lscala/Product;)Ljava/lang/String;
   #75 = InterfaceMethodref #6.#74        // scala/Product.productPrefix$:(Lscala/Product;)Ljava/lang/String;
   #76 = Utf8               productElementName
   #77 = Utf8               (I)Ljava/lang/String;
   #78 = Utf8               n
   #79 = Utf8               productElementName$
   #80 = Utf8               (Lscala/Product;I)Ljava/lang/String;
   #81 = NameAndType        #79:#80       // productElementName$:(Lscala/Product;I)Ljava/lang/String;
   #82 = InterfaceMethodref #6.#81        // scala/Product.productElementName$:(Lscala/Product;I)Ljava/lang/String;
   #83 = Utf8               I
   #84 = Utf8               productElementNames
   #85 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #86 = Utf8               productElementNames$
   #87 = NameAndType        #86:#65       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #88 = InterfaceMethodref #6.#87        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #89 = Utf8               run
   #90 = Utf8               (Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
   #91 = Utf8               <F:Ljava/lang/Object;>(Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;ILcoursier/util/Monad<TF;>;)TF;
   #92 = Utf8               maxIterations
   #93 = Utf8               current
   #94 = Utf8               ()Lcoursier/core/Resolution;
   #95 = NameAndType        #93:#94       // current:()Lcoursier/core/Resolution;
   #96 = Methodref          #2.#95        // coursier/core/ResolutionProcess.current:()Lcoursier/core/Resolution;
   #97 = Utf8               point
   #98 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #99 = NameAndType        #97:#98       // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #100 = InterfaceMethodref #16.#99       // coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #101 = Utf8               coursier/core/Done
  #102 = Class              #101          // coursier/core/Done
  #103 = NameAndType        #28:#94       // resolution:()Lcoursier/core/Resolution;
  #104 = Methodref          #102.#103     // coursier/core/Done.resolution:()Lcoursier/core/Resolution;
  #105 = Utf8               scala/Function1
  #106 = Class              #105          // scala/Function1
  #107 = Utf8               coursier/core/Missing
  #108 = Class              #107          // coursier/core/Missing
  #109 = Utf8               Lcoursier/util/Monad$ops$;
  #110 = NameAndType        #31:#109      // MODULE$:Lcoursier/util/Monad$ops$;
  #111 = Fieldref           #19.#110      // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
  #112 = Utf8               missing
  #113 = Utf8               ()Lscala/collection/immutable/Seq;
  #114 = NameAndType        #112:#113     // missing:()Lscala/collection/immutable/Seq;
  #115 = Methodref          #108.#114     // coursier/core/Missing.missing:()Lscala/collection/immutable/Seq;
  #116 = Utf8               fetchAll
  #117 = Utf8               (Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/util/Monad;)Ljava/lang/Object;
  #118 = NameAndType        #116:#117     // fetchAll:(Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/util/Monad;)Ljava/lang/Object;
  #119 = Methodref          #30.#118      // coursier/core/ResolutionProcess$.fetchAll:(Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/util/Monad;)Ljava/lang/Object;
  #120 = Utf8               toAllMonadOps
  #121 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #122 = NameAndType        #120:#121     // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #123 = Methodref          #19.#122      // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
  #124 = MethodType         #98           //  (Ljava/lang/Object;)Ljava/lang/Object;
  #125 = Utf8               $anonfun$run$1
  #126 = Utf8               (Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  #127 = NameAndType        #125:#126     // $anonfun$run$1:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  #128 = Methodref          #2.#127       // coursier/core/ResolutionProcess.$anonfun$run$1:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  #129 = MethodHandle       6:#128        // REF_invokeStatic coursier/core/ResolutionProcess.$anonfun$run$1:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  #130 = Utf8               (Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  #131 = MethodType         #130          //  (Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  #132 = Integer            5
  #133 = Integer            1
  #134 = Utf8               java/lang/invoke/LambdaMetafactory
  #135 = Class              #134          // java/lang/invoke/LambdaMetafactory
  #136 = Utf8               altMetafactory
  #137 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = NameAndType        #136:#137     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #139 = Methodref          #135.#138     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #140 = MethodHandle       6:#139        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #141 = Utf8               (Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;)Lscala/Function1;
  #142 = NameAndType        #26:#141      // apply:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;)Lscala/Function1;
  #143 = InvokeDynamic      #0:#142       // #0:apply:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;)Lscala/Function1;
  #144 = Utf8               flatMap
  #145 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #146 = NameAndType        #144:#145     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #147 = InterfaceMethodref #14.#146      // coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #148 = Utf8               coursier/core/Continue
  #149 = Class              #148          // coursier/core/Continue
  #150 = Utf8               nextNoCont
  #151 = Utf8               ()Lcoursier/core/ResolutionProcess;
  #152 = NameAndType        #150:#151     // nextNoCont:()Lcoursier/core/ResolutionProcess;
  #153 = Methodref          #149.#152     // coursier/core/Continue.nextNoCont:()Lcoursier/core/ResolutionProcess;
  #154 = Utf8               scala/MatchError
  #155 = Class              #154          // scala/MatchError
  #156 = Utf8               <init>
  #157 = Utf8               (Ljava/lang/Object;)V
  #158 = NameAndType        #156:#157     // "<init>":(Ljava/lang/Object;)V
  #159 = Methodref          #155.#158     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #160 = Utf8               maxIterations0
  #161 = Utf8               Lscala/Function1;
  #162 = Utf8               Lcoursier/util/Monad;
  #163 = Utf8               run$default$2
  #164 = Utf8               <F:Ljava/lang/Object;>()I
  #165 = Utf8               next
  #166 = Utf8               (Lscala/Function1;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #167 = Utf8               <F:Ljava/lang/Object;>(Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;ZLcoursier/util/Monad<TF;>;)TF;
  #168 = Utf8               fastForward
  #169 = Utf8               $anonfun$next$1
  #170 = Utf8               (Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  #171 = NameAndType        #169:#170     // $anonfun$next$1:(Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  #172 = Methodref          #2.#171       // coursier/core/ResolutionProcess.$anonfun$next$1:(Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  #173 = MethodHandle       6:#172        // REF_invokeStatic coursier/core/ResolutionProcess.$anonfun$next$1:(Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  #174 = Utf8               (Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  #175 = MethodType         #174          //  (Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  #176 = Utf8               (Lcoursier/core/Missing;)Lscala/Function1;
  #177 = NameAndType        #26:#176      // apply:(Lcoursier/core/Missing;)Lscala/Function1;
  #178 = InvokeDynamic      #1:#177       // #1:apply:(Lcoursier/core/Missing;)Lscala/Function1;
  #179 = Utf8               map
  #180 = NameAndType        #179:#145     // map:(Lscala/Function1;)Ljava/lang/Object;
  #181 = InterfaceMethodref #14.#180      // coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #182 = NameAndType        #165:#151     // next:()Lcoursier/core/ResolutionProcess;
  #183 = Methodref          #149.#182     // coursier/core/Continue.next:()Lcoursier/core/ResolutionProcess;
  #184 = Utf8               Z
  #185 = Utf8               next$default$2
  #186 = Utf8               ()Z
  #187 = Utf8               <F:Ljava/lang/Object;>()Z
  #188 = Utf8               x3$1
  #189 = Utf8               fetch$1
  #190 = Utf8               maxIterations0$1
  #191 = Utf8               F$1
  #192 = Utf8               result
  #193 = Utf8               next0
  #194 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/core/ResolutionProcess;
  #195 = NameAndType        #193:#194     // next0:(Lscala/collection/immutable/Seq;)Lcoursier/core/ResolutionProcess;
  #196 = Methodref          #108.#195     // coursier/core/Missing.next0:(Lscala/collection/immutable/Seq;)Lcoursier/core/ResolutionProcess;
  #197 = NameAndType        #89:#90       // run:(Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
  #198 = Methodref          #2.#197       // coursier/core/ResolutionProcess.run:(Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
  #199 = Utf8               Lcoursier/core/Missing;
  #200 = Utf8               Lscala/collection/immutable/Vector;
  #201 = Utf8               x3$2
  #202 = Utf8               ()V
  #203 = NameAndType        #156:#202     // "<init>":()V
  #204 = Methodref          #4.#203       // java/lang/Object."<init>":()V
  #205 = Utf8               $init$
  #206 = Utf8               (Lscala/Product;)V
  #207 = NameAndType        #205:#206     // $init$:(Lscala/Product;)V
  #208 = InterfaceMethodref #6.#207       // scala/Product.$init$:(Lscala/Product;)V
  #209 = Utf8               $deserializeLambda$
  #210 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #211 = Utf8               scala/runtime/LambdaDeserialize
  #212 = Class              #211          // scala/runtime/LambdaDeserialize
  #213 = Utf8               bootstrap
  #214 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #215 = NameAndType        #213:#214     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #216 = Methodref          #212.#215     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #217 = MethodHandle       6:#216        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #218 = Utf8               lambdaDeserialize
  #219 = NameAndType        #218:#210     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #220 = InvokeDynamic      #2:#219       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #221 = Utf8               Code
  #222 = Utf8               MethodParameters
  #223 = Utf8               Signature
  #224 = Utf8               LineNumberTable
  #225 = Utf8               LocalVariableTable
  #226 = Utf8               StackMapTable
  #227 = Utf8               InnerClasses
  #228 = Utf8               SourceFile
  #229 = Utf8               RuntimeVisibleAnnotations
  #230 = Utf8               BootstrapMethods
  #231 = Utf8               ScalaInlineInfo
  #232 = Utf8               ScalaSig
{
  public static coursier.core.ResolutionProcess apply(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
         3: aload_0
         4: invokevirtual #36                 // Method coursier/core/ResolutionProcess$.apply:(Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
         7: areturn
    MethodParameters:
      Name                           Flags
      resolution                     final

  public static int defaultMaxIterations();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
         3: invokevirtual #40                 // Method coursier/core/ResolutionProcess$.defaultMaxIterations:()I
         6: ireturn

  public static <F extends java.lang.Object> scala.collection.immutable.Nil$ fetch$default$3();
    descriptor: ()Lscala/collection/immutable/Nil$;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
         3: invokevirtual #45                 // Method coursier/core/ResolutionProcess$.fetch$default$3:()Lscala/collection/immutable/Nil$;
         6: areturn
    Signature: #43                          // <F:Ljava/lang/Object;>()Lscala/collection/immutable/Nil$;

  public static <F extends java.lang.Object> scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F> fetch(scala.collection.immutable.Seq<coursier.core.Repository>, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, scala.collection.immutable.Seq<scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>>, coursier.util.Gather<F>);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #53                 // Method coursier/core/ResolutionProcess$.fetch:(Lscala/collection/immutable/Seq;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lscala/Function1;
        10: areturn
    Signature: #48                          // <F:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;>;Lcoursier/util/Gather<TF;>;)Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;
    MethodParameters:
      Name                           Flags
      repositories                   final
      fetch                          final
      fetchs                         final
      F                              final

  public static <F extends java.lang.Object> coursier.util.EitherT<F, scala.collection.immutable.Seq<java.lang.String>, scala.Tuple2<coursier.core.ArtifactSource, coursier.core.Project>> fetchOne(scala.collection.immutable.Seq<coursier.core.Repository>, coursier.core.Module, java.lang.String, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, scala.collection.immutable.Seq<scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>>, coursier.util.Gather<F>);
    descriptor: (Lscala/collection/immutable/Seq;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lcoursier/util/EitherT;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=6, args_size=6
         0: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: invokevirtual #60                 // Method coursier/core/ResolutionProcess$.fetchOne:(Lscala/collection/immutable/Seq;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lscala/collection/immutable/Seq;Lcoursier/util/Gather;)Lcoursier/util/EitherT;
        14: areturn
    Signature: #56                          // <F:Ljava/lang/Object;>(Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;>;Lcoursier/util/Gather<TF;>;)Lcoursier/util/EitherT<TF;Lscala/collection/immutable/Seq<Ljava/lang/String;>;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
    MethodParameters:
      Name                           Flags
      repositories                   final
      module                         final
      version                        final
      fetch                          final
      fetchs                         final
      F                              final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/ResolutionProcess;
    Signature: #63                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/Product.productPrefix$:(Lscala/Product;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/ResolutionProcess;

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #82                 // InterfaceMethod scala/Product.productElementName$:(Lscala/Product;I)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/ResolutionProcess;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/ResolutionProcess;
    Signature: #85                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public <F extends java.lang.Object> F run(scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, int, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=4
         0: iload_2
         1: iconst_0
         2: if_icmpne     18
         5: aload_3
         6: aload_0
         7: invokevirtual #96                 // Method current:()Lcoursier/core/Resolution;
        10: invokeinterface #100,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        15: goto          174
        18: iload_2
        19: iconst_0
        20: if_icmple     29
        23: iload_2
        24: iconst_1
        25: isub
        26: goto          30
        29: iload_2
        30: istore        6
        32: aload_0
        33: astore        7
        35: aload         7
        37: instanceof    #102                // class coursier/core/Done
        40: ifeq          66
        43: aload         7
        45: checkcast     #102                // class coursier/core/Done
        48: astore        8
        50: aload_3
        51: aload         8
        53: invokevirtual #104                // Method coursier/core/Done.resolution:()Lcoursier/core/Resolution;
        56: invokeinterface #100,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        61: astore        5
        63: goto          172
        66: goto          69
        69: aload         7
        71: instanceof    #108                // class coursier/core/Missing
        74: ifeq          125
        77: aload         7
        79: checkcast     #108                // class coursier/core/Missing
        82: astore        9
        84: getstatic     #111                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        87: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
        90: aload         9
        92: invokevirtual #115                // Method coursier/core/Missing.missing:()Lscala/collection/immutable/Seq;
        95: aload_1
        96: aload_3
        97: invokevirtual #119                // Method coursier/core/ResolutionProcess$.fetchAll:(Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/util/Monad;)Ljava/lang/Object;
       100: aload_3
       101: invokevirtual #123                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
       104: aload         9
       106: aload_1
       107: iload         6
       109: aload_3
       110: invokedynamic #143,  0            // InvokeDynamic #0:apply:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;)Lscala/Function1;
       115: invokeinterface #147,  2          // InterfaceMethod coursier/util/Monad$AllOps.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       120: astore        5
       122: goto          172
       125: goto          128
       128: aload         7
       130: instanceof    #149                // class coursier/core/Continue
       133: ifeq          159
       136: aload         7
       138: checkcast     #149                // class coursier/core/Continue
       141: astore        10
       143: aload         10
       145: invokevirtual #153                // Method coursier/core/Continue.nextNoCont:()Lcoursier/core/ResolutionProcess;
       148: aload_1
       149: iload         6
       151: aload_3
       152: astore_3
       153: istore_2
       154: astore_1
       155: astore_0
       156: goto          0
       159: goto          162
       162: new           #155                // class scala/MatchError
       165: dup
       166: aload         7
       168: invokespecial #159                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       171: athrow
       172: aload         5
       174: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 0 /* same */
        frame_type = 17 /* same */
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class coursier/core/ResolutionProcess, class scala/Function1, int, class coursier/util/Monad, top, top, int, class coursier/core/ResolutionProcess ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 55 /* same */
        frame_type = 2 /* same */
        frame_type = 30 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/ResolutionProcess, class scala/Function1, int, class coursier/util/Monad, top, class java/lang/Object, int, class coursier/core/ResolutionProcess ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class coursier/core/ResolutionProcess, class scala/Function1, int, class coursier/util/Monad ]
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 19: 0
        line 22: 18
        line 24: 32
        line 25: 35
        line 26: 50
        line 25: 66
        line 27: 69
        line 28: 84
        line 27: 125
        line 31: 128
        line 32: 143
        line 34: 148
        line 31: 159
        line 24: 162
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           32     142     6 maxIterations0   I
            0     175     0  this   Lcoursier/core/ResolutionProcess;
            0     175     1 fetch   Lscala/Function1;
            0     175     2 maxIterations   I
            0     175     3     F   Lcoursier/util/Monad;
    Signature: #91                          // <F:Ljava/lang/Object;>(Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;ILcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      fetch                          final
      maxIterations                  final
      F                              final

  public <F extends java.lang.Object> int run$default$2();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
         3: invokevirtual #40                 // Method coursier/core/ResolutionProcess$.defaultMaxIterations:()I
         6: ireturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/core/ResolutionProcess;
    Signature: #164                         // <F:Ljava/lang/Object;>()I

  public final <F extends java.lang.Object> F next(scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, boolean, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;ZLcoursier/util/Monad;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=9, args_size=4
         0: aload_0
         1: astore        6
         3: aload         6
         5: instanceof    #102                // class coursier/core/Done
         8: ifeq          23
        11: aload_3
        12: aload_0
        13: invokeinterface #100,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        18: astore        5
        20: goto          144
        23: goto          26
        26: aload         6
        28: instanceof    #108                // class coursier/core/Missing
        31: ifeq          78
        34: aload         6
        36: checkcast     #108                // class coursier/core/Missing
        39: astore        7
        41: getstatic     #111                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        44: getstatic     #34                 // Field coursier/core/ResolutionProcess$.MODULE$:Lcoursier/core/ResolutionProcess$;
        47: aload         7
        49: invokevirtual #115                // Method coursier/core/Missing.missing:()Lscala/collection/immutable/Seq;
        52: aload_1
        53: aload_3
        54: invokevirtual #119                // Method coursier/core/ResolutionProcess$.fetchAll:(Lscala/collection/immutable/Seq;Lscala/Function1;Lcoursier/util/Monad;)Ljava/lang/Object;
        57: aload_3
        58: invokevirtual #123                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        61: aload         7
        63: invokedynamic #178,  0            // InvokeDynamic #1:apply:(Lcoursier/core/Missing;)Lscala/Function1;
        68: invokeinterface #181,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        73: astore        5
        75: goto          144
        78: goto          81
        81: aload         6
        83: instanceof    #149                // class coursier/core/Continue
        86: ifeq          131
        89: aload         6
        91: checkcast     #149                // class coursier/core/Continue
        94: astore        8
        96: iload_2
        97: ifeq          115
       100: aload         8
       102: invokevirtual #153                // Method coursier/core/Continue.nextNoCont:()Lcoursier/core/ResolutionProcess;
       105: aload_1
       106: iload_2
       107: aload_3
       108: astore_3
       109: istore_2
       110: astore_1
       111: astore_0
       112: goto          0
       115: aload_3
       116: aload         8
       118: invokevirtual #183                // Method coursier/core/Continue.next:()Lcoursier/core/ResolutionProcess;
       121: invokeinterface #100,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
       126: astore        5
       128: goto          144
       131: goto          134
       134: new           #155                // class scala/MatchError
       137: dup
       138: aload         6
       140: invokespecial #159                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       143: athrow
       144: aload         5
       146: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 0 /* same */
        frame_type = 254 /* append */
          offset_delta = 22
          locals = [ top, top, class coursier/core/ResolutionProcess ]
        frame_type = 2 /* same */
        frame_type = 51 /* same */
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class coursier/core/Continue ]
        frame_type = 249 /* chop */
          offset_delta = 15
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/ResolutionProcess, class scala/Function1, int, class coursier/util/Monad, top, class java/lang/Object, class coursier/core/ResolutionProcess ]
          stack = []
      LineNumberTable:
        line 45: 0
        line 46: 3
        line 47: 11
        line 46: 23
        line 48: 26
        line 49: 41
        line 50: 61
        line 48: 78
        line 51: 81
        line 52: 96
        line 53: 100
        line 55: 115
        line 51: 131
        line 45: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     147     0  this   Lcoursier/core/ResolutionProcess;
            0     147     1 fetch   Lscala/Function1;
            0     147     2 fastForward   Z
            0     147     3     F   Lcoursier/util/Monad;
    Signature: #167                         // <F:Ljava/lang/Object;>(Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;ZLcoursier/util/Monad<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      fetch                          final
      fastForward                    final
      F                              final

  public final <F extends java.lang.Object> boolean next$default$2();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/ResolutionProcess;
    Signature: #187                         // <F:Ljava/lang/Object;>()Z

  public abstract coursier.core.Resolution current();
    descriptor: ()Lcoursier/core/Resolution;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static final java.lang.Object $anonfun$run$1(coursier.core.Missing, scala.Function1, int, coursier.util.Monad, scala.collection.immutable.Vector);
    descriptor: (Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=5
         0: aload_0
         1: aload         4
         3: invokevirtual #196                // Method coursier/core/Missing.next0:(Lscala/collection/immutable/Seq;)Lcoursier/core/ResolutionProcess;
         6: aload_1
         7: iload_2
         8: aload_3
         9: invokevirtual #198                // Method run:(Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
        12: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  x3$1   Lcoursier/core/Missing;
            0      13     1 fetch$1   Lscala/Function1;
            0      13     2 maxIterations0$1   I
            0      13     3   F$1   Lcoursier/util/Monad;
            0      13     4 result   Lscala/collection/immutable/Vector;
    MethodParameters:
      Name                           Flags
      x3$1                           final
      fetch$1                        final
      maxIterations0$1               final
      F$1                            final
      result                         final

  public static final coursier.core.ResolutionProcess $anonfun$next$1(coursier.core.Missing, scala.collection.immutable.Vector);
    descriptor: (Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #196                // Method coursier/core/Missing.next0:(Lscala/collection/immutable/Seq;)Lcoursier/core/ResolutionProcess;
         5: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  x3$2   Lcoursier/core/Missing;
            0       6     1 result   Lscala/collection/immutable/Vector;
    MethodParameters:
      Name                           Flags
      x3$2                           final
      result                         final

  public coursier.core.ResolutionProcess();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #204                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #208                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
         8: return
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/ResolutionProcess;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #220,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #17= #14 of #16;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #20= #19 of #16;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #25= #22 of #24;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "ResolutionProcess.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t=c!B\n\u0015\u0003CI\u0002\"B\u0018\u0001\t\u0003\u0001\u0004\"B\u001a\u0001\t\u0003!\u0004\"CAz\u0001E\u0005I\u0011AA{\u0011\u001d\u0011\t\u0001\u0001C\u0003\u0005\u0007AqAa\f\u0001\r\u0003\u0011\t\u0004C\u0005\u00034\u0001\t\n\u0011\"\u0002\u00036\u001d)Q\u000b\u0006E\u0001-\u001a)1\u0003\u0006E\u0001/\")q\u0006\u0003C\u0001?\u0016!\u0001\r\u0003\u0001b\u000b\u0011q\b\u0002A@\t\u000f\u0005U\u0001\u0002\"\u0001\u0002\u0018!1!\u000b\u0003C\u0001\u00037B\u0011\"!\u001f\t#\u0003%\t!a\u001f\t\u000f\u0005%\u0006\u0002\"\u0001\u0002,\"9\u00111\u0017\u0005\u0005\u0002\u0005U\u0006\u0002CA^\u0011\u0011\u0005a#!0\t\u0013\u0005}\u0007\"!A\u0005\n\u0005\u0005(!\u0005*fg>dW\u000f^5p]B\u0013xnY3tg*\u0011QCF\u0001\u0005G>\u0014XMC\u0001\u0018\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\u0005\u0001i\u00013\u0005\u0005\u0002\u001c=5\tADC\u0001\u001e\u0003\u0015\u00198-\u00197b\u0013\tyBD\u0001\u0004B]f\u0014VM\u001a\t\u00037\u0005J!A\t\u000f\u0003\u000fA\u0013x\u000eZ;diB\u0011A\u0005\f\b\u0003K)r!AJ\u0015\u000e\u0003\u001dR!\u0001\u000b\r\u0002\rq\u0012xn\u001c;?\u0013\u0005i\u0012BA\u0016\u001d\u0003\u001d\u0001\u0018mY6bO\u0016L!!\f\u0018\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005-b\u0012A\u0002\u001fj]&$h\bF\u00012!\t\u0011\u0004!D\u0001\u0015\u0003\r\u0011XO\\\u000b\u0003ke\"BAN)\u0002pR\u0011q\u0007\u0013\t\u0004qe*E\u0002\u0001\u0003\u0006u\t\u0011\ra\u000f\u0002\u0002\rV\u0011AhQ\t\u0003{\u0001\u0003\"a\u0007 \n\u0005}b\"a\u0002(pi\"Lgn\u001a\t\u00037\u0005K!A\u0011\u000f\u0003\u0007\u0005s\u0017\u0010B\u0003Es\t\u0007AHA\u0001`!\t\u0011d)\u0003\u0002H)\tQ!+Z:pYV$\u0018n\u001c8\t\u000b%\u0013\u00019\u0001&\u0002\u0003\u0019\u00032a\u0013(Q\u001b\u0005a%BA\'\u0017\u0003\u0011)H/\u001b7\n\u0005=c%!B\'p]\u0006$\u0007C\u0001\u001d:\u0011\u0015\u0011&\u00011\u0001T\u0003\u00151W\r^2i!\r!6\u0002\u0015\b\u0003e\u001d\t\u0011CU3t_2,H/[8o!J|7-Z:t!\t\u0011\u0004bE\u0002\t5a\u0003\"!\u00170\u000e\u0003iS!a\u0017/\u0002\u0005%|\'\"A/\u0002\t)\fg/Y\u0005\u0003[i#\u0012A\u0016\u0002\u0003\u001b\u0012\u00032\u0001\n2e\u0013\t\u0019gFA\u0002TKF\u0004BaG3hg&\u0011a\r\b\u0002\u0007)V\u0004H.\u001a\u001a\u0011\tm)\u0007n\u001b\t\u0003e%L!A\u001b\u000b\u0003\r5{G-\u001e7f!\ta\u0007O\u0004\u0002n]B\u0011a\u0005H\u0005\u0003_r\ta\u0001\u0015:fI\u00164\u0017BA9s\u0005\u0019\u0019FO]5oO*\u0011q\u000e\b\t\u0005IQ4x/\u0003\u0002v]\t1Q)\u001b;iKJ\u00042\u0001\n2l!\u0011YR\r_>\u0011\u0005IJ\u0018B\u0001>\u0015\u00059\t%\u000f^5gC\u000e$8k\\;sG\u0016\u0004\"A\r?\n\u0005u$\"a\u0002)s_*,7\r\u001e\u0002\u0006\r\u0016$8\r[\u000b\u0005\u0003\u0003\tY\u0001E\u0004\u001c\u0003\u0007\t9!!\u0003\n\u0007\u0005\u0015ADA\u0005Gk:\u001cG/[8ocA\u0019AEY4\u0011\u000ba\nY!!\u0005\u0005\riZ!\u0019AA\u0007+\ra\u0014q\u0002\u0003\u0007\t\u0006-!\u0019\u0001\u001f\u0011\u0007\u0005M!\"D\u0001\t\u0003!1W\r^2i\u001f:,W\u0003BA\r\u0003K!B\"a\u0007\u00024\u0005}\u00121IA$\u0003+\"B!!\b\u0002,A91*a\b\u0002$Y<\u0018bAA\u0011\u0019\n9Q)\u001b;iKJ$\u0006c\u0001\u001d\u0002&\u00111!\b\u0004b\u0001\u0003O)2\u0001PA\u0015\t\u0019!\u0015Q\u0005b\u0001y!1\u0011\n\u0004a\u0002\u0003[\u0001RaSA\u0018\u0003GI1!!\rM\u0005\u00199\u0015\r\u001e5fe\"9\u0011Q\u0007\u0007A\u0002\u0005]\u0012\u0001\u0004:fa>\u001c\u0018\u000e^8sS\u0016\u001c\b\u0003\u0002\u0013c\u0003s\u00012AMA\u001e\u0013\r\ti\u0004\u0006\u0002\u000b%\u0016\u0004xn]5u_JL\bBBA!\u0019\u0001\u0007\u0001.\u0001\u0004n_\u0012,H.\u001a\u0005\u0007\u0003\u000bb\u0001\u0019A6\u0002\u000fY,\'o]5p]\"1!\u000b\u0004a\u0001\u0003\u0013\u0002b!a\u0013\u0002R\u0005\rbb\u0001\u001a\u0002N%\u0019\u0011q\n\u000b\u0002\u0015I+\u0007o\\:ji>\u0014\u00180C\u0002\u007f\u0003\'R1!a\u0014\u0015\u0011\u001d\t9\u0006\u0004a\u0001\u00033\naAZ3uG\"\u001c\b\u0003\u0002\u0013c\u0003\u0013*B!!\u0018\u0002fQA\u0011qLA8\u0003c\n)\b\u0006\u0003\u0002b\u0005-\u0004#BA\n\u0017\u0005\r\u0004c\u0001\u001d\u0002f\u00111!(\u0004b\u0001\u0003O*2\u0001PA5\t\u0019!\u0015Q\rb\u0001y!1\u0011*\u0004a\u0002\u0003[\u0002RaSA\u0018\u0003GBq!!\u000e\u000e\u0001\u0004\t9\u0004\u0003\u0004S\u001b\u0001\u0007\u00111\u000f\t\u0007\u0003\u0017\n\t&a\u0019\t\u0013\u0005]S\u0002%AA\u0002\u0005]\u0004\u0003\u0002\u0013c\u0003g\nqBZ3uG\"$C-\u001a4bk2$HeM\u000b\u0005\u0003{\n\u0019+\u0006\u0002\u0002\u0000)\"\u0011\u0011QAI\u001d\u0011\t\u0019)!$\u000e\u0005\u0005\u0015%\u0002BAD\u0003\u0013\u000b\u0011\"[7nkR\f\'\r\\3\u000b\u0007\u0005-E$\u0001\u0006d_2dWm\u0019;j_:LA!a$\u0002\u0006\u0006\u0019a*\u001b7,\u0005\u0005M\u0005\u0003BAK\u0003?k!!a&\u000b\t\u0005e\u00151T\u0001\nk:\u001c\u0007.Z2lK\u0012T1!!(\u001d\u0003)\tgN\\8uCRLwN\\\u0005\u0005\u0003C\u000b9JA\tv]\u000eDWmY6fIZ\u000b\'/[1oG\u0016$aA\u000f\bC\u0002\u0005\u0015Vc\u0001\u001f\u0002(\u00121A)a)C\u0002q\nA\u0003Z3gCVdG/T1y\u0013R,\'/\u0019;j_:\u001cXCAAW!\rY\u0012qV\u0005\u0004\u0003cc\"aA%oi\u0006)\u0011\r\u001d9msR\u0019\u0011\'a.\t\r\u0005e\u0006\u00031\u0001F\u0003)\u0011Xm]8mkRLwN\\\u0001\tM\u0016$8\r[!mYV!\u0011qXAc)\u0019\t\t-a6\u0002\\R!\u00111YAi!\u0015A\u0014QYAf\t\u0019Q\u0014C1\u0001\u0002HV\u0019A(!3\u0005\r\u0011\u000b)M1\u0001=!\u0011!\u0013Q\u001a3\n\u0007\u0005=gF\u0001\u0004WK\u000e$xN\u001d\u0005\u0007\u0013F\u0001\u001d!a5\u0011\t-s\u0015Q\u001b\t\u0004q\u0005\u0015\u0007bBAm#\u0001\u0007\u0011qA\u0001\b[>$g+\u001a:t\u0011\u0019\u0011\u0016\u00031\u0001\u0002^B!AkCAk\u000319(/\u001b;f%\u0016\u0004H.Y2f)\t\t\u0019\u000f\u0005\u0003\u0002f\u0006-XBAAt\u0015\r\tI\u000fX\u0001\u0005Y\u0006tw-\u0003\u0003\u0002n\u0006\u001d(AB(cU\u0016\u001cG\u000fC\u0005\u0002r\n\u0001\n\u00111\u0001\u0002.\u0006iQ.\u0019=Ji\u0016\u0014\u0018\r^5p]N\fQB];oI\u0011,g-Y;mi\u0012\u0012T\u0003BA|\u0003w,\"!!?+\t\u00055\u0016\u0011\u0013\u0003\u0007u\r\u0011\r!!@\u0016\u0007q\ny\u0010\u0002\u0004E\u0003w\u0014\r\u0001P\u0001\u0005]\u0016DH/\u0006\u0003\u0003\u0006\t-AC\u0002B\u0004\u0005/\u0011Y\u0002\u0006\u0003\u0003\n\tE\u0001\u0003\u0002\u001d\u0003\fE\"aA\u000f\u0003C\u0002\t5Qc\u0001\u001f\u0003\u0010\u00111AIa\u0003C\u0002qBa!\u0013\u0003A\u0004\tM\u0001\u0003B&O\u0005+\u00012\u0001\u000fB\u0006\u0011\u0019\u0011F\u00011\u0001\u0003\u001aA!Ak\u0003B\u000b\u0011%\u0011i\u0002\u0002I\u0001\u0002\u0004\u0011y\"A\u0006gCN$hi\u001c:xCJ$\u0007cA\u000e\u0003\"%\u0019!1\u0005\u000f\u0003\u000f\t{w\u000e\\3b]\"\u001aAAa\n\u0011\t\t%\"1F\u0007\u0003\u00037KAA!\f\u0002\u001c\n9A/Y5me\u0016\u001c\u0017aB2veJ,g\u000e^\u000b\u0002\u000b\u0006qa.\u001a=uI\u0011,g-Y;mi\u0012\u0012T\u0003\u0002B\u001c\u0005w)\"A!\u000f+\t\t}\u0011\u0011\u0013\u0003\u0007u\u0019\u0011\rA!\u0010\u0016\u0007q\u0012y\u0004\u0002\u0004E\u0005w\u0011\r\u0001P\u0015\b\u0001\t\r#q\tB&\u0013\r\u0011)\u0005\u0006\u0002\t\u0007>tG/\u001b8vK&\u0019!\u0011\n\u000b\u0003\t\u0011{g.Z\u0005\u0004\u0005\u001b\"\"aB\'jgNLgn\u001a"
    )
BootstrapMethods:
  0: #140 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #124 (Ljava/lang/Object;)Ljava/lang/Object;
      #129 REF_invokeStatic coursier/core/ResolutionProcess.$anonfun$run$1:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
      #131 (Lscala/collection/immutable/Vector;)Ljava/lang/Object;
      #132 5
      #133 1
      #131 (Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  1: #140 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #124 (Ljava/lang/Object;)Ljava/lang/Object;
      #173 REF_invokeStatic coursier/core/ResolutionProcess.$anonfun$next$1:(Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
      #175 (Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
      #132 5
      #133 1
      #175 (Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
  2: #217 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #173 REF_invokeStatic coursier/core/ResolutionProcess.$anonfun$next$1:(Lcoursier/core/Missing;Lscala/collection/immutable/Vector;)Lcoursier/core/ResolutionProcess;
      #129 REF_invokeStatic coursier/core/ResolutionProcess.$anonfun$run$1:(Lcoursier/core/Missing;Lscala/Function1;ILcoursier/util/Monad;Lscala/collection/immutable/Vector;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x40 (unknown attribute)
   01 00 00 0C 00 A9 00 AA 01 00 7B 00 7C 01 00 9A
   00 CA 01 00 5D 00 5E 00 00 A5 00 A6 01 00 B9 00
   BA 01 00 4C 00 4D 00 00 54 00 3E 01 00 3D 00 3E
   01 00 46 00 47 00 00 59 00 5A 01 00 A3 00 26 01

  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
