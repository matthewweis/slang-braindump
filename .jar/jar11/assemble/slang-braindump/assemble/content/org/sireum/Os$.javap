Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/Os$.class
  Last modified May 29, 2022; size 10773 bytes
  SHA-256 checksum e813d4b5d4fd952212edd26471cb22f054b399594d3a543afb8ee25955a85d0e
  Compiled from "Os.scala"
public final class org.sireum.Os$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Os$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 5, methods: 42, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Os$
    #2 = Class              #1            // org/sireum/Os$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Os.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/Indexable$Pos
   #12 = Class              #11           // org/sireum/Indexable$Pos
   #13 = Utf8               org/sireum/Indexable
   #14 = Class              #13           // org/sireum/Indexable
   #15 = Utf8               Pos
   #16 = Utf8               org/sireum/Os$Ext$
   #17 = Class              #16           // org/sireum/Os$Ext$
   #18 = Utf8               org/sireum/Os
   #19 = Class              #18           // org/sireum/Os
   #20 = Utf8               Ext$
   #21 = Utf8               org/sireum/Os$Kind$
   #22 = Class              #21           // org/sireum/Os$Kind$
   #23 = Utf8               Kind$
   #24 = Utf8               org/sireum/Os$Kind$Linux$
   #25 = Class              #24           // org/sireum/Os$Kind$Linux$
   #26 = Utf8               Linux$
   #27 = Utf8               org/sireum/Os$Kind$Mac$
   #28 = Class              #27           // org/sireum/Os$Kind$Mac$
   #29 = Utf8               Mac$
   #30 = Utf8               org/sireum/Os$Kind$Type
   #31 = Class              #30           // org/sireum/Os$Kind$Type
   #32 = Utf8               Type
   #33 = Utf8               org/sireum/Os$Kind$Win$
   #34 = Class              #33           // org/sireum/Os$Kind$Win$
   #35 = Utf8               Win$
   #36 = Utf8               org/sireum/Os$Path
   #37 = Class              #36           // org/sireum/Os$Path
   #38 = Utf8               Path
   #39 = Utf8               org/sireum/Os$Path$
   #40 = Class              #39           // org/sireum/Os$Path$
   #41 = Utf8               Path$
   #42 = Utf8               org/sireum/Os$Path$Impl
   #43 = Class              #42           // org/sireum/Os$Path$Impl
   #44 = Utf8               Impl
   #45 = Utf8               org/sireum/Os$Path$Impl$
   #46 = Class              #45           // org/sireum/Os$Path$Impl$
   #47 = Utf8               Impl$
   #48 = Utf8               org/sireum/Os$Proc
   #49 = Class              #48           // org/sireum/Os$Proc
   #50 = Utf8               Proc
   #51 = Utf8               org/sireum/Os$Proc$
   #52 = Class              #51           // org/sireum/Os$Proc$
   #53 = Utf8               Proc$
   #54 = Utf8               MODULE$
   #55 = Utf8               Lorg/sireum/Os$;
   #56 = Utf8               cwd
   #57 = Utf8               Lorg/sireum/Os$Path;
   #58 = Utf8               home
   #59 = Utf8               roots
   #60 = Utf8               Lorg/sireum/IS;
   #61 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;
   #62 = Utf8               bitmap$0
   #63 = Utf8               B
   #64 = Utf8               <clinit>
   #65 = Utf8               ()V
   #66 = Utf8               <init>
   #67 = NameAndType        #66:#65       // "<init>":()V
   #68 = Methodref          #2.#67        // org/sireum/Os$."<init>":()V
   #69 = NameAndType        #54:#55       // MODULE$:Lorg/sireum/Os$;
   #70 = Fieldref           #2.#69        // org/sireum/Os$.MODULE$:Lorg/sireum/Os$;
   #71 = Utf8               cliArgs
   #72 = Utf8               ()Lorg/sireum/IS;
   #73 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #74 = Utf8               Lorg/sireum/Os$Ext$;
   #75 = NameAndType        #54:#74       // MODULE$:Lorg/sireum/Os$Ext$;
   #76 = Fieldref           #17.#75       // org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
   #77 = NameAndType        #71:#72       // cliArgs:()Lorg/sireum/IS;
   #78 = Methodref          #17.#77       // org/sireum/Os$Ext$.cliArgs:()Lorg/sireum/IS;
   #79 = Utf8               this
   #80 = Utf8               cwd$lzycompute
   #81 = Utf8               ()Lorg/sireum/Os$Path;
   #82 = NameAndType        #62:#63       // bitmap$0:B
   #83 = Fieldref           #2.#82        // org/sireum/Os$.bitmap$0:B
   #84 = Utf8               init$1
   #85 = NameAndType        #84:#81       // init$1:()Lorg/sireum/Os$Path;
   #86 = Methodref          #2.#85        // org/sireum/Os$.init$1:()Lorg/sireum/Os$Path;
   #87 = NameAndType        #56:#57       // cwd:Lorg/sireum/Os$Path;
   #88 = Fieldref           #2.#87        // org/sireum/Os$.cwd:Lorg/sireum/Os$Path;
   #89 = Utf8               java/lang/Throwable
   #90 = Class              #89           // java/lang/Throwable
   #91 = NameAndType        #80:#81       // cwd$lzycompute:()Lorg/sireum/Os$Path;
   #92 = Methodref          #2.#91        // org/sireum/Os$.cwd$lzycompute:()Lorg/sireum/Os$Path;
   #93 = Utf8               exit
   #94 = Utf8               (Lorg/sireum/Z;)V
   #95 = Utf8               code
   #96 = NameAndType        #93:#94       // exit:(Lorg/sireum/Z;)V
   #97 = Methodref          #17.#96       // org/sireum/Os$Ext$.exit:(Lorg/sireum/Z;)V
   #98 = Utf8               Lorg/sireum/Z;
   #99 = Utf8               env
  #100 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #101 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/String;>;
  #102 = Utf8               name
  #103 = NameAndType        #99:#100      // env:(Ljava/lang/String;)Lorg/sireum/Option;
  #104 = Methodref          #17.#103      // org/sireum/Os$Ext$.env:(Ljava/lang/String;)Lorg/sireum/Option;
  #105 = Utf8               Ljava/lang/String;
  #106 = Utf8               envs
  #107 = Utf8               ()Lorg/sireum/Map;
  #108 = Utf8               ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;
  #109 = NameAndType        #106:#107     // envs:()Lorg/sireum/Map;
  #110 = Methodref          #17.#109      // org/sireum/Os$Ext$.envs:()Lorg/sireum/Map;
  #111 = Utf8               fileSep
  #112 = Utf8               ()Ljava/lang/String;
  #113 = NameAndType        #111:#112     // fileSep:()Ljava/lang/String;
  #114 = Methodref          #17.#113      // org/sireum/Os$Ext$.fileSep:()Ljava/lang/String;
  #115 = Utf8               uriToPath
  #116 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path;
  #117 = Utf8               uri
  #118 = Utf8               Lorg/sireum/Os$Path$Impl$;
  #119 = NameAndType        #54:#118      // MODULE$:Lorg/sireum/Os$Path$Impl$;
  #120 = Fieldref           #46.#119      // org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
  #121 = Utf8               fromUri
  #122 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #123 = NameAndType        #121:#122     // fromUri:(Ljava/lang/String;)Ljava/lang/String;
  #124 = Methodref          #17.#123      // org/sireum/Os$Ext$.fromUri:(Ljava/lang/String;)Ljava/lang/String;
  #125 = Utf8               apply
  #126 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #127 = NameAndType        #125:#126     // apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #128 = Methodref          #46.#127      // org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #129 = Utf8               home$lzycompute
  #130 = Utf8               init$2
  #131 = NameAndType        #130:#81      // init$2:()Lorg/sireum/Os$Path;
  #132 = Methodref          #2.#131       // org/sireum/Os$.init$2:()Lorg/sireum/Os$Path;
  #133 = NameAndType        #58:#57       // home:Lorg/sireum/Os$Path;
  #134 = Fieldref           #2.#133       // org/sireum/Os$.home:Lorg/sireum/Os$Path;
  #135 = NameAndType        #129:#81      // home$lzycompute:()Lorg/sireum/Os$Path;
  #136 = Methodref          #2.#135       // org/sireum/Os$.home$lzycompute:()Lorg/sireum/Os$Path;
  #137 = Utf8               isLinux
  #138 = Utf8               ()Z
  #139 = Utf8               org/sireum/B$
  #140 = Class              #139          // org/sireum/B$
  #141 = Utf8               Lorg/sireum/B$;
  #142 = NameAndType        #54:#141      // MODULE$:Lorg/sireum/B$;
  #143 = Fieldref           #140.#142     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #144 = Utf8               kind
  #145 = Utf8               ()Lorg/sireum/Os$Kind$Type;
  #146 = NameAndType        #144:#145     // kind:()Lorg/sireum/Os$Kind$Type;
  #147 = Methodref          #2.#146       // org/sireum/Os$.kind:()Lorg/sireum/Os$Kind$Type;
  #148 = Utf8               Lorg/sireum/Os$Kind$Linux$;
  #149 = NameAndType        #54:#148      // MODULE$:Lorg/sireum/Os$Kind$Linux$;
  #150 = Fieldref           #25.#149      // org/sireum/Os$Kind$Linux$.MODULE$:Lorg/sireum/Os$Kind$Linux$;
  #151 = Utf8               equals
  #152 = Utf8               (Ljava/lang/Object;)Z
  #153 = NameAndType        #151:#152     // equals:(Ljava/lang/Object;)Z
  #154 = Methodref          #4.#153       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #155 = Utf8               (Z)Z
  #156 = NameAndType        #125:#155     // apply:(Z)Z
  #157 = Methodref          #140.#156     // org/sireum/B$.apply:(Z)Z
  #158 = Utf8               isMac
  #159 = Utf8               Lorg/sireum/Os$Kind$Mac$;
  #160 = NameAndType        #54:#159      // MODULE$:Lorg/sireum/Os$Kind$Mac$;
  #161 = Fieldref           #28.#160      // org/sireum/Os$Kind$Mac$.MODULE$:Lorg/sireum/Os$Kind$Mac$;
  #162 = Utf8               isWin
  #163 = Utf8               Lorg/sireum/Os$Kind$Win$;
  #164 = NameAndType        #54:#163      // MODULE$:Lorg/sireum/Os$Kind$Win$;
  #165 = Fieldref           #34.#164      // org/sireum/Os$Kind$Win$.MODULE$:Lorg/sireum/Os$Kind$Win$;
  #166 = Utf8               pathSep
  #167 = NameAndType        #166:#112     // pathSep:()Ljava/lang/String;
  #168 = Methodref          #17.#167      // org/sireum/Os$Ext$.pathSep:()Ljava/lang/String;
  #169 = Utf8               lineSep
  #170 = NameAndType        #169:#112     // lineSep:()Ljava/lang/String;
  #171 = Methodref          #17.#170      // org/sireum/Os$Ext$.lineSep:()Ljava/lang/String;
  #172 = Utf8               pathSepChar
  #173 = Utf8               ()I
  #174 = NameAndType        #172:#173     // pathSepChar:()I
  #175 = Methodref          #17.#174      // org/sireum/Os$Ext$.pathSepChar:()I
  #176 = Utf8               os
  #177 = NameAndType        #176:#145     // os:()Lorg/sireum/Os$Kind$Type;
  #178 = Methodref          #17.#177      // org/sireum/Os$Ext$.os:()Lorg/sireum/Os$Kind$Type;
  #179 = Utf8               readIndexableCFrom
  #180 = Utf8               (Ljava/lang/String;)Lorg/sireum/Indexable$Pos;
  #181 = Utf8               (Ljava/lang/String;)Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;
  #182 = Utf8               url
  #183 = Utf8               readIndexableCUrl
  #184 = NameAndType        #183:#180     // readIndexableCUrl:(Ljava/lang/String;)Lorg/sireum/Indexable$Pos;
  #185 = Methodref          #17.#184      // org/sireum/Os$Ext$.readIndexableCUrl:(Ljava/lang/String;)Lorg/sireum/Indexable$Pos;
  #186 = Utf8               path
  #187 = Utf8               value
  #188 = NameAndType        #162:#138     // isWin:()Z
  #189 = Methodref          #2.#188       // org/sireum/Os$.isWin:()Z
  #190 = Utf8               $4B
  #191 = NameAndType        #190:#155     // $4B:(Z)Z
  #192 = Methodref          #140.#191     // org/sireum/B$.$4B:(Z)Z
  #193 = Utf8               org/sireum/ops/StringOps$
  #194 = Class              #193          // org/sireum/ops/StringOps$
  #195 = Utf8               Lorg/sireum/ops/StringOps$;
  #196 = NameAndType        #54:#195      // MODULE$:Lorg/sireum/ops/StringOps$;
  #197 = Fieldref           #194.#196     // org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
  #198 = Utf8               (Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #199 = NameAndType        #125:#198     // apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #200 = Methodref          #194.#199     // org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #201 = Utf8               org/sireum/String$
  #202 = Class              #201          // org/sireum/String$
  #203 = Utf8               Lorg/sireum/String$;
  #204 = NameAndType        #54:#203      // MODULE$:Lorg/sireum/String$;
  #205 = Fieldref           #202.#204     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #206 = Utf8               /cygdrive/
  #207 = String             #206          // /cygdrive/
  #208 = NameAndType        #125:#122     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #209 = Methodref          #202.#208     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #210 = Utf8               org/sireum/ops/StringOps
  #211 = Class              #210          // org/sireum/ops/StringOps
  #212 = Utf8               startsWith
  #213 = Utf8               (Ljava/lang/String;)Z
  #214 = NameAndType        #212:#213     // startsWith:(Ljava/lang/String;)Z
  #215 = Methodref          #211.#214     // org/sireum/ops/StringOps.startsWith:(Ljava/lang/String;)Z
  #216 = Utf8               java/lang/StringBuilder
  #217 = Class              #216          // java/lang/StringBuilder
  #218 = Integer            1
  #219 = Utf8               (I)V
  #220 = NameAndType        #66:#219      // "<init>":(I)V
  #221 = Methodref          #217.#220     // java/lang/StringBuilder."<init>":(I)V
  #222 = Utf8               org/sireum/String
  #223 = Class              #222          // org/sireum/String
  #224 = Utf8               size$extension
  #225 = Utf8               (Ljava/lang/String;)Lorg/sireum/Z;
  #226 = NameAndType        #224:#225     // size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
  #227 = Methodref          #202.#226     // org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
  #228 = Utf8               org/sireum/Z$
  #229 = Class              #228          // org/sireum/Z$
  #230 = Utf8               Lorg/sireum/Z$;
  #231 = NameAndType        #54:#230      // MODULE$:Lorg/sireum/Z$;
  #232 = Fieldref           #229.#231     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #233 = Utf8               (I)Lorg/sireum/Z;
  #234 = NameAndType        #125:#233     // apply:(I)Lorg/sireum/Z;
  #235 = Methodref          #229.#234     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #236 = Utf8               org/sireum/Z
  #237 = Class              #236          // org/sireum/Z
  #238 = Utf8               $plus
  #239 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #240 = NameAndType        #238:#239     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #241 = InterfaceMethodref #237.#240     // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #242 = Utf8               substring
  #243 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
  #244 = NameAndType        #242:#243     // substring:(Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
  #245 = Methodref          #211.#244     // org/sireum/ops/StringOps.substring:(Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
  #246 = Utf8               (Ljava/lang/String;)V
  #247 = NameAndType        #66:#246      // "<init>":(Ljava/lang/String;)V
  #248 = Methodref          #223.#247     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #249 = Utf8               append
  #250 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #251 = NameAndType        #249:#250     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #252 = Methodref          #217.#251     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #253 = Utf8               :
  #254 = String             #253          // :
  #255 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #256 = NameAndType        #249:#255     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #257 = Methodref          #217.#256     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #258 = Utf8               toString
  #259 = NameAndType        #258:#112     // toString:()Ljava/lang/String;
  #260 = Methodref          #217.#259     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #261 = Utf8               org/sireum/C$
  #262 = Class              #261          // org/sireum/C$
  #263 = Utf8               Lorg/sireum/C$;
  #264 = NameAndType        #54:#263      // MODULE$:Lorg/sireum/C$;
  #265 = Fieldref           #262.#264     // org/sireum/C$.MODULE$:Lorg/sireum/C$;
  #266 = Utf8               (C)I
  #267 = NameAndType        #125:#266     // apply:(C)I
  #268 = Methodref          #262.#267     // org/sireum/C$.apply:(C)I
  #269 = Utf8               replaceAllChars
  #270 = Utf8               (II)Ljava/lang/String;
  #271 = NameAndType        #269:#270     // replaceAllChars:(II)Ljava/lang/String;
  #272 = Methodref          #211.#271     // org/sireum/ops/StringOps.replaceAllChars:(II)Ljava/lang/String;
  #273 = Utf8               /
  #274 = String             #273          // /
  #275 = Utf8               ()Ljava/lang/Object;
  #276 = MethodType         #275          //  ()Ljava/lang/Object;
  #277 = Utf8               $anonfun$path$1$adapted
  #278 = NameAndType        #277:#275     // $anonfun$path$1$adapted:()Ljava/lang/Object;
  #279 = Methodref          #2.#278       // org/sireum/Os$.$anonfun$path$1$adapted:()Ljava/lang/Object;
  #280 = MethodHandle       6:#279        // REF_invokeStatic org/sireum/Os$.$anonfun$path$1$adapted:()Ljava/lang/Object;
  #281 = Utf8               java/lang/invoke/LambdaMetafactory
  #282 = Class              #281          // java/lang/invoke/LambdaMetafactory
  #283 = Utf8               altMetafactory
  #284 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #285 = NameAndType        #283:#284     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #286 = Methodref          #282.#285     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #287 = MethodHandle       6:#286        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #288 = Utf8               ()Lscala/Function0;
  #289 = NameAndType        #125:#288     // apply:()Lscala/Function0;
  #290 = InvokeDynamic      #0:#289       // #0:apply:()Lscala/Function0;
  #291 = Utf8               $amp$amp$extension
  #292 = Utf8               (ZLscala/Function0;)Z
  #293 = NameAndType        #291:#292     // $amp$amp$extension:(ZLscala/Function0;)Z
  #294 = Methodref          #140.#293     // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #295 = Utf8               norm
  #296 = NameAndType        #295:#122     // norm:(Ljava/lang/String;)Ljava/lang/String;
  #297 = Methodref          #17.#296      // org/sireum/Os$Ext$.norm:(Ljava/lang/String;)Ljava/lang/String;
  #298 = Utf8               sOps
  #299 = Utf8               Lorg/sireum/ops/StringOps;
  #300 = Utf8               cygPrefix
  #301 = Utf8               java/lang/String
  #302 = Class              #301          // java/lang/String
  #303 = Utf8               proc
  #304 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #305 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Proc;
  #306 = Utf8               commands
  #307 = Utf8               Lorg/sireum/Os$Proc$;
  #308 = NameAndType        #54:#307      // MODULE$:Lorg/sireum/Os$Proc$;
  #309 = Fieldref           #52.#308      // org/sireum/Os$Proc$.MODULE$:Lorg/sireum/Os$Proc$;
  #310 = NameAndType        #56:#81       // cwd:()Lorg/sireum/Os$Path;
  #311 = Methodref          #2.#310       // org/sireum/Os$.cwd:()Lorg/sireum/Os$Path;
  #312 = Utf8               org/sireum/Map$
  #313 = Class              #312          // org/sireum/Map$
  #314 = Utf8               Lorg/sireum/Map$;
  #315 = NameAndType        #54:#314      // MODULE$:Lorg/sireum/Map$;
  #316 = Fieldref           #313.#315     // org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
  #317 = Utf8               empty
  #318 = NameAndType        #317:#107     // empty:()Lorg/sireum/Map;
  #319 = Methodref          #313.#318     // org/sireum/Map$.empty:()Lorg/sireum/Map;
  #320 = Utf8               org/sireum/package$
  #321 = Class              #320          // org/sireum/package$
  #322 = Utf8               Lorg/sireum/package$;
  #323 = NameAndType        #54:#322      // MODULE$:Lorg/sireum/package$;
  #324 = Fieldref           #321.#323     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #325 = Utf8               T
  #326 = NameAndType        #325:#138     // T:()Z
  #327 = Methodref          #321.#326     // org/sireum/package$.T:()Z
  #328 = Utf8               org/sireum/None$
  #329 = Class              #328          // org/sireum/None$
  #330 = Utf8               Lorg/sireum/None$;
  #331 = NameAndType        #54:#330      // MODULE$:Lorg/sireum/None$;
  #332 = Fieldref           #329.#331     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #333 = Utf8               ()Lorg/sireum/None;
  #334 = NameAndType        #125:#333     // apply:()Lorg/sireum/None;
  #335 = Methodref          #329.#334     // org/sireum/None$.apply:()Lorg/sireum/None;
  #336 = Utf8               F
  #337 = NameAndType        #336:#138     // F:()Z
  #338 = Methodref          #321.#337     // org/sireum/package$.F:()Z
  #339 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
  #340 = NameAndType        #125:#339     // apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
  #341 = Methodref          #52.#340      // org/sireum/Os$Proc$.apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
  #342 = Utf8               procs
  #343 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Proc;
  #344 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #345 = MethodType         #344          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #346 = Utf8               $anonfun$procs$1$adapted
  #347 = NameAndType        #346:#344     // $anonfun$procs$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #348 = Methodref          #2.#347       // org/sireum/Os$.$anonfun$procs$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #349 = MethodHandle       6:#348        // REF_invokeStatic org/sireum/Os$.$anonfun$procs$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #350 = Utf8               ()Lscala/Function1;
  #351 = NameAndType        #125:#350     // apply:()Lscala/Function1;
  #352 = InvokeDynamic      #1:#351       // #1:apply:()Lscala/Function1;
  #353 = Utf8               split
  #354 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #355 = NameAndType        #353:#354     // split:(Lscala/Function1;)Lorg/sireum/IS;
  #356 = Methodref          #211.#355     // org/sireum/ops/StringOps.split:(Lscala/Function1;)Lorg/sireum/IS;
  #357 = Utf8               $anonfun$procs$2$adapted
  #358 = NameAndType        #357:#344     // $anonfun$procs$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #359 = Methodref          #2.#358       // org/sireum/Os$.$anonfun$procs$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #360 = MethodHandle       6:#359        // REF_invokeStatic org/sireum/Os$.$anonfun$procs$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #361 = InvokeDynamic      #2:#351       // #2:apply:()Lscala/Function1;
  #362 = Utf8               org/sireum/IS
  #363 = Class              #362          // org/sireum/IS
  #364 = Utf8               map
  #365 = NameAndType        #364:#354     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #366 = Methodref          #363.#365     // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
  #367 = NameAndType        #303:#304     // proc:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #368 = Methodref          #2.#367       // org/sireum/Os$.proc:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
  #369 = Utf8               cmds
  #370 = Utf8               roots$lzycompute
  #371 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;
  #372 = Utf8               init$3
  #373 = NameAndType        #372:#72      // init$3:()Lorg/sireum/IS;
  #374 = Methodref          #2.#373       // org/sireum/Os$.init$3:()Lorg/sireum/IS;
  #375 = NameAndType        #59:#60       // roots:Lorg/sireum/IS;
  #376 = Fieldref           #2.#375       // org/sireum/Os$.roots:Lorg/sireum/IS;
  #377 = NameAndType        #370:#72      // roots$lzycompute:()Lorg/sireum/IS;
  #378 = Methodref          #2.#377       // org/sireum/Os$.roots$lzycompute:()Lorg/sireum/IS;
  #379 = Utf8               slashDir
  #380 = NameAndType        #379:#112     // slashDir:()Ljava/lang/String;
  #381 = Methodref          #17.#380      // org/sireum/Os$Ext$.slashDir:()Ljava/lang/String;
  #382 = NameAndType        #186:#116     // path:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #383 = Methodref          #2.#382       // org/sireum/Os$.path:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #384 = Utf8               temp
  #385 = Utf8
  #386 = String             #385          //
  #387 = Utf8               tempFix
  #388 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Path;
  #389 = NameAndType        #387:#388     // tempFix:(Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Path;
  #390 = Methodref          #2.#389       // org/sireum/Os$.tempFix:(Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Path;
  #391 = Utf8               r
  #392 = Utf8               prefix
  #393 = Utf8               suffix
  #394 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #395 = NameAndType        #384:#394     // temp:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #396 = Methodref          #17.#395      // org/sireum/Os$Ext$.temp:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #397 = Utf8               tempDir
  #398 = Utf8               tempDirFix
  #399 = NameAndType        #398:#116     // tempDirFix:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #400 = Methodref          #2.#399       // org/sireum/Os$.tempDirFix:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #401 = NameAndType        #397:#122     // tempDir:(Ljava/lang/String;)Ljava/lang/String;
  #402 = Methodref          #17.#401      // org/sireum/Os$Ext$.tempDir:(Ljava/lang/String;)Ljava/lang/String;
  #403 = NameAndType        #56:#112      // cwd:()Ljava/lang/String;
  #404 = Methodref          #17.#403      // org/sireum/Os$Ext$.cwd:()Ljava/lang/String;
  #405 = NameAndType        #58:#112      // home:()Ljava/lang/String;
  #406 = Methodref          #17.#405      // org/sireum/Os$Ext$.home:()Ljava/lang/String;
  #407 = Utf8               $anonfun$path$1
  #408 = Utf8               OSTYPE
  #409 = String             #408          // OSTYPE
  #410 = Methodref          #2.#103       // org/sireum/Os$.env:(Ljava/lang/String;)Lorg/sireum/Option;
  #411 = Utf8               org/sireum/Some$
  #412 = Class              #411          // org/sireum/Some$
  #413 = Utf8               Lorg/sireum/Some$;
  #414 = NameAndType        #54:#413      // MODULE$:Lorg/sireum/Some$;
  #415 = Fieldref           #412.#414     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #416 = Utf8               msys
  #417 = String             #416          // msys
  #418 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #419 = NameAndType        #125:#418     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #420 = Methodref          #412.#419     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #421 = Utf8               org/sireum/Some
  #422 = Class              #421          // org/sireum/Some
  #423 = Utf8               org/sireum/Option
  #424 = Class              #423          // org/sireum/Option
  #425 = Utf8               $anonfun$procs$1
  #426 = Utf8               (I)Z
  #427 = Utf8               c
  #428 = Utf8               I
  #429 = Utf8               $anonfun$procs$2
  #430 = Utf8               cmd
  #431 = Utf8               $anonfun$roots$1
  #432 = Utf8               root
  #433 = NameAndType        #59:#72       // roots:()Lorg/sireum/IS;
  #434 = Methodref          #17.#433      // org/sireum/Os$Ext$.roots:()Lorg/sireum/IS;
  #435 = Utf8               $anonfun$roots$1$adapted
  #436 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  #437 = NameAndType        #435:#436     // $anonfun$roots$1$adapted:(Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  #438 = Methodref          #2.#437       // org/sireum/Os$.$anonfun$roots$1$adapted:(Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  #439 = MethodHandle       6:#438        // REF_invokeStatic org/sireum/Os$.$anonfun$roots$1$adapted:(Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  #440 = MethodType         #436          //  (Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  #441 = Integer            5
  #442 = InvokeDynamic      #3:#351       // #3:apply:()Lscala/Function1;
  #443 = Methodref          #4.#67        // java/lang/Object."<init>":()V
  #444 = Utf8               org/sireum/B
  #445 = Class              #444          // org/sireum/B
  #446 = NameAndType        #407:#138     // $anonfun$path$1:()Z
  #447 = Methodref          #2.#446       // org/sireum/Os$.$anonfun$path$1:()Z
  #448 = Utf8               (Z)V
  #449 = NameAndType        #66:#448      // "<init>":(Z)V
  #450 = Methodref          #445.#449     // org/sireum/B."<init>":(Z)V
  #451 = Utf8               org/sireum/C
  #452 = Class              #451          // org/sireum/C
  #453 = NameAndType        #187:#173     // value:()I
  #454 = Methodref          #452.#453     // org/sireum/C.value:()I
  #455 = NameAndType        #425:#426     // $anonfun$procs$1:(I)Z
  #456 = Methodref          #2.#455       // org/sireum/Os$.$anonfun$procs$1:(I)Z
  #457 = Utf8               Ljava/lang/Object;
  #458 = NameAndType        #187:#112     // value:()Ljava/lang/String;
  #459 = Methodref          #223.#458     // org/sireum/String.value:()Ljava/lang/String;
  #460 = NameAndType        #429:#122     // $anonfun$procs$2:(Ljava/lang/String;)Ljava/lang/String;
  #461 = Methodref          #2.#460       // org/sireum/Os$.$anonfun$procs$2:(Ljava/lang/String;)Ljava/lang/String;
  #462 = NameAndType        #431:#126     // $anonfun$roots$1:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #463 = Methodref          #2.#462       // org/sireum/Os$.$anonfun$roots$1:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
  #464 = Utf8               $deserializeLambda$
  #465 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #466 = Utf8               scala/runtime/LambdaDeserialize
  #467 = Class              #466          // scala/runtime/LambdaDeserialize
  #468 = Utf8               bootstrap
  #469 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #470 = NameAndType        #468:#469     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #471 = Methodref          #467.#470     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #472 = MethodHandle       6:#471        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #473 = Utf8               lambdaDeserialize
  #474 = NameAndType        #473:#465     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #475 = InvokeDynamic      #4:#474       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #476 = Utf8               Signature
  #477 = Utf8               Code
  #478 = Utf8               LineNumberTable
  #479 = Utf8               LocalVariableTable
  #480 = Utf8               StackMapTable
  #481 = Utf8               MethodParameters
  #482 = Utf8               InnerClasses
  #483 = Utf8               SourceFile
  #484 = Utf8               BootstrapMethods
  #485 = Utf8               ScalaInlineInfo
  #486 = Utf8               Scala
{
  public static final org.sireum.Os$ MODULE$;
    descriptor: Lorg/sireum/Os$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static org.sireum.Os$Path cwd;
    descriptor: Lorg/sireum/Os$Path;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static org.sireum.Os$Path home;
    descriptor: Lorg/sireum/Os$Path;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static org.sireum.IS<org.sireum.Z, org.sireum.Os$Path> roots;
    descriptor: Lorg/sireum/IS;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Signature: #61                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;

  private static volatile byte bitmap$0;
    descriptor: B
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Os$
         3: dup
         4: invokespecial #68                 // Method "<init>":()V
         7: putstatic     #70                 // Field MODULE$:Lorg/sireum/Os$;
        10: return
      LineNumberTable:
        line 28: 0

  public org.sireum.IS<org.sireum.Z, org.sireum.String> cliArgs();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #78                 // Method org/sireum/Os$Ext$.cliArgs:()Lorg/sireum/IS;
         6: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;
    Signature: #73                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private org.sireum.Os$Path cwd$lzycompute();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #83                 // Field bitmap$0:B
         7: iconst_1
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     29
        14: invokestatic  #86                 // Method init$1:()Lorg/sireum/Os$Path;
        17: putstatic     #88                 // Field cwd:Lorg/sireum/Os$Path;
        20: getstatic     #83                 // Field bitmap$0:B
        23: iconst_1
        24: ior
        25: i2b
        26: putstatic     #83                 // Field bitmap$0:B
        29: aload_1
        30: monitorexit
        31: goto          37
        34: aload_1
        35: monitorexit
        36: athrow
        37: getstatic     #88                 // Field cwd:Lorg/sireum/Os$Path;
        40: areturn
      Exception table:
         from    to  target type
             4    29    34   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class org/sireum/Os$ ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Path cwd();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #83                 // Field bitmap$0:B
         3: iconst_1
         4: iand
         5: i2b
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #92                 // Method cwd$lzycompute:()Lorg/sireum/Os$Path;
        14: goto          20
        17: getstatic     #88                 // Field cwd:Lorg/sireum/Os$Path;
        20: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Os$Path ]
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/Os$;

  public void exit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: aload_1
         4: invokevirtual #97                 // Method org/sireum/Os$Ext$.exit:(Lorg/sireum/Z;)V
         7: return
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$;
            0       8     1  code   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      code                           final

  public org.sireum.Option<org.sireum.String> env(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: aload_1
         4: invokevirtual #104                // Method org/sireum/Os$Ext$.env:(Ljava/lang/String;)Lorg/sireum/Option;
         7: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$;
            0       8     1  name   Ljava/lang/String;
    Signature: #101                         // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/String;>;
    MethodParameters:
      Name                           Flags
      name                           final

  public org.sireum.Map<org.sireum.String, org.sireum.String> envs();
    descriptor: ()Lorg/sireum/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #110                // Method org/sireum/Os$Ext$.envs:()Lorg/sireum/Map;
         6: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;
    Signature: #108                         // ()Lorg/sireum/Map<Lorg/sireum/String;Lorg/sireum/String;>;

  public java.lang.String fileSep();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #114                // Method org/sireum/Os$Ext$.fileSep:()Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Path uriToPath(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
         3: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         6: aload_1
         7: invokevirtual #124                // Method org/sireum/Os$Ext$.fromUri:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        13: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/Os$;
            0      14     1   uri   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      uri                            final

  private org.sireum.Os$Path home$lzycompute();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #83                 // Field bitmap$0:B
         7: iconst_2
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     29
        14: invokestatic  #132                // Method init$2:()Lorg/sireum/Os$Path;
        17: putstatic     #134                // Field home:Lorg/sireum/Os$Path;
        20: getstatic     #83                 // Field bitmap$0:B
        23: iconst_2
        24: ior
        25: i2b
        26: putstatic     #83                 // Field bitmap$0:B
        29: aload_1
        30: monitorexit
        31: goto          37
        34: aload_1
        35: monitorexit
        36: athrow
        37: getstatic     #134                // Field home:Lorg/sireum/Os$Path;
        40: areturn
      Exception table:
         from    to  target type
             4    29    34   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class org/sireum/Os$ ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Path home();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #83                 // Field bitmap$0:B
         3: iconst_2
         4: iand
         5: i2b
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #136                // Method home$lzycompute:()Lorg/sireum/Os$Path;
        14: goto          20
        17: getstatic     #134                // Field home:Lorg/sireum/Os$Path;
        20: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Os$Path ]
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/Os$;

  public boolean isLinux();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #147                // Method kind:()Lorg/sireum/Os$Kind$Type;
         7: getstatic     #150                // Field org/sireum/Os$Kind$Linux$.MODULE$:Lorg/sireum/Os$Kind$Linux$;
        10: astore_1
        11: dup
        12: ifnonnull     23
        15: pop
        16: aload_1
        17: ifnull        30
        20: goto          34
        23: aload_1
        24: invokevirtual #154                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        27: ifeq          34
        30: iconst_1
        31: goto          35
        34: iconst_0
        35: invokevirtual #157                // Method org/sireum/B$.apply:(Z)Z
        38: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$, class org/sireum/Os$Kind$Linux$ ]
          stack = [ class org/sireum/B$, class org/sireum/Os$Kind$Type ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$, class org/sireum/Os$Kind$Linux$ ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/sireum/Os$;

  public boolean isMac();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #147                // Method kind:()Lorg/sireum/Os$Kind$Type;
         7: getstatic     #161                // Field org/sireum/Os$Kind$Mac$.MODULE$:Lorg/sireum/Os$Kind$Mac$;
        10: astore_1
        11: dup
        12: ifnonnull     23
        15: pop
        16: aload_1
        17: ifnull        30
        20: goto          34
        23: aload_1
        24: invokevirtual #154                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        27: ifeq          34
        30: iconst_1
        31: goto          35
        34: iconst_0
        35: invokevirtual #157                // Method org/sireum/B$.apply:(Z)Z
        38: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$, class org/sireum/Os$Kind$Mac$ ]
          stack = [ class org/sireum/B$, class org/sireum/Os$Kind$Type ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$, class org/sireum/Os$Kind$Mac$ ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/sireum/Os$;

  public boolean isWin();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #147                // Method kind:()Lorg/sireum/Os$Kind$Type;
         7: getstatic     #165                // Field org/sireum/Os$Kind$Win$.MODULE$:Lorg/sireum/Os$Kind$Win$;
        10: astore_1
        11: dup
        12: ifnonnull     23
        15: pop
        16: aload_1
        17: ifnull        30
        20: goto          34
        23: aload_1
        24: invokevirtual #154                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        27: ifeq          34
        30: iconst_1
        31: goto          35
        34: iconst_0
        35: invokevirtual #157                // Method org/sireum/B$.apply:(Z)Z
        38: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Os$, class org/sireum/Os$Kind$Win$ ]
          stack = [ class org/sireum/B$, class org/sireum/Os$Kind$Type ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Os$, class org/sireum/Os$Kind$Win$ ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/sireum/Os$;

  public java.lang.String pathSep();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #168                // Method org/sireum/Os$Ext$.pathSep:()Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;

  public java.lang.String lineSep();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #171                // Method org/sireum/Os$Ext$.lineSep:()Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;

  public int pathSepChar();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #175                // Method org/sireum/Os$Ext$.pathSepChar:()I
         6: ireturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Kind$Type kind();
    descriptor: ()Lorg/sireum/Os$Kind$Type;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #178                // Method org/sireum/Os$Ext$.os:()Lorg/sireum/Os$Kind$Type;
         6: areturn
      LineNumberTable:
        line 87: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/sireum/Os$;

  public org.sireum.Indexable$Pos<org.sireum.C> readIndexableCFrom(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Indexable$Pos;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: aload_1
         4: invokevirtual #185                // Method org/sireum/Os$Ext$.readIndexableCUrl:(Ljava/lang/String;)Lorg/sireum/Indexable$Pos;
         7: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/Os$;
            0       8     1   url   Ljava/lang/String;
    Signature: #181                         // (Ljava/lang/String;)Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;
    MethodParameters:
      Name                           Flags
      url                            final

  public org.sireum.Os$Path path(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=4, args_size=2
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #189                // Method isWin:()Z
         7: invokevirtual #192                // Method org/sireum/B$.$4B:(Z)Z
        10: ifeq          326
        13: getstatic     #197                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
        16: aload_1
        17: invokevirtual #200                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
        20: astore_2
        21: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        24: ldc           #207                // String /cygdrive/
        26: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        29: astore_3
        30: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        33: aload_2
        34: aload_3
        35: invokevirtual #215                // Method org/sireum/ops/StringOps.startsWith:(Ljava/lang/String;)Z
        38: invokevirtual #192                // Method org/sireum/B$.$4B:(Z)Z
        41: ifeq          179
        44: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
        47: getstatic     #197                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
        50: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        53: new           #217                // class java/lang/StringBuilder
        56: dup
        57: ldc           #218                // int 1
        59: invokespecial #221                // Method java/lang/StringBuilder."<init>":(I)V
        62: new           #223                // class org/sireum/String
        65: dup
        66: aload_2
        67: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        70: aload_3
        71: invokevirtual #227                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
        74: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        77: aload_3
        78: invokevirtual #227                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
        81: getstatic     #232                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        84: iconst_1
        85: invokevirtual #235                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        88: invokeinterface #241,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        93: invokevirtual #245                // Method org/sireum/ops/StringOps.substring:(Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
        96: invokespecial #248                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        99: invokevirtual #252                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       102: ldc           #254                // String :
       104: invokevirtual #257                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       107: new           #223                // class org/sireum/String
       110: dup
       111: aload_2
       112: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       115: aload_3
       116: invokevirtual #227                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
       119: getstatic     #232                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       122: iconst_1
       123: invokevirtual #235                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       126: invokeinterface #241,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       131: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       134: aload_1
       135: invokevirtual #227                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
       138: invokevirtual #245                // Method org/sireum/ops/StringOps.substring:(Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
       141: invokespecial #248                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       144: invokevirtual #252                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       147: invokevirtual #260                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       150: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       153: invokevirtual #200                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
       156: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       159: bipush        47
       161: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
       164: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       167: bipush        92
       169: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
       172: invokevirtual #272                // Method org/sireum/ops/StringOps.replaceAllChars:(II)Ljava/lang/String;
       175: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
       178: areturn
       179: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       182: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       185: aload_2
       186: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       189: ldc_w         #274                // String /
       192: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       195: invokevirtual #215                // Method org/sireum/ops/StringOps.startsWith:(Ljava/lang/String;)Z
       198: invokedynamic #290,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
       203: invokevirtual #294                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       206: invokevirtual #192                // Method org/sireum/B$.$4B:(Z)Z
       209: ifeq          323
       212: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
       215: getstatic     #197                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
       218: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       221: new           #217                // class java/lang/StringBuilder
       224: dup
       225: ldc           #218                // int 1
       227: invokespecial #221                // Method java/lang/StringBuilder."<init>":(I)V
       230: new           #223                // class org/sireum/String
       233: dup
       234: aload_2
       235: getstatic     #232                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       238: iconst_1
       239: invokevirtual #235                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       242: getstatic     #232                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       245: iconst_2
       246: invokevirtual #235                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       249: invokevirtual #245                // Method org/sireum/ops/StringOps.substring:(Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
       252: invokespecial #248                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       255: invokevirtual #252                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       258: ldc           #254                // String :
       260: invokevirtual #257                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       263: new           #223                // class org/sireum/String
       266: dup
       267: aload_2
       268: getstatic     #232                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       271: iconst_2
       272: invokevirtual #235                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       275: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       278: aload_1
       279: invokevirtual #227                // Method org/sireum/String$.size$extension:(Ljava/lang/String;)Lorg/sireum/Z;
       282: invokevirtual #245                // Method org/sireum/ops/StringOps.substring:(Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/String;
       285: invokespecial #248                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       288: invokevirtual #252                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       291: invokevirtual #260                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       294: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       297: invokevirtual #200                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
       300: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       303: bipush        47
       305: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
       308: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
       311: bipush        92
       313: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
       316: invokevirtual #272                // Method org/sireum/ops/StringOps.replaceAllChars:(II)Ljava/lang/String;
       319: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
       322: areturn
       323: goto          326
       326: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
       329: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
       332: aload_1
       333: invokevirtual #297                // Method org/sireum/Os$Ext$.norm:(Ljava/lang/String;)Ljava/lang/String;
       336: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
       339: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 179
          locals = [ class org/sireum/ops/StringOps, class java/lang/String ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 143
        frame_type = 249 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 95: 0
        line 96: 13
        line 97: 21
        line 98: 30
        line 99: 44
        line 100: 47
        line 99: 178
        line 102: 179
        line 103: 212
        line 103: 215
        line 104: 300
        line 103: 322
        line 102: 323
        line 107: 326
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21     302     2  sOps   Lorg/sireum/ops/StringOps;
           30     293     3 cygPrefix   Ljava/lang/String;
            0     340     0  this   Lorg/sireum/Os$;
            0     340     1 value   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      value                          final

  public org.sireum.Os$Proc proc(org.sireum.IS<org.sireum.Z, org.sireum.String>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=16, locals=2, args_size=2
         0: getstatic     #309                // Field org/sireum/Os$Proc$.MODULE$:Lorg/sireum/Os$Proc$;
         3: aload_1
         4: aload_0
         5: invokevirtual #311                // Method cwd:()Lorg/sireum/Os$Path;
         8: getstatic     #316                // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
        11: invokevirtual #319                // Method org/sireum/Map$.empty:()Lorg/sireum/Map;
        14: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        17: invokevirtual #327                // Method org/sireum/package$.T:()Z
        20: getstatic     #332                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        23: invokevirtual #335                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        26: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        29: invokevirtual #338                // Method org/sireum/package$.F:()Z
        32: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        35: invokevirtual #338                // Method org/sireum/package$.F:()Z
        38: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        41: invokevirtual #338                // Method org/sireum/package$.F:()Z
        44: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        47: invokevirtual #338                // Method org/sireum/package$.F:()Z
        50: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        53: invokevirtual #338                // Method org/sireum/package$.F:()Z
        56: getstatic     #232                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        59: iconst_0
        60: invokevirtual #235                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        63: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        66: invokevirtual #338                // Method org/sireum/package$.F:()Z
        69: getstatic     #324                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        72: invokevirtual #338                // Method org/sireum/package$.F:()Z
        75: getstatic     #332                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        78: invokevirtual #335                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        81: getstatic     #332                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        84: invokevirtual #335                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        87: invokevirtual #341                // Method org/sireum/Os$Proc$.apply:(Lorg/sireum/IS;Lorg/sireum/Os$Path;Lorg/sireum/Map;ZLorg/sireum/Option;ZZZZZLorg/sireum/Z;ZZLorg/sireum/Option;Lorg/sireum/Option;)Lorg/sireum/Os$Proc;
        90: areturn
      LineNumberTable:
        line 111: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      91     0  this   Lorg/sireum/Os$;
            0      91     1 commands   Lorg/sireum/IS;
    Signature: #305                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;)Lorg/sireum/Os$Proc;
    MethodParameters:
      Name                           Flags
      commands                       final

  public org.sireum.Os$Proc procs(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Proc;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #197                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
         3: aload_1
         4: invokevirtual #200                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
         7: invokedynamic #352,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        12: invokevirtual #356                // Method org/sireum/ops/StringOps.split:(Lscala/Function1;)Lorg/sireum/IS;
        15: invokedynamic #361,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        20: invokevirtual #366                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        23: astore_2
        24: aload_0
        25: aload_2
        26: invokevirtual #368                // Method proc:(Lorg/sireum/IS;)Lorg/sireum/Os$Proc;
        29: areturn
      LineNumberTable:
        line 115: 0
        line 117: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           24       6     2  cmds   Lorg/sireum/IS;
            0      30     0  this   Lorg/sireum/Os$;
            0      30     1 commands   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      commands                       final

  private org.sireum.IS<org.sireum.Z, org.sireum.Os$Path> roots$lzycompute();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #83                 // Field bitmap$0:B
         7: iconst_4
         8: iand
         9: i2b
        10: iconst_0
        11: if_icmpne     29
        14: invokestatic  #374                // Method init$3:()Lorg/sireum/IS;
        17: putstatic     #376                // Field roots:Lorg/sireum/IS;
        20: getstatic     #83                 // Field bitmap$0:B
        23: iconst_4
        24: ior
        25: i2b
        26: putstatic     #83                 // Field bitmap$0:B
        29: aload_1
        30: monitorexit
        31: goto          37
        34: aload_1
        35: monitorexit
        36: athrow
        37: getstatic     #376                // Field roots:Lorg/sireum/IS;
        40: areturn
      Exception table:
         from    to  target type
             4    29    34   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class org/sireum/Os$ ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/Os$;
    Signature: #371                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.Os$Path> roots();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #83                 // Field bitmap$0:B
         3: iconst_4
         4: iand
         5: i2b
         6: iconst_0
         7: if_icmpne     17
        10: aload_0
        11: invokespecial #378                // Method roots$lzycompute:()Lorg/sireum/IS;
        14: goto          20
        17: getstatic     #376                // Field roots:Lorg/sireum/IS;
        20: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/sireum/IS ]
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/Os$;
    Signature: #371                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;

  public org.sireum.Os$Path slashDir();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         4: invokevirtual #381                // Method org/sireum/Os$Ext$.slashDir:()Ljava/lang/String;
         7: invokevirtual #383                // Method path:(Ljava/lang/String;)Lorg/sireum/Os$Path;
        10: areturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Path temp();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         4: ldc_w         #386                // String
         7: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        10: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        13: ldc_w         #386                // String
        16: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        19: invokevirtual #390                // Method tempFix:(Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Path;
        22: astore_1
        23: aload_1
        24: areturn
      LineNumberTable:
        line 129: 0
        line 130: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23       2     1     r   Lorg/sireum/Os$Path;
            0      25     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Path tempFix(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: aload_1
         4: aload_2
         5: invokevirtual #396                // Method org/sireum/Os$Ext$.temp:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
         8: astore_3
         9: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
        12: aload_3
        13: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        16: areturn
      LineNumberTable:
        line 134: 0
        line 135: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9       8     3     r   Ljava/lang/String;
            0      17     0  this   Lorg/sireum/Os$;
            0      17     1 prefix   Ljava/lang/String;
            0      17     2 suffix   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      prefix                         final
      suffix                         final

  public org.sireum.Os$Path tempDir();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         4: ldc_w         #386                // String
         7: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #400                // Method tempDirFix:(Ljava/lang/String;)Lorg/sireum/Os$Path;
        13: astore_1
        14: aload_1
        15: areturn
      LineNumberTable:
        line 139: 0
        line 140: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14       2     1     r   Lorg/sireum/Os$Path;
            0      16     0  this   Lorg/sireum/Os$;

  public org.sireum.Os$Path tempDirFix(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: aload_1
         4: invokevirtual #402                // Method org/sireum/Os$Ext$.tempDir:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_2
         8: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
        11: aload_2
        12: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        15: areturn
      LineNumberTable:
        line 144: 0
        line 145: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8       8     2     r   Ljava/lang/String;
            0      16     0  this   Lorg/sireum/Os$;
            0      16     1 prefix   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      prefix                         final

  private static final org.sireum.Os$Path init$1();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
         3: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         6: invokevirtual #404                // Method org/sireum/Os$Ext$.cwd:()Ljava/lang/String;
         9: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        12: areturn
      LineNumberTable:
        line 35: 0

  private static final org.sireum.Os$Path init$2();
    descriptor: ()Lorg/sireum/Os$Path;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
         3: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         6: invokevirtual #406                // Method org/sireum/Os$Ext$.home:()Ljava/lang/String;
         9: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        12: areturn
      LineNumberTable:
        line 59: 0

  public static final boolean $anonfun$path$1();
    descriptor: ()Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=1, args_size=0
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #70                 // Field MODULE$:Lorg/sireum/Os$;
         6: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         9: ldc_w         #409                // String OSTYPE
        12: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        15: invokevirtual #410                // Method env:(Ljava/lang/String;)Lorg/sireum/Option;
        18: getstatic     #415                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        21: new           #223                // class org/sireum/String
        24: dup
        25: getstatic     #205                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        28: ldc_w         #417                // String msys
        31: invokevirtual #209                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        34: invokespecial #248                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        37: invokevirtual #420                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        40: astore_0
        41: dup
        42: ifnonnull     53
        45: pop
        46: aload_0
        47: ifnull        60
        50: goto          64
        53: aload_0
        54: invokevirtual #154                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        57: ifeq          64
        60: iconst_1
        61: goto          65
        64: iconst_0
        65: invokevirtual #157                // Method org/sireum/B$.apply:(Z)Z
        68: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class org/sireum/Some ]
          stack = [ class org/sireum/B$, class org/sireum/Option ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Some ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 102: 0

  public static final boolean $anonfun$procs$1(int);
    descriptor: (I)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #143                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_0
         4: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
         7: bipush        32
         9: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
        12: if_icmpne     19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: invokevirtual #157                // Method org/sireum/B$.apply:(Z)Z
        23: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ int ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0     c   I
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.String $anonfun$procs$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #197                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
         3: aload_0
         4: invokevirtual #200                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
         7: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        10: sipush        9251
        13: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
        16: getstatic     #265                // Field org/sireum/C$.MODULE$:Lorg/sireum/C$;
        19: bipush        32
        21: invokevirtual #268                // Method org/sireum/C$.apply:(C)I
        24: invokevirtual #272                // Method org/sireum/ops/StringOps.replaceAllChars:(II)Ljava/lang/String;
        27: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0   cmd   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      cmd                            final

  public static final org.sireum.Os$Path$Impl $anonfun$roots$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #120                // Field org/sireum/Os$Path$Impl$.MODULE$:Lorg/sireum/Os$Path$Impl$;
         3: aload_0
         4: invokevirtual #128                // Method org/sireum/Os$Path$Impl$.apply:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
         7: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  root   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      root                           final

  private static final org.sireum.IS init$3();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #76                 // Field org/sireum/Os$Ext$.MODULE$:Lorg/sireum/Os$Ext$;
         3: invokevirtual #434                // Method org/sireum/Os$Ext$.roots:()Lorg/sireum/IS;
         6: invokedynamic #442,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        11: invokevirtual #366                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        14: areturn
      LineNumberTable:
        line 121: 0

  private org.sireum.Os$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #443                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$;

  public static final java.lang.Object $anonfun$path$1$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #445                // class org/sireum/B
         3: dup
         4: invokestatic  #447                // Method $anonfun$path$1:()Z
         7: invokespecial #450                // Method org/sireum/B."<init>":(Z)V
        10: areturn
      LineNumberTable:
        line 102: 0

  public static final java.lang.Object $anonfun$procs$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #445                // class org/sireum/B
         3: dup
         4: aload_0
         5: checkcast     #452                // class org/sireum/C
         8: invokevirtual #454                // Method org/sireum/C.value:()I
        11: invokestatic  #456                // Method $anonfun$procs$1:(I)Z
        14: invokespecial #450                // Method org/sireum/B."<init>":(Z)V
        17: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$procs$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #223                // class org/sireum/String
         3: dup
         4: aload_0
         5: checkcast     #223                // class org/sireum/String
         8: invokevirtual #459                // Method org/sireum/String.value:()Ljava/lang/String;
        11: invokestatic  #461                // Method $anonfun$procs$2:(Ljava/lang/String;)Ljava/lang/String;
        14: invokespecial #248                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        17: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0   cmd   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      cmd                            final

  public static final org.sireum.Os$Path$Impl $anonfun$roots$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: checkcast     #223                // class org/sireum/String
         4: invokevirtual #459                // Method org/sireum/String.value:()Ljava/lang/String;
         7: invokestatic  #463                // Method $anonfun$roots$1:(Ljava/lang/String;)Lorg/sireum/Os$Path$Impl;
        10: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  root   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      root                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #475,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // Pos=class org/sireum/Indexable$Pos of class org/sireum/Indexable
  public static #20= #17 of #19;          // Ext$=class org/sireum/Os$Ext$ of class org/sireum/Os
  public static #23= #22 of #19;          // Kind$=class org/sireum/Os$Kind$ of class org/sireum/Os
  public static final #26= #25 of #22;    // Linux$=class org/sireum/Os$Kind$Linux$ of class org/sireum/Os$Kind$
  public static final #29= #28 of #22;    // Mac$=class org/sireum/Os$Kind$Mac$ of class org/sireum/Os$Kind$
  public static #32= #31 of #22;          // Type=class org/sireum/Os$Kind$Type of class org/sireum/Os$Kind$
  public static final #35= #34 of #22;    // Win$=class org/sireum/Os$Kind$Win$ of class org/sireum/Os$Kind$
  public static #38= #37 of #19;          // Path=class org/sireum/Os$Path of class org/sireum/Os
  public static #41= #40 of #19;          // Path$=class org/sireum/Os$Path$ of class org/sireum/Os
  public static final #44= #43 of #40;    // Impl=class org/sireum/Os$Path$Impl of class org/sireum/Os$Path$
  public static #47= #46 of #40;          // Impl$=class org/sireum/Os$Path$Impl$ of class org/sireum/Os$Path$
  public static final #50= #49 of #19;    // Proc=class org/sireum/Os$Proc of class org/sireum/Os
  public static #53= #52 of #19;          // Proc$=class org/sireum/Os$Proc$ of class org/sireum/Os
SourceFile: "Os.scala"
BootstrapMethods:
  0: #287 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #276 ()Ljava/lang/Object;
      #280 REF_invokeStatic org/sireum/Os$.$anonfun$path$1$adapted:()Ljava/lang/Object;
      #276 ()Ljava/lang/Object;
      #218 1
  1: #287 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #345 (Ljava/lang/Object;)Ljava/lang/Object;
      #349 REF_invokeStatic org/sireum/Os$.$anonfun$procs$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #345 (Ljava/lang/Object;)Ljava/lang/Object;
      #218 1
  2: #287 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #345 (Ljava/lang/Object;)Ljava/lang/Object;
      #360 REF_invokeStatic org/sireum/Os$.$anonfun$procs$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #345 (Ljava/lang/Object;)Ljava/lang/Object;
      #218 1
  3: #287 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #345 (Ljava/lang/Object;)Ljava/lang/Object;
      #439 REF_invokeStatic org/sireum/Os$.$anonfun$roots$1$adapted:(Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
      #440 (Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
      #441 5
      #218 1
      #440 (Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  4: #472 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #280 REF_invokeStatic org/sireum/Os$.$anonfun$path$1$adapted:()Ljava/lang/Object;
      #349 REF_invokeStatic org/sireum/Os$.$anonfun$procs$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #360 REF_invokeStatic org/sireum/Os$.$anonfun$procs$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #439 REF_invokeStatic org/sireum/Os$.$anonfun$roots$1$adapted:(Ljava/lang/Object;)Lorg/sireum/Os$Path$Impl;
  ScalaInlineInfo: length = 0xCC (unknown attribute)
   01 01 00 28 01 97 00 8A 01 01 15 01 13 01 01 A9
   01 AA 01 01 5A 01 58 01 01 AD 00 7A 01 01 65 01
   58 01 01 AF 00 7E 01 01 B3 01 B4 01 00 42 00 41
   01 00 47 00 48 01 00 38 00 51 01 00 50 00 51 01
   00 63 00 64 01 00 6A 00 6B 01 00 5D 00 5E 01 00
   6F 00 70 01 00 3A 00 51 01 00 81 00 51 01 00 54
   00 51 01 00 82 00 51 01 01 74 00 48 01 00 89 00
   8A 01 00 9E 00 8A 01 00 A2 00 8A 01 00 90 00 91
   01 00 A9 00 70 01 00 BA 00 74 01 00 A6 00 70 01
   00 AC 00 AD 01 01 2F 01 30 01 01 56 01 57 01 00
   B3 00 B4 01 00 3B 00 48 01 01 72 00 48 01 01 7B
   00 51 01 01 80 00 51 01 01 8D 00 51 01 01 8E 00
   74 01 01 83 01 84 01 00 73 00 74 01
  Scala: length = 0x0 (unknown attribute)

