Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/ops/GraphOps.class
  Last modified May 29, 2022; size 31984 bytes
  SHA-256 checksum 7e2edc4adbd2a2339a72f9f4825fe149f0316eaa6948646b3eb2dcc18033f110
  Compiled from "GraphOps.scala"
public final class org.sireum.ops.GraphOps<W extends java.lang.Object, E extends java.lang.Object> extends java.lang.Object implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ops/GraphOps
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 4, methods: 74, attributes: 7
Constant pool:
     #1 = Utf8               org/sireum/ops/GraphOps
     #2 = Class              #1           // org/sireum/ops/GraphOps
     #3 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
     #4 = Utf8               java/lang/Object
     #5 = Class              #4           // java/lang/Object
     #6 = Utf8               org/sireum/DatatypeSig
     #7 = Class              #6           // org/sireum/DatatypeSig
     #8 = Utf8               GraphOps.scala
     #9 = Utf8               Lscala/reflect/ScalaSignature;
    #10 = Utf8               bytes
    #11 = Utf8               \u0006\u0005\u0005Mw!\u0002\u000e\u001c\u0011\u0003\u0011c!\u0002\u0013\u001c\u0011\u0003)\u0003\"\u0002\u0017\u0002\t\u0003i\u0003\"\u0002\u0018\u0002\t\u0003y\u0003bBA]\u0003\u0011\u0005\u00111\u0018\u0004\u0005Im\u0011!\u0007\u0003\u00059\u000b\t\u0005\t\u0015!\u0003:\u0011\u0015aS\u0001\"\u0001K\u0011\u0019iU\u0001)A\u0005s!)a*\u0002C\u0001\u001f\")\u0001+\u0002C\u0001\u001f\")\u0011+\u0002C!%\")1,\u0002C!9\"Aq,\u0002EC\u0002\u0013\u0005\u0003\rC\u0003e\u000b\u0011\u0005S\rC\u0003/\u000b\u0011\u00051\u000eC\u0004n\u000bE\u0005I\u0011\u00018\t\u0011e,\u0001R1A\u0005BiDq!!\u0006\u0006\t\u0003\t9\u0002C\u0004\u0002:\u0015!\t!a\u000f\t\u000f\u0005%S\u0001\"\u0001\u0002L!9\u0011\u0011K\u0003\u0005\u0002\u0005M\u0003bBA<\u000b\u0011\u0005\u0011\u0011\u0010\u0005\b\u0003\u0003+A\u0011AAB\u0011\u001d\tY)\u0002C\u0001\u0003\u001bCq!a%\u0006\t\u0003\t)*\u0001\u0005He\u0006\u0004\bn\u00149t\u0015\taR$A\u0002paNT!AH\u0010\u0002\rML\'/Z;n\u0015\u0005\u0001\u0013aA8sO\u000e\u0001\u0001CA\u0012\u0002\u001b\u0005Y\"\u0001C$sCBDw\n]:\u0014\u0005\u00051\u0003CA\u0014+\u001b\u0005A#\"A\u0015\u0002\u000bM\u001c\u0017\r\\1\n\u0005-B#AB!osJ+g-\u0001\u0004=S:LGO\u0010\u000b\u0002E\u0005)\u0011\r\u001d9msV)\u0001\'a,\u00024R\u0019\u0011\'!.\u0011\r\r*\u0011QVAY+\r\u0019d\bS\n\u0004\u000b\u0019\"\u0004CA\u001b7\u001b\u0005i\u0012BA\u001c\u001e\u0005-!\u0015\r^1usB,7+[4\u0002\u000f}{vM]1qQB!QG\u000f\u001fH\u0013\tYTDA\u0003He\u0006\u0004\b\u000e\u0005\u0002>}1\u0001A!B \u0006\u0005\u0004\u0001%!A,\u0012\u0005\u0005#\u0005CA\u0014C\u0013\t\u0019\u0005FA\u0004O_RD\u0017N\\4\u0011\u0005\u001d*\u0015B\u0001$)\u0005\r\te.\u001f\t\u0003{!#Q!S\u0003C\u0002\u0001\u0013\u0011!\u0012\u000b\u0003\u00172\u0003BaI\u0003=\u000f\")\u0001h\u0002a\u0001s\u00051ql\u001a:ba\"\fQa\u001a:ba\",\u0012!O\u0001\tO\u0016$xI]1qQ\u0006AAo\\*ue&tw\rF\u0001T!\t!\u0016,D\u0001V\u0015\t1v+\u0001\u0003mC:<\'\"\u0001-\u0002\t)\fg/Y\u0005\u00035V\u0013aa\u0015;sS:<\u0017AB:ue&tw-F\u0001^!\t)d,\u0003\u0002[;\u0005A\u0001.Y:i\u0007>$W-F\u0001b!\t9#-\u0003\u0002dQ\t\u0019\u0011J\u001c;\u0002\r\u0015\fX/\u00197t)\t1\u0017\u000e\u0005\u0002(O&\u0011\u0001\u000e\u000b\u0002\b\u0005>|G.Z1o\u0011\u0015Qg\u00021\u0001E\u0003\u0005yGCA&m\u0011\u001dqu\u0002%AA\u0002e\nq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0002_*\u0012\u0011\b]\u0016\u0002cB\u0011!o^\u0007\u0002g*\u0011A/^\u0001\nk:\u001c\u0007.Z2lK\u0012T!A\u001e\u0015\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002yg\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u0011\u0011\u001awN\u001c;f]R,\u0012a\u001f\t\u0006y\u0006%\u0011q\u0002\b\u0004{\u0006\u0015ab\u0001@\u0002\u00045\tqPC\u0002\u0002\u0002\u0005\na\u0001\u0010:p_Rt\u0014\"A\u0015\n\u0007\u0005\u001d\u0001&A\u0004qC\u000e\\\u0017mZ3\n\t\u0005-\u0011Q\u0002\u0002\u0004\'\u0016\f(bAA\u0004QA)q%!\u0005T\t&\u0019\u00111\u0003\u0015\u0003\rQ+\b\u000f\\33\u0003-9W\r^#eO\u0016$\u0015\r^1\u0015\t\u0005e\u0011q\u0004\t\u0005k\u0005mq)C\u0002\u0002\u001eu\u0011aa\u00149uS>t\u0007bBA\u0011%\u0001\u0007\u00111E\u0001\u0002KB1\u0011QEA\u0016y\u001ds1!NA\u0014\u0013\r\tI#H\u0001\u0006\u000fJ\f\u0007\u000f[\u0005\u0005\u0003[\tyC\u0001\u0003FI\u001e,\'bAA\u0015;!\u001a!#a\r\u0011\u0007U\n)$C\u0002\u00028u\u0011A\u0001];sK\u0006yq-\u001a;BY2\u001cVoY2fgN|\'\u000f\u0006\u0003\u0002>\u0005\r\u0003\u0003B\u001b\u0002@qJ1!!\u0011\u001e\u0005\r\u0019V\r\u001e\u0005\u0007\u0003\u000b\u001a\u0002\u0019\u0001\u001f\u0002\u0003YD3aEA\u001a\u0003E9W\r^!mYB\u0013X\rZ3dKN\u001cxN\u001d\u000b\u0005\u0003{\ti\u0005\u0003\u0004\u0002FQ\u0001\r\u0001\u0010\u0015\u0004)\u0005M\u0012AB4fiN\u001b5)\u0006\u0002\u0002VA1\u0011qKA2\u0003_rA!!\u0017\u0002b9!\u00111LA0\u001d\rq\u0018QL\u0005\u0002A%\u0011adH\u0005\u0004\u0003\u000fi\u0012\u0002BA3\u0003O\u00121!S*[\u0013\u0011\tI\'a\u001b\u0003\u0019A\u000b7m[1hKR\u0013\u0018-\u001b;\u000b\u0007\u00055T$A\u0005%S:$XM\u001d8bYB!Q\'!\u001d=\u0013\r\t\u0019(\b\u0002\t\u0011\u0006\u001c\bnU*fi\"\u001aQ#a\r\u0002\u0013\u001d,GoQ=dY\u0016\u001cXCAA>!\u0019\t9&a\u0019\u0002~A)\u0011qKA2y!\u001aa#a\r\u0002\u0019\u0019|\'o^1sIJ+\u0017m\u00195\u0015\t\u0005u\u0014Q\u0011\u0005\b\u0003\u000f;\u0002\u0019AA?\u0003!\u0019\'/\u001b;fe&\f\u0007fA\f\u00024\u0005i!-Y2lo\u0006\u0014HMU3bG\"$B!! \u0002\u0010\"9\u0011q\u0011\rA\u0002\u0005u\u0004f\u0001\r\u00024\u0005I!/Z1dQ\u0006\u0014G.\u001a\u000b\u0007\u0003{\n9*!\'\t\u000f\u0005\u001d\u0015\u00041\u0001\u0002~!9\u00111T\rA\u0002\u0005u\u0015!C5t\r>\u0014x/\u0019:e!\r)\u0014qT\u0005\u0004\u0003Ck\"!\u0001\")\u0007e\t\u0019\u0004K\u0002\u0006\u0003O\u00032!NAU\u0013\r\tY+\b\u0002\tI\u0006$\u0018\r^=qKB\u0019Q(a,\u0005\u000b}\u001a!\u0019\u0001!\u0011\u0007u\n\u0019\fB\u0003J\u0007\t\u0007\u0001\t\u0003\u0004O\u0007\u0001\u0007\u0011q\u0017\t\u0007ki\ni+!-\u0002\u000fUt\u0017\r\u001d9msV1\u0011QXAe\u0003\u001b$B!a0\u0002PB)q%!1\u0002F&\u0019\u00111\u0019\u0015\u0003\tM{W.\u001a\t\u0007ki\n9-a3\u0011\u0007u\nI\rB\u0003@\t\t\u0007\u0001\tE\u0002>\u0003\u001b$Q!\u0013\u0003C\u0002\u0001CaA\u001b\u0003A\u0002\u0005E\u0007CB\u0012\u0006\u0003\u000f\fY\r
    #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #13 = Class              #12          // java/lang/invoke/MethodHandles$Lookup
    #14 = Utf8               java/lang/invoke/MethodHandles
    #15 = Class              #14          // java/lang/invoke/MethodHandles
    #16 = Utf8               Lookup
    #17 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
    #18 = Class              #17          // org/sireum/$internal/PackageTrait$ISZ$
    #19 = Utf8               org/sireum/$internal/PackageTrait
    #20 = Class              #19          // org/sireum/$internal/PackageTrait
    #21 = Utf8               ISZ$
    #22 = Utf8               org/sireum/Graph$Edge
    #23 = Class              #22          // org/sireum/Graph$Edge
    #24 = Utf8               org/sireum/Graph
    #25 = Class              #24          // org/sireum/Graph
    #26 = Utf8               Edge
    #27 = Utf8               org/sireum/Graph$Edge$
    #28 = Class              #27          // org/sireum/Graph$Edge$
    #29 = Utf8               Edge$
    #30 = Utf8               org/sireum/Graph$Edge$Data
    #31 = Class              #30          // org/sireum/Graph$Edge$Data
    #32 = Utf8               Data
    #33 = Utf8               org/sireum/Graph$Edge$Data$
    #34 = Class              #33          // org/sireum/Graph$Edge$Data$
    #35 = Utf8               Data$
    #36 = Utf8               org/sireum/Graph$Internal$
    #37 = Class              #36          // org/sireum/Graph$Internal$
    #38 = Utf8               Internal$
    #39 = Utf8               org/sireum/Graph$Internal$Edge
    #40 = Class              #39          // org/sireum/Graph$Internal$Edge
    #41 = Utf8               org/sireum/Graph$Internal$Edges
    #42 = Class              #41          // org/sireum/Graph$Internal$Edges
    #43 = Utf8               Edges
    #44 = Utf8               hashCode
    #45 = Utf8               I
    #46 = Utf8               $content
    #47 = Utf8               Lscala/collection/immutable/Seq;
    #48 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
    #49 = Utf8               _graph
    #50 = Utf8               Lorg/sireum/Graph;
    #51 = Utf8               Lorg/sireum/Graph<TW;TE;>;
    #52 = Utf8               bitmap$0
    #53 = Utf8               B
    #54 = Utf8               unapply
    #55 = Utf8               (Lorg/sireum/ops/GraphOps;)Lscala/Some;
    #56 = Utf8               <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/ops/GraphOps<TW;TE;>;)Lscala/Some<Lorg/sireum/Graph<TW;TE;>;>;
    #57 = Utf8               o
    #58 = Utf8               org/sireum/ops/GraphOps$
    #59 = Class              #58          // org/sireum/ops/GraphOps$
    #60 = Utf8               MODULE$
    #61 = Utf8               Lorg/sireum/ops/GraphOps$;
    #62 = NameAndType        #60:#61      // MODULE$:Lorg/sireum/ops/GraphOps$;
    #63 = Fieldref           #59.#62      // org/sireum/ops/GraphOps$.MODULE$:Lorg/sireum/ops/GraphOps$;
    #64 = NameAndType        #54:#55      // unapply:(Lorg/sireum/ops/GraphOps;)Lscala/Some;
    #65 = Methodref          #59.#64      // org/sireum/ops/GraphOps$.unapply:(Lorg/sireum/ops/GraphOps;)Lscala/Some;
    #66 = Utf8               Lorg/sireum/ops/GraphOps;
    #67 = Utf8               hash
    #68 = Utf8               ()Lorg/sireum/Z;
    #69 = Utf8               hash$
    #70 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
    #71 = NameAndType        #69:#70      // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
    #72 = InterfaceMethodref #7.#71       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
    #73 = Utf8               this
    #74 = Utf8               $cannotMixImmutableAndMutable
    #75 = Utf8               ()Lscala/runtime/Nothing$;
    #76 = Utf8               org/sireum/Immutable
    #77 = Class              #76          // org/sireum/Immutable
    #78 = Utf8               $cannotMixImmutableAndMutable$
    #79 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
    #80 = NameAndType        #78:#79      // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
    #81 = InterfaceMethodref #77.#80      // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
    #82 = Utf8               $hasEquals
    #83 = Utf8               ()Z
    #84 = Utf8               $hasEquals$
    #85 = Utf8               (Lorg/sireum/Immutable;)Z
    #86 = NameAndType        #84:#85      // $hasEquals$:(Lorg/sireum/Immutable;)Z
    #87 = InterfaceMethodref #77.#86      // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
    #88 = Utf8               $hasString
    #89 = Utf8               $hasString$
    #90 = NameAndType        #89:#85      // $hasString$:(Lorg/sireum/Immutable;)Z
    #91 = InterfaceMethodref #77.#90      // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
    #92 = Utf8               $clone
    #93 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
    #94 = Utf8               org/sireum/$internal/ImmutableMarker
    #95 = Class              #94          // org/sireum/$internal/ImmutableMarker
    #96 = Utf8               $clone$
    #97 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
    #98 = NameAndType        #96:#97      // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
    #99 = InterfaceMethodref #95.#98      // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #100 = Utf8               graph
   #101 = Utf8               ()Lorg/sireum/Graph;
   #102 = Utf8               ()Lorg/sireum/Graph<TW;TE;>;
   #103 = NameAndType        #49:#50      // _graph:Lorg/sireum/Graph;
   #104 = Fieldref           #2.#103      // org/sireum/ops/GraphOps._graph:Lorg/sireum/Graph;
   #105 = Utf8               getGraph
   #106 = Utf8               toString
   #107 = Utf8               ()Ljava/lang/String;
   #108 = NameAndType        #88:#83      // $hasString:()Z
   #109 = Methodref          #2.#108      // org/sireum/ops/GraphOps.$hasString:()Z
   #110 = Utf8               string$
   #111 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #112 = NameAndType        #110:#111    // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #113 = InterfaceMethodref #7.#112      // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #114 = Utf8               java/lang/StringBuilder
   #115 = Class              #114         // java/lang/StringBuilder
   #116 = Utf8               <init>
   #117 = Utf8               ()V
   #118 = NameAndType        #116:#117    // "<init>":()V
   #119 = Methodref          #115.#118    // java/lang/StringBuilder."<init>":()V
   #120 = Utf8               GraphOps
   #121 = String             #120         // GraphOps
   #122 = Utf8               append
   #123 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #124 = NameAndType        #122:#123    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #125 = Methodref          #115.#124    // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #126 = Utf8               (C)Ljava/lang/StringBuilder;
   #127 = NameAndType        #122:#126    // append:(C)Ljava/lang/StringBuilder;
   #128 = Methodref          #115.#127    // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #129 = Utf8               org/sireum/String$
   #130 = Class              #129         // org/sireum/String$
   #131 = Utf8               Lorg/sireum/String$;
   #132 = NameAndType        #60:#131     // MODULE$:Lorg/sireum/String$;
   #133 = Fieldref           #130.#132    // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #134 = NameAndType        #100:#101    // graph:()Lorg/sireum/Graph;
   #135 = Methodref          #2.#134      // org/sireum/ops/GraphOps.graph:()Lorg/sireum/Graph;
   #136 = Utf8               escape
   #137 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #138 = NameAndType        #136:#137    // escape:(Ljava/lang/Object;)Ljava/lang/String;
   #139 = Methodref          #130.#138    // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
   #140 = NameAndType        #106:#107    // toString:()Ljava/lang/String;
   #141 = Methodref          #115.#140    // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #142 = Utf8               sb
   #143 = Utf8               Ljava/lang/StringBuilder;
   #144 = Utf8               java/lang/String
   #145 = Class              #144         // java/lang/String
   #146 = Utf8               string
   #147 = Methodref          #2.#140      // org/sireum/ops/GraphOps.toString:()Ljava/lang/String;
   #148 = Utf8               apply
   #149 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #150 = NameAndType        #148:#149    // apply:(Ljava/lang/String;)Ljava/lang/String;
   #151 = Methodref          #130.#150    // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
   #152 = Utf8               hashCode$lzycompute
   #153 = Utf8               ()I
   #154 = NameAndType        #52:#53      // bitmap$0:B
   #155 = Fieldref           #2.#154      // org/sireum/ops/GraphOps.bitmap$0:B
   #156 = NameAndType        #82:#83      // $hasEquals:()Z
   #157 = Methodref          #2.#156      // org/sireum/ops/GraphOps.$hasEquals:()Z
   #158 = NameAndType        #44:#153     // hashCode:()I
   #159 = Methodref          #5.#158      // java/lang/Object.hashCode:()I
   #160 = Utf8               scala/package$
   #161 = Class              #160         // scala/package$
   #162 = Utf8               Lscala/package$;
   #163 = NameAndType        #60:#162     // MODULE$:Lscala/package$;
   #164 = Fieldref           #161.#163    // scala/package$.MODULE$:Lscala/package$;
   #165 = Utf8               Seq
   #166 = Utf8               ()Lscala/collection/immutable/Seq$;
   #167 = NameAndType        #165:#166    // Seq:()Lscala/collection/immutable/Seq$;
   #168 = Methodref          #161.#167    // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
   #169 = Utf8               scala/runtime/ScalaRunTime$
   #170 = Class              #169         // scala/runtime/ScalaRunTime$
   #171 = Utf8               Lscala/runtime/ScalaRunTime$;
   #172 = NameAndType        #60:#171     // MODULE$:Lscala/runtime/ScalaRunTime$;
   #173 = Fieldref           #170.#172    // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #174 = Utf8               getClass
   #175 = Utf8               ()Ljava/lang/Class;
   #176 = NameAndType        #174:#175    // getClass:()Ljava/lang/Class;
   #177 = Methodref          #2.#176      // org/sireum/ops/GraphOps.getClass:()Ljava/lang/Class;
   #178 = Utf8               java/lang/Class
   #179 = Class              #178         // java/lang/Class
   #180 = Utf8               getName
   #181 = NameAndType        #180:#107    // getName:()Ljava/lang/String;
   #182 = Methodref          #179.#181    // java/lang/Class.getName:()Ljava/lang/String;
   #183 = Utf8               wrapRefArray
   #184 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #185 = NameAndType        #183:#184    // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #186 = Methodref          #170.#185    // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #187 = Utf8               scala/collection/immutable/Seq$
   #188 = Class              #187         // scala/collection/immutable/Seq$
   #189 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
   #190 = NameAndType        #148:#189    // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
   #191 = Methodref          #188.#190    // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
   #192 = Utf8               scala/collection/Seq
   #193 = Class              #192         // scala/collection/Seq
   #194 = InterfaceMethodref #193.#158    // scala/collection/Seq.hashCode:()I
   #195 = NameAndType        #44:#45      // hashCode:I
   #196 = Fieldref           #2.#195      // org/sireum/ops/GraphOps.hashCode:I
   #197 = Utf8               java/lang/Throwable
   #198 = Class              #197         // java/lang/Throwable
   #199 = NameAndType        #152:#153    // hashCode$lzycompute:()I
   #200 = Methodref          #2.#199      // org/sireum/ops/GraphOps.hashCode$lzycompute:()I
   #201 = Utf8               equals
   #202 = Utf8               (Ljava/lang/Object;)Z
   #203 = NameAndType        #201:#202    // equals:(Ljava/lang/Object;)Z
   #204 = Methodref          #5.#203      // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #205 = Methodref          #2.#158      // org/sireum/ops/GraphOps.hashCode:()I
   #206 = Utf8               Ljava/lang/Object;
   #207 = Utf8               (Lorg/sireum/Graph;)Lorg/sireum/ops/GraphOps;
   #208 = Utf8               (Lorg/sireum/Graph<TW;TE;>;)Lorg/sireum/ops/GraphOps<TW;TE;>;
   #209 = Utf8               (Lorg/sireum/Graph;)V
   #210 = NameAndType        #116:#209    // "<init>":(Lorg/sireum/Graph;)V
   #211 = Methodref          #2.#210      // org/sireum/ops/GraphOps."<init>":(Lorg/sireum/Graph;)V
   #212 = Utf8               apply$default$1
   #213 = Utf8               $content$lzycompute
   #214 = Utf8               ()Lscala/collection/immutable/Seq;
   #215 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #216 = Utf8               scala/Tuple2
   #217 = Class              #216         // scala/Tuple2
   #218 = Utf8               type
   #219 = String             #218         // type
   #220 = Utf8               List
   #221 = Utf8               ()Lscala/collection/immutable/List$;
   #222 = NameAndType        #220:#221    // List:()Lscala/collection/immutable/List$;
   #223 = Methodref          #161.#222    // scala/package$.List:()Lscala/collection/immutable/List$;
   #224 = Utf8               org
   #225 = String             #224         // org
   #226 = Utf8               sireum
   #227 = String             #226         // sireum
   #228 = Utf8               ops
   #229 = String             #228         // ops
   #230 = Utf8               [Ljava/lang/Object;
   #231 = Class              #230         // "[Ljava/lang/Object;"
   #232 = Utf8               scala/collection/immutable/List$
   #233 = Class              #232         // scala/collection/immutable/List$
   #234 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #235 = NameAndType        #148:#234    // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #236 = Methodref          #233.#235    // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #237 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #238 = NameAndType        #116:#237    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #239 = Methodref          #217.#238    // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #240 = String             #100         // graph
   #241 = Utf8               scala/collection/immutable/Seq
   #242 = Class              #241         // scala/collection/immutable/Seq
   #243 = NameAndType        #46:#47      // $content:Lscala/collection/immutable/Seq;
   #244 = Fieldref           #2.#243      // org/sireum/ops/GraphOps.$content:Lscala/collection/immutable/Seq;
   #245 = NameAndType        #213:#214    // $content$lzycompute:()Lscala/collection/immutable/Seq;
   #246 = Methodref          #2.#245      // org/sireum/ops/GraphOps.$content$lzycompute:()Lscala/collection/immutable/Seq;
   #247 = Utf8               getEdgeData
   #248 = Utf8               (Lorg/sireum/Graph$Edge;)Lorg/sireum/Option;
   #249 = Utf8               (Lorg/sireum/Graph$Edge<TW;TE;>;)Lorg/sireum/Option<TE;>;
   #250 = Utf8               e
   #251 = Utf8               Lorg/sireum/Graph$Edge$Data$;
   #252 = NameAndType        #60:#251     // MODULE$:Lorg/sireum/Graph$Edge$Data$;
   #253 = Fieldref           #34.#252     // org/sireum/Graph$Edge$Data$.MODULE$:Lorg/sireum/Graph$Edge$Data$;
   #254 = Utf8               (Lorg/sireum/Graph$Edge$Data;)Lscala/Some;
   #255 = NameAndType        #54:#254     // unapply:(Lorg/sireum/Graph$Edge$Data;)Lscala/Some;
   #256 = Methodref          #34.#255     // org/sireum/Graph$Edge$Data$.unapply:(Lorg/sireum/Graph$Edge$Data;)Lscala/Some;
   #257 = Utf8               scala/Some
   #258 = Class              #257         // scala/Some
   #259 = Utf8               isEmpty
   #260 = NameAndType        #259:#83     // isEmpty:()Z
   #261 = Methodref          #258.#260    // scala/Some.isEmpty:()Z
   #262 = Utf8               get
   #263 = Utf8               ()Ljava/lang/Object;
   #264 = NameAndType        #262:#263    // get:()Ljava/lang/Object;
   #265 = Methodref          #258.#264    // scala/Some.get:()Ljava/lang/Object;
   #266 = Utf8               scala/Tuple3
   #267 = Class              #266         // scala/Tuple3
   #268 = Utf8               _3
   #269 = NameAndType        #268:#263    // _3:()Ljava/lang/Object;
   #270 = Methodref          #267.#269    // scala/Tuple3._3:()Ljava/lang/Object;
   #271 = Utf8               org/sireum/Some$
   #272 = Class              #271         // org/sireum/Some$
   #273 = Utf8               Lorg/sireum/Some$;
   #274 = NameAndType        #60:#273     // MODULE$:Lorg/sireum/Some$;
   #275 = Fieldref           #272.#274    // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
   #276 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
   #277 = NameAndType        #148:#276    // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #278 = Methodref          #272.#277    // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
   #279 = Utf8               org/sireum/None$
   #280 = Class              #279         // org/sireum/None$
   #281 = Utf8               Lorg/sireum/None$;
   #282 = NameAndType        #60:#281     // MODULE$:Lorg/sireum/None$;
   #283 = Fieldref           #280.#282    // org/sireum/None$.MODULE$:Lorg/sireum/None$;
   #284 = Utf8               ()Lorg/sireum/None;
   #285 = NameAndType        #148:#284    // apply:()Lorg/sireum/None;
   #286 = Methodref          #280.#285    // org/sireum/None$.apply:()Lorg/sireum/None;
   #287 = Utf8               ed
   #288 = Utf8               Lorg/sireum/Graph$Edge;
   #289 = Utf8               getAllSuccessor
   #290 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Set;
   #291 = Utf8               (TW;)Lorg/sireum/Set<TW;>;
   #292 = Utf8               v
   #293 = Utf8               org/sireum/B$
   #294 = Class              #293         // org/sireum/B$
   #295 = Utf8               Lorg/sireum/B$;
   #296 = NameAndType        #60:#295     // MODULE$:Lorg/sireum/B$;
   #297 = Fieldref           #294.#296    // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #298 = Utf8               outgoingEdges
   #299 = Utf8               ()Lorg/sireum/HashSMap;
   #300 = NameAndType        #298:#299    // outgoingEdges:()Lorg/sireum/HashSMap;
   #301 = Methodref          #25.#300     // org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
   #302 = Utf8               nodes
   #303 = NameAndType        #302:#299    // nodes:()Lorg/sireum/HashSMap;
   #304 = Methodref          #25.#303     // org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
   #305 = Utf8               org/sireum/HashSMap
   #306 = Class              #305         // org/sireum/HashSMap
   #307 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Option;
   #308 = NameAndType        #262:#307    // get:(Ljava/lang/Object;)Lorg/sireum/Option;
   #309 = Methodref          #306.#308    // org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
   #310 = Utf8               org/sireum/Option
   #311 = Class              #310         // org/sireum/Option
   #312 = InterfaceMethodref #311.#264    // org/sireum/Option.get:()Ljava/lang/Object;
   #313 = Utf8               nonEmpty
   #314 = NameAndType        #313:#83     // nonEmpty:()Z
   #315 = InterfaceMethodref #311.#314    // org/sireum/Option.nonEmpty:()Z
   #316 = Utf8               $4B
   #317 = Utf8               (Z)Z
   #318 = NameAndType        #316:#317    // $4B:(Z)Z
   #319 = Methodref          #294.#318    // org/sireum/B$.$4B:(Z)Z
   #320 = Utf8               org/sireum/Set$
   #321 = Class              #320         // org/sireum/Set$
   #322 = Utf8               Lorg/sireum/Set$;
   #323 = NameAndType        #60:#322     // MODULE$:Lorg/sireum/Set$;
   #324 = Fieldref           #321.#323    // org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
   #325 = Utf8               empty
   #326 = Utf8               ()Lorg/sireum/Set;
   #327 = NameAndType        #325:#326    // empty:()Lorg/sireum/Set;
   #328 = Methodref          #321.#327    // org/sireum/Set$.empty:()Lorg/sireum/Set;
   #329 = Utf8               elements
   #330 = Utf8               ()Lorg/sireum/IS;
   #331 = NameAndType        #329:#330    // elements:()Lorg/sireum/IS;
   #332 = InterfaceMethodref #42.#331     // org/sireum/Graph$Internal$Edges.elements:()Lorg/sireum/IS;
   #333 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #334 = MethodType         #333         //  (Ljava/lang/Object;)Ljava/lang/Object;
   #335 = Utf8               $anonfun$getAllSuccessor$1
   #336 = Utf8               (Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #337 = NameAndType        #335:#336    // $anonfun$getAllSuccessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #338 = Methodref          #2.#337      // org/sireum/ops/GraphOps.$anonfun$getAllSuccessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #339 = MethodHandle       6:#338       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getAllSuccessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #340 = Utf8               (Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #341 = MethodType         #340         //  (Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #342 = Integer            5
   #343 = Integer            1
   #344 = Utf8               java/lang/invoke/LambdaMetafactory
   #345 = Class              #344         // java/lang/invoke/LambdaMetafactory
   #346 = Utf8               altMetafactory
   #347 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #348 = NameAndType        #346:#347    // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #349 = Methodref          #345.#348    // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #350 = MethodHandle       6:#349       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #351 = Utf8               (Lorg/sireum/ops/GraphOps;)Lscala/Function1;
   #352 = NameAndType        #148:#351    // apply:(Lorg/sireum/ops/GraphOps;)Lscala/Function1;
   #353 = InvokeDynamic      #0:#352      // #0:apply:(Lorg/sireum/ops/GraphOps;)Lscala/Function1;
   #354 = Utf8               org/sireum/IS
   #355 = Class              #354         // org/sireum/IS
   #356 = Utf8               map
   #357 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
   #358 = NameAndType        #356:#357    // map:(Lscala/Function1;)Lorg/sireum/IS;
   #359 = Methodref          #355.#358    // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
   #360 = Utf8               org/sireum/Set
   #361 = Class              #360         // org/sireum/Set
   #362 = Utf8               $plus$plus
   #363 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/Set;
   #364 = NameAndType        #362:#363    // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
   #365 = Methodref          #361.#364    // org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
   #366 = Utf8               getAllPredecessor
   #367 = Utf8               incomingEdges
   #368 = NameAndType        #367:#299    // incomingEdges:()Lorg/sireum/HashSMap;
   #369 = Methodref          #25.#368     // org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
   #370 = Utf8               $anonfun$getAllPredecessor$1
   #371 = NameAndType        #370:#336    // $anonfun$getAllPredecessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #372 = Methodref          #2.#371      // org/sireum/ops/GraphOps.$anonfun$getAllPredecessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #373 = MethodHandle       6:#372       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getAllPredecessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
   #374 = InvokeDynamic      #1:#352      // #1:apply:(Lorg/sireum/ops/GraphOps;)Lscala/Function1;
   #375 = Utf8               getSCC
   #376 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/HashSSet<TW;>;>;
   #377 = Utf8               org/sireum/package$
   #378 = Class              #377         // org/sireum/package$
   #379 = Utf8               Lorg/sireum/package$;
   #380 = NameAndType        #60:#379     // MODULE$:Lorg/sireum/package$;
   #381 = Fieldref           #378.#380    // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #382 = Utf8               ISZ
   #383 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #384 = NameAndType        #382:#383    // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #385 = Methodref          #378.#384    // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #386 = Utf8               scala/collection/immutable/Nil$
   #387 = Class              #386         // scala/collection/immutable/Nil$
   #388 = Utf8               Lscala/collection/immutable/Nil$;
   #389 = NameAndType        #60:#388     // MODULE$:Lscala/collection/immutable/Nil$;
   #390 = Fieldref           #387.#389    // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #391 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #392 = NameAndType        #148:#391    // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #393 = Methodref          #18.#392     // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
   #394 = Utf8               scala/runtime/ObjectRef
   #395 = Class              #394         // scala/runtime/ObjectRef
   #396 = Utf8               create
   #397 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #398 = NameAndType        #396:#397    // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #399 = Methodref          #395.#398    // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #400 = Utf8               org/sireum/HashSMap$
   #401 = Class              #400         // org/sireum/HashSMap$
   #402 = Utf8               Lorg/sireum/HashSMap$;
   #403 = NameAndType        #60:#402     // MODULE$:Lorg/sireum/HashSMap$;
   #404 = Fieldref           #401.#403    // org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
   #405 = Utf8               keys
   #406 = NameAndType        #405:#330    // keys:()Lorg/sireum/IS;
   #407 = Methodref          #306.#406    // org/sireum/HashSMap.keys:()Lorg/sireum/IS;
   #408 = Utf8               $anonfun$getSCC$1
   #409 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
   #410 = NameAndType        #408:#409    // $anonfun$getSCC$1:(Ljava/lang/Object;)Lscala/Tuple2;
   #411 = Methodref          #2.#410      // org/sireum/ops/GraphOps.$anonfun$getSCC$1:(Ljava/lang/Object;)Lscala/Tuple2;
   #412 = MethodHandle       6:#411       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$1:(Ljava/lang/Object;)Lscala/Tuple2;
   #413 = MethodType         #409         //  (Ljava/lang/Object;)Lscala/Tuple2;
   #414 = Utf8               ()Lscala/Function1;
   #415 = NameAndType        #148:#414    // apply:()Lscala/Function1;
   #416 = InvokeDynamic      #2:#415      // #2:apply:()Lscala/Function1;
   #417 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #418 = NameAndType        #362:#417    // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #419 = Methodref          #401.#418    // org/sireum/HashSMap$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #420 = Utf8               $anonfun$getSCC$10$adapted
   #421 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #422 = NameAndType        #420:#421    // $anonfun$getSCC$10$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #423 = Methodref          #2.#422      // org/sireum/ops/GraphOps.$anonfun$getSCC$10$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #424 = MethodHandle       6:#423       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$10$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #425 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #426 = NameAndType        #148:#425    // apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #427 = InvokeDynamic      #3:#426      // #3:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #428 = Utf8               foreach
   #429 = Utf8               (Lscala/Function1;)V
   #430 = NameAndType        #428:#429    // foreach:(Lscala/Function1;)V
   #431 = Methodref          #355.#430    // org/sireum/IS.foreach:(Lscala/Function1;)V
   #432 = Utf8               resetDiscoveryMap$1
   #433 = Utf8               (Lscala/runtime/ObjectRef;)V
   #434 = NameAndType        #432:#433    // resetDiscoveryMap$1:(Lscala/runtime/ObjectRef;)V
   #435 = Methodref          #2.#434      // org/sireum/ops/GraphOps.resetDiscoveryMap$1:(Lscala/runtime/ObjectRef;)V
   #436 = Utf8               elem
   #437 = NameAndType        #436:#206    // elem:Ljava/lang/Object;
   #438 = Fieldref           #395.#437    // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
   #439 = Utf8               $anonfun$getSCC$11$adapted
   #440 = NameAndType        #439:#421    // $anonfun$getSCC$11$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #441 = Methodref          #2.#440      // org/sireum/ops/GraphOps.$anonfun$getSCC$11$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #442 = MethodHandle       6:#441       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$11$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #443 = InvokeDynamic      #4:#426      // #4:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #444 = Utf8               result
   #445 = Utf8               Lscala/runtime/ObjectRef;
   #446 = Utf8               discoveryMap
   #447 = Utf8               orderedNodes
   #448 = Utf8               getCycles
   #449 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;TW;>;>;
   #450 = NameAndType        #375:#330    // getSCC:()Lorg/sireum/IS;
   #451 = Methodref          #2.#450      // org/sireum/ops/GraphOps.getSCC:()Lorg/sireum/IS;
   #452 = NameAndType        #325:#299    // empty:()Lorg/sireum/HashSMap;
   #453 = Methodref          #401.#452    // org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
   #454 = Utf8               org/sireum/Stack$
   #455 = Class              #454         // org/sireum/Stack$
   #456 = Utf8               Lorg/sireum/Stack$;
   #457 = NameAndType        #60:#456     // MODULE$:Lorg/sireum/Stack$;
   #458 = Fieldref           #455.#457    // org/sireum/Stack$.MODULE$:Lorg/sireum/Stack$;
   #459 = Utf8               ()Lorg/sireum/Stack;
   #460 = NameAndType        #325:#459    // empty:()Lorg/sireum/Stack;
   #461 = Methodref          #455.#460    // org/sireum/Stack$.empty:()Lorg/sireum/Stack;
   #462 = Utf8               $anonfun$getCycles$1
   #463 = NameAndType        #462:#409    // $anonfun$getCycles$1:(Ljava/lang/Object;)Lscala/Tuple2;
   #464 = Methodref          #2.#463      // org/sireum/ops/GraphOps.$anonfun$getCycles$1:(Ljava/lang/Object;)Lscala/Tuple2;
   #465 = MethodHandle       6:#464       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$1:(Ljava/lang/Object;)Lscala/Tuple2;
   #466 = InvokeDynamic      #5:#415      // #5:apply:()Lscala/Function1;
   #467 = Methodref          #306.#418    // org/sireum/HashSMap.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
   #468 = Utf8               $anonfun$getCycles$7$adapted
   #469 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
   #470 = NameAndType        #468:#469    // $anonfun$getCycles$7$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
   #471 = Methodref          #2.#470      // org/sireum/ops/GraphOps.$anonfun$getCycles$7$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
   #472 = MethodHandle       6:#471       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$7$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
   #473 = Utf8               (Lorg/sireum/HashSSet;)Ljava/lang/Object;
   #474 = MethodType         #473         //  (Lorg/sireum/HashSSet;)Ljava/lang/Object;
   #475 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #476 = NameAndType        #148:#475    // apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #477 = InvokeDynamic      #6:#476      // #6:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #478 = Utf8               $anonfun$getCycles$9$adapted
   #479 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #480 = NameAndType        #478:#479    // $anonfun$getCycles$9$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #481 = Methodref          #2.#480      // org/sireum/ops/GraphOps.$anonfun$getCycles$9$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #482 = MethodHandle       6:#481       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$9$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #483 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #484 = NameAndType        #148:#483    // apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #485 = InvokeDynamic      #7:#484      // #7:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #486 = Utf8               sccs
   #487 = Utf8               Lorg/sireum/IS;
   #488 = Utf8               loops
   #489 = Utf8               bSets
   #490 = Utf8               stack
   #491 = Utf8               marked
   #492 = Utf8               removed
   #493 = Utf8               position
   #494 = Utf8               reach
   #495 = Utf8               startNodes
   #496 = Utf8               forwardReach
   #497 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/IS;
   #498 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;TW;>;)Lorg/sireum/IS<Lorg/sireum/Z;TW;>;
   #499 = Utf8               criteria
   #500 = Utf8               T
   #501 = NameAndType        #500:#83     // T:()Z
   #502 = Methodref          #378.#501    // org/sireum/package$.T:()Z
   #503 = Utf8               reachable
   #504 = Utf8               (Lorg/sireum/IS;Z)Lorg/sireum/IS;
   #505 = NameAndType        #503:#504    // reachable:(Lorg/sireum/IS;Z)Lorg/sireum/IS;
   #506 = Methodref          #2.#505      // org/sireum/ops/GraphOps.reachable:(Lorg/sireum/IS;Z)Lorg/sireum/IS;
   #507 = Utf8               r
   #508 = Utf8               backwardReach
   #509 = Utf8               F
   #510 = NameAndType        #509:#83     // F:()Z
   #511 = Methodref          #378.#510    // org/sireum/package$.F:()Z
   #512 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;TW;>;Z)Lorg/sireum/IS<Lorg/sireum/Z;TW;>;
   #513 = Utf8               isForward
   #514 = NameAndType        #362:#497    // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
   #515 = Methodref          #355.#514    // org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
   #516 = Utf8               org/sireum/HashSSet$
   #517 = Class              #516         // org/sireum/HashSSet$
   #518 = Utf8               Lorg/sireum/HashSSet$;
   #519 = NameAndType        #60:#518     // MODULE$:Lorg/sireum/HashSSet$;
   #520 = Fieldref           #517.#519    // org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
   #521 = Utf8               ()Lorg/sireum/HashSSet;
   #522 = NameAndType        #325:#521    // empty:()Lorg/sireum/HashSSet;
   #523 = Methodref          #517.#522    // org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
   #524 = Methodref          #355.#314    // org/sireum/IS.nonEmpty:()Z
   #525 = Utf8               org/sireum/ops/ISZOps$
   #526 = Class              #525         // org/sireum/ops/ISZOps$
   #527 = Utf8               Lorg/sireum/ops/ISZOps$;
   #528 = NameAndType        #60:#527     // MODULE$:Lorg/sireum/ops/ISZOps$;
   #529 = Fieldref           #526.#528    // org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
   #530 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
   #531 = NameAndType        #148:#530    // apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
   #532 = Methodref          #526.#531    // org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
   #533 = Utf8               org/sireum/ops/ISZOps
   #534 = Class              #533         // org/sireum/ops/ISZOps
   #535 = Utf8               first
   #536 = NameAndType        #535:#263    // first:()Ljava/lang/Object;
   #537 = Methodref          #534.#536    // org/sireum/ops/ISZOps.first:()Ljava/lang/Object;
   #538 = Utf8               org/sireum/HashSSet
   #539 = Class              #538         // org/sireum/HashSSet
   #540 = Utf8               contains
   #541 = NameAndType        #540:#202    // contains:(Ljava/lang/Object;)Z
   #542 = Methodref          #539.#541    // org/sireum/HashSSet.contains:(Ljava/lang/Object;)Z
   #543 = Utf8               unary_$bang$extension
   #544 = NameAndType        #543:#317    // unary_$bang$extension:(Z)Z
   #545 = Methodref          #294.#544    // org/sireum/B$.unary_$bang$extension:(Z)Z
   #546 = NameAndType        #289:#290    // getAllSuccessor:(Ljava/lang/Object;)Lorg/sireum/Set;
   #547 = Methodref          #2.#546      // org/sireum/ops/GraphOps.getAllSuccessor:(Ljava/lang/Object;)Lorg/sireum/Set;
   #548 = NameAndType        #366:#290    // getAllPredecessor:(Ljava/lang/Object;)Lorg/sireum/Set;
   #549 = Methodref          #2.#548      // org/sireum/ops/GraphOps.getAllPredecessor:(Ljava/lang/Object;)Lorg/sireum/Set;
   #550 = Methodref          #361.#331    // org/sireum/Set.elements:()Lorg/sireum/IS;
   #551 = Utf8               $plus
   #552 = Utf8               (Ljava/lang/Object;)Lorg/sireum/HashSSet;
   #553 = NameAndType        #551:#552    // $plus:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
   #554 = Methodref          #539.#553    // org/sireum/HashSSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
   #555 = Utf8               tail
   #556 = NameAndType        #555:#330    // tail:()Lorg/sireum/IS;
   #557 = Methodref          #534.#556    // org/sireum/ops/ISZOps.tail:()Lorg/sireum/IS;
   #558 = Methodref          #539.#331    // org/sireum/HashSSet.elements:()Lorg/sireum/IS;
   #559 = Utf8               next
   #560 = Utf8               Lorg/sireum/Set;
   #561 = Utf8               current
   #562 = Utf8               workList
   #563 = Utf8               Lorg/sireum/HashSSet;
   #564 = Utf8               Z
   #565 = NameAndType        #92:#93      // $clone:()Lorg/sireum/$internal/ImmutableMarker;
   #566 = Methodref          #2.#565      // org/sireum/ops/GraphOps.$clone:()Lorg/sireum/$internal/ImmutableMarker;
   #567 = Utf8               $this
   #568 = Utf8               es
   #569 = Utf8               nodesInverse
   #570 = NameAndType        #569:#330    // nodesInverse:()Lorg/sireum/IS;
   #571 = Methodref          #25.#570     // org/sireum/Graph.nodesInverse:()Lorg/sireum/IS;
   #572 = Utf8               dest
   #573 = NameAndType        #572:#68     // dest:()Lorg/sireum/Z;
   #574 = InterfaceMethodref #40.#573     // org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
   #575 = NameAndType        #148:#333    // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #576 = Methodref          #355.#575    // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #577 = Utf8               Lorg/sireum/Graph$Internal$Edge;
   #578 = Utf8               source
   #579 = NameAndType        #578:#68     // source:()Lorg/sireum/Z;
   #580 = InterfaceMethodref #40.#579     // org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
   #581 = Utf8               org/sireum/B
   #582 = Class              #581         // org/sireum/B
   #583 = Utf8               (Z)V
   #584 = NameAndType        #116:#583    // "<init>":(Z)V
   #585 = Methodref          #582.#584    // org/sireum/B."<init>":(Z)V
   #586 = Utf8               $anonfun$getSCC$2
   #587 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
   #588 = Utf8               _1
   #589 = NameAndType        #588:#263    // _1:()Ljava/lang/Object;
   #590 = Methodref          #217.#589    // scala/Tuple2._1:()Ljava/lang/Object;
   #591 = Utf8               Lscala/Tuple2;
   #592 = Utf8               discoveryMap$1
   #593 = Utf8               entries
   #594 = NameAndType        #593:#330    // entries:()Lorg/sireum/IS;
   #595 = Methodref          #306.#594    // org/sireum/HashSMap.entries:()Lorg/sireum/IS;
   #596 = NameAndType        #586:#587    // $anonfun$getSCC$2:(Lscala/Tuple2;)Lscala/Tuple2;
   #597 = Methodref          #2.#596      // org/sireum/ops/GraphOps.$anonfun$getSCC$2:(Lscala/Tuple2;)Lscala/Tuple2;
   #598 = MethodHandle       6:#597       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$2:(Lscala/Tuple2;)Lscala/Tuple2;
   #599 = MethodType         #587         //  (Lscala/Tuple2;)Lscala/Tuple2;
   #600 = InvokeDynamic      #8:#415      // #8:apply:()Lscala/Function1;
   #601 = Utf8               $anonfun$getSCC$3
   #602 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Z
   #603 = Utf8               v$1
   #604 = Utf8               cf
   #605 = Utf8               _2
   #606 = NameAndType        #605:#263    // _2:()Ljava/lang/Object;
   #607 = Methodref          #217.#606    // scala/Tuple2._2:()Ljava/lang/Object;
   #608 = Utf8               value
   #609 = NameAndType        #608:#83     // value:()Z
   #610 = Methodref          #582.#609    // org/sireum/B.value:()Z
   #611 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashSMap;
   #612 = NameAndType        #551:#611    // $plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
   #613 = Methodref          #306.#612    // org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
   #614 = Utf8               setDiscovered$1
   #615 = Utf8               (Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
   #616 = Utf8               $anonfun$getSCC$3$adapted
   #617 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
   #618 = NameAndType        #616:#617    // $anonfun$getSCC$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
   #619 = Methodref          #2.#618      // org/sireum/ops/GraphOps.$anonfun$getSCC$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
   #620 = MethodHandle       6:#619       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
   #621 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #622 = MethodType         #621         //  (Lscala/Tuple2;)Ljava/lang/Object;
   #623 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
   #624 = NameAndType        #148:#623    // apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
   #625 = InvokeDynamic      #9:#624      // #9:apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
   #626 = Utf8               exists
   #627 = Utf8               (Lscala/Function1;)Z
   #628 = NameAndType        #626:#627    // exists:(Lscala/Function1;)Z
   #629 = InterfaceMethodref #311.#628    // org/sireum/Option.exists:(Lscala/Function1;)Z
   #630 = Utf8               setBoth$1
   #631 = Utf8               (Ljava/lang/Object;Lscala/runtime/ObjectRef;)V
   #632 = Utf8               $anonfun$getSCC$5
   #633 = Utf8               (Lscala/Tuple2;)Z
   #634 = Utf8               $anonfun$getSCC$4
   #635 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
   #636 = Utf8               s
   #637 = Utf8               toIS
   #638 = NameAndType        #637:#330    // toIS:()Lorg/sireum/IS;
   #639 = InterfaceMethodref #311.#638    // org/sireum/Option.toIS:()Lorg/sireum/IS;
   #640 = Utf8               $anonfun$getSCC$5$adapted
   #641 = NameAndType        #640:#621    // $anonfun$getSCC$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
   #642 = Methodref          #2.#641      // org/sireum/ops/GraphOps.$anonfun$getSCC$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
   #643 = MethodHandle       6:#642       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
   #644 = InvokeDynamic      #10:#415     // #10:apply:()Lscala/Function1;
   #645 = Utf8               $anonfun$getSCC$6
   #646 = Utf8               (ZZ)Z
   #647 = Utf8               c
   #648 = Utf8               n
   #649 = Utf8               $amp$extension
   #650 = NameAndType        #649:#646    // $amp$extension:(ZZ)Z
   #651 = Methodref          #294.#650    // org/sireum/B$.$amp$extension:(ZZ)Z
   #652 = Utf8               isAllMySuccDiscovered$1
   #653 = NameAndType        #634:#635    // $anonfun$getSCC$4:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
   #654 = Methodref          #2.#653      // org/sireum/ops/GraphOps.$anonfun$getSCC$4:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
   #655 = MethodHandle       6:#654       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$4:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
   #656 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
   #657 = MethodType         #656         //  (Ljava/lang/Object;)Lorg/sireum/IS;
   #658 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
   #659 = NameAndType        #148:#658    // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
   #660 = InvokeDynamic      #11:#659     // #11:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
   #661 = Utf8               flatMap
   #662 = NameAndType        #661:#357    // flatMap:(Lscala/Function1;)Lorg/sireum/IS;
   #663 = Methodref          #355.#662    // org/sireum/IS.flatMap:(Lscala/Function1;)Lorg/sireum/IS;
   #664 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #665 = MethodType         #664         //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #666 = Utf8               $anonfun$getSCC$6$adapted
   #667 = NameAndType        #666:#664    // $anonfun$getSCC$6$adapted:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #668 = Methodref          #2.#667      // org/sireum/ops/GraphOps.$anonfun$getSCC$6$adapted:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #669 = MethodHandle       6:#668       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$6$adapted:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #670 = Utf8               ()Lscala/Function2;
   #671 = NameAndType        #148:#670    // apply:()Lscala/Function2;
   #672 = InvokeDynamic      #12:#671     // #12:apply:()Lscala/Function2;
   #673 = Utf8               foldLeft
   #674 = Utf8               (Lscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
   #675 = NameAndType        #673:#674    // foldLeft:(Lscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
   #676 = Methodref          #534.#675    // org/sireum/ops/ISZOps.foldLeft:(Lscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
   #677 = Utf8               $anonfun$getSCC$7
   #678 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
   #679 = Utf8               current$1
   #680 = Utf8               $anonfun$getSCC$8
   #681 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #682 = Utf8               stack$1
   #683 = Utf8               org/sireum/Stack
   #684 = Class              #683         // org/sireum/Stack
   #685 = Utf8               push
   #686 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Stack;
   #687 = NameAndType        #685:#686    // push:(Ljava/lang/Object;)Lorg/sireum/Stack;
   #688 = Methodref          #684.#687    // org/sireum/Stack.push:(Ljava/lang/Object;)Lorg/sireum/Stack;
   #689 = Utf8               $anonfun$getSCC$9
   #690 = Utf8               isFirst$1
   #691 = Utf8               dfs$1
   #692 = Utf8               (Ljava/lang/Object;ZLscala/runtime/ObjectRef;)Lorg/sireum/IS;
   #693 = Utf8               isFirst
   #694 = Methodref          #684.#314    // org/sireum/Stack.nonEmpty:()Z
   #695 = Utf8               pop
   #696 = Utf8               ()Lorg/sireum/Option;
   #697 = NameAndType        #695:#696    // pop:()Lorg/sireum/Option;
   #698 = Methodref          #684.#697    // org/sireum/Stack.pop:()Lorg/sireum/Option;
   #699 = Utf8               org/sireum/helper$
   #700 = Class              #699         // org/sireum/helper$
   #701 = Utf8               Lorg/sireum/helper$;
   #702 = NameAndType        #60:#701     // MODULE$:Lorg/sireum/helper$;
   #703 = Fieldref           #700.#702    // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
   #704 = Utf8               assign
   #705 = NameAndType        #704:#333    // assign:(Ljava/lang/Object;)Ljava/lang/Object;
   #706 = Methodref          #700.#705    // org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
   #707 = MethodType         #263         //  ()Ljava/lang/Object;
   #708 = Utf8               $anonfun$getSCC$7$adapted
   #709 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #710 = NameAndType        #708:#709    // $anonfun$getSCC$7$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #711 = Methodref          #2.#710      // org/sireum/ops/GraphOps.$anonfun$getSCC$7$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #712 = MethodHandle       6:#711       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$7$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #713 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Lscala/Function0;
   #714 = NameAndType        #148:#713    // apply:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Lscala/Function0;
   #715 = InvokeDynamic      #13:#714     // #13:apply:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Lscala/Function0;
   #716 = Utf8               $amp$amp$extension
   #717 = Utf8               (ZLscala/Function0;)Z
   #718 = NameAndType        #716:#717    // $amp$amp$extension:(ZLscala/Function0;)Z
   #719 = Methodref          #294.#718    // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
   #720 = NameAndType        #614:#615    // setDiscovered$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
   #721 = Methodref          #2.#720      // org/sireum/ops/GraphOps.setDiscovered$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
   #722 = Utf8               $colon$plus
   #723 = NameAndType        #722:#656    // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
   #724 = Methodref          #355.#723    // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
   #725 = NameAndType        #630:#631    // setBoth$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;)V
   #726 = Methodref          #2.#725      // org/sireum/ops/GraphOps.setBoth$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;)V
   #727 = Utf8               $anonfun$getSCC$8$adapted
   #728 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #729 = NameAndType        #727:#728    // $anonfun$getSCC$8$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #730 = Methodref          #2.#729      // org/sireum/ops/GraphOps.$anonfun$getSCC$8$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #731 = MethodHandle       6:#730       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$8$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #732 = Utf8               (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #733 = NameAndType        #148:#732    // apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #734 = InvokeDynamic      #14:#733     // #14:apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #735 = Utf8               $anonfun$getSCC$9$adapted
   #736 = Utf8               (Z)Ljava/lang/Object;
   #737 = NameAndType        #735:#736    // $anonfun$getSCC$9$adapted:(Z)Ljava/lang/Object;
   #738 = Methodref          #2.#737      // org/sireum/ops/GraphOps.$anonfun$getSCC$9$adapted:(Z)Ljava/lang/Object;
   #739 = MethodHandle       6:#738       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$9$adapted:(Z)Ljava/lang/Object;
   #740 = Utf8               (Z)Lscala/Function0;
   #741 = NameAndType        #148:#740    // apply:(Z)Lscala/Function0;
   #742 = InvokeDynamic      #15:#741     // #15:apply:(Z)Lscala/Function0;
   #743 = Utf8               $plus$colon
   #744 = NameAndType        #743:#656    // $plus$colon:(Ljava/lang/Object;)Lorg/sireum/IS;
   #745 = Methodref          #355.#744    // org/sireum/IS.$plus$colon:(Ljava/lang/Object;)Lorg/sireum/IS;
   #746 = Utf8               x
   #747 = Utf8               nexts
   #748 = Utf8               $anonfun$getSCC$10
   #749 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #750 = Utf8               orderedNodes$1
   #751 = Utf8               k
   #752 = NameAndType        #691:#692    // dfs$1:(Ljava/lang/Object;ZLscala/runtime/ObjectRef;)Lorg/sireum/IS;
   #753 = Methodref          #2.#752      // org/sireum/ops/GraphOps.dfs$1:(Ljava/lang/Object;ZLscala/runtime/ObjectRef;)Lorg/sireum/IS;
   #754 = Utf8               $anonfun$getSCC$11
   #755 = Utf8               result$1
   #756 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashSSet;
   #757 = NameAndType        #362:#756    // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
   #758 = Methodref          #539.#757    // org/sireum/HashSSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
   #759 = Utf8               $anonfun$getCycles$3
   #760 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
   #761 = Utf8               position$1
   #762 = Utf8               wV$1
   #763 = Utf8               q$1
   #764 = Utf8               org/sireum/Z
   #765 = Class              #764         // org/sireum/Z
   #766 = Utf8               $less$eq
   #767 = Utf8               (Lorg/sireum/Z;)Z
   #768 = NameAndType        #766:#767    // $less$eq:(Lorg/sireum/Z;)Z
   #769 = InterfaceMethodref #765.#768    // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
   #770 = Utf8               $anonfun$getCycles$4
   #771 = Utf8               (Lscala/runtime/BooleanRef;)Z
   #772 = Utf8               break$1
   #773 = Utf8               scala/runtime/BooleanRef
   #774 = Class              #773         // scala/runtime/BooleanRef
   #775 = NameAndType        #436:#564    // elem:Z
   #776 = Fieldref           #774.#775    // scala/runtime/BooleanRef.elem:Z
   #777 = Utf8               Lscala/runtime/BooleanRef;
   #778 = Utf8               $anonfun$getCycles$5
   #779 = Utf8               $anonfun$getCycles$2
   #780 = Utf8               (Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #781 = Utf8               avRemoved$1
   #782 = Utf8               marked$1
   #783 = Utf8               foundCycle$1
   #784 = Utf8               v$2
   #785 = Utf8               stack$2
   #786 = Utf8               loops$1
   #787 = Utf8               reach$1
   #788 = Utf8               removed$1
   #789 = Utf8               bSets$1
   #790 = Utf8               wV
   #791 = Methodref          #361.#541    // org/sireum/Set.contains:(Ljava/lang/Object;)Z
   #792 = Utf8               cycle$1
   #793 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
   #794 = NameAndType        #792:#793    // cycle$1:(Ljava/lang/Object;Lorg/sireum/Z;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
   #795 = Methodref          #2.#794      // org/sireum/ops/GraphOps.cycle$1:(Ljava/lang/Object;Lorg/sireum/Z;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
   #796 = Utf8               noCycle$1
   #797 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
   #798 = NameAndType        #796:#797    // noCycle$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
   #799 = Methodref          #2.#798      // org/sireum/ops/GraphOps.noCycle$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
   #800 = Utf8               $anonfun$getCycles$3$adapted
   #801 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
   #802 = NameAndType        #800:#801    // $anonfun$getCycles$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
   #803 = Methodref          #2.#802      // org/sireum/ops/GraphOps.$anonfun$getCycles$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
   #804 = MethodHandle       6:#803       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
   #805 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function0;
   #806 = NameAndType        #148:#805    // apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function0;
   #807 = InvokeDynamic      #16:#806     // #16:apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function0;
   #808 = Methodref          #684.#331    // org/sireum/Stack.elements:()Lorg/sireum/IS;
   #809 = Utf8               peek
   #810 = NameAndType        #809:#696    // peek:()Lorg/sireum/Option;
   #811 = Methodref          #684.#810    // org/sireum/Stack.peek:()Lorg/sireum/Option;
   #812 = Utf8               (Z)Lscala/runtime/BooleanRef;
   #813 = NameAndType        #396:#812    // create:(Z)Lscala/runtime/BooleanRef;
   #814 = Methodref          #774.#813    // scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
   #815 = Utf8               org/sireum/Z$
   #816 = Class              #815         // org/sireum/Z$
   #817 = Utf8               Lorg/sireum/Z$;
   #818 = NameAndType        #60:#817     // MODULE$:Lorg/sireum/Z$;
   #819 = Fieldref           #816.#818    // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #820 = Utf8               (I)Lorg/sireum/Z;
   #821 = NameAndType        #148:#820    // apply:(I)Lorg/sireum/Z;
   #822 = Methodref          #816.#821    // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #823 = Utf8               size
   #824 = NameAndType        #823:#68     // size:()Lorg/sireum/Z;
   #825 = Methodref          #355.#824    // org/sireum/IS.size:()Lorg/sireum/Z;
   #826 = Utf8               $less
   #827 = NameAndType        #826:#767    // $less:(Lorg/sireum/Z;)Z
   #828 = InterfaceMethodref #765.#827    // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
   #829 = Utf8               $anonfun$getCycles$4$adapted
   #830 = Utf8               (Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #831 = NameAndType        #829:#830    // $anonfun$getCycles$4$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #832 = Methodref          #2.#831      // org/sireum/ops/GraphOps.$anonfun$getCycles$4$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #833 = MethodHandle       6:#832       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$4$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #834 = Utf8               (Lscala/runtime/BooleanRef;)Lscala/Function0;
   #835 = NameAndType        #148:#834    // apply:(Lscala/runtime/BooleanRef;)Lscala/Function0;
   #836 = InvokeDynamic      #17:#835     // #17:apply:(Lscala/runtime/BooleanRef;)Lscala/Function0;
   #837 = Utf8               scala/runtime/BoxesRunTime
   #838 = Class              #837         // scala/runtime/BoxesRunTime
   #839 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #840 = NameAndType        #201:#839    // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #841 = Methodref          #838.#840    // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #842 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #843 = NameAndType        #551:#842    // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #844 = InterfaceMethodref #765.#843    // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #845 = Utf8               $anonfun$getCycles$5$adapted
   #846 = NameAndType        #845:#830    // $anonfun$getCycles$5$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #847 = Methodref          #2.#846      // org/sireum/ops/GraphOps.$anonfun$getCycles$5$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #848 = MethodHandle       6:#847       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$5$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
   #849 = InvokeDynamic      #18:#835     // #18:apply:(Lscala/runtime/BooleanRef;)Lscala/Function0;
   #850 = Utf8               gotCycle
   #851 = Utf8               cycle
   #852 = Utf8               break
   #853 = Utf8               i
   #854 = Utf8               Lorg/sireum/Z;
   #855 = Utf8               tq
   #856 = NameAndType        #551:#290    // $plus:(Ljava/lang/Object;)Lorg/sireum/Set;
   #857 = Methodref          #361.#856    // org/sireum/Set.$plus:(Ljava/lang/Object;)Lorg/sireum/Set;
   #858 = Methodref          #684.#824    // org/sireum/Stack.size:()Lorg/sireum/Z;
   #859 = Utf8               org/sireum/Some
   #860 = Class              #859         // org/sireum/Some
   #861 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
   #862 = NameAndType        #54:#861     // unapply:(Lorg/sireum/Some;)Lscala/Some;
   #863 = Methodref          #272.#862    // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
   #864 = Utf8               $anonfun$getCycles$2$adapted
   #865 = Utf8               (Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #866 = NameAndType        #864:#865    // $anonfun$getCycles$2$adapted:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #867 = Methodref          #2.#866      // org/sireum/ops/GraphOps.$anonfun$getCycles$2$adapted:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #868 = MethodHandle       6:#867       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$2$adapted:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #869 = Utf8               (Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #870 = NameAndType        #148:#869    // apply:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #871 = InvokeDynamic      #19:#870     // #19:apply:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #872 = Utf8               unmark$1
   #873 = Utf8               (Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
   #874 = NameAndType        #872:#873    // unmark$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
   #875 = Methodref          #2.#874      // org/sireum/ops/GraphOps.unmark$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
   #876 = Methodref          #306.#824    // org/sireum/HashSMap.size:()Lorg/sireum/Z;
   #877 = Utf8               q
   #878 = Utf8               foundCycle
   #879 = Utf8               t
   #880 = Utf8               avRemoved
   #881 = Utf8               $anonfun$getCycles$6
   #882 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #883 = Utf8               x$1
   #884 = Utf8               y
   #885 = Utf8               $minus
   #886 = NameAndType        #885:#290    // $minus:(Ljava/lang/Object;)Lorg/sireum/Set;
   #887 = Methodref          #361.#886    // org/sireum/Set.$minus:(Ljava/lang/Object;)Lorg/sireum/Set;
   #888 = Utf8               ry
   #889 = Utf8               $anonfun$getCycles$6$adapted
   #890 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #891 = NameAndType        #889:#890    // $anonfun$getCycles$6$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #892 = Methodref          #2.#891      // org/sireum/ops/GraphOps.$anonfun$getCycles$6$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #893 = MethodHandle       6:#892       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$6$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #894 = Utf8               (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #895 = NameAndType        #148:#894    // apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #896 = InvokeDynamic      #20:#895     // #20:apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #897 = Utf8               bsx
   #898 = Utf8               temp
   #899 = Utf8               bs
   #900 = Utf8               rx
   #901 = Utf8               t1
   #902 = Utf8               t2
   #903 = Utf8               $anonfun$getCycles$8
   #904 = Utf8               max$1
   #905 = Utf8               startNode$1
   #906 = Utf8               node
   #907 = InterfaceMethodref #42.#824     // org/sireum/Graph$Internal$Edges.size:()Lorg/sireum/Z;
   #908 = Utf8               $greater
   #909 = NameAndType        #908:#767    // $greater:(Lorg/sireum/Z;)Z
   #910 = InterfaceMethodref #765.#909    // org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
   #911 = Utf8               inedges
   #912 = Utf8               Lorg/sireum/Option;
   #913 = Utf8               inDegree
   #914 = Utf8               $anonfun$getCycles$7
   #915 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)V
   #916 = Utf8               startNodes$1
   #917 = Utf8               scc
   #918 = Utf8               $anonfun$getCycles$8$adapted
   #919 = NameAndType        #918:#421    // $anonfun$getCycles$8$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #920 = Methodref          #2.#919      // org/sireum/ops/GraphOps.$anonfun$getCycles$8$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #921 = MethodHandle       6:#920       // REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$8$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
   #922 = InvokeDynamic      #21:#426     // #21:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
   #923 = Utf8               max
   #924 = Utf8               startNode
   #925 = Utf8               $anonfun$getCycles$9
   #926 = Utf8               (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Z
   #927 = Utf8               (Lorg/sireum/Graph<TW;TE;>;)V
   #928 = Utf8               __graph
   #929 = Methodref          #5.#118      // java/lang/Object."<init>":()V
   #930 = Utf8               $init$
   #931 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
   #932 = NameAndType        #930:#931    // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
   #933 = InterfaceMethodref #95.#932     // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
   #934 = Utf8               (Lorg/sireum/Immutable;)V
   #935 = NameAndType        #930:#934    // $init$:(Lorg/sireum/Immutable;)V
   #936 = InterfaceMethodref #77.#935     // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
   #937 = Utf8               (Lorg/sireum/DatatypeSig;)V
   #938 = NameAndType        #930:#937    // $init$:(Lorg/sireum/DatatypeSig;)V
   #939 = InterfaceMethodref #7.#938      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
   #940 = NameAndType        #748:#749    // $anonfun$getSCC$10:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #941 = Methodref          #2.#940      // org/sireum/ops/GraphOps.$anonfun$getSCC$10:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #942 = Utf8               scala/runtime/BoxedUnit
   #943 = Class              #942         // scala/runtime/BoxedUnit
   #944 = Utf8               UNIT
   #945 = Utf8               Lscala/runtime/BoxedUnit;
   #946 = NameAndType        #944:#945    // UNIT:Lscala/runtime/BoxedUnit;
   #947 = Fieldref           #943.#946    // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   #948 = NameAndType        #754:#749    // $anonfun$getSCC$11:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #949 = Methodref          #2.#948      // org/sireum/ops/GraphOps.$anonfun$getSCC$11:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #950 = NameAndType        #914:#915    // $anonfun$getCycles$7:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)V
   #951 = Methodref          #2.#950      // org/sireum/ops/GraphOps.$anonfun$getCycles$7:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)V
   #952 = NameAndType        #925:#926    // $anonfun$getCycles$9:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Z
   #953 = Methodref          #2.#952      // org/sireum/ops/GraphOps.$anonfun$getCycles$9:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Z
   #954 = NameAndType        #601:#602    // $anonfun$getSCC$3:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Z
   #955 = Methodref          #2.#954      // org/sireum/ops/GraphOps.$anonfun$getSCC$3:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Z
   #956 = NameAndType        #632:#633    // $anonfun$getSCC$5:(Lscala/Tuple2;)Z
   #957 = Methodref          #2.#956      // org/sireum/ops/GraphOps.$anonfun$getSCC$5:(Lscala/Tuple2;)Z
   #958 = NameAndType        #645:#646    // $anonfun$getSCC$6:(ZZ)Z
   #959 = Methodref          #2.#958      // org/sireum/ops/GraphOps.$anonfun$getSCC$6:(ZZ)Z
   #960 = NameAndType        #677:#678    // $anonfun$getSCC$7:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
   #961 = Methodref          #2.#960      // org/sireum/ops/GraphOps.$anonfun$getSCC$7:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
   #962 = NameAndType        #680:#681    // $anonfun$getSCC$8:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #963 = Methodref          #2.#962      // org/sireum/ops/GraphOps.$anonfun$getSCC$8:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #964 = NameAndType        #689:#317    // $anonfun$getSCC$9:(Z)Z
   #965 = Methodref          #2.#964      // org/sireum/ops/GraphOps.$anonfun$getSCC$9:(Z)Z
   #966 = NameAndType        #759:#760    // $anonfun$getCycles$3:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
   #967 = Methodref          #2.#966      // org/sireum/ops/GraphOps.$anonfun$getCycles$3:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
   #968 = NameAndType        #770:#771    // $anonfun$getCycles$4:(Lscala/runtime/BooleanRef;)Z
   #969 = Methodref          #2.#968      // org/sireum/ops/GraphOps.$anonfun$getCycles$4:(Lscala/runtime/BooleanRef;)Z
   #970 = NameAndType        #778:#771    // $anonfun$getCycles$5:(Lscala/runtime/BooleanRef;)Z
   #971 = Methodref          #2.#970      // org/sireum/ops/GraphOps.$anonfun$getCycles$5:(Lscala/runtime/BooleanRef;)Z
   #972 = NameAndType        #779:#780    // $anonfun$getCycles$2:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #973 = Methodref          #2.#972      // org/sireum/ops/GraphOps.$anonfun$getCycles$2:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #974 = NameAndType        #881:#882    // $anonfun$getCycles$6:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #975 = Methodref          #2.#974      // org/sireum/ops/GraphOps.$anonfun$getCycles$6:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #976 = NameAndType        #903:#749    // $anonfun$getCycles$8:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #977 = Methodref          #2.#976      // org/sireum/ops/GraphOps.$anonfun$getCycles$8:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
   #978 = Utf8               $deserializeLambda$
   #979 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #980 = Utf8               scala/runtime/LambdaDeserialize
   #981 = Class              #980         // scala/runtime/LambdaDeserialize
   #982 = Utf8               bootstrap
   #983 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #984 = NameAndType        #982:#983    // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #985 = Methodref          #981.#984    // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #986 = MethodHandle       6:#985       // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #987 = Utf8               lambdaDeserialize
   #988 = NameAndType        #987:#979    // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #989 = InvokeDynamic      #22:#988     // #22:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #990 = Utf8               Signature
   #991 = Utf8               Code
   #992 = Utf8               LocalVariableTable
   #993 = Utf8               MethodParameters
   #994 = Utf8               LineNumberTable
   #995 = Utf8               StackMapTable
   #996 = Utf8               InnerClasses
   #997 = Utf8               SourceFile
   #998 = Utf8               RuntimeVisibleAnnotations
   #999 = Utf8               BootstrapMethods
  #1000 = Utf8               ScalaInlineInfo
  #1001 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #48                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.Graph<W, E> _graph;
    descriptor: Lorg/sireum/Graph;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #51                          // Lorg/sireum/Graph<TW;TE;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <W extends java.lang.Object, E extends java.lang.Object> scala.Some<org.sireum.Graph<W, E>> unapply(org.sireum.ops.GraphOps<W, E>);
    descriptor: (Lorg/sireum/ops/GraphOps;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #63                 // Field org/sireum/ops/GraphOps$.MODULE$:Lorg/sireum/ops/GraphOps$;
         3: aload_0
         4: invokevirtual #65                 // Method org/sireum/ops/GraphOps$.unapply:(Lorg/sireum/ops/GraphOps;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/ops/GraphOps;
    Signature: #56                          // <W:Ljava/lang/Object;E:Ljava/lang/Object;>(Lorg/sireum/ops/GraphOps<TW;TE;>;)Lscala/Some<Lorg/sireum/Graph<TW;TE;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #81                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #99                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;

  public org.sireum.Graph<W, E> graph();
    descriptor: ()Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _graph:Lorg/sireum/Graph;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #102                         // ()Lorg/sireum/Graph<TW;TE;>;

  public org.sireum.Graph<W, E> getGraph();
    descriptor: ()Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _graph:Lorg/sireum/Graph;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #102                         // ()Lorg/sireum/Graph<TW;TE;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #113                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          62
        14: new           #115                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #119                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #121                // String GraphOps
        25: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #133                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        44: invokevirtual #139                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: bipush        41
        54: invokevirtual #128                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: invokevirtual #141                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        62: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 111 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      40     1    sb   Ljava/lang/StringBuilder;
            0      63     0  this   Lorg/sireum/ops/GraphOps;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #113                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #133                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #147                // Method toString:()Ljava/lang/String;
        21: invokevirtual #151                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/ops/GraphOps;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #155                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     88
        15: aload_0
        16: aload_0
        17: invokevirtual #157                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #159                // Method java/lang/Object.hashCode:()I
        27: goto          74
        30: getstatic     #164                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #168                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #173                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #5                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #177                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #182                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        59: aastore
        60: invokevirtual #186                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        63: invokevirtual #191                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        66: checkcast     #193                // class scala/collection/Seq
        69: invokeinterface #194,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        74: putfield      #196                // Field hashCode:I
        77: aload_0
        78: aload_0
        79: getfield      #155                // Field bitmap$0:B
        82: iconst_1
        83: ior
        84: i2b
        85: putfield      #155                // Field bitmap$0:B
        88: aload_1
        89: monitorexit
        90: goto          96
        93: aload_1
        94: monitorexit
        95: athrow
        96: aload_0
        97: getfield      #196                // Field hashCode:I
       100: ireturn
      Exception table:
         from    to  target type
             4    88    93   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/ops/GraphOps, class org/sireum/ops/GraphOps ]
          stack = [ class org/sireum/ops/GraphOps ]
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/sireum/ops/GraphOps, class org/sireum/ops/GraphOps ]
          stack = [ class org/sireum/ops/GraphOps, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lorg/sireum/ops/GraphOps;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #155                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #200                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #196                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/ops/GraphOps;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #157                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #204                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/ops/GraphOps
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/ops/GraphOps
        37: astore        4
        39: aload_0
        40: invokevirtual #205                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #205                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        59: aload         4
        61: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #204                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/ops/GraphOps ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, top, class java/lang/Object, class org/sireum/ops/GraphOps, class org/sireum/Graph ]
          stack = [ class org/sireum/Graph ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, top, class java/lang/Object, class org/sireum/ops/GraphOps ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/ops/GraphOps;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.ops.GraphOps<W, E> apply(org.sireum.Graph<W, E>);
    descriptor: (Lorg/sireum/Graph;)Lorg/sireum/ops/GraphOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class org/sireum/ops/GraphOps
         3: dup
         4: aload_1
         5: invokespecial #211                // Method "<init>":(Lorg/sireum/Graph;)V
         8: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/ops/GraphOps;
            0       9     1 graph   Lorg/sireum/Graph;
    Signature: #208                         // (Lorg/sireum/Graph<TW;TE;>;)Lorg/sireum/ops/GraphOps<TW;TE;>;
    MethodParameters:
      Name                           Flags
      graph                          final

  public org.sireum.Graph<W, E> apply$default$1();
    descriptor: ()Lorg/sireum/Graph;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #102                         // ()Lorg/sireum/Graph<TW;TE;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #155                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     125
        15: aload_0
        16: getstatic     #164                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #168                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #173                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_2
        26: anewarray     #217                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #217                // class scala/Tuple2
        34: dup
        35: ldc           #219                // String type
        37: getstatic     #164                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #223                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #173                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #145                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #225                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #227                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #229                // String ops
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #121                // String GraphOps
        69: aastore
        70: checkcast     #231                // class "[Ljava/lang/Object;"
        73: invokevirtual #186                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #236                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #217                // class scala/Tuple2
        88: dup
        89: ldc           #240                // String graph
        91: aload_0
        92: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        95: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        98: aastore
        99: checkcast     #231                // class "[Ljava/lang/Object;"
       102: invokevirtual #186                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       105: invokevirtual #191                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       108: checkcast     #242                // class scala/collection/immutable/Seq
       111: putfield      #244                // Field $content:Lscala/collection/immutable/Seq;
       114: aload_0
       115: aload_0
       116: getfield      #155                // Field bitmap$0:B
       119: iconst_2
       120: ior
       121: i2b
       122: putfield      #155                // Field bitmap$0:B
       125: aload_1
       126: monitorexit
       127: goto          133
       130: aload_1
       131: monitorexit
       132: athrow
       133: aload_0
       134: getfield      #244                // Field $content:Lscala/collection/immutable/Seq;
       137: areturn
      Exception table:
         from    to  target type
             4   125   130   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 125
          locals = [ class org/sireum/ops/GraphOps ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #215                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #155                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #246                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #244                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #215                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.Option<E> getEdgeData(org.sireum.Graph$Edge<W, E>);
    descriptor: (Lorg/sireum/Graph$Edge;)Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #31                 // class org/sireum/Graph$Edge$Data
         6: ifeq          58
         9: aload_3
        10: checkcast     #31                 // class org/sireum/Graph$Edge$Data
        13: astore        4
        15: getstatic     #253                // Field org/sireum/Graph$Edge$Data$.MODULE$:Lorg/sireum/Graph$Edge$Data$;
        18: aload         4
        20: invokevirtual #256                // Method org/sireum/Graph$Edge$Data$.unapply:(Lorg/sireum/Graph$Edge$Data;)Lscala/Some;
        23: astore        5
        25: aload         5
        27: invokevirtual #261                // Method scala/Some.isEmpty:()Z
        30: ifne          55
        33: aload         5
        35: invokevirtual #265                // Method scala/Some.get:()Ljava/lang/Object;
        38: checkcast     #267                // class scala/Tuple3
        41: invokevirtual #270                // Method scala/Tuple3._3:()Ljava/lang/Object;
        44: astore        6
        46: getstatic     #275                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        49: aload         6
        51: invokevirtual #278                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        54: areturn
        55: goto          61
        58: goto          61
        61: getstatic     #283                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        64: invokevirtual #286                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        67: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class org/sireum/ops/GraphOps, class org/sireum/Graph$Edge, top, class org/sireum/Graph$Edge, class org/sireum/Graph$Edge$Data, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
      LineNumberTable:
        line 35: 0
        line 36: 2
        line 35: 33
        line 36: 46
        line 37: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46       9     6    ed   Ljava/lang/Object;
            0      68     0  this   Lorg/sireum/ops/GraphOps;
            0      68     1     e   Lorg/sireum/Graph$Edge;
    Signature: #249                         // (Lorg/sireum/Graph$Edge<TW;TE;>;)Lorg/sireum/Option<TE;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public org.sireum.Set<W> getAllSuccessor(W);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
         7: invokevirtual #301                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
        10: aload_0
        11: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        14: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        17: aload_1
        18: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        21: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        26: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        29: invokeinterface #315,  1          // InterfaceMethod org/sireum/Option.nonEmpty:()Z
        34: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        37: ifeq          98
        40: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
        43: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
        46: aload_0
        47: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        50: invokevirtual #301                // Method org/sireum/Graph.outgoingEdges:()Lorg/sireum/HashSMap;
        53: aload_0
        54: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        57: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        60: aload_1
        61: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        64: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        69: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        72: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        77: checkcast     #42                 // class org/sireum/Graph$Internal$Edges
        80: invokeinterface #332,  1          // InterfaceMethod org/sireum/Graph$Internal$Edges.elements:()Lorg/sireum/IS;
        85: aload_0
        86: invokedynamic #353,  0            // InvokeDynamic #0:apply:(Lorg/sireum/ops/GraphOps;)Lscala/Function1;
        91: invokevirtual #359                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        94: invokevirtual #365                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        97: areturn
        98: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
       101: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
       104: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 98
      LineNumberTable:
        line 42: 0
        line 43: 40
        line 46: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     105     0  this   Lorg/sireum/ops/GraphOps;
            0     105     1     v   Ljava/lang/Object;
    Signature: #291                         // (TW;)Lorg/sireum/Set<TW;>;
    MethodParameters:
      Name                           Flags
      v                              final

  public org.sireum.Set<W> getAllPredecessor(W);
    descriptor: (Ljava/lang/Object;)Lorg/sireum/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
         7: invokevirtual #369                // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
        10: aload_0
        11: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        14: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        17: aload_1
        18: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        21: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        26: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        29: invokeinterface #315,  1          // InterfaceMethod org/sireum/Option.nonEmpty:()Z
        34: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        37: ifeq          98
        40: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
        43: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
        46: aload_0
        47: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        50: invokevirtual #369                // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
        53: aload_0
        54: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        57: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        60: aload_1
        61: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        64: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        69: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        72: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        77: checkcast     #42                 // class org/sireum/Graph$Internal$Edges
        80: invokeinterface #332,  1          // InterfaceMethod org/sireum/Graph$Internal$Edges.elements:()Lorg/sireum/IS;
        85: aload_0
        86: invokedynamic #374,  0            // InvokeDynamic #1:apply:(Lorg/sireum/ops/GraphOps;)Lscala/Function1;
        91: invokevirtual #359                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        94: invokevirtual #365                // Method org/sireum/Set.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/Set;
        97: areturn
        98: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
       101: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
       104: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 98
      LineNumberTable:
        line 51: 0
        line 52: 40
        line 55: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     105     0  this   Lorg/sireum/ops/GraphOps;
            0     105     1     v   Ljava/lang/Object;
    Signature: #291                         // (TW;)Lorg/sireum/Set<TW;>;
    MethodParameters:
      Name                           Flags
      v                              final

  public org.sireum.IS<org.sireum.Z, org.sireum.HashSSet<W>> getSCC();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=1
         0: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        15: astore_1
        16: getstatic     #404                // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        19: aload_0
        20: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        23: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        26: invokevirtual #407                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        29: invokedynamic #416,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        34: invokevirtual #359                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        37: invokevirtual #419                // Method org/sireum/HashSMap$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        40: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        43: astore_2
        44: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        47: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        50: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        53: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        56: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        59: astore_3
        60: aload_0
        61: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        64: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        67: invokevirtual #407                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        70: aload_0
        71: aload_2
        72: aload_3
        73: invokedynamic #427,  0            // InvokeDynamic #3:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
        78: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        81: aload_2
        82: invokestatic  #435                // Method resetDiscoveryMap$1:(Lscala/runtime/ObjectRef;)V
        85: aload_3
        86: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        89: checkcast     #355                // class org/sireum/IS
        92: aload_0
        93: aload_2
        94: aload_1
        95: invokedynamic #443,  0            // InvokeDynamic #4:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
       100: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       103: aload_1
       104: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       107: checkcast     #355                // class org/sireum/IS
       110: areturn
      LineNumberTable:
        line 61: 0
        line 63: 16
        line 117: 44
        line 119: 60
        line 124: 81
        line 125: 85
        line 130: 103
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      95     1 result   Lscala/runtime/ObjectRef;
           44      67     2 discoveryMap   Lscala/runtime/ObjectRef;
           60      51     3 orderedNodes   Lscala/runtime/ObjectRef;
            0     111     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #376                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/HashSSet<TW;>;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.IS<org.sireum.Z, W>> getCycles();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=10, args_size=1
         0: aload_0
         1: invokevirtual #451                // Method getSCC:()Lorg/sireum/IS;
         4: astore_1
         5: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         8: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        11: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        14: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        17: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        20: astore_2
        21: getstatic     #404                // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        24: invokevirtual #453                // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        27: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        30: astore_3
        31: getstatic     #458                // Field org/sireum/Stack$.MODULE$:Lorg/sireum/Stack$;
        34: invokevirtual #461                // Method org/sireum/Stack$.empty:()Lorg/sireum/Stack;
        37: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        40: astore        4
        42: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
        45: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
        48: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        51: astore        5
        53: getstatic     #404                // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        56: invokevirtual #453                // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        59: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        62: astore        6
        64: getstatic     #404                // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        67: invokevirtual #453                // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        70: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        73: astore        7
        75: getstatic     #404                // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
        78: invokevirtual #453                // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
        81: aload_0
        82: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        85: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        88: invokevirtual #407                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        91: invokedynamic #466,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        96: invokevirtual #359                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        99: invokevirtual #467                // Method org/sireum/HashSMap.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
       102: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       105: astore        8
       107: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       110: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
       113: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       116: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       119: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       122: astore        9
       124: aload_1
       125: aload_0
       126: aload         9
       128: invokedynamic #477,  0            // InvokeDynamic #6:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;)Lscala/Function1;
       133: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       136: aload         9
       138: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       141: checkcast     #355                // class org/sireum/IS
       144: aload_0
       145: aload         5
       147: aload         4
       149: aload         7
       151: aload         8
       153: aload         6
       155: aload_2
       156: aload_3
       157: invokedynamic #485,  0            // InvokeDynamic #7:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
       162: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       165: aload_2
       166: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       169: checkcast     #355                // class org/sireum/IS
       172: areturn
      LineNumberTable:
        line 134: 0
        line 135: 5
        line 136: 21
        line 137: 31
        line 138: 42
        line 139: 53
        line 140: 64
        line 141: 75
        line 239: 107
        line 240: 124
        line 254: 136
        line 258: 165
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     168     1  sccs   Lorg/sireum/IS;
           21     152     2 loops   Lscala/runtime/ObjectRef;
           31     142     3 bSets   Lscala/runtime/ObjectRef;
           42     131     4 stack   Lscala/runtime/ObjectRef;
           53     120     5 marked   Lscala/runtime/ObjectRef;
           64     109     6 removed   Lscala/runtime/ObjectRef;
           75      98     7 position   Lscala/runtime/ObjectRef;
          107      66     8 reach   Lscala/runtime/ObjectRef;
          124      49     9 startNodes   Lscala/runtime/ObjectRef;
            0     173     0  this   Lorg/sireum/ops/GraphOps;
    Signature: #449                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/IS<Lorg/sireum/Z;TW;>;>;

  public org.sireum.IS<org.sireum.Z, W> forwardReach(org.sireum.IS<org.sireum.Z, W>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #502                // Method org/sireum/package$.T:()Z
         8: invokevirtual #506                // Method reachable:(Lorg/sireum/IS;Z)Lorg/sireum/IS;
        11: astore_2
        12: aload_2
        13: areturn
      LineNumberTable:
        line 262: 0
        line 263: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     2     r   Lorg/sireum/IS;
            0      14     0  this   Lorg/sireum/ops/GraphOps;
            0      14     1 criteria   Lorg/sireum/IS;
    Signature: #498                         // (Lorg/sireum/IS<Lorg/sireum/Z;TW;>;)Lorg/sireum/IS<Lorg/sireum/Z;TW;>;
    MethodParameters:
      Name                           Flags
      criteria                       final

  public org.sireum.IS<org.sireum.Z, W> backwardReach(org.sireum.IS<org.sireum.Z, W>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         5: invokevirtual #511                // Method org/sireum/package$.F:()Z
         8: invokevirtual #506                // Method reachable:(Lorg/sireum/IS;Z)Lorg/sireum/IS;
        11: astore_2
        12: aload_2
        13: areturn
      LineNumberTable:
        line 267: 0
        line 268: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     2     r   Lorg/sireum/IS;
            0      14     0  this   Lorg/sireum/ops/GraphOps;
            0      14     1 criteria   Lorg/sireum/IS;
    Signature: #498                         // (Lorg/sireum/IS<Lorg/sireum/Z;TW;>;)Lorg/sireum/IS<Lorg/sireum/Z;TW;>;
    MethodParameters:
      Name                           Flags
      criteria                       final

  public org.sireum.IS<org.sireum.Z, W> reachable(org.sireum.IS<org.sireum.Z, W>, boolean);
    descriptor: (Lorg/sireum/IS;Z)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=3
         0: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: astore_3
        13: aload_3
        14: aload_1
        15: invokevirtual #515                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        18: astore_3
        19: getstatic     #520                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
        22: invokevirtual #523                // Method org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
        25: astore        4
        27: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        30: aload_3
        31: invokevirtual #524                // Method org/sireum/IS.nonEmpty:()Z
        34: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        37: ifeq          137
        40: getstatic     #529                // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
        43: aload_3
        44: invokevirtual #532                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
        47: invokevirtual #537                // Method org/sireum/ops/ISZOps.first:()Ljava/lang/Object;
        50: astore        5
        52: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        55: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        58: aload         4
        60: aload         5
        62: invokevirtual #542                // Method org/sireum/HashSSet.contains:(Ljava/lang/Object;)Z
        65: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        68: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        71: ifeq          123
        74: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        77: iload_2
        78: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        81: ifeq          93
        84: aload_0
        85: aload         5
        87: invokevirtual #547                // Method getAllSuccessor:(Ljava/lang/Object;)Lorg/sireum/Set;
        90: goto          99
        93: aload_0
        94: aload         5
        96: invokevirtual #549                // Method getAllPredecessor:(Ljava/lang/Object;)Lorg/sireum/Set;
        99: astore        6
       101: aload_3
       102: aload         6
       104: invokevirtual #550                // Method org/sireum/Set.elements:()Lorg/sireum/IS;
       107: invokevirtual #515                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
       110: astore_3
       111: aload         4
       113: aload         5
       115: invokevirtual #554                // Method org/sireum/HashSSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
       118: astore        4
       120: goto          123
       123: getstatic     #529                // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
       126: aload_3
       127: invokevirtual #532                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
       130: invokevirtual #557                // Method org/sireum/ops/ISZOps.tail:()Lorg/sireum/IS;
       133: astore_3
       134: goto          27
       137: aload         4
       139: invokevirtual #558                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
       142: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 27
          locals = [ class org/sireum/IS, class org/sireum/HashSSet ]
        frame_type = 252 /* append */
          offset_delta = 65
          locals = [ class java/lang/Object ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Set ]
        frame_type = 23 /* same */
        frame_type = 250 /* chop */
          offset_delta = 13
      LineNumberTable:
        line 272: 0
        line 273: 13
        line 274: 19
        line 276: 27
        line 277: 40
        line 278: 52
        line 280: 74
        line 281: 84
        line 282: 93
        line 283: 101
        line 284: 111
        line 286: 123
        line 276: 134
        line 288: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          101      19     6  next   Lorg/sireum/Set;
           52      82     5 current   Ljava/lang/Object;
           13     130     3 workList   Lorg/sireum/IS;
           27     116     4 result   Lorg/sireum/HashSSet;
            0     143     0  this   Lorg/sireum/ops/GraphOps;
            0     143     1 criteria   Lorg/sireum/IS;
            0     143     2 isForward   Z
    Signature: #512                         // (Lorg/sireum/IS<Lorg/sireum/Z;TW;>;Z)Lorg/sireum/IS<Lorg/sireum/Z;TW;>;
    MethodParameters:
      Name                           Flags
      criteria                       final
      isForward                      final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #566                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ops/GraphOps;

  public static final java.lang.Object $anonfun$getAllSuccessor$1(org.sireum.ops.GraphOps, org.sireum.Graph$Internal$Edge);
    descriptor: (Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
         4: invokevirtual #571                // Method org/sireum/Graph.nodesInverse:()Lorg/sireum/IS;
         7: aload_1
         8: invokeinterface #574,  1          // InterfaceMethod org/sireum/Graph$Internal$Edge.dest:()Lorg/sireum/Z;
        13: invokevirtual #576                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        16: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 $this   Lorg/sireum/ops/GraphOps;
            0      17     1    es   Lorg/sireum/Graph$Internal$Edge;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      es                             final

  public static final java.lang.Object $anonfun$getAllPredecessor$1(org.sireum.ops.GraphOps, org.sireum.Graph$Internal$Edge);
    descriptor: (Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
         4: invokevirtual #571                // Method org/sireum/Graph.nodesInverse:()Lorg/sireum/IS;
         7: aload_1
         8: invokeinterface #580,  1          // InterfaceMethod org/sireum/Graph$Internal$Edge.source:()Lorg/sireum/Z;
        13: invokevirtual #576                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        16: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 $this   Lorg/sireum/ops/GraphOps;
            0      17     1    es   Lorg/sireum/Graph$Internal$Edge;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      es                             final

  public static final scala.Tuple2 $anonfun$getSCC$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=9, locals=1, args_size=1
         0: new           #217                // class scala/Tuple2
         3: dup
         4: aload_0
         5: new           #217                // class scala/Tuple2
         8: dup
         9: new           #582                // class org/sireum/B
        12: dup
        13: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        16: invokevirtual #511                // Method org/sireum/package$.F:()Z
        19: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        22: new           #582                // class org/sireum/B
        25: dup
        26: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        29: invokevirtual #511                // Method org/sireum/package$.F:()Z
        32: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        35: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        38: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        41: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0     v   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v                              final

  public static final scala.Tuple2 $anonfun$getSCC$2(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=9, locals=1, args_size=1
         0: new           #217                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: new           #217                // class scala/Tuple2
        11: dup
        12: new           #582                // class org/sireum/B
        15: dup
        16: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        19: invokevirtual #511                // Method org/sireum/package$.F:()Z
        22: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        25: new           #582                // class org/sireum/B
        28: dup
        29: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        32: invokevirtual #511                // Method org/sireum/package$.F:()Z
        35: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        38: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        41: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        44: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      e                              final

  private static final void resetDiscoveryMap$1(scala.runtime.ObjectRef);
    descriptor: (Lscala/runtime/ObjectRef;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getstatic     #404                // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         4: aload_0
         5: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         8: checkcast     #306                // class org/sireum/HashSMap
        11: invokevirtual #595                // Method org/sireum/HashSMap.entries:()Lorg/sireum/IS;
        14: invokedynamic #600,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
        19: invokevirtual #359                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        22: invokevirtual #419                // Method org/sireum/HashSMap$.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSMap;
        25: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        28: return
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0 discoveryMap$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final

  public static final boolean $anonfun$getSCC$3(scala.runtime.ObjectRef, java.lang.Object, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=3, args_size=3
         0: aload_0
         1: aload_0
         2: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #306                // class org/sireum/HashSMap
         8: new           #217                // class scala/Tuple2
        11: dup
        12: aload_1
        13: new           #217                // class scala/Tuple2
        16: dup
        17: new           #582                // class org/sireum/B
        20: dup
        21: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: invokevirtual #502                // Method org/sireum/package$.T:()Z
        27: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        30: new           #582                // class org/sireum/B
        33: dup
        34: aload_2
        35: invokevirtual #607                // Method scala/Tuple2._2:()Ljava/lang/Object;
        38: checkcast     #582                // class org/sireum/B
        41: invokevirtual #610                // Method org/sireum/B.value:()Z
        44: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        47: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        50: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        53: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        56: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        59: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        62: invokevirtual #502                // Method org/sireum/package$.T:()Z
        65: ireturn
      LineNumberTable:
        line 71: 0
        line 72: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      66     1   v$1   Ljava/lang/Object;
            0      66     2    cf   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      v$1                            final
      cf                             final

  private static final boolean setDiscovered$1(java.lang.Object, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #306                // class org/sireum/HashSMap
         7: aload_0
         8: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        11: aload_1
        12: aload_0
        13: invokedynamic #625,  0            // InvokeDynamic #9:apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lscala/Function1;
        18: invokeinterface #629,  2          // InterfaceMethod org/sireum/Option.exists:(Lscala/Function1;)Z
        23: ireturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0     v   Ljava/lang/Object;
            0      24     1 discoveryMap$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      v                              final
      discoveryMap$1                 final

  private static final void setBoth$1(java.lang.Object, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;Lscala/runtime/ObjectRef;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=11, locals=2, args_size=2
         0: aload_1
         1: aload_1
         2: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #306                // class org/sireum/HashSMap
         8: new           #217                // class scala/Tuple2
        11: dup
        12: aload_0
        13: new           #217                // class scala/Tuple2
        16: dup
        17: new           #582                // class org/sireum/B
        20: dup
        21: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: invokevirtual #502                // Method org/sireum/package$.T:()Z
        27: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        30: new           #582                // class org/sireum/B
        33: dup
        34: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        37: invokevirtual #502                // Method org/sireum/package$.T:()Z
        40: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        43: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        46: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        49: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        52: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        55: return
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0     v   Ljava/lang/Object;
            0      56     1 discoveryMap$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      v                              final
      discoveryMap$1                 final

  public static final boolean $anonfun$getSCC$5(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #582                // class org/sireum/B
         7: invokevirtual #610                // Method org/sireum/B.value:()Z
        10: ireturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      e                              final

  public static final org.sireum.IS $anonfun$getSCC$4(scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #306                // class org/sireum/HashSMap
         7: aload_1
         8: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        11: invokeinterface #639,  1          // InterfaceMethod org/sireum/Option.toIS:()Lorg/sireum/IS;
        16: invokedynamic #644,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
        21: invokevirtual #359                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
        24: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      25     1     s   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      s                              final

  public static final boolean $anonfun$getSCC$6(boolean, boolean);
    descriptor: (ZZ)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_0
         4: iload_1
         5: invokevirtual #651                // Method org/sireum/B$.$amp$extension:(ZZ)Z
         8: ireturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     c   Z
            0       9     1     n   Z
    MethodParameters:
      Name                           Flags
      c                              final
      n                              final

  private final boolean isAllMySuccDiscovered$1(java.lang.Object, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #529                // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
         3: aload_0
         4: aload_1
         5: invokevirtual #547                // Method getAllSuccessor:(Ljava/lang/Object;)Lorg/sireum/Set;
         8: invokevirtual #550                // Method org/sireum/Set.elements:()Lorg/sireum/IS;
        11: aload_2
        12: invokedynamic #660,  0            // InvokeDynamic #11:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        17: invokevirtual #663                // Method org/sireum/IS.flatMap:(Lscala/Function1;)Lorg/sireum/IS;
        20: invokevirtual #532                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
        23: invokedynamic #672,  0            // InvokeDynamic #12:apply:()Lscala/Function2;
        28: new           #582                // class org/sireum/B
        31: dup
        32: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        35: invokevirtual #502                // Method org/sireum/package$.T:()Z
        38: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        41: invokevirtual #676                // Method org/sireum/ops/ISZOps.foldLeft:(Lscala/Function2;Ljava/lang/Object;)Ljava/lang/Object;
        44: checkcast     #582                // class org/sireum/B
        47: invokevirtual #610                // Method org/sireum/B.value:()Z
        50: ireturn
      LineNumberTable:
        line 81: 0
        line 82: 23
        line 81: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lorg/sireum/ops/GraphOps;
            0      51     1     v   Ljava/lang/Object;
            0      51     2 discoveryMap$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      v                              final
      discoveryMap$1                 final

  public static final boolean $anonfun$getSCC$7(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         7: checkcast     #306                // class org/sireum/HashSMap
        10: aload_1
        11: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
        14: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        17: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        22: checkcast     #217                // class scala/Tuple2
        25: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
        28: checkcast     #582                // class org/sireum/B
        31: invokevirtual #610                // Method org/sireum/B.value:()Z
        34: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        37: ireturn
      LineNumberTable:
        line 94: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      38     1 current$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      current$1                      final

  public static final void $anonfun$getSCC$8(scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_0
         7: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        10: checkcast     #306                // class org/sireum/HashSMap
        13: aload_2
        14: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        17: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        22: checkcast     #217                // class scala/Tuple2
        25: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
        28: checkcast     #582                // class org/sireum/B
        31: invokevirtual #610                // Method org/sireum/B.value:()Z
        34: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        37: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        40: ifeq          61
        43: aload_1
        44: aload_1
        45: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        48: checkcast     #684                // class org/sireum/Stack
        51: aload_2
        52: invokevirtual #688                // Method org/sireum/Stack.push:(Ljava/lang/Object;)Lorg/sireum/Stack;
        55: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        58: goto          61
        61: return
      StackMapTable: number_of_entries = 1
        frame_type = 61 /* same */
      LineNumberTable:
        line 105: 0
        line 106: 43
        line 105: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      62     1 stack$1   Lscala/runtime/ObjectRef;
            0      62     2     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      stack$1                        final
      n                              final

  public static final boolean $anonfun$getSCC$9(boolean);
    descriptor: (Z)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: iload_0
         1: ireturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 isFirst$1   Z
    MethodParameters:
      Name                           Flags
      isFirst$1                      final

  private final org.sireum.IS dfs$1(java.lang.Object, boolean, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;ZLscala/runtime/ObjectRef;)Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=10, args_size=4
         0: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
         6: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         9: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        12: astore        4
        14: getstatic     #458                // Field org/sireum/Stack$.MODULE$:Lorg/sireum/Stack$;
        17: invokevirtual #461                // Method org/sireum/Stack$.empty:()Lorg/sireum/Stack;
        20: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        23: astore        5
        25: aload         5
        27: aload         5
        29: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        32: checkcast     #684                // class org/sireum/Stack
        35: aload_1
        36: invokevirtual #688                // Method org/sireum/Stack.push:(Ljava/lang/Object;)Lorg/sireum/Stack;
        39: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        42: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        45: aload         5
        47: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        50: checkcast     #684                // class org/sireum/Stack
        53: invokevirtual #694                // Method org/sireum/Stack.nonEmpty:()Z
        56: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        59: ifeq          368
        62: aload         5
        64: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        67: checkcast     #684                // class org/sireum/Stack
        70: invokevirtual #698                // Method org/sireum/Stack.pop:()Lorg/sireum/Option;
        73: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        78: checkcast     #217                // class scala/Tuple2
        81: astore        7
        83: new           #217                // class scala/Tuple2
        86: dup
        87: getstatic     #703                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        90: aload         7
        92: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
        95: invokevirtual #706                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
        98: getstatic     #703                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
       101: aload         7
       103: invokevirtual #607                // Method scala/Tuple2._2:()Ljava/lang/Object;
       106: invokevirtual #706                // Method org/sireum/helper$.assign:(Ljava/lang/Object;)Ljava/lang/Object;
       109: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       112: astore        6
       114: aload         5
       116: aload         6
       118: invokevirtual #607                // Method scala/Tuple2._2:()Ljava/lang/Object;
       121: checkcast     #684                // class org/sireum/Stack
       124: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       127: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       130: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       133: aload_3
       134: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       137: checkcast     #306                // class org/sireum/HashSMap
       140: aload         6
       142: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       145: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       148: invokeinterface #315,  1          // InterfaceMethod org/sireum/Option.nonEmpty:()Z
       153: aload_3
       154: aload         6
       156: invokedynamic #715,  0            // InvokeDynamic #13:apply:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Lscala/Function0;
       161: invokevirtual #719                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       164: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       167: ifeq          293
       170: aload         6
       172: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       175: aload_3
       176: invokestatic  #721                // Method setDiscovered$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
       179: pop
       180: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       183: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       186: iload_2
       187: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
       190: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       193: ifeq          211
       196: aload         4
       198: aload         6
       200: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       203: invokevirtual #724                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       206: astore        4
       208: goto          211
       211: aload         6
       213: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       216: aload_3
       217: invokestatic  #726                // Method setBoth$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;)V
       220: aload         5
       222: aload         5
       224: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       227: checkcast     #684                // class org/sireum/Stack
       230: aload         6
       232: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       235: invokevirtual #688                // Method org/sireum/Stack.push:(Ljava/lang/Object;)Lorg/sireum/Stack;
       238: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       241: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       244: iload_2
       245: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       248: ifeq          263
       251: aload_0
       252: aload         6
       254: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       257: invokevirtual #547                // Method getAllSuccessor:(Ljava/lang/Object;)Lorg/sireum/Set;
       260: goto          272
       263: aload_0
       264: aload         6
       266: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       269: invokevirtual #549                // Method getAllPredecessor:(Ljava/lang/Object;)Lorg/sireum/Set;
       272: astore        8
       274: aload         8
       276: invokevirtual #550                // Method org/sireum/Set.elements:()Lorg/sireum/IS;
       279: aload_3
       280: aload         5
       282: invokedynamic #734,  0            // InvokeDynamic #14:apply:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
       287: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       290: goto          365
       293: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       296: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       299: aload_3
       300: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       303: checkcast     #306                // class org/sireum/HashSMap
       306: aload         6
       308: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       311: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       314: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       319: checkcast     #217                // class scala/Tuple2
       322: invokevirtual #607                // Method scala/Tuple2._2:()Ljava/lang/Object;
       325: checkcast     #582                // class org/sireum/B
       328: invokevirtual #610                // Method org/sireum/B.value:()Z
       331: iload_2
       332: invokedynamic #742,  0            // InvokeDynamic #15:apply:(Z)Lscala/Function0;
       337: invokevirtual #719                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       340: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       343: ifeq          365
       346: aload         6
       348: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
       351: astore        9
       353: aload         4
       355: aload         9
       357: invokevirtual #745                // Method org/sireum/IS.$plus$colon:(Ljava/lang/Object;)Lorg/sireum/IS;
       360: astore        4
       362: goto          365
       365: goto          42
       368: aload         4
       370: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 42
          locals = [ class org/sireum/IS, class scala/runtime/ObjectRef ]
        frame_type = 253 /* append */
          offset_delta = 168
          locals = [ class scala/Tuple2, class scala/Tuple2 ]
        frame_type = 51 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Set ]
        frame_type = 20 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 71
        frame_type = 249 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 86: 0
        line 87: 14
        line 88: 25
        line 90: 42
        line 91: 62
        line 92: 114
        line 94: 127
        line 93: 133
        line 94: 153
        line 95: 170
        line 96: 180
        line 97: 196
        line 99: 211
        line 100: 220
        line 102: 241
        line 104: 274
        line 110: 293
        line 111: 346
        line 90: 365
        line 114: 368
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           83      29     7     x   Lscala/Tuple2;
          274      16     8 nexts   Lorg/sireum/Set;
          114     251     6 current   Lscala/Tuple2;
           14     357     4     r   Lorg/sireum/IS;
           25     346     5 stack   Lscala/runtime/ObjectRef;
            0     371     0  this   Lorg/sireum/ops/GraphOps;
            0     371     1     v   Ljava/lang/Object;
            0     371     2 isFirst   Z
            0     371     3 discoveryMap$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      v                              final
      isFirst                        final
      discoveryMap$1                 final

  public static final void $anonfun$getSCC$10(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_1
         7: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        10: checkcast     #306                // class org/sireum/HashSMap
        13: aload_3
        14: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        17: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        22: checkcast     #217                // class scala/Tuple2
        25: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
        28: checkcast     #582                // class org/sireum/B
        31: invokevirtual #610                // Method org/sireum/B.value:()Z
        34: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        37: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        40: ifeq          72
        43: aload_2
        44: aload_0
        45: aload_3
        46: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        49: invokevirtual #502                // Method org/sireum/package$.T:()Z
        52: aload_1
        53: invokespecial #753                // Method dfs$1:(Ljava/lang/Object;ZLscala/runtime/ObjectRef;)Lorg/sireum/IS;
        56: aload_2
        57: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        60: checkcast     #355                // class org/sireum/IS
        63: invokevirtual #515                // Method org/sireum/IS.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/IS;
        66: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        69: goto          72
        72: return
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 72
      LineNumberTable:
        line 120: 0
        line 121: 43
        line 120: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0 $this   Lorg/sireum/ops/GraphOps;
            0      73     1 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      73     2 orderedNodes$1   Lscala/runtime/ObjectRef;
            0      73     3     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      discoveryMap$1                 final
      orderedNodes$1                 final
      k                              final

  public static final void $anonfun$getSCC$11(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=4, args_size=4
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_1
         7: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        10: checkcast     #306                // class org/sireum/HashSMap
        13: aload_3
        14: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        17: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        22: checkcast     #217                // class scala/Tuple2
        25: invokevirtual #590                // Method scala/Tuple2._1:()Ljava/lang/Object;
        28: checkcast     #582                // class org/sireum/B
        31: invokevirtual #610                // Method org/sireum/B.value:()Z
        34: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        37: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        40: ifeq          81
        43: aload_2
        44: aload_2
        45: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        48: checkcast     #355                // class org/sireum/IS
        51: getstatic     #520                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
        54: invokevirtual #523                // Method org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
        57: aload_0
        58: aload_3
        59: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        62: invokevirtual #511                // Method org/sireum/package$.F:()Z
        65: aload_1
        66: invokespecial #753                // Method dfs$1:(Ljava/lang/Object;ZLscala/runtime/ObjectRef;)Lorg/sireum/IS;
        69: invokevirtual #758                // Method org/sireum/HashSSet.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashSSet;
        72: invokevirtual #724                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        75: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        78: goto          81
        81: return
      StackMapTable: number_of_entries = 1
        frame_type = 251 /* same_frame_extended */
          offset_delta = 81
      LineNumberTable:
        line 126: 0
        line 127: 43
        line 126: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      82     0 $this   Lorg/sireum/ops/GraphOps;
            0      82     1 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      82     2 result$1   Lscala/runtime/ObjectRef;
            0      82     3     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      discoveryMap$1                 final
      result$1                       final
      k                              final

  public static final scala.Tuple2 $anonfun$getCycles$1(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: new           #217                // class scala/Tuple2
         3: dup
         4: aload_0
         5: new           #582                // class org/sireum/B
         8: dup
         9: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        12: invokevirtual #511                // Method org/sireum/package$.F:()Z
        15: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        18: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        21: areturn
      LineNumberTable:
        line 141: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      k                              final

  public static final boolean $anonfun$getCycles$3(scala.runtime.ObjectRef, java.lang.Object, scala.runtime.ObjectRef);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #306                // class org/sireum/HashSMap
         7: aload_1
         8: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        11: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        16: checkcast     #765                // class org/sireum/Z
        19: aload_2
        20: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        23: checkcast     #765                // class org/sireum/Z
        26: invokeinterface #769,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        31: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0 position$1   Lscala/runtime/ObjectRef;
            0      32     1  wV$1   Ljava/lang/Object;
            0      32     2   q$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      position$1                     final
      wV$1                           final
      q$1                            final

  public static final boolean $anonfun$getCycles$4(scala.runtime.BooleanRef);
    descriptor: (Lscala/runtime/BooleanRef;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #776                // Field scala/runtime/BooleanRef.elem:Z
         4: ireturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 break$1   Lscala/runtime/BooleanRef;
    MethodParameters:
      Name                           Flags
      break$1                        final

  public static final boolean $anonfun$getCycles$5(scala.runtime.BooleanRef);
    descriptor: (Lscala/runtime/BooleanRef;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #776                // Field scala/runtime/BooleanRef.elem:Z
         4: ireturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 break$1   Lscala/runtime/BooleanRef;
    MethodParameters:
      Name                           Flags
      break$1                        final

  public static final void $anonfun$getCycles$2(org.sireum.ops.GraphOps, org.sireum.Set, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.BooleanRef, java.lang.Object, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=10, locals=19, args_size=13
         0: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_1
         7: aload         12
         9: invokevirtual #791                // Method org/sireum/Set.contains:(Ljava/lang/Object;)Z
        12: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        15: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        18: ifeq          470
        21: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        24: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        27: aload_2
        28: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: checkcast     #361                // class org/sireum/Set
        34: aload         12
        36: invokevirtual #791                // Method org/sireum/Set.contains:(Ljava/lang/Object;)Z
        39: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        42: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        45: ifeq          115
        48: aload_0
        49: aload         12
        51: aload_3
        52: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        55: checkcast     #765                // class org/sireum/Z
        58: aload_2
        59: aload         7
        61: aload         6
        63: aload         9
        65: aload         10
        67: aload         8
        69: aload         11
        71: invokespecial #795                // Method cycle$1:(Ljava/lang/Object;Lorg/sireum/Z;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
        74: istore        13
        76: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        79: iload         13
        81: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        84: ifeq          101
        87: aload         4
        89: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        92: invokevirtual #502                // Method org/sireum/package$.T:()Z
        95: putfield      #776                // Field scala/runtime/BooleanRef.elem:Z
        98: goto          112
       101: aload         5
       103: aload         12
       105: aload         11
       107: aload         10
       109: invokestatic  #799                // Method noCycle$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
       112: goto          467
       115: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       118: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       121: aload         6
       123: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       126: checkcast     #306                // class org/sireum/HashSMap
       129: aload         12
       131: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       134: invokeinterface #315,  1          // InterfaceMethod org/sireum/Option.nonEmpty:()Z
       139: aload         6
       141: aload         12
       143: aload_3
       144: invokedynamic #807,  0            // InvokeDynamic #16:apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Lscala/Function0;
       149: invokevirtual #719                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       152: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       155: ifeq          456
       158: aload         4
       160: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       163: invokevirtual #502                // Method org/sireum/package$.T:()Z
       166: putfield      #776                // Field scala/runtime/BooleanRef.elem:Z
       169: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       172: invokevirtual #385                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
       175: getstatic     #390                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       178: invokevirtual #393                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
       181: astore        14
       183: aload         7
       185: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       188: checkcast     #684                // class org/sireum/Stack
       191: invokevirtual #808                // Method org/sireum/Stack.elements:()Lorg/sireum/IS;
       194: astore        15
       196: aload         7
       198: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       201: checkcast     #684                // class org/sireum/Stack
       204: invokevirtual #811                // Method org/sireum/Stack.peek:()Lorg/sireum/Option;
       207: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       212: astore        16
       214: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       217: invokevirtual #502                // Method org/sireum/package$.T:()Z
       220: invokestatic  #814                // Method scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
       223: astore        17
       225: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       228: iconst_0
       229: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       232: astore        18
       234: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       237: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       240: aload         18
       242: aload         15
       244: invokevirtual #825                // Method org/sireum/IS.size:()Lorg/sireum/Z;
       247: invokeinterface #828,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       252: aload         17
       254: invokedynamic #836,  0            // InvokeDynamic #17:apply:(Lscala/runtime/BooleanRef;)Lscala/Function0;
       259: invokevirtual #719                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       262: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       265: ifeq          320
       268: aload         15
       270: aload         18
       272: invokevirtual #576                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       275: astore        16
       277: aload         12
       279: aload         16
       281: invokestatic  #841                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       284: ifeq          301
       287: aload         17
       289: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       292: invokevirtual #511                // Method org/sireum/package$.F:()Z
       295: putfield      #776                // Field scala/runtime/BooleanRef.elem:Z
       298: goto          301
       301: aload         18
       303: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       306: iconst_1
       307: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       310: invokeinterface #844,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       315: astore        18
       317: goto          234
       320: aload         14
       322: aload         12
       324: invokevirtual #724                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       327: astore        14
       329: aload         17
       331: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       334: invokevirtual #502                // Method org/sireum/package$.T:()Z
       337: putfield      #776                // Field scala/runtime/BooleanRef.elem:Z
       340: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       343: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       346: aload         18
       348: aload         15
       350: invokevirtual #825                // Method org/sireum/IS.size:()Lorg/sireum/Z;
       353: invokeinterface #828,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       358: aload         17
       360: invokedynamic #849,  0            // InvokeDynamic #18:apply:(Lscala/runtime/BooleanRef;)Lscala/Function0;
       365: invokevirtual #719                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
       368: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       371: ifeq          435
       374: aload         15
       376: aload         18
       378: invokevirtual #576                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       381: astore        16
       383: aload         14
       385: aload         16
       387: invokevirtual #724                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       390: astore        14
       392: aload         16
       394: aload         5
       396: invokestatic  #841                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       399: ifeq          416
       402: aload         17
       404: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       407: invokevirtual #511                // Method org/sireum/package$.F:()Z
       410: putfield      #776                // Field scala/runtime/BooleanRef.elem:Z
       413: goto          416
       416: aload         18
       418: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       421: iconst_1
       422: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       425: invokeinterface #844,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       430: astore        18
       432: goto          340
       435: aload         8
       437: aload         8
       439: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       442: checkcast     #355                // class org/sireum/IS
       445: aload         14
       447: invokevirtual #724                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       450: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       453: goto          467
       456: aload         5
       458: aload         12
       460: aload         11
       462: aload         10
       464: invokestatic  #799                // Method noCycle$1:(Ljava/lang/Object;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
       467: goto          470
       470: return
      StackMapTable: number_of_entries = 12
        frame_type = 252 /* append */
          offset_delta = 101
          locals = [ int ]
        frame_type = 10 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 118
          locals = [ class org/sireum/ops/GraphOps, class org/sireum/Set, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/BooleanRef, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/Object, top, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, class scala/runtime/BooleanRef, class org/sireum/Z ]
          stack = []
        frame_type = 251 /* same_frame_extended */
          offset_delta = 66
        frame_type = 18 /* same */
        frame_type = 19 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 75
        frame_type = 18 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class org/sireum/ops/GraphOps, class org/sireum/Set, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/BooleanRef, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/Object ]
          stack = []
        frame_type = 10 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 159: 0
        line 160: 21
        line 161: 48
        line 162: 76
        line 163: 87
        line 165: 101
        line 167: 115
        line 168: 158
        line 169: 169
        line 170: 183
        line 171: 196
        line 172: 214
        line 173: 225
        line 174: 234
        line 175: 268
        line 176: 277
        line 177: 287
        line 179: 301
        line 174: 317
        line 181: 320
        line 182: 329
        line 183: 340
        line 184: 374
        line 185: 383
        line 186: 392
        line 187: 402
        line 189: 416
        line 183: 432
        line 191: 435
        line 193: 456
        line 159: 470
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           76      36    13 gotCycle   Z
          183     270    14 cycle   Lorg/sireum/IS;
          196     257    15 elements   Lorg/sireum/IS;
          214     239    16 current   Ljava/lang/Object;
          225     228    17 break   Lscala/runtime/BooleanRef;
          234     219    18     i   Lorg/sireum/Z;
            0     471     0 $this   Lorg/sireum/ops/GraphOps;
            0     471     1 avRemoved$1   Lorg/sireum/Set;
            0     471     2 marked$1   Lscala/runtime/ObjectRef;
            0     471     3   q$1   Lscala/runtime/ObjectRef;
            0     471     4 foundCycle$1   Lscala/runtime/BooleanRef;
            0     471     5   v$2   Ljava/lang/Object;
            0     471     6 position$1   Lscala/runtime/ObjectRef;
            0     471     7 stack$2   Lscala/runtime/ObjectRef;
            0     471     8 loops$1   Lscala/runtime/ObjectRef;
            0     471     9 reach$1   Lscala/runtime/ObjectRef;
            0     471    10 removed$1   Lscala/runtime/ObjectRef;
            0     471    11 bSets$1   Lscala/runtime/ObjectRef;
            0     471    12    wV   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      avRemoved$1                    final
      marked$1                       final
      q$1                            final
      foundCycle$1                   final
      v$2                            final
      position$1                     final
      stack$2                        final
      loops$1                        final
      reach$1                        final
      removed$1                      final
      bSets$1                        final
      wV                             final

  private final boolean cycle$1(java.lang.Object, org.sireum.Z, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;Lorg/sireum/Z;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=13, locals=19, args_size=10
         0: aload_2
         1: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore        11
         6: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         9: invokevirtual #511                // Method org/sireum/package$.F:()Z
        12: invokestatic  #814                // Method scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
        15: astore        12
        17: aload_3
        18: aload_3
        19: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        22: checkcast     #361                // class org/sireum/Set
        25: aload_1
        26: invokevirtual #857                // Method org/sireum/Set.$plus:(Ljava/lang/Object;)Lorg/sireum/Set;
        29: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        32: aload         4
        34: aload         4
        36: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        39: checkcast     #684                // class org/sireum/Stack
        42: aload_1
        43: invokevirtual #688                // Method org/sireum/Stack.push:(Ljava/lang/Object;)Lorg/sireum/Stack;
        46: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        49: aload         4
        51: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        54: checkcast     #684                // class org/sireum/Stack
        57: invokevirtual #858                // Method org/sireum/Stack.size:()Lorg/sireum/Z;
        60: astore        13
        62: aload         5
        64: aload         5
        66: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        69: checkcast     #306                // class org/sireum/HashSMap
        72: new           #217                // class scala/Tuple2
        75: dup
        76: aload_1
        77: aload         13
        79: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        85: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        88: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        91: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        94: aload         6
        96: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        99: checkcast     #306                // class org/sireum/HashSMap
       102: aload_1
       103: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       106: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       111: checkcast     #582                // class org/sireum/B
       114: invokevirtual #610                // Method org/sireum/B.value:()Z
       117: invokevirtual #545                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
       120: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       123: ifeq          136
       126: aload         11
       128: aload         13
       130: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       133: goto          136
       136: aload         7
       138: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       141: checkcast     #306                // class org/sireum/HashSMap
       144: aload_1
       145: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       148: astore        15
       150: aload         15
       152: instanceof    #860                // class org/sireum/Some
       155: ifeq          203
       158: aload         15
       160: checkcast     #860                // class org/sireum/Some
       163: astore        16
       165: getstatic     #275                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       168: aload         16
       170: invokevirtual #863                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       173: astore        17
       175: aload         17
       177: invokevirtual #261                // Method scala/Some.isEmpty:()Z
       180: ifne          200
       183: aload         17
       185: invokevirtual #265                // Method scala/Some.get:()Ljava/lang/Object;
       188: checkcast     #361                // class org/sireum/Set
       191: astore        18
       193: aload         18
       195: astore        10
       197: goto          217
       200: goto          206
       203: goto          206
       206: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
       209: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
       212: astore        10
       214: goto          217
       217: aload         10
       219: astore        14
       221: aload_0
       222: aload_1
       223: invokevirtual #547                // Method getAllSuccessor:(Ljava/lang/Object;)Lorg/sireum/Set;
       226: invokevirtual #550                // Method org/sireum/Set.elements:()Lorg/sireum/IS;
       229: aload_0
       230: aload         14
       232: aload_3
       233: aload         11
       235: aload         12
       237: aload_1
       238: aload         5
       240: aload         4
       242: aload         8
       244: aload         6
       246: aload         7
       248: aload         9
       250: invokedynamic #871,  0            // InvokeDynamic #19:apply:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
       255: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       258: aload         4
       260: aload         4
       262: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       265: checkcast     #684                // class org/sireum/Stack
       268: invokevirtual #698                // Method org/sireum/Stack.pop:()Lorg/sireum/Option;
       271: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
       276: checkcast     #217                // class scala/Tuple2
       279: invokevirtual #607                // Method scala/Tuple2._2:()Ljava/lang/Object;
       282: checkcast     #684                // class org/sireum/Stack
       285: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       288: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       291: aload         12
       293: getfield      #776                // Field scala/runtime/BooleanRef.elem:Z
       296: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       299: ifeq          314
       302: aload_1
       303: aload_3
       304: aload         9
       306: aload         7
       308: invokestatic  #875                // Method unmark$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
       311: goto          314
       314: aload         6
       316: aload         6
       318: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       321: checkcast     #306                // class org/sireum/HashSMap
       324: new           #217                // class scala/Tuple2
       327: dup
       328: aload_1
       329: new           #582                // class org/sireum/B
       332: dup
       333: getstatic     #381                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       336: invokevirtual #502                // Method org/sireum/package$.T:()Z
       339: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
       342: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       345: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       348: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       351: aload         5
       353: aload         5
       355: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       358: checkcast     #306                // class org/sireum/HashSMap
       361: new           #217                // class scala/Tuple2
       364: dup
       365: aload_1
       366: aload_0
       367: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
       370: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
       373: invokevirtual #876                // Method org/sireum/HashSMap.size:()Lorg/sireum/Z;
       376: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       379: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       382: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       385: aload         12
       387: getfield      #776                // Field scala/runtime/BooleanRef.elem:Z
       390: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 136
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, class org/sireum/Z, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, top, class scala/runtime/ObjectRef, class scala/runtime/BooleanRef, class org/sireum/Z ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 63
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, class org/sireum/Z, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, top, class scala/runtime/ObjectRef, class scala/runtime/BooleanRef, class org/sireum/Z, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, class org/sireum/Z, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class org/sireum/Set, class scala/runtime/ObjectRef, class scala/runtime/BooleanRef, class org/sireum/Z, top, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 96
          locals = [ class org/sireum/ops/GraphOps, class java/lang/Object, class org/sireum/Z, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class org/sireum/Set, class scala/runtime/ObjectRef, class scala/runtime/BooleanRef, class org/sireum/Z, class org/sireum/Set, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 144: 0
        line 145: 6
        line 146: 17
        line 147: 32
        line 148: 49
        line 149: 62
        line 150: 88
        line 151: 126
        line 153: 136
        line 154: 150
        line 153: 183
        line 154: 193
        line 155: 206
        line 153: 217
        line 158: 221
        line 197: 258
        line 198: 288
        line 199: 302
        line 201: 314
        line 202: 351
        line 203: 385
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          193       7    18     r   Lorg/sireum/Set;
            6     385    11     q   Lscala/runtime/ObjectRef;
           17     374    12 foundCycle   Lscala/runtime/BooleanRef;
           62     329    13     t   Lorg/sireum/Z;
          221     170    14 avRemoved   Lorg/sireum/Set;
            0     391     0  this   Lorg/sireum/ops/GraphOps;
            0     391     1     v   Ljava/lang/Object;
            0     391     2    tq   Lorg/sireum/Z;
            0     391     3 marked$1   Lscala/runtime/ObjectRef;
            0     391     4 stack$2   Lscala/runtime/ObjectRef;
            0     391     5 position$1   Lscala/runtime/ObjectRef;
            0     391     6 reach$1   Lscala/runtime/ObjectRef;
            0     391     7 removed$1   Lscala/runtime/ObjectRef;
            0     391     8 loops$1   Lscala/runtime/ObjectRef;
            0     391     9 bSets$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      v                              final
      tq                             final
      marked$1                       final
      stack$2                        final
      position$1                     final
      reach$1                        final
      removed$1                      final
      loops$1                        final
      bSets$1                        final

  public static final void $anonfun$getCycles$6(scala.runtime.ObjectRef, java.lang.Object, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=11, args_size=5
         0: aload_0
         1: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #306                // class org/sireum/HashSMap
         7: aload         4
         9: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        12: astore        7
        14: aload         7
        16: instanceof    #860                // class org/sireum/Some
        19: ifeq          71
        22: aload         7
        24: checkcast     #860                // class org/sireum/Some
        27: astore        8
        29: getstatic     #275                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        32: aload         8
        34: invokevirtual #863                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        37: astore        9
        39: aload         9
        41: invokevirtual #261                // Method scala/Some.isEmpty:()Z
        44: ifne          68
        47: aload         9
        49: invokevirtual #265                // Method scala/Some.get:()Ljava/lang/Object;
        52: checkcast     #361                // class org/sireum/Set
        55: astore        10
        57: aload         10
        59: aload_1
        60: invokevirtual #887                // Method org/sireum/Set.$minus:(Ljava/lang/Object;)Lorg/sireum/Set;
        63: astore        5
        65: goto          89
        68: goto          74
        71: goto          74
        74: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
        77: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
        80: aload_1
        81: invokevirtual #887                // Method org/sireum/Set.$minus:(Ljava/lang/Object;)Lorg/sireum/Set;
        84: astore        5
        86: goto          89
        89: aload         5
        91: astore        6
        93: aload_0
        94: aload_0
        95: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        98: checkcast     #306                // class org/sireum/HashSMap
       101: new           #217                // class scala/Tuple2
       104: dup
       105: aload         4
       107: aload         6
       109: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       112: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       115: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       118: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       121: aload_2
       122: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       125: checkcast     #361                // class org/sireum/Set
       128: aload         4
       130: invokevirtual #791                // Method org/sireum/Set.contains:(Ljava/lang/Object;)Z
       133: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
       136: ifeq          150
       139: aload         4
       141: aload_2
       142: aload_3
       143: aload_0
       144: invokestatic  #875                // Method unmark$1:(Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
       147: goto          150
       150: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 68
          locals = [ class scala/runtime/ObjectRef, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/Object, top, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class scala/runtime/ObjectRef, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/Object, class org/sireum/Set, top, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class scala/runtime/ObjectRef, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class java/lang/Object, class org/sireum/Set, class org/sireum/Set, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 214: 0
        line 215: 14
        line 214: 47
        line 215: 57
        line 216: 74
        line 214: 89
        line 218: 93
        line 219: 118
        line 220: 139
        line 219: 150
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           57      11    10    ry   Lorg/sireum/Set;
           93      57     6     t   Lorg/sireum/Set;
            0     151     0 removed$1   Lscala/runtime/ObjectRef;
            0     151     1   x$1   Ljava/lang/Object;
            0     151     2 marked$1   Lscala/runtime/ObjectRef;
            0     151     3 bSets$1   Lscala/runtime/ObjectRef;
            0     151     4     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      removed$1                      final
      x$1                            final
      marked$1                       final
      bSets$1                        final
      y                              final

  private static final void unmark$1(java.lang.Object, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=6, locals=10, args_size=4
         0: aload_1
         1: aload_1
         2: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #361                // class org/sireum/Set
         8: aload_0
         9: invokevirtual #887                // Method org/sireum/Set.$minus:(Ljava/lang/Object;)Lorg/sireum/Set;
        12: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        15: aload_2
        16: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        19: checkcast     #306                // class org/sireum/HashSMap
        22: aload_0
        23: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        26: astore        6
        28: aload         6
        30: instanceof    #860                // class org/sireum/Some
        33: ifeq          81
        36: aload         6
        38: checkcast     #860                // class org/sireum/Some
        41: astore        7
        43: getstatic     #275                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        46: aload         7
        48: invokevirtual #863                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        51: astore        8
        53: aload         8
        55: invokevirtual #261                // Method scala/Some.isEmpty:()Z
        58: ifne          78
        61: aload         8
        63: invokevirtual #265                // Method scala/Some.get:()Ljava/lang/Object;
        66: checkcast     #361                // class org/sireum/Set
        69: astore        9
        71: aload         9
        73: astore        4
        75: goto          95
        78: goto          84
        81: goto          84
        84: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
        87: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
        90: astore        4
        92: goto          95
        95: aload         4
        97: astore        5
        99: aload         5
       101: invokevirtual #550                // Method org/sireum/Set.elements:()Lorg/sireum/IS;
       104: aload_3
       105: aload_0
       106: aload_1
       107: aload_2
       108: invokedynamic #896,  0            // InvokeDynamic #20:apply:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
       113: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       116: aload_2
       117: aload_2
       118: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       121: checkcast     #306                // class org/sireum/HashSMap
       124: new           #217                // class scala/Tuple2
       127: dup
       128: aload_0
       129: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
       132: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
       135: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       138: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       141: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       144: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 78
          locals = [ class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, top, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class org/sireum/Set, top, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 207: 0
        line 208: 15
        line 209: 28
        line 208: 61
        line 209: 71
        line 210: 84
        line 208: 95
        line 213: 99
        line 223: 116
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           71       7     9   bsx   Lorg/sireum/Set;
           99      45     5  temp   Lorg/sireum/Set;
            0     145     0     x   Ljava/lang/Object;
            0     145     1 marked$1   Lscala/runtime/ObjectRef;
            0     145     2 bSets$1   Lscala/runtime/ObjectRef;
            0     145     3 removed$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      x                              final
      marked$1                       final
      bSets$1                        final
      removed$1                      final

  private static final void noCycle$1(java.lang.Object, java.lang.Object, scala.runtime.ObjectRef, scala.runtime.ObjectRef);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=6, locals=16, args_size=4
         0: aload_2
         1: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #306                // class org/sireum/HashSMap
         7: aload_1
         8: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        11: astore        7
        13: aload         7
        15: instanceof    #860                // class org/sireum/Some
        18: ifeq          66
        21: aload         7
        23: checkcast     #860                // class org/sireum/Some
        26: astore        8
        28: getstatic     #275                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        31: aload         8
        33: invokevirtual #863                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        36: astore        9
        38: aload         9
        40: invokevirtual #261                // Method scala/Some.isEmpty:()Z
        43: ifne          63
        46: aload         9
        48: invokevirtual #265                // Method scala/Some.get:()Ljava/lang/Object;
        51: checkcast     #361                // class org/sireum/Set
        54: astore        10
        56: aload         10
        58: astore        5
        60: goto          80
        63: goto          69
        66: goto          69
        69: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
        72: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
        75: astore        5
        77: goto          80
        80: aload         5
        82: astore        6
        84: aload_2
        85: aload_2
        86: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        89: checkcast     #306                // class org/sireum/HashSMap
        92: new           #217                // class scala/Tuple2
        95: dup
        96: aload_1
        97: aload         6
        99: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       102: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       105: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       108: aload_3
       109: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       112: checkcast     #306                // class org/sireum/HashSMap
       115: aload_0
       116: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
       119: astore        12
       121: aload         12
       123: instanceof    #860                // class org/sireum/Some
       126: ifeq          178
       129: aload         12
       131: checkcast     #860                // class org/sireum/Some
       134: astore        13
       136: getstatic     #275                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       139: aload         13
       141: invokevirtual #863                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       144: astore        14
       146: aload         14
       148: invokevirtual #261                // Method scala/Some.isEmpty:()Z
       151: ifne          175
       154: aload         14
       156: invokevirtual #265                // Method scala/Some.get:()Ljava/lang/Object;
       159: checkcast     #361                // class org/sireum/Set
       162: astore        15
       164: aload         15
       166: aload_1
       167: invokevirtual #857                // Method org/sireum/Set.$plus:(Ljava/lang/Object;)Lorg/sireum/Set;
       170: astore        4
       172: goto          196
       175: goto          181
       178: goto          181
       181: getstatic     #324                // Field org/sireum/Set$.MODULE$:Lorg/sireum/Set$;
       184: invokevirtual #328                // Method org/sireum/Set$.empty:()Lorg/sireum/Set;
       187: aload_1
       188: invokevirtual #857                // Method org/sireum/Set.$plus:(Ljava/lang/Object;)Lorg/sireum/Set;
       191: astore        4
       193: goto          196
       196: aload         4
       198: astore        11
       200: aload_3
       201: aload_3
       202: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       205: checkcast     #306                // class org/sireum/HashSMap
       208: new           #217                // class scala/Tuple2
       211: dup
       212: aload_0
       213: aload         11
       215: invokespecial #239                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       218: invokevirtual #613                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       221: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       224: return
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 63
          locals = [ class java/lang/Object, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, top, top, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class java/lang/Object, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, top, class org/sireum/Set, top, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 94
          locals = [ class java/lang/Object, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, top, class org/sireum/Set, class org/sireum/Set, class org/sireum/Option, top, top, top, top, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class java/lang/Object, class java/lang/Object, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, class org/sireum/Set, class org/sireum/Set, class org/sireum/Set, class org/sireum/Option, top, top, top, top, class org/sireum/Option ]
          stack = []
      LineNumberTable:
        line 227: 0
        line 228: 13
        line 227: 46
        line 228: 56
        line 229: 69
        line 227: 80
        line 231: 84
        line 232: 108
        line 233: 121
        line 232: 154
        line 233: 164
        line 234: 181
        line 232: 196
        line 236: 200
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56       7    10    bs   Lorg/sireum/Set;
          164      11    15    rx   Lorg/sireum/Set;
           84     140     6    t1   Lorg/sireum/Set;
          200      24    11    t2   Lorg/sireum/Set;
            0     225     0     x   Ljava/lang/Object;
            0     225     1     y   Ljava/lang/Object;
            0     225     2 bSets$1   Lscala/runtime/ObjectRef;
            0     225     3 removed$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      x                              final
      y                              final
      bSets$1                        final
      removed$1                      final

  public static final void $anonfun$getCycles$8(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=4
         0: aload_0
         1: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
         4: invokevirtual #369                // Method org/sireum/Graph.incomingEdges:()Lorg/sireum/HashSMap;
         7: aload_0
         8: invokevirtual #135                // Method graph:()Lorg/sireum/Graph;
        11: invokevirtual #304                // Method org/sireum/Graph.nodes:()Lorg/sireum/HashSMap;
        14: aload_3
        15: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        18: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        23: invokevirtual #309                // Method org/sireum/HashSMap.get:(Ljava/lang/Object;)Lorg/sireum/Option;
        26: astore        4
        28: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        31: aload         4
        33: invokeinterface #315,  1          // InterfaceMethod org/sireum/Option.nonEmpty:()Z
        38: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        41: ifeq          62
        44: aload         4
        46: invokeinterface #312,  1          // InterfaceMethod org/sireum/Option.get:()Ljava/lang/Object;
        51: checkcast     #42                 // class org/sireum/Graph$Internal$Edges
        54: invokeinterface #907,  1          // InterfaceMethod org/sireum/Graph$Internal$Edges.size:()Lorg/sireum/Z;
        59: goto          69
        62: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        65: iconst_0
        66: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        69: astore        5
        71: getstatic     #297                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        74: aload         5
        76: aload_1
        77: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        80: checkcast     #765                // class org/sireum/Z
        83: invokeinterface #910,  2          // InterfaceMethod org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
        88: invokevirtual #319                // Method org/sireum/B$.$4B:(Z)Z
        91: ifeq          108
        94: aload_1
        95: aload         5
        97: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       100: aload_2
       101: aload_3
       102: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       105: goto          108
       108: return
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 62
          locals = [ class org/sireum/Option ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ class org/sireum/Z ]
      LineNumberTable:
        line 244: 0
        line 245: 28
        line 246: 71
        line 247: 94
        line 248: 100
        line 246: 108
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      80     4 inedges   Lorg/sireum/Option;
           71      37     5 inDegree   Lorg/sireum/Z;
            0     109     0 $this   Lorg/sireum/ops/GraphOps;
            0     109     1 max$1   Lscala/runtime/ObjectRef;
            0     109     2 startNode$1   Lscala/runtime/ObjectRef;
            0     109     3  node   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      max$1                          final
      startNode$1                    final
      node                           final

  public static final void $anonfun$getCycles$7(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, org.sireum.HashSSet);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=5, args_size=3
         0: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: iconst_m1
         4: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         7: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        10: astore_3
        11: aload_2
        12: invokevirtual #558                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
        15: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        18: iconst_0
        19: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        22: invokevirtual #576                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        25: invokestatic  #399                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        28: astore        4
        30: aload_2
        31: invokevirtual #558                // Method org/sireum/HashSSet.elements:()Lorg/sireum/IS;
        34: aload_0
        35: aload_3
        36: aload         4
        38: invokedynamic #922,  0            // InvokeDynamic #21:apply:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/Function1;
        43: invokevirtual #431                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        46: aload_1
        47: aload_1
        48: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        51: checkcast     #355                // class org/sireum/IS
        54: aload         4
        56: getfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        59: invokevirtual #724                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        62: putfield      #438                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        65: return
      LineNumberTable:
        line 241: 0
        line 242: 11
        line 243: 30
        line 251: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      54     3   max   Lscala/runtime/ObjectRef;
           30      35     4 startNode   Lscala/runtime/ObjectRef;
            0      66     0 $this   Lorg/sireum/ops/GraphOps;
            0      66     1 startNodes$1   Lscala/runtime/ObjectRef;
            0      66     2   scc   Lorg/sireum/HashSSet;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      startNodes$1                   final
      scc                            final

  public static final boolean $anonfun$getCycles$9(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=10, locals=9, args_size=9
         0: aload_0
         1: aload         8
         3: getstatic     #819                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         6: iconst_0
         7: invokevirtual #822                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        10: aload_1
        11: aload_2
        12: aload_3
        13: aload         4
        15: aload         5
        17: aload         6
        19: aload         7
        21: invokespecial #795                // Method cycle$1:(Ljava/lang/Object;Lorg/sireum/Z;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Z
        24: ireturn
      LineNumberTable:
        line 255: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 $this   Lorg/sireum/ops/GraphOps;
            0      25     1 marked$1   Lscala/runtime/ObjectRef;
            0      25     2 stack$2   Lscala/runtime/ObjectRef;
            0      25     3 position$1   Lscala/runtime/ObjectRef;
            0      25     4 reach$1   Lscala/runtime/ObjectRef;
            0      25     5 removed$1   Lscala/runtime/ObjectRef;
            0      25     6 loops$1   Lscala/runtime/ObjectRef;
            0      25     7 bSets$1   Lscala/runtime/ObjectRef;
            0      25     8     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      marked$1                       final
      stack$2                        final
      position$1                     final
      reach$1                        final
      removed$1                      final
      loops$1                        final
      bSets$1                        final
      n                              final

  public org.sireum.ops.GraphOps(org.sireum.Graph<W, E>);
    descriptor: (Lorg/sireum/Graph;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #929                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #933                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #936                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #939                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #104                // Field _graph:Lorg/sireum/Graph;
        21: return
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/sireum/ops/GraphOps;
            0      22     1 __graph   Lorg/sireum/Graph;
    Signature: #927                         // (Lorg/sireum/Graph<TW;TE;>;)V
    MethodParameters:
      Name                           Flags
      __graph                        final

  public static final java.lang.Object $anonfun$getSCC$10$adapted(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #941                // Method $anonfun$getSCC$10:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         7: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lorg/sireum/ops/GraphOps;
            0      11     1 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      11     2 orderedNodes$1   Lscala/runtime/ObjectRef;
            0      11     3     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      discoveryMap$1                 final
      orderedNodes$1                 final
      k                              final

  public static final java.lang.Object $anonfun$getSCC$11$adapted(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #949                // Method $anonfun$getSCC$11:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         7: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lorg/sireum/ops/GraphOps;
            0      11     1 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      11     2 result$1   Lscala/runtime/ObjectRef;
            0      11     3     k   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      discoveryMap$1                 final
      result$1                       final
      k                              final

  public static final java.lang.Object $anonfun$getCycles$7$adapted(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, org.sireum.HashSSet);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #951                // Method $anonfun$getCycles$7:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)V
         6: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 240: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/ops/GraphOps;
            0      10     1 startNodes$1   Lscala/runtime/ObjectRef;
            0      10     2   scc   Lorg/sireum/HashSSet;
    MethodParameters:
      Name                           Flags
      $this                          final
      startNodes$1                   final
      scc                            final

  public static final java.lang.Object $anonfun$getCycles$9$adapted(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=11, locals=9, args_size=9
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: aload_2
         7: aload_3
         8: aload         4
        10: aload         5
        12: aload         6
        14: aload         7
        16: aload         8
        18: invokestatic  #953                // Method $anonfun$getCycles$9:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Z
        21: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        24: areturn
      LineNumberTable:
        line 254: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 $this   Lorg/sireum/ops/GraphOps;
            0      25     1 marked$1   Lscala/runtime/ObjectRef;
            0      25     2 stack$2   Lscala/runtime/ObjectRef;
            0      25     3 position$1   Lscala/runtime/ObjectRef;
            0      25     4 reach$1   Lscala/runtime/ObjectRef;
            0      25     5 removed$1   Lscala/runtime/ObjectRef;
            0      25     6 loops$1   Lscala/runtime/ObjectRef;
            0      25     7 bSets$1   Lscala/runtime/ObjectRef;
            0      25     8     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      marked$1                       final
      stack$2                        final
      position$1                     final
      reach$1                        final
      removed$1                      final
      loops$1                        final
      bSets$1                        final
      n                              final

  public static final java.lang.Object $anonfun$getSCC$3$adapted(scala.runtime.ObjectRef, java.lang.Object, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: aload_2
         7: invokestatic  #955                // Method $anonfun$getSCC$3:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Z
        10: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        13: areturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      14     1   v$1   Ljava/lang/Object;
            0      14     2    cf   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      v$1                            final
      cf                             final

  public static final java.lang.Object $anonfun$getSCC$5$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #957                // Method $anonfun$getSCC$5:(Lscala/Tuple2;)Z
         8: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0     e   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      e                              final

  public static final java.lang.Object $anonfun$getSCC$6$adapted(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: checkcast     #582                // class org/sireum/B
         8: invokevirtual #610                // Method org/sireum/B.value:()Z
        11: aload_1
        12: checkcast     #582                // class org/sireum/B
        15: invokevirtual #610                // Method org/sireum/B.value:()Z
        18: invokestatic  #959                // Method $anonfun$getSCC$6:(ZZ)Z
        21: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        24: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0     c   Ljava/lang/Object;
            0      25     1     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final
      n                              final

  public static final java.lang.Object $anonfun$getSCC$7$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #961                // Method $anonfun$getSCC$7:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Z
         9: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      13     1 current$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      current$1                      final

  public static final java.lang.Object $anonfun$getSCC$8$adapted(scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #963                // Method $anonfun$getSCC$8:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         6: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 discoveryMap$1   Lscala/runtime/ObjectRef;
            0      10     1 stack$1   Lscala/runtime/ObjectRef;
            0      10     2     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      discoveryMap$1                 final
      stack$1                        final
      n                              final

  public static final java.lang.Object $anonfun$getSCC$9$adapted(boolean);
    descriptor: (Z)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #582                // class org/sireum/B
         3: dup
         4: iload_0
         5: invokestatic  #965                // Method $anonfun$getSCC$9:(Z)Z
         8: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 isFirst$1   Z
    MethodParameters:
      Name                           Flags
      isFirst$1                      final

  public static final java.lang.Object $anonfun$getCycles$3$adapted(scala.runtime.ObjectRef, java.lang.Object, scala.runtime.ObjectRef);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: aload_2
         7: invokestatic  #967                // Method $anonfun$getCycles$3:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Z
        10: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        13: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 position$1   Lscala/runtime/ObjectRef;
            0      14     1  wV$1   Ljava/lang/Object;
            0      14     2   q$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      position$1                     final
      wV$1                           final
      q$1                            final

  public static final java.lang.Object $anonfun$getCycles$4$adapted(scala.runtime.BooleanRef);
    descriptor: (Lscala/runtime/BooleanRef;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #969                // Method $anonfun$getCycles$4:(Lscala/runtime/BooleanRef;)Z
         8: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 break$1   Lscala/runtime/BooleanRef;
    MethodParameters:
      Name                           Flags
      break$1                        final

  public static final java.lang.Object $anonfun$getCycles$5$adapted(scala.runtime.BooleanRef);
    descriptor: (Lscala/runtime/BooleanRef;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #582                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #971                // Method $anonfun$getCycles$5:(Lscala/runtime/BooleanRef;)Z
         8: invokespecial #585                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 break$1   Lscala/runtime/BooleanRef;
    MethodParameters:
      Name                           Flags
      break$1                        final

  public static final java.lang.Object $anonfun$getCycles$2$adapted(org.sireum.ops.GraphOps, org.sireum.Set, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.BooleanRef, java.lang.Object, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=13, locals=13, args_size=13
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: aload         6
        10: aload         7
        12: aload         8
        14: aload         9
        16: aload         10
        18: aload         11
        20: aload         12
        22: invokestatic  #973                // Method $anonfun$getCycles$2:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
        25: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        28: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0 $this   Lorg/sireum/ops/GraphOps;
            0      29     1 avRemoved$1   Lorg/sireum/Set;
            0      29     2 marked$1   Lscala/runtime/ObjectRef;
            0      29     3   q$1   Lscala/runtime/ObjectRef;
            0      29     4 foundCycle$1   Lscala/runtime/BooleanRef;
            0      29     5   v$2   Ljava/lang/Object;
            0      29     6 position$1   Lscala/runtime/ObjectRef;
            0      29     7 stack$2   Lscala/runtime/ObjectRef;
            0      29     8 loops$1   Lscala/runtime/ObjectRef;
            0      29     9 reach$1   Lscala/runtime/ObjectRef;
            0      29    10 removed$1   Lscala/runtime/ObjectRef;
            0      29    11 bSets$1   Lscala/runtime/ObjectRef;
            0      29    12    wV   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      avRemoved$1                    final
      marked$1                       final
      q$1                            final
      foundCycle$1                   final
      v$2                            final
      position$1                     final
      stack$2                        final
      loops$1                        final
      reach$1                        final
      removed$1                      final
      bSets$1                        final
      wV                             final

  public static final java.lang.Object $anonfun$getCycles$6$adapted(scala.runtime.ObjectRef, java.lang.Object, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #975                // Method $anonfun$getCycles$6:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         9: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        12: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 removed$1   Lscala/runtime/ObjectRef;
            0      13     1   x$1   Ljava/lang/Object;
            0      13     2 marked$1   Lscala/runtime/ObjectRef;
            0      13     3 bSets$1   Lscala/runtime/ObjectRef;
            0      13     4     y   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      removed$1                      final
      x$1                            final
      marked$1                       final
      bSets$1                        final
      y                              final

  public static final java.lang.Object $anonfun$getCycles$8$adapted(org.sireum.ops.GraphOps, scala.runtime.ObjectRef, scala.runtime.ObjectRef, java.lang.Object);
    descriptor: (Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #977                // Method $anonfun$getCycles$8:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)V
         7: getstatic     #947                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        10: areturn
      LineNumberTable:
        line 243: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lorg/sireum/ops/GraphOps;
            0      11     1 max$1   Lscala/runtime/ObjectRef;
            0      11     2 startNode$1   Lscala/runtime/ObjectRef;
            0      11     3  node   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      max$1                          final
      startNode$1                    final
      node                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #989,  0            // InvokeDynamic #22:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #21= #18 of #20;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #26= #23 of #25;          // Edge=class org/sireum/Graph$Edge of class org/sireum/Graph
  public static #29= #28 of #25;          // Edge$=class org/sireum/Graph$Edge$ of class org/sireum/Graph
  public static final #32= #31 of #28;    // Data=class org/sireum/Graph$Edge$Data of class org/sireum/Graph$Edge$
  public static #35= #34 of #28;          // Data$=class org/sireum/Graph$Edge$Data$ of class org/sireum/Graph$Edge$
  public static #38= #37 of #25;          // Internal$=class org/sireum/Graph$Internal$ of class org/sireum/Graph
  public static #26= #40 of #37;          // Edge=class org/sireum/Graph$Internal$Edge of class org/sireum/Graph$Internal$
  public static #43= #42 of #37;          // Edges=class org/sireum/Graph$Internal$Edges of class org/sireum/Graph$Internal$
Signature: #3                           // <W:Ljava/lang/Object;E:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/DatatypeSig;
SourceFile: "GraphOps.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Mw!\u0002\u000e\u001c\u0011\u0003\u0011c!\u0002\u0013\u001c\u0011\u0003)\u0003\"\u0002\u0017\u0002\t\u0003i\u0003\"\u0002\u0018\u0002\t\u0003y\u0003bBA]\u0003\u0011\u0005\u00111\u0018\u0004\u0005Im\u0011!\u0007\u0003\u00059\u000b\t\u0005\t\u0015!\u0003:\u0011\u0015aS\u0001\"\u0001K\u0011\u0019iU\u0001)A\u0005s!)a*\u0002C\u0001\u001f\")\u0001+\u0002C\u0001\u001f\")\u0011+\u0002C!%\")1,\u0002C!9\"Aq,\u0002EC\u0002\u0013\u0005\u0003\rC\u0003e\u000b\u0011\u0005S\rC\u0003/\u000b\u0011\u00051\u000eC\u0004n\u000bE\u0005I\u0011\u00018\t\u0011e,\u0001R1A\u0005BiDq!!\u0006\u0006\t\u0003\t9\u0002C\u0004\u0002:\u0015!\t!a\u000f\t\u000f\u0005%S\u0001\"\u0001\u0002L!9\u0011\u0011K\u0003\u0005\u0002\u0005M\u0003bBA<\u000b\u0011\u0005\u0011\u0011\u0010\u0005\b\u0003\u0003+A\u0011AAB\u0011\u001d\tY)\u0002C\u0001\u0003\u001bCq!a%\u0006\t\u0003\t)*\u0001\u0005He\u0006\u0004\bn\u00149t\u0015\taR$A\u0002paNT!AH\u0010\u0002\rML\'/Z;n\u0015\u0005\u0001\u0013aA8sO\u000e\u0001\u0001CA\u0012\u0002\u001b\u0005Y\"\u0001C$sCBDw\n]:\u0014\u0005\u00051\u0003CA\u0014+\u001b\u0005A#\"A\u0015\u0002\u000bM\u001c\u0017\r\\1\n\u0005-B#AB!osJ+g-\u0001\u0004=S:LGO\u0010\u000b\u0002E\u0005)\u0011\r\u001d9msV)\u0001\'a,\u00024R\u0019\u0011\'!.\u0011\r\r*\u0011QVAY+\r\u0019d\bS\n\u0004\u000b\u0019\"\u0004CA\u001b7\u001b\u0005i\u0012BA\u001c\u001e\u0005-!\u0015\r^1usB,7+[4\u0002\u000f}{vM]1qQB!QG\u000f\u001fH\u0013\tYTDA\u0003He\u0006\u0004\b\u000e\u0005\u0002>}1\u0001A!B \u0006\u0005\u0004\u0001%!A,\u0012\u0005\u0005#\u0005CA\u0014C\u0013\t\u0019\u0005FA\u0004O_RD\u0017N\\4\u0011\u0005\u001d*\u0015B\u0001$)\u0005\r\te.\u001f\t\u0003{!#Q!S\u0003C\u0002\u0001\u0013\u0011!\u0012\u000b\u0003\u00172\u0003BaI\u0003=\u000f\")\u0001h\u0002a\u0001s\u00051ql\u001a:ba\"\fQa\u001a:ba\",\u0012!O\u0001\tO\u0016$xI]1qQ\u0006AAo\\*ue&tw\rF\u0001T!\t!\u0016,D\u0001V\u0015\t1v+\u0001\u0003mC:<\'\"\u0001-\u0002\t)\fg/Y\u0005\u00035V\u0013aa\u0015;sS:<\u0017AB:ue&tw-F\u0001^!\t)d,\u0003\u0002[;\u0005A\u0001.Y:i\u0007>$W-F\u0001b!\t9#-\u0003\u0002dQ\t\u0019\u0011J\u001c;\u0002\r\u0015\fX/\u00197t)\t1\u0017\u000e\u0005\u0002(O&\u0011\u0001\u000e\u000b\u0002\b\u0005>|G.Z1o\u0011\u0015Qg\u00021\u0001E\u0003\u0005yGCA&m\u0011\u001dqu\u0002%AA\u0002e\nq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0002_*\u0012\u0011\b]\u0016\u0002cB\u0011!o^\u0007\u0002g*\u0011A/^\u0001\nk:\u001c\u0007.Z2lK\u0012T!A\u001e\u0015\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002yg\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u0011\u0011\u001awN\u001c;f]R,\u0012a\u001f\t\u0006y\u0006%\u0011q\u0002\b\u0004{\u0006\u0015ab\u0001@\u0002\u00045\tqPC\u0002\u0002\u0002\u0005\na\u0001\u0010:p_Rt\u0014\"A\u0015\n\u0007\u0005\u001d\u0001&A\u0004qC\u000e\\\u0017mZ3\n\t\u0005-\u0011Q\u0002\u0002\u0004\'\u0016\f(bAA\u0004QA)q%!\u0005T\t&\u0019\u00111\u0003\u0015\u0003\rQ+\b\u000f\\33\u0003-9W\r^#eO\u0016$\u0015\r^1\u0015\t\u0005e\u0011q\u0004\t\u0005k\u0005mq)C\u0002\u0002\u001eu\u0011aa\u00149uS>t\u0007bBA\u0011%\u0001\u0007\u00111E\u0001\u0002KB1\u0011QEA\u0016y\u001ds1!NA\u0014\u0013\r\tI#H\u0001\u0006\u000fJ\f\u0007\u000f[\u0005\u0005\u0003[\tyC\u0001\u0003FI\u001e,\'bAA\u0015;!\u001a!#a\r\u0011\u0007U\n)$C\u0002\u00028u\u0011A\u0001];sK\u0006yq-\u001a;BY2\u001cVoY2fgN|\'\u000f\u0006\u0003\u0002>\u0005\r\u0003\u0003B\u001b\u0002@qJ1!!\u0011\u001e\u0005\r\u0019V\r\u001e\u0005\u0007\u0003\u000b\u001a\u0002\u0019\u0001\u001f\u0002\u0003YD3aEA\u001a\u0003E9W\r^!mYB\u0013X\rZ3dKN\u001cxN\u001d\u000b\u0005\u0003{\ti\u0005\u0003\u0004\u0002FQ\u0001\r\u0001\u0010\u0015\u0004)\u0005M\u0012AB4fiN\u001b5)\u0006\u0002\u0002VA1\u0011qKA2\u0003_rA!!\u0017\u0002b9!\u00111LA0\u001d\rq\u0018QL\u0005\u0002A%\u0011adH\u0005\u0004\u0003\u000fi\u0012\u0002BA3\u0003O\u00121!S*[\u0013\u0011\tI\'a\u001b\u0003\u0019A\u000b7m[1hKR\u0013\u0018-\u001b;\u000b\u0007\u00055T$A\u0005%S:$XM\u001d8bYB!Q\'!\u001d=\u0013\r\t\u0019(\b\u0002\t\u0011\u0006\u001c\bnU*fi\"\u001aQ#a\r\u0002\u0013\u001d,GoQ=dY\u0016\u001cXCAA>!\u0019\t9&a\u0019\u0002~A)\u0011qKA2y!\u001aa#a\r\u0002\u0019\u0019|\'o^1sIJ+\u0017m\u00195\u0015\t\u0005u\u0014Q\u0011\u0005\b\u0003\u000f;\u0002\u0019AA?\u0003!\u0019\'/\u001b;fe&\f\u0007fA\f\u00024\u0005i!-Y2lo\u0006\u0014HMU3bG\"$B!! \u0002\u0010\"9\u0011q\u0011\rA\u0002\u0005u\u0004f\u0001\r\u00024\u0005I!/Z1dQ\u0006\u0014G.\u001a\u000b\u0007\u0003{\n9*!\'\t\u000f\u0005\u001d\u0015\u00041\u0001\u0002~!9\u00111T\rA\u0002\u0005u\u0015!C5t\r>\u0014x/\u0019:e!\r)\u0014qT\u0005\u0004\u0003Ck\"!\u0001\")\u0007e\t\u0019\u0004K\u0002\u0006\u0003O\u00032!NAU\u0013\r\tY+\b\u0002\tI\u0006$\u0018\r^=qKB\u0019Q(a,\u0005\u000b}\u001a!\u0019\u0001!\u0011\u0007u\n\u0019\fB\u0003J\u0007\t\u0007\u0001\t\u0003\u0004O\u0007\u0001\u0007\u0011q\u0017\t\u0007ki\ni+!-\u0002\u000fUt\u0017\r\u001d9msV1\u0011QXAe\u0003\u001b$B!a0\u0002PB)q%!1\u0002F&\u0019\u00111\u0019\u0015\u0003\tM{W.\u001a\t\u0007ki\n9-a3\u0011\u0007u\nI\rB\u0003@\t\t\u0007\u0001\tE\u0002>\u0003\u001b$Q!\u0013\u0003C\u0002\u0001CaA\u001b\u0003A\u0002\u0005E\u0007CB\u0012\u0006\u0003\u000f\fY\r"
    )
BootstrapMethods:
  0: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #339 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getAllSuccessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
      #341 (Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
      #342 5
      #343 1
      #341 (Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
  1: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #373 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getAllPredecessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
      #341 (Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
      #342 5
      #343 1
      #341 (Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
  2: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #412 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$1:(Ljava/lang/Object;)Lscala/Tuple2;
      #413 (Ljava/lang/Object;)Lscala/Tuple2;
      #342 5
      #343 1
      #413 (Ljava/lang/Object;)Lscala/Tuple2;
  3: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #424 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$10$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  4: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #442 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$11$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  5: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #465 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$1:(Ljava/lang/Object;)Lscala/Tuple2;
      #413 (Ljava/lang/Object;)Lscala/Tuple2;
      #342 5
      #343 1
      #413 (Ljava/lang/Object;)Lscala/Tuple2;
  6: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #472 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$7$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
      #474 (Lorg/sireum/HashSSet;)Ljava/lang/Object;
      #342 5
      #343 1
      #474 (Lorg/sireum/HashSSet;)Ljava/lang/Object;
  7: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #482 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$9$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  8: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #598 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$2:(Lscala/Tuple2;)Lscala/Tuple2;
      #599 (Lscala/Tuple2;)Lscala/Tuple2;
      #342 5
      #343 1
      #599 (Lscala/Tuple2;)Lscala/Tuple2;
  9: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #620 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #622 (Lscala/Tuple2;)Ljava/lang/Object;
      #342 5
      #343 1
      #622 (Lscala/Tuple2;)Ljava/lang/Object;
  10: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #643 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #622 (Lscala/Tuple2;)Ljava/lang/Object;
      #342 5
      #343 1
      #622 (Lscala/Tuple2;)Ljava/lang/Object;
  11: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #655 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$4:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
      #657 (Ljava/lang/Object;)Lorg/sireum/IS;
      #342 5
      #343 1
      #657 (Ljava/lang/Object;)Lorg/sireum/IS;
  12: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #665 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #669 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$6$adapted:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #665 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  13: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #707 ()Ljava/lang/Object;
      #712 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$7$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #707 ()Ljava/lang/Object;
      #343 1
  14: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #731 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$8$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  15: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #707 ()Ljava/lang/Object;
      #739 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$9$adapted:(Z)Ljava/lang/Object;
      #707 ()Ljava/lang/Object;
      #343 1
  16: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #707 ()Ljava/lang/Object;
      #804 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
      #707 ()Ljava/lang/Object;
      #343 1
  17: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #707 ()Ljava/lang/Object;
      #833 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$4$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
      #707 ()Ljava/lang/Object;
      #343 1
  18: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #707 ()Ljava/lang/Object;
      #848 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$5$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
      #707 ()Ljava/lang/Object;
      #343 1
  19: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #868 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$2$adapted:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  20: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #893 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$6$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  21: #350 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #921 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$8$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #334 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 1
  22: #986 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #373 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getAllPredecessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
      #339 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getAllSuccessor$1:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Graph$Internal$Edge;)Ljava/lang/Object;
      #465 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$1:(Ljava/lang/Object;)Lscala/Tuple2;
      #868 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$2$adapted:(Lorg/sireum/ops/GraphOps;Lorg/sireum/Set;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/BooleanRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #804 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;)Ljava/lang/Object;
      #833 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$4$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
      #848 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$5$adapted:(Lscala/runtime/BooleanRef;)Ljava/lang/Object;
      #893 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$6$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #472 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$7$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lorg/sireum/HashSSet;)Ljava/lang/Object;
      #921 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$8$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #482 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getCycles$9$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #412 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$1:(Ljava/lang/Object;)Lscala/Tuple2;
      #424 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$10$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #442 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$11$adapted:(Lorg/sireum/ops/GraphOps;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #598 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$2:(Lscala/Tuple2;)Lscala/Tuple2;
      #620 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$3$adapted:(Lscala/runtime/ObjectRef;Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #655 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$4:(Lscala/runtime/ObjectRef;Ljava/lang/Object;)Lorg/sireum/IS;
      #643 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #669 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$6$adapted:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #712 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$7$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #731 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$8$adapted:(Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;Ljava/lang/Object;)Ljava/lang/Object;
      #739 REF_invokeStatic org/sireum/ops/GraphOps.$anonfun$getSCC$9$adapted:(Z)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x16C (unknown attribute)
   01 01 00 48 01 72 01 50 01 01 4F 01 50 01 01 CE
   01 99 01 03 0B 03 0C 01 03 60 03 61 01 02 F7 02
   F8 01 03 20 03 21 01 03 02 03 03 01 03 3D 03 3E
   01 03 0A 03 03 01 03 4D 03 3E 01 03 71 03 72 01
   03 79 03 7A 01 03 92 03 93 01 01 D4 01 D5 01 03
   87 02 ED 01 03 96 01 A5 01 03 9D 03 9E 01 01 DE
   01 DF 01 01 98 01 99 01 02 EC 02 ED 01 01 A4 01
   A5 01 02 F2 02 ED 01 01 B7 01 A5 01 02 4A 02 4B
   01 02 59 02 5A 01 02 68 02 69 01 02 7A 02 7B 01
   02 78 02 79 01 02 80 02 6D 01 02 85 02 86 01 02
   9A 02 98 01 02 A5 02 A6 01 02 C4 02 C5 01 02 A8
   02 A9 01 02 D7 02 D8 01 02 B1 01 3D 01 02 DF 02
   E0 01 00 4A 00 4B 01 00 5C 01 07 01 00 5C 00 5D
   01 00 2E 00 D6 01 00 D5 00 D6 01 00 52 00 53 01
   00 58 00 53 01 00 74 00 D1 01 00 94 00 CF 01 00
   D4 00 65 01 01 FC 01 F1 01 03 18 03 19 01 02 B3
   02 B4 01 00 C9 00 CA 01 01 F0 01 F1 01 01 6E 01
   22 01 01 21 01 22 01 01 C0 01 4A 01 00 F7 00 F8
   01 00 69 00 65 01 01 77 01 4A 01 00 64 00 65 01
   00 43 00 44 01 00 2C 00 99 01 00 98 00 99 01 02
   8C 02 67 01 03 1C 03 1D 01 01 F7 01 F8 01 01 B0
   01 B1 01 02 76 02 77 01 02 66 02 67 01 00 92 00
   6B 01 00 6A 00 6B 01 03 68 03 69 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
