Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/compatibility/package$RichChar$.class
  Last modified May 29, 2022; size 1632 bytes
  SHA-256 checksum 88d8023653f0c5575837bb863ff7479732a3324759befc05f6a505be0f2c03c8
  Compiled from "package.scala"
public class coursier.core.compatibility.package$RichChar$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/core/compatibility/package$RichChar$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               coursier/core/compatibility/package$RichChar$
   #2 = Class              #1             // coursier/core/compatibility/package$RichChar$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               package.scala
   #6 = Utf8               coursier/core/compatibility/package$RichChar
   #7 = Class              #6             // coursier/core/compatibility/package$RichChar
   #8 = Utf8               coursier/core/compatibility/package
   #9 = Class              #8             // coursier/core/compatibility/package
  #10 = Utf8               RichChar
  #11 = Utf8
  #12 = Utf8               MODULE$
  #13 = Utf8               Lcoursier/core/compatibility/package$RichChar$;
  #14 = Utf8               <clinit>
  #15 = Utf8               ()V
  #16 = Utf8               <init>
  #17 = NameAndType        #16:#15        // "<init>":()V
  #18 = Methodref          #2.#17         // coursier/core/compatibility/package$RichChar$."<init>":()V
  #19 = NameAndType        #12:#13        // MODULE$:Lcoursier/core/compatibility/package$RichChar$;
  #20 = Fieldref           #2.#19         // coursier/core/compatibility/package$RichChar$.MODULE$:Lcoursier/core/compatibility/package$RichChar$;
  #21 = Utf8               letterOrDigit$extension
  #22 = Utf8               (C)Z
  #23 = Utf8               $this
  #24 = Utf8               scala/runtime/RichChar$
  #25 = Class              #24            // scala/runtime/RichChar$
  #26 = Utf8               Lscala/runtime/RichChar$;
  #27 = NameAndType        #12:#26        // MODULE$:Lscala/runtime/RichChar$;
  #28 = Fieldref           #25.#27        // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
  #29 = Utf8               scala/Predef$
  #30 = Class              #29            // scala/Predef$
  #31 = Utf8               Lscala/Predef$;
  #32 = NameAndType        #12:#31        // MODULE$:Lscala/Predef$;
  #33 = Fieldref           #30.#32        // scala/Predef$.MODULE$:Lscala/Predef$;
  #34 = Utf8               charWrapper
  #35 = Utf8               (C)C
  #36 = NameAndType        #34:#35        // charWrapper:(C)C
  #37 = Methodref          #30.#36        // scala/Predef$.charWrapper:(C)C
  #38 = Utf8               isLetterOrDigit$extension
  #39 = NameAndType        #38:#22        // isLetterOrDigit$extension:(C)Z
  #40 = Methodref          #25.#39        // scala/runtime/RichChar$.isLetterOrDigit$extension:(C)Z
  #41 = Utf8               this
  #42 = Utf8               C
  #43 = Utf8               letter$extension
  #44 = Utf8               isLetter$extension
  #45 = NameAndType        #44:#22        // isLetter$extension:(C)Z
  #46 = Methodref          #25.#45        // scala/runtime/RichChar$.isLetter$extension:(C)Z
  #47 = Utf8               hashCode$extension
  #48 = Utf8               (C)I
  #49 = Utf8               scala/runtime/BoxesRunTime
  #50 = Class              #49            // scala/runtime/BoxesRunTime
  #51 = Utf8               boxToCharacter
  #52 = Utf8               (C)Ljava/lang/Character;
  #53 = NameAndType        #51:#52        // boxToCharacter:(C)Ljava/lang/Character;
  #54 = Methodref          #50.#53        // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #55 = Utf8               hashCode
  #56 = Utf8               ()I
  #57 = NameAndType        #55:#56        // hashCode:()I
  #58 = Methodref          #4.#57         // java/lang/Object.hashCode:()I
  #59 = Utf8               equals$extension
  #60 = Utf8               (CLjava/lang/Object;)Z
  #61 = Utf8               x$1
  #62 = Utf8               c
  #63 = Utf8               ()C
  #64 = NameAndType        #62:#63        // c:()C
  #65 = Methodref          #7.#64         // coursier/core/compatibility/package$RichChar.c:()C
  #66 = Utf8               Ljava/lang/Object;
  #67 = Methodref          #4.#17         // java/lang/Object."<init>":()V
  #68 = Utf8               Code
  #69 = Utf8               LineNumberTable
  #70 = Utf8               LocalVariableTable
  #71 = Utf8               MethodParameters
  #72 = Utf8               StackMapTable
  #73 = Utf8               InnerClasses
  #74 = Utf8               SourceFile
  #75 = Utf8               ScalaInlineInfo
  #76 = Utf8               Scala
{
  public static final coursier.core.compatibility.package$RichChar$ MODULE$;
    descriptor: Lcoursier/core/compatibility/package$RichChar$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/core/compatibility/package$RichChar$
         3: dup
         4: invokespecial #18                 // Method "<init>":()V
         7: putstatic     #20                 // Field MODULE$:Lcoursier/core/compatibility/package$RichChar$;
        10: return
      LineNumberTable:
        line 17: 0

  public final boolean letterOrDigit$extension(char);
    descriptor: (C)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #28                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: getstatic     #33                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_1
         7: invokevirtual #37                 // Method scala/Predef$.charWrapper:(C)C
        10: invokevirtual #40                 // Method scala/runtime/RichChar$.isLetterOrDigit$extension:(C)Z
        13: ireturn
      LineNumberTable:
        line 18: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/core/compatibility/package$RichChar$;
            0      14     1 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean letter$extension(char);
    descriptor: (C)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #28                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: getstatic     #33                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_1
         7: invokevirtual #37                 // Method scala/Predef$.charWrapper:(C)C
        10: invokevirtual #46                 // Method scala/runtime/RichChar$.isLetter$extension:(C)Z
        13: ireturn
      LineNumberTable:
        line 19: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/core/compatibility/package$RichChar$;
            0      14     1 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public final int hashCode$extension(char);
    descriptor: (C)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: invokestatic  #54                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
         4: invokevirtual #58                 // Method java/lang/Object.hashCode:()I
         7: ireturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/core/compatibility/package$RichChar$;
            0       8     1 $this   C
    MethodParameters:
      Name                           Flags
      $this                          final

  public final boolean equals$extension(char, java.lang.Object);
    descriptor: (CLjava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=6, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #7                  // class coursier/core/compatibility/package$RichChar
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          55
        28: aload_2
        29: checkcast     #7                  // class coursier/core/compatibility/package$RichChar
        32: invokevirtual #65                 // Method coursier/core/compatibility/package$RichChar.c:()C
        35: istore        5
        37: iload_1
        38: iload         5
        40: if_icmpne     47
        43: iconst_1
        44: goto          48
        47: iconst_0
        48: ifeq          55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/compatibility/package$RichChar$, int, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lcoursier/core/compatibility/package$RichChar$;
            0      57     1 $this   C
            0      57     2   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public coursier.core.compatibility.package$RichChar$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #67                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/compatibility/package$RichChar$;
}
InnerClasses:
  public static final #10= #7 of #9;      // RichChar=class coursier/core/compatibility/package$RichChar of class coursier/core/compatibility/package
  public static #11= #2 of #9;            // =class coursier/core/compatibility/package$RichChar$ of class coursier/core/compatibility/package
SourceFile: "package.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 10 00 0F 01 00 3B 00 3C 01 00 2F
   00 30 01 00 2B 00 16 01 00 15 00 16 01
  Scala: length = 0x0 (unknown attribute)

