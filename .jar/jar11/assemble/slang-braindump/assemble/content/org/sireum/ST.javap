Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/ST.class
  Last modified May 29, 2022; size 8868 bytes
  SHA-256 checksum f57438544bbcb5bad36dab6acc223ffe4ea3d425eb28823538ace1d38a24080b
  Compiled from "ST.scala"
public final class org.sireum.ST implements org.sireum.Immutable,org.sireum.$internal.STMarker
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ST
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 5, methods: 24, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/ST
    #2 = Class              #1            // org/sireum/ST
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/Immutable
    #6 = Class              #5            // org/sireum/Immutable
    #7 = Utf8               org/sireum/$internal/STMarker
    #8 = Class              #7            // org/sireum/$internal/STMarker
    #9 = Utf8               ST.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005Ew!B\u00181\u0011\u0003)d!B\u001c1\u0011\u0003A\u0004\"B \u0002\t\u0003\u0001eaB!\u0002!\u0003\r\nCQ\u0004\b\u0003o\t\u0001\u0012AA\u001d\r\u0019!\u0015\u0001#\u0001\u0002<!1q(\u0002C\u0001\u0003{Aq!a\u0010\u0006\t\u0003\t\t\u0005C\u0005\u0002`\u0015\t\n\u0011\"\u0001\u0002b!9\u0011qO\u0003\u0005\u0002\u0005ed\u0001\u0002#\u0002\u0005\u0015C\u0001\u0002\u0013\u0006\u0003\u0006\u0004%\t!\u0013\u0005\t\u001f*\u0011\t\u0011)A\u0005\u0015\"A\u0001K\u0003BC\u0002\u0013\u0005\u0011\u000b\u0003\u0005Z\u0015\t\u0005\t\u0015!\u0003S\u0011\u0015y$\u0002\"\u0001[\u000f\u001d\tY)\u0001E\u0001\u0003\u001b3aAX\u0001\t\u0002\u0005=\u0005BB \u0012\t\u0003\t\t\nC\u0004\u0002@E!\t!a%\t\u0013\u0005}\u0013#%A\u0005\u0002\u0005\u0005\u0004bBA<#\u0011\u0005\u00111\u0014\u0004\u0005=\u0006\u0011q\f\u0003\u0005I-\t\u0015\r\u0011\"\u0001a\u0011!yeC!A!\u0002\u0013\t\u0007\u0002\u0003)\u0017\u0005\u000b\u0007I\u0011A)\t\u0011e3\"\u0011!Q\u0001\nICaa\u0010\f\u0005\u0002\u0005=\u0002bBAR\u0003\u0011\u0005\u0011Q\u0015\u0005\u0007y\u0006!\t!!-\t\u000f\u0005}\u0012\u0001\"\u0001\u0002<\"9\u0011qH\u0001\u0005\u0002\u0005\u001dg\u0001B\u001c1\u0005\rD\u0001\"\u001c\u0011\u0003\u0006\u0004%\tA\u001c\u0005\ta\u0002\u0012\t\u0011)A\u0005_\"A\u0001\n\tBC\u0002\u0013\u0005\u0011\u000f\u0003\u0005PA\t\u0005\t\u0015!\u0003s\u0011!)\bE!b\u0001\n\u0003\t\u0006\u0002\u0003<!\u0005\u0003\u0005\u000b\u0011\u0002*\t\u000b}\u0002C\u0011A<\t\u0011m\u0004\u0003R1A\u0005\u00029DQ\u0001 \u0011\u0005\u0002uDa!!\u0001!\t\u0003i\bbBA\u0002A\u0011\u0005\u0013Q\u0001\u0005\b\u0003\u001b\u0001C\u0011IA\b\u0011\u001d\tY\u0002\tC!\u0003;Aa!!\f!\t\u0003i\u0018AA*U\u0015\t\t$\'\u0001\u0004tSJ,W/\u001c\u0006\u0002g\u0005\u0019qN]4\u0004\u0001A\u0011a\'A\u0007\u0002a\t\u00111\u000bV\n\u0003\u0003e\u0002\"AO\u001f\u000e\u0003mR\u0011\u0001P\u0001\u0006g\u000e\fG.Y\u0005\u0003}m\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$h\bF\u00016\u0005\r\t%oZ\n\u0003\u0007eJ3a\u0001\u0006\u0017\u0005\r\te._\n\u0004\u0015e2\u0005CA$\u0004\u001b\u0005\t\u0011\u0001B1sON,\u0012A\u0013\t\u0004u-k\u0015B\u0001\'<\u0005\u0015\t%O]1z!\tQd*\u0003\u0002Ew\u0005)\u0011M]4tA\u0005\u00191/\u001a9\u0016\u0003I\u0003\"a\u0015,\u000f\u0005i\"\u0016BA+<\u0003\u0019\u0001&/\u001a3fM&\u0011q\u000b\u0017\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005U[\u0014\u0001B:fa\u0002\"2a\u0017/^!\t9%\u0002C\u0003I\u001f\u0001\u0007!\nC\u0003Q\u001f\u0001\u0007!KA\u0003UK6\u0004HnE\u0002\u0017s\u0019+\u0012!\u0019\t\u0004u-\u0013\u0007C\u0001\u001c!\'\u0011\u0001\u0013\bZ4\u0011\u0005Y*\u0017B\u000141\u0005%IU.\\;uC\ndW\r\u0005\u0002iW6\t\u0011N\u0003\u0002ka\u0005IA%\u001b8uKJt\u0017\r\\\u0005\u0003Y&\u0014\u0001b\u0015+NCJ\\WM]\u0001\u0006a\u0006\u0014Ho]\u000b\u0002_B\u0019!h\u0013*\u0002\rA\f\'\u000f^:!+\u0005\u0011\bc\u0001\u001eLgB\u0011Ao\u0001\b\u0003m\u0001\taa]8ve\u000e,\u0017aB:pkJ\u001cW\r\t\u000b\u0005EbL(\u0010C\u0003nO\u0001\u0007q\u000eC\u0003IO\u0001\u0007!\u000fC\u0003vO\u0001\u0007!+\u0001\u0007d_6\u0004\u0018m\u0019;QCJ$8/\u0001\u0004sK:$WM]\u000b\u0002}B\u0011ag`\u0005\u0003/B\nQB]3oI\u0016\u00148i\\7qC\u000e$\u0018\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005\u001d\u0001c\u0001\u001e\u0002\n%\u0019\u00111B\u001e\u0003\u0007%sG/\u0001\u0004fcV\fGn\u001d\u000b\u0005\u0003#\t9\u0002E\u0002;\u0003\'I1!!\u0006<\u0005\u001d\u0011un\u001c7fC:Da!!\u0007-\u0001\u0004i\u0015!B8uQ\u0016\u0014\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005}\u0001\u0003BA\u0011\u0003Wi!!a\t\u000b\t\u0005\u0015\u0012qE\u0001\u0005Y\u0006twM\u0003\u0002\u0002*\u0005!!.\u0019<b\u0013\r9\u00161E\u0001\u0007gR\u0014\u0018N\\4\u0015\r\u0005E\u00121GA\u001b!\t9e\u0003C\u0003I7\u0001\u0007\u0011\rC\u0003Q7\u0001\u0007!+A\u0002B]f\u0004\"aR\u0003\u0014\u0005\u0015IDCAA\u001d\u0003\u0015\t\u0007\u000f\u001d7z)\u0015Y\u00161IA/\u0011\u0019Au\u00011\u0001\u0002FA)\u0011qIA,\u001b:!\u0011\u0011JA*\u001d\u0011\tY%!\u0015\u000e\u0005\u00055#bAA(i\u00051AH]8pizJ\u0011\u0001P\u0005\u0004\u0003+Z\u0014a\u00029bG.\fw-Z\u0005\u0005\u00033\nYFA\u0002TKFT1!!\u0016<\u0011\u001d\u0001v\u0001%AA\u0002I\u000bq\"\u00199qYf$C-\u001a4bk2$HEM\u000b\u0003\u0003GR3AUA3W\t\t9\u0007\u0005\u0003\u0002j\u0005MTBAA6\u0015\u0011\ti\'a\u001c\u0002\u0013Ut7\r[3dW\u0016$\'bAA9w\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005U\u00141\u000e\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017aB;oCB\u0004H.\u001f\u000b\u0005\u0003w\n9\tE\u0003;\u0003{\n\t)C\u0002\u0002\u0000m\u0012AaU8nKB1!(a!\u0002FIK1!!\"<\u0005\u0019!V\u000f\u001d7fe!1\u0011\u0011R\u0005A\u0002m\u000b\u0011a\\\u0001\u0006)\u0016l\u0007\u000f\u001c\t\u0003\u000fF\u0019\"!E\u001d\u0015\u0005\u00055ECBA\u0019\u0003+\u000bI\n\u0003\u0004I\'\u0001\u0007\u0011q\u0013\t\u0006\u0003\u000f\n9F\u0019\u0005\b!N\u0001\n\u00111\u0001S)\u0011\ti*!)\u0011\u000bi\ni(a(\u0011\ri\n\u0019)a&S\u0011\u001d\tI)\u0006a\u0001\u0003c\tA![:XgR!\u0011\u0011CAT\u0011\u001d\tI\u000b\ba\u0001\u0003W\u000b\u0011a\u0019\t\u0004u\u00055\u0016bAAXw\t!1\t[1s)\u0015q\u00181WA\\\u0011\u0019\t),\ba\u0001E\u0006\tA\u000fC\u0004\u0002:v\u0001\r!!\u0005\u0002\u0013%\u001c8i\\7qC\u000e$Hc\u00022\u0002>\u0006\u0005\u0017Q\u0019\u0005\u0007[z\u0001\r!a0\u0011\u000b\u0005\u001d\u0013q\u000b*\t\r!s\u0002\u0019AAb!\u0015\t9%a\u0016G\u0011\u0015)h\u00041\u0001S)\u001d\u0011\u0017\u0011ZAf\u0003\u001fDQ!\\\u0010A\u0002=Da\u0001S\u0010A\u0002\u00055\u0007c\u0001\u001eL\r\")Qo\ba\u0001%\u0002
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               org/sireum/ST$Any
   #19 = Class              #18           // org/sireum/ST$Any
   #20 = Utf8               Any
   #21 = Utf8               org/sireum/ST$Any$
   #22 = Class              #21           // org/sireum/ST$Any$
   #23 = Utf8               Any$
   #24 = Utf8               org/sireum/ST$Arg
   #25 = Class              #24           // org/sireum/ST$Arg
   #26 = Utf8               Arg
   #27 = Utf8               org/sireum/ST$Templ
   #28 = Class              #27           // org/sireum/ST$Templ
   #29 = Utf8               Templ
   #30 = Utf8               org/sireum/ST$Templ$
   #31 = Class              #30           // org/sireum/ST$Templ$
   #32 = Utf8               Templ$
   #33 = Utf8               compactParts
   #34 = Utf8               [Ljava/lang/String;
   #35 = Utf8               parts
   #36 = Utf8               args
   #37 = Utf8               [Lorg/sireum/ST$Arg;
   #38 = Utf8               source
   #39 = Utf8               Ljava/lang/String;
   #40 = Utf8               bitmap$0
   #41 = Utf8               Z
   #42 = Utf8               apply
   #43 = Utf8               ([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)Lorg/sireum/ST;
   #44 = Utf8               org/sireum/ST$
   #45 = Class              #44           // org/sireum/ST$
   #46 = Utf8               MODULE$
   #47 = Utf8               Lorg/sireum/ST$;
   #48 = NameAndType        #46:#47       // MODULE$:Lorg/sireum/ST$;
   #49 = Fieldref           #45.#48       // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
   #50 = NameAndType        #42:#43       // apply:([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)Lorg/sireum/ST;
   #51 = Methodref          #45.#50       // org/sireum/ST$.apply:([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)Lorg/sireum/ST;
   #52 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
   #53 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/String;>;Lscala/collection/immutable/Seq<Lorg/sireum/ST$Arg;>;Ljava/lang/String;)Lorg/sireum/ST;
   #54 = NameAndType        #42:#52       // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
   #55 = Methodref          #45.#54       // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
   #56 = Utf8               Lscala/collection/immutable/Seq;
   #57 = Utf8               isWs
   #58 = Utf8               (C)Z
   #59 = Utf8               c
   #60 = NameAndType        #57:#58       // isWs:(C)Z
   #61 = Methodref          #45.#60       // org/sireum/ST$.isWs:(C)Z
   #62 = Utf8               C
   #63 = Utf8               $cannotMixImmutableAndMutable
   #64 = Utf8               ()Lscala/runtime/Nothing$;
   #65 = Utf8               $cannotMixImmutableAndMutable$
   #66 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #67 = NameAndType        #65:#66       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #68 = InterfaceMethodref #6.#67        // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #69 = Utf8               this
   #70 = Utf8               Lorg/sireum/ST;
   #71 = Utf8               $hasEquals
   #72 = Utf8               ()Z
   #73 = Utf8               $hasEquals$
   #74 = Utf8               (Lorg/sireum/Immutable;)Z
   #75 = NameAndType        #73:#74       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #76 = InterfaceMethodref #6.#75        // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #77 = Utf8               $hasString
   #78 = Utf8               $hasString$
   #79 = NameAndType        #78:#74       // $hasString$:(Lorg/sireum/Immutable;)Z
   #80 = InterfaceMethodref #6.#79        // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #81 = Utf8               $clone
   #82 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #83 = Utf8               org/sireum/$internal/ImmutableMarker
   #84 = Class              #83           // org/sireum/$internal/ImmutableMarker
   #85 = Utf8               $clone$
   #86 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #87 = NameAndType        #85:#86       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #88 = InterfaceMethodref #84.#87       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #89 = Utf8               ()[Ljava/lang/String;
   #90 = NameAndType        #35:#34       // parts:[Ljava/lang/String;
   #91 = Fieldref           #2.#90        // org/sireum/ST.parts:[Ljava/lang/String;
   #92 = Utf8               ()[Lorg/sireum/ST$Arg;
   #93 = NameAndType        #36:#37       // args:[Lorg/sireum/ST$Arg;
   #94 = Fieldref           #2.#93        // org/sireum/ST.args:[Lorg/sireum/ST$Arg;
   #95 = Utf8               ()Ljava/lang/String;
   #96 = NameAndType        #38:#39       // source:Ljava/lang/String;
   #97 = Fieldref           #2.#96        // org/sireum/ST.source:Ljava/lang/String;
   #98 = Utf8               compactParts$lzycompute
   #99 = NameAndType        #40:#41       // bitmap$0:Z
  #100 = Fieldref           #2.#99        // org/sireum/ST.bitmap$0:Z
  #101 = Utf8               scala/collection/ArrayOps$
  #102 = Class              #101          // scala/collection/ArrayOps$
  #103 = Utf8               Lscala/collection/ArrayOps$;
  #104 = NameAndType        #46:#103      // MODULE$:Lscala/collection/ArrayOps$;
  #105 = Fieldref           #102.#104     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #106 = Utf8               scala/Predef$
  #107 = Class              #106          // scala/Predef$
  #108 = Utf8               Lscala/Predef$;
  #109 = NameAndType        #46:#108      // MODULE$:Lscala/Predef$;
  #110 = Fieldref           #107.#109     // scala/Predef$.MODULE$:Lscala/Predef$;
  #111 = NameAndType        #35:#89       // parts:()[Ljava/lang/String;
  #112 = Methodref          #2.#111       // org/sireum/ST.parts:()[Ljava/lang/String;
  #113 = Utf8               [Ljava/lang/Object;
  #114 = Class              #113          // "[Ljava/lang/Object;"
  #115 = Utf8               refArrayOps
  #116 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #117 = NameAndType        #115:#116     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #118 = Methodref          #107.#117     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #120 = MethodType         #119          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Utf8               $anonfun$compactParts$1
  #122 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #123 = NameAndType        #121:#122     // $anonfun$compactParts$1:(Ljava/lang/String;)Ljava/lang/String;
  #124 = Methodref          #2.#123       // org/sireum/ST.$anonfun$compactParts$1:(Ljava/lang/String;)Ljava/lang/String;
  #125 = MethodHandle       6:#124        // REF_invokeStatic org/sireum/ST.$anonfun$compactParts$1:(Ljava/lang/String;)Ljava/lang/String;
  #126 = MethodType         #122          //  (Ljava/lang/String;)Ljava/lang/String;
  #127 = Integer            5
  #128 = Integer            1
  #129 = Utf8               java/lang/invoke/LambdaMetafactory
  #130 = Class              #129          // java/lang/invoke/LambdaMetafactory
  #131 = Utf8               altMetafactory
  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #133 = NameAndType        #131:#132     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #134 = Methodref          #130.#133     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = MethodHandle       6:#134        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = Utf8               ()Lscala/Function1;
  #137 = NameAndType        #42:#136      // apply:()Lscala/Function1;
  #138 = InvokeDynamic      #0:#137       // #0:apply:()Lscala/Function1;
  #139 = Utf8               scala/reflect/ClassTag$
  #140 = Class              #139          // scala/reflect/ClassTag$
  #141 = Utf8               Lscala/reflect/ClassTag$;
  #142 = NameAndType        #46:#141      // MODULE$:Lscala/reflect/ClassTag$;
  #143 = Fieldref           #140.#142     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #144 = Utf8               java/lang/String
  #145 = Class              #144          // java/lang/String
  #146 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #147 = NameAndType        #42:#146      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #148 = Methodref          #140.#147     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #149 = Utf8               map$extension
  #150 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #151 = NameAndType        #149:#150     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #152 = Methodref          #102.#151     // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #153 = Class              #34           // "[Ljava/lang/String;"
  #154 = NameAndType        #33:#34       // compactParts:[Ljava/lang/String;
  #155 = Fieldref           #2.#154       // org/sireum/ST.compactParts:[Ljava/lang/String;
  #156 = Utf8               java/lang/Throwable
  #157 = Class              #156          // java/lang/Throwable
  #158 = NameAndType        #98:#89       // compactParts$lzycompute:()[Ljava/lang/String;
  #159 = Methodref          #2.#158       // org/sireum/ST.compactParts$lzycompute:()[Ljava/lang/String;
  #160 = Utf8               render
  #161 = Utf8               (Lorg/sireum/ST;Z)Ljava/lang/String;
  #162 = NameAndType        #160:#161     // render:(Lorg/sireum/ST;Z)Ljava/lang/String;
  #163 = Methodref          #45.#162      // org/sireum/ST$.render:(Lorg/sireum/ST;Z)Ljava/lang/String;
  #164 = Utf8               renderCompact
  #165 = Utf8               hashCode
  #166 = Utf8               ()I
  #167 = Utf8               org/sireum/package$
  #168 = Class              #167          // org/sireum/package$
  #169 = Utf8               Lorg/sireum/package$;
  #170 = NameAndType        #46:#169      // MODULE$:Lorg/sireum/package$;
  #171 = Fieldref           #168.#170     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #172 = Utf8               Cannot hash Slang ST
  #173 = String             #172          // Cannot hash Slang ST
  #174 = Utf8               halt
  #175 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #176 = NameAndType        #174:#175     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #177 = Methodref          #168.#176     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #178 = Utf8               equals
  #179 = Utf8               (Ljava/lang/Object;)Z
  #180 = Utf8               other
  #181 = Utf8               Cannot test equality in Slang ST
  #182 = String             #181          // Cannot test equality in Slang ST
  #183 = Utf8               Ljava/lang/Object;
  #184 = Utf8               toString
  #185 = NameAndType        #38:#95       // source:()Ljava/lang/String;
  #186 = Methodref          #2.#185       // org/sireum/ST.source:()Ljava/lang/String;
  #187 = Utf8               string
  #188 = Utf8               org/sireum/String$
  #189 = Class              #188          // org/sireum/String$
  #190 = Utf8               Lorg/sireum/String$;
  #191 = NameAndType        #46:#190      // MODULE$:Lorg/sireum/String$;
  #192 = Fieldref           #189.#191     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #193 = NameAndType        #42:#122      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #194 = Methodref          #189.#193     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #195 = Utf8               ()Ljava/lang/Object;
  #196 = NameAndType        #81:#82       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #197 = Methodref          #2.#196       // org/sireum/ST.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #198 = Utf8               $anonfun$compactParts$2
  #199 = Utf8               (Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;C)V
  #200 = Utf8               lastWs$2
  #201 = Utf8               sb$2
  #202 = Utf8               scala/runtime/BooleanRef
  #203 = Class              #202          // scala/runtime/BooleanRef
  #204 = Utf8               elem
  #205 = NameAndType        #204:#41      // elem:Z
  #206 = Fieldref           #203.#205     // scala/runtime/BooleanRef.elem:Z
  #207 = Utf8               java/lang/StringBuilder
  #208 = Class              #207          // java/lang/StringBuilder
  #209 = Utf8               length
  #210 = NameAndType        #209:#166     // length:()I
  #211 = Methodref          #208.#210     // java/lang/StringBuilder.length:()I
  #212 = Utf8               setCharAt
  #213 = Utf8               (IC)V
  #214 = NameAndType        #212:#213     // setCharAt:(IC)V
  #215 = Methodref          #208.#214     // java/lang/StringBuilder.setCharAt:(IC)V
  #216 = Utf8               scala/runtime/BoxedUnit
  #217 = Class              #216          // scala/runtime/BoxedUnit
  #218 = Utf8               UNIT
  #219 = Utf8               Lscala/runtime/BoxedUnit;
  #220 = NameAndType        #218:#219     // UNIT:Lscala/runtime/BoxedUnit;
  #221 = Fieldref           #217.#220     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #222 = Utf8               append
  #223 = Utf8               (C)Ljava/lang/StringBuilder;
  #224 = NameAndType        #222:#223     // append:(C)Ljava/lang/StringBuilder;
  #225 = Methodref          #208.#224     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #226 = Utf8               Lscala/runtime/BooleanRef;
  #227 = Utf8               Ljava/lang/StringBuilder;
  #228 = Utf8               part
  #229 = Methodref          #145.#210     // java/lang/String.length:()I
  #230 = Utf8               <init>
  #231 = Utf8               (I)V
  #232 = NameAndType        #230:#231     // "<init>":(I)V
  #233 = Methodref          #208.#232     // java/lang/StringBuilder."<init>":(I)V
  #234 = Utf8               create
  #235 = Utf8               (Z)Lscala/runtime/BooleanRef;
  #236 = NameAndType        #234:#235     // create:(Z)Lscala/runtime/BooleanRef;
  #237 = Methodref          #203.#236     // scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
  #238 = Utf8               scala/collection/StringOps$
  #239 = Class              #238          // scala/collection/StringOps$
  #240 = Utf8               Lscala/collection/StringOps$;
  #241 = NameAndType        #46:#240      // MODULE$:Lscala/collection/StringOps$;
  #242 = Fieldref           #239.#241     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #243 = Utf8               augmentString
  #244 = NameAndType        #243:#122     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #245 = Methodref          #107.#244     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #246 = Utf8               $anonfun$compactParts$2$adapted
  #247 = Utf8               (Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #248 = NameAndType        #246:#247     // $anonfun$compactParts$2$adapted:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #249 = Methodref          #2.#248       // org/sireum/ST.$anonfun$compactParts$2$adapted:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #250 = MethodHandle       6:#249        // REF_invokeStatic org/sireum/ST.$anonfun$compactParts$2$adapted:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #251 = Utf8               (Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;)Lscala/Function1;
  #252 = NameAndType        #42:#251      // apply:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;)Lscala/Function1;
  #253 = InvokeDynamic      #1:#252       // #1:apply:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;)Lscala/Function1;
  #254 = Utf8               foreach$extension
  #255 = Utf8               (Ljava/lang/String;Lscala/Function1;)V
  #256 = NameAndType        #254:#255     // foreach$extension:(Ljava/lang/String;Lscala/Function1;)V
  #257 = Methodref          #239.#256     // scala/collection/StringOps$.foreach$extension:(Ljava/lang/String;Lscala/Function1;)V
  #258 = NameAndType        #184:#95      // toString:()Ljava/lang/String;
  #259 = Methodref          #208.#258     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #260 = Utf8               sb
  #261 = Utf8               lastWs
  #262 = Utf8               r
  #263 = Utf8               ([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)V
  #264 = Utf8               ()V
  #265 = NameAndType        #230:#264     // "<init>":()V
  #266 = Methodref          #4.#265       // java/lang/Object."<init>":()V
  #267 = Utf8               $init$
  #268 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #269 = NameAndType        #267:#268     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #270 = InterfaceMethodref #84.#269      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #271 = Utf8               (Lorg/sireum/Immutable;)V
  #272 = NameAndType        #267:#271     // $init$:(Lorg/sireum/Immutable;)V
  #273 = InterfaceMethodref #6.#272       // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #274 = Utf8               scala/runtime/BoxesRunTime
  #275 = Class              #274          // scala/runtime/BoxesRunTime
  #276 = Utf8               unboxToChar
  #277 = Utf8               (Ljava/lang/Object;)C
  #278 = NameAndType        #276:#277     // unboxToChar:(Ljava/lang/Object;)C
  #279 = Methodref          #275.#278     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #280 = NameAndType        #198:#199     // $anonfun$compactParts$2:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;C)V
  #281 = Methodref          #2.#280       // org/sireum/ST.$anonfun$compactParts$2:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;C)V
  #282 = Utf8               $deserializeLambda$
  #283 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #284 = Utf8               scala/runtime/LambdaDeserialize
  #285 = Class              #284          // scala/runtime/LambdaDeserialize
  #286 = Utf8               bootstrap
  #287 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #288 = NameAndType        #286:#287     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #289 = Methodref          #285.#288     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #290 = MethodHandle       6:#289        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #291 = Utf8               lambdaDeserialize
  #292 = NameAndType        #291:#283     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #293 = InvokeDynamic      #2:#292       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #294 = Utf8               Code
  #295 = Utf8               LocalVariableTable
  #296 = Utf8               MethodParameters
  #297 = Utf8               Signature
  #298 = Utf8               LineNumberTable
  #299 = Utf8               StackMapTable
  #300 = Utf8               InnerClasses
  #301 = Utf8               SourceFile
  #302 = Utf8               RuntimeVisibleAnnotations
  #303 = Utf8               BootstrapMethods
  #304 = Utf8               ScalaInlineInfo
  #305 = Utf8               ScalaSig
{
  private java.lang.String[] compactParts;
    descriptor: [Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private final java.lang.String[] parts;
    descriptor: [Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.ST$Arg[] args;
    descriptor: [Lorg/sireum/ST$Arg;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String source;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static org.sireum.ST apply(java.lang.String[], org.sireum.ST$Arg[], java.lang.String);
    descriptor: ([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)Lorg/sireum/ST;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #49                 // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #51                 // Method org/sireum/ST$.apply:([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)Lorg/sireum/ST;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 parts   [Ljava/lang/String;
            0      10     1  args   [Lorg/sireum/ST$Arg;
            0      10     2 source   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      parts                          final
      args                           final
      source                         final

  public static org.sireum.ST apply(scala.collection.immutable.Seq<java.lang.String>, scala.collection.immutable.Seq<org.sireum.ST$Arg>, java.lang.String);
    descriptor: (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #49                 // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #55                 // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 parts   Lscala/collection/immutable/Seq;
            0      10     1  args   Lscala/collection/immutable/Seq;
            0      10     2 source   Ljava/lang/String;
    Signature: #53                          // (Lscala/collection/immutable/Seq<Ljava/lang/String;>;Lscala/collection/immutable/Seq<Lorg/sireum/ST$Arg;>;Ljava/lang/String;)Lorg/sireum/ST;
    MethodParameters:
      Name                           Flags
      parts                          final
      args                           final
      source                         final

  public static boolean isWs(char);
    descriptor: (C)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #49                 // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: iload_0
         4: invokevirtual #61                 // Method org/sireum/ST$.isWs:(C)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #76                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public java.lang.String[] parts();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #91                 // Field parts:[Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public org.sireum.ST$Arg[] args();
    descriptor: ()[Lorg/sireum/ST$Arg;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #94                 // Field args:[Lorg/sireum/ST$Arg;
         4: areturn
      LineNumberTable:
        line 232: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public java.lang.String source();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #97                 // Field source:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  private java.lang.String[] compactParts$lzycompute();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #100                // Field bitmap$0:Z
         8: ifne          55
        11: aload_0
        12: getstatic     #105                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        15: getstatic     #110                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: aload_0
        19: invokevirtual #112                // Method parts:()[Ljava/lang/String;
        22: checkcast     #114                // class "[Ljava/lang/Object;"
        25: invokevirtual #118                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        28: invokedynamic #138,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        33: getstatic     #143                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        36: ldc           #145                // class java/lang/String
        38: invokevirtual #148                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        41: invokevirtual #152                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        44: checkcast     #153                // class "[Ljava/lang/String;"
        47: putfield      #155                // Field compactParts:[Ljava/lang/String;
        50: aload_0
        51: iconst_1
        52: putfield      #100                // Field bitmap$0:Z
        55: aload_1
        56: monitorexit
        57: goto          63
        60: aload_1
        61: monitorexit
        62: athrow
        63: aload_0
        64: getfield      #155                // Field compactParts:[Ljava/lang/String;
        67: areturn
      Exception table:
         from    to  target type
             4    55    60   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 55
          locals = [ class org/sireum/ST ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 234: 0
        line 235: 15
        line 234: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lorg/sireum/ST;

  public java.lang.String[] compactParts();
    descriptor: ()[Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #100                // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #159                // Method compactParts$lzycompute:()[Ljava/lang/String;
        11: goto          18
        14: aload_0
        15: getfield      #155                // Field compactParts:[Ljava/lang/String;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class "[Ljava/lang/String;" ]
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/sireum/ST;

  public java.lang.String render();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #49                 // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: aload_0
         4: iconst_0
         5: invokevirtual #163                // Method org/sireum/ST$.render:(Lorg/sireum/ST;Z)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 261: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/ST;

  public java.lang.String renderCompact();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #49                 // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: aload_0
         4: iconst_1
         5: invokevirtual #163                // Method org/sireum/ST$.render:(Lorg/sireum/ST;Z)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/ST;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #171                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: ldc           #173                // String Cannot hash Slang ST
         5: invokevirtual #177                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         8: athrow
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/ST;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #171                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: ldc           #182                // String Cannot test equality in Slang ST
         5: invokevirtual #177                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
         8: athrow
      LineNumberTable:
        line 267: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/sireum/ST;
            0       9     1 other   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method source:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 269: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #192                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
         3: aload_0
         4: invokevirtual #186                // Method source:()Ljava/lang/String;
         7: invokevirtual #194                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        10: areturn
      LineNumberTable:
        line 271: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/ST;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #197                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ST;

  public static final void $anonfun$compactParts$2(scala.runtime.BooleanRef, java.lang.StringBuilder, char);
    descriptor: (Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;C)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #49                 // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: iload_2
         4: invokevirtual #61                 // Method org/sireum/ST$.isWs:(C)Z
         7: ifeq          81
        10: iload_2
        11: bipush        10
        13: if_icmpne     56
        16: aload_0
        17: getfield      #206                // Field scala/runtime/BooleanRef.elem:Z
        20: ifeq          41
        23: aload_1
        24: aload_1
        25: invokevirtual #211                // Method java/lang/StringBuilder.length:()I
        28: iconst_1
        29: isub
        30: bipush        10
        32: invokevirtual #215                // Method java/lang/StringBuilder.setCharAt:(IC)V
        35: getstatic     #221                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        38: goto          47
        41: aload_1
        42: bipush        10
        44: invokevirtual #225                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        47: pop
        48: aload_0
        49: iconst_1
        50: putfield      #206                // Field scala/runtime/BooleanRef.elem:Z
        53: goto          78
        56: aload_0
        57: getfield      #206                // Field scala/runtime/BooleanRef.elem:Z
        60: ifne          78
        63: aload_1
        64: bipush        32
        66: invokevirtual #225                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        69: pop
        70: aload_0
        71: iconst_1
        72: putfield      #206                // Field scala/runtime/BooleanRef.elem:Z
        75: goto          78
        78: goto          92
        81: aload_1
        82: iload_2
        83: invokevirtual #225                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        86: pop
        87: aload_0
        88: iconst_0
        89: putfield      #206                // Field scala/runtime/BooleanRef.elem:Z
        92: return
      StackMapTable: number_of_entries = 6
        frame_type = 41 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 8 /* same */
        frame_type = 21 /* same */
        frame_type = 2 /* same */
        frame_type = 10 /* same */
      LineNumberTable:
        line 239: 0
        line 240: 10
        line 241: 16
        line 242: 23
        line 244: 41
        line 246: 48
        line 247: 56
        line 248: 63
        line 249: 70
        line 247: 78
        line 252: 81
        line 253: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      93     0 lastWs$2   Lscala/runtime/BooleanRef;
            0      93     1  sb$2   Ljava/lang/StringBuilder;
            0      93     2     c   C
    MethodParameters:
      Name                           Flags
      lastWs$2                       final
      sb$2                           final
      c                              final

  public static final java.lang.String $anonfun$compactParts$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=1
         0: new           #208                // class java/lang/StringBuilder
         3: dup
         4: aload_0
         5: invokevirtual #229                // Method java/lang/String.length:()I
         8: invokespecial #233                // Method java/lang/StringBuilder."<init>":(I)V
        11: astore_1
        12: iconst_0
        13: invokestatic  #237                // Method scala/runtime/BooleanRef.create:(Z)Lscala/runtime/BooleanRef;
        16: astore_2
        17: getstatic     #242                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        20: getstatic     #110                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        23: aload_0
        24: invokevirtual #245                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        27: aload_2
        28: aload_1
        29: invokedynamic #253,  0            // InvokeDynamic #1:apply:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;)Lscala/Function1;
        34: invokevirtual #257                // Method scala/collection/StringOps$.foreach$extension:(Ljava/lang/String;Lscala/Function1;)V
        37: aload_1
        38: invokevirtual #259                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: astore_3
        42: aload_3
        43: areturn
      LineNumberTable:
        line 236: 0
        line 237: 12
        line 238: 20
        line 256: 37
        line 257: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      31     1    sb   Ljava/lang/StringBuilder;
           17      26     2 lastWs   Lscala/runtime/BooleanRef;
           42       1     3     r   Ljava/lang/String;
            0      44     0  part   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      part                           final

  public org.sireum.ST(java.lang.String[], org.sireum.ST$Arg[], java.lang.String);
    descriptor: ([Ljava/lang/String;[Lorg/sireum/ST$Arg;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #91                 // Field parts:[Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #94                 // Field args:[Lorg/sireum/ST$Arg;
        10: aload_0
        11: aload_3
        12: putfield      #97                 // Field source:Ljava/lang/String;
        15: aload_0
        16: invokespecial #266                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: invokestatic  #270                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
        23: aload_0
        24: invokestatic  #273                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        27: return
      LineNumberTable:
        line 231: 0
        line 232: 5
        line 233: 10
        line 231: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/sireum/ST;
            0      28     1 parts   [Ljava/lang/String;
            0      28     2  args   [Lorg/sireum/ST$Arg;
            0      28     3 source   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      parts                          final
      args                           final
      source                         final

  public static final java.lang.Object $anonfun$compactParts$2$adapted(scala.runtime.BooleanRef, java.lang.StringBuilder, java.lang.Object);
    descriptor: (Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #279                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         6: invokestatic  #281                // Method $anonfun$compactParts$2:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;C)V
         9: getstatic     #221                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        12: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 lastWs$2   Lscala/runtime/BooleanRef;
            0      13     1  sb$2   Ljava/lang/StringBuilder;
            0      13     2     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      lastWs$2                       final
      sb$2                           final
      c                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #293,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #20= #19 of #2;     // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #23= #22 of #2;           // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #26= #25 of #2;           // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #29= #28 of #2;     // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #32= #31 of #2;           // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
SourceFile: "ST.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005Ew!B\u00181\u0011\u0003)d!B\u001c1\u0011\u0003A\u0004\"B \u0002\t\u0003\u0001eaB!\u0002!\u0003\r\nCQ\u0004\b\u0003o\t\u0001\u0012AA\u001d\r\u0019!\u0015\u0001#\u0001\u0002<!1q(\u0002C\u0001\u0003{Aq!a\u0010\u0006\t\u0003\t\t\u0005C\u0005\u0002`\u0015\t\n\u0011\"\u0001\u0002b!9\u0011qO\u0003\u0005\u0002\u0005ed\u0001\u0002#\u0002\u0005\u0015C\u0001\u0002\u0013\u0006\u0003\u0006\u0004%\t!\u0013\u0005\t\u001f*\u0011\t\u0011)A\u0005\u0015\"A\u0001K\u0003BC\u0002\u0013\u0005\u0011\u000b\u0003\u0005Z\u0015\t\u0005\t\u0015!\u0003S\u0011\u0015y$\u0002\"\u0001[\u000f\u001d\tY)\u0001E\u0001\u0003\u001b3aAX\u0001\t\u0002\u0005=\u0005BB \u0012\t\u0003\t\t\nC\u0004\u0002@E!\t!a%\t\u0013\u0005}\u0013#%A\u0005\u0002\u0005\u0005\u0004bBA<#\u0011\u0005\u00111\u0014\u0004\u0005=\u0006\u0011q\f\u0003\u0005I-\t\u0015\r\u0011\"\u0001a\u0011!yeC!A!\u0002\u0013\t\u0007\u0002\u0003)\u0017\u0005\u000b\u0007I\u0011A)\t\u0011e3\"\u0011!Q\u0001\nICaa\u0010\f\u0005\u0002\u0005=\u0002bBAR\u0003\u0011\u0005\u0011Q\u0015\u0005\u0007y\u0006!\t!!-\t\u000f\u0005}\u0012\u0001\"\u0001\u0002<\"9\u0011qH\u0001\u0005\u0002\u0005\u001dg\u0001B\u001c1\u0005\rD\u0001\"\u001c\u0011\u0003\u0006\u0004%\tA\u001c\u0005\ta\u0002\u0012\t\u0011)A\u0005_\"A\u0001\n\tBC\u0002\u0013\u0005\u0011\u000f\u0003\u0005PA\t\u0005\t\u0015!\u0003s\u0011!)\bE!b\u0001\n\u0003\t\u0006\u0002\u0003<!\u0005\u0003\u0005\u000b\u0011\u0002*\t\u000b}\u0002C\u0011A<\t\u0011m\u0004\u0003R1A\u0005\u00029DQ\u0001 \u0011\u0005\u0002uDa!!\u0001!\t\u0003i\bbBA\u0002A\u0011\u0005\u0013Q\u0001\u0005\b\u0003\u001b\u0001C\u0011IA\b\u0011\u001d\tY\u0002\tC!\u0003;Aa!!\f!\t\u0003i\u0018AA*U\u0015\t\t$\'\u0001\u0004tSJ,W/\u001c\u0006\u0002g\u0005\u0019qN]4\u0004\u0001A\u0011a\'A\u0007\u0002a\t\u00111\u000bV\n\u0003\u0003e\u0002\"AO\u001f\u000e\u0003mR\u0011\u0001P\u0001\u0006g\u000e\fG.Y\u0005\u0003}m\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$h\bF\u00016\u0005\r\t%oZ\n\u0003\u0007eJ3a\u0001\u0006\u0017\u0005\r\te._\n\u0004\u0015e2\u0005CA$\u0004\u001b\u0005\t\u0011\u0001B1sON,\u0012A\u0013\t\u0004u-k\u0015B\u0001\'<\u0005\u0015\t%O]1z!\tQd*\u0003\u0002Ew\u0005)\u0011M]4tA\u0005\u00191/\u001a9\u0016\u0003I\u0003\"a\u0015,\u000f\u0005i\"\u0016BA+<\u0003\u0019\u0001&/\u001a3fM&\u0011q\u000b\u0017\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005U[\u0014\u0001B:fa\u0002\"2a\u0017/^!\t9%\u0002C\u0003I\u001f\u0001\u0007!\nC\u0003Q\u001f\u0001\u0007!KA\u0003UK6\u0004HnE\u0002\u0017s\u0019+\u0012!\u0019\t\u0004u-\u0013\u0007C\u0001\u001c!\'\u0011\u0001\u0013\bZ4\u0011\u0005Y*\u0017B\u000141\u0005%IU.\\;uC\ndW\r\u0005\u0002iW6\t\u0011N\u0003\u0002ka\u0005IA%\u001b8uKJt\u0017\r\\\u0005\u0003Y&\u0014\u0001b\u0015+NCJ\\WM]\u0001\u0006a\u0006\u0014Ho]\u000b\u0002_B\u0019!h\u0013*\u0002\rA\f\'\u000f^:!+\u0005\u0011\bc\u0001\u001eLgB\u0011Ao\u0001\b\u0003m\u0001\taa]8ve\u000e,\u0017aB:pkJ\u001cW\r\t\u000b\u0005EbL(\u0010C\u0003nO\u0001\u0007q\u000eC\u0003IO\u0001\u0007!\u000fC\u0003vO\u0001\u0007!+\u0001\u0007d_6\u0004\u0018m\u0019;QCJ$8/\u0001\u0004sK:$WM]\u000b\u0002}B\u0011ag`\u0005\u0003/B\nQB]3oI\u0016\u00148i\\7qC\u000e$\u0018\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005\u001d\u0001c\u0001\u001e\u0002\n%\u0019\u00111B\u001e\u0003\u0007%sG/\u0001\u0004fcV\fGn\u001d\u000b\u0005\u0003#\t9\u0002E\u0002;\u0003\'I1!!\u0006<\u0005\u001d\u0011un\u001c7fC:Da!!\u0007-\u0001\u0004i\u0015!B8uQ\u0016\u0014\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005}\u0001\u0003BA\u0011\u0003Wi!!a\t\u000b\t\u0005\u0015\u0012qE\u0001\u0005Y\u0006twM\u0003\u0002\u0002*\u0005!!.\u0019<b\u0013\r9\u00161E\u0001\u0007gR\u0014\u0018N\\4\u0015\r\u0005E\u00121GA\u001b!\t9e\u0003C\u0003I7\u0001\u0007\u0011\rC\u0003Q7\u0001\u0007!+A\u0002B]f\u0004\"aR\u0003\u0014\u0005\u0015IDCAA\u001d\u0003\u0015\t\u0007\u000f\u001d7z)\u0015Y\u00161IA/\u0011\u0019Au\u00011\u0001\u0002FA)\u0011qIA,\u001b:!\u0011\u0011JA*\u001d\u0011\tY%!\u0015\u000e\u0005\u00055#bAA(i\u00051AH]8pizJ\u0011\u0001P\u0005\u0004\u0003+Z\u0014a\u00029bG.\fw-Z\u0005\u0005\u00033\nYFA\u0002TKFT1!!\u0016<\u0011\u001d\u0001v\u0001%AA\u0002I\u000bq\"\u00199qYf$C-\u001a4bk2$HEM\u000b\u0003\u0003GR3AUA3W\t\t9\u0007\u0005\u0003\u0002j\u0005MTBAA6\u0015\u0011\ti\'a\u001c\u0002\u0013Ut7\r[3dW\u0016$\'bAA9w\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\u0005U\u00141\u000e\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017aB;oCB\u0004H.\u001f\u000b\u0005\u0003w\n9\tE\u0003;\u0003{\n\t)C\u0002\u0002\u0000m\u0012AaU8nKB1!(a!\u0002FIK1!!\"<\u0005\u0019!V\u000f\u001d7fe!1\u0011\u0011R\u0005A\u0002m\u000b\u0011a\\\u0001\u0006)\u0016l\u0007\u000f\u001c\t\u0003\u000fF\u0019\"!E\u001d\u0015\u0005\u00055ECBA\u0019\u0003+\u000bI\n\u0003\u0004I\'\u0001\u0007\u0011q\u0013\t\u0006\u0003\u000f\n9F\u0019\u0005\b!N\u0001\n\u00111\u0001S)\u0011\ti*!)\u0011\u000bi\ni(a(\u0011\ri\n\u0019)a&S\u0011\u001d\tI)\u0006a\u0001\u0003c\tA![:XgR!\u0011\u0011CAT\u0011\u001d\tI\u000b\ba\u0001\u0003W\u000b\u0011a\u0019\t\u0004u\u00055\u0016bAAXw\t!1\t[1s)\u0015q\u00181WA\\\u0011\u0019\t),\ba\u0001E\u0006\tA\u000fC\u0004\u0002:v\u0001\r!!\u0005\u0002\u0013%\u001c8i\\7qC\u000e$Hc\u00022\u0002>\u0006\u0005\u0017Q\u0019\u0005\u0007[z\u0001\r!a0\u0011\u000b\u0005\u001d\u0013q\u000b*\t\r!s\u0002\u0019AAb!\u0015\t9%a\u0016G\u0011\u0015)h\u00041\u0001S)\u001d\u0011\u0017\u0011ZAf\u0003\u001fDQ!\\\u0010A\u0002=Da\u0001S\u0010A\u0002\u00055\u0007c\u0001\u001eL\r\")Qo\ba\u0001%\u0002"
    )
BootstrapMethods:
  0: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #125 REF_invokeStatic org/sireum/ST.$anonfun$compactParts$1:(Ljava/lang/String;)Ljava/lang/String;
      #126 (Ljava/lang/String;)Ljava/lang/String;
      #127 5
      #128 1
      #126 (Ljava/lang/String;)Ljava/lang/String;
  1: #135 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #250 REF_invokeStatic org/sireum/ST.$anonfun$compactParts$2$adapted:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #128 1
  2: #290 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #125 REF_invokeStatic org/sireum/ST.$anonfun$compactParts$1:(Ljava/lang/String;)Ljava/lang/String;
      #250 REF_invokeStatic org/sireum/ST.$anonfun$compactParts$2$adapted:(Lscala/runtime/BooleanRef;Ljava/lang/StringBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x68 (unknown attribute)
   01 01 00 14 00 79 00 7A 01 00 C6 00 C7 01 00 F6
   00 F7 01 00 3F 00 40 01 00 51 00 C3 01 00 51 00
   52 01 00 47 00 48 01 00 4D 00 48 01 00 E6 01 07
   01 00 24 00 5C 01 00 21 00 59 01 00 62 00 59 01
   00 B2 00 B3 01 00 A5 00 A6 01 00 23 00 59 01 00
   A0 00 5F 01 00 A4 00 5F 01 00 26 00 5F 01 00 BB
   00 5F 01 00 B8 00 5F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
