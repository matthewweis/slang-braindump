Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/TypeOf$Macros.class
  Last modified May 29, 2022; size 5962 bytes
  SHA-256 checksum c051ac5d2316675956233d0bb7b4e570f29947994ab04f85257bac75808b7831
  Compiled from "typeoperators.scala"
public final class shapeless.TypeOf$Macros
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/TypeOf$Macros
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 4
Constant pool:
    #1 = Utf8               shapeless/TypeOf$Macros
    #2 = Class              #1            // shapeless/TypeOf$Macros
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               typeoperators.scala
    #6 = Utf8               scala/reflect/api/Constants$ConstantApi
    #7 = Class              #6            // scala/reflect/api/Constants$ConstantApi
    #8 = Utf8               scala/reflect/api/Constants
    #9 = Class              #8            // scala/reflect/api/Constants
   #10 = Utf8               ConstantApi
   #11 = Utf8               scala/reflect/api/Constants$ConstantExtractor
   #12 = Class              #11           // scala/reflect/api/Constants$ConstantExtractor
   #13 = Utf8               ConstantExtractor
   #14 = Utf8               scala/reflect/api/Internals$InternalApi
   #15 = Class              #14           // scala/reflect/api/Internals$InternalApi
   #16 = Utf8               scala/reflect/api/Internals
   #17 = Class              #16           // scala/reflect/api/Internals
   #18 = Utf8               InternalApi
   #19 = Utf8               scala/reflect/api/Internals$InternalApi$DecoratorApi
   #20 = Class              #19           // scala/reflect/api/Internals$InternalApi$DecoratorApi
   #21 = Utf8               DecoratorApi
   #22 = Utf8               scala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi
   #23 = Class              #22           // scala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi
   #24 = Utf8               TreeDecoratorApi
   #25 = Utf8               scala/reflect/api/Symbols$ClassSymbolApi
   #26 = Class              #25           // scala/reflect/api/Symbols$ClassSymbolApi
   #27 = Utf8               scala/reflect/api/Symbols
   #28 = Class              #27           // scala/reflect/api/Symbols
   #29 = Utf8               ClassSymbolApi
   #30 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #31 = Class              #30           // scala/reflect/api/Symbols$SymbolApi
   #32 = Utf8               SymbolApi
   #33 = Utf8               scala/reflect/api/Trees$LiteralApi
   #34 = Class              #33           // scala/reflect/api/Trees$LiteralApi
   #35 = Utf8               scala/reflect/api/Trees
   #36 = Class              #35           // scala/reflect/api/Trees
   #37 = Utf8               LiteralApi
   #38 = Utf8               scala/reflect/api/Trees$LiteralExtractor
   #39 = Class              #38           // scala/reflect/api/Trees$LiteralExtractor
   #40 = Utf8               LiteralExtractor
   #41 = Utf8               scala/reflect/api/Trees$TreeApi
   #42 = Class              #41           // scala/reflect/api/Trees$TreeApi
   #43 = Utf8               TreeApi
   #44 = Utf8               scala/reflect/api/Trees$TypedApi
   #45 = Class              #44           // scala/reflect/api/Trees$TypedApi
   #46 = Utf8               TypedApi
   #47 = Utf8               scala/reflect/api/Trees$TypedExtractor
   #48 = Class              #47           // scala/reflect/api/Trees$TypedExtractor
   #49 = Utf8               TypedExtractor
   #50 = Utf8               scala/reflect/api/Types$TypeApi
   #51 = Class              #50           // scala/reflect/api/Types$TypeApi
   #52 = Utf8               scala/reflect/api/Types
   #53 = Class              #52           // scala/reflect/api/Types
   #54 = Utf8               TypeApi
   #55 = Utf8               scala/reflect/macros/Universe$MacroInternalApi
   #56 = Class              #55           // scala/reflect/macros/Universe$MacroInternalApi
   #57 = Utf8               scala/reflect/macros/Universe
   #58 = Class              #57           // scala/reflect/macros/Universe
   #59 = Utf8               MacroInternalApi
   #60 = Utf8               scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi
   #61 = Class              #60           // scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi
   #62 = Utf8               MacroDecoratorApi
   #63 = Utf8               scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi
   #64 = Class              #63           // scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi
   #65 = Utf8               MacroTreeDecoratorApi
   #66 = Utf8               shapeless/TypeOf
   #67 = Class              #66           // shapeless/TypeOf
   #68 = Utf8               Macros
   #69 = Utf8               shapeless/TypeOf$Macros$$anon$3
   #70 = Class              #69           // shapeless/TypeOf$Macros$$anon$3
   #71 = Utf8               c
   #72 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #73 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #74 = NameAndType        #71:#72       // c:Lscala/reflect/macros/whitebox/Context;
   #75 = Fieldref           #2.#74        // shapeless/TypeOf$Macros.c:Lscala/reflect/macros/whitebox/Context;
   #76 = Utf8               this
   #77 = Utf8               Lshapeless/TypeOf$Macros;
   #78 = Utf8               selectDynamic
   #79 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #80 = Utf8               code
   #81 = Utf8               <init>
   #82 = Utf8               (Lshapeless/TypeOf$Macros;)V
   #83 = NameAndType        #81:#82       // "<init>":(Lshapeless/TypeOf$Macros;)V
   #84 = Methodref          #70.#83       // shapeless/TypeOf$Macros$$anon$3."<init>":(Lshapeless/TypeOf$Macros;)V
   #85 = Utf8               unapply
   #86 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #87 = NameAndType        #85:#86       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #88 = Methodref          #70.#87       // shapeless/TypeOf$Macros$$anon$3.unapply:(Ljava/lang/Object;)Lscala/Option;
   #89 = Utf8               scala/Option
   #90 = Class              #89           // scala/Option
   #91 = Utf8               isEmpty
   #92 = Utf8               ()Z
   #93 = NameAndType        #91:#92       // isEmpty:()Z
   #94 = Methodref          #90.#93       // scala/Option.isEmpty:()Z
   #95 = Utf8               get
   #96 = Utf8               ()Ljava/lang/Object;
   #97 = NameAndType        #95:#96       // get:()Ljava/lang/Object;
   #98 = Methodref          #90.#97       // scala/Option.get:()Ljava/lang/Object;
   #99 = Utf8               java/lang/String
  #100 = Class              #99           // java/lang/String
  #101 = Utf8               scala/MatchError
  #102 = Class              #101          // scala/MatchError
  #103 = Utf8               (Ljava/lang/Object;)V
  #104 = NameAndType        #81:#103      // "<init>":(Ljava/lang/Object;)V
  #105 = Methodref          #102.#104     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #106 = NameAndType        #71:#73       // c:()Lscala/reflect/macros/whitebox/Context;
  #107 = Methodref          #2.#106       // shapeless/TypeOf$Macros.c:()Lscala/reflect/macros/whitebox/Context;
  #108 = Utf8               scala/reflect/macros/whitebox/Context
  #109 = Class              #108          // scala/reflect/macros/whitebox/Context
  #110 = Utf8               parse
  #111 = Utf8               (Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #112 = NameAndType        #110:#111     // parse:(Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #113 = InterfaceMethodref #109.#112     // scala/reflect/macros/whitebox/Context.parse:(Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #114 = Utf8               universe
  #115 = Utf8               ()Lscala/reflect/macros/Universe;
  #116 = NameAndType        #114:#115     // universe:()Lscala/reflect/macros/Universe;
  #117 = InterfaceMethodref #109.#116     // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #118 = Utf8               TypedTag
  #119 = Utf8               ()Lscala/reflect/ClassTag;
  #120 = NameAndType        #118:#119     // TypedTag:()Lscala/reflect/ClassTag;
  #121 = Methodref          #58.#120      // scala/reflect/macros/Universe.TypedTag:()Lscala/reflect/ClassTag;
  #122 = Utf8               scala/reflect/ClassTag
  #123 = Class              #122          // scala/reflect/ClassTag
  #124 = InterfaceMethodref #123.#87      // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
  #125 = Utf8               Typed
  #126 = Utf8               ()Lscala/reflect/api/Trees$TypedExtractor;
  #127 = NameAndType        #125:#126     // Typed:()Lscala/reflect/api/Trees$TypedExtractor;
  #128 = Methodref          #58.#127      // scala/reflect/macros/Universe.Typed:()Lscala/reflect/api/Trees$TypedExtractor;
  #129 = Utf8               (Lscala/reflect/api/Trees$TypedApi;)Lscala/Option;
  #130 = NameAndType        #85:#129      // unapply:(Lscala/reflect/api/Trees$TypedApi;)Lscala/Option;
  #131 = Methodref          #48.#130      // scala/reflect/api/Trees$TypedExtractor.unapply:(Lscala/reflect/api/Trees$TypedApi;)Lscala/Option;
  #132 = Utf8               scala/Tuple2
  #133 = Class              #132          // scala/Tuple2
  #134 = Utf8               _1
  #135 = NameAndType        #134:#96      // _1:()Ljava/lang/Object;
  #136 = Methodref          #133.#135     // scala/Tuple2._1:()Ljava/lang/Object;
  #137 = Utf8               _2
  #138 = NameAndType        #137:#96      // _2:()Ljava/lang/Object;
  #139 = Methodref          #133.#138     // scala/Tuple2._2:()Ljava/lang/Object;
  #140 = Utf8               TYPEmode
  #141 = NameAndType        #140:#96      // TYPEmode:()Ljava/lang/Object;
  #142 = InterfaceMethodref #109.#141     // scala/reflect/macros/whitebox/Context.TYPEmode:()Ljava/lang/Object;
  #143 = Utf8               typecheck$default$3
  #144 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #145 = NameAndType        #143:#144     // typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
  #146 = InterfaceMethodref #109.#145     // scala/reflect/macros/whitebox/Context.typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
  #147 = Utf8               typecheck$default$4
  #148 = NameAndType        #147:#92      // typecheck$default$4:()Z
  #149 = InterfaceMethodref #109.#148     // scala/reflect/macros/whitebox/Context.typecheck$default$4:()Z
  #150 = Utf8               typecheck$default$5
  #151 = NameAndType        #150:#92      // typecheck$default$5:()Z
  #152 = InterfaceMethodref #109.#151     // scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
  #153 = Utf8               typecheck$default$6
  #154 = NameAndType        #153:#92      // typecheck$default$6:()Z
  #155 = InterfaceMethodref #109.#154     // scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
  #156 = Utf8               typecheck
  #157 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #158 = NameAndType        #156:#157     // typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #159 = InterfaceMethodref #109.#158     // scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #160 = Utf8               tpe
  #161 = NameAndType        #160:#144     // tpe:()Lscala/reflect/api/Types$TypeApi;
  #162 = InterfaceMethodref #42.#161      // scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
  #163 = Utf8               typecheck$default$2
  #164 = NameAndType        #163:#96      // typecheck$default$2:()Ljava/lang/Object;
  #165 = InterfaceMethodref #109.#164     // scala/reflect/macros/whitebox/Context.typecheck$default$2:()Ljava/lang/Object;
  #166 = Utf8               typeSymbol
  #167 = Utf8               ()Lscala/reflect/api/Symbols$SymbolApi;
  #168 = NameAndType        #166:#167     // typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
  #169 = Methodref          #51.#168      // scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
  #170 = Utf8               isClass
  #171 = NameAndType        #170:#92      // isClass:()Z
  #172 = InterfaceMethodref #31.#171      // scala/reflect/api/Symbols$SymbolApi.isClass:()Z
  #173 = Utf8               asClass
  #174 = Utf8               ()Lscala/reflect/api/Symbols$ClassSymbolApi;
  #175 = NameAndType        #173:#174     // asClass:()Lscala/reflect/api/Symbols$ClassSymbolApi;
  #176 = InterfaceMethodref #31.#175      // scala/reflect/api/Symbols$SymbolApi.asClass:()Lscala/reflect/api/Symbols$ClassSymbolApi;
  #177 = Utf8               isPrimitive
  #178 = NameAndType        #177:#92      // isPrimitive:()Z
  #179 = InterfaceMethodref #26.#178      // scala/reflect/api/Symbols$ClassSymbolApi.isPrimitive:()Z
  #180 = Utf8               enclosingPosition
  #181 = Utf8               ()Lscala/reflect/api/Position;
  #182 = NameAndType        #180:#181     // enclosingPosition:()Lscala/reflect/api/Position;
  #183 = InterfaceMethodref #109.#182     // scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
  #184 = Utf8               java/lang/StringBuilder
  #185 = Class              #184          // java/lang/StringBuilder
  #186 = Integer            47
  #187 = Utf8               (I)V
  #188 = NameAndType        #81:#187      // "<init>":(I)V
  #189 = Methodref          #185.#188     // java/lang/StringBuilder."<init>":(I)V
  #190 = Utf8               Primitive type
  #191 = String             #190          // Primitive type
  #192 = Utf8               append
  #193 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #194 = NameAndType        #192:#193     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #195 = Methodref          #185.#194     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #196 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #197 = NameAndType        #192:#196     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #198 = Methodref          #185.#197     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #199 = Utf8                may not be used in this context
  #200 = String             #199          //  may not be used in this context
  #201 = Utf8               toString
  #202 = Utf8               ()Ljava/lang/String;
  #203 = NameAndType        #201:#202     // toString:()Ljava/lang/String;
  #204 = Methodref          #185.#203     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #205 = Utf8               abort
  #206 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #207 = NameAndType        #205:#206     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #208 = InterfaceMethodref #109.#207     // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #209 = Utf8               internal
  #210 = Utf8               ()Lscala/reflect/api/Internals$InternalApi;
  #211 = NameAndType        #209:#210     // internal:()Lscala/reflect/api/Internals$InternalApi;
  #212 = Methodref          #58.#211      // scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
  #213 = Utf8               decorators
  #214 = Utf8               ()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
  #215 = NameAndType        #213:#214     // decorators:()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
  #216 = InterfaceMethodref #15.#215      // scala/reflect/api/Internals$InternalApi.decorators:()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
  #217 = Utf8               Literal
  #218 = Utf8               ()Lscala/reflect/api/Trees$LiteralExtractor;
  #219 = NameAndType        #217:#218     // Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #220 = Methodref          #58.#219      // scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #221 = Utf8               Constant
  #222 = Utf8               ()Lscala/reflect/api/Constants$ConstantExtractor;
  #223 = NameAndType        #221:#222     // Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
  #224 = Methodref          #58.#223      // scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
  #225 = Utf8               scala/runtime/BoxedUnit
  #226 = Class              #225          // scala/runtime/BoxedUnit
  #227 = Utf8               UNIT
  #228 = Utf8               Lscala/runtime/BoxedUnit;
  #229 = NameAndType        #227:#228     // UNIT:Lscala/runtime/BoxedUnit;
  #230 = Fieldref           #226.#229     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #231 = Utf8               apply
  #232 = Utf8               (Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #233 = NameAndType        #231:#232     // apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #234 = Methodref          #12.#233      // scala/reflect/api/Constants$ConstantExtractor.apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #235 = Utf8               (Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #236 = NameAndType        #231:#235     // apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #237 = Methodref          #39.#236      // scala/reflect/api/Trees$LiteralExtractor.apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #238 = Utf8               treeDecorator
  #239 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
  #240 = NameAndType        #238:#239     // treeDecorator:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
  #241 = InterfaceMethodref #20.#240      // scala/reflect/api/Internals$InternalApi$DecoratorApi.treeDecorator:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
  #242 = Utf8               setType
  #243 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #244 = NameAndType        #242:#243     // setType:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #245 = Methodref          #64.#244      // scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi.setType:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #246 = Utf8               codeString
  #247 = Utf8               Ljava/lang/String;
  #248 = Utf8               x$1
  #249 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #250 = Utf8               x$2
  #251 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #252 = Utf8               x$3
  #253 = Utf8               Ljava/lang/Object;
  #254 = Utf8               x$4
  #255 = Utf8               Z
  #256 = Utf8               x$5
  #257 = Utf8               x$6
  #258 = Utf8               baseType
  #259 = Utf8               expr
  #260 = Utf8               tpt
  #261 = Utf8               symbol
  #262 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
  #263 = Utf8               (Lscala/reflect/macros/whitebox/Context;)V
  #264 = Utf8               ()V
  #265 = NameAndType        #81:#264      // "<init>":()V
  #266 = Methodref          #4.#265       // java/lang/Object."<init>":()V
  #267 = Utf8               Code
  #268 = Utf8               LineNumberTable
  #269 = Utf8               LocalVariableTable
  #270 = Utf8               StackMapTable
  #271 = Utf8               MethodParameters
  #272 = Utf8               InnerClasses
  #273 = Utf8               SourceFile
  #274 = Utf8               ScalaInlineInfo
  #275 = Utf8               Scala
{
  private final scala.reflect.macros.whitebox.Context c;
    descriptor: Lscala/reflect/macros/whitebox/Context;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.reflect.macros.whitebox.Context c();
    descriptor: ()Lscala/reflect/macros/whitebox/Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #75                 // Field c:Lscala/reflect/macros/whitebox/Context;
         4: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lshapeless/TypeOf$Macros;

  public scala.reflect.api.Trees$TreeApi selectDynamic(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=24, args_size=2
         0: aload_1
         1: astore        5
         3: aload         5
         5: ifnull        62
         8: new           #70                 // class shapeless/TypeOf$Macros$$anon$3
        11: dup
        12: aload_0
        13: invokespecial #84                 // Method shapeless/TypeOf$Macros$$anon$3."<init>":(Lshapeless/TypeOf$Macros;)V
        16: aload         5
        18: invokevirtual #88                 // Method shapeless/TypeOf$Macros$$anon$3.unapply:(Ljava/lang/Object;)Lscala/Option;
        21: astore        6
        23: aload         6
        25: invokevirtual #94                 // Method scala/Option.isEmpty:()Z
        28: ifne          59
        31: aload         6
        33: invokevirtual #98                 // Method scala/Option.get:()Ljava/lang/Object;
        36: checkcast     #100                // class java/lang/String
        39: astore        7
        41: aload         7
        43: ifnull        56
        46: aload         7
        48: astore        8
        50: aload         8
        52: astore_3
        53: goto          75
        56: goto          65
        59: goto          65
        62: goto          65
        65: new           #102                // class scala/MatchError
        68: dup
        69: aload         5
        71: invokespecial #105                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        74: athrow
        75: aload_3
        76: astore        4
        78: aload_0
        79: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
        82: aload         4
        84: invokeinterface #113,  2          // InterfaceMethod scala/reflect/macros/whitebox/Context.parse:(Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
        89: astore        10
        91: aload         10
        93: ifnull        353
        96: aload_0
        97: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       100: invokeinterface #117,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       105: invokevirtual #121                // Method scala/reflect/macros/Universe.TypedTag:()Lscala/reflect/ClassTag;
       108: aload         10
       110: invokeinterface #124,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       115: astore        11
       117: aload         11
       119: invokevirtual #94                 // Method scala/Option.isEmpty:()Z
       122: ifne          350
       125: aload         11
       127: invokevirtual #98                 // Method scala/Option.get:()Ljava/lang/Object;
       130: checkcast     #45                 // class scala/reflect/api/Trees$TypedApi
       133: astore        12
       135: aload         12
       137: ifnull        347
       140: aload_0
       141: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       144: invokeinterface #117,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       149: invokevirtual #128                // Method scala/reflect/macros/Universe.Typed:()Lscala/reflect/api/Trees$TypedExtractor;
       152: aload         12
       154: invokevirtual #131                // Method scala/reflect/api/Trees$TypedExtractor.unapply:(Lscala/reflect/api/Trees$TypedApi;)Lscala/Option;
       157: astore        13
       159: aload         13
       161: invokevirtual #94                 // Method scala/Option.isEmpty:()Z
       164: ifne          344
       167: aload         13
       169: invokevirtual #98                 // Method scala/Option.get:()Ljava/lang/Object;
       172: checkcast     #133                // class scala/Tuple2
       175: invokevirtual #136                // Method scala/Tuple2._1:()Ljava/lang/Object;
       178: checkcast     #42                 // class scala/reflect/api/Trees$TreeApi
       181: astore        14
       183: aload         13
       185: invokevirtual #98                 // Method scala/Option.get:()Ljava/lang/Object;
       188: checkcast     #133                // class scala/Tuple2
       191: invokevirtual #139                // Method scala/Tuple2._2:()Ljava/lang/Object;
       194: checkcast     #42                 // class scala/reflect/api/Trees$TreeApi
       197: astore        15
       199: aload_0
       200: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       203: aload         15
       205: aload_0
       206: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       209: invokeinterface #142,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.TYPEmode:()Ljava/lang/Object;
       214: aload_0
       215: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       218: invokeinterface #146,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
       223: aload_0
       224: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       227: invokeinterface #149,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$4:()Z
       232: aload_0
       233: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       236: invokeinterface #152,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
       241: aload_0
       242: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       245: invokeinterface #155,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
       250: invokeinterface #159,  7          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
       255: astore        16
       257: aload         14
       259: astore        17
       261: aload         16
       263: invokeinterface #162,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
       268: astore        18
       270: aload_0
       271: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       274: invokeinterface #165,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$2:()Ljava/lang/Object;
       279: astore        19
       281: aload_0
       282: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       285: invokeinterface #149,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$4:()Z
       290: istore        20
       292: aload_0
       293: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       296: invokeinterface #152,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
       301: istore        21
       303: aload_0
       304: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       307: invokeinterface #155,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
       312: istore        22
       314: aload_0
       315: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       318: aload         17
       320: aload         19
       322: aload         18
       324: iload         20
       326: iload         21
       328: iload         22
       330: invokeinterface #159,  7          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
       335: invokeinterface #162,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
       340: astore_2
       341: goto          421
       344: goto          356
       347: goto          356
       350: goto          356
       353: goto          356
       356: aload_0
       357: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       360: aload         10
       362: aload_0
       363: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       366: invokeinterface #165,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$2:()Ljava/lang/Object;
       371: aload_0
       372: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       375: invokeinterface #146,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
       380: aload_0
       381: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       384: invokeinterface #149,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$4:()Z
       389: aload_0
       390: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       393: invokeinterface #152,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
       398: aload_0
       399: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       402: invokeinterface #155,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
       407: invokeinterface #159,  7          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
       412: invokeinterface #162,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
       417: astore_2
       418: goto          421
       421: aload_2
       422: astore        9
       424: aload         9
       426: invokevirtual #169                // Method scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
       429: astore        23
       431: aload         23
       433: invokeinterface #172,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.isClass:()Z
       438: ifeq          502
       441: aload         23
       443: invokeinterface #176,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.asClass:()Lscala/reflect/api/Symbols$ClassSymbolApi;
       448: invokeinterface #179,  1          // InterfaceMethod scala/reflect/api/Symbols$ClassSymbolApi.isPrimitive:()Z
       453: ifeq          502
       456: aload_0
       457: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       460: aload_0
       461: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       464: invokeinterface #183,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       469: new           #185                // class java/lang/StringBuilder
       472: dup
       473: ldc           #186                // int 47
       475: invokespecial #189                // Method java/lang/StringBuilder."<init>":(I)V
       478: ldc           #191                // String Primitive type
       480: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       483: aload         9
       485: invokevirtual #198                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       488: ldc           #200                // String  may not be used in this context
       490: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       493: invokevirtual #204                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       496: invokeinterface #208,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       501: athrow
       502: aload_0
       503: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       506: invokeinterface #117,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       511: invokevirtual #212                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
       514: invokeinterface #216,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.decorators:()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
       519: aload_0
       520: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       523: invokeinterface #117,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       528: invokevirtual #220                // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
       531: aload_0
       532: invokevirtual #107                // Method c:()Lscala/reflect/macros/whitebox/Context;
       535: invokeinterface #117,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       540: invokevirtual #224                // Method scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
       543: getstatic     #230                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       546: invokevirtual #234                // Method scala/reflect/api/Constants$ConstantExtractor.apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
       549: invokevirtual #237                // Method scala/reflect/api/Trees$LiteralExtractor.apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
       552: invokeinterface #241,  2          // InterfaceMethod scala/reflect/api/Internals$InternalApi$DecoratorApi.treeDecorator:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
       557: checkcast     #64                 // class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi
       560: aload         9
       562: invokevirtual #245                // Method scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi.setType:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
       565: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class shapeless/TypeOf$Macros, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/TypeOf$Macros, class scala/reflect/api/Trees$TreeApi, top, class java/lang/String, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 268
          locals = [ class shapeless/TypeOf$Macros, class scala/reflect/api/Trees$TreeApi, top, class java/lang/String, class java/lang/String, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$TypedApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class shapeless/TypeOf$Macros, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Types$TypeApi, class java/lang/String, class java/lang/String, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String, top, class scala/reflect/api/Trees$TreeApi ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class shapeless/TypeOf$Macros, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Types$TypeApi, class java/lang/String, class java/lang/String, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, class scala/reflect/api/Symbols$SymbolApi ]
          stack = []
      LineNumberTable:
        line 164: 0
        line 165: 78
        line 166: 91
        line 165: 125
        line 166: 135
        line 165: 167
        line 165: 183
        line 167: 199
        line 168: 257
        line 166: 344
        line 170: 356
        line 165: 421
        line 175: 424
        line 176: 431
        line 177: 456
        line 181: 502
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      20     7 codeString   Ljava/lang/String;
          259      76    17   x$1   Lscala/reflect/api/Trees$TreeApi;
          268      67    18   x$2   Lscala/reflect/api/Types$TypeApi;
          279      56    19   x$3   Ljava/lang/Object;
          290      45    20   x$4   Z
          301      34    21   x$5   Z
          312      23    22   x$6   Z
          255      85    16 baseType   Lscala/reflect/api/Trees$TreeApi;
          181     163    14  expr   Lscala/reflect/api/Trees$TreeApi;
          197     147    15   tpt   Lscala/reflect/api/Trees$TreeApi;
           76     489     4 codeString   Ljava/lang/String;
          422     143     9   tpe   Lscala/reflect/api/Types$TypeApi;
          429     136    23 symbol   Lscala/reflect/api/Symbols$SymbolApi;
            0     566     0  this   Lshapeless/TypeOf$Macros;
            0     566     1  code   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      code                           final

  public shapeless.TypeOf$Macros(scala.reflect.macros.whitebox.Context);
    descriptor: (Lscala/reflect/macros/whitebox/Context;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #75                 // Field c:Lscala/reflect/macros/whitebox/Context;
         5: aload_0
         6: invokespecial #266                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 158: 0
        line 185: 5
        line 158: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/TypeOf$Macros;
            0      10     1     c   Lscala/reflect/macros/whitebox/Context;
    MethodParameters:
      Name                           Flags
      c                              final
}
InnerClasses:
  public abstract #10= #7 of #9;          // ConstantApi=class scala/reflect/api/Constants$ConstantApi of class scala/reflect/api/Constants
  public abstract #13= #12 of #9;         // ConstantExtractor=class scala/reflect/api/Constants$ConstantExtractor of class scala/reflect/api/Constants
  public #18= #15 of #17;                 // InternalApi=class scala/reflect/api/Internals$InternalApi of class scala/reflect/api/Internals
  public #21= #20 of #15;                 // DecoratorApi=class scala/reflect/api/Internals$InternalApi$DecoratorApi of class scala/reflect/api/Internals$InternalApi
  public #24= #23 of #20;                 // TreeDecoratorApi=class scala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi of class scala/reflect/api/Internals$InternalApi$DecoratorApi
  public #29= #26 of #28;                 // ClassSymbolApi=class scala/reflect/api/Symbols$ClassSymbolApi of class scala/reflect/api/Symbols
  public #32= #31 of #28;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #37= #34 of #36;                 // LiteralApi=class scala/reflect/api/Trees$LiteralApi of class scala/reflect/api/Trees
  public abstract #40= #39 of #36;        // LiteralExtractor=class scala/reflect/api/Trees$LiteralExtractor of class scala/reflect/api/Trees
  public #43= #42 of #36;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #46= #45 of #36;                 // TypedApi=class scala/reflect/api/Trees$TypedApi of class scala/reflect/api/Trees
  public abstract #49= #48 of #36;        // TypedExtractor=class scala/reflect/api/Trees$TypedExtractor of class scala/reflect/api/Trees
  public abstract #54= #51 of #53;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #59= #56 of #58;                 // MacroInternalApi=class scala/reflect/macros/Universe$MacroInternalApi of class scala/reflect/macros/Universe
  public #62= #61 of #56;                 // MacroDecoratorApi=class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi of class scala/reflect/macros/Universe$MacroInternalApi
  public #65= #64 of #61;                 // MacroTreeDecoratorApi=class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi of class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi
  public static final #68= #2 of #67;     // Macros=class shapeless/TypeOf$Macros of class shapeless/TypeOf
  public final #70;                       // class shapeless/TypeOf$Macros$$anon$3
SourceFile: "typeoperators.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 51 01 07 01 00 47 00 49 01 00 4E
   00 4F 01
  Scala: length = 0x0 (unknown attribute)

