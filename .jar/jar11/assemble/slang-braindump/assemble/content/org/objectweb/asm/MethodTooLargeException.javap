Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/objectweb/asm/MethodTooLargeException.class
  Last modified May 29, 2022; size 1261 bytes
  SHA-256 checksum 0697ce858200591b08045d811820b869c128deb48be6c58cff494c098f93b141
  Compiled from "MethodTooLargeException.java"
public final class org.objectweb.asm.MethodTooLargeException extends java.lang.IndexOutOfBoundsException
  minor version: 0
  major version: 49
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/objectweb/asm/MethodTooLargeException
  super_class: #4                         // java/lang/IndexOutOfBoundsException
  interfaces: 0, fields: 5, methods: 5, attributes: 1
Constant pool:
   #1 = Utf8               org/objectweb/asm/MethodTooLargeException
   #2 = Class              #1             // org/objectweb/asm/MethodTooLargeException
   #3 = Utf8               java/lang/IndexOutOfBoundsException
   #4 = Class              #3             // java/lang/IndexOutOfBoundsException
   #5 = Utf8               MethodTooLargeException.java
   #6 = Utf8               serialVersionUID
   #7 = Utf8               J
   #8 = Long               6807380416709738314l
  #10 = Utf8               className
  #11 = Utf8               Ljava/lang/String;
  #12 = Utf8               methodName
  #13 = Utf8               descriptor
  #14 = Utf8               codeSize
  #15 = Utf8               I
  #16 = Utf8               <init>
  #17 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
  #18 = Utf8               java/lang/StringBuilder
  #19 = Class              #18            // java/lang/StringBuilder
  #20 = Utf8               ()V
  #21 = NameAndType        #16:#20        // "<init>":()V
  #22 = Methodref          #19.#21        // java/lang/StringBuilder."<init>":()V
  #23 = Utf8               Method too large:
  #24 = String             #23            // Method too large:
  #25 = Utf8               append
  #26 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #27 = NameAndType        #25:#26        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #28 = Methodref          #19.#27        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #29 = Utf8               .
  #30 = String             #29            // .
  #31 = Utf8
  #32 = String             #31            //
  #33 = Utf8               toString
  #34 = Utf8               ()Ljava/lang/String;
  #35 = NameAndType        #33:#34        // toString:()Ljava/lang/String;
  #36 = Methodref          #19.#35        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #37 = Utf8               (Ljava/lang/String;)V
  #38 = NameAndType        #16:#37        // "<init>":(Ljava/lang/String;)V
  #39 = Methodref          #4.#38         // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #40 = NameAndType        #10:#11        // className:Ljava/lang/String;
  #41 = Fieldref           #2.#40         // org/objectweb/asm/MethodTooLargeException.className:Ljava/lang/String;
  #42 = NameAndType        #12:#11        // methodName:Ljava/lang/String;
  #43 = Fieldref           #2.#42         // org/objectweb/asm/MethodTooLargeException.methodName:Ljava/lang/String;
  #44 = NameAndType        #13:#11        // descriptor:Ljava/lang/String;
  #45 = Fieldref           #2.#44         // org/objectweb/asm/MethodTooLargeException.descriptor:Ljava/lang/String;
  #46 = NameAndType        #14:#15        // codeSize:I
  #47 = Fieldref           #2.#46         // org/objectweb/asm/MethodTooLargeException.codeSize:I
  #48 = Utf8               this
  #49 = Utf8               Lorg/objectweb/asm/MethodTooLargeException;
  #50 = Utf8               getClassName
  #51 = Utf8               getMethodName
  #52 = Utf8               getDescriptor
  #53 = Utf8               getCodeSize
  #54 = Utf8               ()I
  #55 = Utf8               ConstantValue
  #56 = Utf8               Code
  #57 = Utf8               LineNumberTable
  #58 = Utf8               LocalVariableTable
  #59 = Utf8               SourceFile
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 6807380416709738314l

  private final java.lang.String className;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String methodName;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String descriptor;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int codeSize;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.objectweb.asm.MethodTooLargeException(java.lang.String, java.lang.String, java.lang.String, int);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=5
         0: aload_0
         1: new           #19                 // class java/lang/StringBuilder
         4: dup
         5: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
         8: ldc           #24                 // String Method too large:
        10: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        13: aload_1
        14: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        17: ldc           #30                 // String .
        19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: aload_2
        23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: ldc           #32                 // String
        28: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_3
        32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        38: invokespecial #39                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: aload_0
        42: aload_1
        43: putfield      #41                 // Field className:Ljava/lang/String;
        46: aload_0
        47: aload_2
        48: putfield      #43                 // Field methodName:Ljava/lang/String;
        51: aload_0
        52: aload_3
        53: putfield      #45                 // Field descriptor:Ljava/lang/String;
        56: aload_0
        57: iload         4
        59: putfield      #47                 // Field codeSize:I
        62: return
      LineNumberTable:
        line 57: 0
        line 58: 41
        line 59: 46
        line 60: 51
        line 61: 56
        line 62: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/objectweb/asm/MethodTooLargeException;
            0      63     1 className   Ljava/lang/String;
            0      63     2 methodName   Ljava/lang/String;
            0      63     3 descriptor   Ljava/lang/String;
            0      63     4 codeSize   I

  public java.lang.String getClassName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #41                 // Field className:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 70: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/MethodTooLargeException;

  public java.lang.String getMethodName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #43                 // Field methodName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/MethodTooLargeException;

  public java.lang.String getDescriptor();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #45                 // Field descriptor:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/MethodTooLargeException;

  public int getCodeSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #47                 // Field codeSize:I
         4: ireturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/objectweb/asm/MethodTooLargeException;
}
SourceFile: "MethodTooLargeException.java"
