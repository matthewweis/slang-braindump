Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/IS$$anon$2.class
  Last modified May 29, 2022; size 2217 bytes
  SHA-256 checksum ad2eab72b656a2d73160fbf7618b9a03ee9a4de7599b12fd29edb00bb821f0eb
  Compiled from "IS.scala"
public final class org.sireum.IS$$anon$2 extends java.lang.Object implements java.util.Iterator<V>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/IS$$anon$2
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 7, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/IS$$anon$2
    #2 = Class              #1            // org/sireum/IS$$anon$2
    #3 = Utf8               Ljava/lang/Object;Ljava/util/Iterator<TV;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               java/util/Iterator
    #7 = Class              #6            // java/util/Iterator
    #8 = Utf8               IS.scala
    #9 = Utf8               org/sireum/IS
   #10 = Class              #9            // org/sireum/IS
   #11 = Utf8               iterator
   #12 = Utf8               ()Ljava/util/Iterator;
   #13 = NameAndType        #11:#12       // iterator:()Ljava/util/Iterator;
   #14 = Utf8               org/sireum/Z$MP$
   #15 = Class              #14           // org/sireum/Z$MP$
   #16 = Utf8               org/sireum/Z
   #17 = Class              #16           // org/sireum/Z
   #18 = Utf8               MP$
   #19 = Utf8               i
   #20 = Utf8               Lorg/sireum/Z;
   #21 = Utf8               $outer
   #22 = Utf8               Lorg/sireum/IS;
   #23 = Utf8               remove
   #24 = Utf8               ()V
   #25 = NameAndType        #23:#24       // remove:()V
   #26 = InterfaceMethodref #7.#25        // java/util/Iterator.remove:()V
   #27 = Utf8               this
   #28 = Utf8               Lorg/sireum/IS$$anon$2;
   #29 = Utf8               forEachRemaining
   #30 = Utf8               (Ljava/util/function/Consumer;)V
   #31 = Utf8               (Ljava/util/function/Consumer<-TV;>;)V
   #32 = Utf8               x$1
   #33 = NameAndType        #29:#30       // forEachRemaining:(Ljava/util/function/Consumer;)V
   #34 = InterfaceMethodref #7.#33        // java/util/Iterator.forEachRemaining:(Ljava/util/function/Consumer;)V
   #35 = Utf8               Ljava/util/function/Consumer;
   #36 = Utf8               ()Lorg/sireum/Z;
   #37 = NameAndType        #19:#20       // i:Lorg/sireum/Z;
   #38 = Fieldref           #2.#37        // org/sireum/IS$$anon$2.i:Lorg/sireum/Z;
   #39 = Utf8               i_$eq
   #40 = Utf8               (Lorg/sireum/Z;)V
   #41 = Utf8               next
   #42 = Utf8               ()Ljava/lang/Object;
   #43 = Utf8               ()TV;
   #44 = Utf8               scala/Predef$
   #45 = Class              #44           // scala/Predef$
   #46 = Utf8               MODULE$
   #47 = Utf8               Lscala/Predef$;
   #48 = NameAndType        #46:#47       // MODULE$:Lscala/Predef$;
   #49 = Fieldref           #45.#48       // scala/Predef$.MODULE$:Lscala/Predef$;
   #50 = Utf8               hasNext
   #51 = Utf8               ()Z
   #52 = NameAndType        #50:#51       // hasNext:()Z
   #53 = Methodref          #2.#52        // org/sireum/IS$$anon$2.hasNext:()Z
   #54 = Utf8               assert
   #55 = Utf8               (Z)V
   #56 = NameAndType        #54:#55       // assert:(Z)V
   #57 = Methodref          #45.#56       // scala/Predef$.assert:(Z)V
   #58 = NameAndType        #21:#22       // $outer:Lorg/sireum/IS;
   #59 = Fieldref           #2.#58        // org/sireum/IS$$anon$2.$outer:Lorg/sireum/IS;
   #60 = Utf8               boxer
   #61 = Utf8               ()Lorg/sireum/$internal/Boxer;
   #62 = NameAndType        #60:#61       // boxer:()Lorg/sireum/$internal/Boxer;
   #63 = Methodref          #10.#62       // org/sireum/IS.boxer:()Lorg/sireum/$internal/Boxer;
   #64 = Utf8               data
   #65 = NameAndType        #64:#42       // data:()Ljava/lang/Object;
   #66 = Methodref          #10.#65       // org/sireum/IS.data:()Ljava/lang/Object;
   #67 = NameAndType        #19:#36       // i:()Lorg/sireum/Z;
   #68 = Methodref          #2.#67        // org/sireum/IS$$anon$2.i:()Lorg/sireum/Z;
   #69 = Utf8               org/sireum/$internal/Boxer
   #70 = Class              #69           // org/sireum/$internal/Boxer
   #71 = Utf8               lookup
   #72 = Utf8               (Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // lookup:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
   #74 = InterfaceMethodref #70.#73       // org/sireum/$internal/Boxer.lookup:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
   #75 = Utf8               org/sireum/Z$
   #76 = Class              #75           // org/sireum/Z$
   #77 = Utf8               Lorg/sireum/Z$;
   #78 = NameAndType        #46:#77       // MODULE$:Lorg/sireum/Z$;
   #79 = Fieldref           #76.#78       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #80 = Utf8               apply
   #81 = Utf8               (I)Lorg/sireum/Z;
   #82 = NameAndType        #80:#81       // apply:(I)Lorg/sireum/Z;
   #83 = Methodref          #76.#82       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #84 = Utf8               $plus
   #85 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #86 = NameAndType        #84:#85       // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #87 = InterfaceMethodref #17.#86       // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #88 = NameAndType        #39:#40       // i_$eq:(Lorg/sireum/Z;)V
   #89 = Methodref          #2.#88        // org/sireum/IS$$anon$2.i_$eq:(Lorg/sireum/Z;)V
   #90 = Utf8               r
   #91 = Utf8               Ljava/lang/Object;
   #92 = Utf8               org/sireum/B$
   #93 = Class              #92           // org/sireum/B$
   #94 = Utf8               Lorg/sireum/B$;
   #95 = NameAndType        #46:#94       // MODULE$:Lorg/sireum/B$;
   #96 = Fieldref           #93.#95       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #97 = Utf8               length
   #98 = NameAndType        #97:#36       // length:()Lorg/sireum/Z;
   #99 = Methodref          #10.#98       // org/sireum/IS.length:()Lorg/sireum/Z;
  #100 = Utf8               $less$eq
  #101 = Utf8               (Lorg/sireum/Z;)Z
  #102 = NameAndType        #100:#101     // $less$eq:(Lorg/sireum/Z;)Z
  #103 = InterfaceMethodref #17.#102      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #104 = Utf8               $4B
  #105 = Utf8               (Z)Z
  #106 = NameAndType        #104:#105     // $4B:(Z)Z
  #107 = Methodref          #93.#106      // org/sireum/B$.$4B:(Z)Z
  #108 = Utf8               <init>
  #109 = Utf8               (Lorg/sireum/IS;)V
  #110 = NameAndType        #108:#24      // "<init>":()V
  #111 = Methodref          #5.#110       // java/lang/Object."<init>":()V
  #112 = Utf8               Lorg/sireum/Z$MP$;
  #113 = NameAndType        #46:#112      // MODULE$:Lorg/sireum/Z$MP$;
  #114 = Fieldref           #15.#113      // org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
  #115 = Utf8               zero
  #116 = NameAndType        #115:#36      // zero:()Lorg/sireum/Z;
  #117 = Methodref          #15.#116      // org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
  #118 = Utf8               Code
  #119 = Utf8               LineNumberTable
  #120 = Utf8               LocalVariableTable
  #121 = Utf8               Signature
  #122 = Utf8               MethodParameters
  #123 = Utf8               StackMapTable
  #124 = Utf8               InnerClasses
  #125 = Utf8               EnclosingMethod
  #126 = Utf8               SourceFile
  #127 = Utf8               ScalaInlineInfo
  #128 = Utf8               Scala
{
  private org.sireum.Z i;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private final org.sireum.IS $outer;
    descriptor: Lorg/sireum/IS;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public void remove();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #26                 // InterfaceMethod java/util/Iterator.remove:()V
         4: return
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/IS$$anon$2;

  public void forEachRemaining(java.util.function.Consumer<? super V>);
    descriptor: (Ljava/util/function/Consumer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #34                 // InterfaceMethod java/util/Iterator.forEachRemaining:(Ljava/util/function/Consumer;)V
         5: return
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/IS$$anon$2;
            0       6     1   x$1   Ljava/util/function/Consumer;
    Signature: #31                          // (Ljava/util/function/Consumer<-TV;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  private org.sireum.Z i();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #38                 // Field i:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 278: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/IS$$anon$2;

  private void i_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #38                 // Field i:Lorg/sireum/Z;
         5: return
      LineNumberTable:
        line 278: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/IS$$anon$2;
            0       6     1   x$1   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public V next();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: getstatic     #49                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #53                 // Method hasNext:()Z
         7: invokevirtual #57                 // Method scala/Predef$.assert:(Z)V
        10: aload_0
        11: getfield      #59                 // Field $outer:Lorg/sireum/IS;
        14: invokevirtual #63                 // Method org/sireum/IS.boxer:()Lorg/sireum/$internal/Boxer;
        17: aload_0
        18: getfield      #59                 // Field $outer:Lorg/sireum/IS;
        21: invokevirtual #66                 // Method org/sireum/IS.data:()Ljava/lang/Object;
        24: aload_0
        25: invokespecial #68                 // Method i:()Lorg/sireum/Z;
        28: invokeinterface #74,  3           // InterfaceMethod org/sireum/$internal/Boxer.lookup:(Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
        33: astore_1
        34: aload_0
        35: aload_0
        36: invokespecial #68                 // Method i:()Lorg/sireum/Z;
        39: getstatic     #79                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        42: iconst_1
        43: invokevirtual #83                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        46: invokeinterface #87,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        51: invokespecial #89                 // Method i_$eq:(Lorg/sireum/Z;)V
        54: aload_1
        55: areturn
      LineNumberTable:
        line 281: 0
        line 282: 10
        line 283: 34
        line 284: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34      21     1     r   Ljava/lang/Object;
            0      56     0  this   Lorg/sireum/IS$$anon$2;
    Signature: #43                          // ()TV;

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #96                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_0
         4: invokespecial #68                 // Method i:()Lorg/sireum/Z;
         7: aload_0
         8: getfield      #59                 // Field $outer:Lorg/sireum/IS;
        11: invokevirtual #99                 // Method org/sireum/IS.length:()Lorg/sireum/Z;
        14: invokeinterface #103,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        19: invokevirtual #107                // Method org/sireum/B$.$4B:(Z)Z
        22: ireturn
      LineNumberTable:
        line 287: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/IS$$anon$2;

  public org.sireum.IS$$anon$2(org.sireum.IS);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #59                 // Field $outer:Lorg/sireum/IS;
        11: aload_0
        12: invokespecial #111                // Method java/lang/Object."<init>":()V
        15: aload_0
        16: getstatic     #114                // Field org/sireum/Z$MP$.MODULE$:Lorg/sireum/Z$MP$;
        19: invokevirtual #117                // Method org/sireum/Z$MP$.zero:()Lorg/sireum/Z;
        22: putfield      #38                 // Field i:Lorg/sireum/Z;
        25: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 277: 0
        line 278: 15
        line 277: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/sireum/IS$$anon$2;
            0      26     1 $outer   Lorg/sireum/IS;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public final #2;                        // class org/sireum/IS$$anon$2
  public static #18= #15 of #17;          // MP$=class org/sireum/Z$MP$ of class org/sireum/Z
EnclosingMethod: #10.#13                // org.sireum.IS.iterator
Signature: #3                           // Ljava/lang/Object;Ljava/util/Iterator<TV;>;
SourceFile: "IS.scala"
  ScalaInlineInfo: length = 0x27 (unknown attribute)
   01 01 00 07 00 6C 00 6D 01 00 1D 00 1E 01 00 32
   00 33 01 00 13 00 24 01 00 27 00 28 01 00 29 00
   2A 01 00 17 00 18 01
  Scala: length = 0x0 (unknown attribute)

