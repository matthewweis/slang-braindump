Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.class
  Last modified May 29, 2022; size 6456 bytes
  SHA-256 checksum 119b78d25db95c07af59be82ca2722229b20fa64ecb2285577aa540c9028fe56
  Compiled from "Tasks.scala"
public class scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask<R extends java.lang.Object, Tp extends java.lang.Object> extends java.util.concurrent.RecursiveAction implements scala.collection.parallel.ForkJoinTasks$FJTWrappedTask<R, Tp>, scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask
  super_class: #5                         // java/util/concurrent/RecursiveAction
  interfaces: 2, fields: 4, methods: 21, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask
    #2 = Class              #1            // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask
    #3 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/util/concurrent/RecursiveAction;Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask<TR;TTp;>;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;
    #4 = Utf8               java/util/concurrent/RecursiveAction
    #5 = Class              #4            // java/util/concurrent/RecursiveAction
    #6 = Utf8               scala/collection/parallel/ForkJoinTasks$FJTWrappedTask
    #7 = Class              #6            // scala/collection/parallel/ForkJoinTasks$FJTWrappedTask
    #8 = Utf8               scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
    #9 = Class              #8            // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
   #10 = Utf8               Tasks.scala
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks
   #17 = Class              #16           // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks
   #18 = Utf8               AWSFJTWrappedTask
   #19 = Utf8               scala/collection/parallel/AdaptiveWorkStealingTasks
   #20 = Class              #19           // scala/collection/parallel/AdaptiveWorkStealingTasks
   #21 = Utf8               AWSTWrappedTask
   #22 = Utf8               scala/collection/parallel/ForkJoinTasks
   #23 = Class              #22           // scala/collection/parallel/ForkJoinTasks
   #24 = Utf8               FJTWrappedTask
   #25 = Utf8               scala/collection/parallel/Tasks$WrappedTask
   #26 = Class              #25           // scala/collection/parallel/Tasks$WrappedTask
   #27 = Utf8               scala/collection/parallel/Tasks
   #28 = Class              #27           // scala/collection/parallel/Tasks
   #29 = Utf8               WrappedTask
   #30 = Utf8               body
   #31 = Utf8               Lscala/collection/parallel/Task;
   #32 = Utf8               Lscala/collection/parallel/Task<TR;TTp;>;
   #33 = Utf8               next
   #34 = Utf8               Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #35 = Utf8               Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;
   #36 = Utf8               shouldWaitFor
   #37 = Utf8               Z
   #38 = Utf8               $outer
   #39 = Utf8               Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
   #40 = Utf8               compute
   #41 = Utf8               ()V
   #42 = Utf8               compute$
   #43 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #44 = NameAndType        #42:#43       // compute$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #45 = InterfaceMethodref #9.#44        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.compute$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #46 = Utf8               this
   #47 = Utf8               Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
   #48 = Utf8               internal
   #49 = Utf8               internal$
   #50 = NameAndType        #49:#43       // internal$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #51 = InterfaceMethodref #9.#50        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.internal$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #52 = Utf8               spawnSubtasks
   #53 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #54 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;
   #55 = Utf8               spawnSubtasks$
   #56 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #57 = NameAndType        #55:#56       // spawnSubtasks$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #58 = InterfaceMethodref #9.#57        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.spawnSubtasks$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #59 = Utf8               printChain
   #60 = Utf8               printChain$
   #61 = NameAndType        #60:#43       // printChain$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #62 = InterfaceMethodref #9.#61        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.printChain$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #63 = Utf8               start
   #64 = Utf8               start$
   #65 = Utf8               (Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
   #66 = NameAndType        #64:#65       // start$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
   #67 = InterfaceMethodref #7.#66        // scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.start$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
   #68 = Utf8               sync
   #69 = Utf8               sync$
   #70 = NameAndType        #69:#65       // sync$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
   #71 = InterfaceMethodref #7.#70        // scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.sync$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
   #72 = Utf8               tryCancel
   #73 = Utf8               ()Z
   #74 = Utf8               tryCancel$
   #75 = Utf8               (Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)Z
   #76 = NameAndType        #74:#75       // tryCancel$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)Z
   #77 = InterfaceMethodref #7.#76        // scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.tryCancel$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)Z
   #78 = Utf8               release
   #79 = Utf8               release$
   #80 = Utf8               (Lscala/collection/parallel/Tasks$WrappedTask;)V
   #81 = NameAndType        #79:#80       // release$:(Lscala/collection/parallel/Tasks$WrappedTask;)V
   #82 = InterfaceMethodref #26.#81       // scala/collection/parallel/Tasks$WrappedTask.release$:(Lscala/collection/parallel/Tasks$WrappedTask;)V
   #83 = NameAndType        #33:#34       // next:Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #84 = Fieldref           #2.#83        // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.next:Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #85 = Utf8               next_$eq
   #86 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;)V
   #87 = Utf8               x$1
   #88 = NameAndType        #36:#37       // shouldWaitFor:Z
   #89 = Fieldref           #2.#88        // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.shouldWaitFor:Z
   #90 = Utf8               shouldWaitFor_$eq
   #91 = Utf8               (Z)V
   #92 = Utf8               ()Lscala/collection/parallel/Task;
   #93 = Utf8               ()Lscala/collection/parallel/Task<TR;TTp;>;
   #94 = NameAndType        #30:#31       // body:Lscala/collection/parallel/Task;
   #95 = Fieldref           #2.#94        // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.body:Lscala/collection/parallel/Task;
   #96 = Utf8               split
   #97 = Utf8               ()Lscala/collection/immutable/Seq;
   #98 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask<TR;TTp;>;>;
   #99 = NameAndType        #30:#92       // body:()Lscala/collection/parallel/Task;
  #100 = Methodref          #2.#99        // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.body:()Lscala/collection/parallel/Task;
  #101 = Utf8               scala/collection/parallel/Task
  #102 = Class              #101          // scala/collection/parallel/Task
  #103 = NameAndType        #96:#97       // split:()Lscala/collection/immutable/Seq;
  #104 = InterfaceMethodref #102.#103     // scala/collection/parallel/Task.split:()Lscala/collection/immutable/Seq;
  #105 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #106 = MethodType         #105          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #107 = Utf8               $anonfun$split$1
  #108 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #109 = NameAndType        #107:#108     // $anonfun$split$1:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #110 = Methodref          #2.#109       // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.$anonfun$split$1:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #111 = MethodHandle       6:#110        // REF_invokeStatic scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.$anonfun$split$1:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #112 = Utf8               (Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #113 = MethodType         #112          //  (Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #114 = Integer            5
  #115 = Integer            1
  #116 = Utf8               java/lang/invoke/LambdaMetafactory
  #117 = Class              #116          // java/lang/invoke/LambdaMetafactory
  #118 = Utf8               altMetafactory
  #119 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #120 = NameAndType        #118:#119     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #121 = Methodref          #117.#120     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #122 = MethodHandle       6:#121        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #123 = Utf8               apply
  #124 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;)Lscala/Function1;
  #125 = NameAndType        #123:#124     // apply:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;)Lscala/Function1;
  #126 = InvokeDynamic      #0:#125       // #0:apply:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;)Lscala/Function1;
  #127 = Utf8               scala/collection/immutable/Seq
  #128 = Class              #127          // scala/collection/immutable/Seq
  #129 = Utf8               map
  #130 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #131 = NameAndType        #129:#130     // map:(Lscala/Function1;)Ljava/lang/Object;
  #132 = InterfaceMethodref #128.#131     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #133 = Utf8               scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer
  #134 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
  #135 = NameAndType        #38:#39       // $outer:Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
  #136 = Fieldref           #2.#135       // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.$outer:Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
  #137 = Utf8               scala$collection$parallel$AdaptiveWorkStealingTasks$AWSTWrappedTask$$$outer
  #138 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingTasks;
  #139 = NameAndType        #133:#134     // scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer:()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
  #140 = Methodref          #2.#139       // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer:()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
  #141 = Utf8               scala$collection$parallel$ForkJoinTasks$FJTWrappedTask$$$outer
  #142 = Utf8               ()Lscala/collection/parallel/ForkJoinTasks;
  #143 = Utf8               scala$collection$parallel$Tasks$WrappedTask$$$outer
  #144 = Utf8               ()Lscala/collection/parallel/Tasks;
  #145 = Utf8               $this
  #146 = Utf8               b
  #147 = Utf8               newWrappedTask
  #148 = NameAndType        #147:#112     // newWrappedTask:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #149 = InterfaceMethodref #17.#148      // scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks.newWrappedTask:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  #150 = Utf8               <init>
  #151 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;Lscala/collection/parallel/Task;)V
  #152 = Utf8               (Lscala/collection/parallel/Task<TR;TTp;>;)V
  #153 = NameAndType        #150:#41      // "<init>":()V
  #154 = Methodref          #5.#153       // java/util/concurrent/RecursiveAction."<init>":()V
  #155 = Utf8               $init$
  #156 = NameAndType        #155:#80      // $init$:(Lscala/collection/parallel/Tasks$WrappedTask;)V
  #157 = InterfaceMethodref #26.#156      // scala/collection/parallel/Tasks$WrappedTask.$init$:(Lscala/collection/parallel/Tasks$WrappedTask;)V
  #158 = NameAndType        #155:#65      // $init$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
  #159 = InterfaceMethodref #7.#158       // scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.$init$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
  #160 = NameAndType        #155:#43      // $init$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #161 = InterfaceMethodref #9.#160       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$init$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #162 = Utf8               $deserializeLambda$
  #163 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #164 = Utf8               scala/runtime/LambdaDeserialize
  #165 = Class              #164          // scala/runtime/LambdaDeserialize
  #166 = Utf8               bootstrap
  #167 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #168 = NameAndType        #166:#167     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #169 = Methodref          #165.#168     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #170 = MethodHandle       6:#169        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #171 = Utf8               lambdaDeserialize
  #172 = NameAndType        #171:#163     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #173 = InvokeDynamic      #1:#172       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #174 = Utf8               Signature
  #175 = Utf8               Code
  #176 = Utf8               LineNumberTable
  #177 = Utf8               LocalVariableTable
  #178 = Utf8               MethodParameters
  #179 = Utf8               StackMapTable
  #180 = Utf8               InnerClasses
  #181 = Utf8               SourceFile
  #182 = Utf8               BootstrapMethods
  #183 = Utf8               ScalaInlineInfo
  #184 = Utf8               Scala
{
  private final scala.collection.parallel.Task<R, Tp> body;
    descriptor: Lscala/collection/parallel/Task;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #32                          // Lscala/collection/parallel/Task<TR;TTp;>;

  private volatile scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp> next;
    descriptor: Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #35                          // Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;

  private volatile boolean shouldWaitFor;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks $outer;
    descriptor: Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public void compute();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #45                 // InterfaceMethod scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.compute$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public void internal();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #51                 // InterfaceMethod scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.internal$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp> spawnSubtasks();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.spawnSubtasks$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
    Signature: #54                          // ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;

  public void printChain();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.printChain$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public void start();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.start$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public void sync();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.sync$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public boolean tryCancel();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #77                 // InterfaceMethod scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.tryCancel$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)Z
         4: ireturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public void release();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod scala/collection/parallel/Tasks$WrappedTask.release$:(Lscala/collection/parallel/Tasks$WrappedTask;)V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp> next();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field next:Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
    Signature: #54                          // ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;

  public void next_$eq(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp>);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #84                 // Field next:Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
         5: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
            0       6     1   x$1   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    Signature: #86                          // (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public boolean shouldWaitFor();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field shouldWaitFor:Z
         4: ireturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public void shouldWaitFor_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #89                 // Field shouldWaitFor:Z
         5: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.Task<R, Tp> body();
    descriptor: ()Lscala/collection/parallel/Task;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field body:Lscala/collection/parallel/Task;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
    Signature: #93                          // ()Lscala/collection/parallel/Task<TR;TTp;>;

  public scala.collection.immutable.Seq<scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask<R, Tp>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method body:()Lscala/collection/parallel/Task;
         4: invokeinterface #104,  1          // InterfaceMethod scala/collection/parallel/Task.split:()Lscala/collection/immutable/Seq;
         9: aload_0
        10: invokedynamic #126,  0            // InvokeDynamic #0:apply:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;)Lscala/Function1;
        15: invokeinterface #132,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        20: checkcast     #128                // class scala/collection/immutable/Seq
        23: areturn
      LineNumberTable:
        line 306: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
    Signature: #98                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask<TR;TTp;>;>;

  public scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #136                // Field $outer:Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public scala.collection.parallel.AdaptiveWorkStealingTasks scala$collection$parallel$AdaptiveWorkStealingTasks$AWSTWrappedTask$$$outer();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingTasks;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #140                // Method scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer:()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public scala.collection.parallel.ForkJoinTasks scala$collection$parallel$ForkJoinTasks$FJTWrappedTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ForkJoinTasks;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #140                // Method scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer:()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public scala.collection.parallel.Tasks scala$collection$parallel$Tasks$WrappedTask$$$outer();
    descriptor: ()Lscala/collection/parallel/Tasks;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #140                // Method scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer:()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;

  public static final scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask $anonfun$split$1(scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask, scala.collection.parallel.Task);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #140                // Method scala$collection$parallel$AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask$$$outer:()Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
         4: aload_1
         5: invokeinterface #149,  2          // InterfaceMethod scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks.newWrappedTask:(Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
        10: areturn
      LineNumberTable:
        line 306: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
            0      11     1     b   Lscala/collection/parallel/Task;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      b                              final

  public scala.collection.parallel.AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask(scala.collection.parallel.Task<R, Tp>);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #95                 // Field body:Lscala/collection/parallel/Task;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #136                // Field $outer:Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
        16: aload_0
        17: invokespecial #154                // Method java/util/concurrent/RecursiveAction."<init>":()V
        20: aload_0
        21: invokestatic  #157                // InterfaceMethod scala/collection/parallel/Tasks$WrappedTask.$init$:(Lscala/collection/parallel/Tasks$WrappedTask;)V
        24: aload_0
        25: invokestatic  #159                // InterfaceMethod scala/collection/parallel/ForkJoinTasks$FJTWrappedTask.$init$:(Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask;)V
        28: aload_0
        29: invokestatic  #161                // InterfaceMethod scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$init$:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
        32: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 304: 0
        line 305: 16
        line 304: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
            0      33     1 $outer   Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks;
            0      33     2  body   Lscala/collection/parallel/Task;
    Signature: #152                         // (Lscala/collection/parallel/Task<TR;TTp;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      body                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #173,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #2 of #17;                  // AWSFJTWrappedTask=class scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask of class scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks
  public #21= #9 of #20;                  // AWSTWrappedTask=class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask of class scala/collection/parallel/AdaptiveWorkStealingTasks
  public #24= #7 of #23;                  // FJTWrappedTask=class scala/collection/parallel/ForkJoinTasks$FJTWrappedTask of class scala/collection/parallel/ForkJoinTasks
  public #29= #26 of #28;                 // WrappedTask=class scala/collection/parallel/Tasks$WrappedTask of class scala/collection/parallel/Tasks
Signature: #3                           // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/util/concurrent/RecursiveAction;Lscala/collection/parallel/ForkJoinTasks$FJTWrappedTask<TR;TTp;>;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;
SourceFile: "Tasks.scala"
BootstrapMethods:
  0: #122 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #106 (Ljava/lang/Object;)Ljava/lang/Object;
      #111 REF_invokeStatic scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.$anonfun$split$1:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
      #113 (Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
      #114 5
      #115 1
      #113 (Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  1: #170 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #111 REF_invokeStatic scala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask.$anonfun$split$1:(Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;Lscala/collection/parallel/Task;)Lscala/collection/parallel/AdaptiveWorkStealingForkJoinTasks$AWSFJTWrappedTask;
  ScalaInlineInfo: length = 0x68 (unknown attribute)
   01 00 00 14 00 6B 00 6C 01 00 96 00 97 00 00 1E
   00 5C 00 00 28 00 29 00 00 30 00 29 00 00 21 00
   35 00 00 55 00 2B 00 00 3B 00 29 00 00 4E 00 29
   00 00 85 00 86 00 00 89 00 8A 00 00 8D 00 8E 00
   00 8F 00 90 00 00 24 00 49 00 00 5A 00 5B 00 00
   34 00 35 00 00 60 00 61 00 00 3F 00 29 00 00 44
   00 29 00 00 48 00 49 00
  Scala: length = 0x0 (unknown attribute)

