Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/node/BigIntegerNode.class
  Last modified May 29, 2022; size 3815 bytes
  SHA-256 checksum d39858766c4b96d754a0b4ffd6209cc119448374da2d83f417d399f56c716d2f
  Compiled from "BigIntegerNode.java"
public class com.fasterxml.jackson.databind.node.BigIntegerNode extends com.fasterxml.jackson.databind.node.NumericNode
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #3                          // com/fasterxml/jackson/databind/node/BigIntegerNode
  super_class: #35                        // com/fasterxml/jackson/databind/node/NumericNode
  interfaces: 0, fields: 5, methods: 22, attributes: 2
Constant pool:
    #1 = Methodref          #35.#104      // com/fasterxml/jackson/databind/node/NumericNode."<init>":()V
    #2 = Fieldref           #3.#105       // com/fasterxml/jackson/databind/node/BigIntegerNode._value:Ljava/math/BigInteger;
    #3 = Class              #106          // com/fasterxml/jackson/databind/node/BigIntegerNode
    #4 = Methodref          #3.#107       // com/fasterxml/jackson/databind/node/BigIntegerNode."<init>":(Ljava/math/BigInteger;)V
    #5 = Fieldref           #108.#109     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;
    #6 = Fieldref           #55.#110      // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
    #7 = Fieldref           #3.#111       // com/fasterxml/jackson/databind/node/BigIntegerNode.MIN_INTEGER:Ljava/math/BigInteger;
    #8 = Methodref          #112.#113     // java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
    #9 = Fieldref           #3.#114       // com/fasterxml/jackson/databind/node/BigIntegerNode.MAX_INTEGER:Ljava/math/BigInteger;
   #10 = Fieldref           #3.#115       // com/fasterxml/jackson/databind/node/BigIntegerNode.MIN_LONG:Ljava/math/BigInteger;
   #11 = Fieldref           #3.#116       // com/fasterxml/jackson/databind/node/BigIntegerNode.MAX_LONG:Ljava/math/BigInteger;
   #12 = Methodref          #112.#117     // java/math/BigInteger.shortValue:()S
   #13 = Methodref          #112.#118     // java/math/BigInteger.intValue:()I
   #14 = Methodref          #112.#119     // java/math/BigInteger.longValue:()J
   #15 = Methodref          #112.#120     // java/math/BigInteger.floatValue:()F
   #16 = Methodref          #112.#121     // java/math/BigInteger.doubleValue:()D
   #17 = Class              #122          // java/math/BigDecimal
   #18 = Methodref          #17.#107      // java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
   #19 = Methodref          #112.#123     // java/math/BigInteger.toString:()Ljava/lang/String;
   #20 = Fieldref           #112.#124     // java/math/BigInteger.ZERO:Ljava/math/BigInteger;
   #21 = Methodref          #112.#125     // java/math/BigInteger.equals:(Ljava/lang/Object;)Z
   #22 = Methodref          #126.#127     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
   #23 = Methodref          #112.#128     // java/math/BigInteger.hashCode:()I
   #24 = Class              #129          // java/lang/Integer
   #25 = Long               -2147483648l
   #27 = Methodref          #112.#130     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
   #28 = Long               2147483647l
   #30 = Class              #131          // java/lang/Long
   #31 = Long               -9223372036854775808l
   #33 = Long               9223372036854775807l
   #35 = Class              #132          // com/fasterxml/jackson/databind/node/NumericNode
   #36 = Utf8               MIN_INTEGER
   #37 = Utf8               Ljava/math/BigInteger;
   #38 = Utf8               MAX_INTEGER
   #39 = Utf8               MIN_LONG
   #40 = Utf8               MAX_LONG
   #41 = Utf8               _value
   #42 = Utf8               <init>
   #43 = Utf8               (Ljava/math/BigInteger;)V
   #44 = Utf8               Code
   #45 = Utf8               LineNumberTable
   #46 = Utf8               LocalVariableTable
   #47 = Utf8               this
   #48 = Utf8               Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
   #49 = Utf8               v
   #50 = Utf8               valueOf
   #51 = Utf8               (Ljava/math/BigInteger;)Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
   #52 = Utf8               asToken
   #53 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;
   #54 = Utf8               numberType
   #55 = Class              #134          // com/fasterxml/jackson/core/JsonParser$NumberType
   #56 = Utf8               NumberType
   #57 = Utf8               InnerClasses
   #58 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;
   #59 = Utf8               isIntegralNumber
   #60 = Utf8               ()Z
   #61 = Utf8               isBigInteger
   #62 = Utf8               canConvertToInt
   #63 = Utf8               StackMapTable
   #64 = Utf8               canConvertToLong
   #65 = Utf8               numberValue
   #66 = Utf8               ()Ljava/lang/Number;
   #67 = Utf8               shortValue
   #68 = Utf8               ()S
   #69 = Utf8               intValue
   #70 = Utf8               ()I
   #71 = Utf8               longValue
   #72 = Utf8               ()J
   #73 = Utf8               bigIntegerValue
   #74 = Utf8               ()Ljava/math/BigInteger;
   #75 = Utf8               floatValue
   #76 = Utf8               ()F
   #77 = Utf8               doubleValue
   #78 = Utf8               ()D
   #79 = Utf8               decimalValue
   #80 = Utf8               ()Ljava/math/BigDecimal;
   #81 = Utf8               asText
   #82 = Utf8               ()Ljava/lang/String;
   #83 = Utf8               asBoolean
   #84 = Utf8               (Z)Z
   #85 = Utf8               defaultValue
   #86 = Utf8               Z
   #87 = Utf8               serialize
   #88 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
   #89 = Utf8               g
   #90 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
   #91 = Utf8               provider
   #92 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
   #93 = Utf8               Exceptions
   #94 = Class              #135          // java/io/IOException
   #95 = Utf8               equals
   #96 = Utf8               (Ljava/lang/Object;)Z
   #97 = Utf8               o
   #98 = Utf8               Ljava/lang/Object;
   #99 = Utf8               hashCode
  #100 = Utf8               <clinit>
  #101 = Utf8               ()V
  #102 = Utf8               SourceFile
  #103 = Utf8               BigIntegerNode.java
  #104 = NameAndType        #42:#101      // "<init>":()V
  #105 = NameAndType        #41:#37       // _value:Ljava/math/BigInteger;
  #106 = Utf8               com/fasterxml/jackson/databind/node/BigIntegerNode
  #107 = NameAndType        #42:#43       // "<init>":(Ljava/math/BigInteger;)V
  #108 = Class              #136          // com/fasterxml/jackson/core/JsonToken
  #109 = NameAndType        #137:#138     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;
  #110 = NameAndType        #139:#140     // BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
  #111 = NameAndType        #36:#37       // MIN_INTEGER:Ljava/math/BigInteger;
  #112 = Class              #141          // java/math/BigInteger
  #113 = NameAndType        #142:#143     // compareTo:(Ljava/math/BigInteger;)I
  #114 = NameAndType        #38:#37       // MAX_INTEGER:Ljava/math/BigInteger;
  #115 = NameAndType        #39:#37       // MIN_LONG:Ljava/math/BigInteger;
  #116 = NameAndType        #40:#37       // MAX_LONG:Ljava/math/BigInteger;
  #117 = NameAndType        #67:#68       // shortValue:()S
  #118 = NameAndType        #69:#70       // intValue:()I
  #119 = NameAndType        #71:#72       // longValue:()J
  #120 = NameAndType        #75:#76       // floatValue:()F
  #121 = NameAndType        #77:#78       // doubleValue:()D
  #122 = Utf8               java/math/BigDecimal
  #123 = NameAndType        #144:#82      // toString:()Ljava/lang/String;
  #124 = NameAndType        #145:#37      // ZERO:Ljava/math/BigInteger;
  #125 = NameAndType        #95:#96       // equals:(Ljava/lang/Object;)Z
  #126 = Class              #146          // com/fasterxml/jackson/core/JsonGenerator
  #127 = NameAndType        #147:#43      // writeNumber:(Ljava/math/BigInteger;)V
  #128 = NameAndType        #99:#70       // hashCode:()I
  #129 = Utf8               java/lang/Integer
  #130 = NameAndType        #50:#148      // valueOf:(J)Ljava/math/BigInteger;
  #131 = Utf8               java/lang/Long
  #132 = Utf8               com/fasterxml/jackson/databind/node/NumericNode
  #133 = Class              #149          // com/fasterxml/jackson/core/JsonParser
  #134 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType
  #135 = Utf8               java/io/IOException
  #136 = Utf8               com/fasterxml/jackson/core/JsonToken
  #137 = Utf8               VALUE_NUMBER_INT
  #138 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;
  #139 = Utf8               BIG_INTEGER
  #140 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;
  #141 = Utf8               java/math/BigInteger
  #142 = Utf8               compareTo
  #143 = Utf8               (Ljava/math/BigInteger;)I
  #144 = Utf8               toString
  #145 = Utf8               ZERO
  #146 = Utf8               com/fasterxml/jackson/core/JsonGenerator
  #147 = Utf8               writeNumber
  #148 = Utf8               (J)Ljava/math/BigInteger;
  #149 = Utf8               com/fasterxml/jackson/core/JsonParser
{
  private static final java.math.BigInteger MIN_INTEGER;
    descriptor: Ljava/math/BigInteger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.math.BigInteger MAX_INTEGER;
    descriptor: Ljava/math/BigInteger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.math.BigInteger MIN_LONG;
    descriptor: Ljava/math/BigInteger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.math.BigInteger MAX_LONG;
    descriptor: Ljava/math/BigInteger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  protected final java.math.BigInteger _value;
    descriptor: Ljava/math/BigInteger;
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL

  public com.fasterxml.jackson.databind.node.BigIntegerNode(java.math.BigInteger);
    descriptor: (Ljava/math/BigInteger;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method com/fasterxml/jackson/databind/node/NumericNode."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #2                  // Field _value:Ljava/math/BigInteger;
         9: return
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
            0      10     1     v   Ljava/math/BigInteger;

  public static com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger);
    descriptor: (Ljava/math/BigInteger;)Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #3                  // class com/fasterxml/jackson/databind/node/BigIntegerNode
         3: dup
         4: aload_0
         5: invokespecial #4                  // Method "<init>":(Ljava/math/BigInteger;)V
         8: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     v   Ljava/math/BigInteger;

  public com.fasterxml.jackson.core.JsonToken asToken();
    descriptor: ()Lcom/fasterxml/jackson/core/JsonToken;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #5                  // Field com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;
         3: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public com.fasterxml.jackson.core.JsonParser$NumberType numberType();
    descriptor: ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #6                  // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;
         3: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public boolean isIntegralNumber();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public boolean isBigInteger();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public boolean canConvertToInt();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: getstatic     #7                  // Field MIN_INTEGER:Ljava/math/BigInteger;
         7: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
        10: iflt          30
        13: aload_0
        14: getfield      #2                  // Field _value:Ljava/math/BigInteger;
        17: getstatic     #9                  // Field MAX_INTEGER:Ljava/math/BigInteger;
        20: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
        23: ifgt          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean canConvertToLong();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: getstatic     #10                 // Field MIN_LONG:Ljava/math/BigInteger;
         7: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
        10: iflt          30
        13: aload_0
        14: getfield      #2                  // Field _value:Ljava/math/BigInteger;
        17: getstatic     #11                 // Field MAX_LONG:Ljava/math/BigInteger;
        20: invokevirtual #8                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
        23: ifgt          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ireturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public java.lang.Number numberValue();
    descriptor: ()Ljava/lang/Number;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public short shortValue();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #12                 // Method java/math/BigInteger.shortValue:()S
         7: ireturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #13                 // Method java/math/BigInteger.intValue:()I
         7: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #14                 // Method java/math/BigInteger.longValue:()J
         7: lreturn
      LineNumberTable:
        line 71: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public java.math.BigInteger bigIntegerValue();
    descriptor: ()Ljava/math/BigInteger;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #15                 // Method java/math/BigInteger.floatValue:()F
         7: freturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #16                 // Method java/math/BigInteger.doubleValue:()D
         7: dreturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public java.math.BigDecimal decimalValue();
    descriptor: ()Ljava/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #17                 // class java/math/BigDecimal
         3: dup
         4: aload_0
         5: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         8: invokespecial #18                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
        11: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public java.lang.String asText();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #19                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  public boolean asBoolean(boolean);
    descriptor: (Z)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #20                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
         3: aload_0
         4: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         7: invokevirtual #21                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
        10: ifne          17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: ireturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
            0      19     1 defaultValue   Z
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         5: invokevirtual #22                 // Method com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
         8: return
      LineNumberTable:
        line 105: 0
        line 106: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
            0       9     1     g   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       9     2 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
    Exceptions:
      throws java.io.IOException

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: ifnonnull     13
        11: iconst_0
        12: ireturn
        13: aload_1
        14: instanceof    #3                  // class com/fasterxml/jackson/databind/node/BigIntegerNode
        17: ifne          22
        20: iconst_0
        21: ireturn
        22: aload_1
        23: checkcast     #3                  // class com/fasterxml/jackson/databind/node/BigIntegerNode
        26: getfield      #2                  // Field _value:Ljava/math/BigInteger;
        29: aload_0
        30: getfield      #2                  // Field _value:Ljava/math/BigInteger;
        33: invokevirtual #21                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
        36: ireturn
      LineNumberTable:
        line 111: 0
        line 112: 7
        line 113: 13
        line 114: 20
        line 116: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;
            0      37     1     o   Ljava/lang/Object;
      StackMapTable: number_of_entries = 3
        frame_type = 7 /* same */
        frame_type = 5 /* same */
        frame_type = 8 /* same */

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
         4: invokevirtual #23                 // Method java/math/BigInteger.hashCode:()I
         7: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/node/BigIntegerNode;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: ldc2_w        #25                 // long -2147483648l
         3: invokestatic  #27                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
         6: putstatic     #7                  // Field MIN_INTEGER:Ljava/math/BigInteger;
         9: ldc2_w        #28                 // long 2147483647l
        12: invokestatic  #27                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
        15: putstatic     #9                  // Field MAX_INTEGER:Ljava/math/BigInteger;
        18: ldc2_w        #31                 // long -9223372036854775808l
        21: invokestatic  #27                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
        24: putstatic     #10                 // Field MIN_LONG:Ljava/math/BigInteger;
        27: ldc2_w        #33                 // long 9223372036854775807l
        30: invokestatic  #27                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
        33: putstatic     #11                 // Field MAX_LONG:Ljava/math/BigInteger;
        36: return
      LineNumberTable:
        line 17: 0
        line 18: 9
        line 19: 18
        line 20: 27
}
SourceFile: "BigIntegerNode.java"
InnerClasses:
  public static final #56= #55 of #133;   // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser
