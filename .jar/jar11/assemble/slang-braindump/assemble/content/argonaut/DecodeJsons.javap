Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/DecodeJsons.class
  Last modified May 29, 2022; size 42761 bytes
  SHA-256 checksum f42cb6c07e0f6f6b7f452d47b23e02adc089e86d6e95573ea9d28374a2c7b62b
  Compiled from "DecodeJson.scala"
public interface argonaut.DecodeJsons extends argonaut.GeneratedDecodeJsons
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // argonaut/DecodeJsons
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 166, attributes: 6
Constant pool:
     #1 = Utf8               argonaut/DecodeJsons
     #2 = Class              #1           // argonaut/DecodeJsons
     #3 = Utf8               java/lang/Object
     #4 = Class              #3           // java/lang/Object
     #5 = Utf8               argonaut/GeneratedDecodeJsons
     #6 = Class              #5           // argonaut/GeneratedDecodeJsons
     #7 = Utf8               DecodeJson.scala
     #8 = Utf8               Lscala/reflect/ScalaSignature;
     #9 = Utf8               bytes
    #10 = Utf8               \u0006\u0005\tuga\u0002\u0013&!\u0003\r\t\u0001\u000b\u0005\u0006g\u0001!\t\u0001\u000e\u0005\u0006q\u0001!\t!\u000f\u0005\u0006C\u0002!\tA\u0019\u0005\u0006[\u0002!\tA\u001c\u0005\u0006o\u0002!\u0019\u0001\u001f\u0005\u0006u\u0002!\u0019a\u001f\u0005\u0007{\u0002!\t!\n@\t\u0013\u0005u\u0002A1A\u0005\u0004\u0005}\u0002bBA*\u0001\u0011\r\u0011Q\u000b\u0005\b\u0003_\u0002A1AA9\u0011\u001d\t)\t\u0001C\u0002\u0003\u000fCq!a\'\u0001\t\u0007\ti\nC\u0004\u00022\u0002!\u0019!a-\t\u000f\u0005]\u0006\u0001b\u0001\u0002:\"9\u0011Q\u0018\u0001\u0005\u0004\u0005}\u0006bBAe\u0001\u0011\r\u00111\u001a\u0005\b\u0003+\u0004A1AAl\u0011\u001d\t\t\u000f\u0001C\u0002\u0003GDq!!<\u0001\t\u0007\ty\u000fC\u0004\u0002z\u0002!\u0019!a?\t\u000f\t\u0015\u0001\u0001b\u0001\u0003\b!9!\u0011\u0003\u0001\u0005\u0004\tM\u0001b\u0002B\u000f\u0001\u0011\r!q\u0004\u0005\b\u0005S\u0001A1\u0001B\u0016\u0011\u001d\u0011)\u0004\u0001C\u0002\u0005oAqA!\u0012\u0001\t\u0007\u00119\u0005C\u0004\u0003P\u0001!\u0019A!\u0015\t\u000f\tm\u0003\u0001b\u0001\u0003^!9!Q\r\u0001\u0005\u0004\t\u001d\u0004b\u0002B8\u0001\u0011\r!\u0011\u000f\u0005\b\u0005s\u0002A1\u0001B>\u0011\u001d\u0011\u0019\t\u0001C\u0002\u0005\u000bCqAa$\u0001\t\u0007\u0011\t\nC\u0004\u0003\"\u0002!\u0019Aa)\t\u000f\t\u0015\u0007\u0001b\u0001\u0003H\nYA)Z2pI\u0016T5o\u001c8t\u0015\u00051\u0013\u0001C1sO>t\u0017-\u001e;\u0004\u0001M\u0019\u0001!K\u0018\u0011\u0005)jS\"A\u0016\u000b\u00031\nQa]2bY\u0006L!AL\u0016\u0003\r\u0005s\u0017PU3g!\t\u0001\u0014\'D\u0001&\u0013\t\u0011TE\u0001\u000bHK:,\'/\u0019;fI\u0012+7m\u001c3f\u0015N|gn]\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003U\u0002\"A\u000b\u001c\n\u0005]Z#\u0001B+oSR\fQb\u001c9uS>tG)Z2pI\u0016\u0014XC\u0001\u001eA)\rY\u0014\n\u0016\t\u0004aqr\u0014BA\u001f&\u0005)!UmY8eK*\u001bxN\u001c\t\u0003\u007f\u0001c\u0001\u0001B\u0003B\u0005\t\u0007!IA\u0001B#\t\u0019e\t\u0005\u0002+\t&\u0011Qi\u000b\u0002\b\u001d>$\b.\u001b8h!\tQs)\u0003\u0002IW\t\u0019\u0011I\\=\t\u000b)\u0013\u0001\u0019A&\u0002\u0003-\u0004BA\u000b\'O#&\u0011Qj\u000b\u0002\n\rVt7\r^5p]F\u0002\"\u0001M(\n\u0005A+#\u0001\u0002&t_:\u00042A\u000b*?\u0013\t\u00196F\u0001\u0004PaRLwN\u001c\u0005\u0006+\n\u0001\rAV\u0001\u0002KB\u0011qK\u0018\b\u00031r\u0003\"!W\u0016\u000e\u0003iS!aW\u0014\u0002\rq\u0012xn\u001c;?\u0013\ti6&\u0001\u0004Qe\u0016$WMZ\u0005\u0003?\u0002\u0014aa\u0015;sS:<\'BA/,\u0003%!WmY8eK\u0006\u0013(/\u0006\u0002dMR\u0011Am\u001a\t\u0004aq*\u0007CA g\t\u0015\t5A1\u0001C\u0011\u0015A7\u00011\u0001j\u0003\u00051\u0007\u0003\u0002\u0016MU\u0016\u0004\"\u0001M6\n\u00051,#a\u0002%DkJ\u001cxN]\u0001\u0006iJLHk\\\u000b\u0003_J$\"\u0001]:\u0011\u0007)\u0012\u0016\u000f\u0005\u0002@e\u0012)\u0011\t\u0002b\u0001\u0005\"1\u0001\u000e\u0002CA\u0002Q\u00042AK;r\u0013\t18F\u0001\u0005=Eft\u0017-\\3?\u0003EA5)\u001e:t_J$UmY8eK*\u001bxN\\\u000b\u0002sB\u0019\u0001\u0007\u00106\u0002\u001d)\u001bxN\u001c#fG>$WMS:p]V\tA\u0010E\u00021y9\u000bacQ1o\u0005VLG\u000e\u001a$s_6$UmY8eK*\u001bxN\\\u000b\u0006\u007f\u0006E\u0011Q\u0001\u000b\u0007\u0003\u0003\t\u0019\"a\u0006\u0011\tAb\u00141\u0001\t\u0006\u007f\u0005\u0015\u0011q\u0002\u0003\b\u0003\u000f9!\u0019AA\u0005\u0005\u0005\u0019Uc\u0001\"\u0002\f\u00119\u0011QBA\u0003\u0005\u0004\u0011%!A0\u0011\u0007}\n\t\u0002B\u0003B\u000f\t\u0007!\t\u0003\u0004V\u000f\u0001\u000f\u0011Q\u0003\t\u0005aq\ny\u0001C\u0004\u0002\u001a\u001d\u0001\u001d!a\u0007\u0002\u0003\r\u0004\u0012\"!\b\u00028\r\u000by!a\u0001\u000f\t\u0005}\u0011\u0011\u0007\b\u0005\u0003C\tYC\u0004\u0003\u0002$\u0005\u001dbbA-\u0002&%\tA&C\u0002\u0002*-\n!bY8mY\u0016\u001cG/[8o\u0013\u0011\ti#a\f\u0002\u000f\u001d,g.\u001a:jG*\u0019\u0011\u0011F\u0016\n\t\u0005M\u0012QG\u0001\ba\u0006\u001c7.Y4f\u0015\u0011\ti#a\f\n\t\u0005e\u00121\b\u0002\r\u0007\u0006t\')^5mI\u001a\u0013x.\u001c\u0006\u0005\u0003g\t)$\u0001\bV+&#E)Z2pI\u0016T5o\u001c8\u0016\u0005\u0005\u0005\u0003\u0003\u0002\u0019=\u0003\u0007\u0002B!!\u0012\u0002P5\u0011\u0011q\t\u0006\u0005\u0003\u0013\nY%\u0001\u0003vi&d\'BAA\'\u0003\u0011Q\u0017M^1\n\t\u0005E\u0013q\t\u0002\u0005+VKE)\u0001\bMSN$H)Z2pI\u0016T5o\u001c8\u0016\t\u0005]\u0013\u0011\u000e\u000b\u0005\u00033\nY\u0007\u0005\u00031y\u0005m\u0003CBA/\u0003C\n9G\u0004\u0003\u0002$\u0005}\u0013bAA\u001aW%!\u00111MA3\u0005\u0011a\u0015n\u001d;\u000b\u0007\u0005M2\u0006E\u0002@\u0003S\"Q!Q\u0005C\u0002\tCa!V\u0005A\u0004\u00055\u0004\u0003\u0002\u0019=\u0003O\n\u0001CV3di>\u0014H)Z2pI\u0016T5o\u001c8\u0016\t\u0005M\u0014q\u0010\u000b\u0005\u0003k\n\t\t\u0005\u00031y\u0005]\u0004CBA/\u0003s\ni(\u0003\u0003\u0002|\u0005\u0015$A\u0002,fGR|\'\u000fE\u0002@\u0003\u007f\"Q!\u0011\u0006C\u0002\tCa!\u0016\u0006A\u0004\u0005\r\u0005\u0003\u0002\u0019=\u0003{\n\u0001c\u0015;sK\u0006lG)Z2pI\u0016T5o\u001c8\u0016\t\u0005%\u0015Q\u0013\u000b\u0005\u0003\u0017\u000b9\n\u0005\u00031y\u00055\u0005CBA/\u0003\u001f\u000b\u0019*\u0003\u0003\u0002\u0012\u0006\u0015$AB*ue\u0016\fW\u000eE\u0002@\u0003+#Q!Q\u0006C\u0002\tCa!V\u0006A\u0004\u0005e\u0005\u0003\u0002\u0019=\u0003\'\u000bQbU3u\t\u0016\u001cw\u000eZ3Kg>tW\u0003BAP\u0003W#B!!)\u0002.B!\u0001\u0007PAR!\u00159\u0016QUAU\u0013\r\t9\u000b\u0019\u0002\u0004\'\u0016$\bcA \u0002,\u0012)\u0011\t\u0004b\u0001\u0005\"1Q\u000b\u0004a\u0002\u0003_\u0003B\u0001\r\u001f\u0002*\u0006qQK\\5u\t\u0016\u001cw\u000eZ3Kg>tWCAA[!\r\u0001D(N\u0001\u0011\'R\u0014\u0018N\\4EK\u000e|G-\u001a&t_:,\"!a/\u0011\u0007Abd+\u0001\tE_V\u0014G.\u001a#fG>$WMS:p]V\u0011\u0011\u0011\u0019\t\u0005aq\n\u0019\rE\u0002+\u0003\u000bL1!a2,\u0005\u0019!u.\u001e2mK\u0006ya\t\\8bi\u0012+7m\u001c3f\u0015N|g.\u0006\u0002\u0002NB!\u0001\u0007PAh!\rQ\u0013\u0011[\u0005\u0004\u0003\'\\#!\u0002$m_\u0006$\u0018!D%oi\u0012+7m\u001c3f\u0015N|g.\u0006\u0002\u0002ZB!\u0001\u0007PAn!\rQ\u0013Q\\\u0005\u0004\u0003?\\#aA%oi\u0006qAj\u001c8h\t\u0016\u001cw\u000eZ3Kg>tWCAAs!\u0011\u0001D(a:\u0011\u0007)\nI/C\u0002\u0002l.\u0012A\u0001T8oO\u0006y1\u000b[8si\u0012+7m\u001c3f\u0015N|g.\u0006\u0002\u0002rB!\u0001\u0007PAz!\rQ\u0013Q_\u0005\u0004\u0003o\\#!B*i_J$\u0018A\u0004\"zi\u0016$UmY8eK*\u001bxN\\\u000b\u0003\u0003{\u0004B\u0001\r\u001f\u0002\u0000B\u0019!F!\u0001\n\u0007\t\r1F\u0001\u0003CsR,\u0017\u0001\u0005\"jO&sG\u000fR3d_\u0012,\'j]8o+\t\u0011I\u0001\u0005\u00031y\t-\u0001\u0003BA/\u0005\u001bIAAa\u0004\u0002f\t1!)[4J]R\fACQ5h\t\u0016\u001c\u0017.\\1m\t\u0016\u001cw\u000eZ3Kg>tWC\u0001B\u000b!\u0011\u0001DHa\u0006\u0011\t\u0005u#\u0011D\u0005\u0005\u00057\t)G\u0001\u0006CS\u001e$UmY5nC2\f\u0011CQ8pY\u0016\fg\u000eR3d_\u0012,\'j]8o+\t\u0011\t\u0003\u0005\u00031y\t\r\u0002c\u0001\u0016\u0003&%\u0019!qE\u0016\u0003\u000f\t{w\u000e\\3b]\u0006q1\t[1s\t\u0016\u001cw\u000eZ3Kg>tWC\u0001B\u0017!\u0011\u0001DHa\f\u0011\u0007)\u0012\t$C\u0002\u00034-\u0012Aa\u00115be\u0006\t\"\nR8vE2,G)Z2pI\u0016T5o\u001c8\u0016\u0005\te\u0002\u0003\u0002\u0019=\u0005w\u0001BA!\u0010\u0003D5\u0011!q\b\u0006\u0005\u0005\u0003\nY%\u0001\u0003mC:<\u0017\u0002BAd\u0005\u007f\t\u0001C\u0013$m_\u0006$H)Z2pI\u0016T5o\u001c8\u0016\u0005\t%\u0003\u0003\u0002\u0019=\u0005\u0017\u0002BA!\u0010\u0003N%!\u00111\u001bB \u0003IQ\u0015J\u001c;fO\u0016\u0014H)Z2pI\u0016T5o\u001c8\u0016\u0005\tM\u0003\u0003\u0002\u0019=\u0005+\u0002BA!\u0010\u0003X%!!\u0011\fB \u0005\u001dIe\u000e^3hKJ\fqB\u0013\'p]\u001e$UmY8eK*\u001bxN\\\u000b\u0003\u0005?\u0002B\u0001\r\u001f\u0003bA!!Q\bB2\u0013\u0011\tYOa\u0010\u0002!)\u001b\u0006n\u001c:u\t\u0016\u001cw\u000eZ3Kg>tWC\u0001B5!\u0011\u0001DHa\u001b\u0011\t\tu\"QN\u0005\u0005\u0003o\u0014y$A\bK\u0005f$X\rR3d_\u0012,\'j]8o+\t\u0011\u0019\b\u0005\u00031y\tU\u0004\u0003\u0002B\u001f\u0005oJAAa\u0001\u0003@\u0005\u0011\"JQ8pY\u0016\fg\u000eR3d_\u0012,\'j]8o+\t\u0011i\b\u0005\u00031y\t}\u0004\u0003\u0002B\u001f\u0005\u0003KAAa\n\u0003@\u0005!\"j\u00115be\u0006\u001cG/\u001a:EK\u000e|G-\u001a&t_:,\"Aa\"\u0011\tAb$\u0011\u0012\t\u0005\u0005{\u0011Y)\u0003\u0003\u0003\u000e\n}\"!C\"iCJ\f7\r^3s\u0003Ay\u0005\u000f^5p]\u0012+7m\u001c3f\u0015N|g.\u0006\u0003\u0003\u0014\nmE\u0003\u0002BK\u0005;\u0003B\u0001\r\u001f\u0003\u0018B!!F\u0015BM!\ry$1\u0014\u0003\u0006\u0003\u0006\u0012\rA\u0011\u0005\u0007+\u0006\u0002\u001dAa(\u0011\tAb$\u0011T\u0001\u0011\u000b&$\b.\u001a:EK\u000e|G-\u001a&t_:,bA!*\u00032\nUFC\u0002BT\u0005s\u0013y\f\u0005\u00031y\t%\u0006\u0003CA/\u0005W\u0013yKa-\n\t\t5\u0016Q\r\u0002\u0007\u000b&$\b.\u001a:\u0011\u0007}\u0012\t\fB\u0003BE\t\u0007!\tE\u0002@\u0005k#aAa.#\u0005\u0004\u0011%!\u0001\"\t\u000f\tm&\u0005q\u0001\u0003>\u0006\u0011Q-\u0019\t\u0005aq\u0012y\u000bC\u0004\u0003B\n\u0002\u001dAa1\u0002\u0005\u0015\u0014\u0007\u0003\u0002\u0019=\u0005g\u000bQ\"T1q\t\u0016\u001cw\u000eZ3Kg>tW\u0003\u0002Be\u0005+$BAa3\u0003ZB!\u0001\u0007\u0010Bg!\u00199&q\u001a,\u0003T&\u0019!\u0011\u001b1\u0003\u00075\u000b\u0007\u000fE\u0002@\u0005+$aAa6$\u0005\u0004\u0011%!\u0001,\t\rU\u001b\u00039\u0001Bn!\u0011\u0001DHa5
    #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #12 = Class              #11          // java/lang/invoke/MethodHandles$Lookup
    #13 = Utf8               java/lang/invoke/MethodHandles
    #14 = Class              #13          // java/lang/invoke/MethodHandles
    #15 = Utf8               Lookup
    #16 = Utf8               scala/util/control/Exception$Catch
    #17 = Class              #16          // scala/util/control/Exception$Catch
    #18 = Utf8               scala/util/control/Exception
    #19 = Class              #18          // scala/util/control/Exception
    #20 = Utf8               Catch
    #21 = Utf8               reflMethod$Method1
    #22 = Utf8               (Ljava/lang/Class;)Ljava/lang/reflect/Method;
    #23 = Utf8               x$1
    #24 = Utf8               ()Ljava/lang/Object;
    #25 = MethodType         #24          //  ()Ljava/lang/Object;
    #26 = Utf8               scala/runtime/StructuralCallSite
    #27 = Class              #26          // scala/runtime/StructuralCallSite
    #28 = Utf8               bootstrap
    #29 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    #30 = NameAndType        #28:#29      // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    #31 = Methodref          #27.#30      // scala/runtime/StructuralCallSite.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    #32 = MethodHandle       6:#31        // REF_invokeStatic scala/runtime/StructuralCallSite.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    #33 = Utf8               apply
    #34 = Utf8               ()Lscala/runtime/StructuralCallSite;
    #35 = NameAndType        #33:#34      // apply:()Lscala/runtime/StructuralCallSite;
    #36 = InvokeDynamic      #0:#35       // #0:apply:()Lscala/runtime/StructuralCallSite;
    #37 = Utf8               find
    #38 = NameAndType        #37:#22      // find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
    #39 = Methodref          #27.#38      // scala/runtime/StructuralCallSite.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
    #40 = Utf8               scala/runtime/ScalaRunTime$
    #41 = Class              #40          // scala/runtime/ScalaRunTime$
    #42 = Utf8               MODULE$
    #43 = Utf8               Lscala/runtime/ScalaRunTime$;
    #44 = NameAndType        #42:#43      // MODULE$:Lscala/runtime/ScalaRunTime$;
    #45 = Fieldref           #41.#44      // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
    #46 = String             #33          // apply
    #47 = Utf8               parameterTypes
    #48 = Utf8               ()[Ljava/lang/Class;
    #49 = NameAndType        #47:#48      // parameterTypes:()[Ljava/lang/Class;
    #50 = Methodref          #27.#49      // scala/runtime/StructuralCallSite.parameterTypes:()[Ljava/lang/Class;
    #51 = Utf8               java/lang/Class
    #52 = Class              #51          // java/lang/Class
    #53 = Utf8               getMethod
    #54 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    #55 = NameAndType        #53:#54      // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    #56 = Methodref          #52.#55      // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
    #57 = Utf8               ensureAccessible
    #58 = Utf8               (Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    #59 = NameAndType        #57:#58      // ensureAccessible:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    #60 = Methodref          #41.#59      // scala/runtime/ScalaRunTime$.ensureAccessible:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    #61 = Utf8               add
    #62 = Utf8               (Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    #63 = NameAndType        #61:#62      // add:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    #64 = Methodref          #27.#63      // scala/runtime/StructuralCallSite.add:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
    #65 = Utf8               methodCache1
    #66 = Utf8               Lscala/runtime/StructuralCallSite;
    #67 = Utf8               method1
    #68 = Utf8               Ljava/lang/reflect/Method;
    #69 = Utf8               Ljava/lang/Class;
    #70 = Utf8               java/lang/reflect/Method
    #71 = Class              #70          // java/lang/reflect/Method
    #72 = Utf8               argonaut$DecodeJsons$_setter_$UUIDDecodeJson_$eq
    #73 = Utf8               (Largonaut/DecodeJson;)V
    #74 = Utf8               (Largonaut/DecodeJson<Ljava/util/UUID;>;)V
    #75 = Utf8               optionDecoder$
    #76 = Utf8               (Largonaut/DecodeJsons;Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
    #77 = Utf8               $this
    #78 = Utf8               k
    #79 = Utf8               e
    #80 = Utf8               optionDecoder
    #81 = Utf8               (Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
    #82 = NameAndType        #80:#81      // optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
    #83 = InterfaceMethodref #2.#82       // argonaut/DecodeJsons.optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
    #84 = Utf8               Largonaut/DecodeJsons;
    #85 = Utf8               Lscala/Function1;
    #86 = Utf8               Ljava/lang/String;
    #87 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Largonaut/Json;Lscala/Option<TA;>;>;Ljava/lang/String;)Largonaut/DecodeJson<TA;>;
    #88 = Utf8               argonaut/DecodeJson$
    #89 = Class              #88          // argonaut/DecodeJson$
    #90 = Utf8               Largonaut/DecodeJson$;
    #91 = NameAndType        #42:#90      // MODULE$:Largonaut/DecodeJson$;
    #92 = Fieldref           #89.#91      // argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
    #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
    #94 = MethodType         #93          //  (Ljava/lang/Object;)Ljava/lang/Object;
    #95 = Utf8               $anonfun$optionDecoder$1
    #96 = Utf8               (Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
    #97 = NameAndType        #95:#96      // $anonfun$optionDecoder$1:(Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
    #98 = InterfaceMethodref #2.#97       // argonaut/DecodeJsons.$anonfun$optionDecoder$1:(Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
    #99 = MethodHandle       6:#98        // REF_invokeStatic argonaut/DecodeJsons.$anonfun$optionDecoder$1:(Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
   #100 = Utf8               (Largonaut/HCursor;)Largonaut/DecodeResult;
   #101 = MethodType         #100         //  (Largonaut/HCursor;)Largonaut/DecodeResult;
   #102 = Integer            5
   #103 = Integer            1
   #104 = Utf8               java/lang/invoke/LambdaMetafactory
   #105 = Class              #104         // java/lang/invoke/LambdaMetafactory
   #106 = Utf8               altMetafactory
   #107 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #108 = NameAndType        #106:#107    // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #109 = Methodref          #105.#108    // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #110 = MethodHandle       6:#109       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #111 = Utf8               (Lscala/Function1;Ljava/lang/String;)Lscala/Function1;
   #112 = NameAndType        #33:#111     // apply:(Lscala/Function1;Ljava/lang/String;)Lscala/Function1;
   #113 = InvokeDynamic      #1:#112      // #1:apply:(Lscala/Function1;Ljava/lang/String;)Lscala/Function1;
   #114 = Utf8               (Lscala/Function1;)Largonaut/DecodeJson;
   #115 = NameAndType        #33:#114     // apply:(Lscala/Function1;)Largonaut/DecodeJson;
   #116 = Methodref          #89.#115     // argonaut/DecodeJson$.apply:(Lscala/Function1;)Largonaut/DecodeJson;
   #117 = Utf8               this
   #118 = Utf8               decodeArr$
   #119 = Utf8               (Largonaut/DecodeJsons;Lscala/Function1;)Largonaut/DecodeJson;
   #120 = Utf8               f
   #121 = Utf8               decodeArr
   #122 = NameAndType        #121:#114    // decodeArr:(Lscala/Function1;)Largonaut/DecodeJson;
   #123 = InterfaceMethodref #2.#122      // argonaut/DecodeJsons.decodeArr:(Lscala/Function1;)Largonaut/DecodeJson;
   #124 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Largonaut/HCursor;TA;>;)Largonaut/DecodeJson<TA;>;
   #125 = Utf8               $anonfun$decodeArr$1
   #126 = Utf8               (Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
   #127 = NameAndType        #125:#126    // $anonfun$decodeArr$1:(Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
   #128 = InterfaceMethodref #2.#127      // argonaut/DecodeJsons.$anonfun$decodeArr$1:(Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
   #129 = MethodHandle       6:#128       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$decodeArr$1:(Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
   #130 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #131 = NameAndType        #33:#130     // apply:(Lscala/Function1;)Lscala/Function1;
   #132 = InvokeDynamic      #2:#131      // #2:apply:(Lscala/Function1;)Lscala/Function1;
   #133 = Utf8               tryTo$
   #134 = Utf8               (Largonaut/DecodeJsons;Lscala/Function0;)Lscala/Option;
   #135 = Utf8               tryTo
   #136 = Utf8               (Lscala/Function0;)Lscala/Option;
   #137 = NameAndType        #135:#136    // tryTo:(Lscala/Function0;)Lscala/Option;
   #138 = InterfaceMethodref #2.#137      // argonaut/DecodeJsons.tryTo:(Lscala/Function0;)Lscala/Option;
   #139 = Utf8               Lscala/Function0;
   #140 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function0<TA;>;)Lscala/Option<TA;>;
   #141 = Utf8               scala/util/control/Exception$
   #142 = Class              #141         // scala/util/control/Exception$
   #143 = Utf8               Lscala/util/control/Exception$;
   #144 = NameAndType        #42:#143     // MODULE$:Lscala/util/control/Exception$;
   #145 = Fieldref           #142.#144    // scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
   #146 = Utf8               java/lang/IllegalArgumentException
   #147 = Class              #146         // java/lang/IllegalArgumentException
   #148 = Utf8               [Ljava/lang/Object;
   #149 = Class              #148         // "[Ljava/lang/Object;"
   #150 = Utf8               wrapRefArray
   #151 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #152 = NameAndType        #150:#151    // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #153 = Methodref          #41.#152     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #154 = Utf8               catching
   #155 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
   #156 = NameAndType        #154:#155    // catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
   #157 = Methodref          #142.#156    // scala/util/control/Exception$.catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
   #158 = Utf8               opt
   #159 = NameAndType        #158:#136    // opt:(Lscala/Function0;)Lscala/Option;
   #160 = Methodref          #17.#159     // scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
   #161 = Utf8               HCursorDecodeJson$
   #162 = Utf8               (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
   #163 = Utf8               HCursorDecodeJson
   #164 = Utf8               ()Largonaut/DecodeJson;
   #165 = NameAndType        #163:#164    // HCursorDecodeJson:()Largonaut/DecodeJson;
   #166 = InterfaceMethodref #2.#165      // argonaut/DecodeJsons.HCursorDecodeJson:()Largonaut/DecodeJson;
   #167 = Utf8               ()Largonaut/DecodeJson<Largonaut/HCursor;>;
   #168 = Utf8               $anonfun$HCursorDecodeJson$1
   #169 = Utf8               (Largonaut/HCursor;)Largonaut/HCursor;
   #170 = NameAndType        #168:#169    // $anonfun$HCursorDecodeJson$1:(Largonaut/HCursor;)Largonaut/HCursor;
   #171 = InterfaceMethodref #2.#170      // argonaut/DecodeJsons.$anonfun$HCursorDecodeJson$1:(Largonaut/HCursor;)Largonaut/HCursor;
   #172 = MethodHandle       6:#171       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$HCursorDecodeJson$1:(Largonaut/HCursor;)Largonaut/HCursor;
   #173 = MethodType         #169         //  (Largonaut/HCursor;)Largonaut/HCursor;
   #174 = Utf8               ()Lscala/Function1;
   #175 = NameAndType        #33:#174     // apply:()Lscala/Function1;
   #176 = InvokeDynamic      #3:#175      // #3:apply:()Lscala/Function1;
   #177 = Utf8               JsonDecodeJson$
   #178 = Utf8               JsonDecodeJson
   #179 = NameAndType        #178:#164    // JsonDecodeJson:()Largonaut/DecodeJson;
   #180 = InterfaceMethodref #2.#179      // argonaut/DecodeJsons.JsonDecodeJson:()Largonaut/DecodeJson;
   #181 = Utf8               ()Largonaut/DecodeJson<Largonaut/Json;>;
   #182 = Utf8               $anonfun$JsonDecodeJson$1
   #183 = Utf8               (Largonaut/HCursor;)Largonaut/Json;
   #184 = NameAndType        #182:#183    // $anonfun$JsonDecodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
   #185 = InterfaceMethodref #2.#184      // argonaut/DecodeJsons.$anonfun$JsonDecodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
   #186 = MethodHandle       6:#185       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JsonDecodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
   #187 = MethodType         #183         //  (Largonaut/HCursor;)Largonaut/Json;
   #188 = InvokeDynamic      #4:#175      // #4:apply:()Lscala/Function1;
   #189 = Utf8               CanBuildFromDecodeJson$
   #190 = Utf8               (Largonaut/DecodeJsons;Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
   #191 = Utf8               c
   #192 = Utf8               CanBuildFromDecodeJson
   #193 = Utf8               (Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
   #194 = NameAndType        #192:#193    // CanBuildFromDecodeJson:(Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
   #195 = InterfaceMethodref #2.#194      // argonaut/DecodeJsons.CanBuildFromDecodeJson:(Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
   #196 = Utf8               Largonaut/DecodeJson;
   #197 = Utf8               Lscala/collection/BuildFrom;
   #198 = Utf8               <A:Ljava/lang/Object;C:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;Lscala/collection/BuildFrom<Lscala/runtime/Nothing$;TA;TC;>;)Largonaut/DecodeJson<TC;>;
   #199 = Utf8               $anonfun$CanBuildFromDecodeJson$1
   #200 = Utf8               (Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
   #201 = NameAndType        #199:#200    // $anonfun$CanBuildFromDecodeJson$1:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
   #202 = InterfaceMethodref #2.#201      // argonaut/DecodeJsons.$anonfun$CanBuildFromDecodeJson$1:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
   #203 = MethodHandle       6:#202       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$CanBuildFromDecodeJson$1:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
   #204 = Utf8               ()Lscala/collection/mutable/Builder;
   #205 = MethodType         #204         //  ()Lscala/collection/mutable/Builder;
   #206 = Utf8               (Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/Function0;
   #207 = NameAndType        #33:#206     // apply:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/Function0;
   #208 = InvokeDynamic      #5:#207      // #5:apply:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/Function0;
   #209 = Utf8               BuilderDecodeJson
   #210 = Utf8               (Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #211 = NameAndType        #209:#210    // BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #212 = Methodref          #89.#211     // argonaut/DecodeJson$.BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #213 = Utf8               UUIDDecodeJson
   #214 = Utf8               ()Largonaut/DecodeJson<Ljava/util/UUID;>;
   #215 = Utf8               ListDecodeJson$
   #216 = Utf8               (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #217 = Utf8               ListDecodeJson
   #218 = Utf8               (Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #219 = NameAndType        #217:#218    // ListDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #220 = InterfaceMethodref #2.#219      // argonaut/DecodeJsons.ListDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #221 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/List<TA;>;>;
   #222 = Utf8               $anonfun$ListDecodeJson$1
   #223 = NameAndType        #222:#204    // $anonfun$ListDecodeJson$1:()Lscala/collection/mutable/Builder;
   #224 = InterfaceMethodref #2.#223      // argonaut/DecodeJsons.$anonfun$ListDecodeJson$1:()Lscala/collection/mutable/Builder;
   #225 = MethodHandle       6:#224       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ListDecodeJson$1:()Lscala/collection/mutable/Builder;
   #226 = Utf8               ()Lscala/Function0;
   #227 = NameAndType        #33:#226     // apply:()Lscala/Function0;
   #228 = InvokeDynamic      #6:#227      // #6:apply:()Lscala/Function0;
   #229 = Utf8               VectorDecodeJson$
   #230 = Utf8               VectorDecodeJson
   #231 = NameAndType        #230:#218    // VectorDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #232 = InterfaceMethodref #2.#231      // argonaut/DecodeJsons.VectorDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #233 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Vector<TA;>;>;
   #234 = Utf8               $anonfun$VectorDecodeJson$1
   #235 = Utf8               ()Lscala/collection/mutable/ReusableBuilder;
   #236 = NameAndType        #234:#235    // $anonfun$VectorDecodeJson$1:()Lscala/collection/mutable/ReusableBuilder;
   #237 = InterfaceMethodref #2.#236      // argonaut/DecodeJsons.$anonfun$VectorDecodeJson$1:()Lscala/collection/mutable/ReusableBuilder;
   #238 = MethodHandle       6:#237       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$VectorDecodeJson$1:()Lscala/collection/mutable/ReusableBuilder;
   #239 = MethodType         #235         //  ()Lscala/collection/mutable/ReusableBuilder;
   #240 = InvokeDynamic      #7:#227      // #7:apply:()Lscala/Function0;
   #241 = Utf8               StreamDecodeJson$
   #242 = Utf8               StreamDecodeJson
   #243 = NameAndType        #242:#218    // StreamDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #244 = InterfaceMethodref #2.#243      // argonaut/DecodeJsons.StreamDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #245 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Stream<TA;>;>;
   #246 = Utf8               $anonfun$StreamDecodeJson$1
   #247 = NameAndType        #246:#204    // $anonfun$StreamDecodeJson$1:()Lscala/collection/mutable/Builder;
   #248 = InterfaceMethodref #2.#247      // argonaut/DecodeJsons.$anonfun$StreamDecodeJson$1:()Lscala/collection/mutable/Builder;
   #249 = MethodHandle       6:#248       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$StreamDecodeJson$1:()Lscala/collection/mutable/Builder;
   #250 = InvokeDynamic      #8:#227      // #8:apply:()Lscala/Function0;
   #251 = Utf8               SetDecodeJson$
   #252 = Utf8               SetDecodeJson
   #253 = NameAndType        #252:#218    // SetDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #254 = InterfaceMethodref #2.#253      // argonaut/DecodeJsons.SetDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #255 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Set<TA;>;>;
   #256 = Utf8               $anonfun$SetDecodeJson$1
   #257 = NameAndType        #256:#204    // $anonfun$SetDecodeJson$1:()Lscala/collection/mutable/Builder;
   #258 = InterfaceMethodref #2.#257      // argonaut/DecodeJsons.$anonfun$SetDecodeJson$1:()Lscala/collection/mutable/Builder;
   #259 = MethodHandle       6:#258       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$SetDecodeJson$1:()Lscala/collection/mutable/Builder;
   #260 = InvokeDynamic      #9:#227      // #9:apply:()Lscala/Function0;
   #261 = Utf8               UnitDecodeJson$
   #262 = Utf8               UnitDecodeJson
   #263 = NameAndType        #262:#164    // UnitDecodeJson:()Largonaut/DecodeJson;
   #264 = InterfaceMethodref #2.#263      // argonaut/DecodeJsons.UnitDecodeJson:()Largonaut/DecodeJson;
   #265 = Utf8               ()Largonaut/DecodeJson<Lscala/runtime/BoxedUnit;>;
   #266 = Utf8               $anonfun$UnitDecodeJson$1
   #267 = NameAndType        #266:#100    // $anonfun$UnitDecodeJson$1:(Largonaut/HCursor;)Largonaut/DecodeResult;
   #268 = InterfaceMethodref #2.#267      // argonaut/DecodeJsons.$anonfun$UnitDecodeJson$1:(Largonaut/HCursor;)Largonaut/DecodeResult;
   #269 = MethodHandle       6:#268       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$UnitDecodeJson$1:(Largonaut/HCursor;)Largonaut/DecodeResult;
   #270 = InvokeDynamic      #10:#175     // #10:apply:()Lscala/Function1;
   #271 = Utf8               StringDecodeJson$
   #272 = Utf8               StringDecodeJson
   #273 = NameAndType        #272:#164    // StringDecodeJson:()Largonaut/DecodeJson;
   #274 = InterfaceMethodref #2.#273      // argonaut/DecodeJsons.StringDecodeJson:()Largonaut/DecodeJson;
   #275 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/String;>;
   #276 = Utf8               $anonfun$StringDecodeJson$1
   #277 = Utf8               (Largonaut/Json;)Lscala/Option;
   #278 = NameAndType        #276:#277    // $anonfun$StringDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #279 = InterfaceMethodref #2.#278      // argonaut/DecodeJsons.$anonfun$StringDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #280 = MethodHandle       6:#279       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$StringDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #281 = MethodType         #277         //  (Largonaut/Json;)Lscala/Option;
   #282 = InvokeDynamic      #11:#175     // #11:apply:()Lscala/Function1;
   #283 = Utf8               String
   #284 = String             #283         // String
   #285 = Utf8               DoubleDecodeJson$
   #286 = Utf8               DoubleDecodeJson
   #287 = NameAndType        #286:#164    // DoubleDecodeJson:()Largonaut/DecodeJson;
   #288 = InterfaceMethodref #2.#287      // argonaut/DecodeJsons.DoubleDecodeJson:()Largonaut/DecodeJson;
   #289 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Object;>;
   #290 = Utf8               $anonfun$DoubleDecodeJson$1
   #291 = Utf8               (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #292 = NameAndType        #290:#291    // $anonfun$DoubleDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #293 = InterfaceMethodref #2.#292      // argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #294 = MethodHandle       6:#293       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #295 = Utf8               (Largonaut/DecodeJsons;)Lscala/Function1;
   #296 = NameAndType        #33:#295     // apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #297 = InvokeDynamic      #12:#296     // #12:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #298 = Utf8               Double
   #299 = String             #298         // Double
   #300 = Utf8               FloatDecodeJson$
   #301 = Utf8               FloatDecodeJson
   #302 = NameAndType        #301:#164    // FloatDecodeJson:()Largonaut/DecodeJson;
   #303 = InterfaceMethodref #2.#302      // argonaut/DecodeJsons.FloatDecodeJson:()Largonaut/DecodeJson;
   #304 = Utf8               $anonfun$FloatDecodeJson$1
   #305 = NameAndType        #304:#291    // $anonfun$FloatDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #306 = InterfaceMethodref #2.#305      // argonaut/DecodeJsons.$anonfun$FloatDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #307 = MethodHandle       6:#306       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #308 = InvokeDynamic      #13:#296     // #13:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #309 = Utf8               Float
   #310 = String             #309         // Float
   #311 = Utf8               IntDecodeJson$
   #312 = Utf8               IntDecodeJson
   #313 = NameAndType        #312:#164    // IntDecodeJson:()Largonaut/DecodeJson;
   #314 = InterfaceMethodref #2.#313      // argonaut/DecodeJsons.IntDecodeJson:()Largonaut/DecodeJson;
   #315 = Utf8               $anonfun$IntDecodeJson$1
   #316 = NameAndType        #315:#291    // $anonfun$IntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #317 = InterfaceMethodref #2.#316      // argonaut/DecodeJsons.$anonfun$IntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #318 = MethodHandle       6:#317       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #319 = InvokeDynamic      #14:#296     // #14:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #320 = Utf8               Int
   #321 = String             #320         // Int
   #322 = Utf8               LongDecodeJson$
   #323 = Utf8               LongDecodeJson
   #324 = NameAndType        #323:#164    // LongDecodeJson:()Largonaut/DecodeJson;
   #325 = InterfaceMethodref #2.#324      // argonaut/DecodeJsons.LongDecodeJson:()Largonaut/DecodeJson;
   #326 = Utf8               $anonfun$LongDecodeJson$1
   #327 = NameAndType        #326:#291    // $anonfun$LongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #328 = InterfaceMethodref #2.#327      // argonaut/DecodeJsons.$anonfun$LongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #329 = MethodHandle       6:#328       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #330 = InvokeDynamic      #15:#296     // #15:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #331 = Utf8               Long
   #332 = String             #331         // Long
   #333 = Utf8               ShortDecodeJson$
   #334 = Utf8               ShortDecodeJson
   #335 = NameAndType        #334:#164    // ShortDecodeJson:()Largonaut/DecodeJson;
   #336 = InterfaceMethodref #2.#335      // argonaut/DecodeJsons.ShortDecodeJson:()Largonaut/DecodeJson;
   #337 = Utf8               $anonfun$ShortDecodeJson$1
   #338 = NameAndType        #337:#291    // $anonfun$ShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #339 = InterfaceMethodref #2.#338      // argonaut/DecodeJsons.$anonfun$ShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #340 = MethodHandle       6:#339       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #341 = InvokeDynamic      #16:#296     // #16:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #342 = Utf8               Short
   #343 = String             #342         // Short
   #344 = Utf8               ByteDecodeJson$
   #345 = Utf8               ByteDecodeJson
   #346 = NameAndType        #345:#164    // ByteDecodeJson:()Largonaut/DecodeJson;
   #347 = InterfaceMethodref #2.#346      // argonaut/DecodeJsons.ByteDecodeJson:()Largonaut/DecodeJson;
   #348 = Utf8               $anonfun$ByteDecodeJson$1
   #349 = NameAndType        #348:#291    // $anonfun$ByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #350 = InterfaceMethodref #2.#349      // argonaut/DecodeJsons.$anonfun$ByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #351 = MethodHandle       6:#350       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #352 = InvokeDynamic      #17:#296     // #17:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #353 = Utf8               Byte
   #354 = String             #353         // Byte
   #355 = Utf8               BigIntDecodeJson$
   #356 = Utf8               BigIntDecodeJson
   #357 = NameAndType        #356:#164    // BigIntDecodeJson:()Largonaut/DecodeJson;
   #358 = InterfaceMethodref #2.#357      // argonaut/DecodeJsons.BigIntDecodeJson:()Largonaut/DecodeJson;
   #359 = Utf8               ()Largonaut/DecodeJson<Lscala/math/BigInt;>;
   #360 = Utf8               $anonfun$BigIntDecodeJson$1
   #361 = NameAndType        #360:#291    // $anonfun$BigIntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #362 = InterfaceMethodref #2.#361      // argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #363 = MethodHandle       6:#362       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #364 = InvokeDynamic      #18:#296     // #18:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #365 = Utf8               BigInt
   #366 = String             #365         // BigInt
   #367 = Utf8               BigDecimalDecodeJson$
   #368 = Utf8               BigDecimalDecodeJson
   #369 = NameAndType        #368:#164    // BigDecimalDecodeJson:()Largonaut/DecodeJson;
   #370 = InterfaceMethodref #2.#369      // argonaut/DecodeJsons.BigDecimalDecodeJson:()Largonaut/DecodeJson;
   #371 = Utf8               ()Largonaut/DecodeJson<Lscala/math/BigDecimal;>;
   #372 = Utf8               $anonfun$BigDecimalDecodeJson$1
   #373 = NameAndType        #372:#291    // $anonfun$BigDecimalDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #374 = InterfaceMethodref #2.#373      // argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #375 = MethodHandle       6:#374       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #376 = InvokeDynamic      #19:#296     // #19:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #377 = Utf8               BigDecimal
   #378 = String             #377         // BigDecimal
   #379 = Utf8               BooleanDecodeJson$
   #380 = Utf8               BooleanDecodeJson
   #381 = NameAndType        #380:#164    // BooleanDecodeJson:()Largonaut/DecodeJson;
   #382 = InterfaceMethodref #2.#381      // argonaut/DecodeJsons.BooleanDecodeJson:()Largonaut/DecodeJson;
   #383 = Utf8               $anonfun$BooleanDecodeJson$1
   #384 = NameAndType        #383:#291    // $anonfun$BooleanDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #385 = InterfaceMethodref #2.#384      // argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #386 = MethodHandle       6:#385       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #387 = InvokeDynamic      #20:#296     // #20:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #388 = Utf8               Boolean
   #389 = String             #388         // Boolean
   #390 = Utf8               CharDecodeJson$
   #391 = Utf8               CharDecodeJson
   #392 = NameAndType        #391:#164    // CharDecodeJson:()Largonaut/DecodeJson;
   #393 = InterfaceMethodref #2.#392      // argonaut/DecodeJsons.CharDecodeJson:()Largonaut/DecodeJson;
   #394 = Utf8               $anonfun$CharDecodeJson$1
   #395 = NameAndType        #394:#277    // $anonfun$CharDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #396 = InterfaceMethodref #2.#395      // argonaut/DecodeJsons.$anonfun$CharDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #397 = MethodHandle       6:#396       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$CharDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #398 = InvokeDynamic      #21:#175     // #21:apply:()Lscala/Function1;
   #399 = Utf8               Char
   #400 = String             #399         // Char
   #401 = Utf8               JDoubleDecodeJson$
   #402 = Utf8               JDoubleDecodeJson
   #403 = NameAndType        #402:#164    // JDoubleDecodeJson:()Largonaut/DecodeJson;
   #404 = InterfaceMethodref #2.#403      // argonaut/DecodeJsons.JDoubleDecodeJson:()Largonaut/DecodeJson;
   #405 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Double;>;
   #406 = Utf8               $anonfun$JDoubleDecodeJson$1$adapted
   #407 = Utf8               (Ljava/lang/Object;)Ljava/lang/Double;
   #408 = NameAndType        #406:#407    // $anonfun$JDoubleDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Double;
   #409 = InterfaceMethodref #2.#408      // argonaut/DecodeJsons.$anonfun$JDoubleDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Double;
   #410 = MethodHandle       6:#409       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JDoubleDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Double;
   #411 = MethodType         #407         //  (Ljava/lang/Object;)Ljava/lang/Double;
   #412 = InvokeDynamic      #22:#175     // #22:apply:()Lscala/Function1;
   #413 = Utf8               argonaut/DecodeJson
   #414 = Class              #413         // argonaut/DecodeJson
   #415 = Utf8               map
   #416 = NameAndType        #415:#114    // map:(Lscala/Function1;)Largonaut/DecodeJson;
   #417 = InterfaceMethodref #414.#416    // argonaut/DecodeJson.map:(Lscala/Function1;)Largonaut/DecodeJson;
   #418 = Utf8               JFloatDecodeJson$
   #419 = Utf8               JFloatDecodeJson
   #420 = NameAndType        #419:#164    // JFloatDecodeJson:()Largonaut/DecodeJson;
   #421 = InterfaceMethodref #2.#420      // argonaut/DecodeJsons.JFloatDecodeJson:()Largonaut/DecodeJson;
   #422 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Float;>;
   #423 = Utf8               $anonfun$JFloatDecodeJson$1$adapted
   #424 = Utf8               (Ljava/lang/Object;)Ljava/lang/Float;
   #425 = NameAndType        #423:#424    // $anonfun$JFloatDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Float;
   #426 = InterfaceMethodref #2.#425      // argonaut/DecodeJsons.$anonfun$JFloatDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Float;
   #427 = MethodHandle       6:#426       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JFloatDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Float;
   #428 = MethodType         #424         //  (Ljava/lang/Object;)Ljava/lang/Float;
   #429 = InvokeDynamic      #23:#175     // #23:apply:()Lscala/Function1;
   #430 = Utf8               JIntegerDecodeJson$
   #431 = Utf8               JIntegerDecodeJson
   #432 = NameAndType        #431:#164    // JIntegerDecodeJson:()Largonaut/DecodeJson;
   #433 = InterfaceMethodref #2.#432      // argonaut/DecodeJsons.JIntegerDecodeJson:()Largonaut/DecodeJson;
   #434 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Integer;>;
   #435 = Utf8               $anonfun$JIntegerDecodeJson$1
   #436 = NameAndType        #435:#291    // $anonfun$JIntegerDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #437 = InterfaceMethodref #2.#436      // argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #438 = MethodHandle       6:#437       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #439 = InvokeDynamic      #24:#296     // #24:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #440 = Utf8               java.lang.Integer
   #441 = String             #440         // java.lang.Integer
   #442 = Utf8               JLongDecodeJson$
   #443 = Utf8               JLongDecodeJson
   #444 = NameAndType        #443:#164    // JLongDecodeJson:()Largonaut/DecodeJson;
   #445 = InterfaceMethodref #2.#444      // argonaut/DecodeJsons.JLongDecodeJson:()Largonaut/DecodeJson;
   #446 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Long;>;
   #447 = Utf8               $anonfun$JLongDecodeJson$1
   #448 = NameAndType        #447:#291    // $anonfun$JLongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #449 = InterfaceMethodref #2.#448      // argonaut/DecodeJsons.$anonfun$JLongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #450 = MethodHandle       6:#449       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #451 = InvokeDynamic      #25:#296     // #25:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #452 = Utf8               java.lang.Long
   #453 = String             #452         // java.lang.Long
   #454 = Utf8               JShortDecodeJson$
   #455 = Utf8               JShortDecodeJson
   #456 = NameAndType        #455:#164    // JShortDecodeJson:()Largonaut/DecodeJson;
   #457 = InterfaceMethodref #2.#456      // argonaut/DecodeJsons.JShortDecodeJson:()Largonaut/DecodeJson;
   #458 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Short;>;
   #459 = Utf8               $anonfun$JShortDecodeJson$1
   #460 = NameAndType        #459:#291    // $anonfun$JShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #461 = InterfaceMethodref #2.#460      // argonaut/DecodeJsons.$anonfun$JShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #462 = MethodHandle       6:#461       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #463 = InvokeDynamic      #26:#296     // #26:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #464 = Utf8               java.lang.Short
   #465 = String             #464         // java.lang.Short
   #466 = Utf8               JByteDecodeJson$
   #467 = Utf8               JByteDecodeJson
   #468 = NameAndType        #467:#164    // JByteDecodeJson:()Largonaut/DecodeJson;
   #469 = InterfaceMethodref #2.#468      // argonaut/DecodeJsons.JByteDecodeJson:()Largonaut/DecodeJson;
   #470 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Byte;>;
   #471 = Utf8               $anonfun$JByteDecodeJson$1
   #472 = NameAndType        #471:#291    // $anonfun$JByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #473 = InterfaceMethodref #2.#472      // argonaut/DecodeJsons.$anonfun$JByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #474 = MethodHandle       6:#473       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #475 = InvokeDynamic      #27:#296     // #27:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #476 = Utf8               java.lang.Byte
   #477 = String             #476         // java.lang.Byte
   #478 = Utf8               JBooleanDecodeJson$
   #479 = Utf8               JBooleanDecodeJson
   #480 = NameAndType        #479:#164    // JBooleanDecodeJson:()Largonaut/DecodeJson;
   #481 = InterfaceMethodref #2.#480      // argonaut/DecodeJsons.JBooleanDecodeJson:()Largonaut/DecodeJson;
   #482 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Boolean;>;
   #483 = Utf8               $anonfun$JBooleanDecodeJson$1
   #484 = NameAndType        #483:#277    // $anonfun$JBooleanDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #485 = InterfaceMethodref #2.#484      // argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #486 = MethodHandle       6:#485       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #487 = InvokeDynamic      #28:#175     // #28:apply:()Lscala/Function1;
   #488 = Utf8               java.lang.Boolean
   #489 = String             #488         // java.lang.Boolean
   #490 = Utf8               JCharacterDecodeJson$
   #491 = Utf8               JCharacterDecodeJson
   #492 = NameAndType        #491:#164    // JCharacterDecodeJson:()Largonaut/DecodeJson;
   #493 = InterfaceMethodref #2.#492      // argonaut/DecodeJsons.JCharacterDecodeJson:()Largonaut/DecodeJson;
   #494 = Utf8               ()Largonaut/DecodeJson<Ljava/lang/Character;>;
   #495 = Utf8               $anonfun$JCharacterDecodeJson$1
   #496 = NameAndType        #495:#277    // $anonfun$JCharacterDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #497 = InterfaceMethodref #2.#496      // argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #498 = MethodHandle       6:#497       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$1:(Largonaut/Json;)Lscala/Option;
   #499 = InvokeDynamic      #29:#175     // #29:apply:()Lscala/Function1;
   #500 = Utf8               java.lang.Character
   #501 = String             #500         // java.lang.Character
   #502 = Utf8               OptionDecodeJson$
   #503 = Utf8               OptionDecodeJson
   #504 = NameAndType        #503:#218    // OptionDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #505 = InterfaceMethodref #2.#504      // argonaut/DecodeJsons.OptionDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #506 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/Option<TA;>;>;
   #507 = Utf8               $anonfun$OptionDecodeJson$1
   #508 = Utf8               (Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
   #509 = NameAndType        #507:#508    // $anonfun$OptionDecodeJson$1:(Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
   #510 = InterfaceMethodref #2.#509      // argonaut/DecodeJsons.$anonfun$OptionDecodeJson$1:(Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
   #511 = MethodHandle       6:#510       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$OptionDecodeJson$1:(Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
   #512 = Utf8               (Largonaut/ACursor;)Largonaut/DecodeResult;
   #513 = MethodType         #512         //  (Largonaut/ACursor;)Largonaut/DecodeResult;
   #514 = Utf8               (Largonaut/DecodeJson;)Lscala/Function1;
   #515 = NameAndType        #33:#514     // apply:(Largonaut/DecodeJson;)Lscala/Function1;
   #516 = InvokeDynamic      #30:#515     // #30:apply:(Largonaut/DecodeJson;)Lscala/Function1;
   #517 = Utf8               withReattempt
   #518 = NameAndType        #517:#114    // withReattempt:(Lscala/Function1;)Largonaut/DecodeJson;
   #519 = Methodref          #89.#518     // argonaut/DecodeJson$.withReattempt:(Lscala/Function1;)Largonaut/DecodeJson;
   #520 = Utf8               EitherDecodeJson$
   #521 = Utf8               (Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #522 = Utf8               ea
   #523 = Utf8               eb
   #524 = Utf8               EitherDecodeJson
   #525 = Utf8               (Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #526 = NameAndType        #524:#525    // EitherDecodeJson:(Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #527 = InterfaceMethodref #2.#526      // argonaut/DecodeJsons.EitherDecodeJson:(Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #528 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;Largonaut/DecodeJson<TB;>;)Largonaut/DecodeJson<Lscala/util/Either<TA;TB;>;>;
   #529 = Utf8               $anonfun$EitherDecodeJson$1
   #530 = Utf8               (Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #531 = NameAndType        #529:#530    // $anonfun$EitherDecodeJson$1:(Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #532 = InterfaceMethodref #2.#531      // argonaut/DecodeJsons.$anonfun$EitherDecodeJson$1:(Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #533 = MethodHandle       6:#532       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$1:(Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #534 = Utf8               (Largonaut/DecodeJson;Largonaut/DecodeJson;)Lscala/Function1;
   #535 = NameAndType        #33:#534     // apply:(Largonaut/DecodeJson;Largonaut/DecodeJson;)Lscala/Function1;
   #536 = InvokeDynamic      #31:#535     // #31:apply:(Largonaut/DecodeJson;Largonaut/DecodeJson;)Lscala/Function1;
   #537 = Utf8               MapDecodeJson$
   #538 = Utf8               MapDecodeJson
   #539 = NameAndType        #538:#218    // MapDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #540 = InterfaceMethodref #2.#539      // argonaut/DecodeJsons.MapDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
   #541 = Utf8               <V:Ljava/lang/Object;>(Largonaut/DecodeJson<TV;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Map<Ljava/lang/String;TV;>;>;
   #542 = Utf8               $anonfun$MapDecodeJson$1
   #543 = Utf8               (Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #544 = NameAndType        #542:#543    // $anonfun$MapDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #545 = InterfaceMethodref #2.#544      // argonaut/DecodeJsons.$anonfun$MapDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #546 = MethodHandle       6:#545       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
   #547 = Utf8               (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Lscala/Function1;
   #548 = NameAndType        #33:#547     // apply:(Largonaut/DecodeJsons;Largonaut/DecodeJson;)Lscala/Function1;
   #549 = InvokeDynamic      #32:#548     // #32:apply:(Largonaut/DecodeJsons;Largonaut/DecodeJson;)Lscala/Function1;
   #550 = Utf8               k$1
   #551 = Utf8               e$2
   #552 = Utf8               a
   #553 = Utf8               argonaut/HCursor
   #554 = Class              #553         // argonaut/HCursor
   #555 = Utf8               focus
   #556 = Utf8               ()Largonaut/Json;
   #557 = NameAndType        #555:#556    // focus:()Largonaut/Json;
   #558 = Methodref          #554.#557    // argonaut/HCursor.focus:()Largonaut/Json;
   #559 = Utf8               scala/Function1
   #560 = Class              #559         // scala/Function1
   #561 = NameAndType        #33:#93      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #562 = InterfaceMethodref #560.#561    // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #563 = Utf8               scala/Option
   #564 = Class              #563         // scala/Option
   #565 = Utf8               scala/None$
   #566 = Class              #565         // scala/None$
   #567 = Utf8               Lscala/None$;
   #568 = NameAndType        #42:#567     // MODULE$:Lscala/None$;
   #569 = Fieldref           #566.#568    // scala/None$.MODULE$:Lscala/None$;
   #570 = Utf8               equals
   #571 = Utf8               (Ljava/lang/Object;)Z
   #572 = NameAndType        #570:#571    // equals:(Ljava/lang/Object;)Z
   #573 = Methodref          #4.#572      // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #574 = Utf8               argonaut/DecodeResult$
   #575 = Class              #574         // argonaut/DecodeResult$
   #576 = Utf8               Largonaut/DecodeResult$;
   #577 = NameAndType        #42:#576     // MODULE$:Largonaut/DecodeResult$;
   #578 = Fieldref           #575.#577    // argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
   #579 = Utf8               history
   #580 = Utf8               ()Largonaut/CursorHistory;
   #581 = NameAndType        #579:#580    // history:()Largonaut/CursorHistory;
   #582 = Methodref          #554.#581    // argonaut/HCursor.history:()Largonaut/CursorHistory;
   #583 = Utf8               fail
   #584 = Utf8               (Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
   #585 = NameAndType        #583:#584    // fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
   #586 = Methodref          #575.#585    // argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
   #587 = Utf8               scala/Some
   #588 = Class              #587         // scala/Some
   #589 = Utf8               value
   #590 = NameAndType        #589:#24     // value:()Ljava/lang/Object;
   #591 = Methodref          #588.#590    // scala/Some.value:()Ljava/lang/Object;
   #592 = Utf8               ok
   #593 = Utf8               (Ljava/lang/Object;)Largonaut/DecodeResult;
   #594 = NameAndType        #592:#593    // ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
   #595 = Methodref          #575.#594    // argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
   #596 = Utf8               scala/MatchError
   #597 = Class              #596         // scala/MatchError
   #598 = Utf8               <init>
   #599 = Utf8               (Ljava/lang/Object;)V
   #600 = NameAndType        #598:#599    // "<init>":(Ljava/lang/Object;)V
   #601 = Methodref          #597.#600    // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #602 = Utf8               w
   #603 = Utf8               Ljava/lang/Object;
   #604 = Utf8               Largonaut/HCursor;
   #605 = Utf8               java/lang/String
   #606 = Class              #605         // java/lang/String
   #607 = Utf8               argonaut/DecodeResult
   #608 = Class              #607         // argonaut/DecodeResult
   #609 = Utf8               f$5
   #610 = Utf8               j
   #611 = Utf8               q
   #612 = Utf8               c$4
   #613 = Utf8               java/lang/reflect/InvocationTargetException
   #614 = Class              #613         // java/lang/reflect/InvocationTargetException
   #615 = Utf8               getClass
   #616 = Utf8               ()Ljava/lang/Class;
   #617 = NameAndType        #615:#616    // getClass:()Ljava/lang/Class;
   #618 = Methodref          #4.#617      // java/lang/Object.getClass:()Ljava/lang/Class;
   #619 = NameAndType        #21:#22      // reflMethod$Method1:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #620 = InterfaceMethodref #2.#619      // argonaut/DecodeJsons.reflMethod$Method1:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #621 = Utf8               invoke
   #622 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #623 = NameAndType        #621:#622    // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #624 = Methodref          #71.#623     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #625 = Utf8               getCause
   #626 = Utf8               ()Ljava/lang/Throwable;
   #627 = NameAndType        #625:#626    // getCause:()Ljava/lang/Throwable;
   #628 = Methodref          #614.#627    // java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
   #629 = Utf8               scala/collection/mutable/Builder
   #630 = Class              #629         // scala/collection/mutable/Builder
   #631 = Utf8               1
   #632 = Utf8               Ljava/lang/reflect/InvocationTargetException;
   #633 = Utf8               qual1
   #634 = Utf8               scala/collection/BuildFrom
   #635 = Class              #634         // scala/collection/BuildFrom
   #636 = Utf8               $anonfun$UUIDDecodeJson$3
   #637 = Utf8               (Ljava/lang/String;)Ljava/util/UUID;
   #638 = Utf8               s$1
   #639 = Utf8               java/util/UUID
   #640 = Class              #639         // java/util/UUID
   #641 = Utf8               fromString
   #642 = NameAndType        #641:#637    // fromString:(Ljava/lang/String;)Ljava/util/UUID;
   #643 = Methodref          #640.#642    // java/util/UUID.fromString:(Ljava/lang/String;)Ljava/util/UUID;
   #644 = Utf8               $anonfun$UUIDDecodeJson$2
   #645 = Utf8               (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #646 = Utf8               s
   #647 = NameAndType        #636:#637    // $anonfun$UUIDDecodeJson$3:(Ljava/lang/String;)Ljava/util/UUID;
   #648 = InterfaceMethodref #2.#647      // argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$3:(Ljava/lang/String;)Ljava/util/UUID;
   #649 = MethodHandle       6:#648       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$3:(Ljava/lang/String;)Ljava/util/UUID;
   #650 = Utf8               ()Ljava/util/UUID;
   #651 = MethodType         #650         //  ()Ljava/util/UUID;
   #652 = Utf8               (Ljava/lang/String;)Lscala/Function0;
   #653 = NameAndType        #33:#652     // apply:(Ljava/lang/String;)Lscala/Function0;
   #654 = InvokeDynamic      #33:#653     // #33:apply:(Ljava/lang/String;)Lscala/Function0;
   #655 = Utf8               $anonfun$UUIDDecodeJson$1
   #656 = Utf8               x$10
   #657 = Utf8               argonaut/Json
   #658 = Class              #657         // argonaut/Json
   #659 = Utf8               string
   #660 = Utf8               ()Lscala/Option;
   #661 = NameAndType        #659:#660    // string:()Lscala/Option;
   #662 = Methodref          #658.#661    // argonaut/Json.string:()Lscala/Option;
   #663 = NameAndType        #644:#645    // $anonfun$UUIDDecodeJson$2:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #664 = InterfaceMethodref #2.#663      // argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$2:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #665 = MethodHandle       6:#664       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$2:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #666 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #667 = MethodType         #666         //  (Ljava/lang/String;)Lscala/Option;
   #668 = InvokeDynamic      #34:#296     // #34:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #669 = Utf8               flatMap
   #670 = Utf8               (Lscala/Function1;)Lscala/Option;
   #671 = NameAndType        #669:#670    // flatMap:(Lscala/Function1;)Lscala/Option;
   #672 = Methodref          #564.#671    // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
   #673 = Utf8               Largonaut/Json;
   #674 = Utf8               scala/collection/immutable/List$
   #675 = Class              #674         // scala/collection/immutable/List$
   #676 = Utf8               Lscala/collection/immutable/List$;
   #677 = NameAndType        #42:#676     // MODULE$:Lscala/collection/immutable/List$;
   #678 = Fieldref           #675.#677    // scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
   #679 = Utf8               newBuilder
   #680 = NameAndType        #679:#204    // newBuilder:()Lscala/collection/mutable/Builder;
   #681 = Methodref          #675.#680    // scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
   #682 = Utf8               scala/package$
   #683 = Class              #682         // scala/package$
   #684 = Utf8               Lscala/package$;
   #685 = NameAndType        #42:#684     // MODULE$:Lscala/package$;
   #686 = Fieldref           #683.#685    // scala/package$.MODULE$:Lscala/package$;
   #687 = Utf8               Vector
   #688 = Utf8               ()Lscala/collection/immutable/Vector$;
   #689 = NameAndType        #687:#688    // Vector:()Lscala/collection/immutable/Vector$;
   #690 = Methodref          #683.#689    // scala/package$.Vector:()Lscala/collection/immutable/Vector$;
   #691 = Utf8               scala/collection/immutable/Vector$
   #692 = Class              #691         // scala/collection/immutable/Vector$
   #693 = NameAndType        #679:#235    // newBuilder:()Lscala/collection/mutable/ReusableBuilder;
   #694 = Methodref          #692.#693    // scala/collection/immutable/Vector$.newBuilder:()Lscala/collection/mutable/ReusableBuilder;
   #695 = Utf8               Stream
   #696 = Utf8               ()Lscala/collection/immutable/Stream$;
   #697 = NameAndType        #695:#696    // Stream:()Lscala/collection/immutable/Stream$;
   #698 = Methodref          #683.#697    // scala/package$.Stream:()Lscala/collection/immutable/Stream$;
   #699 = Utf8               scala/collection/immutable/Stream$
   #700 = Class              #699         // scala/collection/immutable/Stream$
   #701 = Methodref          #700.#680    // scala/collection/immutable/Stream$.newBuilder:()Lscala/collection/mutable/Builder;
   #702 = Utf8               scala/Predef$
   #703 = Class              #702         // scala/Predef$
   #704 = Utf8               Lscala/Predef$;
   #705 = NameAndType        #42:#704     // MODULE$:Lscala/Predef$;
   #706 = Fieldref           #703.#705    // scala/Predef$.MODULE$:Lscala/Predef$;
   #707 = Utf8               Set
   #708 = Utf8               ()Lscala/collection/immutable/Set$;
   #709 = NameAndType        #707:#708    // Set:()Lscala/collection/immutable/Set$;
   #710 = Methodref          #703.#709    // scala/Predef$.Set:()Lscala/collection/immutable/Set$;
   #711 = Utf8               scala/collection/immutable/Set$
   #712 = Class              #711         // scala/collection/immutable/Set$
   #713 = Methodref          #712.#680    // scala/collection/immutable/Set$.newBuilder:()Lscala/collection/mutable/Builder;
   #714 = Utf8               isNull
   #715 = Utf8               ()Z
   #716 = NameAndType        #714:#715    // isNull:()Z
   #717 = Methodref          #658.#716    // argonaut/Json.isNull:()Z
   #718 = Utf8               argonaut/Json$
   #719 = Class              #718         // argonaut/Json$
   #720 = Utf8               Largonaut/Json$;
   #721 = NameAndType        #42:#720     // MODULE$:Largonaut/Json$;
   #722 = Fieldref           #719.#721    // argonaut/Json$.MODULE$:Largonaut/Json$;
   #723 = Utf8               jEmptyObject
   #724 = NameAndType        #723:#556    // jEmptyObject:()Largonaut/Json;
   #725 = Methodref          #719.#724    // argonaut/Json$.jEmptyObject:()Largonaut/Json;
   #726 = Utf8               jEmptyArray
   #727 = NameAndType        #726:#556    // jEmptyArray:()Largonaut/Json;
   #728 = Methodref          #719.#727    // argonaut/Json$.jEmptyArray:()Largonaut/Json;
   #729 = Utf8               scala/runtime/BoxedUnit
   #730 = Class              #729         // scala/runtime/BoxedUnit
   #731 = Utf8               UNIT
   #732 = Utf8               Lscala/runtime/BoxedUnit;
   #733 = NameAndType        #731:#732    // UNIT:Lscala/runtime/BoxedUnit;
   #734 = Fieldref           #730.#733    // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   #735 = Utf8               Unit
   #736 = String             #735         // Unit
   #737 = Utf8               x$11
   #738 = Utf8               $anonfun$DoubleDecodeJson$3
   #739 = Utf8               (Largonaut/JsonNumber;)D
   #740 = Utf8               n$3
   #741 = Utf8               argonaut/JsonNumber
   #742 = Class              #741         // argonaut/JsonNumber
   #743 = Utf8               truncateToDouble
   #744 = Utf8               ()D
   #745 = NameAndType        #743:#744    // truncateToDouble:()D
   #746 = Methodref          #742.#745    // argonaut/JsonNumber.truncateToDouble:()D
   #747 = Utf8               Largonaut/JsonNumber;
   #748 = Utf8               $anonfun$DoubleDecodeJson$2
   #749 = Utf8               (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #750 = Utf8               n
   #751 = MethodType         #744         //  ()D
   #752 = NameAndType        #738:#739    // $anonfun$DoubleDecodeJson$3:(Largonaut/JsonNumber;)D
   #753 = InterfaceMethodref #2.#752      // argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$3:(Largonaut/JsonNumber;)D
   #754 = MethodHandle       6:#753       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$3:(Largonaut/JsonNumber;)D
   #755 = Utf8               apply$mcD$sp
   #756 = Utf8               (Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcD$sp;
   #757 = NameAndType        #755:#756    // apply$mcD$sp:(Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcD$sp;
   #758 = InvokeDynamic      #35:#757     // #35:apply$mcD$sp:(Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcD$sp;
   #759 = Utf8               $anonfun$DoubleDecodeJson$6
   #760 = Utf8               (Ljava/lang/String;)D
   #761 = Utf8               s$2
   #762 = Utf8               scala/collection/StringOps$
   #763 = Class              #762         // scala/collection/StringOps$
   #764 = Utf8               Lscala/collection/StringOps$;
   #765 = NameAndType        #42:#764     // MODULE$:Lscala/collection/StringOps$;
   #766 = Fieldref           #763.#765    // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #767 = Utf8               augmentString
   #768 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #769 = NameAndType        #767:#768    // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #770 = Methodref          #703.#769    // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #771 = Utf8               toDouble$extension
   #772 = NameAndType        #771:#760    // toDouble$extension:(Ljava/lang/String;)D
   #773 = Methodref          #763.#772    // scala/collection/StringOps$.toDouble$extension:(Ljava/lang/String;)D
   #774 = Utf8               $anonfun$DoubleDecodeJson$5
   #775 = NameAndType        #759:#760    // $anonfun$DoubleDecodeJson$6:(Ljava/lang/String;)D
   #776 = InterfaceMethodref #2.#775      // argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$6:(Ljava/lang/String;)D
   #777 = MethodHandle       6:#776       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$6:(Ljava/lang/String;)D
   #778 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcD$sp;
   #779 = NameAndType        #755:#778    // apply$mcD$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcD$sp;
   #780 = InvokeDynamic      #36:#779     // #36:apply$mcD$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcD$sp;
   #781 = Utf8               $anonfun$DoubleDecodeJson$4
   #782 = Utf8               x$31
   #783 = NameAndType        #774:#645    // $anonfun$DoubleDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #784 = InterfaceMethodref #2.#783      // argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #785 = MethodHandle       6:#784       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #786 = InvokeDynamic      #37:#296     // #37:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #787 = Utf8               x
   #788 = Double             NaNd
   #790 = Utf8               scala/runtime/BoxesRunTime
   #791 = Class              #790         // scala/runtime/BoxesRunTime
   #792 = Utf8               boxToDouble
   #793 = Utf8               (D)Ljava/lang/Double;
   #794 = NameAndType        #792:#793    // boxToDouble:(D)Ljava/lang/Double;
   #795 = Methodref          #791.#794    // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   #796 = Methodref          #588.#600    // scala/Some."<init>":(Ljava/lang/Object;)V
   #797 = Utf8               number
   #798 = NameAndType        #797:#660    // number:()Lscala/Option;
   #799 = Methodref          #658.#798    // argonaut/Json.number:()Lscala/Option;
   #800 = NameAndType        #748:#749    // $anonfun$DoubleDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #801 = InterfaceMethodref #2.#800      // argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #802 = MethodHandle       6:#801       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #803 = Utf8               (Largonaut/JsonNumber;)Lscala/Option;
   #804 = MethodType         #803         //  (Largonaut/JsonNumber;)Lscala/Option;
   #805 = InvokeDynamic      #38:#296     // #38:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #806 = NameAndType        #781:#291    // $anonfun$DoubleDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #807 = InterfaceMethodref #2.#806      // argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #808 = MethodHandle       6:#807       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #809 = MethodType         #660         //  ()Lscala/Option;
   #810 = Utf8               (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #811 = NameAndType        #33:#810     // apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #812 = InvokeDynamic      #39:#811     // #39:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #813 = Utf8               orElse
   #814 = NameAndType        #813:#136    // orElse:(Lscala/Function0;)Lscala/Option;
   #815 = Methodref          #564.#814    // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
   #816 = Utf8               $anonfun$FloatDecodeJson$3
   #817 = Utf8               (Largonaut/JsonNumber;)F
   #818 = Utf8               n$4
   #819 = Utf8               truncateToFloat
   #820 = Utf8               ()F
   #821 = NameAndType        #819:#820    // truncateToFloat:()F
   #822 = Methodref          #742.#821    // argonaut/JsonNumber.truncateToFloat:()F
   #823 = Utf8               $anonfun$FloatDecodeJson$2
   #824 = MethodType         #820         //  ()F
   #825 = NameAndType        #816:#817    // $anonfun$FloatDecodeJson$3:(Largonaut/JsonNumber;)F
   #826 = InterfaceMethodref #2.#825      // argonaut/DecodeJsons.$anonfun$FloatDecodeJson$3:(Largonaut/JsonNumber;)F
   #827 = MethodHandle       6:#826       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$3:(Largonaut/JsonNumber;)F
   #828 = Utf8               apply$mcF$sp
   #829 = Utf8               (Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcF$sp;
   #830 = NameAndType        #828:#829    // apply$mcF$sp:(Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcF$sp;
   #831 = InvokeDynamic      #40:#830     // #40:apply$mcF$sp:(Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcF$sp;
   #832 = Utf8               $anonfun$FloatDecodeJson$6
   #833 = Utf8               (Ljava/lang/String;)F
   #834 = Utf8               s$3
   #835 = Utf8               toFloat$extension
   #836 = NameAndType        #835:#833    // toFloat$extension:(Ljava/lang/String;)F
   #837 = Methodref          #763.#836    // scala/collection/StringOps$.toFloat$extension:(Ljava/lang/String;)F
   #838 = Utf8               $anonfun$FloatDecodeJson$5
   #839 = NameAndType        #832:#833    // $anonfun$FloatDecodeJson$6:(Ljava/lang/String;)F
   #840 = InterfaceMethodref #2.#839      // argonaut/DecodeJsons.$anonfun$FloatDecodeJson$6:(Ljava/lang/String;)F
   #841 = MethodHandle       6:#840       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$6:(Ljava/lang/String;)F
   #842 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcF$sp;
   #843 = NameAndType        #828:#842    // apply$mcF$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcF$sp;
   #844 = InvokeDynamic      #41:#843     // #41:apply$mcF$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcF$sp;
   #845 = Utf8               $anonfun$FloatDecodeJson$4
   #846 = Utf8               x$32
   #847 = NameAndType        #838:#645    // $anonfun$FloatDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #848 = InterfaceMethodref #2.#847      // argonaut/DecodeJsons.$anonfun$FloatDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #849 = MethodHandle       6:#848       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #850 = InvokeDynamic      #42:#296     // #42:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #851 = Float              NaNf
   #852 = Utf8               boxToFloat
   #853 = Utf8               (F)Ljava/lang/Float;
   #854 = NameAndType        #852:#853    // boxToFloat:(F)Ljava/lang/Float;
   #855 = Methodref          #791.#854    // scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
   #856 = NameAndType        #823:#749    // $anonfun$FloatDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #857 = InterfaceMethodref #2.#856      // argonaut/DecodeJsons.$anonfun$FloatDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #858 = MethodHandle       6:#857       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
   #859 = InvokeDynamic      #43:#296     // #43:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #860 = NameAndType        #845:#291    // $anonfun$FloatDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #861 = InterfaceMethodref #2.#860      // argonaut/DecodeJsons.$anonfun$FloatDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #862 = MethodHandle       6:#861       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #863 = InvokeDynamic      #44:#811     // #44:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #864 = Utf8               $anonfun$IntDecodeJson$2
   #865 = Utf8               (Largonaut/JsonNumber;)I
   #866 = Utf8               x$12
   #867 = Utf8               truncateToInt
   #868 = Utf8               ()I
   #869 = NameAndType        #867:#868    // truncateToInt:()I
   #870 = Methodref          #742.#869    // argonaut/JsonNumber.truncateToInt:()I
   #871 = Utf8               $anonfun$IntDecodeJson$5
   #872 = Utf8               (Ljava/lang/String;)I
   #873 = Utf8               s$4
   #874 = Utf8               toInt$extension
   #875 = NameAndType        #874:#872    // toInt$extension:(Ljava/lang/String;)I
   #876 = Methodref          #763.#875    // scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
   #877 = Utf8               $anonfun$IntDecodeJson$4
   #878 = MethodType         #868         //  ()I
   #879 = NameAndType        #871:#872    // $anonfun$IntDecodeJson$5:(Ljava/lang/String;)I
   #880 = InterfaceMethodref #2.#879      // argonaut/DecodeJsons.$anonfun$IntDecodeJson$5:(Ljava/lang/String;)I
   #881 = MethodHandle       6:#880       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$5:(Ljava/lang/String;)I
   #882 = Utf8               apply$mcI$sp
   #883 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcI$sp;
   #884 = NameAndType        #882:#883    // apply$mcI$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcI$sp;
   #885 = InvokeDynamic      #45:#884     // #45:apply$mcI$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcI$sp;
   #886 = Utf8               $anonfun$IntDecodeJson$3
   #887 = Utf8               x$33
   #888 = NameAndType        #877:#645    // $anonfun$IntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #889 = InterfaceMethodref #2.#888      // argonaut/DecodeJsons.$anonfun$IntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #890 = MethodHandle       6:#889       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #891 = InvokeDynamic      #46:#296     // #46:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #892 = Utf8               $anonfun$IntDecodeJson$2$adapted
   #893 = Utf8               (Largonaut/JsonNumber;)Ljava/lang/Object;
   #894 = NameAndType        #892:#893    // $anonfun$IntDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #895 = InterfaceMethodref #2.#894      // argonaut/DecodeJsons.$anonfun$IntDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #896 = MethodHandle       6:#895       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #897 = MethodType         #893         //  (Largonaut/JsonNumber;)Ljava/lang/Object;
   #898 = InvokeDynamic      #47:#175     // #47:apply:()Lscala/Function1;
   #899 = NameAndType        #415:#670    // map:(Lscala/Function1;)Lscala/Option;
   #900 = Methodref          #564.#899    // scala/Option.map:(Lscala/Function1;)Lscala/Option;
   #901 = NameAndType        #886:#291    // $anonfun$IntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #902 = InterfaceMethodref #2.#901      // argonaut/DecodeJsons.$anonfun$IntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #903 = MethodHandle       6:#902       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #904 = InvokeDynamic      #48:#811     // #48:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #905 = Utf8               $anonfun$LongDecodeJson$2
   #906 = Utf8               (Largonaut/JsonNumber;)J
   #907 = Utf8               x$13
   #908 = Utf8               truncateToLong
   #909 = Utf8               ()J
   #910 = NameAndType        #908:#909    // truncateToLong:()J
   #911 = Methodref          #742.#910    // argonaut/JsonNumber.truncateToLong:()J
   #912 = Utf8               $anonfun$LongDecodeJson$5
   #913 = Utf8               (Ljava/lang/String;)J
   #914 = Utf8               s$5
   #915 = Utf8               toLong$extension
   #916 = NameAndType        #915:#913    // toLong$extension:(Ljava/lang/String;)J
   #917 = Methodref          #763.#916    // scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
   #918 = Utf8               $anonfun$LongDecodeJson$4
   #919 = MethodType         #909         //  ()J
   #920 = NameAndType        #912:#913    // $anonfun$LongDecodeJson$5:(Ljava/lang/String;)J
   #921 = InterfaceMethodref #2.#920      // argonaut/DecodeJsons.$anonfun$LongDecodeJson$5:(Ljava/lang/String;)J
   #922 = MethodHandle       6:#921       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$5:(Ljava/lang/String;)J
   #923 = Utf8               apply$mcJ$sp
   #924 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcJ$sp;
   #925 = NameAndType        #923:#924    // apply$mcJ$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcJ$sp;
   #926 = InvokeDynamic      #49:#925     // #49:apply$mcJ$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcJ$sp;
   #927 = Utf8               $anonfun$LongDecodeJson$3
   #928 = Utf8               x$34
   #929 = NameAndType        #918:#645    // $anonfun$LongDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #930 = InterfaceMethodref #2.#929      // argonaut/DecodeJsons.$anonfun$LongDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #931 = MethodHandle       6:#930       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #932 = InvokeDynamic      #50:#296     // #50:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #933 = Utf8               $anonfun$LongDecodeJson$2$adapted
   #934 = NameAndType        #933:#893    // $anonfun$LongDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #935 = InterfaceMethodref #2.#934      // argonaut/DecodeJsons.$anonfun$LongDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #936 = MethodHandle       6:#935       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #937 = InvokeDynamic      #51:#175     // #51:apply:()Lscala/Function1;
   #938 = NameAndType        #927:#291    // $anonfun$LongDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #939 = InterfaceMethodref #2.#938      // argonaut/DecodeJsons.$anonfun$LongDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #940 = MethodHandle       6:#939       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #941 = InvokeDynamic      #52:#811     // #52:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #942 = Utf8               $anonfun$ShortDecodeJson$2
   #943 = Utf8               (Largonaut/JsonNumber;)S
   #944 = Utf8               x$14
   #945 = Utf8               truncateToShort
   #946 = Utf8               ()S
   #947 = NameAndType        #945:#946    // truncateToShort:()S
   #948 = Methodref          #742.#947    // argonaut/JsonNumber.truncateToShort:()S
   #949 = Utf8               $anonfun$ShortDecodeJson$5
   #950 = Utf8               (Ljava/lang/String;)S
   #951 = Utf8               s$6
   #952 = Utf8               toShort$extension
   #953 = NameAndType        #952:#950    // toShort$extension:(Ljava/lang/String;)S
   #954 = Methodref          #763.#953    // scala/collection/StringOps$.toShort$extension:(Ljava/lang/String;)S
   #955 = Utf8               $anonfun$ShortDecodeJson$4
   #956 = MethodType         #946         //  ()S
   #957 = NameAndType        #949:#950    // $anonfun$ShortDecodeJson$5:(Ljava/lang/String;)S
   #958 = InterfaceMethodref #2.#957      // argonaut/DecodeJsons.$anonfun$ShortDecodeJson$5:(Ljava/lang/String;)S
   #959 = MethodHandle       6:#958       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$5:(Ljava/lang/String;)S
   #960 = Utf8               apply$mcS$sp
   #961 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcS$sp;
   #962 = NameAndType        #960:#961    // apply$mcS$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcS$sp;
   #963 = InvokeDynamic      #53:#962     // #53:apply$mcS$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcS$sp;
   #964 = Utf8               $anonfun$ShortDecodeJson$3
   #965 = Utf8               x$35
   #966 = NameAndType        #955:#645    // $anonfun$ShortDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #967 = InterfaceMethodref #2.#966      // argonaut/DecodeJsons.$anonfun$ShortDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #968 = MethodHandle       6:#967       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
   #969 = InvokeDynamic      #54:#296     // #54:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
   #970 = Utf8               $anonfun$ShortDecodeJson$2$adapted
   #971 = NameAndType        #970:#893    // $anonfun$ShortDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #972 = InterfaceMethodref #2.#971      // argonaut/DecodeJsons.$anonfun$ShortDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #973 = MethodHandle       6:#972       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
   #974 = InvokeDynamic      #55:#175     // #55:apply:()Lscala/Function1;
   #975 = NameAndType        #964:#291    // $anonfun$ShortDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #976 = InterfaceMethodref #2.#975      // argonaut/DecodeJsons.$anonfun$ShortDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #977 = MethodHandle       6:#976       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
   #978 = InvokeDynamic      #56:#811     // #56:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
   #979 = Utf8               $anonfun$ByteDecodeJson$2
   #980 = Utf8               (Largonaut/JsonNumber;)B
   #981 = Utf8               x$15
   #982 = Utf8               truncateToByte
   #983 = Utf8               ()B
   #984 = NameAndType        #982:#983    // truncateToByte:()B
   #985 = Methodref          #742.#984    // argonaut/JsonNumber.truncateToByte:()B
   #986 = Utf8               $anonfun$ByteDecodeJson$5
   #987 = Utf8               (Ljava/lang/String;)B
   #988 = Utf8               s$7
   #989 = Utf8               toByte$extension
   #990 = NameAndType        #989:#987    // toByte$extension:(Ljava/lang/String;)B
   #991 = Methodref          #763.#990    // scala/collection/StringOps$.toByte$extension:(Ljava/lang/String;)B
   #992 = Utf8               $anonfun$ByteDecodeJson$4
   #993 = MethodType         #983         //  ()B
   #994 = NameAndType        #986:#987    // $anonfun$ByteDecodeJson$5:(Ljava/lang/String;)B
   #995 = InterfaceMethodref #2.#994      // argonaut/DecodeJsons.$anonfun$ByteDecodeJson$5:(Ljava/lang/String;)B
   #996 = MethodHandle       6:#995       // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$5:(Ljava/lang/String;)B
   #997 = Utf8               apply$mcB$sp
   #998 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcB$sp;
   #999 = NameAndType        #997:#998    // apply$mcB$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcB$sp;
  #1000 = InvokeDynamic      #57:#999     // #57:apply$mcB$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcB$sp;
  #1001 = Utf8               $anonfun$ByteDecodeJson$3
  #1002 = Utf8               x$36
  #1003 = NameAndType        #992:#645    // $anonfun$ByteDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1004 = InterfaceMethodref #2.#1003     // argonaut/DecodeJsons.$anonfun$ByteDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1005 = MethodHandle       6:#1004      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1006 = InvokeDynamic      #58:#296     // #58:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1007 = Utf8               $anonfun$ByteDecodeJson$2$adapted
  #1008 = NameAndType        #1007:#893   // $anonfun$ByteDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
  #1009 = InterfaceMethodref #2.#1008     // argonaut/DecodeJsons.$anonfun$ByteDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
  #1010 = MethodHandle       6:#1009      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
  #1011 = InvokeDynamic      #59:#175     // #59:apply:()Lscala/Function1;
  #1012 = NameAndType        #1001:#291   // $anonfun$ByteDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1013 = InterfaceMethodref #2.#1012     // argonaut/DecodeJsons.$anonfun$ByteDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1014 = MethodHandle       6:#1013      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1015 = InvokeDynamic      #60:#811     // #60:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
  #1016 = Utf8               $anonfun$BigIntDecodeJson$2
  #1017 = Utf8               x$16
  #1018 = Utf8               truncateToBigInt
  #1019 = NameAndType        #1018:#660   // truncateToBigInt:()Lscala/Option;
  #1020 = Methodref          #742.#1019   // argonaut/JsonNumber.truncateToBigInt:()Lscala/Option;
  #1021 = Utf8               $anonfun$BigIntDecodeJson$5
  #1022 = Utf8               (Ljava/lang/String;)Lscala/math/BigInt;
  #1023 = Utf8               s$8
  #1024 = Utf8               ()Lscala/math/BigInt$;
  #1025 = NameAndType        #365:#1024   // BigInt:()Lscala/math/BigInt$;
  #1026 = Methodref          #683.#1025   // scala/package$.BigInt:()Lscala/math/BigInt$;
  #1027 = Utf8               scala/math/BigInt$
  #1028 = Class              #1027        // scala/math/BigInt$
  #1029 = NameAndType        #33:#1022    // apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #1030 = Methodref          #1028.#1029  // scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
  #1031 = Utf8               $anonfun$BigIntDecodeJson$4
  #1032 = NameAndType        #1021:#1022  // $anonfun$BigIntDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigInt;
  #1033 = InterfaceMethodref #2.#1032     // argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigInt;
  #1034 = MethodHandle       6:#1033      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigInt;
  #1035 = Utf8               ()Lscala/math/BigInt;
  #1036 = MethodType         #1035        //  ()Lscala/math/BigInt;
  #1037 = InvokeDynamic      #61:#653     // #61:apply:(Ljava/lang/String;)Lscala/Function0;
  #1038 = Utf8               $anonfun$BigIntDecodeJson$3
  #1039 = Utf8               x$37
  #1040 = NameAndType        #1031:#645   // $anonfun$BigIntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1041 = InterfaceMethodref #2.#1040     // argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1042 = MethodHandle       6:#1041      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1043 = InvokeDynamic      #62:#296     // #62:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1044 = NameAndType        #1016:#803   // $anonfun$BigIntDecodeJson$2:(Largonaut/JsonNumber;)Lscala/Option;
  #1045 = InterfaceMethodref #2.#1044     // argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$2:(Largonaut/JsonNumber;)Lscala/Option;
  #1046 = MethodHandle       6:#1045      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$2:(Largonaut/JsonNumber;)Lscala/Option;
  #1047 = InvokeDynamic      #63:#175     // #63:apply:()Lscala/Function1;
  #1048 = NameAndType        #1038:#291   // $anonfun$BigIntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1049 = InterfaceMethodref #2.#1048     // argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1050 = MethodHandle       6:#1049      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1051 = InvokeDynamic      #64:#811     // #64:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
  #1052 = Utf8               $anonfun$BigDecimalDecodeJson$2
  #1053 = Utf8               (Largonaut/JsonNumber;)Lscala/math/BigDecimal;
  #1054 = Utf8               x$17
  #1055 = Utf8               toBigDecimal
  #1056 = Utf8               ()Lscala/math/BigDecimal;
  #1057 = NameAndType        #1055:#1056  // toBigDecimal:()Lscala/math/BigDecimal;
  #1058 = Methodref          #742.#1057   // argonaut/JsonNumber.toBigDecimal:()Lscala/math/BigDecimal;
  #1059 = Utf8               $anonfun$BigDecimalDecodeJson$5
  #1060 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
  #1061 = Utf8               s$9
  #1062 = Utf8               ()Lscala/math/BigDecimal$;
  #1063 = NameAndType        #377:#1062   // BigDecimal:()Lscala/math/BigDecimal$;
  #1064 = Methodref          #683.#1063   // scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
  #1065 = Utf8               scala/math/BigDecimal$
  #1066 = Class              #1065        // scala/math/BigDecimal$
  #1067 = NameAndType        #33:#1060    // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #1068 = Methodref          #1066.#1067  // scala/math/BigDecimal$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #1069 = Utf8               $anonfun$BigDecimalDecodeJson$4
  #1070 = NameAndType        #1059:#1060  // $anonfun$BigDecimalDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #1071 = InterfaceMethodref #2.#1070     // argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #1072 = MethodHandle       6:#1071      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #1073 = MethodType         #1056        //  ()Lscala/math/BigDecimal;
  #1074 = InvokeDynamic      #65:#653     // #65:apply:(Ljava/lang/String;)Lscala/Function0;
  #1075 = Utf8               $anonfun$BigDecimalDecodeJson$3
  #1076 = Utf8               x$38
  #1077 = NameAndType        #1069:#645   // $anonfun$BigDecimalDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1078 = InterfaceMethodref #2.#1077     // argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1079 = MethodHandle       6:#1078      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1080 = InvokeDynamic      #66:#296     // #66:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1081 = NameAndType        #1052:#1053  // $anonfun$BigDecimalDecodeJson$2:(Largonaut/JsonNumber;)Lscala/math/BigDecimal;
  #1082 = InterfaceMethodref #2.#1081     // argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$2:(Largonaut/JsonNumber;)Lscala/math/BigDecimal;
  #1083 = MethodHandle       6:#1082      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$2:(Largonaut/JsonNumber;)Lscala/math/BigDecimal;
  #1084 = MethodType         #1053        //  (Largonaut/JsonNumber;)Lscala/math/BigDecimal;
  #1085 = InvokeDynamic      #67:#175     // #67:apply:()Lscala/Function1;
  #1086 = NameAndType        #1075:#291   // $anonfun$BigDecimalDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1087 = InterfaceMethodref #2.#1086     // argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1088 = MethodHandle       6:#1087      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1089 = InvokeDynamic      #68:#811     // #68:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
  #1090 = Utf8               $anonfun$BooleanDecodeJson$4
  #1091 = Utf8               (Ljava/lang/String;)Z
  #1092 = Utf8               s$10
  #1093 = Utf8               toBoolean$extension
  #1094 = NameAndType        #1093:#1091  // toBoolean$extension:(Ljava/lang/String;)Z
  #1095 = Methodref          #763.#1094   // scala/collection/StringOps$.toBoolean$extension:(Ljava/lang/String;)Z
  #1096 = Utf8               $anonfun$BooleanDecodeJson$3
  #1097 = MethodType         #715         //  ()Z
  #1098 = NameAndType        #1090:#1091  // $anonfun$BooleanDecodeJson$4:(Ljava/lang/String;)Z
  #1099 = InterfaceMethodref #2.#1098     // argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$4:(Ljava/lang/String;)Z
  #1100 = MethodHandle       6:#1099      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$4:(Ljava/lang/String;)Z
  #1101 = Utf8               apply$mcZ$sp
  #1102 = Utf8               (Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcZ$sp;
  #1103 = NameAndType        #1101:#1102  // apply$mcZ$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcZ$sp;
  #1104 = InvokeDynamic      #69:#1103    // #69:apply$mcZ$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcZ$sp;
  #1105 = Utf8               $anonfun$BooleanDecodeJson$2
  #1106 = Utf8               x$39
  #1107 = NameAndType        #1096:#645   // $anonfun$BooleanDecodeJson$3:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1108 = InterfaceMethodref #2.#1107     // argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$3:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1109 = MethodHandle       6:#1108      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$3:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
  #1110 = InvokeDynamic      #70:#296     // #70:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1111 = Utf8               bool
  #1112 = NameAndType        #1111:#660   // bool:()Lscala/Option;
  #1113 = Methodref          #658.#1112   // argonaut/Json.bool:()Lscala/Option;
  #1114 = NameAndType        #1105:#291   // $anonfun$BooleanDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1115 = InterfaceMethodref #2.#1114     // argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1116 = MethodHandle       6:#1115      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1117 = InvokeDynamic      #71:#811     // #71:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
  #1118 = Utf8               $anonfun$CharDecodeJson$2
  #1119 = Utf8               length
  #1120 = NameAndType        #1119:#868   // length:()I
  #1121 = Methodref          #606.#1120   // java/lang/String.length:()I
  #1122 = Utf8               apply$extension
  #1123 = Utf8               (Ljava/lang/String;I)C
  #1124 = NameAndType        #1122:#1123  // apply$extension:(Ljava/lang/String;I)C
  #1125 = Methodref          #763.#1124   // scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
  #1126 = Utf8               boxToCharacter
  #1127 = Utf8               (C)Ljava/lang/Character;
  #1128 = NameAndType        #1126:#1127  // boxToCharacter:(C)Ljava/lang/Character;
  #1129 = Methodref          #791.#1128   // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #1130 = Utf8               x$18
  #1131 = NameAndType        #1118:#666   // $anonfun$CharDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
  #1132 = InterfaceMethodref #2.#1131     // argonaut/DecodeJsons.$anonfun$CharDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
  #1133 = MethodHandle       6:#1132      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$CharDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
  #1134 = InvokeDynamic      #72:#175     // #72:apply:()Lscala/Function1;
  #1135 = Utf8               $anonfun$JDoubleDecodeJson$1
  #1136 = Utf8               d
  #1137 = Utf8               double2Double
  #1138 = NameAndType        #1137:#793   // double2Double:(D)Ljava/lang/Double;
  #1139 = Methodref          #703.#1138   // scala/Predef$.double2Double:(D)Ljava/lang/Double;
  #1140 = Utf8               D
  #1141 = Utf8               $anonfun$JFloatDecodeJson$1
  #1142 = Utf8               float2Float
  #1143 = NameAndType        #1142:#853   // float2Float:(F)Ljava/lang/Float;
  #1144 = Methodref          #703.#1143   // scala/Predef$.float2Float:(F)Ljava/lang/Float;
  #1145 = Utf8               F
  #1146 = Utf8               $anonfun$JIntegerDecodeJson$3
  #1147 = Utf8               (Largonaut/JsonNumber;)Ljava/lang/Integer;
  #1148 = Utf8               s$11
  #1149 = Utf8               int2Integer
  #1150 = Utf8               (I)Ljava/lang/Integer;
  #1151 = NameAndType        #1149:#1150  // int2Integer:(I)Ljava/lang/Integer;
  #1152 = Methodref          #703.#1151   // scala/Predef$.int2Integer:(I)Ljava/lang/Integer;
  #1153 = Utf8               $anonfun$JIntegerDecodeJson$2
  #1154 = NameAndType        #1146:#1147  // $anonfun$JIntegerDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Integer;
  #1155 = InterfaceMethodref #2.#1154     // argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Integer;
  #1156 = MethodHandle       6:#1155      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Integer;
  #1157 = Utf8               ()Ljava/lang/Integer;
  #1158 = MethodType         #1157        //  ()Ljava/lang/Integer;
  #1159 = Utf8               (Largonaut/JsonNumber;)Lscala/Function0;
  #1160 = NameAndType        #33:#1159    // apply:(Largonaut/JsonNumber;)Lscala/Function0;
  #1161 = InvokeDynamic      #73:#1160    // #73:apply:(Largonaut/JsonNumber;)Lscala/Function0;
  #1162 = Utf8               x$19
  #1163 = NameAndType        #1153:#749   // $anonfun$JIntegerDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1164 = InterfaceMethodref #2.#1163     // argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1165 = MethodHandle       6:#1164      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1166 = InvokeDynamic      #74:#296     // #74:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1167 = Utf8               $anonfun$JLongDecodeJson$3
  #1168 = Utf8               (Largonaut/JsonNumber;)Ljava/lang/Long;
  #1169 = Utf8               s$12
  #1170 = Utf8               long2Long
  #1171 = Utf8               (J)Ljava/lang/Long;
  #1172 = NameAndType        #1170:#1171  // long2Long:(J)Ljava/lang/Long;
  #1173 = Methodref          #703.#1172   // scala/Predef$.long2Long:(J)Ljava/lang/Long;
  #1174 = Utf8               $anonfun$JLongDecodeJson$2
  #1175 = NameAndType        #1167:#1168  // $anonfun$JLongDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Long;
  #1176 = InterfaceMethodref #2.#1175     // argonaut/DecodeJsons.$anonfun$JLongDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Long;
  #1177 = MethodHandle       6:#1176      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Long;
  #1178 = Utf8               ()Ljava/lang/Long;
  #1179 = MethodType         #1178        //  ()Ljava/lang/Long;
  #1180 = InvokeDynamic      #75:#1160    // #75:apply:(Largonaut/JsonNumber;)Lscala/Function0;
  #1181 = Utf8               x$20
  #1182 = NameAndType        #1174:#749   // $anonfun$JLongDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1183 = InterfaceMethodref #2.#1182     // argonaut/DecodeJsons.$anonfun$JLongDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1184 = MethodHandle       6:#1183      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1185 = InvokeDynamic      #76:#296     // #76:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1186 = Utf8               $anonfun$JShortDecodeJson$3
  #1187 = Utf8               (Largonaut/JsonNumber;)Ljava/lang/Short;
  #1188 = Utf8               s$13
  #1189 = Utf8               short2Short
  #1190 = Utf8               (S)Ljava/lang/Short;
  #1191 = NameAndType        #1189:#1190  // short2Short:(S)Ljava/lang/Short;
  #1192 = Methodref          #703.#1191   // scala/Predef$.short2Short:(S)Ljava/lang/Short;
  #1193 = Utf8               $anonfun$JShortDecodeJson$2
  #1194 = NameAndType        #1186:#1187  // $anonfun$JShortDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Short;
  #1195 = InterfaceMethodref #2.#1194     // argonaut/DecodeJsons.$anonfun$JShortDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Short;
  #1196 = MethodHandle       6:#1195      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Short;
  #1197 = Utf8               ()Ljava/lang/Short;
  #1198 = MethodType         #1197        //  ()Ljava/lang/Short;
  #1199 = InvokeDynamic      #77:#1160    // #77:apply:(Largonaut/JsonNumber;)Lscala/Function0;
  #1200 = Utf8               x$21
  #1201 = NameAndType        #1193:#749   // $anonfun$JShortDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1202 = InterfaceMethodref #2.#1201     // argonaut/DecodeJsons.$anonfun$JShortDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1203 = MethodHandle       6:#1202      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1204 = InvokeDynamic      #78:#296     // #78:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1205 = Utf8               $anonfun$JByteDecodeJson$3
  #1206 = Utf8               (Largonaut/JsonNumber;)Ljava/lang/Byte;
  #1207 = Utf8               s$14
  #1208 = Utf8               byte2Byte
  #1209 = Utf8               (B)Ljava/lang/Byte;
  #1210 = NameAndType        #1208:#1209  // byte2Byte:(B)Ljava/lang/Byte;
  #1211 = Methodref          #703.#1210   // scala/Predef$.byte2Byte:(B)Ljava/lang/Byte;
  #1212 = Utf8               $anonfun$JByteDecodeJson$2
  #1213 = NameAndType        #1205:#1206  // $anonfun$JByteDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Byte;
  #1214 = InterfaceMethodref #2.#1213     // argonaut/DecodeJsons.$anonfun$JByteDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Byte;
  #1215 = MethodHandle       6:#1214      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Byte;
  #1216 = Utf8               ()Ljava/lang/Byte;
  #1217 = MethodType         #1216        //  ()Ljava/lang/Byte;
  #1218 = InvokeDynamic      #79:#1160    // #79:apply:(Largonaut/JsonNumber;)Lscala/Function0;
  #1219 = Utf8               x$22
  #1220 = NameAndType        #1212:#749   // $anonfun$JByteDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1221 = InterfaceMethodref #2.#1220     // argonaut/DecodeJsons.$anonfun$JByteDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1222 = MethodHandle       6:#1221      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
  #1223 = InvokeDynamic      #80:#296     // #80:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1224 = Utf8               $anonfun$JBooleanDecodeJson$2
  #1225 = Utf8               (Z)Ljava/lang/Boolean;
  #1226 = Utf8               boolean2Boolean
  #1227 = NameAndType        #1226:#1225  // boolean2Boolean:(Z)Ljava/lang/Boolean;
  #1228 = Methodref          #703.#1227   // scala/Predef$.boolean2Boolean:(Z)Ljava/lang/Boolean;
  #1229 = Utf8               Z
  #1230 = Utf8               x$23
  #1231 = Utf8               $anonfun$JBooleanDecodeJson$2$adapted
  #1232 = Utf8               (Ljava/lang/Object;)Ljava/lang/Boolean;
  #1233 = NameAndType        #1231:#1232  // $anonfun$JBooleanDecodeJson$2$adapted:(Ljava/lang/Object;)Ljava/lang/Boolean;
  #1234 = InterfaceMethodref #2.#1233     // argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$2$adapted:(Ljava/lang/Object;)Ljava/lang/Boolean;
  #1235 = MethodHandle       6:#1234      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$2$adapted:(Ljava/lang/Object;)Ljava/lang/Boolean;
  #1236 = MethodType         #1232        //  (Ljava/lang/Object;)Ljava/lang/Boolean;
  #1237 = InvokeDynamic      #81:#175     // #81:apply:()Lscala/Function1;
  #1238 = Utf8               $anonfun$JCharacterDecodeJson$2
  #1239 = Utf8               char2Character
  #1240 = NameAndType        #1239:#1127  // char2Character:(C)Ljava/lang/Character;
  #1241 = Methodref          #703.#1240   // scala/Predef$.char2Character:(C)Ljava/lang/Character;
  #1242 = Utf8               x$24
  #1243 = NameAndType        #1238:#666   // $anonfun$JCharacterDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
  #1244 = InterfaceMethodref #2.#1243     // argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
  #1245 = MethodHandle       6:#1244      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
  #1246 = InvokeDynamic      #82:#175     // #82:apply:()Lscala/Function1;
  #1247 = Utf8               e$3
  #1248 = Utf8               argonaut/ACursor
  #1249 = Class              #1248        // argonaut/ACursor
  #1250 = Utf8               success
  #1251 = NameAndType        #1250:#660   // success:()Lscala/Option;
  #1252 = Methodref          #1249.#1251  // argonaut/ACursor.success:()Lscala/Option;
  #1253 = NameAndType        #33:#100     // apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
  #1254 = InterfaceMethodref #414.#1253   // argonaut/DecodeJson.apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
  #1255 = Utf8               option
  #1256 = Utf8               ()Largonaut/DecodeResult;
  #1257 = NameAndType        #1255:#1256  // option:()Largonaut/DecodeResult;
  #1258 = Methodref          #608.#1257   // argonaut/DecodeResult.option:()Largonaut/DecodeResult;
  #1259 = Utf8               valid
  #1260 = Utf8               Largonaut/ACursor;
  #1261 = Utf8               $anonfun$EitherDecodeJson$2
  #1262 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #1263 = Utf8               x$25
  #1264 = Utf8               Left
  #1265 = Utf8               ()Lscala/util/Left$;
  #1266 = NameAndType        #1264:#1265  // Left:()Lscala/util/Left$;
  #1267 = Methodref          #683.#1266   // scala/package$.Left:()Lscala/util/Left$;
  #1268 = Utf8               scala/util/Left$
  #1269 = Class              #1268        // scala/util/Left$
  #1270 = NameAndType        #33:#1262    // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #1271 = Methodref          #1269.#1270  // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #1272 = Utf8               $anonfun$EitherDecodeJson$3
  #1273 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #1274 = Utf8               x$26
  #1275 = Utf8               Right
  #1276 = Utf8               ()Lscala/util/Right$;
  #1277 = NameAndType        #1275:#1276  // Right:()Lscala/util/Right$;
  #1278 = Methodref          #683.#1277   // scala/package$.Right:()Lscala/util/Right$;
  #1279 = Utf8               scala/util/Right$
  #1280 = Class              #1279        // scala/util/Right$
  #1281 = NameAndType        #33:#1273    // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #1282 = Methodref          #1280.#1281  // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #1283 = Utf8               ea$1
  #1284 = Utf8               eb$1
  #1285 = String             #1264        // Left
  #1286 = Utf8               $minus$minus$bslash
  #1287 = Utf8               (Ljava/lang/String;)Largonaut/ACursor;
  #1288 = NameAndType        #1286:#1287  // $minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #1289 = Methodref          #554.#1288   // argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
  #1290 = String             #1275        // Right
  #1291 = Utf8               scala/Tuple2
  #1292 = Class              #1291        // scala/Tuple2
  #1293 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #1294 = NameAndType        #598:#1293   // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #1295 = Methodref          #1292.#1294  // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #1296 = Utf8               _1
  #1297 = NameAndType        #1296:#24    // _1:()Ljava/lang/Object;
  #1298 = Methodref          #1292.#1297  // scala/Tuple2._1:()Ljava/lang/Object;
  #1299 = Utf8               _2
  #1300 = NameAndType        #1299:#24    // _2:()Ljava/lang/Object;
  #1301 = Methodref          #1292.#1300  // scala/Tuple2._2:()Ljava/lang/Object;
  #1302 = NameAndType        #1261:#1262  // $anonfun$EitherDecodeJson$2:(Ljava/lang/Object;)Lscala/util/Left;
  #1303 = InterfaceMethodref #2.#1302     // argonaut/DecodeJsons.$anonfun$EitherDecodeJson$2:(Ljava/lang/Object;)Lscala/util/Left;
  #1304 = MethodHandle       6:#1303      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$2:(Ljava/lang/Object;)Lscala/util/Left;
  #1305 = MethodType         #1262        //  (Ljava/lang/Object;)Lscala/util/Left;
  #1306 = InvokeDynamic      #83:#175     // #83:apply:()Lscala/Function1;
  #1307 = Utf8               (Lscala/Function1;)Largonaut/DecodeResult;
  #1308 = NameAndType        #415:#1307   // map:(Lscala/Function1;)Largonaut/DecodeResult;
  #1309 = Methodref          #608.#1308   // argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
  #1310 = NameAndType        #1272:#1273  // $anonfun$EitherDecodeJson$3:(Ljava/lang/Object;)Lscala/util/Right;
  #1311 = InterfaceMethodref #2.#1310     // argonaut/DecodeJsons.$anonfun$EitherDecodeJson$3:(Ljava/lang/Object;)Lscala/util/Right;
  #1312 = MethodHandle       6:#1311      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$3:(Ljava/lang/Object;)Lscala/util/Right;
  #1313 = MethodType         #1273        //  (Ljava/lang/Object;)Lscala/util/Right;
  #1314 = InvokeDynamic      #84:#175     // #84:apply:()Lscala/Function1;
  #1315 = Utf8               [A, B]Either[A, B]
  #1316 = String             #1315        // [A, B]Either[A, B]
  #1317 = Utf8               l
  #1318 = Utf8               Lscala/Option;
  #1319 = Utf8               r
  #1320 = Utf8               $anonfun$MapDecodeJson$3
  #1321 = Utf8               (Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
  #1322 = Utf8               mm$1
  #1323 = Utf8               h$1
  #1324 = Utf8               v
  #1325 = Utf8               scala/collection/immutable/Map
  #1326 = Class              #1325        // scala/collection/immutable/Map
  #1327 = Utf8               $plus
  #1328 = Utf8               (Lscala/Tuple2;)Lscala/collection/immutable/MapOps;
  #1329 = NameAndType        #1327:#1328  // $plus:(Lscala/Tuple2;)Lscala/collection/immutable/MapOps;
  #1330 = InterfaceMethodref #1326.#1329  // scala/collection/immutable/Map.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/MapOps;
  #1331 = Utf8               Lscala/collection/immutable/Map;
  #1332 = Utf8               $anonfun$MapDecodeJson$2
  #1333 = Utf8               (Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  #1334 = Utf8               a$3
  #1335 = Utf8               e$4
  #1336 = Utf8               mm
  #1337 = Utf8               get
  #1338 = Utf8               (Ljava/lang/String;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #1339 = NameAndType        #1337:#1338  // get:(Ljava/lang/String;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #1340 = Methodref          #554.#1339   // argonaut/HCursor.get:(Ljava/lang/String;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #1341 = NameAndType        #1320:#1321  // $anonfun$MapDecodeJson$3:(Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
  #1342 = InterfaceMethodref #2.#1341     // argonaut/DecodeJsons.$anonfun$MapDecodeJson$3:(Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
  #1343 = MethodHandle       6:#1342      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$3:(Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
  #1344 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/Map;
  #1345 = MethodType         #1344        //  (Ljava/lang/Object;)Lscala/collection/immutable/Map;
  #1346 = Utf8               (Lscala/collection/immutable/Map;Ljava/lang/String;)Lscala/Function1;
  #1347 = NameAndType        #33:#1346    // apply:(Lscala/collection/immutable/Map;Ljava/lang/String;)Lscala/Function1;
  #1348 = InvokeDynamic      #85:#1347    // #85:apply:(Lscala/collection/immutable/Map;Ljava/lang/String;)Lscala/Function1;
  #1349 = Utf8               spin$1
  #1350 = Utf8               (Lscala/collection/immutable/List;Largonaut/DecodeResult;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #1351 = Utf8               m
  #1352 = Utf8               scala/collection/immutable/Nil$
  #1353 = Class              #1352        // scala/collection/immutable/Nil$
  #1354 = Utf8               Lscala/collection/immutable/Nil$;
  #1355 = NameAndType        #42:#1354    // MODULE$:Lscala/collection/immutable/Nil$;
  #1356 = Fieldref           #1353.#1355  // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #1357 = Utf8               scala/collection/immutable/$colon$colon
  #1358 = Class              #1357        // scala/collection/immutable/$colon$colon
  #1359 = Utf8               head
  #1360 = NameAndType        #1359:#24    // head:()Ljava/lang/Object;
  #1361 = Methodref          #1358.#1360  // scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
  #1362 = Utf8               next$access$1
  #1363 = Utf8               ()Lscala/collection/immutable/List;
  #1364 = NameAndType        #1362:#1363  // next$access$1:()Lscala/collection/immutable/List;
  #1365 = Methodref          #1358.#1364  // scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
  #1366 = NameAndType        #1332:#1333  // $anonfun$MapDecodeJson$2:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  #1367 = InterfaceMethodref #2.#1366     // argonaut/DecodeJsons.$anonfun$MapDecodeJson$2:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  #1368 = MethodHandle       6:#1367      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$2:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  #1369 = Utf8               (Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  #1370 = MethodType         #1369        //  (Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  #1371 = Utf8               (Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;)Lscala/Function1;
  #1372 = NameAndType        #33:#1371    // apply:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;)Lscala/Function1;
  #1373 = InvokeDynamic      #86:#1372    // #86:apply:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;)Lscala/Function1;
  #1374 = NameAndType        #669:#1307   // flatMap:(Lscala/Function1;)Largonaut/DecodeResult;
  #1375 = Methodref          #608.#1374   // argonaut/DecodeResult.flatMap:(Lscala/Function1;)Largonaut/DecodeResult;
  #1376 = Utf8               h
  #1377 = Utf8               t
  #1378 = Utf8               Lscala/collection/immutable/List;
  #1379 = Utf8               Largonaut/DecodeResult;
  #1380 = Utf8               scala/collection/immutable/List
  #1381 = Class              #1380        // scala/collection/immutable/List
  #1382 = Utf8               fields
  #1383 = NameAndType        #1382:#660   // fields:()Lscala/Option;
  #1384 = Methodref          #554.#1383   // argonaut/HCursor.fields:()Lscala/Option;
  #1385 = Utf8               [V]Map[String, V]
  #1386 = String             #1385        // [V]Map[String, V]
  #1387 = Utf8               Map
  #1388 = Utf8               ()Lscala/collection/immutable/Map$;
  #1389 = NameAndType        #1387:#1388  // Map:()Lscala/collection/immutable/Map$;
  #1390 = Methodref          #703.#1389   // scala/Predef$.Map:()Lscala/collection/immutable/Map$;
  #1391 = Utf8               scala/collection/immutable/Map$
  #1392 = Class              #1391        // scala/collection/immutable/Map$
  #1393 = Utf8               empty
  #1394 = Utf8               ()Lscala/collection/immutable/Map;
  #1395 = NameAndType        #1393:#1394  // empty:()Lscala/collection/immutable/Map;
  #1396 = Methodref          #1392.#1395  // scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
  #1397 = NameAndType        #1349:#1350  // spin$1:(Lscala/collection/immutable/List;Largonaut/DecodeResult;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #1398 = InterfaceMethodref #2.#1397     // argonaut/DecodeJsons.spin$1:(Lscala/collection/immutable/List;Largonaut/DecodeResult;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
  #1399 = Utf8               $init$
  #1400 = Utf8               (Largonaut/DecodeJsons;)V
  #1401 = NameAndType        #655:#291    // $anonfun$UUIDDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1402 = InterfaceMethodref #2.#1401     // argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1403 = MethodHandle       6:#1402      // REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
  #1404 = InvokeDynamic      #87:#296     // #87:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
  #1405 = Utf8               UUID
  #1406 = String             #1405        // UUID
  #1407 = NameAndType        #72:#73      // argonaut$DecodeJsons$_setter_$UUIDDecodeJson_$eq:(Largonaut/DecodeJson;)V
  #1408 = InterfaceMethodref #2.#1407     // argonaut/DecodeJsons.argonaut$DecodeJsons$_setter_$UUIDDecodeJson_$eq:(Largonaut/DecodeJson;)V
  #1409 = Utf8               unboxToDouble
  #1410 = Utf8               (Ljava/lang/Object;)D
  #1411 = NameAndType        #1409:#1410  // unboxToDouble:(Ljava/lang/Object;)D
  #1412 = Methodref          #791.#1411   // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #1413 = NameAndType        #1135:#793   // $anonfun$JDoubleDecodeJson$1:(D)Ljava/lang/Double;
  #1414 = InterfaceMethodref #2.#1413     // argonaut/DecodeJsons.$anonfun$JDoubleDecodeJson$1:(D)Ljava/lang/Double;
  #1415 = Utf8               unboxToFloat
  #1416 = Utf8               (Ljava/lang/Object;)F
  #1417 = NameAndType        #1415:#1416  // unboxToFloat:(Ljava/lang/Object;)F
  #1418 = Methodref          #791.#1417   // scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
  #1419 = NameAndType        #1141:#853   // $anonfun$JFloatDecodeJson$1:(F)Ljava/lang/Float;
  #1420 = InterfaceMethodref #2.#1419     // argonaut/DecodeJsons.$anonfun$JFloatDecodeJson$1:(F)Ljava/lang/Float;
  #1421 = NameAndType        #864:#865    // $anonfun$IntDecodeJson$2:(Largonaut/JsonNumber;)I
  #1422 = InterfaceMethodref #2.#1421     // argonaut/DecodeJsons.$anonfun$IntDecodeJson$2:(Largonaut/JsonNumber;)I
  #1423 = Utf8               boxToInteger
  #1424 = NameAndType        #1423:#1150  // boxToInteger:(I)Ljava/lang/Integer;
  #1425 = Methodref          #791.#1424   // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #1426 = NameAndType        #905:#906    // $anonfun$LongDecodeJson$2:(Largonaut/JsonNumber;)J
  #1427 = InterfaceMethodref #2.#1426     // argonaut/DecodeJsons.$anonfun$LongDecodeJson$2:(Largonaut/JsonNumber;)J
  #1428 = Utf8               boxToLong
  #1429 = NameAndType        #1428:#1171  // boxToLong:(J)Ljava/lang/Long;
  #1430 = Methodref          #791.#1429   // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #1431 = NameAndType        #942:#943    // $anonfun$ShortDecodeJson$2:(Largonaut/JsonNumber;)S
  #1432 = InterfaceMethodref #2.#1431     // argonaut/DecodeJsons.$anonfun$ShortDecodeJson$2:(Largonaut/JsonNumber;)S
  #1433 = Utf8               boxToShort
  #1434 = NameAndType        #1433:#1190  // boxToShort:(S)Ljava/lang/Short;
  #1435 = Methodref          #791.#1434   // scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
  #1436 = NameAndType        #979:#980    // $anonfun$ByteDecodeJson$2:(Largonaut/JsonNumber;)B
  #1437 = InterfaceMethodref #2.#1436     // argonaut/DecodeJsons.$anonfun$ByteDecodeJson$2:(Largonaut/JsonNumber;)B
  #1438 = Utf8               boxToByte
  #1439 = NameAndType        #1438:#1209  // boxToByte:(B)Ljava/lang/Byte;
  #1440 = Methodref          #791.#1439   // scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
  #1441 = Utf8               unboxToBoolean
  #1442 = NameAndType        #1441:#571   // unboxToBoolean:(Ljava/lang/Object;)Z
  #1443 = Methodref          #791.#1442   // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #1444 = NameAndType        #1224:#1225  // $anonfun$JBooleanDecodeJson$2:(Z)Ljava/lang/Boolean;
  #1445 = InterfaceMethodref #2.#1444     // argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$2:(Z)Ljava/lang/Boolean;
  #1446 = Utf8               $deserializeLambda$
  #1447 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1448 = Utf8               scala/runtime/LambdaDeserialize
  #1449 = Class              #1448        // scala/runtime/LambdaDeserialize
  #1450 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1451 = NameAndType        #28:#1450    // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1452 = Methodref          #1449.#1451  // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1453 = MethodHandle       6:#1452      // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1454 = Utf8               lambdaDeserialize
  #1455 = NameAndType        #1454:#1447  // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1456 = InvokeDynamic      #88:#1455    // #88:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1457 = Utf8               Code
  #1458 = Utf8               StackMapTable
  #1459 = Utf8               LineNumberTable
  #1460 = Utf8               LocalVariableTable
  #1461 = Utf8               MethodParameters
  #1462 = Utf8               Signature
  #1463 = Utf8               InnerClasses
  #1464 = Utf8               SourceFile
  #1465 = Utf8               RuntimeVisibleAnnotations
  #1466 = Utf8               BootstrapMethods
  #1467 = Utf8               ScalaInlineInfo
  #1468 = Utf8               ScalaSig
{
  public static java.lang.reflect.Method reflMethod$Method1(java.lang.Class);
    descriptor: (Ljava/lang/Class;)Ljava/lang/reflect/Method;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=1
         0: invokedynamic #36,  0             // InvokeDynamic #0:apply:()Lscala/runtime/StructuralCallSite;
         5: astore_1
         6: aload_1
         7: aload_0
         8: invokevirtual #39                 // Method scala/runtime/StructuralCallSite.find:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
        11: astore_2
        12: aload_2
        13: ifnull        18
        16: aload_2
        17: areturn
        18: getstatic     #45                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        21: aload_0
        22: ldc           #46                 // String apply
        24: aload_1
        25: invokevirtual #50                 // Method scala/runtime/StructuralCallSite.parameterTypes:()[Ljava/lang/Class;
        28: invokevirtual #56                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        31: invokevirtual #60                 // Method scala/runtime/ScalaRunTime$.ensureAccessible:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
        34: astore_2
        35: aload_1
        36: aload_0
        37: aload_2
        38: invokevirtual #64                 // Method scala/runtime/StructuralCallSite.add:(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
        41: pop
        42: aload_2
        43: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 18
          locals = [ class scala/runtime/StructuralCallSite, class java/lang/reflect/Method ]
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      39     1 methodCache1   Lscala/runtime/StructuralCallSite;
           11      33     2 method1   Ljava/lang/reflect/Method;
            0      44     0   x$1   Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract void argonaut$DecodeJsons$_setter_$UUIDDecodeJson_$eq(argonaut.DecodeJson<java.util.UUID>);
    descriptor: (Largonaut/DecodeJson;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #74                          // (Largonaut/DecodeJson<Ljava/util/UUID;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static argonaut.DecodeJson optionDecoder$(argonaut.DecodeJsons, scala.Function1, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #83                 // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
         6: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Largonaut/DecodeJsons;
            0       7     1     k   Lscala/Function1;
            0       7     2     e   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      k                              final
      e                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<A> optionDecoder(scala.Function1<argonaut.Json, scala.Option<A>>, java.lang.String);
    descriptor: (Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: aload_1
         4: aload_2
         5: invokedynamic #113,  0            // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/String;)Lscala/Function1;
        10: invokevirtual #116                // Method argonaut/DecodeJson$.apply:(Lscala/Function1;)Largonaut/DecodeJson;
        13: areturn
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/DecodeJsons;
            0      14     1     k   Lscala/Function1;
            0      14     2     e   Ljava/lang/String;
    Signature: #87                          // <A:Ljava/lang/Object;>(Lscala/Function1<Largonaut/Json;Lscala/Option<TA;>;>;Ljava/lang/String;)Largonaut/DecodeJson<TA;>;
    MethodParameters:
      Name                           Flags
      k                              final
      e                              final

  public static argonaut.DecodeJson decodeArr$(argonaut.DecodeJsons, scala.Function1);
    descriptor: (Largonaut/DecodeJsons;Lscala/Function1;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #123                // InterfaceMethod decodeArr:(Lscala/Function1;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<A> decodeArr(scala.Function1<argonaut.HCursor, A>);
    descriptor: (Lscala/Function1;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: aload_1
         4: invokedynamic #132,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function1;
         9: invokevirtual #116                // Method argonaut/DecodeJson$.apply:(Lscala/Function1;)Largonaut/DecodeJson;
        12: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/DecodeJsons;
            0      13     1     f   Lscala/Function1;
    Signature: #124                         // <A:Ljava/lang/Object;>(Lscala/Function1<Largonaut/HCursor;TA;>;)Largonaut/DecodeJson<TA;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static scala.Option tryTo$(argonaut.DecodeJsons, scala.Function0);
    descriptor: (Largonaut/DecodeJsons;Lscala/Function0;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #138                // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     f   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default <A extends java.lang.Object> scala.Option<A> tryTo(scala.Function0<A>);
    descriptor: (Lscala/Function0;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: getstatic     #145                // Field scala/util/control/Exception$.MODULE$:Lscala/util/control/Exception$;
         3: getstatic     #45                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         6: iconst_1
         7: anewarray     #52                 // class java/lang/Class
        10: dup
        11: iconst_0
        12: ldc           #147                // class java/lang/IllegalArgumentException
        14: aastore
        15: checkcast     #149                // class "[Ljava/lang/Object;"
        18: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        21: invokevirtual #157                // Method scala/util/control/Exception$.catching:(Lscala/collection/immutable/Seq;)Lscala/util/control/Exception$Catch;
        24: aload_1
        25: invokevirtual #160                // Method scala/util/control/Exception$Catch.opt:(Lscala/Function0;)Lscala/Option;
        28: areturn
      LineNumberTable:
        line 211: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Largonaut/DecodeJsons;
            0      29     1     f   Lscala/Function0;
    Signature: #140                         // <A:Ljava/lang/Object;>(Lscala/Function0<TA;>;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.DecodeJson HCursorDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #166                // InterfaceMethod HCursorDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<argonaut.HCursor> HCursorDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #176,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
         6: invokeinterface #123,  2          // InterfaceMethod decodeArr:(Lscala/Function1;)Largonaut/DecodeJson;
        11: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/DecodeJsons;
    Signature: #167                         // ()Largonaut/DecodeJson<Largonaut/HCursor;>;

  public static argonaut.DecodeJson JsonDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #180                // InterfaceMethod JsonDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<argonaut.Json> JsonDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #188,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
         6: invokeinterface #123,  2          // InterfaceMethod decodeArr:(Lscala/Function1;)Largonaut/DecodeJson;
        11: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/DecodeJsons;
    Signature: #181                         // ()Largonaut/DecodeJson<Largonaut/Json;>;

  public static argonaut.DecodeJson CanBuildFromDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson, scala.collection.BuildFrom);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #195                // InterfaceMethod CanBuildFromDecodeJson:(Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
         6: areturn
      LineNumberTable:
        line 218: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Largonaut/DecodeJsons;
            0       7     1     e   Largonaut/DecodeJson;
            0       7     2     c   Lscala/collection/BuildFrom;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final
      c                              final

  public default <A extends java.lang.Object, C extends java.lang.Object> argonaut.DecodeJson<C> CanBuildFromDecodeJson(argonaut.DecodeJson<A>, scala.collection.BuildFrom<scala.runtime.Nothing$, A, C>);
    descriptor: (Largonaut/DecodeJson;Lscala/collection/BuildFrom;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: aload_0
         4: aload_2
         5: invokedynamic #208,  0            // InvokeDynamic #5:apply:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/Function0;
        10: aload_1
        11: invokevirtual #212                // Method argonaut/DecodeJson$.BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
        14: areturn
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Largonaut/DecodeJsons;
            0      15     1     e   Largonaut/DecodeJson;
            0      15     2     c   Lscala/collection/BuildFrom;
    Signature: #198                         // <A:Ljava/lang/Object;C:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;Lscala/collection/BuildFrom<Lscala/runtime/Nothing$;TA;TC;>;)Largonaut/DecodeJson<TC;>;
    MethodParameters:
      Name                           Flags
      e                              final
      c                              final

  public abstract argonaut.DecodeJson<java.util.UUID> UUIDDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #214                         // ()Largonaut/DecodeJson<Ljava/util/UUID;>;

  public static argonaut.DecodeJson ListDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #220                // InterfaceMethod ListDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 226: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     e   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<scala.collection.immutable.List<A>> ListDecodeJson(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: invokedynamic #228,  0            // InvokeDynamic #6:apply:()Lscala/Function0;
         8: aload_1
         9: invokevirtual #212                // Method argonaut/DecodeJson$.BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
        12: areturn
      LineNumberTable:
        line 227: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/DecodeJsons;
            0      13     1     e   Largonaut/DecodeJson;
    Signature: #221                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/List<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.DecodeJson VectorDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #232                // InterfaceMethod VectorDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 229: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     e   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<scala.collection.immutable.Vector<A>> VectorDecodeJson(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: invokedynamic #240,  0            // InvokeDynamic #7:apply:()Lscala/Function0;
         8: aload_1
         9: invokevirtual #212                // Method argonaut/DecodeJson$.BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
        12: areturn
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/DecodeJsons;
            0      13     1     e   Largonaut/DecodeJson;
    Signature: #233                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Vector<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.DecodeJson StreamDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #244                // InterfaceMethod StreamDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 232: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     e   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<scala.collection.immutable.Stream<A>> StreamDecodeJson(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: invokedynamic #250,  0            // InvokeDynamic #8:apply:()Lscala/Function0;
         8: aload_1
         9: invokevirtual #212                // Method argonaut/DecodeJson$.BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
        12: areturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/DecodeJsons;
            0      13     1     e   Largonaut/DecodeJson;
    Signature: #245                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Stream<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.DecodeJson SetDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #254                // InterfaceMethod SetDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 235: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     e   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<scala.collection.immutable.Set<A>> SetDecodeJson(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: invokedynamic #260,  0            // InvokeDynamic #9:apply:()Lscala/Function0;
         8: aload_1
         9: invokevirtual #212                // Method argonaut/DecodeJson$.BuilderDecodeJson:(Lscala/Function0;Largonaut/DecodeJson;)Largonaut/DecodeJson;
        12: areturn
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/DecodeJsons;
            0      13     1     e   Largonaut/DecodeJson;
    Signature: #255                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Set<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.DecodeJson UnitDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #264                // InterfaceMethod UnitDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<scala.runtime.BoxedUnit> UnitDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: invokedynamic #270,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
         8: invokevirtual #116                // Method argonaut/DecodeJson$.apply:(Lscala/Function1;)Largonaut/DecodeJson;
        11: areturn
      LineNumberTable:
        line 239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Largonaut/DecodeJsons;
    Signature: #265                         // ()Largonaut/DecodeJson<Lscala/runtime/BoxedUnit;>;

  public static argonaut.DecodeJson StringDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #274                // InterfaceMethod StringDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.String> StringDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #282,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
         6: ldc_w         #284                // String String
         9: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        14: areturn
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Largonaut/DecodeJsons;
    Signature: #275                         // ()Largonaut/DecodeJson<Ljava/lang/String;>;

  public static argonaut.DecodeJson DoubleDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #288                // InterfaceMethod DoubleDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 248: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> DoubleDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #297,  0            // InvokeDynamic #12:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #299                // String Double
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 249: 0
        line 255: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson FloatDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #303                // InterfaceMethod FloatDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 258: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> FloatDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #308,  0            // InvokeDynamic #13:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #310                // String Float
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 259: 0
        line 265: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson IntDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #314                // InterfaceMethod IntDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> IntDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #319,  0            // InvokeDynamic #14:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #321                // String Int
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 269: 0
        line 271: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson LongDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #325                // InterfaceMethod LongDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> LongDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #330,  0            // InvokeDynamic #15:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #332                // String Long
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 275: 0
        line 277: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson ShortDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #336                // InterfaceMethod ShortDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> ShortDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #341,  0            // InvokeDynamic #16:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #343                // String Short
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 281: 0
        line 283: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson ByteDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #347                // InterfaceMethod ByteDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 286: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> ByteDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #352,  0            // InvokeDynamic #17:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #354                // String Byte
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 287: 0
        line 289: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson BigIntDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #358                // InterfaceMethod BigIntDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<scala.math.BigInt> BigIntDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #364,  0            // InvokeDynamic #18:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #366                // String BigInt
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 293: 0
        line 295: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #359                         // ()Largonaut/DecodeJson<Lscala/math/BigInt;>;

  public static argonaut.DecodeJson BigDecimalDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #370                // InterfaceMethod BigDecimalDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<scala.math.BigDecimal> BigDecimalDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #376,  0            // InvokeDynamic #19:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #378                // String BigDecimal
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 299: 0
        line 301: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #371                         // ()Largonaut/DecodeJson<Lscala/math/BigDecimal;>;

  public static argonaut.DecodeJson BooleanDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #382                // InterfaceMethod BooleanDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> BooleanDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #387,  0            // InvokeDynamic #20:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #389                // String Boolean
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson CharDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #393                // InterfaceMethod CharDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 308: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Object> CharDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #398,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
         6: ldc_w         #400                // String Char
         9: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        14: areturn
      LineNumberTable:
        line 309: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Largonaut/DecodeJsons;
    Signature: #289                         // ()Largonaut/DecodeJson<Ljava/lang/Object;>;

  public static argonaut.DecodeJson JDoubleDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #404                // InterfaceMethod JDoubleDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 312: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Double> JDoubleDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #288,  1          // InterfaceMethod DoubleDecodeJson:()Largonaut/DecodeJson;
         6: invokedynamic #412,  0            // InvokeDynamic #22:apply:()Lscala/Function1;
        11: invokeinterface #417,  2          // InterfaceMethod argonaut/DecodeJson.map:(Lscala/Function1;)Largonaut/DecodeJson;
        16: areturn
      LineNumberTable:
        line 313: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Largonaut/DecodeJsons;
    Signature: #405                         // ()Largonaut/DecodeJson<Ljava/lang/Double;>;

  public static argonaut.DecodeJson JFloatDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #421                // InterfaceMethod JFloatDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 316: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Float> JFloatDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #303,  1          // InterfaceMethod FloatDecodeJson:()Largonaut/DecodeJson;
         6: invokedynamic #429,  0            // InvokeDynamic #23:apply:()Lscala/Function1;
        11: invokeinterface #417,  2          // InterfaceMethod argonaut/DecodeJson.map:(Lscala/Function1;)Largonaut/DecodeJson;
        16: areturn
      LineNumberTable:
        line 317: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Largonaut/DecodeJsons;
    Signature: #422                         // ()Largonaut/DecodeJson<Ljava/lang/Float;>;

  public static argonaut.DecodeJson JIntegerDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #433                // InterfaceMethod JIntegerDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 320: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Integer> JIntegerDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #439,  0            // InvokeDynamic #24:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #441                // String java.lang.Integer
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 321: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #434                         // ()Largonaut/DecodeJson<Ljava/lang/Integer;>;

  public static argonaut.DecodeJson JLongDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #445                // InterfaceMethod JLongDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Long> JLongDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #451,  0            // InvokeDynamic #25:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #453                // String java.lang.Long
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #446                         // ()Largonaut/DecodeJson<Ljava/lang/Long;>;

  public static argonaut.DecodeJson JShortDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #457                // InterfaceMethod JShortDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 328: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Short> JShortDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #463,  0            // InvokeDynamic #26:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #465                // String java.lang.Short
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #458                         // ()Largonaut/DecodeJson<Ljava/lang/Short;>;

  public static argonaut.DecodeJson JByteDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #469                // InterfaceMethod JByteDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 332: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Byte> JByteDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokedynamic #475,  0            // InvokeDynamic #27:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         7: ldc_w         #477                // String java.lang.Byte
        10: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        15: areturn
      LineNumberTable:
        line 333: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Largonaut/DecodeJsons;
    Signature: #470                         // ()Largonaut/DecodeJson<Ljava/lang/Byte;>;

  public static argonaut.DecodeJson JBooleanDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #481                // InterfaceMethod JBooleanDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 336: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Boolean> JBooleanDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #487,  0            // InvokeDynamic #28:apply:()Lscala/Function1;
         6: ldc_w         #489                // String java.lang.Boolean
         9: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        14: areturn
      LineNumberTable:
        line 337: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Largonaut/DecodeJsons;
    Signature: #482                         // ()Largonaut/DecodeJson<Ljava/lang/Boolean;>;

  public static argonaut.DecodeJson JCharacterDecodeJson$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #493                // InterfaceMethod JCharacterDecodeJson:()Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 340: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default argonaut.DecodeJson<java.lang.Character> JCharacterDecodeJson();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #499,  0            // InvokeDynamic #29:apply:()Lscala/Function1;
         6: ldc_w         #501                // String java.lang.Character
         9: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        14: areturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Largonaut/DecodeJsons;
    Signature: #494                         // ()Largonaut/DecodeJson<Ljava/lang/Character;>;

  public static argonaut.DecodeJson OptionDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #505                // InterfaceMethod OptionDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 344: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     e   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <A extends java.lang.Object> argonaut.DecodeJson<scala.Option<A>> OptionDecodeJson(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: aload_1
         4: invokedynamic #516,  0            // InvokeDynamic #30:apply:(Largonaut/DecodeJson;)Lscala/Function1;
         9: invokevirtual #519                // Method argonaut/DecodeJson$.withReattempt:(Lscala/Function1;)Largonaut/DecodeJson;
        12: areturn
      LineNumberTable:
        line 345: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/DecodeJsons;
            0      13     1     e   Largonaut/DecodeJson;
    Signature: #506                         // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeJson<Lscala/Option<TA;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.DecodeJson EitherDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #527                // InterfaceMethod EitherDecodeJson:(Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
         6: areturn
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Largonaut/DecodeJsons;
            0       7     1    ea   Largonaut/DecodeJson;
            0       7     2    eb   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ea                             final
      eb                             final

  public default <A extends java.lang.Object, B extends java.lang.Object> argonaut.DecodeJson<scala.util.Either<A, B>> EitherDecodeJson(argonaut.DecodeJson<A>, argonaut.DecodeJson<B>);
    descriptor: (Largonaut/DecodeJson;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: aload_1
         4: aload_2
         5: invokedynamic #536,  0            // InvokeDynamic #31:apply:(Largonaut/DecodeJson;Largonaut/DecodeJson;)Lscala/Function1;
        10: invokevirtual #116                // Method argonaut/DecodeJson$.apply:(Lscala/Function1;)Largonaut/DecodeJson;
        13: areturn
      LineNumberTable:
        line 358: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/DecodeJsons;
            0      14     1    ea   Largonaut/DecodeJson;
            0      14     2    eb   Largonaut/DecodeJson;
    Signature: #528                         // <A:Ljava/lang/Object;B:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;Largonaut/DecodeJson<TB;>;)Largonaut/DecodeJson<Lscala/util/Either<TA;TB;>;>;
    MethodParameters:
      Name                           Flags
      ea                             final
      eb                             final

  public static argonaut.DecodeJson MapDecodeJson$(argonaut.DecodeJsons, argonaut.DecodeJson);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #540                // InterfaceMethod MapDecodeJson:(Largonaut/DecodeJson;)Largonaut/DecodeJson;
         5: areturn
      LineNumberTable:
        line 369: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Largonaut/DecodeJsons;
            0       6     1     e   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e                              final

  public default <V extends java.lang.Object> argonaut.DecodeJson<scala.collection.immutable.Map<java.lang.String, V>> MapDecodeJson(argonaut.DecodeJson<V>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #92                 // Field argonaut/DecodeJson$.MODULE$:Largonaut/DecodeJson$;
         3: aload_0
         4: aload_1
         5: invokedynamic #549,  0            // InvokeDynamic #32:apply:(Largonaut/DecodeJsons;Largonaut/DecodeJson;)Lscala/Function1;
        10: invokevirtual #116                // Method argonaut/DecodeJson$.apply:(Lscala/Function1;)Largonaut/DecodeJson;
        13: areturn
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Largonaut/DecodeJsons;
            0      14     1     e   Largonaut/DecodeJson;
    Signature: #541                         // <V:Ljava/lang/Object;>(Largonaut/DecodeJson<TV;>;)Largonaut/DecodeJson<Lscala/collection/immutable/Map<Ljava/lang/String;TV;>;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static argonaut.DecodeResult $anonfun$optionDecoder$1(scala.Function1, java.lang.String, argonaut.HCursor);
    descriptor: (Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #558                // Method argonaut/HCursor.focus:()Largonaut/Json;
         5: invokeinterface #562,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #564                // class scala/Option
        13: astore        4
        15: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
        18: aload         4
        20: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        23: ifeq          41
        26: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        29: aload_1
        30: aload_2
        31: invokevirtual #582                // Method argonaut/HCursor.history:()Largonaut/CursorHistory;
        34: invokevirtual #586                // Method argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
        37: astore_3
        38: goto          91
        41: goto          44
        44: aload         4
        46: instanceof    #588                // class scala/Some
        49: ifeq          78
        52: aload         4
        54: checkcast     #588                // class scala/Some
        57: astore        5
        59: aload         5
        61: invokevirtual #591                // Method scala/Some.value:()Ljava/lang/Object;
        64: astore        6
        66: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        69: aload         6
        71: invokevirtual #595                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        74: astore_3
        75: goto          91
        78: goto          81
        81: new           #597                // class scala/MatchError
        84: dup
        85: aload         4
        87: invokespecial #601                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        90: athrow
        91: aload_3
        92: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 33 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class java/lang/String, class argonaut/HCursor, class argonaut/DecodeResult, class scala/Option ]
          stack = []
      LineNumberTable:
        line 200: 0
        line 201: 15
        line 202: 44
        line 200: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      14     6     w   Ljava/lang/Object;
            0      93     0   k$1   Lscala/Function1;
            0      93     1   e$2   Ljava/lang/String;
            0      93     2     a   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      k$1                            final
      e$2                            final
      a                              final

  public static argonaut.DecodeResult $anonfun$decodeArr$1(scala.Function1, argonaut.HCursor);
    descriptor: (Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
         3: aload_0
         4: aload_1
         5: invokeinterface #562,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        10: invokevirtual #595                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        13: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   f$5   Lscala/Function1;
            0      14     1     j   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      f$5                            final
      j                              final

  public static argonaut.HCursor $anonfun$HCursorDecodeJson$1(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/HCursor;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     q   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      q                              final

  public static argonaut.Json $anonfun$JsonDecodeJson$1(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/Json;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #558                // Method argonaut/HCursor.focus:()Largonaut/Json;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     j   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      j                              final

  public static scala.collection.mutable.Builder $anonfun$CanBuildFromDecodeJson$1(argonaut.DecodeJsons, scala.collection.BuildFrom);
    descriptor: (Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: astore_2
         2: aload_2
         3: invokevirtual #618                // Method java/lang/Object.getClass:()Ljava/lang/Class;
         6: invokestatic  #620                // InterfaceMethod reflMethod$Method1:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
         9: aload_2
        10: iconst_0
        11: anewarray     #4                  // class java/lang/Object
        14: invokevirtual #624                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        17: goto          26
        20: astore_3
        21: aload_3
        22: invokevirtual #628                // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
        25: athrow
        26: checkcast     #630                // class scala/collection/mutable/Builder
        29: checkcast     #630                // class scala/collection/mutable/Builder
        32: areturn
      Exception table:
         from    to  target type
             2    17    20   Class java/lang/reflect/InvocationTargetException
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class argonaut/DecodeJsons, class scala/collection/BuildFrom, class scala/collection/BuildFrom ]
          stack = [ class java/lang/reflect/InvocationTargetException ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20       6     3     1   Ljava/lang/reflect/InvocationTargetException;
            1      28     2 qual1   Lscala/collection/BuildFrom;
            0      33     0 $this   Largonaut/DecodeJsons;
            0      33     1   c$4   Lscala/collection/BuildFrom;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c$4                            final

  public static java.util.UUID $anonfun$UUIDDecodeJson$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/UUID;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #643                // Method java/util/UUID.fromString:(Ljava/lang/String;)Ljava/util/UUID;
         4: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   s$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$1                            final

  public static scala.Option $anonfun$UUIDDecodeJson$2(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #654,  0            // InvokeDynamic #33:apply:(Ljava/lang/String;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$UUIDDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #668,  0            // InvokeDynamic #34:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$10   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$10                           final

  public static scala.collection.mutable.Builder $anonfun$ListDecodeJson$1();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #678                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
         3: invokevirtual #681                // Method scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
         6: areturn
      LineNumberTable:
        line 227: 0

  public static scala.collection.mutable.ReusableBuilder $anonfun$VectorDecodeJson$1();
    descriptor: ()Lscala/collection/mutable/ReusableBuilder;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #686                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #690                // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
         6: invokevirtual #694                // Method scala/collection/immutable/Vector$.newBuilder:()Lscala/collection/mutable/ReusableBuilder;
         9: areturn
      LineNumberTable:
        line 230: 0

  public static scala.collection.mutable.Builder $anonfun$StreamDecodeJson$1();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #686                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #698                // Method scala/package$.Stream:()Lscala/collection/immutable/Stream$;
         6: invokevirtual #701                // Method scala/collection/immutable/Stream$.newBuilder:()Lscala/collection/mutable/Builder;
         9: areturn
      LineNumberTable:
        line 233: 0

  public static scala.collection.mutable.Builder $anonfun$SetDecodeJson$1();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: invokevirtual #710                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
         6: invokevirtual #713                // Method scala/collection/immutable/Set$.newBuilder:()Lscala/collection/mutable/Builder;
         9: areturn
      LineNumberTable:
        line 236: 0

  public static argonaut.DecodeResult $anonfun$UnitDecodeJson$1(argonaut.HCursor);
    descriptor: (Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #558                // Method argonaut/HCursor.focus:()Largonaut/Json;
         4: invokevirtual #717                // Method argonaut/Json.isNull:()Z
         7: ifne          70
        10: aload_0
        11: invokevirtual #558                // Method argonaut/HCursor.focus:()Largonaut/Json;
        14: getstatic     #722                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        17: invokevirtual #725                // Method argonaut/Json$.jEmptyObject:()Largonaut/Json;
        20: astore_1
        21: dup
        22: ifnonnull     33
        25: pop
        26: aload_1
        27: ifnull        70
        30: goto          40
        33: aload_1
        34: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        37: ifne          70
        40: aload_0
        41: invokevirtual #558                // Method argonaut/HCursor.focus:()Largonaut/Json;
        44: getstatic     #722                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        47: invokevirtual #728                // Method argonaut/Json$.jEmptyArray:()Largonaut/Json;
        50: astore_2
        51: dup
        52: ifnonnull     63
        55: pop
        56: aload_2
        57: ifnull        70
        60: goto          82
        63: aload_2
        64: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        67: ifeq          82
        70: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        73: getstatic     #734                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        76: invokevirtual #595                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        79: goto          95
        82: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        85: ldc_w         #736                // String Unit
        88: aload_0
        89: invokevirtual #582                // Method argonaut/HCursor.history:()Largonaut/CursorHistory;
        92: invokevirtual #586                // Method argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
        95: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class argonaut/HCursor, class argonaut/Json ]
          stack = [ class argonaut/Json ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class argonaut/HCursor, class argonaut/Json, class argonaut/Json ]
          stack = [ class argonaut/Json ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ class argonaut/Json, class argonaut/Json ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class argonaut/HCursor ]
          stack = [ class argonaut/DecodeResult ]
      LineNumberTable:
        line 239: 0
        line 240: 70
        line 242: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      96     0     a   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      a                              final

  public static scala.Option $anonfun$StringDecodeJson$1(argonaut.Json);
    descriptor: (Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$11   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public static double $anonfun$DoubleDecodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)D
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #746                // Method argonaut/JsonNumber.truncateToDouble:()D
         4: dreturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   n$3   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      n$3                            final

  public static scala.Option $anonfun$DoubleDecodeJson$2(argonaut.DecodeJsons, argonaut.JsonNumber);
    descriptor: (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #758,  0            // InvokeDynamic #35:apply$mcD$sp:(Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcD$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     n   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final

  public static double $anonfun$DoubleDecodeJson$6(java.lang.String);
    descriptor: (Ljava/lang/String;)D
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #773                // Method scala/collection/StringOps$.toDouble$extension:(Ljava/lang/String;)D
        13: dreturn
      LineNumberTable:
        line 253: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$2                            final

  public static scala.Option $anonfun$DoubleDecodeJson$5(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #780,  0            // InvokeDynamic #36:apply$mcD$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcD$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$DoubleDecodeJson$4(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #786,  0            // InvokeDynamic #37:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$31   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$31                           final

  public static scala.Option $anonfun$DoubleDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #717                // Method argonaut/Json.isNull:()Z
         4: ifeq          23
         7: new           #588                // class scala/Some
        10: dup
        11: ldc2_w        #788                // double NaNd
        14: invokestatic  #795                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        17: invokespecial #796                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: goto          46
        23: aload_1
        24: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
        27: aload_0
        28: invokedynamic #805,  0            // InvokeDynamic #38:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        33: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        36: aload_0
        37: aload_1
        38: invokedynamic #812,  0            // InvokeDynamic #39:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        43: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 250: 0
        line 251: 7
        line 253: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0 $this   Largonaut/DecodeJsons;
            0      47     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static float $anonfun$FloatDecodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #822                // Method argonaut/JsonNumber.truncateToFloat:()F
         4: freturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   n$4   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      n$4                            final

  public static scala.Option $anonfun$FloatDecodeJson$2(argonaut.DecodeJsons, argonaut.JsonNumber);
    descriptor: (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #831,  0            // InvokeDynamic #40:apply$mcF$sp:(Largonaut/JsonNumber;)Lscala/runtime/java8/JFunction0$mcF$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     n   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final

  public static float $anonfun$FloatDecodeJson$6(java.lang.String);
    descriptor: (Ljava/lang/String;)F
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #837                // Method scala/collection/StringOps$.toFloat$extension:(Ljava/lang/String;)F
        13: freturn
      LineNumberTable:
        line 263: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$3                            final

  public static scala.Option $anonfun$FloatDecodeJson$5(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #844,  0            // InvokeDynamic #41:apply$mcF$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcF$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$FloatDecodeJson$4(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #850,  0            // InvokeDynamic #42:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 263: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$32   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$32                           final

  public static scala.Option $anonfun$FloatDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #717                // Method argonaut/Json.isNull:()Z
         4: ifeq          23
         7: new           #588                // class scala/Some
        10: dup
        11: ldc_w         #851                // float NaNf
        14: invokestatic  #855                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
        17: invokespecial #796                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: goto          46
        23: aload_1
        24: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
        27: aload_0
        28: invokedynamic #859,  0            // InvokeDynamic #43:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        33: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        36: aload_0
        37: aload_1
        38: invokedynamic #863,  0            // InvokeDynamic #44:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        43: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 260: 0
        line 261: 7
        line 263: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0 $this   Largonaut/DecodeJsons;
            0      47     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static int $anonfun$IntDecodeJson$2(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #870                // Method argonaut/JsonNumber.truncateToInt:()I
         4: ireturn
      LineNumberTable:
        line 270: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$12   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static int $anonfun$IntDecodeJson$5(java.lang.String);
    descriptor: (Ljava/lang/String;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #876                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
        13: ireturn
      LineNumberTable:
        line 271: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$4                            final

  public static scala.Option $anonfun$IntDecodeJson$4(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #885,  0            // InvokeDynamic #45:apply$mcI$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcI$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 271: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$IntDecodeJson$3(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #891,  0            // InvokeDynamic #46:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 271: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$33   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$33                           final

  public static scala.Option $anonfun$IntDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: invokedynamic #898,  0            // InvokeDynamic #47:apply:()Lscala/Function1;
         9: invokevirtual #900                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #904,  0            // InvokeDynamic #48:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        19: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 270: 0
        line 271: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Largonaut/DecodeJsons;
            0      23     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static long $anonfun$LongDecodeJson$2(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)J
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #911                // Method argonaut/JsonNumber.truncateToLong:()J
         4: lreturn
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$13   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static long $anonfun$LongDecodeJson$5(java.lang.String);
    descriptor: (Ljava/lang/String;)J
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #917                // Method scala/collection/StringOps$.toLong$extension:(Ljava/lang/String;)J
        13: lreturn
      LineNumberTable:
        line 277: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$5                            final

  public static scala.Option $anonfun$LongDecodeJson$4(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #926,  0            // InvokeDynamic #49:apply$mcJ$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcJ$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$LongDecodeJson$3(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #932,  0            // InvokeDynamic #50:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$34   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$34                           final

  public static scala.Option $anonfun$LongDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: invokedynamic #937,  0            // InvokeDynamic #51:apply:()Lscala/Function1;
         9: invokevirtual #900                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #941,  0            // InvokeDynamic #52:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        19: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 276: 0
        line 277: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Largonaut/DecodeJsons;
            0      23     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static short $anonfun$ShortDecodeJson$2(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)S
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #948                // Method argonaut/JsonNumber.truncateToShort:()S
         4: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$14   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$14                           final

  public static short $anonfun$ShortDecodeJson$5(java.lang.String);
    descriptor: (Ljava/lang/String;)S
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #954                // Method scala/collection/StringOps$.toShort$extension:(Ljava/lang/String;)S
        13: ireturn
      LineNumberTable:
        line 283: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$6   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$6                            final

  public static scala.Option $anonfun$ShortDecodeJson$4(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #963,  0            // InvokeDynamic #53:apply$mcS$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcS$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$ShortDecodeJson$3(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #969,  0            // InvokeDynamic #54:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$35   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$35                           final

  public static scala.Option $anonfun$ShortDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: invokedynamic #974,  0            // InvokeDynamic #55:apply:()Lscala/Function1;
         9: invokevirtual #900                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #978,  0            // InvokeDynamic #56:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        19: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 282: 0
        line 283: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Largonaut/DecodeJsons;
            0      23     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static byte $anonfun$ByteDecodeJson$2(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)B
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #985                // Method argonaut/JsonNumber.truncateToByte:()B
         4: ireturn
      LineNumberTable:
        line 288: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$15   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$15                           final

  public static byte $anonfun$ByteDecodeJson$5(java.lang.String);
    descriptor: (Ljava/lang/String;)B
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #991                // Method scala/collection/StringOps$.toByte$extension:(Ljava/lang/String;)B
        13: ireturn
      LineNumberTable:
        line 289: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$7   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$7                            final

  public static scala.Option $anonfun$ByteDecodeJson$4(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1000,  0           // InvokeDynamic #57:apply$mcB$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcB$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 289: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$ByteDecodeJson$3(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1006,  0           // InvokeDynamic #58:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 289: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$36   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$36                           final

  public static scala.Option $anonfun$ByteDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: invokedynamic #1011,  0           // InvokeDynamic #59:apply:()Lscala/Function1;
         9: invokevirtual #900                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #1015,  0           // InvokeDynamic #60:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        19: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 288: 0
        line 289: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Largonaut/DecodeJsons;
            0      23     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static scala.Option $anonfun$BigIntDecodeJson$2(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1020               // Method argonaut/JsonNumber.truncateToBigInt:()Lscala/Option;
         4: areturn
      LineNumberTable:
        line 294: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$16   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$16                           final

  public static scala.math.BigInt $anonfun$BigIntDecodeJson$5(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/math/BigInt;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #686                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #1026               // Method scala/package$.BigInt:()Lscala/math/BigInt$;
         6: aload_0
         7: invokevirtual #1030               // Method scala/math/BigInt$.apply:(Ljava/lang/String;)Lscala/math/BigInt;
        10: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   s$8   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$8                            final

  public static scala.Option $anonfun$BigIntDecodeJson$4(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1037,  0           // InvokeDynamic #61:apply:(Ljava/lang/String;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$BigIntDecodeJson$3(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1043,  0           // InvokeDynamic #62:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$37   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$37                           final

  public static scala.Option $anonfun$BigIntDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: invokedynamic #1047,  0           // InvokeDynamic #63:apply:()Lscala/Function1;
         9: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #1051,  0           // InvokeDynamic #64:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        19: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 294: 0
        line 295: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Largonaut/DecodeJsons;
            0      23     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static scala.math.BigDecimal $anonfun$BigDecimalDecodeJson$2(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Lscala/math/BigDecimal;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1058               // Method argonaut/JsonNumber.toBigDecimal:()Lscala/math/BigDecimal;
         4: areturn
      LineNumberTable:
        line 300: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$17   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$17                           final

  public static scala.math.BigDecimal $anonfun$BigDecimalDecodeJson$5(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/math/BigDecimal;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #686                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #1064               // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
         6: aload_0
         7: invokevirtual #1068               // Method scala/math/BigDecimal$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        10: areturn
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   s$9   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$9                            final

  public static scala.Option $anonfun$BigDecimalDecodeJson$4(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1074,  0           // InvokeDynamic #65:apply:(Ljava/lang/String;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$BigDecimalDecodeJson$3(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1080,  0           // InvokeDynamic #66:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 301: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$38   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$38                           final

  public static scala.Option $anonfun$BigDecimalDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: invokedynamic #1085,  0           // InvokeDynamic #67:apply:()Lscala/Function1;
         9: invokevirtual #900                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: aload_0
        13: aload_1
        14: invokedynamic #1089,  0           // InvokeDynamic #68:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        19: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: areturn
      LineNumberTable:
        line 300: 0
        line 301: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 $this   Largonaut/DecodeJsons;
            0      23     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static boolean $anonfun$BooleanDecodeJson$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #1095               // Method scala/collection/StringOps$.toBoolean$extension:(Ljava/lang/String;)Z
        13: ireturn
      LineNumberTable:
        line 305: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  s$10   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$10                           final

  public static scala.Option $anonfun$BooleanDecodeJson$3(argonaut.DecodeJsons, java.lang.String);
    descriptor: (Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1104,  0           // InvokeDynamic #69:apply$mcZ$sp:(Ljava/lang/String;)Lscala/runtime/java8/JFunction0$mcZ$sp;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$BooleanDecodeJson$2(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1110,  0           // InvokeDynamic #70:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$39   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$39                           final

  public static scala.Option $anonfun$BooleanDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #1113               // Method argonaut/Json.bool:()Lscala/Option;
         4: aload_0
         5: aload_1
         6: invokedynamic #1117,  0           // InvokeDynamic #71:apply:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Function0;
        11: invokevirtual #815                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        14: areturn
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   Largonaut/DecodeJsons;
            0      15     1     x   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x                              final

  public static scala.Option $anonfun$CharDecodeJson$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1121               // Method java/lang/String.length:()I
         4: iconst_1
         5: if_icmpne     35
         8: new           #588                // class scala/Some
        11: dup
        12: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        15: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: aload_0
        19: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        22: iconst_0
        23: invokevirtual #1125               // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        26: invokestatic  #1129               // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        29: invokespecial #796                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        32: goto          38
        35: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
        38: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 35 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 309: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.Option $anonfun$CharDecodeJson$1(argonaut.Json);
    descriptor: (Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: invokedynamic #1134,  0           // InvokeDynamic #72:apply:()Lscala/Function1;
         9: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 309: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  x$18   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      x$18                           final

  public static java.lang.Double $anonfun$JDoubleDecodeJson$1(double);
    descriptor: (D)Ljava/lang/Double;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: dload_0
         4: invokevirtual #1139               // Method scala/Predef$.double2Double:(D)Ljava/lang/Double;
         7: areturn
      LineNumberTable:
        line 313: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   D
    MethodParameters:
      Name                           Flags
      d                              final

  public static java.lang.Float $anonfun$JFloatDecodeJson$1(float);
    descriptor: (F)Ljava/lang/Float;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: fload_0
         4: invokevirtual #1144               // Method scala/Predef$.float2Float:(F)Ljava/lang/Float;
         7: areturn
      LineNumberTable:
        line 317: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     f   F
    MethodParameters:
      Name                           Flags
      f                              final

  public static java.lang.Integer $anonfun$JIntegerDecodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Integer;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #870                // Method argonaut/JsonNumber.truncateToInt:()I
         7: invokevirtual #1152               // Method scala/Predef$.int2Integer:(I)Ljava/lang/Integer;
        10: areturn
      LineNumberTable:
        line 321: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  s$11   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      s$11                           final

  public static scala.Option $anonfun$JIntegerDecodeJson$2(argonaut.DecodeJsons, argonaut.JsonNumber);
    descriptor: (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1161,  0           // InvokeDynamic #73:apply:(Largonaut/JsonNumber;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 321: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$JIntegerDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1166,  0           // InvokeDynamic #74:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 321: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$19   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$19                           final

  public static java.lang.Long $anonfun$JLongDecodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Long;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #911                // Method argonaut/JsonNumber.truncateToLong:()J
         7: invokevirtual #1173               // Method scala/Predef$.long2Long:(J)Ljava/lang/Long;
        10: areturn
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  s$12   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      s$12                           final

  public static scala.Option $anonfun$JLongDecodeJson$2(argonaut.DecodeJsons, argonaut.JsonNumber);
    descriptor: (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1180,  0           // InvokeDynamic #75:apply:(Largonaut/JsonNumber;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$JLongDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1185,  0           // InvokeDynamic #76:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$20   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$20                           final

  public static java.lang.Short $anonfun$JShortDecodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Short;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #948                // Method argonaut/JsonNumber.truncateToShort:()S
         7: invokevirtual #1192               // Method scala/Predef$.short2Short:(S)Ljava/lang/Short;
        10: areturn
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  s$13   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      s$13                           final

  public static scala.Option $anonfun$JShortDecodeJson$2(argonaut.DecodeJsons, argonaut.JsonNumber);
    descriptor: (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1199,  0           // InvokeDynamic #77:apply:(Largonaut/JsonNumber;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$JShortDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1204,  0           // InvokeDynamic #78:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 329: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$21   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$21                           final

  public static java.lang.Byte $anonfun$JByteDecodeJson$3(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Byte;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: invokevirtual #985                // Method argonaut/JsonNumber.truncateToByte:()B
         7: invokevirtual #1211               // Method scala/Predef$.byte2Byte:(B)Ljava/lang/Byte;
        10: areturn
      LineNumberTable:
        line 333: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  s$14   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      s$14                           final

  public static scala.Option $anonfun$JByteDecodeJson$2(argonaut.DecodeJsons, argonaut.JsonNumber);
    descriptor: (Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1218,  0           // InvokeDynamic #79:apply:(Largonaut/JsonNumber;)Lscala/Function0;
         7: invokeinterface #138,  2          // InterfaceMethod tryTo:(Lscala/Function0;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 333: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Largonaut/DecodeJsons;
            0      13     1     s   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s                              final

  public static scala.Option $anonfun$JByteDecodeJson$1(argonaut.DecodeJsons, argonaut.Json);
    descriptor: (Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #799                // Method argonaut/Json.number:()Lscala/Option;
         4: aload_0
         5: invokedynamic #1223,  0           // InvokeDynamic #80:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
        10: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        13: areturn
      LineNumberTable:
        line 333: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Largonaut/DecodeJsons;
            0      14     1  x$22   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$22                           final

  public static java.lang.Boolean $anonfun$JBooleanDecodeJson$2(boolean);
    descriptor: (Z)Ljava/lang/Boolean;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: iload_0
         4: invokevirtual #1228               // Method scala/Predef$.boolean2Boolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 337: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     q   Z
    MethodParameters:
      Name                           Flags
      q                              final

  public static scala.Option $anonfun$JBooleanDecodeJson$1(argonaut.Json);
    descriptor: (Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1113               // Method argonaut/Json.bool:()Lscala/Option;
         4: invokedynamic #1237,  0           // InvokeDynamic #81:apply:()Lscala/Function1;
         9: invokevirtual #900                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 337: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  x$23   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      x$23                           final

  public static scala.Option $anonfun$JCharacterDecodeJson$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1121               // Method java/lang/String.length:()I
         4: iconst_1
         5: if_icmpne     38
         8: new           #588                // class scala/Some
        11: dup
        12: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #766                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        18: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        21: aload_0
        22: invokevirtual #770                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        25: iconst_0
        26: invokevirtual #1125               // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        29: invokevirtual #1241               // Method scala/Predef$.char2Character:(C)Ljava/lang/Character;
        32: invokespecial #796                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        35: goto          41
        38: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
        41: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 38 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static scala.Option $anonfun$JCharacterDecodeJson$1(argonaut.Json);
    descriptor: (Largonaut/Json;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #662                // Method argonaut/Json.string:()Lscala/Option;
         4: invokedynamic #1246,  0           // InvokeDynamic #82:apply:()Lscala/Function1;
         9: invokevirtual #672                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  x$24   Largonaut/Json;
    MethodParameters:
      Name                           Flags
      x$24                           final

  public static argonaut.DecodeResult $anonfun$OptionDecodeJson$1(argonaut.DecodeJson, argonaut.ACursor);
    descriptor: (Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: invokevirtual #1252               // Method argonaut/ACursor.success:()Lscala/Option;
         4: astore_3
         5: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
         8: aload_3
         9: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: ifeq          28
        15: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        18: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
        21: invokevirtual #595                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        24: astore_2
        25: goto          104
        28: goto          31
        31: aload_3
        32: instanceof    #588                // class scala/Some
        35: ifeq          92
        38: aload_3
        39: checkcast     #588                // class scala/Some
        42: astore        4
        44: aload         4
        46: invokevirtual #591                // Method scala/Some.value:()Ljava/lang/Object;
        49: checkcast     #554                // class argonaut/HCursor
        52: astore        5
        54: aload         5
        56: invokevirtual #558                // Method argonaut/HCursor.focus:()Largonaut/Json;
        59: invokevirtual #717                // Method argonaut/Json.isNull:()Z
        62: ifeq          77
        65: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        68: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
        71: invokevirtual #595                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        74: goto          88
        77: aload_0
        78: aload         5
        80: invokeinterface #1254,  2         // InterfaceMethod argonaut/DecodeJson.apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
        85: invokevirtual #1258               // Method argonaut/DecodeResult.option:()Largonaut/DecodeResult;
        88: astore_2
        89: goto          104
        92: goto          95
        95: new           #597                // class scala/MatchError
        98: dup
        99: aload_3
       100: invokespecial #601                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       103: athrow
       104: aload_2
       105: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 28
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 45
          locals = [ class scala/Some, class argonaut/HCursor ]
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class argonaut/DecodeResult ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/DecodeJson, class argonaut/ACursor, class argonaut/DecodeResult, class scala/Option ]
          stack = []
      LineNumberTable:
        line 345: 0
        line 346: 5
        line 347: 31
        line 348: 54
        line 349: 65
        line 351: 77
        line 347: 92
        line 345: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      40     5 valid   Largonaut/HCursor;
            0     106     0   e$3   Largonaut/DecodeJson;
            0     106     1     a   Largonaut/ACursor;
    MethodParameters:
      Name                           Flags
      e$3                            final
      a                              final

  public static scala.util.Left $anonfun$EitherDecodeJson$2(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/util/Left;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #686                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #1267               // Method scala/package$.Left:()Lscala/util/Left$;
         6: aload_0
         7: invokevirtual #1271               // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        10: areturn
      LineNumberTable:
        line 362: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  x$25   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$25                           final

  public static scala.util.Right $anonfun$EitherDecodeJson$3(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/util/Right;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #686                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #1278               // Method scala/package$.Right:()Lscala/util/Right$;
         6: aload_0
         7: invokevirtual #1282               // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        10: areturn
      LineNumberTable:
        line 363: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  x$26   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$26                           final

  public static argonaut.DecodeResult $anonfun$EitherDecodeJson$1(argonaut.DecodeJson, argonaut.DecodeJson, argonaut.HCursor);
    descriptor: (Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=15, args_size=3
         0: aload_2
         1: ldc_w         #1285               // String Left
         4: invokevirtual #1289               // Method argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
         7: invokevirtual #1252               // Method argonaut/ACursor.success:()Lscala/Option;
        10: astore        4
        12: aload_2
        13: ldc_w         #1290               // String Right
        16: invokevirtual #1289               // Method argonaut/HCursor.$minus$minus$bslash:(Ljava/lang/String;)Largonaut/ACursor;
        19: invokevirtual #1252               // Method argonaut/ACursor.success:()Lscala/Option;
        22: astore        5
        24: new           #1292               // class scala/Tuple2
        27: dup
        28: aload         4
        30: aload         5
        32: invokespecial #1295               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        35: astore        6
        37: aload         6
        39: ifnull        124
        42: aload         6
        44: invokevirtual #1298               // Method scala/Tuple2._1:()Ljava/lang/Object;
        47: checkcast     #564                // class scala/Option
        50: astore        7
        52: aload         6
        54: invokevirtual #1301               // Method scala/Tuple2._2:()Ljava/lang/Object;
        57: checkcast     #564                // class scala/Option
        60: astore        8
        62: aload         7
        64: instanceof    #588                // class scala/Some
        67: ifeq          121
        70: aload         7
        72: checkcast     #588                // class scala/Some
        75: astore        9
        77: aload         9
        79: invokevirtual #591                // Method scala/Some.value:()Ljava/lang/Object;
        82: checkcast     #554                // class argonaut/HCursor
        85: astore        10
        87: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
        90: aload         8
        92: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        95: ifeq          118
        98: aload_0
        99: aload         10
       101: invokeinterface #1254,  2         // InterfaceMethod argonaut/DecodeJson.apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
       106: invokedynamic #1306,  0           // InvokeDynamic #83:apply:()Lscala/Function1;
       111: invokevirtual #1309               // Method argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
       114: astore_3
       115: goto          231
       118: goto          127
       121: goto          127
       124: goto          127
       127: aload         6
       129: ifnull        211
       132: aload         6
       134: invokevirtual #1298               // Method scala/Tuple2._1:()Ljava/lang/Object;
       137: checkcast     #564                // class scala/Option
       140: astore        11
       142: aload         6
       144: invokevirtual #1301               // Method scala/Tuple2._2:()Ljava/lang/Object;
       147: checkcast     #564                // class scala/Option
       150: astore        12
       152: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
       155: aload         11
       157: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       160: ifeq          208
       163: aload         12
       165: instanceof    #588                // class scala/Some
       168: ifeq          208
       171: aload         12
       173: checkcast     #588                // class scala/Some
       176: astore        13
       178: aload         13
       180: invokevirtual #591                // Method scala/Some.value:()Ljava/lang/Object;
       183: checkcast     #554                // class argonaut/HCursor
       186: astore        14
       188: aload_1
       189: aload         14
       191: invokeinterface #1254,  2         // InterfaceMethod argonaut/DecodeJson.apply:(Largonaut/HCursor;)Largonaut/DecodeResult;
       196: invokedynamic #1314,  0           // InvokeDynamic #84:apply:()Lscala/Function1;
       201: invokevirtual #1309               // Method argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
       204: astore_3
       205: goto          231
       208: goto          214
       211: goto          214
       214: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
       217: ldc_w         #1316               // String [A, B]Either[A, B]
       220: aload_2
       221: invokevirtual #582                // Method argonaut/HCursor.history:()Largonaut/CursorHistory;
       224: invokevirtual #586                // Method argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
       227: astore_3
       228: goto          231
       231: aload_3
       232: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 118
          locals = [ class argonaut/DecodeJson, class argonaut/DecodeJson, class argonaut/HCursor, top, class scala/Option, class scala/Option, class scala/Tuple2, class scala/Option, class scala/Option, class scala/Some, class argonaut/HCursor ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class argonaut/DecodeJson, class argonaut/DecodeJson, class argonaut/HCursor, top, class scala/Option, class scala/Option, class scala/Tuple2, top, top, top, top, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/DecodeJson, class argonaut/DecodeJson, class argonaut/HCursor, top, class scala/Option, class scala/Option, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class argonaut/DecodeJson, class argonaut/DecodeJson, class argonaut/HCursor, class argonaut/DecodeResult, class scala/Option, class scala/Option, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 359: 0
        line 360: 12
        line 361: 24
        line 362: 37
        line 363: 127
        line 364: 214
        line 361: 231
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           85      36    10     c   Largonaut/HCursor;
          186      22    14     c   Largonaut/HCursor;
           10     222     4     l   Lscala/Option;
           22     210     5     r   Lscala/Option;
            0     233     0  ea$1   Largonaut/DecodeJson;
            0     233     1  eb$1   Largonaut/DecodeJson;
            0     233     2     a   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      ea$1                           final
      eb$1                           final
      a                              final

  public static scala.collection.immutable.Map $anonfun$MapDecodeJson$3(scala.collection.immutable.Map, java.lang.String, java.lang.Object);
    descriptor: (Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: new           #1292               // class scala/Tuple2
         4: dup
         5: aload_1
         6: aload_2
         7: invokespecial #1295               // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        10: invokeinterface #1330,  2         // InterfaceMethod scala/collection/immutable/Map.$plus:(Lscala/Tuple2;)Lscala/collection/immutable/MapOps;
        15: checkcast     #1326               // class scala/collection/immutable/Map
        18: areturn
      LineNumberTable:
        line 381: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  mm$1   Lscala/collection/immutable/Map;
            0      19     1   h$1   Ljava/lang/String;
            0      19     2     v   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      mm$1                           final
      h$1                            final
      v                              final

  public static argonaut.DecodeResult $anonfun$MapDecodeJson$2(argonaut.HCursor, java.lang.String, argonaut.DecodeJson, scala.collection.immutable.Map);
    descriptor: (Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #1340               // Method argonaut/HCursor.get:(Ljava/lang/String;Largonaut/DecodeJson;)Largonaut/DecodeResult;
         6: aload_3
         7: aload_1
         8: invokedynamic #1348,  0           // InvokeDynamic #85:apply:(Lscala/collection/immutable/Map;Ljava/lang/String;)Lscala/Function1;
        13: invokevirtual #1309               // Method argonaut/DecodeResult.map:(Lscala/Function1;)Largonaut/DecodeResult;
        16: areturn
      LineNumberTable:
        line 380: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0   a$3   Largonaut/HCursor;
            0      17     1   h$1   Ljava/lang/String;
            0      17     2   e$4   Largonaut/DecodeJson;
            0      17     3    mm   Lscala/collection/immutable/Map;
    MethodParameters:
      Name                           Flags
      a$3                            final
      h$1                            final
      e$4                            final
      mm                             final

  private argonaut.DecodeResult spin$1(scala.collection.immutable.List, argonaut.DecodeResult, argonaut.HCursor, argonaut.DecodeJson);
    descriptor: (Lscala/collection/immutable/List;Largonaut/DecodeResult;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=11, args_size=5
         0: aload_1
         1: astore        7
         3: getstatic     #1356               // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         6: aload         7
         8: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        11: ifeq          20
        14: aload_2
        15: astore        6
        17: goto          89
        20: goto          23
        23: aload         7
        25: instanceof    #1358               // class scala/collection/immutable/$colon$colon
        28: ifeq          76
        31: aload         7
        33: checkcast     #1358               // class scala/collection/immutable/$colon$colon
        36: astore        8
        38: aload         8
        40: invokevirtual #1361               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
        43: checkcast     #606                // class java/lang/String
        46: astore        9
        48: aload         8
        50: invokevirtual #1365               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
        53: astore        10
        55: aload         10
        57: aload_2
        58: aload_3
        59: aload         9
        61: aload         4
        63: invokedynamic #1373,  0           // InvokeDynamic #86:apply:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;)Lscala/Function1;
        68: invokevirtual #1375               // Method argonaut/DecodeResult.flatMap:(Lscala/Function1;)Largonaut/DecodeResult;
        71: astore_2
        72: astore_1
        73: goto          0
        76: goto          79
        79: new           #597                // class scala/MatchError
        82: dup
        83: aload         7
        85: invokespecial #601                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        88: athrow
        89: aload         6
        91: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 254 /* append */
          offset_delta = 19
          locals = [ top, top, class scala/collection/immutable/List ]
        frame_type = 2 /* same */
        frame_type = 52 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/DecodeJsons, class scala/collection/immutable/List, class argonaut/DecodeResult, class argonaut/HCursor, class argonaut/DecodeJson, top, class argonaut/DecodeResult, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 375: 0
        line 376: 3
        line 377: 23
        line 378: 55
        line 379: 57
        line 377: 76
        line 375: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46      30     9     h   Ljava/lang/String;
           53      23    10     t   Lscala/collection/immutable/List;
            0      92     0  this   Largonaut/DecodeJsons;
            0      92     1     x   Lscala/collection/immutable/List;
            0      92     2     m   Largonaut/DecodeResult;
            0      92     3   a$3   Largonaut/HCursor;
            0      92     4   e$4   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      x                              final
      m                              final
      a$3                            final
      e$4                            final

  public static argonaut.DecodeResult $anonfun$MapDecodeJson$1(argonaut.DecodeJsons, argonaut.DecodeJson, argonaut.HCursor);
    descriptor: (Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=7, args_size=3
         0: aload_2
         1: invokevirtual #1384               // Method argonaut/HCursor.fields:()Lscala/Option;
         4: astore        4
         6: getstatic     #569                // Field scala/None$.MODULE$:Lscala/None$;
         9: aload         4
        11: invokevirtual #573                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        14: ifeq          34
        17: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        20: ldc_w         #1386               // String [V]Map[String, V]
        23: aload_2
        24: invokevirtual #582                // Method argonaut/HCursor.history:()Largonaut/CursorHistory;
        27: invokevirtual #586                // Method argonaut/DecodeResult$.fail:(Ljava/lang/String;Largonaut/CursorHistory;)Largonaut/DecodeResult;
        30: astore_3
        31: goto          102
        34: goto          37
        37: aload         4
        39: instanceof    #588                // class scala/Some
        42: ifeq          89
        45: aload         4
        47: checkcast     #588                // class scala/Some
        50: astore        5
        52: aload         5
        54: invokevirtual #591                // Method scala/Some.value:()Ljava/lang/Object;
        57: checkcast     #1381               // class scala/collection/immutable/List
        60: astore        6
        62: aload_0
        63: aload         6
        65: getstatic     #578                // Field argonaut/DecodeResult$.MODULE$:Largonaut/DecodeResult$;
        68: getstatic     #706                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        71: invokevirtual #1390               // Method scala/Predef$.Map:()Lscala/collection/immutable/Map$;
        74: invokevirtual #1396               // Method scala/collection/immutable/Map$.empty:()Lscala/collection/immutable/Map;
        77: invokevirtual #595                // Method argonaut/DecodeResult$.ok:(Ljava/lang/Object;)Largonaut/DecodeResult;
        80: aload_2
        81: aload_1
        82: invokespecial #1398               // InterfaceMethod spin$1:(Lscala/collection/immutable/List;Largonaut/DecodeResult;Largonaut/HCursor;Largonaut/DecodeJson;)Largonaut/DecodeResult;
        85: astore_3
        86: goto          102
        89: goto          92
        92: new           #597                // class scala/MatchError
        95: dup
        96: aload         4
        98: invokespecial #601                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       101: athrow
       102: aload_3
       103: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 51 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/DecodeJsons, class argonaut/DecodeJson, class argonaut/HCursor, class argonaut/DecodeResult, class scala/Option ]
          stack = []
      LineNumberTable:
        line 371: 0
        line 372: 6
        line 373: 37
        line 385: 62
        line 373: 89
        line 371: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           60      29     6     s   Lscala/collection/immutable/List;
            0     104     0 $this   Largonaut/DecodeJsons;
            0     104     1   e$4   Largonaut/DecodeJson;
            0     104     2     a   Largonaut/HCursor;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      e$4                            final
      a                              final

  public static void $init$(argonaut.DecodeJsons);
    descriptor: (Largonaut/DecodeJsons;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: aload_0
         3: invokedynamic #1404,  0           // InvokeDynamic #87:apply:(Largonaut/DecodeJsons;)Lscala/Function1;
         8: ldc_w         #1406               // String UUID
        11: invokeinterface #83,  3           // InterfaceMethod optionDecoder:(Lscala/Function1;Ljava/lang/String;)Largonaut/DecodeJson;
        16: invokeinterface #1408,  2         // InterfaceMethod argonaut$DecodeJsons$_setter_$UUIDDecodeJson_$eq:(Largonaut/DecodeJson;)V
        21: return
      LineNumberTable:
        line 221: 0
        line 222: 1
        line 223: 8
        line 197: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 $this   Largonaut/DecodeJsons;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Double $anonfun$JDoubleDecodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Double;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1412               // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
         4: invokestatic  #1414               // InterfaceMethod $anonfun$JDoubleDecodeJson$1:(D)Ljava/lang/Double;
         7: areturn
      LineNumberTable:
        line 313: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     d   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      d                              final

  public static java.lang.Float $anonfun$JFloatDecodeJson$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Float;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1418               // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
         4: invokestatic  #1420               // InterfaceMethod $anonfun$JFloatDecodeJson$1:(F)Ljava/lang/Float;
         7: areturn
      LineNumberTable:
        line 317: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     f   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      f                              final

  public static java.lang.Object $anonfun$IntDecodeJson$2$adapted(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1422               // InterfaceMethod $anonfun$IntDecodeJson$2:(Largonaut/JsonNumber;)I
         4: invokestatic  #1425               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 270: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$12   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static java.lang.Object $anonfun$LongDecodeJson$2$adapted(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1427               // InterfaceMethod $anonfun$LongDecodeJson$2:(Largonaut/JsonNumber;)J
         4: invokestatic  #1430               // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
         7: areturn
      LineNumberTable:
        line 276: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$13   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$13                           final

  public static java.lang.Object $anonfun$ShortDecodeJson$2$adapted(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1432               // InterfaceMethod $anonfun$ShortDecodeJson$2:(Largonaut/JsonNumber;)S
         4: invokestatic  #1435               // Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
         7: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$14   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$14                           final

  public static java.lang.Object $anonfun$ByteDecodeJson$2$adapted(argonaut.JsonNumber);
    descriptor: (Largonaut/JsonNumber;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1437               // InterfaceMethod $anonfun$ByteDecodeJson$2:(Largonaut/JsonNumber;)B
         4: invokestatic  #1440               // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
         7: areturn
      LineNumberTable:
        line 288: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$15   Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      x$15                           final

  public static java.lang.Boolean $anonfun$JBooleanDecodeJson$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Boolean;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1443               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #1445               // InterfaceMethod $anonfun$JBooleanDecodeJson$2:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 337: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     q   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      q                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #1456,  0           // InvokeDynamic #88:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
SourceFile: "DecodeJson.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\tuga\u0002\u0013&!\u0003\r\t\u0001\u000b\u0005\u0006g\u0001!\t\u0001\u000e\u0005\u0006q\u0001!\t!\u000f\u0005\u0006C\u0002!\tA\u0019\u0005\u0006[\u0002!\tA\u001c\u0005\u0006o\u0002!\u0019\u0001\u001f\u0005\u0006u\u0002!\u0019a\u001f\u0005\u0007{\u0002!\t!\n@\t\u0013\u0005u\u0002A1A\u0005\u0004\u0005}\u0002bBA*\u0001\u0011\r\u0011Q\u000b\u0005\b\u0003_\u0002A1AA9\u0011\u001d\t)\t\u0001C\u0002\u0003\u000fCq!a\'\u0001\t\u0007\ti\nC\u0004\u00022\u0002!\u0019!a-\t\u000f\u0005]\u0006\u0001b\u0001\u0002:\"9\u0011Q\u0018\u0001\u0005\u0004\u0005}\u0006bBAe\u0001\u0011\r\u00111\u001a\u0005\b\u0003+\u0004A1AAl\u0011\u001d\t\t\u000f\u0001C\u0002\u0003GDq!!<\u0001\t\u0007\ty\u000fC\u0004\u0002z\u0002!\u0019!a?\t\u000f\t\u0015\u0001\u0001b\u0001\u0003\b!9!\u0011\u0003\u0001\u0005\u0004\tM\u0001b\u0002B\u000f\u0001\u0011\r!q\u0004\u0005\b\u0005S\u0001A1\u0001B\u0016\u0011\u001d\u0011)\u0004\u0001C\u0002\u0005oAqA!\u0012\u0001\t\u0007\u00119\u0005C\u0004\u0003P\u0001!\u0019A!\u0015\t\u000f\tm\u0003\u0001b\u0001\u0003^!9!Q\r\u0001\u0005\u0004\t\u001d\u0004b\u0002B8\u0001\u0011\r!\u0011\u000f\u0005\b\u0005s\u0002A1\u0001B>\u0011\u001d\u0011\u0019\t\u0001C\u0002\u0005\u000bCqAa$\u0001\t\u0007\u0011\t\nC\u0004\u0003\"\u0002!\u0019Aa)\t\u000f\t\u0015\u0007\u0001b\u0001\u0003H\nYA)Z2pI\u0016T5o\u001c8t\u0015\u00051\u0013\u0001C1sO>t\u0017-\u001e;\u0004\u0001M\u0019\u0001!K\u0018\u0011\u0005)jS\"A\u0016\u000b\u00031\nQa]2bY\u0006L!AL\u0016\u0003\r\u0005s\u0017PU3g!\t\u0001\u0014\'D\u0001&\u0013\t\u0011TE\u0001\u000bHK:,\'/\u0019;fI\u0012+7m\u001c3f\u0015N|gn]\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003U\u0002\"A\u000b\u001c\n\u0005]Z#\u0001B+oSR\fQb\u001c9uS>tG)Z2pI\u0016\u0014XC\u0001\u001eA)\rY\u0014\n\u0016\t\u0004aqr\u0014BA\u001f&\u0005)!UmY8eK*\u001bxN\u001c\t\u0003\u007f\u0001c\u0001\u0001B\u0003B\u0005\t\u0007!IA\u0001B#\t\u0019e\t\u0005\u0002+\t&\u0011Qi\u000b\u0002\b\u001d>$\b.\u001b8h!\tQs)\u0003\u0002IW\t\u0019\u0011I\\=\t\u000b)\u0013\u0001\u0019A&\u0002\u0003-\u0004BA\u000b\'O#&\u0011Qj\u000b\u0002\n\rVt7\r^5p]F\u0002\"\u0001M(\n\u0005A+#\u0001\u0002&t_:\u00042A\u000b*?\u0013\t\u00196F\u0001\u0004PaRLwN\u001c\u0005\u0006+\n\u0001\rAV\u0001\u0002KB\u0011qK\u0018\b\u00031r\u0003\"!W\u0016\u000e\u0003iS!aW\u0014\u0002\rq\u0012xn\u001c;?\u0013\ti6&\u0001\u0004Qe\u0016$WMZ\u0005\u0003?\u0002\u0014aa\u0015;sS:<\'BA/,\u0003%!WmY8eK\u0006\u0013(/\u0006\u0002dMR\u0011Am\u001a\t\u0004aq*\u0007CA g\t\u0015\t5A1\u0001C\u0011\u0015A7\u00011\u0001j\u0003\u00051\u0007\u0003\u0002\u0016MU\u0016\u0004\"\u0001M6\n\u00051,#a\u0002%DkJ\u001cxN]\u0001\u0006iJLHk\\\u000b\u0003_J$\"\u0001]:\u0011\u0007)\u0012\u0016\u000f\u0005\u0002@e\u0012)\u0011\t\u0002b\u0001\u0005\"1\u0001\u000e\u0002CA\u0002Q\u00042AK;r\u0013\t18F\u0001\u0005=Eft\u0017-\\3?\u0003EA5)\u001e:t_J$UmY8eK*\u001bxN\\\u000b\u0002sB\u0019\u0001\u0007\u00106\u0002\u001d)\u001bxN\u001c#fG>$WMS:p]V\tA\u0010E\u00021y9\u000bacQ1o\u0005VLG\u000e\u001a$s_6$UmY8eK*\u001bxN\\\u000b\u0006\u007f\u0006E\u0011Q\u0001\u000b\u0007\u0003\u0003\t\u0019\"a\u0006\u0011\tAb\u00141\u0001\t\u0006\u007f\u0005\u0015\u0011q\u0002\u0003\b\u0003\u000f9!\u0019AA\u0005\u0005\u0005\u0019Uc\u0001\"\u0002\f\u00119\u0011QBA\u0003\u0005\u0004\u0011%!A0\u0011\u0007}\n\t\u0002B\u0003B\u000f\t\u0007!\t\u0003\u0004V\u000f\u0001\u000f\u0011Q\u0003\t\u0005aq\ny\u0001C\u0004\u0002\u001a\u001d\u0001\u001d!a\u0007\u0002\u0003\r\u0004\u0012\"!\b\u00028\r\u000by!a\u0001\u000f\t\u0005}\u0011\u0011\u0007\b\u0005\u0003C\tYC\u0004\u0003\u0002$\u0005\u001dbbA-\u0002&%\tA&C\u0002\u0002*-\n!bY8mY\u0016\u001cG/[8o\u0013\u0011\ti#a\f\u0002\u000f\u001d,g.\u001a:jG*\u0019\u0011\u0011F\u0016\n\t\u0005M\u0012QG\u0001\ba\u0006\u001c7.Y4f\u0015\u0011\ti#a\f\n\t\u0005e\u00121\b\u0002\r\u0007\u0006t\')^5mI\u001a\u0013x.\u001c\u0006\u0005\u0003g\t)$\u0001\bV+&#E)Z2pI\u0016T5o\u001c8\u0016\u0005\u0005\u0005\u0003\u0003\u0002\u0019=\u0003\u0007\u0002B!!\u0012\u0002P5\u0011\u0011q\t\u0006\u0005\u0003\u0013\nY%\u0001\u0003vi&d\'BAA\'\u0003\u0011Q\u0017M^1\n\t\u0005E\u0013q\t\u0002\u0005+VKE)\u0001\bMSN$H)Z2pI\u0016T5o\u001c8\u0016\t\u0005]\u0013\u0011\u000e\u000b\u0005\u00033\nY\u0007\u0005\u00031y\u0005m\u0003CBA/\u0003C\n9G\u0004\u0003\u0002$\u0005}\u0013bAA\u001aW%!\u00111MA3\u0005\u0011a\u0015n\u001d;\u000b\u0007\u0005M2\u0006E\u0002@\u0003S\"Q!Q\u0005C\u0002\tCa!V\u0005A\u0004\u00055\u0004\u0003\u0002\u0019=\u0003O\n\u0001CV3di>\u0014H)Z2pI\u0016T5o\u001c8\u0016\t\u0005M\u0014q\u0010\u000b\u0005\u0003k\n\t\t\u0005\u00031y\u0005]\u0004CBA/\u0003s\ni(\u0003\u0003\u0002|\u0005\u0015$A\u0002,fGR|\'\u000fE\u0002@\u0003\u007f\"Q!\u0011\u0006C\u0002\tCa!\u0016\u0006A\u0004\u0005\r\u0005\u0003\u0002\u0019=\u0003{\n\u0001c\u0015;sK\u0006lG)Z2pI\u0016T5o\u001c8\u0016\t\u0005%\u0015Q\u0013\u000b\u0005\u0003\u0017\u000b9\n\u0005\u00031y\u00055\u0005CBA/\u0003\u001f\u000b\u0019*\u0003\u0003\u0002\u0012\u0006\u0015$AB*ue\u0016\fW\u000eE\u0002@\u0003+#Q!Q\u0006C\u0002\tCa!V\u0006A\u0004\u0005e\u0005\u0003\u0002\u0019=\u0003\'\u000bQbU3u\t\u0016\u001cw\u000eZ3Kg>tW\u0003BAP\u0003W#B!!)\u0002.B!\u0001\u0007PAR!\u00159\u0016QUAU\u0013\r\t9\u000b\u0019\u0002\u0004\'\u0016$\bcA \u0002,\u0012)\u0011\t\u0004b\u0001\u0005\"1Q\u000b\u0004a\u0002\u0003_\u0003B\u0001\r\u001f\u0002*\u0006qQK\\5u\t\u0016\u001cw\u000eZ3Kg>tWCAA[!\r\u0001D(N\u0001\u0011\'R\u0014\u0018N\\4EK\u000e|G-\u001a&t_:,\"!a/\u0011\u0007Abd+\u0001\tE_V\u0014G.\u001a#fG>$WMS:p]V\u0011\u0011\u0011\u0019\t\u0005aq\n\u0019\rE\u0002+\u0003\u000bL1!a2,\u0005\u0019!u.\u001e2mK\u0006ya\t\\8bi\u0012+7m\u001c3f\u0015N|g.\u0006\u0002\u0002NB!\u0001\u0007PAh!\rQ\u0013\u0011[\u0005\u0004\u0003\'\\#!\u0002$m_\u0006$\u0018!D%oi\u0012+7m\u001c3f\u0015N|g.\u0006\u0002\u0002ZB!\u0001\u0007PAn!\rQ\u0013Q\\\u0005\u0004\u0003?\\#aA%oi\u0006qAj\u001c8h\t\u0016\u001cw\u000eZ3Kg>tWCAAs!\u0011\u0001D(a:\u0011\u0007)\nI/C\u0002\u0002l.\u0012A\u0001T8oO\u0006y1\u000b[8si\u0012+7m\u001c3f\u0015N|g.\u0006\u0002\u0002rB!\u0001\u0007PAz!\rQ\u0013Q_\u0005\u0004\u0003o\\#!B*i_J$\u0018A\u0004\"zi\u0016$UmY8eK*\u001bxN\\\u000b\u0003\u0003{\u0004B\u0001\r\u001f\u0002\u0000B\u0019!F!\u0001\n\u0007\t\r1F\u0001\u0003CsR,\u0017\u0001\u0005\"jO&sG\u000fR3d_\u0012,\'j]8o+\t\u0011I\u0001\u0005\u00031y\t-\u0001\u0003BA/\u0005\u001bIAAa\u0004\u0002f\t1!)[4J]R\fACQ5h\t\u0016\u001c\u0017.\\1m\t\u0016\u001cw\u000eZ3Kg>tWC\u0001B\u000b!\u0011\u0001DHa\u0006\u0011\t\u0005u#\u0011D\u0005\u0005\u00057\t)G\u0001\u0006CS\u001e$UmY5nC2\f\u0011CQ8pY\u0016\fg\u000eR3d_\u0012,\'j]8o+\t\u0011\t\u0003\u0005\u00031y\t\r\u0002c\u0001\u0016\u0003&%\u0019!qE\u0016\u0003\u000f\t{w\u000e\\3b]\u0006q1\t[1s\t\u0016\u001cw\u000eZ3Kg>tWC\u0001B\u0017!\u0011\u0001DHa\f\u0011\u0007)\u0012\t$C\u0002\u00034-\u0012Aa\u00115be\u0006\t\"\nR8vE2,G)Z2pI\u0016T5o\u001c8\u0016\u0005\te\u0002\u0003\u0002\u0019=\u0005w\u0001BA!\u0010\u0003D5\u0011!q\b\u0006\u0005\u0005\u0003\nY%\u0001\u0003mC:<\u0017\u0002BAd\u0005\u007f\t\u0001C\u0013$m_\u0006$H)Z2pI\u0016T5o\u001c8\u0016\u0005\t%\u0003\u0003\u0002\u0019=\u0005\u0017\u0002BA!\u0010\u0003N%!\u00111\u001bB \u0003IQ\u0015J\u001c;fO\u0016\u0014H)Z2pI\u0016T5o\u001c8\u0016\u0005\tM\u0003\u0003\u0002\u0019=\u0005+\u0002BA!\u0010\u0003X%!!\u0011\fB \u0005\u001dIe\u000e^3hKJ\fqB\u0013\'p]\u001e$UmY8eK*\u001bxN\\\u000b\u0003\u0005?\u0002B\u0001\r\u001f\u0003bA!!Q\bB2\u0013\u0011\tYOa\u0010\u0002!)\u001b\u0006n\u001c:u\t\u0016\u001cw\u000eZ3Kg>tWC\u0001B5!\u0011\u0001DHa\u001b\u0011\t\tu\"QN\u0005\u0005\u0003o\u0014y$A\bK\u0005f$X\rR3d_\u0012,\'j]8o+\t\u0011\u0019\b\u0005\u00031y\tU\u0004\u0003\u0002B\u001f\u0005oJAAa\u0001\u0003@\u0005\u0011\"JQ8pY\u0016\fg\u000eR3d_\u0012,\'j]8o+\t\u0011i\b\u0005\u00031y\t}\u0004\u0003\u0002B\u001f\u0005\u0003KAAa\n\u0003@\u0005!\"j\u00115be\u0006\u001cG/\u001a:EK\u000e|G-\u001a&t_:,\"Aa\"\u0011\tAb$\u0011\u0012\t\u0005\u0005{\u0011Y)\u0003\u0003\u0003\u000e\n}\"!C\"iCJ\f7\r^3s\u0003Ay\u0005\u000f^5p]\u0012+7m\u001c3f\u0015N|g.\u0006\u0003\u0003\u0014\nmE\u0003\u0002BK\u0005;\u0003B\u0001\r\u001f\u0003\u0018B!!F\u0015BM!\ry$1\u0014\u0003\u0006\u0003\u0006\u0012\rA\u0011\u0005\u0007+\u0006\u0002\u001dAa(\u0011\tAb$\u0011T\u0001\u0011\u000b&$\b.\u001a:EK\u000e|G-\u001a&t_:,bA!*\u00032\nUFC\u0002BT\u0005s\u0013y\f\u0005\u00031y\t%\u0006\u0003CA/\u0005W\u0013yKa-\n\t\t5\u0016Q\r\u0002\u0007\u000b&$\b.\u001a:\u0011\u0007}\u0012\t\fB\u0003BE\t\u0007!\tE\u0002@\u0005k#aAa.#\u0005\u0004\u0011%!\u0001\"\t\u000f\tm&\u0005q\u0001\u0003>\u0006\u0011Q-\u0019\t\u0005aq\u0012y\u000bC\u0004\u0003B\n\u0002\u001dAa1\u0002\u0005\u0015\u0014\u0007\u0003\u0002\u0019=\u0005g\u000bQ\"T1q\t\u0016\u001cw\u000eZ3Kg>tW\u0003\u0002Be\u0005+$BAa3\u0003ZB!\u0001\u0007\u0010Bg!\u00199&q\u001a,\u0003T&\u0019!\u0011\u001b1\u0003\u00075\u000b\u0007\u000fE\u0002@\u0005+$aAa6$\u0005\u0004\u0011%!\u0001,\t\rU\u001b\u00039\u0001Bn!\u0011\u0001DHa5"
    )
BootstrapMethods:
  0: #32 REF_invokeStatic scala/runtime/StructuralCallSite.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
  1: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #99 REF_invokeStatic argonaut/DecodeJsons.$anonfun$optionDecoder$1:(Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
  2: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #129 REF_invokeStatic argonaut/DecodeJsons.$anonfun$decodeArr$1:(Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
  3: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #172 REF_invokeStatic argonaut/DecodeJsons.$anonfun$HCursorDecodeJson$1:(Largonaut/HCursor;)Largonaut/HCursor;
      #173 (Largonaut/HCursor;)Largonaut/HCursor;
      #102 5
      #103 1
      #173 (Largonaut/HCursor;)Largonaut/HCursor;
  4: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #186 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JsonDecodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
      #187 (Largonaut/HCursor;)Largonaut/Json;
      #102 5
      #103 1
      #187 (Largonaut/HCursor;)Largonaut/Json;
  5: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #203 REF_invokeStatic argonaut/DecodeJsons.$anonfun$CanBuildFromDecodeJson$1:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
      #205 ()Lscala/collection/mutable/Builder;
      #102 5
      #103 1
      #205 ()Lscala/collection/mutable/Builder;
  6: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #225 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ListDecodeJson$1:()Lscala/collection/mutable/Builder;
      #205 ()Lscala/collection/mutable/Builder;
      #102 5
      #103 1
      #205 ()Lscala/collection/mutable/Builder;
  7: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #238 REF_invokeStatic argonaut/DecodeJsons.$anonfun$VectorDecodeJson$1:()Lscala/collection/mutable/ReusableBuilder;
      #239 ()Lscala/collection/mutable/ReusableBuilder;
      #102 5
      #103 1
      #239 ()Lscala/collection/mutable/ReusableBuilder;
  8: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #249 REF_invokeStatic argonaut/DecodeJsons.$anonfun$StreamDecodeJson$1:()Lscala/collection/mutable/Builder;
      #205 ()Lscala/collection/mutable/Builder;
      #102 5
      #103 1
      #205 ()Lscala/collection/mutable/Builder;
  9: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #259 REF_invokeStatic argonaut/DecodeJsons.$anonfun$SetDecodeJson$1:()Lscala/collection/mutable/Builder;
      #205 ()Lscala/collection/mutable/Builder;
      #102 5
      #103 1
      #205 ()Lscala/collection/mutable/Builder;
  10: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #269 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UnitDecodeJson$1:(Largonaut/HCursor;)Largonaut/DecodeResult;
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
  11: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #280 REF_invokeStatic argonaut/DecodeJsons.$anonfun$StringDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  12: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #294 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  13: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #307 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  14: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #318 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  15: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #329 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  16: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #340 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  17: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #351 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  18: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #363 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  19: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #375 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  20: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #386 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  21: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #397 REF_invokeStatic argonaut/DecodeJsons.$anonfun$CharDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  22: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #410 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JDoubleDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Double;
      #411 (Ljava/lang/Object;)Ljava/lang/Double;
      #102 5
      #103 1
      #411 (Ljava/lang/Object;)Ljava/lang/Double;
  23: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #427 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JFloatDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Float;
      #428 (Ljava/lang/Object;)Ljava/lang/Float;
      #102 5
      #103 1
      #428 (Ljava/lang/Object;)Ljava/lang/Float;
  24: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #438 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  25: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #450 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  26: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #462 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  27: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #474 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  28: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #486 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  29: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #498 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  30: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #511 REF_invokeStatic argonaut/DecodeJsons.$anonfun$OptionDecodeJson$1:(Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
      #513 (Largonaut/ACursor;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #513 (Largonaut/ACursor;)Largonaut/DecodeResult;
  31: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #533 REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$1:(Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
  32: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #546 REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #101 (Largonaut/HCursor;)Largonaut/DecodeResult;
  33: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #649 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$3:(Ljava/lang/String;)Ljava/util/UUID;
      #651 ()Ljava/util/UUID;
      #102 5
      #103 1
      #651 ()Ljava/util/UUID;
  34: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #665 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$2:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  35: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #751 ()D
      #754 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$3:(Largonaut/JsonNumber;)D
      #751 ()D
      #103 1
  36: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #751 ()D
      #777 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$6:(Ljava/lang/String;)D
      #751 ()D
      #103 1
  37: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #785 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  38: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #802 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  39: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #808 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  40: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #824 ()F
      #827 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$3:(Largonaut/JsonNumber;)F
      #824 ()F
      #103 1
  41: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #824 ()F
      #841 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$6:(Ljava/lang/String;)F
      #824 ()F
      #103 1
  42: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #849 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  43: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #858 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  44: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #862 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  45: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #878 ()I
      #881 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$5:(Ljava/lang/String;)I
      #878 ()I
      #103 1
  46: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #890 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  47: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #896 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
      #102 5
      #103 1
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
  48: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #903 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  49: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #919 ()J
      #922 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$5:(Ljava/lang/String;)J
      #919 ()J
      #103 1
  50: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #931 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  51: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #936 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
      #102 5
      #103 1
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
  52: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #940 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  53: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #956 ()S
      #959 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$5:(Ljava/lang/String;)S
      #956 ()S
      #103 1
  54: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #968 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  55: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #973 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
      #102 5
      #103 1
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
  56: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #977 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  57: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #993 ()B
      #996 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$5:(Ljava/lang/String;)B
      #993 ()B
      #103 1
  58: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1005 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  59: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1010 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
      #102 5
      #103 1
      #897 (Largonaut/JsonNumber;)Ljava/lang/Object;
  60: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1014 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  61: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1034 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigInt;
      #1036 ()Lscala/math/BigInt;
      #102 5
      #103 1
      #1036 ()Lscala/math/BigInt;
  62: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1042 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  63: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1046 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$2:(Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  64: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1050 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  65: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1072 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigDecimal;
      #1073 ()Lscala/math/BigDecimal;
      #102 5
      #103 1
      #1073 ()Lscala/math/BigDecimal;
  66: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1079 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  67: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1083 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$2:(Largonaut/JsonNumber;)Lscala/math/BigDecimal;
      #1084 (Largonaut/JsonNumber;)Lscala/math/BigDecimal;
      #102 5
      #103 1
      #1084 (Largonaut/JsonNumber;)Lscala/math/BigDecimal;
  68: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1088 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  69: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1097 ()Z
      #1100 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$4:(Ljava/lang/String;)Z
      #1097 ()Z
      #103 1
  70: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1109 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$3:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  71: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1116 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #809 ()Lscala/Option;
      #102 5
      #103 1
      #809 ()Lscala/Option;
  72: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1133 REF_invokeStatic argonaut/DecodeJsons.$anonfun$CharDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  73: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1156 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Integer;
      #1158 ()Ljava/lang/Integer;
      #102 5
      #103 1
      #1158 ()Ljava/lang/Integer;
  74: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1165 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  75: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1177 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Long;
      #1179 ()Ljava/lang/Long;
      #102 5
      #103 1
      #1179 ()Ljava/lang/Long;
  76: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1184 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  77: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1196 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Short;
      #1198 ()Ljava/lang/Short;
      #102 5
      #103 1
      #1198 ()Ljava/lang/Short;
  78: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1203 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  79: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 ()Ljava/lang/Object;
      #1215 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Byte;
      #1217 ()Ljava/lang/Byte;
      #102 5
      #103 1
      #1217 ()Ljava/lang/Byte;
  80: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1222 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #804 (Largonaut/JsonNumber;)Lscala/Option;
      #102 5
      #103 1
      #804 (Largonaut/JsonNumber;)Lscala/Option;
  81: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1235 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$2$adapted:(Ljava/lang/Object;)Ljava/lang/Boolean;
      #1236 (Ljava/lang/Object;)Ljava/lang/Boolean;
      #102 5
      #103 1
      #1236 (Ljava/lang/Object;)Ljava/lang/Boolean;
  82: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1245 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
      #667 (Ljava/lang/String;)Lscala/Option;
      #102 5
      #103 1
      #667 (Ljava/lang/String;)Lscala/Option;
  83: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1304 REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$2:(Ljava/lang/Object;)Lscala/util/Left;
      #1305 (Ljava/lang/Object;)Lscala/util/Left;
      #102 5
      #103 1
      #1305 (Ljava/lang/Object;)Lscala/util/Left;
  84: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1312 REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$3:(Ljava/lang/Object;)Lscala/util/Right;
      #1313 (Ljava/lang/Object;)Lscala/util/Right;
      #102 5
      #103 1
      #1313 (Ljava/lang/Object;)Lscala/util/Right;
  85: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1343 REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$3:(Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
      #1345 (Ljava/lang/Object;)Lscala/collection/immutable/Map;
      #102 5
      #103 1
      #1345 (Ljava/lang/Object;)Lscala/collection/immutable/Map;
  86: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1368 REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$2:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
      #1370 (Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
      #102 5
      #103 1
      #1370 (Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
  87: #110 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #94 (Ljava/lang/Object;)Ljava/lang/Object;
      #1403 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #281 (Largonaut/Json;)Lscala/Option;
      #102 5
      #103 1
      #281 (Largonaut/Json;)Lscala/Option;
  88: #1453 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #375 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1083 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$2:(Largonaut/JsonNumber;)Lscala/math/BigDecimal;
      #1088 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1079 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #1072 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigDecimalDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigDecimal;
      #363 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1046 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$2:(Largonaut/JsonNumber;)Lscala/Option;
      #1050 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1042 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #1034 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BigIntDecodeJson$5:(Ljava/lang/String;)Lscala/math/BigInt;
      #386 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1116 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1109 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$3:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #1100 REF_invokeStatic argonaut/DecodeJsons.$anonfun$BooleanDecodeJson$4:(Ljava/lang/String;)Z
      #351 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1010 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #1014 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1005 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #996 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ByteDecodeJson$5:(Ljava/lang/String;)B
      #203 REF_invokeStatic argonaut/DecodeJsons.$anonfun$CanBuildFromDecodeJson$1:(Largonaut/DecodeJsons;Lscala/collection/BuildFrom;)Lscala/collection/mutable/Builder;
      #397 REF_invokeStatic argonaut/DecodeJsons.$anonfun$CharDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #1133 REF_invokeStatic argonaut/DecodeJsons.$anonfun$CharDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
      #294 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #802 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #754 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$3:(Largonaut/JsonNumber;)D
      #808 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #785 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #777 REF_invokeStatic argonaut/DecodeJsons.$anonfun$DoubleDecodeJson$6:(Ljava/lang/String;)D
      #533 REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$1:(Largonaut/DecodeJson;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
      #1304 REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$2:(Ljava/lang/Object;)Lscala/util/Left;
      #1312 REF_invokeStatic argonaut/DecodeJsons.$anonfun$EitherDecodeJson$3:(Ljava/lang/Object;)Lscala/util/Right;
      #307 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #858 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #827 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$3:(Largonaut/JsonNumber;)F
      #862 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$4:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #849 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$5:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #841 REF_invokeStatic argonaut/DecodeJsons.$anonfun$FloatDecodeJson$6:(Ljava/lang/String;)F
      #172 REF_invokeStatic argonaut/DecodeJsons.$anonfun$HCursorDecodeJson$1:(Largonaut/HCursor;)Largonaut/HCursor;
      #318 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #896 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #903 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #890 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #881 REF_invokeStatic argonaut/DecodeJsons.$anonfun$IntDecodeJson$5:(Ljava/lang/String;)I
      #486 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #1235 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JBooleanDecodeJson$2$adapted:(Ljava/lang/Object;)Ljava/lang/Boolean;
      #474 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1222 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #1215 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JByteDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Byte;
      #498 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #1245 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JCharacterDecodeJson$2:(Ljava/lang/String;)Lscala/Option;
      #410 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JDoubleDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Double;
      #427 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JFloatDecodeJson$1$adapted:(Ljava/lang/Object;)Ljava/lang/Float;
      #438 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1165 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #1156 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JIntegerDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Integer;
      #450 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1184 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #1177 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JLongDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Long;
      #462 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #1203 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$2:(Largonaut/DecodeJsons;Largonaut/JsonNumber;)Lscala/Option;
      #1196 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JShortDecodeJson$3:(Largonaut/JsonNumber;)Ljava/lang/Short;
      #186 REF_invokeStatic argonaut/DecodeJsons.$anonfun$JsonDecodeJson$1:(Largonaut/HCursor;)Largonaut/Json;
      #225 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ListDecodeJson$1:()Lscala/collection/mutable/Builder;
      #329 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #936 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #940 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #931 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #922 REF_invokeStatic argonaut/DecodeJsons.$anonfun$LongDecodeJson$5:(Ljava/lang/String;)J
      #546 REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/DecodeJson;Largonaut/HCursor;)Largonaut/DecodeResult;
      #1368 REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$2:(Largonaut/HCursor;Ljava/lang/String;Largonaut/DecodeJson;Lscala/collection/immutable/Map;)Largonaut/DecodeResult;
      #1343 REF_invokeStatic argonaut/DecodeJsons.$anonfun$MapDecodeJson$3:(Lscala/collection/immutable/Map;Ljava/lang/String;Ljava/lang/Object;)Lscala/collection/immutable/Map;
      #511 REF_invokeStatic argonaut/DecodeJsons.$anonfun$OptionDecodeJson$1:(Largonaut/DecodeJson;Largonaut/ACursor;)Largonaut/DecodeResult;
      #259 REF_invokeStatic argonaut/DecodeJsons.$anonfun$SetDecodeJson$1:()Lscala/collection/mutable/Builder;
      #340 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #973 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$2$adapted:(Largonaut/JsonNumber;)Ljava/lang/Object;
      #977 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$3:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #968 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$4:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #959 REF_invokeStatic argonaut/DecodeJsons.$anonfun$ShortDecodeJson$5:(Ljava/lang/String;)S
      #249 REF_invokeStatic argonaut/DecodeJsons.$anonfun$StreamDecodeJson$1:()Lscala/collection/mutable/Builder;
      #280 REF_invokeStatic argonaut/DecodeJsons.$anonfun$StringDecodeJson$1:(Largonaut/Json;)Lscala/Option;
      #1403 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$1:(Largonaut/DecodeJsons;Largonaut/Json;)Lscala/Option;
      #665 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$2:(Largonaut/DecodeJsons;Ljava/lang/String;)Lscala/Option;
      #649 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UUIDDecodeJson$3:(Ljava/lang/String;)Ljava/util/UUID;
      #269 REF_invokeStatic argonaut/DecodeJsons.$anonfun$UnitDecodeJson$1:(Largonaut/HCursor;)Largonaut/DecodeResult;
      #238 REF_invokeStatic argonaut/DecodeJsons.$anonfun$VectorDecodeJson$1:()Lscala/collection/mutable/ReusableBuilder;
      #129 REF_invokeStatic argonaut/DecodeJsons.$anonfun$decodeArr$1:(Lscala/Function1;Largonaut/HCursor;)Largonaut/DecodeResult;
      #99 REF_invokeStatic argonaut/DecodeJsons.$anonfun$optionDecoder$1:(Lscala/Function1;Ljava/lang/String;Largonaut/HCursor;)Largonaut/DecodeResult;
  ScalaInlineInfo: length = 0x33D (unknown attribute)
   01 00 00 A5 01 74 01 23 01 04 1C 04 1D 01 04 33
   01 23 01 04 2D 02 85 01 04 23 04 24 01 01 68 01
   23 01 03 F8 03 23 01 04 0E 01 23 01 04 07 02 85
   01 03 FD 03 FE 01 01 7F 01 23 01 04 51 01 23 01
   04 48 02 85 01 04 42 04 43 01 01 5C 01 23 01 03
   D3 03 D4 01 03 EF 03 7D 01 03 E9 01 23 01 03 E0
   02 85 01 03 DA 03 DB 01 00 C7 00 C8 01 01 8A 01
   15 01 04 5E 02 9A 01 01 22 01 23 01 02 EC 02 ED
   01 02 E2 02 E3 01 03 0D 01 23 01 03 06 02 85 01
   02 F7 02 F8 01 02 11 02 12 01 04 ED 04 EE 01 04
   F8 04 F9 01 01 30 01 23 01 03 37 02 ED 01 03 30
   03 31 01 03 4D 01 23 01 03 46 02 85 01 03 40 03
   41 01 00 A8 00 A9 01 01 3B 01 23 01 03 60 03 61
   01 03 7C 03 7D 01 03 76 01 23 01 03 6D 02 85 01
   03 67 03 68 01 01 E3 01 15 01 04 C8 04 C9 01 04
   CF 04 D0 01 01 D7 01 23 01 04 BC 02 ED 01 04 B5
   04 B6 01 01 EF 01 15 01 04 D6 02 9A 01 04 6F 03
   19 01 01 96 01 97 01 04 75 03 55 01 01 A7 01 A8
   01 01 B3 01 23 01 04 81 02 ED 01 04 7A 04 7B 01
   01 BF 01 23 01 04 96 02 ED 01 04 8F 04 90 01 01
   CB 01 23 01 04 A9 02 ED 01 04 A2 04 A3 01 00 B6
   00 B7 01 00 DE 00 CC 01 01 46 01 23 01 03 89 03
   8A 01 03 A5 03 7D 01 03 9F 01 23 01 03 96 02 85
   01 03 90 03 91 01 02 1E 02 1F 01 05 34 05 35 01
   05 28 05 29 01 01 FB 01 FC 01 01 00 00 CC 01 01
   51 01 23 01 03 AE 03 AF 01 03 CA 03 7D 01 03 C4
   01 23 01 03 BB 02 85 01 03 B5 03 B6 01 00 F6 00
   CC 01 01 14 01 15 01 02 8F 01 23 01 02 84 02 85
   01 02 7C 02 7D 01 01 0A 00 64 01 00 EA 00 EB 01
   00 7D 00 7E 01 00 5F 00 60 01 05 77 05 78 01 01
   70 00 A4 00 01 6F 00 A2 01 01 64 00 A4 00 01 63
   00 A2 01 01 7C 00 A4 00 01 7B 00 A2 01 01 59 00
   A4 00 01 58 00 A2 01 00 C0 00 C1 00 00 BD 00 BE
   01 01 87 00 A4 00 01 86 00 A2 01 01 1E 00 A4 00
   01 1D 00 A2 01 02 0C 02 0D 00 02 08 02 09 01 01
   2D 00 A4 00 01 2C 00 A2 01 00 A3 00 A4 00 00 A1
   00 A2 01 01 38 00 A4 00 01 37 00 A2 01 01 DF 00
   A4 00 01 DE 00 A2 01 01 D3 00 A4 00 01 D2 00 A2
   01 01 EB 00 A4 00 01 EA 00 A2 01 01 92 00 A4 00
   01 91 00 A2 01 01 A3 00 A4 00 01 A2 00 A2 01 01
   AF 00 A4 00 01 AE 00 A2 01 01 BB 00 A4 00 01 BA
   00 A2 01 01 C7 00 A4 00 01 C6 00 A2 01 00 B2 00
   A4 00 00 B1 00 A2 01 00 D9 00 DA 00 00 D7 00 D8
   01 01 43 00 A4 00 01 42 00 A2 01 02 1A 00 DA 00
   02 19 00 D8 01 01 F7 00 DA 00 01 F6 00 D8 01 00
   FC 00 DA 00 00 FB 00 D8 01 01 4E 00 A4 00 01 4D
   00 A2 01 00 F2 00 DA 00 00 F1 00 D8 01 01 10 00
   A4 00 01 0F 00 A2 01 00 D5 00 A4 00 01 06 00 A4
   00 01 05 00 A2 01 00 E6 00 DA 00 00 E5 00 D8 01
   00 48 00 49 00 00 79 00 72 00 00 76 00 77 01 00
   50 00 51 00 00 4B 00 4C 01 00 15 00 16 00 05 45
   05 46 01 00 87 00 88 00 00 85 00 86 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
