Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/ZRange$.class
  Last modified May 29, 2022; size 2118 bytes
  SHA-256 checksum febd1978944908122970701a4705e359454e2f7f7fdcb852b5711bc49f6a9a7c
  Compiled from "Z.scala"
public final class org.sireum.ZRange$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ZRange$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               org/sireum/ZRange$
   #2 = Class              #1             // org/sireum/ZRange$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               Z.scala
   #8 = Utf8               org/sireum/ZRange$CondIncDec
   #9 = Class              #8             // org/sireum/ZRange$CondIncDec
  #10 = Utf8               org/sireum/ZRange
  #11 = Class              #10            // org/sireum/ZRange
  #12 = Utf8               CondIncDec
  #13 = Utf8               MODULE$
  #14 = Utf8               Lorg/sireum/ZRange$;
  #15 = Utf8               <clinit>
  #16 = Utf8               ()V
  #17 = Utf8               <init>
  #18 = NameAndType        #17:#16        // "<init>":()V
  #19 = Methodref          #2.#18         // org/sireum/ZRange$."<init>":()V
  #20 = NameAndType        #13:#14        // MODULE$:Lorg/sireum/ZRange$;
  #21 = Fieldref           #2.#20         // org/sireum/ZRange$.MODULE$:Lorg/sireum/ZRange$;
  #22 = Utf8               apply
  #23 = Utf8               (ZLjava/lang/Object;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec;)Lorg/sireum/ZRange;
  #24 = Utf8               <I:Ljava/lang/Object;>(ZTI;TI;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec<TI;>;)Lorg/sireum/ZRange<TI;>;
  #25 = Utf8               isInclusive
  #26 = Utf8               init
  #27 = Utf8               to
  #28 = Utf8               by
  #29 = Utf8               cid
  #30 = Utf8               (ZLjava/lang/Object;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec;)V
  #31 = NameAndType        #17:#30        // "<init>":(ZLjava/lang/Object;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec;)V
  #32 = Methodref          #11.#31        // org/sireum/ZRange."<init>":(ZLjava/lang/Object;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec;)V
  #33 = Utf8               this
  #34 = Utf8               Z
  #35 = Utf8               Ljava/lang/Object;
  #36 = Utf8               Lorg/sireum/Z;
  #37 = Utf8               Lorg/sireum/ZRange$CondIncDec;
  #38 = Utf8               unapply
  #39 = Utf8               (Lorg/sireum/ZRange;)Lscala/Option;
  #40 = Utf8               <I:Ljava/lang/Object;>(Lorg/sireum/ZRange<TI;>;)Lscala/Option<Lscala/Tuple5<Lorg/sireum/B;TI;TI;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec<TI;>;>;>;
  #41 = Utf8               x$0
  #42 = Utf8               scala/None$
  #43 = Class              #42            // scala/None$
  #44 = Utf8               Lscala/None$;
  #45 = NameAndType        #13:#44        // MODULE$:Lscala/None$;
  #46 = Fieldref           #43.#45        // scala/None$.MODULE$:Lscala/None$;
  #47 = Utf8               scala/Some
  #48 = Class              #47            // scala/Some
  #49 = Utf8               scala/Tuple5
  #50 = Class              #49            // scala/Tuple5
  #51 = Utf8               org/sireum/B
  #52 = Class              #51            // org/sireum/B
  #53 = Utf8               ()Z
  #54 = NameAndType        #25:#53        // isInclusive:()Z
  #55 = Methodref          #11.#54        // org/sireum/ZRange.isInclusive:()Z
  #56 = Utf8               (Z)V
  #57 = NameAndType        #17:#56        // "<init>":(Z)V
  #58 = Methodref          #52.#57        // org/sireum/B."<init>":(Z)V
  #59 = Utf8               ()Ljava/lang/Object;
  #60 = NameAndType        #26:#59        // init:()Ljava/lang/Object;
  #61 = Methodref          #11.#60        // org/sireum/ZRange.init:()Ljava/lang/Object;
  #62 = NameAndType        #27:#59        // to:()Ljava/lang/Object;
  #63 = Methodref          #11.#62        // org/sireum/ZRange.to:()Ljava/lang/Object;
  #64 = Utf8               ()Lorg/sireum/Z;
  #65 = NameAndType        #28:#64        // by:()Lorg/sireum/Z;
  #66 = Methodref          #11.#65        // org/sireum/ZRange.by:()Lorg/sireum/Z;
  #67 = Utf8               ()Lorg/sireum/ZRange$CondIncDec;
  #68 = NameAndType        #29:#67        // cid:()Lorg/sireum/ZRange$CondIncDec;
  #69 = Methodref          #11.#68        // org/sireum/ZRange.cid:()Lorg/sireum/ZRange$CondIncDec;
  #70 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #71 = NameAndType        #17:#70        // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #72 = Methodref          #50.#71        // scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #73 = Utf8               (Ljava/lang/Object;)V
  #74 = NameAndType        #17:#73        // "<init>":(Ljava/lang/Object;)V
  #75 = Methodref          #48.#74        // scala/Some."<init>":(Ljava/lang/Object;)V
  #76 = Utf8               Lorg/sireum/ZRange;
  #77 = Utf8               scala/Option
  #78 = Class              #77            // scala/Option
  #79 = Utf8               writeReplace
  #80 = Utf8               scala/runtime/ModuleSerializationProxy
  #81 = Class              #80            // scala/runtime/ModuleSerializationProxy
  #82 = Utf8               (Ljava/lang/Class;)V
  #83 = NameAndType        #17:#82        // "<init>":(Ljava/lang/Class;)V
  #84 = Methodref          #81.#83        // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #85 = Methodref          #4.#18         // java/lang/Object."<init>":()V
  #86 = Utf8               Code
  #87 = Utf8               LineNumberTable
  #88 = Utf8               LocalVariableTable
  #89 = Utf8               Signature
  #90 = Utf8               MethodParameters
  #91 = Utf8               StackMapTable
  #92 = Utf8               InnerClasses
  #93 = Utf8               SourceFile
  #94 = Utf8               ScalaInlineInfo
  #95 = Utf8               Scala
{
  public static final org.sireum.ZRange$ MODULE$;
    descriptor: Lorg/sireum/ZRange$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/ZRange$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lorg/sireum/ZRange$;
        10: return
      LineNumberTable:
        line 1433: 0

  public <I extends java.lang.Object> org.sireum.ZRange<I> apply(boolean, I, I, org.sireum.Z, org.sireum.ZRange$CondIncDec<I>);
    descriptor: (ZLjava/lang/Object;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec;)Lorg/sireum/ZRange;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: new           #11                 // class org/sireum/ZRange
         3: dup
         4: iload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: invokespecial #32                 // Method org/sireum/ZRange."<init>":(ZLjava/lang/Object;Ljava/lang/Object;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec;)V
        14: areturn
      LineNumberTable:
        line 1441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/ZRange$;
            0      15     1 isInclusive   Z
            0      15     2  init   Ljava/lang/Object;
            0      15     3    to   Ljava/lang/Object;
            0      15     4    by   Lorg/sireum/Z;
            0      15     5   cid   Lorg/sireum/ZRange$CondIncDec;
    Signature: #24                          // <I:Ljava/lang/Object;>(ZTI;TI;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec<TI;>;)Lorg/sireum/ZRange<TI;>;
    MethodParameters:
      Name                           Flags
      isInclusive                    final
      init                           final
      to                             final
      by                             final
      cid                            final

  public <I extends java.lang.Object> scala.Option<scala.Tuple5<org.sireum.B, I, I, org.sireum.Z, org.sireum.ZRange$CondIncDec<I>>> unapply(org.sireum.ZRange<I>);
    descriptor: (Lorg/sireum/ZRange;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     10
         4: getstatic     #46                 // Field scala/None$.MODULE$:Lscala/None$;
         7: goto          51
        10: new           #48                 // class scala/Some
        13: dup
        14: new           #50                 // class scala/Tuple5
        17: dup
        18: new           #52                 // class org/sireum/B
        21: dup
        22: aload_1
        23: invokevirtual #55                 // Method org/sireum/ZRange.isInclusive:()Z
        26: invokespecial #58                 // Method org/sireum/B."<init>":(Z)V
        29: aload_1
        30: invokevirtual #61                 // Method org/sireum/ZRange.init:()Ljava/lang/Object;
        33: aload_1
        34: invokevirtual #63                 // Method org/sireum/ZRange.to:()Ljava/lang/Object;
        37: aload_1
        38: invokevirtual #66                 // Method org/sireum/ZRange.by:()Lorg/sireum/Z;
        41: aload_1
        42: invokevirtual #69                 // Method org/sireum/ZRange.cid:()Lorg/sireum/ZRange$CondIncDec;
        45: invokespecial #72                 // Method scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        48: invokespecial #75                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        51: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 104 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 1441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lorg/sireum/ZRange$;
            0      52     1   x$0   Lorg/sireum/ZRange;
    Signature: #40                          // <I:Ljava/lang/Object;>(Lorg/sireum/ZRange<TI;>;)Lscala/Option<Lscala/Tuple5<Lorg/sireum/B;TI;TI;Lorg/sireum/Z;Lorg/sireum/ZRange$CondIncDec<TI;>;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #81                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class org/sireum/ZRange$
         6: invokespecial #84                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 1433: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/ZRange$;

  private org.sireum.ZRange$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #85                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 1433: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ZRange$;
}
InnerClasses:
  public static #12= #9 of #11;           // CondIncDec=class org/sireum/ZRange$CondIncDec of class org/sireum/ZRange
SourceFile: "Z.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 11 00 10 01 00 16 00 17 01 00 26
   00 27 01 00 4F 00 3B 01
  Scala: length = 0x0 (unknown attribute)

