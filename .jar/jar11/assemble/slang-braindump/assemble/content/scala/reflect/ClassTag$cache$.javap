Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/reflect/ClassTag$cache$.class
  Last modified May 29, 2022; size 4247 bytes
  SHA-256 checksum 94d088f62a13e5518ca99ea70dd97ee566f36e71573753fc3b06a32bc697aa91
  Compiled from "ClassTag.scala"
public class scala.reflect.ClassTag$cache$ extends scala.runtime.ClassValueCompat<java.lang.ref.WeakReference<scala.reflect.ClassTag<?>>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/reflect/ClassTag$cache$
  super_class: #5                         // scala/runtime/ClassValueCompat
  interfaces: 0, fields: 1, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               scala/reflect/ClassTag$cache$
    #2 = Class              #1            // scala/reflect/ClassTag$cache$
    #3 = Utf8               Lscala/runtime/ClassValueCompat<Ljava/lang/ref/WeakReference<Lscala/reflect/ClassTag<*>;>;>;
    #4 = Utf8               scala/runtime/ClassValueCompat
    #5 = Class              #4            // scala/runtime/ClassValueCompat
    #6 = Utf8               ClassTag.scala
    #7 = Utf8               scala/reflect/ClassTag$GenericClassTag
    #8 = Class              #7            // scala/reflect/ClassTag$GenericClassTag
    #9 = Utf8               scala/reflect/ClassTag
   #10 = Class              #9            // scala/reflect/ClassTag
   #11 = Utf8               GenericClassTag
   #12 = Utf8               cache$
   #13 = Utf8               scala/reflect/ManifestFactory$BooleanManifest
   #14 = Class              #13           // scala/reflect/ManifestFactory$BooleanManifest
   #15 = Utf8               scala/reflect/ManifestFactory
   #16 = Class              #15           // scala/reflect/ManifestFactory
   #17 = Utf8               BooleanManifest
   #18 = Utf8               scala/reflect/ManifestFactory$ByteManifest
   #19 = Class              #18           // scala/reflect/ManifestFactory$ByteManifest
   #20 = Utf8               ByteManifest
   #21 = Utf8               scala/reflect/ManifestFactory$CharManifest
   #22 = Class              #21           // scala/reflect/ManifestFactory$CharManifest
   #23 = Utf8               CharManifest
   #24 = Utf8               scala/reflect/ManifestFactory$DoubleManifest
   #25 = Class              #24           // scala/reflect/ManifestFactory$DoubleManifest
   #26 = Utf8               DoubleManifest
   #27 = Utf8               scala/reflect/ManifestFactory$FloatManifest
   #28 = Class              #27           // scala/reflect/ManifestFactory$FloatManifest
   #29 = Utf8               FloatManifest
   #30 = Utf8               scala/reflect/ManifestFactory$IntManifest
   #31 = Class              #30           // scala/reflect/ManifestFactory$IntManifest
   #32 = Utf8               IntManifest
   #33 = Utf8               scala/reflect/ManifestFactory$LongManifest
   #34 = Class              #33           // scala/reflect/ManifestFactory$LongManifest
   #35 = Utf8               LongManifest
   #36 = Utf8               scala/reflect/ManifestFactory$ShortManifest
   #37 = Class              #36           // scala/reflect/ManifestFactory$ShortManifest
   #38 = Utf8               ShortManifest
   #39 = Utf8               scala/reflect/ManifestFactory$UnitManifest
   #40 = Class              #39           // scala/reflect/ManifestFactory$UnitManifest
   #41 = Utf8               UnitManifest
   #42 = Utf8               MODULE$
   #43 = Utf8               Lscala/reflect/ClassTag$cache$;
   #44 = Utf8               <clinit>
   #45 = Utf8               ()V
   #46 = Utf8               <init>
   #47 = NameAndType        #46:#45       // "<init>":()V
   #48 = Methodref          #2.#47        // scala/reflect/ClassTag$cache$."<init>":()V
   #49 = NameAndType        #42:#43       // MODULE$:Lscala/reflect/ClassTag$cache$;
   #50 = Fieldref           #2.#49        // scala/reflect/ClassTag$cache$.MODULE$:Lscala/reflect/ClassTag$cache$;
   #51 = Utf8               computeValue
   #52 = Utf8               (Ljava/lang/Class;)Ljava/lang/ref/WeakReference;
   #53 = Utf8               (Ljava/lang/Class<*>;)Ljava/lang/ref/WeakReference<Lscala/reflect/ClassTag<*>;>;
   #54 = Utf8               runtimeClass
   #55 = Utf8               java/lang/ref/WeakReference
   #56 = Class              #55           // java/lang/ref/WeakReference
   #57 = Utf8               computeTag
   #58 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #59 = NameAndType        #57:#58       // computeTag:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #60 = Methodref          #2.#59        // scala/reflect/ClassTag$cache$.computeTag:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #61 = Utf8               (Ljava/lang/Object;)V
   #62 = NameAndType        #46:#61       // "<init>":(Ljava/lang/Object;)V
   #63 = Methodref          #56.#62       // java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
   #64 = Utf8               this
   #65 = Utf8               Ljava/lang/Class;
   #66 = Utf8               (Ljava/lang/Class<*>;)Lscala/reflect/ClassTag<*>;
   #67 = Utf8               java/lang/Class
   #68 = Class              #67           // java/lang/Class
   #69 = Utf8               isPrimitive
   #70 = Utf8               ()Z
   #71 = NameAndType        #69:#70       // isPrimitive:()Z
   #72 = Methodref          #68.#71       // java/lang/Class.isPrimitive:()Z
   #73 = Utf8               primitiveClassTag
   #74 = NameAndType        #73:#58       // primitiveClassTag:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #75 = Methodref          #2.#74        // scala/reflect/ClassTag$cache$.primitiveClassTag:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #76 = Utf8               scala/reflect/ClassTag$
   #77 = Class              #76           // scala/reflect/ClassTag$
   #78 = Utf8               scala$reflect$ClassTag$$ObjectTYPE
   #79 = NameAndType        #78:#65       // scala$reflect$ClassTag$$ObjectTYPE:Ljava/lang/Class;
   #80 = Fieldref           #77.#79       // scala/reflect/ClassTag$.scala$reflect$ClassTag$$ObjectTYPE:Ljava/lang/Class;
   #81 = Utf8               java/lang/Object
   #82 = Class              #81           // java/lang/Object
   #83 = Utf8               equals
   #84 = Utf8               (Ljava/lang/Object;)Z
   #85 = NameAndType        #83:#84       // equals:(Ljava/lang/Object;)Z
   #86 = Methodref          #82.#85       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #87 = Utf8               Lscala/reflect/ClassTag$;
   #88 = NameAndType        #42:#87       // MODULE$:Lscala/reflect/ClassTag$;
   #89 = Fieldref           #77.#88       // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
   #90 = Utf8               Object
   #91 = Utf8               ()Lscala/reflect/ClassTag;
   #92 = NameAndType        #90:#91       // Object:()Lscala/reflect/ClassTag;
   #93 = Methodref          #77.#92       // scala/reflect/ClassTag$.Object:()Lscala/reflect/ClassTag;
   #94 = Utf8               scala$reflect$ClassTag$$NothingTYPE
   #95 = NameAndType        #94:#65       // scala$reflect$ClassTag$$NothingTYPE:Ljava/lang/Class;
   #96 = Fieldref           #77.#95       // scala/reflect/ClassTag$.scala$reflect$ClassTag$$NothingTYPE:Ljava/lang/Class;
   #97 = Utf8               Nothing
   #98 = NameAndType        #97:#91       // Nothing:()Lscala/reflect/ClassTag;
   #99 = Methodref          #77.#98       // scala/reflect/ClassTag$.Nothing:()Lscala/reflect/ClassTag;
  #100 = Utf8               scala$reflect$ClassTag$$NullTYPE
  #101 = NameAndType        #100:#65      // scala$reflect$ClassTag$$NullTYPE:Ljava/lang/Class;
  #102 = Fieldref           #77.#101      // scala/reflect/ClassTag$.scala$reflect$ClassTag$$NullTYPE:Ljava/lang/Class;
  #103 = Utf8               Null
  #104 = NameAndType        #103:#91      // Null:()Lscala/reflect/ClassTag;
  #105 = Methodref          #77.#104      // scala/reflect/ClassTag$.Null:()Lscala/reflect/ClassTag;
  #106 = Utf8               (Ljava/lang/Class;)V
  #107 = NameAndType        #46:#106      // "<init>":(Ljava/lang/Class;)V
  #108 = Methodref          #8.#107       // scala/reflect/ClassTag$GenericClassTag."<init>":(Ljava/lang/Class;)V
  #109 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/Class<*>;)Lscala/reflect/ClassTag<*>;
  #110 = Utf8               java/lang/Byte
  #111 = Class              #110          // java/lang/Byte
  #112 = Utf8               TYPE
  #113 = NameAndType        #112:#65      // TYPE:Ljava/lang/Class;
  #114 = Fieldref           #111.#113     // java/lang/Byte.TYPE:Ljava/lang/Class;
  #115 = Utf8               Byte
  #116 = Utf8               ()Lscala/reflect/ManifestFactory$ByteManifest;
  #117 = NameAndType        #115:#116     // Byte:()Lscala/reflect/ManifestFactory$ByteManifest;
  #118 = Methodref          #77.#117      // scala/reflect/ClassTag$.Byte:()Lscala/reflect/ManifestFactory$ByteManifest;
  #119 = Utf8               java/lang/Short
  #120 = Class              #119          // java/lang/Short
  #121 = Fieldref           #120.#113     // java/lang/Short.TYPE:Ljava/lang/Class;
  #122 = Utf8               Short
  #123 = Utf8               ()Lscala/reflect/ManifestFactory$ShortManifest;
  #124 = NameAndType        #122:#123     // Short:()Lscala/reflect/ManifestFactory$ShortManifest;
  #125 = Methodref          #77.#124      // scala/reflect/ClassTag$.Short:()Lscala/reflect/ManifestFactory$ShortManifest;
  #126 = Utf8               java/lang/Character
  #127 = Class              #126          // java/lang/Character
  #128 = Fieldref           #127.#113     // java/lang/Character.TYPE:Ljava/lang/Class;
  #129 = Utf8               Char
  #130 = Utf8               ()Lscala/reflect/ManifestFactory$CharManifest;
  #131 = NameAndType        #129:#130     // Char:()Lscala/reflect/ManifestFactory$CharManifest;
  #132 = Methodref          #77.#131      // scala/reflect/ClassTag$.Char:()Lscala/reflect/ManifestFactory$CharManifest;
  #133 = Utf8               java/lang/Integer
  #134 = Class              #133          // java/lang/Integer
  #135 = Fieldref           #134.#113     // java/lang/Integer.TYPE:Ljava/lang/Class;
  #136 = Utf8               Int
  #137 = Utf8               ()Lscala/reflect/ManifestFactory$IntManifest;
  #138 = NameAndType        #136:#137     // Int:()Lscala/reflect/ManifestFactory$IntManifest;
  #139 = Methodref          #77.#138      // scala/reflect/ClassTag$.Int:()Lscala/reflect/ManifestFactory$IntManifest;
  #140 = Utf8               java/lang/Long
  #141 = Class              #140          // java/lang/Long
  #142 = Fieldref           #141.#113     // java/lang/Long.TYPE:Ljava/lang/Class;
  #143 = Utf8               Long
  #144 = Utf8               ()Lscala/reflect/ManifestFactory$LongManifest;
  #145 = NameAndType        #143:#144     // Long:()Lscala/reflect/ManifestFactory$LongManifest;
  #146 = Methodref          #77.#145      // scala/reflect/ClassTag$.Long:()Lscala/reflect/ManifestFactory$LongManifest;
  #147 = Utf8               java/lang/Float
  #148 = Class              #147          // java/lang/Float
  #149 = Fieldref           #148.#113     // java/lang/Float.TYPE:Ljava/lang/Class;
  #150 = Utf8               Float
  #151 = Utf8               ()Lscala/reflect/ManifestFactory$FloatManifest;
  #152 = NameAndType        #150:#151     // Float:()Lscala/reflect/ManifestFactory$FloatManifest;
  #153 = Methodref          #77.#152      // scala/reflect/ClassTag$.Float:()Lscala/reflect/ManifestFactory$FloatManifest;
  #154 = Utf8               java/lang/Double
  #155 = Class              #154          // java/lang/Double
  #156 = Fieldref           #155.#113     // java/lang/Double.TYPE:Ljava/lang/Class;
  #157 = Utf8               Double
  #158 = Utf8               ()Lscala/reflect/ManifestFactory$DoubleManifest;
  #159 = NameAndType        #157:#158     // Double:()Lscala/reflect/ManifestFactory$DoubleManifest;
  #160 = Methodref          #77.#159      // scala/reflect/ClassTag$.Double:()Lscala/reflect/ManifestFactory$DoubleManifest;
  #161 = Utf8               java/lang/Boolean
  #162 = Class              #161          // java/lang/Boolean
  #163 = Fieldref           #162.#113     // java/lang/Boolean.TYPE:Ljava/lang/Class;
  #164 = Utf8               Boolean
  #165 = Utf8               ()Lscala/reflect/ManifestFactory$BooleanManifest;
  #166 = NameAndType        #164:#165     // Boolean:()Lscala/reflect/ManifestFactory$BooleanManifest;
  #167 = Methodref          #77.#166      // scala/reflect/ClassTag$.Boolean:()Lscala/reflect/ManifestFactory$BooleanManifest;
  #168 = Utf8               java/lang/Void
  #169 = Class              #168          // java/lang/Void
  #170 = Fieldref           #169.#113     // java/lang/Void.TYPE:Ljava/lang/Class;
  #171 = Utf8               Unit
  #172 = Utf8               ()Lscala/reflect/ManifestFactory$UnitManifest;
  #173 = NameAndType        #171:#172     // Unit:()Lscala/reflect/ManifestFactory$UnitManifest;
  #174 = Methodref          #77.#173      // scala/reflect/ClassTag$.Unit:()Lscala/reflect/ManifestFactory$UnitManifest;
  #175 = Utf8               scala/MatchError
  #176 = Class              #175          // scala/MatchError
  #177 = Methodref          #176.#62      // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #178 = Utf8               scala/reflect/AnyValManifest
  #179 = Class              #178          // scala/reflect/AnyValManifest
  #180 = Utf8               (Ljava/lang/Class;)Ljava/lang/Object;
  #181 = Utf8               cls
  #182 = NameAndType        #51:#52       // computeValue:(Ljava/lang/Class;)Ljava/lang/ref/WeakReference;
  #183 = Methodref          #2.#182       // scala/reflect/ClassTag$cache$.computeValue:(Ljava/lang/Class;)Ljava/lang/ref/WeakReference;
  #184 = Methodref          #5.#47        // scala/runtime/ClassValueCompat."<init>":()V
  #185 = Utf8               Code
  #186 = Utf8               LineNumberTable
  #187 = Utf8               LocalVariableTable
  #188 = Utf8               Signature
  #189 = Utf8               MethodParameters
  #190 = Utf8               StackMapTable
  #191 = Utf8               InnerClasses
  #192 = Utf8               SourceFile
  #193 = Utf8               ScalaInlineInfo
  #194 = Utf8               Scala
{
  public static final scala.reflect.ClassTag$cache$ MODULE$;
    descriptor: Lscala/reflect/ClassTag$cache$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/reflect/ClassTag$cache$
         3: dup
         4: invokespecial #48                 // Method "<init>":()V
         7: putstatic     #50                 // Field MODULE$:Lscala/reflect/ClassTag$cache$;
        10: return
      LineNumberTable:
        line 119: 0

  public java.lang.ref.WeakReference<scala.reflect.ClassTag<?>> computeValue(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Ljava/lang/ref/WeakReference;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #56                 // class java/lang/ref/WeakReference
         3: dup
         4: aload_0
         5: aload_1
         6: invokevirtual #60                 // Method computeTag:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
         9: invokespecial #63                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
        12: areturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/reflect/ClassTag$cache$;
            0      13     1 runtimeClass   Ljava/lang/Class;
    Signature: #53                          // (Ljava/lang/Class<*>;)Ljava/lang/ref/WeakReference<Lscala/reflect/ClassTag<*>;>;
    MethodParameters:
      Name                           Flags
      runtimeClass                   final

  public scala.reflect.ClassTag<?> computeTag(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Lscala/reflect/ClassTag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #72                 // Method java/lang/Class.isPrimitive:()Z
         4: ifeq          16
         7: aload_0
         8: aload_1
         9: invokespecial #75                 // Method primitiveClassTag:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        12: astore_2
        13: goto          109
        16: getstatic     #80                 // Field scala/reflect/ClassTag$.scala$reflect$ClassTag$$ObjectTYPE:Ljava/lang/Class;
        19: dup
        20: ifnonnull     27
        23: pop
        24: goto          44
        27: aload_1
        28: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          44
        34: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        37: invokevirtual #93                 // Method scala/reflect/ClassTag$.Object:()Lscala/reflect/ClassTag;
        40: astore_2
        41: goto          109
        44: getstatic     #96                 // Field scala/reflect/ClassTag$.scala$reflect$ClassTag$$NothingTYPE:Ljava/lang/Class;
        47: dup
        48: ifnonnull     55
        51: pop
        52: goto          72
        55: aload_1
        56: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        59: ifeq          72
        62: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        65: invokevirtual #99                 // Method scala/reflect/ClassTag$.Nothing:()Lscala/reflect/ClassTag;
        68: astore_2
        69: goto          109
        72: getstatic     #102                // Field scala/reflect/ClassTag$.scala$reflect$ClassTag$$NullTYPE:Ljava/lang/Class;
        75: dup
        76: ifnonnull     83
        79: pop
        80: goto          100
        83: aload_1
        84: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        87: ifeq          100
        90: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        93: invokevirtual #105                // Method scala/reflect/ClassTag$.Null:()Lscala/reflect/ClassTag;
        96: astore_2
        97: goto          109
       100: new           #8                  // class scala/reflect/ClassTag$GenericClassTag
       103: dup
       104: aload_1
       105: invokespecial #108                // Method scala/reflect/ClassTag$GenericClassTag."<init>":(Ljava/lang/Class;)V
       108: astore_2
       109: aload_2
       110: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 16 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 16 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 16 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 16 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class scala/reflect/ClassTag ]
      LineNumberTable:
        line 125: 0
        line 126: 16
        line 127: 44
        line 128: 72
        line 129: 100
        line 124: 109
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     111     0  this   Lscala/reflect/ClassTag$cache$;
            0     111     1 runtimeClass   Ljava/lang/Class;
    Signature: #66                          // (Ljava/lang/Class<*>;)Lscala/reflect/ClassTag<*>;
    MethodParameters:
      Name                           Flags
      runtimeClass                   final

  private <T extends java.lang.Object> scala.reflect.ClassTag<?> primitiveClassTag(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Lscala/reflect/ClassTag;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=3, args_size=2
         0: getstatic     #114                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
         3: dup
         4: ifnonnull     15
         7: pop
         8: aload_1
         9: ifnull        22
        12: goto          32
        15: aload_1
        16: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        19: ifeq          32
        22: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        25: invokevirtual #118                // Method scala/reflect/ClassTag$.Byte:()Lscala/reflect/ManifestFactory$ByteManifest;
        28: astore_2
        29: goto          297
        32: getstatic     #121                // Field java/lang/Short.TYPE:Ljava/lang/Class;
        35: dup
        36: ifnonnull     47
        39: pop
        40: aload_1
        41: ifnull        54
        44: goto          64
        47: aload_1
        48: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        51: ifeq          64
        54: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        57: invokevirtual #125                // Method scala/reflect/ClassTag$.Short:()Lscala/reflect/ManifestFactory$ShortManifest;
        60: astore_2
        61: goto          297
        64: getstatic     #128                // Field java/lang/Character.TYPE:Ljava/lang/Class;
        67: dup
        68: ifnonnull     79
        71: pop
        72: aload_1
        73: ifnull        86
        76: goto          96
        79: aload_1
        80: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        83: ifeq          96
        86: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        89: invokevirtual #132                // Method scala/reflect/ClassTag$.Char:()Lscala/reflect/ManifestFactory$CharManifest;
        92: astore_2
        93: goto          297
        96: getstatic     #135                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
        99: dup
       100: ifnonnull     111
       103: pop
       104: aload_1
       105: ifnull        118
       108: goto          128
       111: aload_1
       112: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       115: ifeq          128
       118: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       121: invokevirtual #139                // Method scala/reflect/ClassTag$.Int:()Lscala/reflect/ManifestFactory$IntManifest;
       124: astore_2
       125: goto          297
       128: getstatic     #142                // Field java/lang/Long.TYPE:Ljava/lang/Class;
       131: dup
       132: ifnonnull     143
       135: pop
       136: aload_1
       137: ifnull        150
       140: goto          160
       143: aload_1
       144: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       147: ifeq          160
       150: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       153: invokevirtual #146                // Method scala/reflect/ClassTag$.Long:()Lscala/reflect/ManifestFactory$LongManifest;
       156: astore_2
       157: goto          297
       160: getstatic     #149                // Field java/lang/Float.TYPE:Ljava/lang/Class;
       163: dup
       164: ifnonnull     175
       167: pop
       168: aload_1
       169: ifnull        182
       172: goto          192
       175: aload_1
       176: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       179: ifeq          192
       182: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       185: invokevirtual #153                // Method scala/reflect/ClassTag$.Float:()Lscala/reflect/ManifestFactory$FloatManifest;
       188: astore_2
       189: goto          297
       192: getstatic     #156                // Field java/lang/Double.TYPE:Ljava/lang/Class;
       195: dup
       196: ifnonnull     207
       199: pop
       200: aload_1
       201: ifnull        214
       204: goto          224
       207: aload_1
       208: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       211: ifeq          224
       214: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       217: invokevirtual #160                // Method scala/reflect/ClassTag$.Double:()Lscala/reflect/ManifestFactory$DoubleManifest;
       220: astore_2
       221: goto          297
       224: getstatic     #163                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
       227: dup
       228: ifnonnull     239
       231: pop
       232: aload_1
       233: ifnull        246
       236: goto          256
       239: aload_1
       240: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       243: ifeq          256
       246: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       249: invokevirtual #167                // Method scala/reflect/ClassTag$.Boolean:()Lscala/reflect/ManifestFactory$BooleanManifest;
       252: astore_2
       253: goto          297
       256: getstatic     #170                // Field java/lang/Void.TYPE:Ljava/lang/Class;
       259: dup
       260: ifnonnull     271
       263: pop
       264: aload_1
       265: ifnull        278
       268: goto          288
       271: aload_1
       272: invokevirtual #86                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       275: ifeq          288
       278: getstatic     #89                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       281: invokevirtual #174                // Method scala/reflect/ClassTag$.Unit:()Lscala/reflect/ManifestFactory$UnitManifest;
       284: astore_2
       285: goto          297
       288: new           #176                // class scala/MatchError
       291: dup
       292: aload_1
       293: invokespecial #177                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       296: athrow
       297: aload_2
       298: areturn
      StackMapTable: number_of_entries = 28
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Class ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class scala/reflect/AnyValManifest ]
      LineNumberTable:
        line 134: 0
        line 135: 32
        line 136: 64
        line 137: 96
        line 138: 128
        line 139: 160
        line 140: 192
        line 141: 224
        line 142: 256
        line 133: 288
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     299     0  this   Lscala/reflect/ClassTag$cache$;
            0     299     1 runtimeClass   Ljava/lang/Class;
    Signature: #109                         // <T:Ljava/lang/Object;>(Ljava/lang/Class<*>;)Lscala/reflect/ClassTag<*>;
    MethodParameters:
      Name                           Flags
      runtimeClass                   final

  public java.lang.Object computeValue(java.lang.Class);
    descriptor: (Ljava/lang/Class;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #183                // Method computeValue:(Ljava/lang/Class;)Ljava/lang/ref/WeakReference;
         5: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/reflect/ClassTag$cache$;
            0       6     1   cls   Ljava/lang/Class;
    MethodParameters:
      Name                           Flags
      cls                            final

  public scala.reflect.ClassTag$cache$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #184                // Method scala/runtime/ClassValueCompat."<init>":()V
         4: return
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/reflect/ClassTag$cache$;
}
InnerClasses:
  private static #11= #8 of #10;          // GenericClassTag=class scala/reflect/ClassTag$GenericClassTag of class scala/reflect/ClassTag
  private static #12= #2 of #10;          // cache$=class scala/reflect/ClassTag$cache$ of class scala/reflect/ClassTag
  public static final #17= #14 of #16;    // BooleanManifest=class scala/reflect/ManifestFactory$BooleanManifest of class scala/reflect/ManifestFactory
  public static final #20= #19 of #16;    // ByteManifest=class scala/reflect/ManifestFactory$ByteManifest of class scala/reflect/ManifestFactory
  public static final #23= #22 of #16;    // CharManifest=class scala/reflect/ManifestFactory$CharManifest of class scala/reflect/ManifestFactory
  public static final #26= #25 of #16;    // DoubleManifest=class scala/reflect/ManifestFactory$DoubleManifest of class scala/reflect/ManifestFactory
  public static final #29= #28 of #16;    // FloatManifest=class scala/reflect/ManifestFactory$FloatManifest of class scala/reflect/ManifestFactory
  public static final #32= #31 of #16;    // IntManifest=class scala/reflect/ManifestFactory$IntManifest of class scala/reflect/ManifestFactory
  public static final #35= #34 of #16;    // LongManifest=class scala/reflect/ManifestFactory$LongManifest of class scala/reflect/ManifestFactory
  public static final #38= #37 of #16;    // ShortManifest=class scala/reflect/ManifestFactory$ShortManifest of class scala/reflect/ManifestFactory
  public static final #41= #40 of #16;    // UnitManifest=class scala/reflect/ManifestFactory$UnitManifest of class scala/reflect/ManifestFactory
Signature: #3                           // Lscala/runtime/ClassValueCompat<Ljava/lang/ref/WeakReference<Lscala/reflect/ClassTag<*>;>;>;
SourceFile: "ClassTag.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 2E 00 2D 01 00 39 00 3A 01 00 33
   00 B4 01 00 33 00 34 01 00 49 00 3A 01
  Scala: length = 0x0 (unknown attribute)

