Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/ScalaVersionSpecifics.class
  Last modified May 29, 2022; size 3843 bytes
  SHA-256 checksum 87cb2a23b4b7c66dd0bdc423dc009fc8d327a82b1b235759c13c904b958636ac
  Compiled from "versionspecifics.scala"
public interface shapeless.ScalaVersionSpecifics
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // shapeless/ScalaVersionSpecifics
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 4, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/ScalaVersionSpecifics
    #2 = Class              #1            // shapeless/ScalaVersionSpecifics
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               versionspecifics.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u001d4q!\u0003\u0006\u0011\u0002\u0007\u0005Q\u0002C\u0003\u0015\u0001\u0011\u0005Q#B\u0003\u001a\u0001\u0001Q!\u0004\u0003\u00044\u0001\u0011\u0005!\u0002N\u0004\u0007+\u0002A\tA\u0003,\u0007\ra\u0003\u0001\u0012\u0001\u0006Z\u0011\u0015QV\u0001\"\u0001\\\r\u0011aV\u0001A/\t\u000bi;A\u0011\u00013\u0003+M\u001b\u0017\r\\1WKJ\u001c\u0018n\u001c8Ta\u0016\u001c\u0017NZ5dg*\t1\"A\u0005tQ\u0006\u0004X\r\\3tg\u000e\u00011C\u0001\u0001\u000f!\ty!#D\u0001\u0011\u0015\u0005\t\u0012!B:dC2\f\u0017BA\n\u0011\u0005\u0019\te.\u001f*fM\u00061A%\u001b8ji\u0012\"\u0012A\u0006\t\u0003\u001f]I!\u0001\u0007\t\u0003\tUs\u0017\u000e\u001e\u0002\u0012\u0013N\u0014VmZ;mCJLE/\u001a:bE2,WCA\u000e)%\tabD\u0002\u0003\u001e\u0001\u0001Y\"\u0001\u0004\u001fsK\u001aLg.Z7f]Rt\u0004cA\u0010%M5\t\u0001E\u0003\u0002\"E\u00059q-\u001a8fe&\u001c\'BA\u0012\u0011\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003K\u0001\u0012!\"S:Ji\u0016\u0014\u0018M\u00197f!\t9\u0003\u0006\u0004\u0001\u0005\u000b%\u0012!\u0019\u0001\u0016\u0003\tI+\u0007O]\t\u0003W9\u0002\"a\u0004\u0017\n\u00055\u0002\"a\u0002(pi\"Lgn\u001a\t\u0003\u001f=J!\u0001\r\t\u0003\u0007\u0005s\u00170\u0002\u000339\u00012#!A\"\u0002/%l\u0007\u000f\\5dSRtu\u000e\u001e$pk:$W*Z:tC\u001e,GCA\u001bF)\t1\u0014\t\u0005\u00028}9\u0011\u0001\b\u0010\t\u0003sAi\u0011A\u000f\u0006\u0003w1\ta\u0001\u0010:p_Rt\u0014BA\u001f\u0011\u0003\u0019\u0001&/\u001a3fM&\u0011q\b\u0011\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005u\u0002\u0002\"\u0002\"\u0004\u0001\u0004\u0019\u0015a\u0001;qKB\u0011A)\u0015\b\u0003O\u0015CQAR\u0002A\u0002\u001d\u000b\u0011a\u0019\t\u0003\u0011>k\u0011!\u0013\u0006\u0003\u0015.\u000b\u0001b\u001e5ji\u0016\u0014w\u000e\u001f\u0006\u0003\u00196\u000ba!\\1de>\u001c(B\u0001(\u0011\u0003\u001d\u0011XM\u001a7fGRL!\u0001U%\u0003\u000f\r{g\u000e^3yi&\u0011!k\u0015\u0002\u0005)f\u0004X-\u0003\u0002U\u0017\n9\u0011\t\\5bg\u0016\u001c\u0018aC7bGJ|7m\\7qCR\u0004\"aV\u0003\u000e\u0003\u0001\u00111\"\\1de>\u001cw.\u001c9biN\u0011QAD\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003Y\u0013aAY;oI2,7CA\u0004_!\ty&-D\u0001a\u0015\t\t\u0007#\u0001\u0006b]:|G/\u0019;j_:L!a\u00191\u0003\u0015\u0005sgn\u001c;bi&|g\u000eF\u0001f!\t1w!D\u0001\u0006\u0001
    #9 = Utf8               scala/reflect/api/Types$TypeApi
   #10 = Class              #9            // scala/reflect/api/Types$TypeApi
   #11 = Utf8               scala/reflect/api/Types
   #12 = Class              #11           // scala/reflect/api/Types
   #13 = Utf8               TypeApi
   #14 = Utf8               scala/reflect/internal/Symbols$Symbol
   #15 = Class              #14           // scala/reflect/internal/Symbols$Symbol
   #16 = Utf8               scala/reflect/internal/Symbols
   #17 = Class              #16           // scala/reflect/internal/Symbols
   #18 = Utf8               Symbol
   #19 = Utf8               scala/reflect/internal/Types$Type
   #20 = Class              #19           // scala/reflect/internal/Types$Type
   #21 = Utf8               scala/reflect/internal/Types
   #22 = Class              #21           // scala/reflect/internal/Types
   #23 = Utf8               Type
   #24 = Utf8               scala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$
   #25 = Class              #24           // scala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$
   #26 = Utf8               scala/tools/nsc/typechecker/Implicits
   #27 = Class              #26           // scala/tools/nsc/typechecker/Implicits
   #28 = Utf8               ImplicitNotFoundMsg$
   #29 = Utf8               scala/tools/nsc/typechecker/Implicits$Message
   #30 = Class              #29           // scala/tools/nsc/typechecker/Implicits$Message
   #31 = Utf8               Message
   #32 = Utf8               shapeless/ScalaVersionSpecifics$macrocompat$
   #33 = Class              #32           // shapeless/ScalaVersionSpecifics$macrocompat$
   #34 = Utf8               macrocompat$
   #35 = Utf8               macrocompat
   #36 = Utf8               ()Lshapeless/ScalaVersionSpecifics$macrocompat$;
   #37 = Utf8               implicitNotFoundMessage$
   #38 = Utf8               (Lshapeless/ScalaVersionSpecifics;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
   #39 = Utf8               $this
   #40 = Utf8               c
   #41 = Utf8               tpe
   #42 = Utf8               implicitNotFoundMessage
   #43 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
   #44 = NameAndType        #42:#43       // implicitNotFoundMessage:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
   #45 = InterfaceMethodref #2.#44        // shapeless/ScalaVersionSpecifics.implicitNotFoundMessage:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
   #46 = Utf8               Lshapeless/ScalaVersionSpecifics;
   #47 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #48 = Utf8               Lscala/reflect/api/Types$TypeApi;
   #49 = Utf8               scala/reflect/macros/whitebox/Context
   #50 = Class              #49           // scala/reflect/macros/whitebox/Context
   #51 = Utf8               universe
   #52 = Utf8               ()Lscala/reflect/macros/Universe;
   #53 = NameAndType        #51:#52       // universe:()Lscala/reflect/macros/Universe;
   #54 = InterfaceMethodref #50.#53       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #55 = Utf8               scala/tools/nsc/Global
   #56 = Class              #55           // scala/tools/nsc/Global
   #57 = Utf8               typeSymbolDirect
   #58 = Utf8               ()Lscala/reflect/internal/Symbols$Symbol;
   #59 = NameAndType        #57:#58       // typeSymbolDirect:()Lscala/reflect/internal/Symbols$Symbol;
   #60 = Methodref          #20.#59       // scala/reflect/internal/Types$Type.typeSymbolDirect:()Lscala/reflect/internal/Symbols$Symbol;
   #61 = Utf8               analyzer
   #62 = Utf8               ()Lscala/tools/nsc/typechecker/Analyzer;
   #63 = NameAndType        #61:#62       // analyzer:()Lscala/tools/nsc/typechecker/Analyzer;
   #64 = Methodref          #56.#63       // scala/tools/nsc/Global.analyzer:()Lscala/tools/nsc/typechecker/Analyzer;
   #65 = Utf8               scala/tools/nsc/typechecker/Analyzer
   #66 = Class              #65           // scala/tools/nsc/typechecker/Analyzer
   #67 = Utf8               ImplicitNotFoundMsg
   #68 = Utf8               ()Lscala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$;
   #69 = NameAndType        #67:#68       // ImplicitNotFoundMsg:()Lscala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$;
   #70 = InterfaceMethodref #66.#69       // scala/tools/nsc/typechecker/Analyzer.ImplicitNotFoundMsg:()Lscala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$;
   #71 = Utf8               unapply
   #72 = Utf8               (Lscala/reflect/internal/Symbols$Symbol;)Lscala/Option;
   #73 = NameAndType        #71:#72       // unapply:(Lscala/reflect/internal/Symbols$Symbol;)Lscala/Option;
   #74 = Methodref          #25.#73       // scala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$.unapply:(Lscala/reflect/internal/Symbols$Symbol;)Lscala/Option;
   #75 = Utf8               scala/Option
   #76 = Class              #75           // scala/Option
   #77 = Utf8               isEmpty
   #78 = Utf8               ()Z
   #79 = NameAndType        #77:#78       // isEmpty:()Z
   #80 = Methodref          #76.#79       // scala/Option.isEmpty:()Z
   #81 = Utf8               get
   #82 = Utf8               ()Ljava/lang/Object;
   #83 = NameAndType        #81:#82       // get:()Ljava/lang/Object;
   #84 = Methodref          #76.#83       // scala/Option.get:()Ljava/lang/Object;
   #85 = Utf8               formatDefSiteMessage
   #86 = Utf8               (Lscala/reflect/internal/Types$Type;)Ljava/lang/String;
   #87 = NameAndType        #85:#86       // formatDefSiteMessage:(Lscala/reflect/internal/Types$Type;)Ljava/lang/String;
   #88 = Methodref          #30.#87       // scala/tools/nsc/typechecker/Implicits$Message.formatDefSiteMessage:(Lscala/reflect/internal/Types$Type;)Ljava/lang/String;
   #89 = Utf8               java/lang/StringBuilder
   #90 = Class              #89           // java/lang/StringBuilder
   #91 = Integer            33
   #92 = Utf8               <init>
   #93 = Utf8               (I)V
   #94 = NameAndType        #92:#93       // "<init>":(I)V
   #95 = Methodref          #90.#94       // java/lang/StringBuilder."<init>":(I)V
   #96 = Utf8               Implicit value of type
   #97 = String             #96           // Implicit value of type
   #98 = Utf8               append
   #99 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #100 = NameAndType        #98:#99       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #101 = Methodref          #90.#100      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #102 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #103 = NameAndType        #98:#102      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #104 = Methodref          #90.#103      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #105 = Utf8                not found
  #106 = String             #105          //  not found
  #107 = Utf8               toString
  #108 = Utf8               ()Ljava/lang/String;
  #109 = NameAndType        #107:#108     // toString:()Ljava/lang/String;
  #110 = Methodref          #90.#109      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #111 = Utf8               msg
  #112 = Utf8               Lscala/tools/nsc/typechecker/Implicits$Message;
  #113 = Utf8               global
  #114 = Utf8               Lscala/tools/nsc/Global;
  #115 = Utf8               gTpe
  #116 = Utf8               Lscala/reflect/internal/Types$Type;
  #117 = Utf8               this
  #118 = Utf8               java/lang/String
  #119 = Class              #118          // java/lang/String
  #120 = Utf8               $init$
  #121 = Utf8               (Lshapeless/ScalaVersionSpecifics;)V
  #122 = Utf8               Code
  #123 = Utf8               LineNumberTable
  #124 = Utf8               LocalVariableTable
  #125 = Utf8               MethodParameters
  #126 = Utf8               StackMapTable
  #127 = Utf8               Signature
  #128 = Utf8               InnerClasses
  #129 = Utf8               SourceFile
  #130 = Utf8               RuntimeVisibleAnnotations
  #131 = Utf8               ScalaInlineInfo
  #132 = Utf8               ScalaSig
{
  public abstract shapeless.ScalaVersionSpecifics$macrocompat$ macrocompat();
    descriptor: ()Lshapeless/ScalaVersionSpecifics$macrocompat$;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static java.lang.String implicitNotFoundMessage$(shapeless.ScalaVersionSpecifics, scala.reflect.macros.whitebox.Context, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/ScalaVersionSpecifics;Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #45                 // InterfaceMethod implicitNotFoundMessage:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lshapeless/ScalaVersionSpecifics;
            0       7     1     c   Lscala/reflect/macros/whitebox/Context;
            0       7     2   tpe   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final
      tpe                            final

  public default java.lang.String implicitNotFoundMessage(scala.reflect.macros.whitebox.Context, scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=3
         0: aload_2
         1: astore        4
         3: aload_1
         4: invokeinterface #54,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
         9: checkcast     #56                 // class scala/tools/nsc/Global
        12: astore        5
        14: aload         4
        16: checkcast     #20                 // class scala/reflect/internal/Types$Type
        19: astore        6
        21: aload         6
        23: invokevirtual #60                 // Method scala/reflect/internal/Types$Type.typeSymbolDirect:()Lscala/reflect/internal/Symbols$Symbol;
        26: astore        7
        28: aload         7
        30: ifnull        82
        33: aload         5
        35: invokevirtual #64                 // Method scala/tools/nsc/Global.analyzer:()Lscala/tools/nsc/typechecker/Analyzer;
        38: invokeinterface #70,  1           // InterfaceMethod scala/tools/nsc/typechecker/Analyzer.ImplicitNotFoundMsg:()Lscala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$;
        43: aload         7
        45: invokevirtual #74                 // Method scala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$.unapply:(Lscala/reflect/internal/Symbols$Symbol;)Lscala/Option;
        48: astore        8
        50: aload         8
        52: invokevirtual #80                 // Method scala/Option.isEmpty:()Z
        55: ifne          79
        58: aload         8
        60: invokevirtual #84                 // Method scala/Option.get:()Ljava/lang/Object;
        63: checkcast     #30                 // class scala/tools/nsc/typechecker/Implicits$Message
        66: astore        9
        68: aload         9
        70: aload         6
        72: invokevirtual #88                 // Method scala/tools/nsc/typechecker/Implicits$Message.formatDefSiteMessage:(Lscala/reflect/internal/Types$Type;)Ljava/lang/String;
        75: astore_3
        76: goto          116
        79: goto          85
        82: goto          85
        85: new           #90                 // class java/lang/StringBuilder
        88: dup
        89: ldc           #91                 // int 33
        91: invokespecial #95                 // Method java/lang/StringBuilder."<init>":(I)V
        94: ldc           #97                 // String Implicit value of type
        96: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        99: aload         4
       101: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       104: ldc           #106                // String  not found
       106: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       109: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       112: astore_3
       113: goto          116
       116: aload_3
       117: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 79
          locals = [ class shapeless/ScalaVersionSpecifics, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Types$TypeApi, top, class scala/reflect/api/Types$TypeApi, class scala/tools/nsc/Global, class scala/reflect/internal/Types$Type, class scala/reflect/internal/Symbols$Symbol, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class shapeless/ScalaVersionSpecifics, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Types$TypeApi, class java/lang/String, class scala/reflect/api/Types$TypeApi, class scala/tools/nsc/Global, class scala/reflect/internal/Types$Type, class scala/reflect/internal/Symbols$Symbol ]
          stack = []
      LineNumberTable:
        line 24: 0
        line 25: 3
        line 26: 14
        line 27: 21
        line 28: 28
        line 27: 58
        line 29: 68
        line 28: 79
        line 31: 85
        line 27: 116
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      13     9   msg   Lscala/tools/nsc/typechecker/Implicits$Message;
           12     105     5 global   Lscala/tools/nsc/Global;
           19      98     6  gTpe   Lscala/reflect/internal/Types$Type;
            0     118     0  this   Lshapeless/ScalaVersionSpecifics;
            0     118     1     c   Lscala/reflect/macros/whitebox/Context;
            0     118     2   tpe   Lscala/reflect/api/Types$TypeApi;
    Signature: #43                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      c                              final
      tpe                            final

  public static void $init$(shapeless.ScalaVersionSpecifics);
    descriptor: (Lshapeless/ScalaVersionSpecifics;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lshapeless/ScalaVersionSpecifics;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public abstract #13= #10 of #12;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public abstract #18= #15 of #17;        // Symbol=class scala/reflect/internal/Symbols$Symbol of class scala/reflect/internal/Symbols
  public abstract #23= #20 of #22;        // Type=class scala/reflect/internal/Types$Type of class scala/reflect/internal/Types
  public #28= #25 of #27;                 // ImplicitNotFoundMsg$=class scala/tools/nsc/typechecker/Implicits$ImplicitNotFoundMsg$ of class scala/tools/nsc/typechecker/Implicits
  public #31= #30 of #27;                 // Message=class scala/tools/nsc/typechecker/Implicits$Message of class scala/tools/nsc/typechecker/Implicits
  public #34= #33 of #2;                  // macrocompat$=class shapeless/ScalaVersionSpecifics$macrocompat$ of class shapeless/ScalaVersionSpecifics
SourceFile: "versionspecifics.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u001d4q!\u0003\u0006\u0011\u0002\u0007\u0005Q\u0002C\u0003\u0015\u0001\u0011\u0005Q#B\u0003\u001a\u0001\u0001Q!\u0004\u0003\u00044\u0001\u0011\u0005!\u0002N\u0004\u0007+\u0002A\tA\u0003,\u0007\ra\u0003\u0001\u0012\u0001\u0006Z\u0011\u0015QV\u0001\"\u0001\\\r\u0011aV\u0001A/\t\u000bi;A\u0011\u00013\u0003+M\u001b\u0017\r\\1WKJ\u001c\u0018n\u001c8Ta\u0016\u001c\u0017NZ5dg*\t1\"A\u0005tQ\u0006\u0004X\r\\3tg\u000e\u00011C\u0001\u0001\u000f!\ty!#D\u0001\u0011\u0015\u0005\t\u0012!B:dC2\f\u0017BA\n\u0011\u0005\u0019\te.\u001f*fM\u00061A%\u001b8ji\u0012\"\u0012A\u0006\t\u0003\u001f]I!\u0001\u0007\t\u0003\tUs\u0017\u000e\u001e\u0002\u0012\u0013N\u0014VmZ;mCJLE/\u001a:bE2,WCA\u000e)%\tabD\u0002\u0003\u001e\u0001\u0001Y\"\u0001\u0004\u001fsK\u001aLg.Z7f]Rt\u0004cA\u0010%M5\t\u0001E\u0003\u0002\"E\u00059q-\u001a8fe&\u001c\'BA\u0012\u0011\u0003)\u0019w\u000e\u001c7fGRLwN\\\u0005\u0003K\u0001\u0012!\"S:Ji\u0016\u0014\u0018M\u00197f!\t9\u0003\u0006\u0004\u0001\u0005\u000b%\u0012!\u0019\u0001\u0016\u0003\tI+\u0007O]\t\u0003W9\u0002\"a\u0004\u0017\n\u00055\u0002\"a\u0002(pi\"Lgn\u001a\t\u0003\u001f=J!\u0001\r\t\u0003\u0007\u0005s\u00170\u0002\u000339\u00012#!A\"\u0002/%l\u0007\u000f\\5dSRtu\u000e\u001e$pk:$W*Z:tC\u001e,GCA\u001bF)\t1\u0014\t\u0005\u00028}9\u0011\u0001\b\u0010\t\u0003sAi\u0011A\u000f\u0006\u0003w1\ta\u0001\u0010:p_Rt\u0014BA\u001f\u0011\u0003\u0019\u0001&/\u001a3fM&\u0011q\b\u0011\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005u\u0002\u0002\"\u0002\"\u0004\u0001\u0004\u0019\u0015a\u0001;qKB\u0011A)\u0015\b\u0003O\u0015CQAR\u0002A\u0002\u001d\u000b\u0011a\u0019\t\u0003\u0011>k\u0011!\u0013\u0006\u0003\u0015.\u000b\u0001b\u001e5ji\u0016\u0014w\u000e\u001f\u0006\u0003\u00196\u000ba!\\1de>\u001c(B\u0001(\u0011\u0003\u001d\u0011XM\u001a7fGRL!\u0001U%\u0003\u000f\r{g\u000e^3yi&\u0011!k\u0015\u0002\u0005)f\u0004X-\u0003\u0002U\u0017\n9\u0011\t\\5bg\u0016\u001c\u0018aC7bGJ|7m\\7qCR\u0004\"aV\u0003\u000e\u0003\u0001\u00111\"\\1de>\u001cw.\u001c9biN\u0011QAD\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003Y\u0013aAY;oI2,7CA\u0004_!\ty&-D\u0001a\u0015\t\t\u0007#\u0001\u0006b]:|G/\u0019;j_:L!a\u00191\u0003\u0015\u0005sgn\u001c;bi&|g\u000eF\u0001f!\t1w!D\u0001\u0006\u0001"
    )
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 78 00 79 01 00 25 00 26 01 00 2A
   00 2B 00 00 23 00 24 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
