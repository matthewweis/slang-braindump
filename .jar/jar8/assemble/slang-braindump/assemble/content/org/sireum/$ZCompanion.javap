Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/$ZCompanion.class
  Last modified May 29, 2022; size 1956 bytes
  SHA-256 checksum 62fb9237c90704f3d85a388a0507ef8d335961fe20c9464e2c927c1423f09947
  Compiled from "Z.scala"
public interface org.sireum.$ZCompanion<T extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/sireum/$ZCompanion
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 17, attributes: 5
Constant pool:
   #1 = Utf8               org/sireum/$ZCompanion
   #2 = Class              #1             // org/sireum/$ZCompanion
   #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               Z.scala
   #7 = Utf8               Lscala/reflect/ScalaSignature;
   #8 = Utf8               bytes
   #9 = Utf8               \u0006\u0005\u001d4qAE\n\u0011\u0002G\u0005\u0001\u0004C\u0003!\u0001\u0019\u0005\u0011\u0005C\u0003*\u0001\u0019\u0005!\u0006C\u0003/\u0001\u0019\u0005!\u0006C\u00030\u0001\u0019\u0005!\u0006C\u00031\u0001\u0019\u0005\u0011\u0007C\u0003>\u0001\u0019\u0005!\u0006C\u0003?\u0001\u0019\u0005!\u0006C\u0003@\u0001\u0019\u0005\u0011\u0007C\u0003A\u0001\u0019\u0005\u0011\u0007C\u0003B\u0001\u0019\u0005!\tC\u0003G\u0001\u0019\u0005\u0011\u0007C\u0003H\u0001\u0019\u0005\u0001\nC\u0003P\u0001\u0019\u0005\u0001\u000bC\u0003U\u0001\u0019\u0005Q\u000bC\u0003Z\u0001\u0019\u0005!\fC\u0003_\u0001\u0019\u0005q\fC\u0003d\u0001\u0019\u0005AMA\u0006%5\u000e{W\u000e]1oS>t\'B\u0001\u000b\u0016\u0003\u0019\u0019\u0018N]3v[*\ta#A\u0002pe\u001e\u001c\u0001!\u0006\u0002\u001aiM\u0011\u0001A\u0007\t\u00037yi\u0011\u0001\b\u0006\u0002;\u0005)1oY1mC&\u0011q\u0004\b\u0002\u0007\u0003:L(+\u001a4\u0002\t9\u000bW.Z\u000b\u0002EA\u00111E\n\b\u00037\u0011J!!\n\u000f\u0002\rA\u0013X\rZ3g\u0013\t9\u0003F\u0001\u0004TiJLgn\u001a\u0006\u0003Kq\t1\"[:CSR4Vm\u0019;peV\t1\u0006\u0005\u0002\u001cY%\u0011Q\u0006\b\u0002\b\u0005>|G.Z1o\u0003!I7oU5h]\u0016$\u0017aC5t5\u0016\u0014x.\u00138eKb\fQ!\u00138eKb,\u0012A\r\t\u0003gQb\u0001\u0001B\u00036\u0001\t\u0007aGA\u0001U#\t9$\b\u0005\u0002\u001cq%\u0011\u0011\b\b\u0002\b\u001d>$\b.\u001b8h!\tY2(\u0003\u0002=9\t\u0019\u0011I\\=\u0002\r!\f7/T5o\u0003\u0019A\u0017m]\'bq\u0006\u0019Q*\u001b8\u0002\u00075\u000b\u00070\u0001\u0005CSR<\u0016\u000e\u001a;i+\u0005\u0019\u0005CA\u000eE\u0013\t)EDA\u0002J]R\faA]1oI>l\u0017A\u0003:b]\u0012|WnU3fIR\u0011!\'\u0013\u0005\u0006\u00152\u0001\raS\u0001\u0005g\u0016,G\r\u0005\u0002M\u001b6\t1#\u0003\u0002O\'\t\t!,A\u0002J]R,\u0012!\u0015\t\u0004\u0019J\u0013\u0014BA*\u0014\u00059!#lQ8na\u0006t\u0017n\u001c8J]R\fA\u0001T8oOV\ta\u000bE\u0002M/JJ!\u0001W\n\u0003\u001f\u0011R6i\\7qC:LwN\u001c\'p]\u001e\fq\u0001J*ue&tw-F\u0001\\!\raELM\u0005\u0003;N\u0011\u0011\u0003\n.D_6\u0004\u0018M\\5p]N#(/\u001b8h\u0003\u0019\u0011\u0015nZ%oiV\t\u0001\rE\u0002MCJJ!AY\n\u0003#\u0011R6i\\7qC:LwN\u001c\"jO&sG/A\u0003baBd\u0017\u0010\u0006\u00023K\")a-\u0005a\u0001\u0017\u0006\ta\u000e
  #10 = Utf8               Name
  #11 = Utf8               ()Ljava/lang/String;
  #12 = Utf8               isBitVector
  #13 = Utf8               ()Z
  #14 = Utf8               isSigned
  #15 = Utf8               isZeroIndex
  #16 = Utf8               Index
  #17 = Utf8               ()Ljava/lang/Object;
  #18 = Utf8               ()TT;
  #19 = Utf8               hasMin
  #20 = Utf8               hasMax
  #21 = Utf8               Min
  #22 = Utf8               Max
  #23 = Utf8               BitWidth
  #24 = Utf8               ()I
  #25 = Utf8               random
  #26 = Utf8               randomSeed
  #27 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #28 = Utf8               (Lorg/sireum/Z;)TT;
  #29 = Utf8               seed
  #30 = Utf8               Int
  #31 = Utf8               ()Lorg/sireum/$ZCompanionInt;
  #32 = Utf8               ()Lorg/sireum/$ZCompanionInt<TT;>;
  #33 = Utf8               Long
  #34 = Utf8               ()Lorg/sireum/$ZCompanionLong;
  #35 = Utf8               ()Lorg/sireum/$ZCompanionLong<TT;>;
  #36 = Utf8               $String
  #37 = Utf8               ()Lorg/sireum/$ZCompanionString;
  #38 = Utf8               ()Lorg/sireum/$ZCompanionString<TT;>;
  #39 = Utf8               BigInt
  #40 = Utf8               ()Lorg/sireum/$ZCompanionBigInt;
  #41 = Utf8               ()Lorg/sireum/$ZCompanionBigInt<TT;>;
  #42 = Utf8               apply
  #43 = Utf8               n
  #44 = Utf8               Signature
  #45 = Utf8               MethodParameters
  #46 = Utf8               SourceFile
  #47 = Utf8               RuntimeVisibleAnnotations
  #48 = Utf8               ScalaInlineInfo
  #49 = Utf8               ScalaSig
{
  public abstract java.lang.String Name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isBitVector();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isSigned();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean isZeroIndex();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract T Index();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #18                          // ()TT;

  public abstract boolean hasMin();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean hasMax();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract T Min();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #18                          // ()TT;

  public abstract T Max();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #18                          // ()TT;

  public abstract int BitWidth();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract T random();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #18                          // ()TT;

  public abstract T randomSeed(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #28                          // (Lorg/sireum/Z;)TT;
    MethodParameters:
      Name                           Flags
      seed                           final

  public abstract org.sireum.$ZCompanionInt<T> Int();
    descriptor: ()Lorg/sireum/$ZCompanionInt;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #32                          // ()Lorg/sireum/$ZCompanionInt<TT;>;

  public abstract org.sireum.$ZCompanionLong<T> Long();
    descriptor: ()Lorg/sireum/$ZCompanionLong;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #35                          // ()Lorg/sireum/$ZCompanionLong<TT;>;

  public abstract org.sireum.$ZCompanionString<T> $String();
    descriptor: ()Lorg/sireum/$ZCompanionString;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #38                          // ()Lorg/sireum/$ZCompanionString<TT;>;

  public abstract org.sireum.$ZCompanionBigInt<T> BigInt();
    descriptor: ()Lorg/sireum/$ZCompanionBigInt;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #41                          // ()Lorg/sireum/$ZCompanionBigInt<TT;>;

  public abstract T apply(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #28                          // (Lorg/sireum/Z;)TT;
    MethodParameters:
      Name                           Flags
      n                              final
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "Z.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u001d4qAE\n\u0011\u0002G\u0005\u0001\u0004C\u0003!\u0001\u0019\u0005\u0011\u0005C\u0003*\u0001\u0019\u0005!\u0006C\u0003/\u0001\u0019\u0005!\u0006C\u00030\u0001\u0019\u0005!\u0006C\u00031\u0001\u0019\u0005\u0011\u0007C\u0003>\u0001\u0019\u0005!\u0006C\u0003?\u0001\u0019\u0005!\u0006C\u0003@\u0001\u0019\u0005\u0011\u0007C\u0003A\u0001\u0019\u0005\u0011\u0007C\u0003B\u0001\u0019\u0005!\tC\u0003G\u0001\u0019\u0005\u0011\u0007C\u0003H\u0001\u0019\u0005\u0001\nC\u0003P\u0001\u0019\u0005\u0001\u000bC\u0003U\u0001\u0019\u0005Q\u000bC\u0003Z\u0001\u0019\u0005!\fC\u0003_\u0001\u0019\u0005q\fC\u0003d\u0001\u0019\u0005AMA\u0006%5\u000e{W\u000e]1oS>t\'B\u0001\u000b\u0016\u0003\u0019\u0019\u0018N]3v[*\ta#A\u0002pe\u001e\u001c\u0001!\u0006\u0002\u001aiM\u0011\u0001A\u0007\t\u00037yi\u0011\u0001\b\u0006\u0002;\u0005)1oY1mC&\u0011q\u0004\b\u0002\u0007\u0003:L(+\u001a4\u0002\t9\u000bW.Z\u000b\u0002EA\u00111E\n\b\u00037\u0011J!!\n\u000f\u0002\rA\u0013X\rZ3g\u0013\t9\u0003F\u0001\u0004TiJLgn\u001a\u0006\u0003Kq\t1\"[:CSR4Vm\u0019;peV\t1\u0006\u0005\u0002\u001cY%\u0011Q\u0006\b\u0002\b\u0005>|G.Z1o\u0003!I7oU5h]\u0016$\u0017aC5t5\u0016\u0014x.\u00138eKb\fQ!\u00138eKb,\u0012A\r\t\u0003gQb\u0001\u0001B\u00036\u0001\t\u0007aGA\u0001U#\t9$\b\u0005\u0002\u001cq%\u0011\u0011\b\b\u0002\b\u001d>$\b.\u001b8h!\tY2(\u0003\u0002=9\t\u0019\u0011I\\=\u0002\r!\f7/T5o\u0003\u0019A\u0017m]\'bq\u0006\u0019Q*\u001b8\u0002\u00075\u000b\u00070\u0001\u0005CSR<\u0016\u000e\u001a;i+\u0005\u0019\u0005CA\u000eE\u0013\t)EDA\u0002J]R\faA]1oI>l\u0017A\u0003:b]\u0012|WnU3fIR\u0011!\'\u0013\u0005\u0006\u00152\u0001\raS\u0001\u0005g\u0016,G\r\u0005\u0002M\u001b6\t1#\u0003\u0002O\'\t\t!,A\u0002J]R,\u0012!\u0015\t\u0004\u0019J\u0013\u0014BA*\u0014\u00059!#lQ8na\u0006t\u0017n\u001c8J]R\fA\u0001T8oOV\ta\u000bE\u0002M/JJ!\u0001W\n\u0003\u001f\u0011R6i\\7qC:LwN\u001c\'p]\u001e\fq\u0001J*ue&tw-F\u0001\\!\raELM\u0005\u0003;N\u0011\u0011\u0003\n.D_6\u0004\u0018M\\5p]N#(/\u001b8h\u0003\u0019\u0011\u0015nZ%oiV\t\u0001\rE\u0002MCJJ!AY\n\u0003#\u0011R6i\\7qC:LwN\u001c\"jO&sG/A\u0003baBd\u0017\u0010\u0006\u00023K\")a-\u0005a\u0001\u0017\u0006\ta\u000e"
    )
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 24 00 25 00 00 27 00 28 00 00 17
   00 18 00 00 10 00 11 00 00 1E 00 1F 00 00 21 00
   22 00 00 16 00 11 00 00 15 00 11 00 00 0A 00 0B
   00 00 2A 00 1B 00 00 14 00 0D 00 00 13 00 0D 00
   00 0C 00 0D 00 00 0E 00 0D 00 00 0F 00 0D 00 00
   19 00 11 00 00 1A 00 1B 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
