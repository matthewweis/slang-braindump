Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/SubProcess.class
  Last modified May 29, 2022; size 8424 bytes
  SHA-256 checksum 4c7ddefb84e2c8d0f09e713b2d18e6152bc95df85af5a4e8f8baf77e80a18331
  Compiled from "SubProcess.scala"
public class os.SubProcess implements java.lang.AutoCloseable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/SubProcess
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 22, attributes: 6
Constant pool:
    #1 = Utf8               os/SubProcess
    #2 = Class              #1            // os/SubProcess
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/lang/AutoCloseable
    #6 = Class              #5            // java/lang/AutoCloseable
    #7 = Utf8               SubProcess.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\t\u0005h\u0001B*U\u0001]C\u0001b\u0019\u0001\u0003\u0006\u0004%\t\u0001\u001a\u0005\tQ\u0002\u0011\t\u0011)A\u0005K\"A\u0011\u000e\u0001BC\u0002\u0013\u0005!\u000e\u0003\u0005u\u0001\t\u0005\t\u0015!\u0003l\u0011!)\bA!b\u0001\n\u0003Q\u0007\u0002\u0003<\u0001\u0005\u0003\u0005\u000b\u0011B6\t\u0011]\u0004!Q1A\u0005\u0002)D\u0001\u0002\u001f\u0001\u0003\u0002\u0003\u0006Ia\u001b\u0005\u0006s\u0002!\tA\u001f\u0005\n\u0003\u0007\u0001!\u0019!C\u0001\u0003\u000bA\u0001Ba)\u0001A\u0003%\u0011q\u0001\u0005\n\u0005K\u0003!\u0019!C\u0001\u0005OC\u0001Ba+\u0001A\u0003%!\u0011\u0016\u0005\n\u0005[\u0003!\u0019!C\u0001\u0005OC\u0001Ba,\u0001A\u0003%!\u0011\u0016\u0005\b\u0005c\u0003A\u0011\u0001B\"\u0011\u001d\u0011\u0019\f\u0001C\u0001\u0005_BqA!.\u0001\t\u0003\u0011i\u0001C\u0004\u00038\u0002!\tA!\u0004\t\u000f\t=\u0001\u0001\"\u0001\u0003\u000e!9!\u0011\u0018\u0001\u0005\u0002\tm\u0006\"\u0003Ba\u0001E\u0005I\u0011\u0001Bb\u0011\u001d\u0011I\u000e\u0001C\u0001\u00057D\u0011Ba8\u0001#\u0003%\tAa1\b\u000f\u0005-A\u000b#\u0001\u0002\u000e\u001911\u000b\u0016E\u0001\u0003\u001fAa!\u001f\u000e\u0005\u0002\u0005]aABA\r5\u0001\tY\u0002C\u0005d9\t\u0015\r\u0011\"\u0001\u00020!I\u0001\u000e\bB\u0001B\u0003%\u0011Q\u0004\u0005\u0007sr!\t!!\r\t\u0013\u0005eBD1A\u0005\u0002\u0005m\u0002\u0002CA\"9\u0001\u0006I!!\u0010\t\u0013\u0005\u0015CD1A\u0005\u0002\u0005\u001d\u0003\u0002CA(9\u0001\u0006I!!\u0013\t\u000f\u0005EC\u0004\"\u0001\u0002T!9\u0011\u0011\u000b\u000f\u0005B\u0005\u0015\u0004bBA)9\u0011\u0005\u0013Q\u000f\u0005\b\u0003\u0003cB\u0011AAB\u0011\u001d\ty\t\bC\u0001\u0003#Cq!!&\u001d\t\u0003\t9\nC\u0004\u0002\u001cr!\t!!(\t\u000f\u0005\u0005F\u0004\"\u0001\u0002$\"9\u0011q\u0015\u000f\u0005\u0002\u0005%\u0006bBAZ9\u0011\u0005\u0011Q\u0017\u0005\b\u0003\u007fcB\u0011AAa\u0011\u001d\tY\r\bC\u0001\u0003\u001bDq!!;\u001d\t\u0003\tY\u000fC\u0004\u0002pr!\t!!=\t\u000f\u0005UH\u0004\"\u0001\u0002x\"9\u0011\u0011\u000b\u000f\u0005\u0002\u0005m\bbBA)9\u0011\u0005\u0011q \u0005\b\u0005\u0017aB\u0011\tB\u0007\u0011\u001d\u0011y\u0001\bC!\u0005\u001b1a!a\n\u001b\u0001\tE\u0001\"C28\u0005\u000b\u0007I\u0011\u0001B\u0015\u0011%AwG!A!\u0002\u0013\u0011\u0019\u0002\u0003\u0004zo\u0011\u0005!1\u0006\u0005\n\u0003s9$\u0019!C\u0001\u0005cA\u0001\"a\u00118A\u0003%!1\u0007\u0005\n\u0003\u000b:$\u0019!C\u0001\u0005sA\u0001\"a\u00148A\u0003%!1\b\u0005\b\u0005\u0003:D\u0011\u0001B\"\u0011\u001d\u0011\te\u000eC!\u0005\u000bBqA!\u00118\t\u0003\u0012I\u0005C\u0004\u0003R]\"\tAa\u0015\t\u000f\tEs\u0007\"\u0001\u0003X!9!qL\u001c\u0005\u0002\t\u0005\u0004b\u0002B7o\u0011\u0005!q\u000e\u0005\b\u0005c:D\u0011\u0001B:\u0011\u001d\u0011)h\u000eC\u0001\u0005\u0007BqAa\u001e8\t\u0003\u0011I\bC\u0004\u0003\u0002^\"\tAa\u0011\t\u000f\t\ru\u0007\"\u0001\u0003\u0006\"9!qQ\u001c\u0005\u0002\t\r\u0003b\u0002BEo\u0011\u0005!1\u0012\u0005\b\u0005\u001b;D\u0011\u0001BH\u0011\u001d\u0011\tj\u000eC\u0001\u0005\'CqA!&8\t\u0003\u00119\nC\u0004\u0003\u001e^\"\tAa&\t\u000f\t}u\u0007\"\u0001\u0003\"\"9!qB\u001c\u0005B\t5!AC*vEB\u0013xnY3tg*\tQ+\u0001\u0002pg\u000e\u00011c\u0001\u0001YAB\u0011\u0011LX\u0007\u00025*\u00111\fX\u0001\u0005Y\u0006twMC\u0001^\u0003\u0011Q\u0017M^1\n\u0005}S&AB(cU\u0016\u001cG\u000f\u0005\u0002ZC&\u0011!M\u0017\u0002\u000e\u0003V$xn\u00117pg\u0016\f\'\r\\3\u0002\u000f]\u0014\u0018\r\u001d9fIV\tQ\r\u0005\u0002ZM&\u0011qM\u0017\u0002\b!J|7-Z:t\u0003!9(/\u00199qK\u0012\u0004\u0013!E5oaV$\b+^7qKJ$\u0006N]3bIV\t1\u000eE\u0002m_Fl\u0011!\u001c\u0006\u0002]\u0006)1oY1mC&\u0011\u0001/\u001c\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005e\u0013\u0018BA:[\u0005\u0019!\u0006N]3bI\u0006\u0011\u0012N\u001c9viB+X\u000e]3s)\"\u0014X-\u00193!\u0003IyW\u000f\u001e9viB+X\u000e]3s)\"\u0014X-\u00193\u0002\'=,H\u000f];u!Vl\u0007/\u001a:UQJ,\u0017\r\u001a\u0011\u0002#\u0015\u0014(o\u001c:Qk6\u0004XM\u001d+ie\u0016\fG-\u0001\nfeJ|\'\u000fU;na\u0016\u0014H\u000b\u001b:fC\u0012\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0004|{z|\u0018\u0011\u0001\t\u0003y\u0002i\u0011\u0001\u0016\u0005\u0006G&\u0001\r!\u001a\u0005\u0006S&\u0001\ra\u001b\u0005\u0006k&\u0001\ra\u001b\u0005\u0006o&\u0001\ra[\u0001\u0006gR$\u0017N\\\u000b\u0003\u0003\u000f\u00012!!\u0003\u001d\u001d\ta\u0018$\u0001\u0006Tk\n\u0004&o\\2fgN\u0004\"\u0001 \u000e\u0014\u0007i\t\t\u0002E\u0002m\u0003\'I1!!\u0006n\u0005\u0019\te.\u001f*fMR\u0011\u0011Q\u0002\u0002\f\u0013:\u0004X\u000f^*ue\u0016\fWnE\u0003\u001d\u0003;\tI\u0003\u0005\u0003\u0002 \u0005\u0015RBAA\u0011\u0015\r\t\u0019\u0003X\u0001\u0003S>LA!a\n\u0002\"\taq*\u001e;qkR\u001cFO]3b[B!\u0011qDA\u0016\u0013\u0011\ti#!\t\u0003\u0015\u0011\u000bG/Y(viB,H/\u0006\u0002\u0002\u001eQ!\u00111GA\u001c!\r\t)\u0004H\u0007\u00025!11m\ba\u0001\u0003;\tA\u0001Z1uCV\u0011\u0011Q\b\t\u0005\u0003?\ty$\u0003\u0003\u0002B\u0005\u0005\"\u0001\u0005#bi\u0006|U\u000f\u001e9viN#(/Z1n\u0003\u0015!\u0017\r^1!\u0003!\u0011WO\u001a4fe\u0016$WCAA%!\u0011\ty\"a\u0013\n\t\u00055\u0013\u0011\u0005\u0002\u000f\u0005V4g-\u001a:fI^\u0013\u0018\u000e^3s\u0003%\u0011WO\u001a4fe\u0016$\u0007%A\u0003xe&$X\r\u0006\u0003\u0002V\u0005m\u0003c\u00017\u0002X%\u0019\u0011\u0011L7\u0003\tUs\u0017\u000e\u001e\u0005\b\u0003;\"\u0003\u0019AA0\u0003\u0005\u0011\u0007c\u00017\u0002b%\u0019\u00111M7\u0003\u0007%sG\u000f\u0006\u0003\u0002V\u0005\u001d\u0004bBA/K\u0001\u0007\u0011\u0011\u000e\t\u0006Y\u0006-\u0014qN\u0005\u0004\u0003[j\'!B!se\u0006L\bc\u00017\u0002r%\u0019\u00111O7\u0003\t\tKH/\u001a\u000b\t\u0003+\n9(!\u001f\u0002~!9\u0011Q\f\u0014A\u0002\u0005%\u0004bBA>M\u0001\u0007\u0011qL\u0001\u0004_\u001a4\u0007bBA@M\u0001\u0007\u0011qL\u0001\u0004Y\u0016t\u0017\u0001D<sSR,\'i\\8mK\u0006tG\u0003BA+\u0003\u000bCq!a\"(\u0001\u0004\tI)A\u0001w!\ra\u00171R\u0005\u0004\u0003\u001bk\'a\u0002\"p_2,\u0017M\\\u0001\noJLG/\u001a\"zi\u0016$B!!\u0016\u0002\u0014\"9\u0011q\u0011\u0015A\u0002\u0005}\u0013AC<sSR,7\u000b[8siR!\u0011QKAM\u0011\u001d\t9)\u000ba\u0001\u0003?\n\u0011b\u001e:ji\u0016\u001c\u0005.\u0019:\u0015\t\u0005U\u0013q\u0014\u0005\b\u0003\u000fS\u0003\u0019AA0\u0003!9(/\u001b;f\u0013:$H\u0003BA+\u0003KCq!a\",\u0001\u0004\ty&A\u0005xe&$X\rT8oOR!\u0011QKAV\u0011\u001d\t9\t\fa\u0001\u0003[\u00032\u0001\\AX\u0013\r\t\t,\u001c\u0002\u0005\u0019>tw-\u0001\u0006xe&$XM\u00127pCR$B!!\u0016\u00028\"9\u0011qQ\u0017A\u0002\u0005e\u0006c\u00017\u0002<&\u0019\u0011QX7\u0003\u000b\u0019cw.\u0019;\u0002\u0017]\u0014\u0018\u000e^3E_V\u0014G.\u001a\u000b\u0005\u0003+\n\u0019\rC\u0004\u0002\b:\u0002\r!!2\u0011\u00071\f9-C\u0002\u0002J6\u0014a\u0001R8vE2,\u0017AC<sSR,\')\u001f;fgR!\u0011QKAh\u0011\u001d\t\tn\fa\u0001\u0003\'\f\u0011a\u001d\t\u0005\u0003+\f\u0019O\u0004\u0003\u0002X\u0006}\u0007cAAm[6\u0011\u00111\u001c\u0006\u0004\u0003;4\u0016A\u0002\u001fs_>$h(C\u0002\u0002b6\fa\u0001\u0015:fI\u00164\u0017\u0002BAs\u0003O\u0014aa\u0015;sS:<\'bAAq[\u0006QqO]5uK\u000eC\u0017M]:\u0015\t\u0005U\u0013Q\u001e\u0005\b\u0003#\u0004\u0004\u0019AAj\u0003!9(/\u001b;f+R3E\u0003BA+\u0003gDq!!52\u0001\u0004\t\u0019.A\u0005xe&$X\rT5oKR!\u0011QKA}\u0011\u001d\t\tN\ra\u0001\u0003\'$B!!\u0016\u0002~\"9\u0011\u0011[\u001aA\u0002\u0005MG\u0003BA+\u0005\u0003Aq!!55\u0001\u0004\u0011\u0019\u0001E\u0003m\u0003W\u0012)\u0001E\u0002m\u0005\u000fI1A!\u0003n\u0005\u0011\u0019\u0005.\u0019:\u0002\u000b\u0019dWo\u001d5\u0015\u0005\u0005U\u0013!B2m_N,7cB\u001c\u0003\u0014\t]!Q\u0004\t\u0005\u0003?\u0011)\"\u0003\u0003\u0002\u001a\u0005\u0005\u0002\u0003BA\u0010\u00053IAAa\u0007\u0002\"\tIA)\u0019;b\u0013:\u0004X\u000f\u001e\t\u0005\u0005?\u0011)#\u0004\u0002\u0003\")\u0011!1E\u0001\u0005O\u0016t\u00170\u0003\u0003\u0003(\t\u0005\"\u0001\u0003\"zi\u0016$\u0015\r^1\u0016\u0005\tMA\u0003\u0002B\u0017\u0005_\u00012!!\u000e8\u0011\u0019\u0019\'\b1\u0001\u0003\u0014U\u0011!1\u0007\t\u0005\u0003?\u0011)$\u0003\u0003\u00038\u0005\u0005\"a\u0004#bi\u0006Le\u000e];u\'R\u0014X-Y7\u0016\u0005\tm\u0002\u0003BA\u0010\u0005{IAAa\u0010\u0002\"\tq!)\u001e4gKJ,GMU3bI\u0016\u0014\u0018\u0001\u0002:fC\u0012$\"!a\u0018\u0015\t\u0005}#q\t\u0005\b\u0003;\u0002\u0005\u0019AA5)!\tyFa\u0013\u0003N\t=\u0003bBA/\u0003\u0002\u0007\u0011\u0011\u000e\u0005\b\u0003w\n\u0005\u0019AA0\u0011\u001d\ty(\u0011a\u0001\u0003?\n\u0011B]3bI\u001a+H\u000e\\=\u0015\t\u0005U#Q\u000b\u0005\b\u0003;\u0012\u0005\u0019AA5)!\t)F!\u0017\u0003\\\tu\u0003bBA/\u0007\u0002\u0007\u0011\u0011\u000e\u0005\b\u0003w\u001a\u0005\u0019AA0\u0011\u001d\tyh\u0011a\u0001\u0003?\n\u0011b]6ja\nKH/Z:\u0015\t\t\r$\u0011\u000e\t\u0004Y\n\u0015\u0014b\u0001B4[\n9aj\u001c;iS:<\u0007b\u0002B6\t\u0002\u0007\u0011qL\u0001\u0002]\u0006Y!/Z1e\u0005>|G.Z1o)\t\tI)\u0001\u0005sK\u0006$\')\u001f;f)\t\ty\'\u0001\tsK\u0006$WK\\:jO:,GMQ=uK\u0006I!/Z1e\'\"|\'\u000f\u001e\u000b\u0003\u0005w\u00022\u0001\u001cB?\u0013\r\u0011y(\u001c\u0002\u0006\'\"|\'\u000f^\u0001\u0012e\u0016\fG-\u00168tS\u001etW\rZ*i_J$\u0018\u0001\u0003:fC\u0012\u001c\u0005.\u0019:\u0015\u0005\t\u0015\u0011a\u0002:fC\u0012Le\u000e^\u0001\te\u0016\fG\rT8oOR\u0011\u0011QV\u0001\ne\u0016\fGM\u00127pCR$\"!!/\u0002\u0015I,\u0017\r\u001a#pk\ndW\r\u0006\u0002\u0002F\u00069!/Z1e+R3EC\u0001BM!\rI&1T\u0005\u0004\u0003KT\u0016\u0001\u0003:fC\u0012d\u0015N\\3\u0002\u000b\tLH/Z:\u0016\u0005\u0005%\u0014AB:uI&t\u0007%\u0001\u0004ti\u0012|W\u000f^\u000b\u0003\u0005S\u00032!!\u00038\u0003\u001d\u0019H\u000fZ8vi\u0002\naa\u001d;eKJ\u0014\u0018aB:uI\u0016\u0014(\u000fI\u0001\tKbLGoQ8eK\u00069\u0011n]!mSZ,\u0017a\u00023fgR\u0014x._\u0001\u0010I\u0016\u001cHO]8z\r>\u00148-\u001b2ms\u00069q/Y5u\r>\u0014H\u0003BAE\u0005{C\u0011Ba0\u0016!\u0003\u0005\r!!,\u0002\u000fQLW.Z8vi\u0006\tr/Y5u\r>\u0014H\u0005Z3gCVdG\u000fJ\u0019\u0016\u0005\t\u0015\'\u0006BAW\u0005\u000f\\#A!3\u0011\t\t-\'Q[\u0007\u0003\u0005\u001bTAAa4\u0003R\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0004\u0005\'l\u0017AC1o]>$\u0018\r^5p]&!!q\u001bBg\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u0005U>Lg\u000e\u0006\u0003\u0002\n\nu\u0007\"\u0003B`/A\u0005\t\u0019AAW\u00039Qw.\u001b8%I\u00164\u0017-\u001e7uIE\u0002
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               os/SubProcess$InputStream
   #17 = Class              #16           // os/SubProcess$InputStream
   #18 = Utf8               InputStream
   #19 = Utf8               os/SubProcess$OutputStream
   #20 = Class              #19           // os/SubProcess$OutputStream
   #21 = Utf8               OutputStream
   #22 = Utf8               wrapped
   #23 = Utf8               Ljava/lang/Process;
   #24 = Utf8               inputPumperThread
   #25 = Utf8               Lscala/Option;
   #26 = Utf8               Lscala/Option<Ljava/lang/Thread;>;
   #27 = Utf8               outputPumperThread
   #28 = Utf8               errorPumperThread
   #29 = Utf8               stdin
   #30 = Utf8               Los/SubProcess$InputStream;
   #31 = Utf8               stdout
   #32 = Utf8               Los/SubProcess$OutputStream;
   #33 = Utf8               stderr
   #34 = Utf8               ()Ljava/lang/Process;
   #35 = NameAndType        #22:#23       // wrapped:Ljava/lang/Process;
   #36 = Fieldref           #2.#35        // os/SubProcess.wrapped:Ljava/lang/Process;
   #37 = Utf8               this
   #38 = Utf8               Los/SubProcess;
   #39 = Utf8               ()Lscala/Option;
   #40 = Utf8               ()Lscala/Option<Ljava/lang/Thread;>;
   #41 = NameAndType        #24:#25       // inputPumperThread:Lscala/Option;
   #42 = Fieldref           #2.#41        // os/SubProcess.inputPumperThread:Lscala/Option;
   #43 = NameAndType        #27:#25       // outputPumperThread:Lscala/Option;
   #44 = Fieldref           #2.#43        // os/SubProcess.outputPumperThread:Lscala/Option;
   #45 = NameAndType        #28:#25       // errorPumperThread:Lscala/Option;
   #46 = Fieldref           #2.#45        // os/SubProcess.errorPumperThread:Lscala/Option;
   #47 = Utf8               ()Los/SubProcess$InputStream;
   #48 = NameAndType        #29:#30       // stdin:Los/SubProcess$InputStream;
   #49 = Fieldref           #2.#48        // os/SubProcess.stdin:Los/SubProcess$InputStream;
   #50 = Utf8               ()Los/SubProcess$OutputStream;
   #51 = NameAndType        #31:#32       // stdout:Los/SubProcess$OutputStream;
   #52 = Fieldref           #2.#51        // os/SubProcess.stdout:Los/SubProcess$OutputStream;
   #53 = NameAndType        #33:#32       // stderr:Los/SubProcess$OutputStream;
   #54 = Fieldref           #2.#53        // os/SubProcess.stderr:Los/SubProcess$OutputStream;
   #55 = Utf8               exitCode
   #56 = Utf8               ()I
   #57 = NameAndType        #22:#34       // wrapped:()Ljava/lang/Process;
   #58 = Methodref          #2.#57        // os/SubProcess.wrapped:()Ljava/lang/Process;
   #59 = Utf8               java/lang/Process
   #60 = Class              #59           // java/lang/Process
   #61 = Utf8               exitValue
   #62 = NameAndType        #61:#56       // exitValue:()I
   #63 = Methodref          #60.#62       // java/lang/Process.exitValue:()I
   #64 = Utf8               isAlive
   #65 = Utf8               ()Z
   #66 = NameAndType        #64:#65       // isAlive:()Z
   #67 = Methodref          #60.#66       // java/lang/Process.isAlive:()Z
   #68 = Utf8               destroy
   #69 = Utf8               ()V
   #70 = NameAndType        #68:#69       // destroy:()V
   #71 = Methodref          #60.#70       // java/lang/Process.destroy:()V
   #72 = Utf8               destroyForcibly
   #73 = NameAndType        #72:#34       // destroyForcibly:()Ljava/lang/Process;
   #74 = Methodref          #60.#73       // java/lang/Process.destroyForcibly:()Ljava/lang/Process;
   #75 = Utf8               close
   #76 = Utf8               waitFor
   #77 = Utf8               (J)Z
   #78 = Utf8               timeout
   #79 = Long               -1l
   #81 = NameAndType        #76:#56       // waitFor:()I
   #82 = Methodref          #60.#81       // java/lang/Process.waitFor:()I
   #83 = Utf8               java/util/concurrent/TimeUnit
   #84 = Class              #83           // java/util/concurrent/TimeUnit
   #85 = Utf8               MILLISECONDS
   #86 = Utf8               Ljava/util/concurrent/TimeUnit;
   #87 = NameAndType        #85:#86       // MILLISECONDS:Ljava/util/concurrent/TimeUnit;
   #88 = Fieldref           #84.#87       // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
   #89 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z
   #90 = NameAndType        #76:#89       // waitFor:(JLjava/util/concurrent/TimeUnit;)Z
   #91 = Methodref          #60.#90       // java/lang/Process.waitFor:(JLjava/util/concurrent/TimeUnit;)Z
   #92 = Utf8               J
   #93 = Utf8               waitFor$default$1
   #94 = Utf8               ()J
   #95 = Utf8               join
   #96 = NameAndType        #76:#77       // waitFor:(J)Z
   #97 = Methodref          #2.#96        // os/SubProcess.waitFor:(J)Z
   #98 = Methodref          #2.#70        // os/SubProcess.destroy:()V
   #99 = NameAndType        #72:#69       // destroyForcibly:()V
  #100 = Methodref          #2.#99        // os/SubProcess.destroyForcibly:()V
  #101 = Utf8               scala/runtime/BoxesRunTime
  #102 = Class              #101          // scala/runtime/BoxesRunTime
  #103 = Utf8               boxToBoolean
  #104 = Utf8               (Z)Ljava/lang/Boolean;
  #105 = NameAndType        #103:#104     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #106 = Methodref          #102.#105     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #107 = Utf8               scala/runtime/BoxedUnit
  #108 = Class              #107          // scala/runtime/BoxedUnit
  #109 = Utf8               UNIT
  #110 = Utf8               Lscala/runtime/BoxedUnit;
  #111 = NameAndType        #109:#110     // UNIT:Lscala/runtime/BoxedUnit;
  #112 = Fieldref           #108.#111     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #113 = NameAndType        #27:#39       // outputPumperThread:()Lscala/Option;
  #114 = Methodref          #2.#113       // os/SubProcess.outputPumperThread:()Lscala/Option;
  #115 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #116 = MethodType         #115          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #117 = Utf8               $anonfun$join$1$adapted
  #118 = Utf8               (Ljava/lang/Thread;)Ljava/lang/Object;
  #119 = NameAndType        #117:#118     // $anonfun$join$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #120 = Methodref          #2.#119       // os/SubProcess.$anonfun$join$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #121 = MethodHandle       6:#120        // REF_invokeStatic os/SubProcess.$anonfun$join$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #122 = MethodType         #118          //  (Ljava/lang/Thread;)Ljava/lang/Object;
  #123 = Integer            5
  #124 = Integer            1
  #125 = Utf8               java/lang/invoke/LambdaMetafactory
  #126 = Class              #125          // java/lang/invoke/LambdaMetafactory
  #127 = Utf8               altMetafactory
  #128 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #129 = NameAndType        #127:#128     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #130 = Methodref          #126.#129     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #131 = MethodHandle       6:#130        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #132 = Utf8               apply
  #133 = Utf8               ()Lscala/Function1;
  #134 = NameAndType        #132:#133     // apply:()Lscala/Function1;
  #135 = InvokeDynamic      #0:#134       // #0:apply:()Lscala/Function1;
  #136 = Utf8               scala/Option
  #137 = Class              #136          // scala/Option
  #138 = Utf8               foreach
  #139 = Utf8               (Lscala/Function1;)V
  #140 = NameAndType        #138:#139     // foreach:(Lscala/Function1;)V
  #141 = Methodref          #137.#140     // scala/Option.foreach:(Lscala/Function1;)V
  #142 = NameAndType        #28:#39       // errorPumperThread:()Lscala/Option;
  #143 = Methodref          #2.#142       // os/SubProcess.errorPumperThread:()Lscala/Option;
  #144 = Utf8               $anonfun$join$2$adapted
  #145 = NameAndType        #144:#118     // $anonfun$join$2$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #146 = Methodref          #2.#145       // os/SubProcess.$anonfun$join$2$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #147 = MethodHandle       6:#146        // REF_invokeStatic os/SubProcess.$anonfun$join$2$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  #148 = InvokeDynamic      #1:#134       // #1:apply:()Lscala/Function1;
  #149 = Utf8               exitedCleanly
  #150 = Utf8               Z
  #151 = Utf8               join$default$1
  #152 = Utf8               $anonfun$join$1
  #153 = Utf8               (Ljava/lang/Thread;)V
  #154 = Utf8               x$1
  #155 = Utf8               java/lang/Thread
  #156 = Class              #155          // java/lang/Thread
  #157 = NameAndType        #95:#69       // join:()V
  #158 = Methodref          #156.#157     // java/lang/Thread.join:()V
  #159 = Utf8               Ljava/lang/Thread;
  #160 = Utf8               $anonfun$join$2
  #161 = Utf8               x$2
  #162 = Utf8               <init>
  #163 = Utf8               (Ljava/lang/Process;Lscala/Option;Lscala/Option;Lscala/Option;)V
  #164 = Utf8               (Ljava/lang/Process;Lscala/Option<Ljava/lang/Thread;>;Lscala/Option<Ljava/lang/Thread;>;Lscala/Option<Ljava/lang/Thread;>;)V
  #165 = NameAndType        #162:#69      // "<init>":()V
  #166 = Methodref          #4.#165       // java/lang/Object."<init>":()V
  #167 = Utf8               getOutputStream
  #168 = Utf8               ()Ljava/io/OutputStream;
  #169 = NameAndType        #167:#168     // getOutputStream:()Ljava/io/OutputStream;
  #170 = Methodref          #60.#169      // java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
  #171 = Utf8               (Ljava/io/OutputStream;)V
  #172 = NameAndType        #162:#171     // "<init>":(Ljava/io/OutputStream;)V
  #173 = Methodref          #17.#172      // os/SubProcess$InputStream."<init>":(Ljava/io/OutputStream;)V
  #174 = Utf8               getInputStream
  #175 = Utf8               ()Ljava/io/InputStream;
  #176 = NameAndType        #174:#175     // getInputStream:()Ljava/io/InputStream;
  #177 = Methodref          #60.#176      // java/lang/Process.getInputStream:()Ljava/io/InputStream;
  #178 = Utf8               (Ljava/io/InputStream;)V
  #179 = NameAndType        #162:#178     // "<init>":(Ljava/io/InputStream;)V
  #180 = Methodref          #20.#179      // os/SubProcess$OutputStream."<init>":(Ljava/io/InputStream;)V
  #181 = Utf8               getErrorStream
  #182 = NameAndType        #181:#175     // getErrorStream:()Ljava/io/InputStream;
  #183 = Methodref          #60.#182      // java/lang/Process.getErrorStream:()Ljava/io/InputStream;
  #184 = NameAndType        #152:#153     // $anonfun$join$1:(Ljava/lang/Thread;)V
  #185 = Methodref          #2.#184       // os/SubProcess.$anonfun$join$1:(Ljava/lang/Thread;)V
  #186 = NameAndType        #160:#153     // $anonfun$join$2:(Ljava/lang/Thread;)V
  #187 = Methodref          #2.#186       // os/SubProcess.$anonfun$join$2:(Ljava/lang/Thread;)V
  #188 = Utf8               $deserializeLambda$
  #189 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #190 = Utf8               scala/runtime/LambdaDeserialize
  #191 = Class              #190          // scala/runtime/LambdaDeserialize
  #192 = Utf8               bootstrap
  #193 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #194 = NameAndType        #192:#193     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #195 = Methodref          #191.#194     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #196 = MethodHandle       6:#195        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #197 = Utf8               lambdaDeserialize
  #198 = NameAndType        #197:#189     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #199 = InvokeDynamic      #2:#198       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #200 = Utf8               Signature
  #201 = Utf8               Code
  #202 = Utf8               LineNumberTable
  #203 = Utf8               LocalVariableTable
  #204 = Utf8               StackMapTable
  #205 = Utf8               MethodParameters
  #206 = Utf8               InnerClasses
  #207 = Utf8               SourceFile
  #208 = Utf8               RuntimeVisibleAnnotations
  #209 = Utf8               BootstrapMethods
  #210 = Utf8               ScalaInlineInfo
  #211 = Utf8               ScalaSig
{
  private final java.lang.Process wrapped;
    descriptor: Ljava/lang/Process;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Option<java.lang.Thread> inputPumperThread;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Lscala/Option<Ljava/lang/Thread;>;

  private final scala.Option<java.lang.Thread> outputPumperThread;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Lscala/Option<Ljava/lang/Thread;>;

  private final scala.Option<java.lang.Thread> errorPumperThread;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Lscala/Option<Ljava/lang/Thread;>;

  private final os.SubProcess$InputStream stdin;
    descriptor: Los/SubProcess$InputStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final os.SubProcess$OutputStream stdout;
    descriptor: Los/SubProcess$OutputStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final os.SubProcess$OutputStream stderr;
    descriptor: Los/SubProcess$OutputStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public java.lang.Process wrapped();
    descriptor: ()Ljava/lang/Process;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #36                 // Field wrapped:Ljava/lang/Process;
         4: areturn
      LineNumberTable:
        line 10: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;

  public scala.Option<java.lang.Thread> inputPumperThread();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #42                 // Field inputPumperThread:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;
    Signature: #40                          // ()Lscala/Option<Ljava/lang/Thread;>;

  public scala.Option<java.lang.Thread> outputPumperThread();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #44                 // Field outputPumperThread:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;
    Signature: #40                          // ()Lscala/Option<Ljava/lang/Thread;>;

  public scala.Option<java.lang.Thread> errorPumperThread();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field errorPumperThread:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;
    Signature: #40                          // ()Lscala/Option<Ljava/lang/Thread;>;

  public os.SubProcess$InputStream stdin();
    descriptor: ()Los/SubProcess$InputStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #49                 // Field stdin:Los/SubProcess$InputStream;
         4: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;

  public os.SubProcess$OutputStream stdout();
    descriptor: ()Los/SubProcess$OutputStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #52                 // Field stdout:Los/SubProcess$OutputStream;
         4: areturn
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;

  public os.SubProcess$OutputStream stderr();
    descriptor: ()Los/SubProcess$OutputStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #54                 // Field stderr:Los/SubProcess$OutputStream;
         4: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/SubProcess;

  public int exitCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
         4: invokevirtual #63                 // Method java/lang/Process.exitValue:()I
         7: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/SubProcess;

  public boolean isAlive();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
         4: invokevirtual #67                 // Method java/lang/Process.isAlive:()Z
         7: ireturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/SubProcess;

  public void destroy();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
         4: invokevirtual #71                 // Method java/lang/Process.destroy:()V
         7: return
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/SubProcess;

  public void destroyForcibly();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
         4: invokevirtual #74                 // Method java/lang/Process.destroyForcibly:()Ljava/lang/Process;
         7: pop
         8: return
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/SubProcess;

  public void close();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
         4: invokevirtual #71                 // Method java/lang/Process.destroy:()V
         7: return
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/SubProcess;

  public boolean waitFor(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: lload_1
         1: ldc2_w        #79                 // long -1l
         4: lcmp
         5: ifne          20
         8: aload_0
         9: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
        12: invokevirtual #82                 // Method java/lang/Process.waitFor:()I
        15: pop
        16: iconst_1
        17: goto          31
        20: aload_0
        21: invokevirtual #58                 // Method wrapped:()Ljava/lang/Process;
        24: lload_1
        25: getstatic     #88                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
        28: invokevirtual #91                 // Method java/lang/Process.waitFor:(JLjava/util/concurrent/TimeUnit;)Z
        31: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 52: 0
        line 53: 8
        line 54: 16
        line 56: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Los/SubProcess;
            0      32     1 timeout   J
    MethodParameters:
      Name                           Flags
      timeout                        final

  public long waitFor$default$1();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc2_w        #79                 // long -1l
         3: lreturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/SubProcess;

  public boolean join(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: lload_1
         2: invokevirtual #97                 // Method waitFor:(J)Z
         5: istore_3
         6: iload_3
         7: ifne          31
        10: aload_0
        11: invokevirtual #98                 // Method destroy:()V
        14: aload_0
        15: invokevirtual #100                // Method destroyForcibly:()V
        18: aload_0
        19: ldc2_w        #79                 // long -1l
        22: invokevirtual #97                 // Method waitFor:(J)Z
        25: invokestatic  #106                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        28: goto          34
        31: getstatic     #112                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        34: pop
        35: aload_0
        36: invokevirtual #114                // Method outputPumperThread:()Lscala/Option;
        39: invokedynamic #135,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        44: invokevirtual #141                // Method scala/Option.foreach:(Lscala/Function1;)V
        47: aload_0
        48: invokevirtual #143                // Method errorPumperThread:()Lscala/Option;
        51: invokedynamic #148,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        56: invokevirtual #141                // Method scala/Option.foreach:(Lscala/Function1;)V
        59: iload_3
        60: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 67: 0
        line 68: 6
        line 69: 10
        line 70: 14
        line 71: 18
        line 68: 31
        line 73: 35
        line 74: 47
        line 75: 59
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      54     3 exitedCleanly   Z
            0      61     0  this   Los/SubProcess;
            0      61     1 timeout   J
    MethodParameters:
      Name                           Flags
      timeout                        final

  public long join$default$1();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc2_w        #79                 // long -1l
         3: lreturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/SubProcess;

  public static final void $anonfun$join$1(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #158                // Method java/lang/Thread.join:()V
         4: return
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final void $anonfun$join$2(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #158                // Method java/lang/Thread.join:()V
         4: return
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public os.SubProcess(java.lang.Process, scala.Option<java.lang.Thread>, scala.Option<java.lang.Thread>, scala.Option<java.lang.Thread>);
    descriptor: (Ljava/lang/Process;Lscala/Option;Lscala/Option;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: putfield      #36                 // Field wrapped:Ljava/lang/Process;
         5: aload_0
         6: aload_2
         7: putfield      #42                 // Field inputPumperThread:Lscala/Option;
        10: aload_0
        11: aload_3
        12: putfield      #44                 // Field outputPumperThread:Lscala/Option;
        15: aload_0
        16: aload         4
        18: putfield      #46                 // Field errorPumperThread:Lscala/Option;
        21: aload_0
        22: invokespecial #166                // Method java/lang/Object."<init>":()V
        25: aload_0
        26: new           #17                 // class os/SubProcess$InputStream
        29: dup
        30: aload_1
        31: invokevirtual #170                // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
        34: invokespecial #173                // Method os/SubProcess$InputStream."<init>":(Ljava/io/OutputStream;)V
        37: putfield      #49                 // Field stdin:Los/SubProcess$InputStream;
        40: aload_0
        41: new           #20                 // class os/SubProcess$OutputStream
        44: dup
        45: aload_1
        46: invokevirtual #177                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
        49: invokespecial #180                // Method os/SubProcess$OutputStream."<init>":(Ljava/io/InputStream;)V
        52: putfield      #52                 // Field stdout:Los/SubProcess$OutputStream;
        55: aload_0
        56: new           #20                 // class os/SubProcess$OutputStream
        59: dup
        60: aload_1
        61: invokevirtual #183                // Method java/lang/Process.getErrorStream:()Ljava/io/InputStream;
        64: invokespecial #180                // Method os/SubProcess$OutputStream."<init>":(Ljava/io/InputStream;)V
        67: putfield      #54                 // Field stderr:Los/SubProcess$OutputStream;
        70: return
      LineNumberTable:
        line 10: 0
        line 11: 5
        line 12: 10
        line 13: 15
        line 14: 25
        line 15: 40
        line 16: 55
        line 10: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Los/SubProcess;
            0      71     1 wrapped   Ljava/lang/Process;
            0      71     2 inputPumperThread   Lscala/Option;
            0      71     3 outputPumperThread   Lscala/Option;
            0      71     4 errorPumperThread   Lscala/Option;
    Signature: #164                         // (Ljava/lang/Process;Lscala/Option<Ljava/lang/Thread;>;Lscala/Option<Ljava/lang/Thread;>;Lscala/Option<Ljava/lang/Thread;>;)V
    MethodParameters:
      Name                           Flags
      wrapped                        final
      inputPumperThread              final
      outputPumperThread             final
      errorPumperThread              final

  public static final java.lang.Object $anonfun$join$1$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #185                // Method $anonfun$join$1:(Ljava/lang/Thread;)V
         4: getstatic     #112                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.Object $anonfun$join$2$adapted(java.lang.Thread);
    descriptor: (Ljava/lang/Thread;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #187                // Method $anonfun$join$2:(Ljava/lang/Thread;)V
         4: getstatic     #112                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Ljava/lang/Thread;
    MethodParameters:
      Name                           Flags
      x$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #199,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #17 of #2;           // InputStream=class os/SubProcess$InputStream of class os/SubProcess
  public static #21= #20 of #2;           // OutputStream=class os/SubProcess$OutputStream of class os/SubProcess
SourceFile: "SubProcess.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\u0005h\u0001B*U\u0001]C\u0001b\u0019\u0001\u0003\u0006\u0004%\t\u0001\u001a\u0005\tQ\u0002\u0011\t\u0011)A\u0005K\"A\u0011\u000e\u0001BC\u0002\u0013\u0005!\u000e\u0003\u0005u\u0001\t\u0005\t\u0015!\u0003l\u0011!)\bA!b\u0001\n\u0003Q\u0007\u0002\u0003<\u0001\u0005\u0003\u0005\u000b\u0011B6\t\u0011]\u0004!Q1A\u0005\u0002)D\u0001\u0002\u001f\u0001\u0003\u0002\u0003\u0006Ia\u001b\u0005\u0006s\u0002!\tA\u001f\u0005\n\u0003\u0007\u0001!\u0019!C\u0001\u0003\u000bA\u0001Ba)\u0001A\u0003%\u0011q\u0001\u0005\n\u0005K\u0003!\u0019!C\u0001\u0005OC\u0001Ba+\u0001A\u0003%!\u0011\u0016\u0005\n\u0005[\u0003!\u0019!C\u0001\u0005OC\u0001Ba,\u0001A\u0003%!\u0011\u0016\u0005\b\u0005c\u0003A\u0011\u0001B\"\u0011\u001d\u0011\u0019\f\u0001C\u0001\u0005_BqA!.\u0001\t\u0003\u0011i\u0001C\u0004\u00038\u0002!\tA!\u0004\t\u000f\t=\u0001\u0001\"\u0001\u0003\u000e!9!\u0011\u0018\u0001\u0005\u0002\tm\u0006\"\u0003Ba\u0001E\u0005I\u0011\u0001Bb\u0011\u001d\u0011I\u000e\u0001C\u0001\u00057D\u0011Ba8\u0001#\u0003%\tAa1\b\u000f\u0005-A\u000b#\u0001\u0002\u000e\u001911\u000b\u0016E\u0001\u0003\u001fAa!\u001f\u000e\u0005\u0002\u0005]aABA\r5\u0001\tY\u0002C\u0005d9\t\u0015\r\u0011\"\u0001\u00020!I\u0001\u000e\bB\u0001B\u0003%\u0011Q\u0004\u0005\u0007sr!\t!!\r\t\u0013\u0005eBD1A\u0005\u0002\u0005m\u0002\u0002CA\"9\u0001\u0006I!!\u0010\t\u0013\u0005\u0015CD1A\u0005\u0002\u0005\u001d\u0003\u0002CA(9\u0001\u0006I!!\u0013\t\u000f\u0005EC\u0004\"\u0001\u0002T!9\u0011\u0011\u000b\u000f\u0005B\u0005\u0015\u0004bBA)9\u0011\u0005\u0013Q\u000f\u0005\b\u0003\u0003cB\u0011AAB\u0011\u001d\ty\t\bC\u0001\u0003#Cq!!&\u001d\t\u0003\t9\nC\u0004\u0002\u001cr!\t!!(\t\u000f\u0005\u0005F\u0004\"\u0001\u0002$\"9\u0011q\u0015\u000f\u0005\u0002\u0005%\u0006bBAZ9\u0011\u0005\u0011Q\u0017\u0005\b\u0003\u007fcB\u0011AAa\u0011\u001d\tY\r\bC\u0001\u0003\u001bDq!!;\u001d\t\u0003\tY\u000fC\u0004\u0002pr!\t!!=\t\u000f\u0005UH\u0004\"\u0001\u0002x\"9\u0011\u0011\u000b\u000f\u0005\u0002\u0005m\bbBA)9\u0011\u0005\u0011q \u0005\b\u0005\u0017aB\u0011\tB\u0007\u0011\u001d\u0011y\u0001\bC!\u0005\u001b1a!a\n\u001b\u0001\tE\u0001\"C28\u0005\u000b\u0007I\u0011\u0001B\u0015\u0011%AwG!A!\u0002\u0013\u0011\u0019\u0002\u0003\u0004zo\u0011\u0005!1\u0006\u0005\n\u0003s9$\u0019!C\u0001\u0005cA\u0001\"a\u00118A\u0003%!1\u0007\u0005\n\u0003\u000b:$\u0019!C\u0001\u0005sA\u0001\"a\u00148A\u0003%!1\b\u0005\b\u0005\u0003:D\u0011\u0001B\"\u0011\u001d\u0011\te\u000eC!\u0005\u000bBqA!\u00118\t\u0003\u0012I\u0005C\u0004\u0003R]\"\tAa\u0015\t\u000f\tEs\u0007\"\u0001\u0003X!9!qL\u001c\u0005\u0002\t\u0005\u0004b\u0002B7o\u0011\u0005!q\u000e\u0005\b\u0005c:D\u0011\u0001B:\u0011\u001d\u0011)h\u000eC\u0001\u0005\u0007BqAa\u001e8\t\u0003\u0011I\bC\u0004\u0003\u0002^\"\tAa\u0011\t\u000f\t\ru\u0007\"\u0001\u0003\u0006\"9!qQ\u001c\u0005\u0002\t\r\u0003b\u0002BEo\u0011\u0005!1\u0012\u0005\b\u0005\u001b;D\u0011\u0001BH\u0011\u001d\u0011\tj\u000eC\u0001\u0005\'CqA!&8\t\u0003\u00119\nC\u0004\u0003\u001e^\"\tAa&\t\u000f\t}u\u0007\"\u0001\u0003\"\"9!qB\u001c\u0005B\t5!AC*vEB\u0013xnY3tg*\tQ+\u0001\u0002pg\u000e\u00011c\u0001\u0001YAB\u0011\u0011LX\u0007\u00025*\u00111\fX\u0001\u0005Y\u0006twMC\u0001^\u0003\u0011Q\u0017M^1\n\u0005}S&AB(cU\u0016\u001cG\u000f\u0005\u0002ZC&\u0011!M\u0017\u0002\u000e\u0003V$xn\u00117pg\u0016\f\'\r\\3\u0002\u000f]\u0014\u0018\r\u001d9fIV\tQ\r\u0005\u0002ZM&\u0011qM\u0017\u0002\b!J|7-Z:t\u0003!9(/\u00199qK\u0012\u0004\u0013!E5oaV$\b+^7qKJ$\u0006N]3bIV\t1\u000eE\u0002m_Fl\u0011!\u001c\u0006\u0002]\u0006)1oY1mC&\u0011\u0001/\u001c\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u0005e\u0013\u0018BA:[\u0005\u0019!\u0006N]3bI\u0006\u0011\u0012N\u001c9viB+X\u000e]3s)\"\u0014X-\u00193!\u0003IyW\u000f\u001e9viB+X\u000e]3s)\"\u0014X-\u00193\u0002\'=,H\u000f];u!Vl\u0007/\u001a:UQJ,\u0017\r\u001a\u0011\u0002#\u0015\u0014(o\u001c:Qk6\u0004XM\u001d+ie\u0016\fG-\u0001\nfeJ|\'\u000fU;na\u0016\u0014H\u000b\u001b:fC\u0012\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0004|{z|\u0018\u0011\u0001\t\u0003y\u0002i\u0011\u0001\u0016\u0005\u0006G&\u0001\r!\u001a\u0005\u0006S&\u0001\ra\u001b\u0005\u0006k&\u0001\ra\u001b\u0005\u0006o&\u0001\ra[\u0001\u0006gR$\u0017N\\\u000b\u0003\u0003\u000f\u00012!!\u0003\u001d\u001d\ta\u0018$\u0001\u0006Tk\n\u0004&o\\2fgN\u0004\"\u0001 \u000e\u0014\u0007i\t\t\u0002E\u0002m\u0003\'I1!!\u0006n\u0005\u0019\te.\u001f*fMR\u0011\u0011Q\u0002\u0002\f\u0013:\u0004X\u000f^*ue\u0016\fWnE\u0003\u001d\u0003;\tI\u0003\u0005\u0003\u0002 \u0005\u0015RBAA\u0011\u0015\r\t\u0019\u0003X\u0001\u0003S>LA!a\n\u0002\"\taq*\u001e;qkR\u001cFO]3b[B!\u0011qDA\u0016\u0013\u0011\ti#!\t\u0003\u0015\u0011\u000bG/Y(viB,H/\u0006\u0002\u0002\u001eQ!\u00111GA\u001c!\r\t)\u0004H\u0007\u00025!11m\ba\u0001\u0003;\tA\u0001Z1uCV\u0011\u0011Q\b\t\u0005\u0003?\ty$\u0003\u0003\u0002B\u0005\u0005\"\u0001\u0005#bi\u0006|U\u000f\u001e9viN#(/Z1n\u0003\u0015!\u0017\r^1!\u0003!\u0011WO\u001a4fe\u0016$WCAA%!\u0011\ty\"a\u0013\n\t\u00055\u0013\u0011\u0005\u0002\u000f\u0005V4g-\u001a:fI^\u0013\u0018\u000e^3s\u0003%\u0011WO\u001a4fe\u0016$\u0007%A\u0003xe&$X\r\u0006\u0003\u0002V\u0005m\u0003c\u00017\u0002X%\u0019\u0011\u0011L7\u0003\tUs\u0017\u000e\u001e\u0005\b\u0003;\"\u0003\u0019AA0\u0003\u0005\u0011\u0007c\u00017\u0002b%\u0019\u00111M7\u0003\u0007%sG\u000f\u0006\u0003\u0002V\u0005\u001d\u0004bBA/K\u0001\u0007\u0011\u0011\u000e\t\u0006Y\u0006-\u0014qN\u0005\u0004\u0003[j\'!B!se\u0006L\bc\u00017\u0002r%\u0019\u00111O7\u0003\t\tKH/\u001a\u000b\t\u0003+\n9(!\u001f\u0002~!9\u0011Q\f\u0014A\u0002\u0005%\u0004bBA>M\u0001\u0007\u0011qL\u0001\u0004_\u001a4\u0007bBA@M\u0001\u0007\u0011qL\u0001\u0004Y\u0016t\u0017\u0001D<sSR,\'i\\8mK\u0006tG\u0003BA+\u0003\u000bCq!a\"(\u0001\u0004\tI)A\u0001w!\ra\u00171R\u0005\u0004\u0003\u001bk\'a\u0002\"p_2,\u0017M\\\u0001\noJLG/\u001a\"zi\u0016$B!!\u0016\u0002\u0014\"9\u0011q\u0011\u0015A\u0002\u0005}\u0013AC<sSR,7\u000b[8siR!\u0011QKAM\u0011\u001d\t9)\u000ba\u0001\u0003?\n\u0011b\u001e:ji\u0016\u001c\u0005.\u0019:\u0015\t\u0005U\u0013q\u0014\u0005\b\u0003\u000fS\u0003\u0019AA0\u0003!9(/\u001b;f\u0013:$H\u0003BA+\u0003KCq!a\",\u0001\u0004\ty&A\u0005xe&$X\rT8oOR!\u0011QKAV\u0011\u001d\t9\t\fa\u0001\u0003[\u00032\u0001\\AX\u0013\r\t\t,\u001c\u0002\u0005\u0019>tw-\u0001\u0006xe&$XM\u00127pCR$B!!\u0016\u00028\"9\u0011qQ\u0017A\u0002\u0005e\u0006c\u00017\u0002<&\u0019\u0011QX7\u0003\u000b\u0019cw.\u0019;\u0002\u0017]\u0014\u0018\u000e^3E_V\u0014G.\u001a\u000b\u0005\u0003+\n\u0019\rC\u0004\u0002\b:\u0002\r!!2\u0011\u00071\f9-C\u0002\u0002J6\u0014a\u0001R8vE2,\u0017AC<sSR,\')\u001f;fgR!\u0011QKAh\u0011\u001d\t\tn\fa\u0001\u0003\'\f\u0011a\u001d\t\u0005\u0003+\f\u0019O\u0004\u0003\u0002X\u0006}\u0007cAAm[6\u0011\u00111\u001c\u0006\u0004\u0003;4\u0016A\u0002\u001fs_>$h(C\u0002\u0002b6\fa\u0001\u0015:fI\u00164\u0017\u0002BAs\u0003O\u0014aa\u0015;sS:<\'bAAq[\u0006QqO]5uK\u000eC\u0017M]:\u0015\t\u0005U\u0013Q\u001e\u0005\b\u0003#\u0004\u0004\u0019AAj\u0003!9(/\u001b;f+R3E\u0003BA+\u0003gDq!!52\u0001\u0004\t\u0019.A\u0005xe&$X\rT5oKR!\u0011QKA}\u0011\u001d\t\tN\ra\u0001\u0003\'$B!!\u0016\u0002~\"9\u0011\u0011[\u001aA\u0002\u0005MG\u0003BA+\u0005\u0003Aq!!55\u0001\u0004\u0011\u0019\u0001E\u0003m\u0003W\u0012)\u0001E\u0002m\u0005\u000fI1A!\u0003n\u0005\u0011\u0019\u0005.\u0019:\u0002\u000b\u0019dWo\u001d5\u0015\u0005\u0005U\u0013!B2m_N,7cB\u001c\u0003\u0014\t]!Q\u0004\t\u0005\u0003?\u0011)\"\u0003\u0003\u0002\u001a\u0005\u0005\u0002\u0003BA\u0010\u00053IAAa\u0007\u0002\"\tIA)\u0019;b\u0013:\u0004X\u000f\u001e\t\u0005\u0005?\u0011)#\u0004\u0002\u0003\")\u0011!1E\u0001\u0005O\u0016t\u00170\u0003\u0003\u0003(\t\u0005\"\u0001\u0003\"zi\u0016$\u0015\r^1\u0016\u0005\tMA\u0003\u0002B\u0017\u0005_\u00012!!\u000e8\u0011\u0019\u0019\'\b1\u0001\u0003\u0014U\u0011!1\u0007\t\u0005\u0003?\u0011)$\u0003\u0003\u00038\u0005\u0005\"a\u0004#bi\u0006Le\u000e];u\'R\u0014X-Y7\u0016\u0005\tm\u0002\u0003BA\u0010\u0005{IAAa\u0010\u0002\"\tq!)\u001e4gKJ,GMU3bI\u0016\u0014\u0018\u0001\u0002:fC\u0012$\"!a\u0018\u0015\t\u0005}#q\t\u0005\b\u0003;\u0002\u0005\u0019AA5)!\tyFa\u0013\u0003N\t=\u0003bBA/\u0003\u0002\u0007\u0011\u0011\u000e\u0005\b\u0003w\n\u0005\u0019AA0\u0011\u001d\ty(\u0011a\u0001\u0003?\n\u0011B]3bI\u001a+H\u000e\\=\u0015\t\u0005U#Q\u000b\u0005\b\u0003;\u0012\u0005\u0019AA5)!\t)F!\u0017\u0003\\\tu\u0003bBA/\u0007\u0002\u0007\u0011\u0011\u000e\u0005\b\u0003w\u001a\u0005\u0019AA0\u0011\u001d\tyh\u0011a\u0001\u0003?\n\u0011b]6ja\nKH/Z:\u0015\t\t\r$\u0011\u000e\t\u0004Y\n\u0015\u0014b\u0001B4[\n9aj\u001c;iS:<\u0007b\u0002B6\t\u0002\u0007\u0011qL\u0001\u0002]\u0006Y!/Z1e\u0005>|G.Z1o)\t\tI)\u0001\u0005sK\u0006$\')\u001f;f)\t\ty\'\u0001\tsK\u0006$WK\\:jO:,GMQ=uK\u0006I!/Z1e\'\"|\'\u000f\u001e\u000b\u0003\u0005w\u00022\u0001\u001cB?\u0013\r\u0011y(\u001c\u0002\u0006\'\"|\'\u000f^\u0001\u0012e\u0016\fG-\u00168tS\u001etW\rZ*i_J$\u0018\u0001\u0003:fC\u0012\u001c\u0005.\u0019:\u0015\u0005\t\u0015\u0011a\u0002:fC\u0012Le\u000e^\u0001\te\u0016\fG\rT8oOR\u0011\u0011QV\u0001\ne\u0016\fGM\u00127pCR$\"!!/\u0002\u0015I,\u0017\r\u001a#pk\ndW\r\u0006\u0002\u0002F\u00069!/Z1e+R3EC\u0001BM!\rI&1T\u0005\u0004\u0003KT\u0016\u0001\u0003:fC\u0012d\u0015N\\3\u0002\u000b\tLH/Z:\u0016\u0005\u0005%\u0014AB:uI&t\u0007%\u0001\u0004ti\u0012|W\u000f^\u000b\u0003\u0005S\u00032!!\u00038\u0003\u001d\u0019H\u000fZ8vi\u0002\naa\u001d;eKJ\u0014\u0018aB:uI\u0016\u0014(\u000fI\u0001\tKbLGoQ8eK\u00069\u0011n]!mSZ,\u0017a\u00023fgR\u0014x._\u0001\u0010I\u0016\u001cHO]8z\r>\u00148-\u001b2ms\u00069q/Y5u\r>\u0014H\u0003BAE\u0005{C\u0011Ba0\u0016!\u0003\u0005\r!!,\u0002\u000fQLW.Z8vi\u0006\tr/Y5u\r>\u0014H\u0005Z3gCVdG\u000fJ\u0019\u0016\u0005\t\u0015\'\u0006BAW\u0005\u000f\\#A!3\u0011\t\t-\'Q[\u0007\u0003\u0005\u001bTAAa4\u0003R\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0004\u0005\'l\u0017AC1o]>$\u0018\r^5p]&!!q\u001bBg\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u0005U>Lg\u000e\u0006\u0003\u0002\n\nu\u0007\"\u0003B`/A\u0005\t\u0019AAW\u00039Qw.\u001b8%I\u00164\u0017-\u001e7uIE\u0002"
    )
BootstrapMethods:
  0: #131 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #116 (Ljava/lang/Object;)Ljava/lang/Object;
      #121 REF_invokeStatic os/SubProcess.$anonfun$join$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #122 (Ljava/lang/Thread;)Ljava/lang/Object;
      #123 5
      #124 1
      #122 (Ljava/lang/Thread;)Ljava/lang/Object;
  1: #131 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #116 (Ljava/lang/Object;)Ljava/lang/Object;
      #147 REF_invokeStatic os/SubProcess.$anonfun$join$2$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #122 (Ljava/lang/Thread;)Ljava/lang/Object;
      #123 5
      #124 1
      #122 (Ljava/lang/Thread;)Ljava/lang/Object;
  2: #196 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 REF_invokeStatic os/SubProcess.$anonfun$join$1$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
      #147 REF_invokeStatic os/SubProcess.$anonfun$join$2$adapted:(Ljava/lang/Thread;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 00 00 15 00 98 00 99 01 00 75 00 76 01 00 A0
   00 99 01 00 90 00 76 01 00 A2 00 A3 00 00 4B 00
   45 00 00 44 00 45 00 00 48 00 45 00 00 1C 00 27
   00 00 37 00 38 00 00 18 00 27 00 00 40 00 41 00
   00 5F 00 4D 00 00 97 00 5E 00 00 1B 00 27 00 00
   21 00 32 00 00 1D 00 2F 00 00 1F 00 32 00 00 4C
   00 4D 00 00 5D 00 5E 00 00 16 00 22 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
