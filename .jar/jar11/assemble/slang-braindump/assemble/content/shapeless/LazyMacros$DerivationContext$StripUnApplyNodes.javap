Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.class
  Last modified May 29, 2022; size 10562 bytes
  SHA-256 checksum efe848ed4afa6f327cff37ca3c1a3c44ea8dcfbdb4287bb510f7cbc99ae95318
  Compiled from "lazy.scala"
public class shapeless.LazyMacros$DerivationContext$StripUnApplyNodes extends scala.reflect.api.Trees$Transformer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes
  super_class: #4                         // scala/reflect/api/Trees$Transformer
  interfaces: 0, fields: 2, methods: 4, attributes: 4
Constant pool:
    #1 = Utf8               shapeless/LazyMacros$DerivationContext$StripUnApplyNodes
    #2 = Class              #1            // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes
    #3 = Utf8               scala/reflect/api/Trees$Transformer
    #4 = Class              #3            // scala/reflect/api/Trees$Transformer
    #5 = Utf8               lazy.scala
    #6 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
    #7 = Class              #6            // scala/collection/SeqFactory$UnapplySeqWrapper
    #8 = Utf8               scala/collection/SeqFactory
    #9 = Class              #8            // scala/collection/SeqFactory
   #10 = Utf8               UnapplySeqWrapper
   #11 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #12 = Class              #11           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #13 = Utf8               UnapplySeqWrapper$
   #14 = Utf8               scala/reflect/api/Names$NameApi
   #15 = Class              #14           // scala/reflect/api/Names$NameApi
   #16 = Utf8               scala/reflect/api/Names
   #17 = Class              #16           // scala/reflect/api/Names
   #18 = Utf8               NameApi
   #19 = Utf8               scala/reflect/api/Trees$ApplyApi
   #20 = Class              #19           // scala/reflect/api/Trees$ApplyApi
   #21 = Utf8               scala/reflect/api/Trees
   #22 = Class              #21           // scala/reflect/api/Trees
   #23 = Utf8               ApplyApi
   #24 = Utf8               scala/reflect/api/Trees$ApplyExtractor
   #25 = Class              #24           // scala/reflect/api/Trees$ApplyExtractor
   #26 = Utf8               ApplyExtractor
   #27 = Utf8               scala/reflect/api/Trees$IdentApi
   #28 = Class              #27           // scala/reflect/api/Trees$IdentApi
   #29 = Utf8               IdentApi
   #30 = Utf8               scala/reflect/api/Trees$IdentExtractor
   #31 = Class              #30           // scala/reflect/api/Trees$IdentExtractor
   #32 = Utf8               IdentExtractor
   #33 = Utf8               scala/reflect/api/Trees$SelectApi
   #34 = Class              #33           // scala/reflect/api/Trees$SelectApi
   #35 = Utf8               SelectApi
   #36 = Utf8               scala/reflect/api/Trees$SelectExtractor
   #37 = Class              #36           // scala/reflect/api/Trees$SelectExtractor
   #38 = Utf8               SelectExtractor
   #39 = Utf8               Transformer
   #40 = Utf8               scala/reflect/api/Trees$TreeApi
   #41 = Class              #40           // scala/reflect/api/Trees$TreeApi
   #42 = Utf8               TreeApi
   #43 = Utf8               scala/reflect/api/Trees$TypeApplyApi
   #44 = Class              #43           // scala/reflect/api/Trees$TypeApplyApi
   #45 = Utf8               TypeApplyApi
   #46 = Utf8               scala/reflect/api/Trees$TypeApplyExtractor
   #47 = Class              #46           // scala/reflect/api/Trees$TypeApplyExtractor
   #48 = Utf8               TypeApplyExtractor
   #49 = Utf8               scala/reflect/api/Trees$UnApplyApi
   #50 = Class              #49           // scala/reflect/api/Trees$UnApplyApi
   #51 = Utf8               UnApplyApi
   #52 = Utf8               scala/reflect/api/Trees$UnApplyExtractor
   #53 = Class              #52           // scala/reflect/api/Trees$UnApplyExtractor
   #54 = Utf8               UnApplyExtractor
   #55 = Utf8               scala/reflect/internal/Names$TermName
   #56 = Class              #55           // scala/reflect/internal/Names$TermName
   #57 = Utf8               scala/reflect/internal/Names
   #58 = Class              #57           // scala/reflect/internal/Names
   #59 = Utf8               TermName
   #60 = Utf8               scala/reflect/internal/StdNames$nme$
   #61 = Class              #60           // scala/reflect/internal/StdNames$nme$
   #62 = Utf8               scala/reflect/internal/StdNames
   #63 = Class              #62           // scala/reflect/internal/StdNames
   #64 = Utf8               nme$
   #65 = Utf8               shapeless/LazyMacros$DerivationContext
   #66 = Class              #65           // shapeless/LazyMacros$DerivationContext
   #67 = Utf8               shapeless/LazyMacros
   #68 = Class              #67           // shapeless/LazyMacros
   #69 = Utf8               DerivationContext
   #70 = Utf8               StripUnApplyNodes
   #71 = Utf8               global
   #72 = Utf8               Lscala/tools/nsc/Global;
   #73 = Utf8               $outer
   #74 = Utf8               Lshapeless/LazyMacros$DerivationContext;
   #75 = Utf8               ()Lscala/tools/nsc/Global;
   #76 = NameAndType        #71:#72       // global:Lscala/tools/nsc/Global;
   #77 = Fieldref           #2.#76        // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.global:Lscala/tools/nsc/Global;
   #78 = Utf8               this
   #79 = Utf8               Lshapeless/LazyMacros$DerivationContext$StripUnApplyNodes;
   #80 = Utf8               transform
   #81 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
   #82 = Utf8               tree
   #83 = Utf8               shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer
   #84 = Utf8               ()Lshapeless/LazyMacros$DerivationContext;
   #85 = NameAndType        #83:#84       // shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
   #86 = Methodref          #2.#85        // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
   #87 = Utf8               shapeless$LazyMacros$DerivationContext$$$outer
   #88 = Utf8               ()Lshapeless/LazyMacros;
   #89 = NameAndType        #87:#88       // shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
   #90 = Methodref          #66.#89       // shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
   #91 = Utf8               c
   #92 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #93 = NameAndType        #91:#92       // c:()Lscala/reflect/macros/whitebox/Context;
   #94 = Methodref          #68.#93       // shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #95 = Utf8               scala/reflect/macros/whitebox/Context
   #96 = Class              #95           // scala/reflect/macros/whitebox/Context
   #97 = Utf8               universe
   #98 = Utf8               ()Lscala/reflect/macros/Universe;
   #99 = NameAndType        #97:#98       // universe:()Lscala/reflect/macros/Universe;
  #100 = InterfaceMethodref #96.#99       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #101 = Utf8               scala/reflect/macros/Universe
  #102 = Class              #101          // scala/reflect/macros/Universe
  #103 = Utf8               UnApplyTag
  #104 = Utf8               ()Lscala/reflect/ClassTag;
  #105 = NameAndType        #103:#104     // UnApplyTag:()Lscala/reflect/ClassTag;
  #106 = Methodref          #102.#105     // scala/reflect/macros/Universe.UnApplyTag:()Lscala/reflect/ClassTag;
  #107 = Utf8               scala/reflect/ClassTag
  #108 = Class              #107          // scala/reflect/ClassTag
  #109 = Utf8               unapply
  #110 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #111 = NameAndType        #109:#110     // unapply:(Ljava/lang/Object;)Lscala/Option;
  #112 = InterfaceMethodref #108.#111     // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
  #113 = Utf8               scala/Option
  #114 = Class              #113          // scala/Option
  #115 = Utf8               isEmpty
  #116 = Utf8               ()Z
  #117 = NameAndType        #115:#116     // isEmpty:()Z
  #118 = Methodref          #114.#117     // scala/Option.isEmpty:()Z
  #119 = Utf8               get
  #120 = Utf8               ()Ljava/lang/Object;
  #121 = NameAndType        #119:#120     // get:()Ljava/lang/Object;
  #122 = Methodref          #114.#121     // scala/Option.get:()Ljava/lang/Object;
  #123 = Utf8               UnApply
  #124 = Utf8               ()Lscala/reflect/api/Trees$UnApplyExtractor;
  #125 = NameAndType        #123:#124     // UnApply:()Lscala/reflect/api/Trees$UnApplyExtractor;
  #126 = Methodref          #102.#125     // scala/reflect/macros/Universe.UnApply:()Lscala/reflect/api/Trees$UnApplyExtractor;
  #127 = Utf8               (Lscala/reflect/api/Trees$UnApplyApi;)Lscala/Option;
  #128 = NameAndType        #109:#127     // unapply:(Lscala/reflect/api/Trees$UnApplyApi;)Lscala/Option;
  #129 = Methodref          #53.#128      // scala/reflect/api/Trees$UnApplyExtractor.unapply:(Lscala/reflect/api/Trees$UnApplyApi;)Lscala/Option;
  #130 = Utf8               scala/Tuple2
  #131 = Class              #130          // scala/Tuple2
  #132 = Utf8               _1
  #133 = NameAndType        #132:#120     // _1:()Ljava/lang/Object;
  #134 = Methodref          #131.#133     // scala/Tuple2._1:()Ljava/lang/Object;
  #135 = Utf8               _2
  #136 = NameAndType        #135:#120     // _2:()Ljava/lang/Object;
  #137 = Methodref          #131.#136     // scala/Tuple2._2:()Ljava/lang/Object;
  #138 = Utf8               scala/collection/immutable/List
  #139 = Class              #138          // scala/collection/immutable/List
  #140 = Utf8               ApplyTag
  #141 = NameAndType        #140:#104     // ApplyTag:()Lscala/reflect/ClassTag;
  #142 = Methodref          #102.#141     // scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
  #143 = Utf8               Apply
  #144 = Utf8               ()Lscala/reflect/api/Trees$ApplyExtractor;
  #145 = NameAndType        #143:#144     // Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
  #146 = Methodref          #102.#145     // scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
  #147 = Utf8               (Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
  #148 = NameAndType        #109:#147     // unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
  #149 = Methodref          #25.#148      // scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
  #150 = Utf8               SelectTag
  #151 = NameAndType        #150:#104     // SelectTag:()Lscala/reflect/ClassTag;
  #152 = Methodref          #102.#151     // scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
  #153 = Utf8               Select
  #154 = Utf8               ()Lscala/reflect/api/Trees$SelectExtractor;
  #155 = NameAndType        #153:#154     // Select:()Lscala/reflect/api/Trees$SelectExtractor;
  #156 = Methodref          #102.#155     // scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
  #157 = Utf8               (Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
  #158 = NameAndType        #109:#157     // unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
  #159 = Methodref          #37.#158      // scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
  #160 = NameAndType        #71:#75       // global:()Lscala/tools/nsc/Global;
  #161 = Methodref          #2.#160       // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.global:()Lscala/tools/nsc/Global;
  #162 = Utf8               scala/tools/nsc/Global
  #163 = Class              #162          // scala/tools/nsc/Global
  #164 = Utf8               nme
  #165 = Utf8               ()Lscala/reflect/internal/StdNames$nme$;
  #166 = NameAndType        #164:#165     // nme:()Lscala/reflect/internal/StdNames$nme$;
  #167 = Methodref          #163.#166     // scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
  #168 = Utf8               ()Lscala/reflect/internal/Names$TermName;
  #169 = NameAndType        #109:#168     // unapply:()Lscala/reflect/internal/Names$TermName;
  #170 = Methodref          #61.#169      // scala/reflect/internal/StdNames$nme$.unapply:()Lscala/reflect/internal/Names$TermName;
  #171 = Utf8               java/lang/Object
  #172 = Class              #171          // java/lang/Object
  #173 = Utf8               equals
  #174 = Utf8               (Ljava/lang/Object;)Z
  #175 = NameAndType        #173:#174     // equals:(Ljava/lang/Object;)Z
  #176 = Methodref          #172.#175     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #177 = Utf8               unapplySeq
  #178 = NameAndType        #177:#168     // unapplySeq:()Lscala/reflect/internal/Names$TermName;
  #179 = Methodref          #61.#178      // scala/reflect/internal/StdNames$nme$.unapplySeq:()Lscala/reflect/internal/Names$TermName;
  #180 = Utf8               scala/collection/immutable/List$
  #181 = Class              #180          // scala/collection/immutable/List$
  #182 = Utf8               MODULE$
  #183 = Utf8               Lscala/collection/immutable/List$;
  #184 = NameAndType        #182:#183     // MODULE$:Lscala/collection/immutable/List$;
  #185 = Fieldref           #181.#184     // scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
  #186 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #187 = NameAndType        #177:#186     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #188 = Methodref          #181.#187     // scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #189 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #190 = NameAndType        #182:#189     // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #191 = Fieldref           #12.#190      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #192 = Utf8               isEmpty$extension
  #193 = Utf8               (Lscala/collection/SeqOps;)Z
  #194 = NameAndType        #192:#193     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #195 = Methodref          #12.#194      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #196 = Utf8               get$extension
  #197 = NameAndType        #196:#186     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #198 = Methodref          #12.#197      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #199 = Utf8               <init>
  #200 = Utf8               (Lscala/collection/SeqOps;)V
  #201 = NameAndType        #199:#200     // "<init>":(Lscala/collection/SeqOps;)V
  #202 = Methodref          #7.#201       // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #203 = Utf8               lengthCompare$extension
  #204 = Utf8               (Lscala/collection/SeqOps;I)I
  #205 = NameAndType        #203:#204     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #206 = Methodref          #12.#205      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #207 = Utf8               apply$extension
  #208 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #209 = NameAndType        #207:#208     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #210 = Methodref          #12.#209      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #211 = Utf8               IdentTag
  #212 = NameAndType        #211:#104     // IdentTag:()Lscala/reflect/ClassTag;
  #213 = Methodref          #102.#212     // scala/reflect/macros/Universe.IdentTag:()Lscala/reflect/ClassTag;
  #214 = Utf8               Ident
  #215 = Utf8               ()Lscala/reflect/api/Trees$IdentExtractor;
  #216 = NameAndType        #214:#215     // Ident:()Lscala/reflect/api/Trees$IdentExtractor;
  #217 = Methodref          #102.#216     // scala/reflect/macros/Universe.Ident:()Lscala/reflect/api/Trees$IdentExtractor;
  #218 = Utf8               (Lscala/reflect/api/Trees$IdentApi;)Lscala/Option;
  #219 = NameAndType        #109:#218     // unapply:(Lscala/reflect/api/Trees$IdentApi;)Lscala/Option;
  #220 = Methodref          #31.#219      // scala/reflect/api/Trees$IdentExtractor.unapply:(Lscala/reflect/api/Trees$IdentApi;)Lscala/Option;
  #221 = Utf8               SELECTOR_DUMMY
  #222 = NameAndType        #221:#168     // SELECTOR_DUMMY:()Lscala/reflect/internal/Names$TermName;
  #223 = Methodref          #61.#222      // scala/reflect/internal/StdNames$nme$.SELECTOR_DUMMY:()Lscala/reflect/internal/Names$TermName;
  #224 = NameAndType        #80:#81       // transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #225 = Methodref          #2.#224       // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #226 = Utf8               transformTrees
  #227 = Utf8               (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #228 = NameAndType        #226:#227     // transformTrees:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #229 = Methodref          #2.#228       // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.transformTrees:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #230 = Utf8               apply
  #231 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
  #232 = NameAndType        #230:#231     // apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
  #233 = Methodref          #25.#232      // scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
  #234 = Utf8               TypeApplyTag
  #235 = NameAndType        #234:#104     // TypeApplyTag:()Lscala/reflect/ClassTag;
  #236 = Methodref          #102.#235     // scala/reflect/macros/Universe.TypeApplyTag:()Lscala/reflect/ClassTag;
  #237 = Utf8               TypeApply
  #238 = Utf8               ()Lscala/reflect/api/Trees$TypeApplyExtractor;
  #239 = NameAndType        #237:#238     // TypeApply:()Lscala/reflect/api/Trees$TypeApplyExtractor;
  #240 = Methodref          #102.#239     // scala/reflect/macros/Universe.TypeApply:()Lscala/reflect/api/Trees$TypeApplyExtractor;
  #241 = Utf8               (Lscala/reflect/api/Trees$TypeApplyApi;)Lscala/Option;
  #242 = NameAndType        #109:#241     // unapply:(Lscala/reflect/api/Trees$TypeApplyApi;)Lscala/Option;
  #243 = Methodref          #47.#242      // scala/reflect/api/Trees$TypeApplyExtractor.unapply:(Lscala/reflect/api/Trees$TypeApplyApi;)Lscala/Option;
  #244 = Methodref          #4.#224       // scala/reflect/api/Trees$Transformer.transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #245 = Utf8               qual
  #246 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #247 = Utf8               args
  #248 = Utf8               Lscala/collection/immutable/List;
  #249 = Utf8               scala/collection/SeqOps
  #250 = Class              #249          // scala/collection/SeqOps
  #251 = NameAndType        #73:#74       // $outer:Lshapeless/LazyMacros$DerivationContext;
  #252 = Fieldref           #2.#251       // shapeless/LazyMacros$DerivationContext$StripUnApplyNodes.$outer:Lshapeless/LazyMacros$DerivationContext;
  #253 = Utf8               (Lshapeless/LazyMacros$DerivationContext;)V
  #254 = Utf8               (Lscala/reflect/api/Universe;)V
  #255 = NameAndType        #199:#254     // "<init>":(Lscala/reflect/api/Universe;)V
  #256 = Methodref          #4.#255       // scala/reflect/api/Trees$Transformer."<init>":(Lscala/reflect/api/Universe;)V
  #257 = Utf8               Code
  #258 = Utf8               LineNumberTable
  #259 = Utf8               LocalVariableTable
  #260 = Utf8               StackMapTable
  #261 = Utf8               MethodParameters
  #262 = Utf8               InnerClasses
  #263 = Utf8               SourceFile
  #264 = Utf8               ScalaInlineInfo
  #265 = Utf8               Scala
{
  private final scala.tools.nsc.Global global;
    descriptor: Lscala/tools/nsc/Global;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final shapeless.LazyMacros$DerivationContext $outer;
    descriptor: Lshapeless/LazyMacros$DerivationContext;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public scala.tools.nsc.Global global();
    descriptor: ()Lscala/tools/nsc/Global;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #77                 // Field global:Lscala/tools/nsc/Global;
         4: areturn
      LineNumberTable:
        line 504: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lshapeless/LazyMacros$DerivationContext$StripUnApplyNodes;

  public scala.reflect.api.Trees$TreeApi transform(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=58, args_size=2
         0: aload_0
         1: aload_1
         2: astore        5
         4: aload         5
         6: ifnull        770
         9: aload_0
        10: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
        13: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
        16: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
        19: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        24: invokevirtual #106                // Method scala/reflect/macros/Universe.UnApplyTag:()Lscala/reflect/ClassTag;
        27: aload         5
        29: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        34: astore        6
        36: aload         6
        38: invokevirtual #118                // Method scala/Option.isEmpty:()Z
        41: ifne          767
        44: aload         6
        46: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
        49: checkcast     #50                 // class scala/reflect/api/Trees$UnApplyApi
        52: astore        7
        54: aload         7
        56: ifnull        764
        59: aload_0
        60: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
        63: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
        66: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
        69: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        74: invokevirtual #126                // Method scala/reflect/macros/Universe.UnApply:()Lscala/reflect/api/Trees$UnApplyExtractor;
        77: aload         7
        79: invokevirtual #129                // Method scala/reflect/api/Trees$UnApplyExtractor.unapply:(Lscala/reflect/api/Trees$UnApplyApi;)Lscala/Option;
        82: astore        8
        84: aload         8
        86: invokevirtual #118                // Method scala/Option.isEmpty:()Z
        89: ifne          761
        92: aload         8
        94: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
        97: checkcast     #131                // class scala/Tuple2
       100: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
       103: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
       106: astore        9
       108: aload         8
       110: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       113: checkcast     #131                // class scala/Tuple2
       116: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
       119: checkcast     #139                // class scala/collection/immutable/List
       122: astore        10
       124: aload         9
       126: ifnull        758
       129: aload_0
       130: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       133: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       136: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       139: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       144: invokevirtual #142                // Method scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
       147: aload         9
       149: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       154: astore        11
       156: aload         11
       158: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       161: ifne          755
       164: aload         11
       166: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       169: checkcast     #20                 // class scala/reflect/api/Trees$ApplyApi
       172: astore        12
       174: aload         12
       176: ifnull        752
       179: aload_0
       180: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       183: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       186: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       189: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       194: invokevirtual #146                // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       197: aload         12
       199: invokevirtual #149                // Method scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
       202: astore        13
       204: aload         13
       206: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       209: ifne          749
       212: aload         13
       214: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       217: checkcast     #131                // class scala/Tuple2
       220: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
       223: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
       226: astore        14
       228: aload         13
       230: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       233: checkcast     #131                // class scala/Tuple2
       236: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
       239: checkcast     #139                // class scala/collection/immutable/List
       242: astore        15
       244: aload         14
       246: ifnull        746
       249: aload_0
       250: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       253: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       256: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       259: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       264: invokevirtual #152                // Method scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
       267: aload         14
       269: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       274: astore        16
       276: aload         16
       278: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       281: ifne          743
       284: aload         16
       286: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       289: checkcast     #34                 // class scala/reflect/api/Trees$SelectApi
       292: astore        17
       294: aload         17
       296: ifnull        740
       299: aload_0
       300: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       303: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       306: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       309: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       314: invokevirtual #156                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       317: aload         17
       319: invokevirtual #159                // Method scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
       322: astore        18
       324: aload         18
       326: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       329: ifne          737
       332: aload         18
       334: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       337: checkcast     #131                // class scala/Tuple2
       340: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
       343: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
       346: astore        19
       348: aload         18
       350: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       353: checkcast     #131                // class scala/Tuple2
       356: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
       359: checkcast     #15                 // class scala/reflect/api/Names$NameApi
       362: astore        20
       364: aload_0
       365: invokevirtual #161                // Method global:()Lscala/tools/nsc/Global;
       368: invokevirtual #167                // Method scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
       371: invokevirtual #170                // Method scala/reflect/internal/StdNames$nme$.unapply:()Lscala/reflect/internal/Names$TermName;
       374: aload         20
       376: astore        21
       378: dup
       379: ifnonnull     391
       382: pop
       383: aload         21
       385: ifnull        399
       388: goto          405
       391: aload         21
       393: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       396: ifeq          405
       399: iconst_1
       400: istore        4
       402: goto          458
       405: goto          408
       408: aload_0
       409: invokevirtual #161                // Method global:()Lscala/tools/nsc/Global;
       412: invokevirtual #167                // Method scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
       415: invokevirtual #179                // Method scala/reflect/internal/StdNames$nme$.unapplySeq:()Lscala/reflect/internal/Names$TermName;
       418: aload         20
       420: astore        22
       422: dup
       423: ifnonnull     435
       426: pop
       427: aload         22
       429: ifnull        443
       432: goto          449
       435: aload         22
       437: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       440: ifeq          449
       443: iconst_1
       444: istore        4
       446: goto          458
       449: goto          452
       452: iconst_0
       453: istore        4
       455: goto          458
       458: iload         4
       460: ifeq          734
       463: aload         15
       465: ifnull        734
       468: getstatic     #185                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
       471: aload         15
       473: invokevirtual #188                // Method scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       476: astore        23
       478: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       481: aload         23
       483: invokevirtual #195                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
       486: ifne          731
       489: new           #7                  // class scala/collection/SeqFactory$UnapplySeqWrapper
       492: dup
       493: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       496: aload         23
       498: invokevirtual #198                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       501: invokespecial #202                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       504: ifnull        731
       507: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       510: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       513: aload         23
       515: invokevirtual #198                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       518: iconst_1
       519: invokevirtual #206                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       522: iconst_0
       523: if_icmpne     731
       526: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       529: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       532: aload         23
       534: invokevirtual #198                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       537: iconst_0
       538: invokevirtual #210                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
       541: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
       544: astore        24
       546: aload         24
       548: ifnull        728
       551: aload_0
       552: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       555: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       558: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       561: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       566: invokevirtual #213                // Method scala/reflect/macros/Universe.IdentTag:()Lscala/reflect/ClassTag;
       569: aload         24
       571: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       576: astore        25
       578: aload         25
       580: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       583: ifne          725
       586: aload         25
       588: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       591: checkcast     #28                 // class scala/reflect/api/Trees$IdentApi
       594: astore        26
       596: aload         26
       598: ifnull        722
       601: aload_0
       602: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       605: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       608: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       611: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       616: invokevirtual #217                // Method scala/reflect/macros/Universe.Ident:()Lscala/reflect/api/Trees$IdentExtractor;
       619: aload         26
       621: invokevirtual #220                // Method scala/reflect/api/Trees$IdentExtractor.unapply:(Lscala/reflect/api/Trees$IdentApi;)Lscala/Option;
       624: astore        27
       626: aload         27
       628: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       631: ifne          719
       634: aload         27
       636: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       639: checkcast     #15                 // class scala/reflect/api/Names$NameApi
       642: astore        28
       644: aload_0
       645: invokevirtual #161                // Method global:()Lscala/tools/nsc/Global;
       648: invokevirtual #167                // Method scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
       651: invokevirtual #223                // Method scala/reflect/internal/StdNames$nme$.SELECTOR_DUMMY:()Lscala/reflect/internal/Names$TermName;
       654: aload         28
       656: astore        29
       658: dup
       659: ifnonnull     671
       662: pop
       663: aload         29
       665: ifnull        679
       668: goto          716
       671: aload         29
       673: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       676: ifeq          716
       679: aload_0
       680: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       683: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       686: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       689: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       694: invokevirtual #146                // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       697: aload_0
       698: aload         19
       700: invokevirtual #225                // Method transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
       703: aload_0
       704: aload         10
       706: invokevirtual #229                // Method transformTrees:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
       709: invokevirtual #233                // Method scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
       712: astore_2
       713: goto          1660
       716: goto          773
       719: goto          773
       722: goto          773
       725: goto          773
       728: goto          773
       731: goto          773
       734: goto          773
       737: goto          773
       740: goto          773
       743: goto          773
       746: goto          773
       749: goto          773
       752: goto          773
       755: goto          773
       758: goto          773
       761: goto          773
       764: goto          773
       767: goto          773
       770: goto          773
       773: aload         5
       775: ifnull        1651
       778: aload_0
       779: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       782: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       785: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       788: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       793: invokevirtual #106                // Method scala/reflect/macros/Universe.UnApplyTag:()Lscala/reflect/ClassTag;
       796: aload         5
       798: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       803: astore        30
       805: aload         30
       807: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       810: ifne          1648
       813: aload         30
       815: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       818: checkcast     #50                 // class scala/reflect/api/Trees$UnApplyApi
       821: astore        31
       823: aload         31
       825: ifnull        1645
       828: aload_0
       829: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       832: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       835: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       838: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       843: invokevirtual #126                // Method scala/reflect/macros/Universe.UnApply:()Lscala/reflect/api/Trees$UnApplyExtractor;
       846: aload         31
       848: invokevirtual #129                // Method scala/reflect/api/Trees$UnApplyExtractor.unapply:(Lscala/reflect/api/Trees$UnApplyApi;)Lscala/Option;
       851: astore        32
       853: aload         32
       855: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       858: ifne          1642
       861: aload         32
       863: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       866: checkcast     #131                // class scala/Tuple2
       869: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
       872: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
       875: astore        33
       877: aload         32
       879: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       882: checkcast     #131                // class scala/Tuple2
       885: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
       888: checkcast     #139                // class scala/collection/immutable/List
       891: astore        34
       893: aload         33
       895: ifnull        1639
       898: aload_0
       899: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       902: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       905: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       908: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       913: invokevirtual #142                // Method scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
       916: aload         33
       918: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       923: astore        35
       925: aload         35
       927: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       930: ifne          1636
       933: aload         35
       935: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       938: checkcast     #20                 // class scala/reflect/api/Trees$ApplyApi
       941: astore        36
       943: aload         36
       945: ifnull        1633
       948: aload_0
       949: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
       952: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
       955: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
       958: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       963: invokevirtual #146                // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       966: aload         36
       968: invokevirtual #149                // Method scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
       971: astore        37
       973: aload         37
       975: invokevirtual #118                // Method scala/Option.isEmpty:()Z
       978: ifne          1630
       981: aload         37
       983: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
       986: checkcast     #131                // class scala/Tuple2
       989: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
       992: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
       995: astore        38
       997: aload         37
       999: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1002: checkcast     #131                // class scala/Tuple2
      1005: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
      1008: checkcast     #139                // class scala/collection/immutable/List
      1011: astore        39
      1013: aload         38
      1015: ifnull        1627
      1018: aload_0
      1019: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1022: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1025: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1028: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1033: invokevirtual #236                // Method scala/reflect/macros/Universe.TypeApplyTag:()Lscala/reflect/ClassTag;
      1036: aload         38
      1038: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
      1043: astore        40
      1045: aload         40
      1047: invokevirtual #118                // Method scala/Option.isEmpty:()Z
      1050: ifne          1624
      1053: aload         40
      1055: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1058: checkcast     #44                 // class scala/reflect/api/Trees$TypeApplyApi
      1061: astore        41
      1063: aload         41
      1065: ifnull        1621
      1068: aload_0
      1069: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1072: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1075: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1078: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1083: invokevirtual #240                // Method scala/reflect/macros/Universe.TypeApply:()Lscala/reflect/api/Trees$TypeApplyExtractor;
      1086: aload         41
      1088: invokevirtual #243                // Method scala/reflect/api/Trees$TypeApplyExtractor.unapply:(Lscala/reflect/api/Trees$TypeApplyApi;)Lscala/Option;
      1091: astore        42
      1093: aload         42
      1095: invokevirtual #118                // Method scala/Option.isEmpty:()Z
      1098: ifne          1618
      1101: aload         42
      1103: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1106: checkcast     #131                // class scala/Tuple2
      1109: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
      1112: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
      1115: astore        43
      1117: aload         43
      1119: ifnull        1615
      1122: aload_0
      1123: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1126: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1129: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1132: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1137: invokevirtual #152                // Method scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
      1140: aload         43
      1142: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
      1147: astore        44
      1149: aload         44
      1151: invokevirtual #118                // Method scala/Option.isEmpty:()Z
      1154: ifne          1612
      1157: aload         44
      1159: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1162: checkcast     #34                 // class scala/reflect/api/Trees$SelectApi
      1165: astore        45
      1167: aload         45
      1169: ifnull        1609
      1172: aload_0
      1173: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1176: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1179: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1182: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1187: invokevirtual #156                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
      1190: aload         45
      1192: invokevirtual #159                // Method scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
      1195: astore        46
      1197: aload         46
      1199: invokevirtual #118                // Method scala/Option.isEmpty:()Z
      1202: ifne          1606
      1205: aload         46
      1207: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1210: checkcast     #131                // class scala/Tuple2
      1213: invokevirtual #134                // Method scala/Tuple2._1:()Ljava/lang/Object;
      1216: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
      1219: astore        47
      1221: aload         46
      1223: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1226: checkcast     #131                // class scala/Tuple2
      1229: invokevirtual #137                // Method scala/Tuple2._2:()Ljava/lang/Object;
      1232: checkcast     #15                 // class scala/reflect/api/Names$NameApi
      1235: astore        48
      1237: aload_0
      1238: invokevirtual #161                // Method global:()Lscala/tools/nsc/Global;
      1241: invokevirtual #167                // Method scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
      1244: invokevirtual #170                // Method scala/reflect/internal/StdNames$nme$.unapply:()Lscala/reflect/internal/Names$TermName;
      1247: aload         48
      1249: astore        49
      1251: dup
      1252: ifnonnull     1264
      1255: pop
      1256: aload         49
      1258: ifnull        1272
      1261: goto          1277
      1264: aload         49
      1266: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      1269: ifeq          1277
      1272: iconst_1
      1273: istore_3
      1274: goto          1328
      1277: goto          1280
      1280: aload_0
      1281: invokevirtual #161                // Method global:()Lscala/tools/nsc/Global;
      1284: invokevirtual #167                // Method scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
      1287: invokevirtual #179                // Method scala/reflect/internal/StdNames$nme$.unapplySeq:()Lscala/reflect/internal/Names$TermName;
      1290: aload         48
      1292: astore        50
      1294: dup
      1295: ifnonnull     1307
      1298: pop
      1299: aload         50
      1301: ifnull        1315
      1304: goto          1320
      1307: aload         50
      1309: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      1312: ifeq          1320
      1315: iconst_1
      1316: istore_3
      1317: goto          1328
      1320: goto          1323
      1323: iconst_0
      1324: istore_3
      1325: goto          1328
      1328: iload_3
      1329: ifeq          1603
      1332: aload         39
      1334: ifnull        1603
      1337: getstatic     #185                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      1340: aload         39
      1342: invokevirtual #188                // Method scala/collection/immutable/List$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      1345: astore        51
      1347: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      1350: aload         51
      1352: invokevirtual #195                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
      1355: ifne          1600
      1358: new           #7                  // class scala/collection/SeqFactory$UnapplySeqWrapper
      1361: dup
      1362: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      1365: aload         51
      1367: invokevirtual #198                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      1370: invokespecial #202                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
      1373: ifnull        1600
      1376: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      1379: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      1382: aload         51
      1384: invokevirtual #198                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      1387: iconst_1
      1388: invokevirtual #206                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
      1391: iconst_0
      1392: if_icmpne     1600
      1395: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      1398: getstatic     #191                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
      1401: aload         51
      1403: invokevirtual #198                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
      1406: iconst_0
      1407: invokevirtual #210                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
      1410: checkcast     #41                 // class scala/reflect/api/Trees$TreeApi
      1413: astore        52
      1415: aload         52
      1417: ifnull        1597
      1420: aload_0
      1421: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1424: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1427: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1430: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1435: invokevirtual #213                // Method scala/reflect/macros/Universe.IdentTag:()Lscala/reflect/ClassTag;
      1438: aload         52
      1440: invokeinterface #112,  2          // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
      1445: astore        53
      1447: aload         53
      1449: invokevirtual #118                // Method scala/Option.isEmpty:()Z
      1452: ifne          1594
      1455: aload         53
      1457: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1460: checkcast     #28                 // class scala/reflect/api/Trees$IdentApi
      1463: astore        54
      1465: aload         54
      1467: ifnull        1591
      1470: aload_0
      1471: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1474: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1477: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1480: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1485: invokevirtual #217                // Method scala/reflect/macros/Universe.Ident:()Lscala/reflect/api/Trees$IdentExtractor;
      1488: aload         54
      1490: invokevirtual #220                // Method scala/reflect/api/Trees$IdentExtractor.unapply:(Lscala/reflect/api/Trees$IdentApi;)Lscala/Option;
      1493: astore        55
      1495: aload         55
      1497: invokevirtual #118                // Method scala/Option.isEmpty:()Z
      1500: ifne          1588
      1503: aload         55
      1505: invokevirtual #122                // Method scala/Option.get:()Ljava/lang/Object;
      1508: checkcast     #15                 // class scala/reflect/api/Names$NameApi
      1511: astore        56
      1513: aload_0
      1514: invokevirtual #161                // Method global:()Lscala/tools/nsc/Global;
      1517: invokevirtual #167                // Method scala/tools/nsc/Global.nme:()Lscala/reflect/internal/StdNames$nme$;
      1520: invokevirtual #223                // Method scala/reflect/internal/StdNames$nme$.SELECTOR_DUMMY:()Lscala/reflect/internal/Names$TermName;
      1523: aload         56
      1525: astore        57
      1527: dup
      1528: ifnonnull     1540
      1531: pop
      1532: aload         57
      1534: ifnull        1548
      1537: goto          1585
      1540: aload         57
      1542: invokevirtual #176                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      1545: ifeq          1585
      1548: aload_0
      1549: invokevirtual #86                 // Method shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer:()Lshapeless/LazyMacros$DerivationContext;
      1552: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
      1555: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
      1558: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
      1563: invokevirtual #146                // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
      1566: aload_0
      1567: aload         47
      1569: invokevirtual #225                // Method transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
      1572: aload_0
      1573: aload         34
      1575: invokevirtual #229                // Method transformTrees:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      1578: invokevirtual #233                // Method scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
      1581: astore_2
      1582: goto          1660
      1585: goto          1654
      1588: goto          1654
      1591: goto          1654
      1594: goto          1654
      1597: goto          1654
      1600: goto          1654
      1603: goto          1654
      1606: goto          1654
      1609: goto          1654
      1612: goto          1654
      1615: goto          1654
      1618: goto          1654
      1621: goto          1654
      1624: goto          1654
      1627: goto          1654
      1630: goto          1654
      1633: goto          1654
      1636: goto          1654
      1639: goto          1654
      1642: goto          1654
      1645: goto          1654
      1648: goto          1654
      1651: goto          1654
      1654: aload         5
      1656: astore_2
      1657: goto          1660
      1660: aload_2
      1661: invokespecial #244                // Method scala/reflect/api/Trees$Transformer.transform:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
      1664: areturn
      StackMapTable: number_of_entries = 67
        frame_type = 255 /* full_frame */
          offset_delta = 391
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/internal/Names$TermName ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/internal/Names$TermName ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 212
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$IdentApi, class scala/Option, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/internal/Names$TermName ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 100 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$IdentApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$IdentApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, int, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$SelectApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$UnApplyApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 490
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/internal/Names$TermName ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/internal/Names$TermName ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 211
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$IdentApi, class scala/Option, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/internal/Names$TermName ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 100 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$IdentApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$IdentApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps, class scala/reflect/api/Trees$TreeApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi, top, class scala/collection/SeqOps ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, int, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$NameApi, class scala/reflect/api/Names$NameApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$TypeApplyApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option, class scala/reflect/api/Trees$ApplyApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/collection/immutable/List ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option, class scala/reflect/api/Trees$UnApplyApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/Option ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Trees$TreeApi, top, top, class scala/reflect/api/Trees$TreeApi ]
          stack = [ class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes ]
      LineNumberTable:
        line 508: 0
        line 509: 1
        line 510: 4
        line 509: 44
        line 510: 54
        line 509: 92
        line 509: 108
        line 510: 124
        line 509: 164
        line 510: 174
        line 509: 212
        line 509: 228
        line 510: 244
        line 509: 284
        line 510: 294
        line 509: 332
        line 509: 348
        line 510: 364
        line 509: 586
        line 510: 596
        line 509: 634
        line 510: 644
        line 511: 679
        line 510: 716
        line 512: 773
        line 509: 813
        line 512: 823
        line 509: 861
        line 509: 877
        line 512: 893
        line 509: 933
        line 512: 943
        line 509: 981
        line 509: 997
        line 512: 1013
        line 509: 1053
        line 512: 1063
        line 509: 1101
        line 512: 1117
        line 509: 1157
        line 512: 1167
        line 509: 1205
        line 509: 1221
        line 512: 1237
        line 509: 1455
        line 512: 1465
        line 509: 1503
        line 512: 1513
        line 513: 1548
        line 512: 1585
        line 514: 1654
        line 509: 1660
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          346     391    19  qual   Lscala/reflect/api/Trees$TreeApi;
          122     639    10  args   Lscala/collection/immutable/List;
         1219     387    47  qual   Lscala/reflect/api/Trees$TreeApi;
          891     751    34  args   Lscala/collection/immutable/List;
            0    1665     0  this   Lshapeless/LazyMacros$DerivationContext$StripUnApplyNodes;
            0    1665     1  tree   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      tree                           final

  public shapeless.LazyMacros$DerivationContext shapeless$LazyMacros$DerivationContext$StripUnApplyNodes$$$outer();
    descriptor: ()Lshapeless/LazyMacros$DerivationContext;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #252                // Field $outer:Lshapeless/LazyMacros$DerivationContext;
         4: areturn
      LineNumberTable:
        line 503: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lshapeless/LazyMacros$DerivationContext$StripUnApplyNodes;

  public shapeless.LazyMacros$DerivationContext$StripUnApplyNodes(shapeless.LazyMacros$DerivationContext);
    descriptor: (Lshapeless/LazyMacros$DerivationContext;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #252                // Field $outer:Lshapeless/LazyMacros$DerivationContext;
        11: aload_0
        12: aload_1
        13: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
        16: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
        19: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        24: invokespecial #256                // Method scala/reflect/api/Trees$Transformer."<init>":(Lscala/reflect/api/Universe;)V
        27: aload_0
        28: aload_1
        29: invokevirtual #90                 // Method shapeless/LazyMacros$DerivationContext.shapeless$LazyMacros$DerivationContext$$$outer:()Lshapeless/LazyMacros;
        32: invokevirtual #94                 // Method shapeless/LazyMacros.c:()Lscala/reflect/macros/whitebox/Context;
        35: invokeinterface #100,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        40: checkcast     #163                // class scala/tools/nsc/Global
        43: putfield      #77                 // Field global:Lscala/tools/nsc/Global;
        46: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 503: 0
        line 504: 27
        line 503: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lshapeless/LazyMacros$DerivationContext$StripUnApplyNodes;
            0      47     1 $outer   Lshapeless/LazyMacros$DerivationContext;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
}
InnerClasses:
  public static final #10= #7 of #9;      // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #13= #12 of #9;           // UnapplySeqWrapper$=class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
  public abstract #18= #15 of #17;        // NameApi=class scala/reflect/api/Names$NameApi of class scala/reflect/api/Names
  public #23= #20 of #22;                 // ApplyApi=class scala/reflect/api/Trees$ApplyApi of class scala/reflect/api/Trees
  public abstract #26= #25 of #22;        // ApplyExtractor=class scala/reflect/api/Trees$ApplyExtractor of class scala/reflect/api/Trees
  public #29= #28 of #22;                 // IdentApi=class scala/reflect/api/Trees$IdentApi of class scala/reflect/api/Trees
  public abstract #32= #31 of #22;        // IdentExtractor=class scala/reflect/api/Trees$IdentExtractor of class scala/reflect/api/Trees
  public #35= #34 of #22;                 // SelectApi=class scala/reflect/api/Trees$SelectApi of class scala/reflect/api/Trees
  public abstract #38= #37 of #22;        // SelectExtractor=class scala/reflect/api/Trees$SelectExtractor of class scala/reflect/api/Trees
  public abstract #39= #4 of #22;         // Transformer=class scala/reflect/api/Trees$Transformer of class scala/reflect/api/Trees
  public #42= #41 of #22;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #45= #44 of #22;                 // TypeApplyApi=class scala/reflect/api/Trees$TypeApplyApi of class scala/reflect/api/Trees
  public abstract #48= #47 of #22;        // TypeApplyExtractor=class scala/reflect/api/Trees$TypeApplyExtractor of class scala/reflect/api/Trees
  public #51= #50 of #22;                 // UnApplyApi=class scala/reflect/api/Trees$UnApplyApi of class scala/reflect/api/Trees
  public abstract #54= #53 of #22;        // UnApplyExtractor=class scala/reflect/api/Trees$UnApplyExtractor of class scala/reflect/api/Trees
  public abstract #59= #56 of #58;        // TermName=class scala/reflect/internal/Names$TermName of class scala/reflect/internal/Names
  public #64= #61 of #63;                 // nme$=class scala/reflect/internal/StdNames$nme$ of class scala/reflect/internal/StdNames
  public #69= #66 of #68;                 // DerivationContext=class shapeless/LazyMacros$DerivationContext of class shapeless/LazyMacros
  public #70= #2 of #66;                  // StripUnApplyNodes=class shapeless/LazyMacros$DerivationContext$StripUnApplyNodes of class shapeless/LazyMacros$DerivationContext
SourceFile: "lazy.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 C7 00 FD 00 00 47 00 4B 00 00 53
   00 54 00 00 50 00 51 00
  Scala: length = 0x0 (unknown attribute)

