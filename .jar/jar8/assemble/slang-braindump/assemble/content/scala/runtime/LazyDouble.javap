Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/LazyDouble.class
  Last modified May 29, 2022; size 1863 bytes
  SHA-256 checksum 022a0ee9da5129a040dda23b8bfd62462fcb3ee98bdd2a994fd01009a6052aed
  Compiled from "LazyRef.scala"
public class scala.runtime.LazyDouble implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/runtime/LazyDouble
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               scala/runtime/LazyDouble
   #2 = Class              #1             // scala/runtime/LazyDouble
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               java/io/Serializable
   #6 = Class              #5             // java/io/Serializable
   #7 = Utf8               LazyRef.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005\u00153A\u0001C\u0005\u0001\u001d!)q\u0004\u0001C\u0001A!I1\u0005\u0001a\u0001\u0002\u0003\u0006K\u0001\n\u0005\u0006W\u0001!\t\u0001\f\u0005\n[\u0001\u0001\r\u0011!Q!\n9BQ!\r\u0001\u0005\u0002IBQa\r\u0001\u0005\u0002QBQA\u000e\u0001\u0005B]\u0012!\u0002T1{s\u0012{WO\u00197f\u0015\tQ1\"A\u0004sk:$\u0018.\\3\u000b\u00031\tQa]2bY\u0006\u001c\u0001aE\u0002\u0001\u001fM\u0001\"\u0001E\t\u000e\u0003-I!AE\u0006\u0003\r\u0005s\u0017PU3g!\t!BD\u0004\u0002\u001659\u0011a#G\u0007\u0002/)\u0011\u0001$D\u0001\u0007yI|w\u000e\u001e \n\u00031I!aG\u0006\u0002\u000fA\f7m[1hK&\u0011QD\b\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u00037-\ta\u0001P5oSRtD#A\u0011\u0011\u0005\t\u0002Q\"A\u0005\u0002\u0019}Kg.\u001b;jC2L\'0\u001a3\u0011\u0005A)\u0013B\u0001\u0014\f\u0005\u001d\u0011un\u001c7fC:D#A\u0001\u0015\u0011\u0005AI\u0013B\u0001\u0016\f\u0005!1x\u000e\\1uS2,\u0017aC5oSRL\u0017\r\\5{K\u0012,\u0012\u0001J\u0001\u0007?Z\fG.^3\u0011\u0005Ay\u0013B\u0001\u0019\f\u0005\u0019!u.\u001e2mK\u0006)a/\u00197vKV\ta&\u0001\u0006j]&$\u0018.\u00197ju\u0016$\"AL\u001b\t\u000bE2\u0001\u0019\u0001\u0018\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012\u0001\u000f\t\u0003sur!AO\u001e\u0011\u0005YY\u0011B\u0001\u001f\f\u0003\u0019\u0001&/\u001a3fM&\u0011ah\u0010\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005qZ\u0001\u0006\u0002\u0001Bc\u0011\u0003\"\u0001\u0005\"\n\u0005\r[!\u0001E*fe&\fGNV3sg&|g.V%E=\u0005\t\u0001
  #11 = Utf8               serialVersionUID
  #12 = Utf8               J
  #13 = Long               1l
  #15 = Utf8               _initialized
  #16 = Utf8               Z
  #17 = Utf8               _value
  #18 = Utf8               D
  #19 = Utf8               initialized
  #20 = Utf8               ()Z
  #21 = NameAndType        #15:#16        // _initialized:Z
  #22 = Fieldref           #2.#21         // scala/runtime/LazyDouble._initialized:Z
  #23 = Utf8               this
  #24 = Utf8               Lscala/runtime/LazyDouble;
  #25 = Utf8               value
  #26 = Utf8               ()D
  #27 = NameAndType        #17:#18        // _value:D
  #28 = Fieldref           #2.#27         // scala/runtime/LazyDouble._value:D
  #29 = Utf8               initialize
  #30 = Utf8               (D)D
  #31 = Utf8               toString
  #32 = Utf8               ()Ljava/lang/String;
  #33 = Utf8               java/lang/StringBuilder
  #34 = Class              #33            // java/lang/StringBuilder
  #35 = Integer            11
  #36 = Utf8               <init>
  #37 = Utf8               (I)V
  #38 = NameAndType        #36:#37        // "<init>":(I)V
  #39 = Methodref          #34.#38        // java/lang/StringBuilder."<init>":(I)V
  #40 = Utf8               LazyDouble
  #41 = String             #40            // LazyDouble
  #42 = Utf8               append
  #43 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #44 = NameAndType        #42:#43        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #45 = Methodref          #34.#44        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #46 = Integer            4
  #47 = Utf8               of:
  #48 = String             #47            // of:
  #49 = Utf8               (D)Ljava/lang/StringBuilder;
  #50 = NameAndType        #42:#49        // append:(D)Ljava/lang/StringBuilder;
  #51 = Methodref          #34.#50        // java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
  #52 = NameAndType        #31:#32        // toString:()Ljava/lang/String;
  #53 = Methodref          #34.#52        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #54 = Utf8               thunk
  #55 = String             #54            // thunk
  #56 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #57 = NameAndType        #42:#56        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #58 = Methodref          #34.#57        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #59 = Utf8               java/lang/String
  #60 = Class              #59            // java/lang/String
  #61 = Utf8               ()V
  #62 = NameAndType        #36:#61        // "<init>":()V
  #63 = Methodref          #4.#62         // java/lang/Object."<init>":()V
  #64 = Utf8               ConstantValue
  #65 = Utf8               Code
  #66 = Utf8               LineNumberTable
  #67 = Utf8               LocalVariableTable
  #68 = Utf8               MethodParameters
  #69 = Utf8               StackMapTable
  #70 = Utf8               SourceFile
  #71 = Utf8               RuntimeVisibleAnnotations
  #72 = Utf8               ScalaInlineInfo
  #73 = Utf8               ScalaSig
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1l

  private volatile boolean _initialized;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private double _value;
    descriptor: D
    flags: (0x0002) ACC_PRIVATE

  public boolean initialized();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #22                 // Field _initialized:Z
         4: ireturn
      LineNumberTable:
        line 150: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/LazyDouble;

  public double value();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #28                 // Field _value:D
         4: dreturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/LazyDouble;

  public double initialize(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: putfield      #28                 // Field _value:D
         5: aload_0
         6: iconst_1
         7: putfield      #22                 // Field _initialized:Z
        10: dload_1
        11: dreturn
      LineNumberTable:
        line 155: 0
        line 156: 5
        line 157: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/LazyDouble;
            0      12     1 value   D
    MethodParameters:
      Name                           Flags
      value                          final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #34                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #35                 // int 11
         6: invokespecial #39                 // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #41                 // String LazyDouble
        11: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: getfield      #22                 // Field _initialized:Z
        18: ifeq          48
        21: new           #34                 // class java/lang/StringBuilder
        24: dup
        25: ldc           #46                 // int 4
        27: invokespecial #39                 // Method java/lang/StringBuilder."<init>":(I)V
        30: ldc           #48                 // String of:
        32: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: aload_0
        36: getfield      #28                 // Field _value:D
        39: invokevirtual #51                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
        42: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        45: goto          50
        48: ldc           #55                 // String thunk
        50: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        53: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        56: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 112 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/runtime/LazyDouble ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lscala/runtime/LazyDouble;

  public scala.runtime.LazyDouble();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #63                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/LazyDouble;
}
SourceFile: "LazyRef.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00153A\u0001C\u0005\u0001\u001d!)q\u0004\u0001C\u0001A!I1\u0005\u0001a\u0001\u0002\u0003\u0006K\u0001\n\u0005\u0006W\u0001!\t\u0001\f\u0005\n[\u0001\u0001\r\u0011!Q!\n9BQ!\r\u0001\u0005\u0002IBQa\r\u0001\u0005\u0002QBQA\u000e\u0001\u0005B]\u0012!\u0002T1{s\u0012{WO\u00197f\u0015\tQ1\"A\u0004sk:$\u0018.\\3\u000b\u00031\tQa]2bY\u0006\u001c\u0001aE\u0002\u0001\u001fM\u0001\"\u0001E\t\u000e\u0003-I!AE\u0006\u0003\r\u0005s\u0017PU3g!\t!BD\u0004\u0002\u001659\u0011a#G\u0007\u0002/)\u0011\u0001$D\u0001\u0007yI|w\u000e\u001e \n\u00031I!aG\u0006\u0002\u000fA\f7m[1hK&\u0011QD\b\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u00037-\ta\u0001P5oSRtD#A\u0011\u0011\u0005\t\u0002Q\"A\u0005\u0002\u0019}Kg.\u001b;jC2L\'0\u001a3\u0011\u0005A)\u0013B\u0001\u0014\f\u0005\u001d\u0011un\u001c7fC:D#A\u0001\u0015\u0011\u0005AI\u0013B\u0001\u0016\f\u0005!1x\u000e\\1uS2,\u0017aC5oSRL\u0017\r\\5{K\u0012,\u0012\u0001J\u0001\u0007?Z\fG.^3\u0011\u0005Ay\u0013B\u0001\u0019\f\u0005\u0019!u.\u001e2mK\u0006)a/\u00197vKV\ta&\u0001\u0006j]&$\u0018.\u00197ju\u0016$\"AL\u001b\t\u000bE2\u0001\u0019\u0001\u0018\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012\u0001\u000f\t\u0003sur!AO\u001e\u0011\u0005YY\u0011B\u0001\u001f\f\u0003\u0019\u0001&/\u001a3fM&\u0011ah\u0010\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005qZ\u0001\u0006\u0002\u0001Bc\u0011\u0003\"\u0001\u0005\"\n\u0005\r[!\u0001E*fe&\fGNV3sg&|g.V%E=\u0005\t\u0001"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 24 00 3D 00 00 1D 00 1E 00 00 13
   00 14 00 00 1F 00 20 00 00 19 00 1A 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
