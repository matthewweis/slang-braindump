Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/concurrent/BatchingExecutor$SyncBatch.class
  Last modified May 29, 2022; size 1661 bytes
  SHA-256 checksum aac7ed9027f52aca3db188bfca559903e45991b382c0ff8ce3226537b3d559fb
  Compiled from "BatchingExecutor.scala"
public final class scala.concurrent.BatchingExecutor$SyncBatch extends scala.concurrent.BatchingExecutor$AbstractBatch implements java.lang.Runnable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/concurrent/BatchingExecutor$SyncBatch
  super_class: #4                         // scala/concurrent/BatchingExecutor$AbstractBatch
  interfaces: 1, fields: 0, methods: 3, attributes: 4
Constant pool:
   #1 = Utf8               scala/concurrent/BatchingExecutor$SyncBatch
   #2 = Class              #1             // scala/concurrent/BatchingExecutor$SyncBatch
   #3 = Utf8               scala/concurrent/BatchingExecutor$AbstractBatch
   #4 = Class              #3             // scala/concurrent/BatchingExecutor$AbstractBatch
   #5 = Utf8               java/lang/Runnable
   #6 = Class              #5             // java/lang/Runnable
   #7 = Utf8               BatchingExecutor.scala
   #8 = Utf8               scala/concurrent/BatchingExecutor
   #9 = Class              #8             // scala/concurrent/BatchingExecutor
  #10 = Utf8               AbstractBatch
  #11 = Utf8               SyncBatch
  #12 = Utf8               run
  #13 = Utf8               ()V
  #14 = Utf8               java/lang/InterruptedException
  #15 = Class              #14            // java/lang/InterruptedException
  #16 = Utf8               java/lang/Throwable
  #17 = Class              #16            // java/lang/Throwable
  #18 = Utf8               runN
  #19 = Utf8               (I)V
  #20 = NameAndType        #18:#19        // runN:(I)V
  #21 = Methodref          #2.#20         // scala/concurrent/BatchingExecutor$SyncBatch.runN:(I)V
  #22 = Utf8               scala$concurrent$BatchingExecutor$SyncBatch$$$outer
  #23 = Utf8               ()Lscala/concurrent/BatchingExecutor;
  #24 = NameAndType        #22:#23        // scala$concurrent$BatchingExecutor$SyncBatch$$$outer:()Lscala/concurrent/BatchingExecutor;
  #25 = Methodref          #2.#24         // scala/concurrent/BatchingExecutor$SyncBatch.scala$concurrent$BatchingExecutor$SyncBatch$$$outer:()Lscala/concurrent/BatchingExecutor;
  #26 = Utf8               reportFailure
  #27 = Utf8               (Ljava/lang/Throwable;)V
  #28 = NameAndType        #26:#27        // reportFailure:(Ljava/lang/Throwable;)V
  #29 = InterfaceMethodref #9.#28         // scala/concurrent/BatchingExecutor.reportFailure:(Ljava/lang/Throwable;)V
  #30 = Utf8               scala/util/control/NonFatal$
  #31 = Class              #30            // scala/util/control/NonFatal$
  #32 = Utf8               MODULE$
  #33 = Utf8               Lscala/util/control/NonFatal$;
  #34 = NameAndType        #32:#33        // MODULE$:Lscala/util/control/NonFatal$;
  #35 = Fieldref           #31.#34        // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
  #36 = Utf8               apply
  #37 = Utf8               (Ljava/lang/Throwable;)Z
  #38 = NameAndType        #36:#37        // apply:(Ljava/lang/Throwable;)Z
  #39 = Methodref          #31.#38        // scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
  #40 = Utf8               size
  #41 = Utf8               ()I
  #42 = NameAndType        #40:#41        // size:()I
  #43 = Methodref          #2.#42         // scala/concurrent/BatchingExecutor$SyncBatch.size:()I
  #44 = Utf8               this
  #45 = Utf8               Lscala/concurrent/BatchingExecutor$SyncBatch;
  #46 = Utf8               $outer
  #47 = Utf8               Lscala/concurrent/BatchingExecutor;
  #48 = NameAndType        #46:#47        // $outer:Lscala/concurrent/BatchingExecutor;
  #49 = Fieldref           #2.#48         // scala/concurrent/BatchingExecutor$SyncBatch.$outer:Lscala/concurrent/BatchingExecutor;
  #50 = Utf8               <init>
  #51 = Utf8               (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
  #52 = Utf8               runnable
  #53 = Utf8               scala/concurrent/BatchingExecutorStatics$
  #54 = Class              #53            // scala/concurrent/BatchingExecutorStatics$
  #55 = Utf8               Lscala/concurrent/BatchingExecutorStatics$;
  #56 = NameAndType        #32:#55        // MODULE$:Lscala/concurrent/BatchingExecutorStatics$;
  #57 = Fieldref           #54.#56        // scala/concurrent/BatchingExecutorStatics$.MODULE$:Lscala/concurrent/BatchingExecutorStatics$;
  #58 = Utf8               emptyBatchArray
  #59 = Utf8               ()[Ljava/lang/Runnable;
  #60 = NameAndType        #58:#59        // emptyBatchArray:()[Ljava/lang/Runnable;
  #61 = Methodref          #54.#60        // scala/concurrent/BatchingExecutorStatics$.emptyBatchArray:()[Ljava/lang/Runnable;
  #62 = Utf8               (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;[Ljava/lang/Runnable;I)V
  #63 = NameAndType        #50:#62        // "<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;[Ljava/lang/Runnable;I)V
  #64 = Methodref          #4.#63         // scala/concurrent/BatchingExecutor$AbstractBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;[Ljava/lang/Runnable;I)V
  #65 = Utf8               Ljava/lang/Runnable;
  #66 = Utf8               Code
  #67 = Utf8               StackMapTable
  #68 = Utf8               LineNumberTable
  #69 = Utf8               LocalVariableTable
  #70 = Utf8               MethodParameters
  #71 = Utf8               InnerClasses
  #72 = Utf8               SourceFile
  #73 = Utf8               ScalaInlineInfo
  #74 = Utf8               Scala
{
  public final void run();
    descriptor: ()V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: sipush        1024
         4: invokevirtual #21                 // Method runN:(I)V
         7: goto          50
        10: astore_1
        11: aload_0
        12: invokevirtual #25                 // Method scala$concurrent$BatchingExecutor$SyncBatch$$$outer:()Lscala/concurrent/BatchingExecutor;
        15: aload_1
        16: invokeinterface #29,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.reportFailure:(Ljava/lang/Throwable;)V
        21: goto          50
        24: astore_2
        25: getstatic     #35                 // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
        28: aload_2
        29: invokevirtual #39                 // Method scala/util/control/NonFatal$.apply:(Ljava/lang/Throwable;)Z
        32: ifeq          48
        35: aload_0
        36: invokevirtual #25                 // Method scala$concurrent$BatchingExecutor$SyncBatch$$$outer:()Lscala/concurrent/BatchingExecutor;
        39: aload_2
        40: invokeinterface #29,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.reportFailure:(Ljava/lang/Throwable;)V
        45: goto          50
        48: aload_2
        49: athrow
        50: aload_0
        51: invokevirtual #43                 // Method size:()I
        54: iconst_0
        55: if_icmpgt     0
        58: return
      Exception table:
         from    to  target type
             0     7    10   Class java/lang/InterruptedException
             0     7    24   Class java/lang/Throwable
      StackMapTable: number_of_entries = 5
        frame_type = 0 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/InterruptedException ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, class java/lang/Throwable ]
        frame_type = 249 /* chop */
          offset_delta = 1
      LineNumberTable:
        line 208: 0
        line 210: 11
        line 211: 25
        line 212: 35
        line 215: 50
        line 207: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lscala/concurrent/BatchingExecutor$SyncBatch;

  public scala.concurrent.BatchingExecutor scala$concurrent$BatchingExecutor$SyncBatch$$$outer();
    descriptor: ()Lscala/concurrent/BatchingExecutor;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #49                 // Field $outer:Lscala/concurrent/BatchingExecutor;
         4: areturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/BatchingExecutor$SyncBatch;

  public scala.concurrent.BatchingExecutor$SyncBatch(scala.concurrent.BatchingExecutor, java.lang.Runnable);
    descriptor: (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: getstatic     #57                 // Field scala/concurrent/BatchingExecutorStatics$.MODULE$:Lscala/concurrent/BatchingExecutorStatics$;
         6: invokevirtual #61                 // Method scala/concurrent/BatchingExecutorStatics$.emptyBatchArray:()[Ljava/lang/Runnable;
         9: iconst_1
        10: invokespecial #64                 // Method scala/concurrent/BatchingExecutor$AbstractBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;[Ljava/lang/Runnable;I)V
        13: return
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/concurrent/BatchingExecutor$SyncBatch;
            0      14     1 $outer   Lscala/concurrent/BatchingExecutor;
            0      14     2 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      runnable                       final
}
InnerClasses:
  private abstract #10= #4 of #9;         // AbstractBatch=class scala/concurrent/BatchingExecutor$AbstractBatch of class scala/concurrent/BatchingExecutor
  private final #11= #2 of #9;            // SyncBatch=class scala/concurrent/BatchingExecutor$SyncBatch of class scala/concurrent/BatchingExecutor
SourceFile: "BatchingExecutor.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 32 00 33 01 00 0C 00 0D 01 00 16
   00 17 01
  Scala: length = 0x0 (unknown attribute)

