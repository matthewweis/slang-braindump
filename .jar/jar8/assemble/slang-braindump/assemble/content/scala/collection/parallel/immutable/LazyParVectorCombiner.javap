Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/immutable/LazyParVectorCombiner.class
  Last modified May 29, 2022; size 9735 bytes
  SHA-256 checksum a18e6d79bf9ead1bb514201330b3eefaa02ad0f075d6d98891a6ae806f13893c
  Compiled from "ParVector.scala"
public class scala.collection.parallel.immutable.LazyParVectorCombiner<T extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.Combiner<T, scala.collection.parallel.immutable.ParVector<T>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/immutable/LazyParVectorCombiner
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 30, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/parallel/immutable/LazyParVectorCombiner
    #2 = Class              #1            // scala/collection/parallel/immutable/LazyParVectorCombiner
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/Combiner<TT;Lscala/collection/parallel/immutable/ParVector<TT;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/Combiner
    #7 = Class              #6            // scala/collection/parallel/Combiner
    #8 = Utf8               ParVector.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u00154Q\u0001D\u0007\u0001\u001bUAQa\f\u0001\u0005\u0002ABqA\r\u0001A\u0002\u0013\u00051\u0007C\u00048\u0001\u0001\u0007I\u0011\u0001\u001d\t\ry\u0002\u0001\u0015)\u00035\u0011\u001dy\u0004A1A\u0005\u0002\u0001Ca\u0001\u0014\u0001!\u0002\u0013\t\u0005\"B\'\u0001\t\u0003\u0019\u0004\"\u0002(\u0001\t\u0003y\u0005\"B*\u0001\t\u0003!\u0006\"B+\u0001\t\u00031\u0006\"B,\u0001\t\u0003A&!\u0006\'buf\u0004\u0016M\u001d,fGR|\'oQ8nE&tWM\u001d\u0006\u0003\u001d=\t\u0011\"[7nkR\f\'\r\\3\u000b\u0005A\t\u0012\u0001\u00039be\u0006dG.\u001a7\u000b\u0005I\u0019\u0012AC2pY2,7\r^5p]*\tA#A\u0003tG\u0006d\u0017-\u0006\u0002\u0017CM\u0019\u0001aF\u000e\u0011\u0005aIR\"A\n\n\u0005i\u0019\"AB!osJ+g\r\u0005\u0003\u001d;}YS\"A\b\n\u0005yy!\u0001C\"p[\nLg.\u001a:\u0011\u0005\u0001\nC\u0002\u0001\u0003\u0006E\u0001\u0011\r\u0001\n\u0002\u0002)\u000e\u0001\u0011CA\u0013)!\tAb%\u0003\u0002(\'\t9aj\u001c;iS:<\u0007C\u0001\r*\u0013\tQ3CA\u0002B]f\u00042\u0001L\u0017 \u001b\u0005i\u0011B\u0001\u0018\u000e\u0005%\u0001\u0016M\u001d,fGR|\'/\u0001\u0004=S:LGO\u0010\u000b\u0002cA\u0019A\u0006A\u0010\u0002\u0005MTX#\u0001\u001b\u0011\u0005a)\u0014B\u0001\u001c\u0014\u0005\rIe\u000e^\u0001\u0007gj|F%Z9\u0015\u0005eb\u0004C\u0001\r;\u0013\tY4C\u0001\u0003V]&$\bbB\u001f\u0004\u0003\u0003\u0005\r\u0001N\u0001\u0004q\u0012\n\u0014aA:{A\u00059a/Z2u_J\u001cX#A!\u0011\u0007\t+u)D\u0001D\u0015\t!\u0015#A\u0004nkR\f\'\r\\3\n\u0005\u0019\u001b%aC!se\u0006L()\u001e4gKJ\u00042\u0001\u0013& \u001b\u0005I%B\u0001\b\u0012\u0013\tY\u0015JA\u0007WK\u000e$xN\u001d\"vS2$WM]\u0001\tm\u0016\u001cGo\u001c:tA\u0005!1/\u001b>f\u0003\u0019\tG\rZ(oKR\u0011\u0001+U\u0007\u0002\u0001!)!\u000b\u0003a\u0001?\u0005!Q\r\\3n\u0003\u0015\u0019G.Z1s)\u0005I\u0014A\u0002:fgVdG\u000fF\u0001,\u0003\u001d\u0019w.\u001c2j]\u0016,2!\u0017/a)\tQ6\r\u0005\u0003\u001d;m{\u0006C\u0001\u0011]\t\u0015i6B1\u0001_\u0005\u0005)\u0016CA\u0013 !\t\u0001\u0003\rB\u0003b\u0017\t\u0007!MA\u0003OK^$v.\u0005\u0002,Q!)Am\u0003a\u00015\u0006)q\u000e\u001e5fe\u0002
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               sz
   #18 = Utf8               I
   #19 = Utf8               vectors
   #20 = Utf8               Lscala/collection/mutable/ArrayBuffer;
   #21 = Utf8               Lscala/collection/mutable/ArrayBuffer<Lscala/collection/immutable/VectorBuilder<TT;>;>;
   #22 = Utf8               _combinerTaskSupport
   #23 = Utf8               Lscala/collection/parallel/TaskSupport;
   #24 = Utf8               combinerTaskSupport
   #25 = Utf8               ()Lscala/collection/parallel/TaskSupport;
   #26 = Utf8               combinerTaskSupport$
   #27 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/TaskSupport;
   #28 = NameAndType        #26:#27       // combinerTaskSupport$:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/TaskSupport;
   #29 = InterfaceMethodref #7.#28        // scala/collection/parallel/Combiner.combinerTaskSupport$:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/TaskSupport;
   #30 = Utf8               this
   #31 = Utf8               Lscala/collection/parallel/immutable/LazyParVectorCombiner;
   #32 = Utf8               combinerTaskSupport_$eq
   #33 = Utf8               (Lscala/collection/parallel/TaskSupport;)V
   #34 = Utf8               cts
   #35 = Utf8               combinerTaskSupport_$eq$
   #36 = Utf8               (Lscala/collection/parallel/Combiner;Lscala/collection/parallel/TaskSupport;)V
   #37 = NameAndType        #35:#36       // combinerTaskSupport_$eq$:(Lscala/collection/parallel/Combiner;Lscala/collection/parallel/TaskSupport;)V
   #38 = InterfaceMethodref #7.#37        // scala/collection/parallel/Combiner.combinerTaskSupport_$eq$:(Lscala/collection/parallel/Combiner;Lscala/collection/parallel/TaskSupport;)V
   #39 = Utf8               canBeShared
   #40 = Utf8               ()Z
   #41 = Utf8               canBeShared$
   #42 = Utf8               (Lscala/collection/parallel/Combiner;)Z
   #43 = NameAndType        #41:#42       // canBeShared$:(Lscala/collection/parallel/Combiner;)Z
   #44 = InterfaceMethodref #7.#43        // scala/collection/parallel/Combiner.canBeShared$:(Lscala/collection/parallel/Combiner;)Z
   #45 = Utf8               resultWithTaskSupport
   #46 = Utf8               ()Ljava/lang/Object;
   #47 = Utf8               resultWithTaskSupport$
   #48 = Utf8               (Lscala/collection/parallel/Combiner;)Ljava/lang/Object;
   #49 = NameAndType        #47:#48       // resultWithTaskSupport$:(Lscala/collection/parallel/Combiner;)Ljava/lang/Object;
   #50 = InterfaceMethodref #7.#49        // scala/collection/parallel/Combiner.resultWithTaskSupport$:(Lscala/collection/parallel/Combiner;)Ljava/lang/Object;
   #51 = Utf8               fromSequential
   #52 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #53 = Utf8               seq
   #54 = Utf8               fromSequential$
   #55 = Utf8               (Lscala/collection/parallel/Combiner;Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #56 = NameAndType        #54:#55       // fromSequential$:(Lscala/collection/parallel/Combiner;Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #57 = InterfaceMethodref #7.#56        // scala/collection/parallel/Combiner.fromSequential$:(Lscala/collection/parallel/Combiner;Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #58 = Utf8               Lscala/collection/IterableOnce;
   #59 = Utf8               sizeHint
   #60 = Utf8               (I)V
   #61 = Utf8               size
   #62 = Utf8               scala/collection/mutable/Builder
   #63 = Class              #62           // scala/collection/mutable/Builder
   #64 = Utf8               sizeHint$
   #65 = Utf8               (Lscala/collection/mutable/Builder;I)V
   #66 = NameAndType        #64:#65       // sizeHint$:(Lscala/collection/mutable/Builder;I)V
   #67 = InterfaceMethodref #63.#66       // scala/collection/mutable/Builder.sizeHint$:(Lscala/collection/mutable/Builder;I)V
   #68 = Utf8               (Lscala/collection/IterableOnce;I)V
   #69 = Utf8               (Lscala/collection/IterableOnce<*>;I)V
   #70 = Utf8               coll
   #71 = Utf8               delta
   #72 = Utf8               (Lscala/collection/mutable/Builder;Lscala/collection/IterableOnce;I)V
   #73 = NameAndType        #64:#72       // sizeHint$:(Lscala/collection/mutable/Builder;Lscala/collection/IterableOnce;I)V
   #74 = InterfaceMethodref #63.#73       // scala/collection/mutable/Builder.sizeHint$:(Lscala/collection/mutable/Builder;Lscala/collection/IterableOnce;I)V
   #75 = Utf8               sizeHint$default$2
   #76 = Utf8               ()I
   #77 = Utf8               sizeHint$default$2$
   #78 = Utf8               (Lscala/collection/mutable/Builder;)I
   #79 = NameAndType        #77:#78       // sizeHint$default$2$:(Lscala/collection/mutable/Builder;)I
   #80 = InterfaceMethodref #63.#79       // scala/collection/mutable/Builder.sizeHint$default$2$:(Lscala/collection/mutable/Builder;)I
   #81 = Utf8               sizeHintBounded
   #82 = Utf8               (ILscala/collection/Iterable;)V
   #83 = Utf8               (ILscala/collection/Iterable<*>;)V
   #84 = Utf8               boundingColl
   #85 = Utf8               sizeHintBounded$
   #86 = Utf8               (Lscala/collection/mutable/Builder;ILscala/collection/Iterable;)V
   #87 = NameAndType        #85:#86       // sizeHintBounded$:(Lscala/collection/mutable/Builder;ILscala/collection/Iterable;)V
   #88 = InterfaceMethodref #63.#87       // scala/collection/mutable/Builder.sizeHintBounded$:(Lscala/collection/mutable/Builder;ILscala/collection/Iterable;)V
   #89 = Utf8               Lscala/collection/Iterable;
   #90 = Utf8               mapResult
   #91 = Utf8               (Lscala/Function1;)Lscala/collection/mutable/Builder;
   #92 = Utf8               <NewTo:Ljava/lang/Object;>(Lscala/Function1<Lscala/collection/parallel/immutable/ParVector<TT;>;TNewTo;>;)Lscala/collection/mutable/Builder<TT;TNewTo;>;
   #93 = Utf8               f
   #94 = Utf8               mapResult$
   #95 = Utf8               (Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
   #96 = NameAndType        #94:#95       // mapResult$:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
   #97 = InterfaceMethodref #63.#96       // scala/collection/mutable/Builder.mapResult$:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
   #98 = Utf8               Lscala/Function1;
   #99 = Utf8               $plus$eq
  #100 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #101 = Utf8               (TT;)Lscala/collection/mutable/Growable<TT;>;
  #102 = Utf8               elem
  #103 = Utf8               scala/collection/mutable/Growable
  #104 = Class              #103          // scala/collection/mutable/Growable
  #105 = Utf8               $plus$eq$
  #106 = Utf8               (Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #107 = NameAndType        #105:#106     // $plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #108 = InterfaceMethodref #104.#107     // scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #109 = Utf8               Ljava/lang/Object;
  #110 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lscala/collection/mutable/Growable;
  #111 = Utf8               (TT;TT;Lscala/collection/immutable/Seq<TT;>;)Lscala/collection/mutable/Growable<TT;>;
  #112 = Utf8               elem1
  #113 = Utf8               elem2
  #114 = Utf8               elems
  #115 = Utf8               (Lscala/collection/mutable/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lscala/collection/mutable/Growable;
  #116 = NameAndType        #105:#115     // $plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lscala/collection/mutable/Growable;
  #117 = InterfaceMethodref #104.#116     // scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lscala/collection/mutable/Growable;
  #118 = Utf8               Lscala/collection/immutable/Seq;
  #119 = Utf8               addAll
  #120 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #121 = Utf8               (Lscala/collection/IterableOnce<TT;>;)Lscala/collection/mutable/Growable<TT;>;
  #122 = Utf8               xs
  #123 = Utf8               addAll$
  #124 = Utf8               (Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #125 = NameAndType        #123:#124     // addAll$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #126 = InterfaceMethodref #104.#125     // scala/collection/mutable/Growable.addAll$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #127 = Utf8               $plus$plus$eq
  #128 = Utf8               $plus$plus$eq$
  #129 = NameAndType        #128:#124     // $plus$plus$eq$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #130 = InterfaceMethodref #104.#129     // scala/collection/mutable/Growable.$plus$plus$eq$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #131 = Utf8               knownSize
  #132 = Utf8               knownSize$
  #133 = Utf8               (Lscala/collection/mutable/Growable;)I
  #134 = NameAndType        #132:#133     // knownSize$:(Lscala/collection/mutable/Growable;)I
  #135 = InterfaceMethodref #104.#134     // scala/collection/mutable/Growable.knownSize$:(Lscala/collection/mutable/Growable;)I
  #136 = NameAndType        #22:#23       // _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
  #137 = Fieldref           #2.#136       // scala/collection/parallel/immutable/LazyParVectorCombiner._combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
  #138 = Utf8               _combinerTaskSupport_$eq
  #139 = Utf8               x$1
  #140 = NameAndType        #17:#18       // sz:I
  #141 = Fieldref           #2.#140       // scala/collection/parallel/immutable/LazyParVectorCombiner.sz:I
  #142 = Utf8               sz_$eq
  #143 = Utf8               ()Lscala/collection/mutable/ArrayBuffer;
  #144 = Utf8               ()Lscala/collection/mutable/ArrayBuffer<Lscala/collection/immutable/VectorBuilder<TT;>;>;
  #145 = NameAndType        #19:#20       // vectors:Lscala/collection/mutable/ArrayBuffer;
  #146 = Fieldref           #2.#145       // scala/collection/parallel/immutable/LazyParVectorCombiner.vectors:Lscala/collection/mutable/ArrayBuffer;
  #147 = NameAndType        #17:#76       // sz:()I
  #148 = Methodref          #2.#147       // scala/collection/parallel/immutable/LazyParVectorCombiner.sz:()I
  #149 = Utf8               addOne
  #150 = Utf8               (Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
  #151 = Utf8               (TT;)Lscala/collection/parallel/immutable/LazyParVectorCombiner<TT;>;
  #152 = NameAndType        #19:#143      // vectors:()Lscala/collection/mutable/ArrayBuffer;
  #153 = Methodref          #2.#152       // scala/collection/parallel/immutable/LazyParVectorCombiner.vectors:()Lscala/collection/mutable/ArrayBuffer;
  #154 = Utf8               scala/collection/mutable/ArrayBuffer
  #155 = Class              #154          // scala/collection/mutable/ArrayBuffer
  #156 = Utf8               last
  #157 = NameAndType        #156:#46      // last:()Ljava/lang/Object;
  #158 = Methodref          #155.#157     // scala/collection/mutable/ArrayBuffer.last:()Ljava/lang/Object;
  #159 = NameAndType        #99:#100      // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #160 = InterfaceMethodref #104.#159     // scala/collection/mutable/Growable.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #161 = NameAndType        #142:#60      // sz_$eq:(I)V
  #162 = Methodref          #2.#161       // scala/collection/parallel/immutable/LazyParVectorCombiner.sz_$eq:(I)V
  #163 = Utf8               clear
  #164 = Utf8               ()V
  #165 = NameAndType        #163:#164     // clear:()V
  #166 = Methodref          #155.#165     // scala/collection/mutable/ArrayBuffer.clear:()V
  #167 = Utf8               scala/collection/immutable/VectorBuilder
  #168 = Class              #167          // scala/collection/immutable/VectorBuilder
  #169 = Utf8               <init>
  #170 = NameAndType        #169:#164     // "<init>":()V
  #171 = Methodref          #168.#170     // scala/collection/immutable/VectorBuilder."<init>":()V
  #172 = Methodref          #155.#159     // scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #173 = Utf8               result
  #174 = Utf8               ()Lscala/collection/parallel/immutable/ParVector;
  #175 = Utf8               ()Lscala/collection/parallel/immutable/ParVector<TT;>;
  #176 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #177 = MethodType         #176          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #178 = Utf8               $anonfun$result$1
  #179 = Utf8               (Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  #180 = NameAndType        #178:#179     // $anonfun$result$1:(Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  #181 = Methodref          #2.#180       // scala/collection/parallel/immutable/LazyParVectorCombiner.$anonfun$result$1:(Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  #182 = MethodHandle       6:#181        // REF_invokeStatic scala/collection/parallel/immutable/LazyParVectorCombiner.$anonfun$result$1:(Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  #183 = Utf8               (Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  #184 = MethodType         #183          //  (Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  #185 = Integer            5
  #186 = Integer            1
  #187 = Utf8               java/lang/invoke/LambdaMetafactory
  #188 = Class              #187          // java/lang/invoke/LambdaMetafactory
  #189 = Utf8               altMetafactory
  #190 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #191 = NameAndType        #189:#190     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #192 = Methodref          #188.#191     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #193 = MethodHandle       6:#192        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #194 = Utf8               apply
  #195 = Utf8               (Lscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #196 = NameAndType        #194:#195     // apply:(Lscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #197 = InvokeDynamic      #0:#196       // #0:apply:(Lscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #198 = Utf8               foreach
  #199 = Utf8               (Lscala/Function1;)V
  #200 = NameAndType        #198:#199     // foreach:(Lscala/Function1;)V
  #201 = Methodref          #155.#200     // scala/collection/mutable/ArrayBuffer.foreach:(Lscala/Function1;)V
  #202 = Utf8               scala/collection/parallel/immutable/ParVector
  #203 = Class              #202          // scala/collection/parallel/immutable/ParVector
  #204 = Utf8               ()Lscala/collection/immutable/Vector;
  #205 = NameAndType        #173:#204     // result:()Lscala/collection/immutable/Vector;
  #206 = Methodref          #168.#205     // scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
  #207 = Utf8               (Lscala/collection/immutable/Vector;)V
  #208 = NameAndType        #169:#207     // "<init>":(Lscala/collection/immutable/Vector;)V
  #209 = Methodref          #203.#208     // scala/collection/parallel/immutable/ParVector."<init>":(Lscala/collection/immutable/Vector;)V
  #210 = Utf8               rvb
  #211 = Utf8               Lscala/collection/immutable/VectorBuilder;
  #212 = Utf8               combine
  #213 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #214 = Utf8               <U:TT;NewTo:Ljava/lang/Object;>(Lscala/collection/parallel/Combiner<TU;TNewTo;>;)Lscala/collection/parallel/Combiner<TU;TNewTo;>;
  #215 = Utf8               other
  #216 = NameAndType        #127:#120     // $plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #217 = Methodref          #155.#216     // scala/collection/mutable/ArrayBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #218 = Utf8               that
  #219 = Utf8               Lscala/collection/parallel/Combiner;
  #220 = NameAndType        #173:#174     // result:()Lscala/collection/parallel/immutable/ParVector;
  #221 = Methodref          #2.#220       // scala/collection/parallel/immutable/LazyParVectorCombiner.result:()Lscala/collection/parallel/immutable/ParVector;
  #222 = NameAndType        #149:#150     // addOne:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
  #223 = Methodref          #2.#222       // scala/collection/parallel/immutable/LazyParVectorCombiner.addOne:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
  #224 = Utf8               rvb$1
  #225 = Utf8               vb
  #226 = Methodref          #168.#216     // scala/collection/immutable/VectorBuilder.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #227 = Methodref          #5.#170       // java/lang/Object."<init>":()V
  #228 = Utf8               $init$
  #229 = Utf8               (Lscala/collection/mutable/Growable;)V
  #230 = NameAndType        #228:#229     // $init$:(Lscala/collection/mutable/Growable;)V
  #231 = InterfaceMethodref #104.#230     // scala/collection/mutable/Growable.$init$:(Lscala/collection/mutable/Growable;)V
  #232 = Utf8               (Lscala/collection/mutable/Builder;)V
  #233 = NameAndType        #228:#232     // $init$:(Lscala/collection/mutable/Builder;)V
  #234 = InterfaceMethodref #63.#233      // scala/collection/mutable/Builder.$init$:(Lscala/collection/mutable/Builder;)V
  #235 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #236 = NameAndType        #228:#235     // $init$:(Lscala/collection/parallel/Combiner;)V
  #237 = InterfaceMethodref #7.#236       // scala/collection/parallel/Combiner.$init$:(Lscala/collection/parallel/Combiner;)V
  #238 = Methodref          #155.#170     // scala/collection/mutable/ArrayBuffer."<init>":()V
  #239 = Utf8               $deserializeLambda$
  #240 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #241 = Utf8               scala/runtime/LambdaDeserialize
  #242 = Class              #241          // scala/runtime/LambdaDeserialize
  #243 = Utf8               bootstrap
  #244 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #245 = NameAndType        #243:#244     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #246 = Methodref          #242.#245     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #247 = MethodHandle       6:#246        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #248 = Utf8               lambdaDeserialize
  #249 = NameAndType        #248:#240     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #250 = InvokeDynamic      #1:#249       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #251 = Utf8               Signature
  #252 = Utf8               Code
  #253 = Utf8               LineNumberTable
  #254 = Utf8               LocalVariableTable
  #255 = Utf8               MethodParameters
  #256 = Utf8               Deprecated
  #257 = Utf8               StackMapTable
  #258 = Utf8               InnerClasses
  #259 = Utf8               SourceFile
  #260 = Utf8               RuntimeVisibleAnnotations
  #261 = Utf8               BootstrapMethods
  #262 = Utf8               ScalaInlineInfo
  #263 = Utf8               ScalaSig
{
  private int sz;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private final scala.collection.mutable.ArrayBuffer<scala.collection.immutable.VectorBuilder<T>> vectors;
    descriptor: Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #21                          // Lscala/collection/mutable/ArrayBuffer<Lscala/collection/immutable/VectorBuilder<TT;>;>;

  private volatile transient scala.collection.parallel.TaskSupport _combinerTaskSupport;
    descriptor: Lscala/collection/parallel/TaskSupport;
    flags: (0x00c2) ACC_PRIVATE, ACC_VOLATILE, ACC_TRANSIENT

  public scala.collection.parallel.TaskSupport combinerTaskSupport();
    descriptor: ()Lscala/collection/parallel/TaskSupport;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #29                 // InterfaceMethod scala/collection/parallel/Combiner.combinerTaskSupport$:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/TaskSupport;
         4: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public void combinerTaskSupport_$eq(scala.collection.parallel.TaskSupport);
    descriptor: (Lscala/collection/parallel/TaskSupport;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #38                 // InterfaceMethod scala/collection/parallel/Combiner.combinerTaskSupport_$eq$:(Lscala/collection/parallel/Combiner;Lscala/collection/parallel/TaskSupport;)V
         5: return
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1   cts   Lscala/collection/parallel/TaskSupport;
    MethodParameters:
      Name                           Flags
      cts                            final

  public boolean canBeShared();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod scala/collection/parallel/Combiner.canBeShared$:(Lscala/collection/parallel/Combiner;)Z
         4: ireturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public java.lang.Object resultWithTaskSupport();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod scala/collection/parallel/Combiner.resultWithTaskSupport$:(Lscala/collection/parallel/Combiner;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public java.lang.Object fromSequential(scala.collection.IterableOnce);
    descriptor: (Lscala/collection/IterableOnce;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #57                 // InterfaceMethod scala/collection/parallel/Combiner.fromSequential$:(Lscala/collection/parallel/Combiner;Lscala/collection/IterableOnce;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1   seq   Lscala/collection/IterableOnce;
    MethodParameters:
      Name                           Flags
      seq                            final

  public void sizeHint(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #67                 // InterfaceMethod scala/collection/mutable/Builder.sizeHint$:(Lscala/collection/mutable/Builder;I)V
         5: return
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1  size   I
    MethodParameters:
      Name                           Flags
      size                           final

  public final void sizeHint(scala.collection.IterableOnce<?>, int);
    descriptor: (Lscala/collection/IterableOnce;I)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokestatic  #74                 // InterfaceMethod scala/collection/mutable/Builder.sizeHint$:(Lscala/collection/mutable/Builder;Lscala/collection/IterableOnce;I)V
         6: return
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       7     1  coll   Lscala/collection/IterableOnce;
            0       7     2 delta   I
    Signature: #69                          // (Lscala/collection/IterableOnce<*>;I)V
    MethodParameters:
      Name                           Flags
      coll                           final
      delta                          final

  public final int sizeHint$default$2();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #80                 // InterfaceMethod scala/collection/mutable/Builder.sizeHint$default$2$:(Lscala/collection/mutable/Builder;)I
         4: ireturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public final void sizeHintBounded(int, scala.collection.Iterable<?>);
    descriptor: (ILscala/collection/Iterable;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #88                 // InterfaceMethod scala/collection/mutable/Builder.sizeHintBounded$:(Lscala/collection/mutable/Builder;ILscala/collection/Iterable;)V
         6: return
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       7     1  size   I
            0       7     2 boundingColl   Lscala/collection/Iterable;
    Signature: #83                          // (ILscala/collection/Iterable<*>;)V
    MethodParameters:
      Name                           Flags
      size                           final
      boundingColl                   final

  public <NewTo extends java.lang.Object> scala.collection.mutable.Builder<T, NewTo> mapResult(scala.Function1<scala.collection.parallel.immutable.ParVector<T>, NewTo>);
    descriptor: (Lscala/Function1;)Lscala/collection/mutable/Builder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #97                 // InterfaceMethod scala/collection/mutable/Builder.mapResult$:(Lscala/collection/mutable/Builder;Lscala/Function1;)Lscala/collection/mutable/Builder;
         5: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1     f   Lscala/Function1;
    Signature: #92                          // <NewTo:Ljava/lang/Object;>(Lscala/Function1<Lscala/collection/parallel/immutable/ParVector<TT;>;TNewTo;>;)Lscala/collection/mutable/Builder<TT;TNewTo;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public final scala.collection.mutable.Growable<T> $plus$eq(T);
    descriptor: (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #108                // InterfaceMethod scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;)Lscala/collection/mutable/Growable;
         5: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1  elem   Ljava/lang/Object;
    Signature: #101                         // (TT;)Lscala/collection/mutable/Growable<TT;>;
    MethodParameters:
      Name                           Flags
      elem                           final

  public final scala.collection.mutable.Growable<T> $plus$eq(T, T, scala.collection.immutable.Seq<T>);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lscala/collection/mutable/Growable;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #117                // InterfaceMethod scala/collection/mutable/Growable.$plus$eq$:(Lscala/collection/mutable/Growable;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lscala/collection/mutable/Growable;
         7: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       8     1 elem1   Ljava/lang/Object;
            0       8     2 elem2   Ljava/lang/Object;
            0       8     3 elems   Lscala/collection/immutable/Seq;
    Signature: #111                         // (TT;TT;Lscala/collection/immutable/Seq<TT;>;)Lscala/collection/mutable/Growable<TT;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      elem1                          final
      elem2                          final
      elems                          final

  public scala.collection.mutable.Growable<T> addAll(scala.collection.IterableOnce<T>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #126                // InterfaceMethod scala/collection/mutable/Growable.addAll$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
         5: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1    xs   Lscala/collection/IterableOnce;
    Signature: #121                         // (Lscala/collection/IterableOnce<TT;>;)Lscala/collection/mutable/Growable<TT;>;
    MethodParameters:
      Name                           Flags
      xs                             final

  public final scala.collection.mutable.Growable<T> $plus$plus$eq(scala.collection.IterableOnce<T>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #130                // InterfaceMethod scala/collection/mutable/Growable.$plus$plus$eq$:(Lscala/collection/mutable/Growable;Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
         5: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1    xs   Lscala/collection/IterableOnce;
    Signature: #121                         // (Lscala/collection/IterableOnce<TT;>;)Lscala/collection/mutable/Growable<TT;>;
    MethodParameters:
      Name                           Flags
      xs                             final

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #135                // InterfaceMethod scala/collection/mutable/Growable.knownSize$:(Lscala/collection/mutable/Growable;)I
         4: ireturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public scala.collection.parallel.TaskSupport _combinerTaskSupport();
    descriptor: ()Lscala/collection/parallel/TaskSupport;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #137                // Field _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
         4: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public void _combinerTaskSupport_$eq(scala.collection.parallel.TaskSupport);
    descriptor: (Lscala/collection/parallel/TaskSupport;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #137                // Field _combinerTaskSupport:Lscala/collection/parallel/TaskSupport;
         5: return
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1   x$1   Lscala/collection/parallel/TaskSupport;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int sz();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #141                // Field sz:I
         4: ireturn
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public void sz_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #141                // Field sz:I
         5: return
      LineNumberTable:
        line 105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.mutable.ArrayBuffer<scala.collection.immutable.VectorBuilder<T>> vectors();
    descriptor: ()Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #146                // Field vectors:Lscala/collection/mutable/ArrayBuffer;
         4: areturn
      LineNumberTable:
        line 106: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
    Signature: #144                         // ()Lscala/collection/mutable/ArrayBuffer<Lscala/collection/immutable/VectorBuilder<TT;>;>;

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #148                // Method sz:()I
         4: ireturn
      LineNumberTable:
        line 108: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public scala.collection.parallel.immutable.LazyParVectorCombiner<T> addOne(T);
    descriptor: (Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #153                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
         4: invokevirtual #158                // Method scala/collection/mutable/ArrayBuffer.last:()Ljava/lang/Object;
         7: checkcast     #104                // class scala/collection/mutable/Growable
        10: aload_1
        11: invokeinterface #160,  2          // InterfaceMethod scala/collection/mutable/Growable.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        16: pop
        17: aload_0
        18: aload_0
        19: invokevirtual #148                // Method sz:()I
        22: iconst_1
        23: iadd
        24: invokevirtual #162                // Method sz_$eq:(I)V
        27: aload_0
        28: areturn
      LineNumberTable:
        line 111: 0
        line 112: 17
        line 113: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0      29     1  elem   Ljava/lang/Object;
    Signature: #151                         // (TT;)Lscala/collection/parallel/immutable/LazyParVectorCombiner<TT;>;
    MethodParameters:
      Name                           Flags
      elem                           final

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #153                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
         4: invokevirtual #166                // Method scala/collection/mutable/ArrayBuffer.clear:()V
         7: aload_0
         8: invokevirtual #153                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
        11: new           #168                // class scala/collection/immutable/VectorBuilder
        14: dup
        15: invokespecial #171                // Method scala/collection/immutable/VectorBuilder."<init>":()V
        18: invokevirtual #172                // Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        21: pop
        22: aload_0
        23: iconst_0
        24: invokevirtual #162                // Method sz_$eq:(I)V
        27: return
      LineNumberTable:
        line 117: 0
        line 118: 7
        line 119: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public scala.collection.parallel.immutable.ParVector<T> result();
    descriptor: ()Lscala/collection/parallel/immutable/ParVector;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #168                // class scala/collection/immutable/VectorBuilder
         3: dup
         4: invokespecial #171                // Method scala/collection/immutable/VectorBuilder."<init>":()V
         7: astore_1
         8: aload_0
         9: invokevirtual #153                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
        12: aload_1
        13: invokedynamic #197,  0            // InvokeDynamic #0:apply:(Lscala/collection/immutable/VectorBuilder;)Lscala/Function1;
        18: invokevirtual #201                // Method scala/collection/mutable/ArrayBuffer.foreach:(Lscala/Function1;)V
        21: new           #203                // class scala/collection/parallel/immutable/ParVector
        24: dup
        25: aload_1
        26: invokevirtual #206                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
        29: invokespecial #209                // Method scala/collection/parallel/immutable/ParVector."<init>":(Lscala/collection/immutable/Vector;)V
        32: areturn
      LineNumberTable:
        line 123: 0
        line 124: 8
        line 127: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      24     1   rvb   Lscala/collection/immutable/VectorBuilder;
            0      33     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
    Signature: #175                         // ()Lscala/collection/parallel/immutable/ParVector<TT;>;

  public <U extends T, NewTo extends java.lang.Object> scala.collection.parallel.Combiner<U, NewTo> combine(scala.collection.parallel.Combiner<U, NewTo>);
    descriptor: (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     9
         5: aload_0
         6: goto          40
         9: aload_1
        10: checkcast     #2                  // class scala/collection/parallel/immutable/LazyParVectorCombiner
        13: astore_2
        14: aload_0
        15: aload_0
        16: invokevirtual #148                // Method sz:()I
        19: aload_2
        20: invokevirtual #148                // Method sz:()I
        23: iadd
        24: invokevirtual #162                // Method sz_$eq:(I)V
        27: aload_0
        28: invokevirtual #153                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
        31: aload_2
        32: invokevirtual #153                // Method vectors:()Lscala/collection/mutable/ArrayBuffer;
        35: invokevirtual #217                // Method scala/collection/mutable/ArrayBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        38: pop
        39: aload_0
        40: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 94 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/immutable/LazyParVectorCombiner ]
      LineNumberTable:
        line 130: 0
        line 131: 9
        line 132: 14
        line 133: 27
        line 134: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      26     2  that   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0      41     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0      41     1 other   Lscala/collection/parallel/Combiner;
    Signature: #214                         // <U:TT;NewTo:Ljava/lang/Object;>(Lscala/collection/parallel/Combiner<TU;TNewTo;>;)Lscala/collection/parallel/Combiner<TU;TNewTo;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #221                // Method result:()Lscala/collection/parallel/immutable/ParVector;
         4: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  public scala.collection.mutable.Growable addOne(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #223                // Method addOne:(Ljava/lang/Object;)Lscala/collection/parallel/immutable/LazyParVectorCombiner;
         5: areturn
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;
            0       6     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static final scala.collection.immutable.VectorBuilder $anonfun$result$1(scala.collection.immutable.VectorBuilder, scala.collection.immutable.VectorBuilder);
    descriptor: (Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #206                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
         5: invokevirtual #226                // Method scala/collection/immutable/VectorBuilder.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
         8: checkcast     #168                // class scala/collection/immutable/VectorBuilder
        11: areturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 rvb$1   Lscala/collection/immutable/VectorBuilder;
            0      12     1    vb   Lscala/collection/immutable/VectorBuilder;
    MethodParameters:
      Name                           Flags
      rvb$1                          final
      vb                             final

  public scala.collection.parallel.immutable.LazyParVectorCombiner();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokespecial #227                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #231                // InterfaceMethod scala/collection/mutable/Growable.$init$:(Lscala/collection/mutable/Growable;)V
         8: aload_0
         9: invokestatic  #234                // InterfaceMethod scala/collection/mutable/Builder.$init$:(Lscala/collection/mutable/Builder;)V
        12: aload_0
        13: invokestatic  #237                // InterfaceMethod scala/collection/parallel/Combiner.$init$:(Lscala/collection/parallel/Combiner;)V
        16: aload_0
        17: iconst_0
        18: putfield      #141                // Field sz:I
        21: aload_0
        22: new           #155                // class scala/collection/mutable/ArrayBuffer
        25: dup
        26: invokespecial #238                // Method scala/collection/mutable/ArrayBuffer."<init>":()V
        29: new           #168                // class scala/collection/immutable/VectorBuilder
        32: dup
        33: invokespecial #171                // Method scala/collection/immutable/VectorBuilder."<init>":()V
        36: invokevirtual #172                // Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        39: checkcast     #155                // class scala/collection/mutable/ArrayBuffer
        42: putfield      #146                // Field vectors:Lscala/collection/mutable/ArrayBuffer;
        45: return
      LineNumberTable:
        line 103: 0
        line 105: 16
        line 106: 21
        line 103: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lscala/collection/parallel/immutable/LazyParVectorCombiner;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #250,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/Combiner<TT;Lscala/collection/parallel/immutable/ParVector<TT;>;>;
SourceFile: "ParVector.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00154Q\u0001D\u0007\u0001\u001bUAQa\f\u0001\u0005\u0002ABqA\r\u0001A\u0002\u0013\u00051\u0007C\u00048\u0001\u0001\u0007I\u0011\u0001\u001d\t\ry\u0002\u0001\u0015)\u00035\u0011\u001dy\u0004A1A\u0005\u0002\u0001Ca\u0001\u0014\u0001!\u0002\u0013\t\u0005\"B\'\u0001\t\u0003\u0019\u0004\"\u0002(\u0001\t\u0003y\u0005\"B*\u0001\t\u0003!\u0006\"B+\u0001\t\u00031\u0006\"B,\u0001\t\u0003A&!\u0006\'buf\u0004\u0016M\u001d,fGR|\'oQ8nE&tWM\u001d\u0006\u0003\u001d=\t\u0011\"[7nkR\f\'\r\\3\u000b\u0005A\t\u0012\u0001\u00039be\u0006dG.\u001a7\u000b\u0005I\u0019\u0012AC2pY2,7\r^5p]*\tA#A\u0003tG\u0006d\u0017-\u0006\u0002\u0017CM\u0019\u0001aF\u000e\u0011\u0005aIR\"A\n\n\u0005i\u0019\"AB!osJ+g\r\u0005\u0003\u001d;}YS\"A\b\n\u0005yy!\u0001C\"p[\nLg.\u001a:\u0011\u0005\u0001\nC\u0002\u0001\u0003\u0006E\u0001\u0011\r\u0001\n\u0002\u0002)\u000e\u0001\u0011CA\u0013)!\tAb%\u0003\u0002(\'\t9aj\u001c;iS:<\u0007C\u0001\r*\u0013\tQ3CA\u0002B]f\u00042\u0001L\u0017 \u001b\u0005i\u0011B\u0001\u0018\u000e\u0005%\u0001\u0016M\u001d,fGR|\'/\u0001\u0004=S:LGO\u0010\u000b\u0002cA\u0019A\u0006A\u0010\u0002\u0005MTX#\u0001\u001b\u0011\u0005a)\u0014B\u0001\u001c\u0014\u0005\rIe\u000e^\u0001\u0007gj|F%Z9\u0015\u0005eb\u0004C\u0001\r;\u0013\tY4C\u0001\u0003V]&$\bbB\u001f\u0004\u0003\u0003\u0005\r\u0001N\u0001\u0004q\u0012\n\u0014aA:{A\u00059a/Z2u_J\u001cX#A!\u0011\u0007\t+u)D\u0001D\u0015\t!\u0015#A\u0004nkR\f\'\r\\3\n\u0005\u0019\u001b%aC!se\u0006L()\u001e4gKJ\u00042\u0001\u0013& \u001b\u0005I%B\u0001\b\u0012\u0013\tY\u0015JA\u0007WK\u000e$xN\u001d\"vS2$WM]\u0001\tm\u0016\u001cGo\u001c:tA\u0005!1/\u001b>f\u0003\u0019\tG\rZ(oKR\u0011\u0001+U\u0007\u0002\u0001!)!\u000b\u0003a\u0001?\u0005!Q\r\\3n\u0003\u0015\u0019G.Z1s)\u0005I\u0014A\u0002:fgVdG\u000fF\u0001,\u0003\u001d\u0019w.\u001c2j]\u0016,2!\u0017/a)\tQ6\r\u0005\u0003\u001d;m{\u0006C\u0001\u0011]\t\u0015i6B1\u0001_\u0005\u0005)\u0016CA\u0013 !\t\u0001\u0003\rB\u0003b\u0017\t\u0007!MA\u0003OK^$v.\u0005\u0002,Q!)Am\u0003a\u00015\u0006)q\u000e\u001e5fe\u0002"
    )
BootstrapMethods:
  0: #193 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #177 (Ljava/lang/Object;)Ljava/lang/Object;
      #182 REF_invokeStatic scala/collection/parallel/immutable/LazyParVectorCombiner.$anonfun$result$1:(Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
      #184 (Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
      #185 5
      #186 1
      #184 (Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  1: #247 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #182 REF_invokeStatic scala/collection/parallel/immutable/LazyParVectorCombiner.$anonfun$result$1:(Lscala/collection/immutable/VectorBuilder;Lscala/collection/immutable/VectorBuilder;)Lscala/collection/immutable/VectorBuilder;
  ScalaInlineInfo: length = 0x95 (unknown attribute)
   01 00 00 1D 00 B2 00 B3 01 00 63 00 64 05 00 63
   00 6E 05 00 7F 00 78 05 00 A9 00 A4 00 00 16 00
   19 00 00 8A 00 21 00 00 77 00 78 00 00 95 00 64
   00 00 95 00 96 00 00 27 00 28 00 00 A3 00 A4 00
   00 D4 00 D5 00 00 18 00 19 00 00 20 00 21 00 00
   33 00 34 00 00 83 00 4C 00 00 5A 00 5B 00 00 AD
   00 2E 00 00 AD 00 AE 00 00 2D 00 2E 00 00 3D 00
   4C 00 00 3B 00 3C 00 00 3B 00 44 01 00 4B 00 4C
   01 00 51 00 52 01 00 11 00 4C 00 00 8E 00 3C 00
   00 13 00 8F 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
