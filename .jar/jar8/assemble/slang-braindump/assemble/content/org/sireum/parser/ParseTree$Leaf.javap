Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/ParseTree$Leaf.class
  Last modified May 29, 2022; size 10007 bytes
  SHA-256 checksum dcd16080998b8769efeb57519db0810fc6f68352224c60e79a470bf83d70e028
  Compiled from "ParseTree.scala"
public final class org.sireum.parser.ParseTree$Leaf implements org.sireum.parser.ParseTree
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/ParseTree$Leaf
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 9, methods: 33, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/ParseTree$Leaf
    #2 = Class              #1            // org/sireum/parser/ParseTree$Leaf
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/parser/ParseTree
    #6 = Class              #5            // org/sireum/parser/ParseTree
    #7 = Utf8               ParseTree.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/ST$Any
   #14 = Class              #13           // org/sireum/ST$Any
   #15 = Utf8               org/sireum/ST
   #16 = Class              #15           // org/sireum/ST
   #17 = Utf8               Any
   #18 = Utf8               org/sireum/ST$Any$
   #19 = Class              #18           // org/sireum/ST$Any$
   #20 = Utf8               Any$
   #21 = Utf8               org/sireum/ST$Arg
   #22 = Class              #21           // org/sireum/ST$Arg
   #23 = Utf8               Arg
   #24 = Utf8               org/sireum/ST$Templ
   #25 = Class              #24           // org/sireum/ST$Templ
   #26 = Utf8               Templ
   #27 = Utf8               org/sireum/ST$Templ$
   #28 = Class              #27           // org/sireum/ST$Templ$
   #29 = Utf8               Templ$
   #30 = Utf8               Leaf
   #31 = Utf8               hashCode
   #32 = Utf8               I
   #33 = Utf8               $content
   #34 = Utf8               Lscala/collection/immutable/Seq;
   #35 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #36 = Utf8               _text
   #37 = Utf8               Ljava/lang/String;
   #38 = Utf8               _ruleName
   #39 = Utf8               _tipe
   #40 = Utf8               _isHidden
   #41 = Utf8               Z
   #42 = Utf8               _bposOpt
   #43 = Utf8               _posOpt
   #44 = Utf8               Lorg/sireum/message/Position;
   #45 = Utf8               bitmap$0
   #46 = Utf8               B
   #47 = Utf8               hash
   #48 = Utf8               ()Lorg/sireum/Z;
   #49 = Utf8               org/sireum/DatatypeSig
   #50 = Class              #49           // org/sireum/DatatypeSig
   #51 = Utf8               hash$
   #52 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #53 = NameAndType        #51:#52       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #54 = InterfaceMethodref #50.#53       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #55 = Utf8               this
   #56 = Utf8               Lorg/sireum/parser/ParseTree$Leaf;
   #57 = Utf8               $cannotMixImmutableAndMutable
   #58 = Utf8               ()Lscala/runtime/Nothing$;
   #59 = Utf8               org/sireum/Immutable
   #60 = Class              #59           // org/sireum/Immutable
   #61 = Utf8               $cannotMixImmutableAndMutable$
   #62 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #63 = NameAndType        #61:#62       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #64 = InterfaceMethodref #60.#63       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #65 = Utf8               $hasEquals
   #66 = Utf8               ()Z
   #67 = Utf8               $hasEquals$
   #68 = Utf8               (Lorg/sireum/Immutable;)Z
   #69 = NameAndType        #67:#68       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #70 = InterfaceMethodref #60.#69       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #71 = Utf8               $hasString
   #72 = Utf8               $hasString$
   #73 = NameAndType        #72:#68       // $hasString$:(Lorg/sireum/Immutable;)Z
   #74 = InterfaceMethodref #60.#73       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #75 = Utf8               $clone
   #76 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #77 = Utf8               org/sireum/$internal/ImmutableMarker
   #78 = Class              #77           // org/sireum/$internal/ImmutableMarker
   #79 = Utf8               $clone$
   #80 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #81 = NameAndType        #79:#80       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #82 = InterfaceMethodref #78.#81       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #83 = Utf8               text
   #84 = Utf8               ()Ljava/lang/String;
   #85 = NameAndType        #36:#37       // _text:Ljava/lang/String;
   #86 = Fieldref           #2.#85        // org/sireum/parser/ParseTree$Leaf._text:Ljava/lang/String;
   #87 = Utf8               getText
   #88 = Utf8               ruleName
   #89 = NameAndType        #38:#37       // _ruleName:Ljava/lang/String;
   #90 = Fieldref           #2.#89        // org/sireum/parser/ParseTree$Leaf._ruleName:Ljava/lang/String;
   #91 = Utf8               getRuleName
   #92 = Utf8               tipe
   #93 = Utf8               ()I
   #94 = NameAndType        #39:#32       // _tipe:I
   #95 = Fieldref           #2.#94        // org/sireum/parser/ParseTree$Leaf._tipe:I
   #96 = Utf8               getTipe
   #97 = Utf8               isHidden
   #98 = NameAndType        #40:#41       // _isHidden:Z
   #99 = Fieldref           #2.#98        // org/sireum/parser/ParseTree$Leaf._isHidden:Z
  #100 = Utf8               getIsHidden
  #101 = Utf8               posOpt
  #102 = Utf8               ()Lorg/sireum/Option;
  #103 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/message/Position;>;
  #104 = NameAndType        #42:#41       // _bposOpt:Z
  #105 = Fieldref           #2.#104       // org/sireum/parser/ParseTree$Leaf._bposOpt:Z
  #106 = Utf8               org/sireum/None$
  #107 = Class              #106          // org/sireum/None$
  #108 = Utf8               MODULE$
  #109 = Utf8               Lorg/sireum/None$;
  #110 = NameAndType        #108:#109     // MODULE$:Lorg/sireum/None$;
  #111 = Fieldref           #107.#110     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #112 = Utf8               apply
  #113 = Utf8               ()Lorg/sireum/None;
  #114 = NameAndType        #112:#113     // apply:()Lorg/sireum/None;
  #115 = Methodref          #107.#114     // org/sireum/None$.apply:()Lorg/sireum/None;
  #116 = Utf8               org/sireum/Some$
  #117 = Class              #116          // org/sireum/Some$
  #118 = Utf8               Lorg/sireum/Some$;
  #119 = NameAndType        #108:#118     // MODULE$:Lorg/sireum/Some$;
  #120 = Fieldref           #117.#119     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #121 = NameAndType        #43:#44       // _posOpt:Lorg/sireum/message/Position;
  #122 = Fieldref           #2.#121       // org/sireum/parser/ParseTree$Leaf._posOpt:Lorg/sireum/message/Position;
  #123 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #124 = NameAndType        #112:#123     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #125 = Methodref          #117.#124     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #126 = Utf8               getPosOpt
  #127 = NameAndType        #101:#102     // posOpt:()Lorg/sireum/Option;
  #128 = Methodref          #2.#127       // org/sireum/parser/ParseTree$Leaf.posOpt:()Lorg/sireum/Option;
  #129 = Utf8               toString
  #130 = Utf8               string$
  #131 = Utf8               (Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
  #132 = NameAndType        #130:#131     // string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
  #133 = InterfaceMethodref #6.#132       // org/sireum/parser/ParseTree.string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
  #134 = Utf8               string
  #135 = Utf8               hashCode$lzycompute
  #136 = NameAndType        #45:#46       // bitmap$0:B
  #137 = Fieldref           #2.#136       // org/sireum/parser/ParseTree$Leaf.bitmap$0:B
  #138 = NameAndType        #65:#66       // $hasEquals:()Z
  #139 = Methodref          #2.#138       // org/sireum/parser/ParseTree$Leaf.$hasEquals:()Z
  #140 = NameAndType        #31:#93       // hashCode:()I
  #141 = Methodref          #4.#140       // java/lang/Object.hashCode:()I
  #142 = Utf8               scala/package$
  #143 = Class              #142          // scala/package$
  #144 = Utf8               Lscala/package$;
  #145 = NameAndType        #108:#144     // MODULE$:Lscala/package$;
  #146 = Fieldref           #143.#145     // scala/package$.MODULE$:Lscala/package$;
  #147 = Utf8               Seq
  #148 = Utf8               ()Lscala/collection/immutable/Seq$;
  #149 = NameAndType        #147:#148     // Seq:()Lscala/collection/immutable/Seq$;
  #150 = Methodref          #143.#149     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #151 = Utf8               scala/runtime/ScalaRunTime$
  #152 = Class              #151          // scala/runtime/ScalaRunTime$
  #153 = Utf8               Lscala/runtime/ScalaRunTime$;
  #154 = NameAndType        #108:#153     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #155 = Fieldref           #152.#154     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #156 = Utf8               getClass
  #157 = Utf8               ()Ljava/lang/Class;
  #158 = NameAndType        #156:#157     // getClass:()Ljava/lang/Class;
  #159 = Methodref          #2.#158       // org/sireum/parser/ParseTree$Leaf.getClass:()Ljava/lang/Class;
  #160 = Utf8               java/lang/Class
  #161 = Class              #160          // java/lang/Class
  #162 = Utf8               getName
  #163 = NameAndType        #162:#84      // getName:()Ljava/lang/String;
  #164 = Methodref          #161.#163     // java/lang/Class.getName:()Ljava/lang/String;
  #165 = Utf8               org/sireum/String
  #166 = Class              #165          // org/sireum/String
  #167 = NameAndType        #83:#84       // text:()Ljava/lang/String;
  #168 = Methodref          #2.#167       // org/sireum/parser/ParseTree$Leaf.text:()Ljava/lang/String;
  #169 = Utf8               <init>
  #170 = Utf8               (Ljava/lang/String;)V
  #171 = NameAndType        #169:#170     // "<init>":(Ljava/lang/String;)V
  #172 = Methodref          #166.#171     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #173 = Utf8               genericWrapArray
  #174 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #175 = NameAndType        #173:#174     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #176 = Methodref          #152.#175     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #177 = Utf8               scala/collection/immutable/Seq$
  #178 = Class              #177          // scala/collection/immutable/Seq$
  #179 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #180 = NameAndType        #112:#179     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #181 = Methodref          #178.#180     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #182 = Utf8               scala/collection/Seq
  #183 = Class              #182          // scala/collection/Seq
  #184 = InterfaceMethodref #183.#140     // scala/collection/Seq.hashCode:()I
  #185 = NameAndType        #31:#32       // hashCode:I
  #186 = Fieldref           #2.#185       // org/sireum/parser/ParseTree$Leaf.hashCode:I
  #187 = Utf8               java/lang/Throwable
  #188 = Class              #187          // java/lang/Throwable
  #189 = NameAndType        #135:#93      // hashCode$lzycompute:()I
  #190 = Methodref          #2.#189       // org/sireum/parser/ParseTree$Leaf.hashCode$lzycompute:()I
  #191 = Utf8               equals
  #192 = Utf8               (Ljava/lang/Object;)Z
  #193 = Utf8               o
  #194 = NameAndType        #191:#192     // equals:(Ljava/lang/Object;)Z
  #195 = Methodref          #4.#194       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #196 = Methodref          #2.#140       // org/sireum/parser/ParseTree$Leaf.hashCode:()I
  #197 = Utf8               Ljava/lang/Object;
  #198 = Utf8               java/lang/String
  #199 = Class              #198          // java/lang/String
  #200 = Utf8               (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
  #201 = Utf8               (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option<Lorg/sireum/message/Position;>;)Lorg/sireum/parser/ParseTree$Leaf;
  #202 = Utf8               (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)V
  #203 = NameAndType        #169:#202     // "<init>":(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)V
  #204 = Methodref          #2.#203       // org/sireum/parser/ParseTree$Leaf."<init>":(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)V
  #205 = Utf8               Lorg/sireum/Option;
  #206 = Utf8               apply$default$1
  #207 = Utf8               apply$default$2
  #208 = NameAndType        #88:#84       // ruleName:()Ljava/lang/String;
  #209 = Methodref          #2.#208       // org/sireum/parser/ParseTree$Leaf.ruleName:()Ljava/lang/String;
  #210 = Utf8               apply$default$3
  #211 = NameAndType        #92:#93       // tipe:()I
  #212 = Methodref          #2.#211       // org/sireum/parser/ParseTree$Leaf.tipe:()I
  #213 = Utf8               apply$default$4
  #214 = NameAndType        #97:#66       // isHidden:()Z
  #215 = Methodref          #2.#214       // org/sireum/parser/ParseTree$Leaf.isHidden:()Z
  #216 = Utf8               apply$default$5
  #217 = Utf8               $content$lzycompute
  #218 = Utf8               ()Lscala/collection/immutable/Seq;
  #219 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #220 = Utf8               scala/Tuple2
  #221 = Class              #220          // scala/Tuple2
  #222 = Utf8               type
  #223 = String             #222          // type
  #224 = Utf8               List
  #225 = Utf8               ()Lscala/collection/immutable/List$;
  #226 = NameAndType        #224:#225     // List:()Lscala/collection/immutable/List$;
  #227 = Methodref          #143.#226     // scala/package$.List:()Lscala/collection/immutable/List$;
  #228 = Utf8               org
  #229 = String             #228          // org
  #230 = Utf8               sireum
  #231 = String             #230          // sireum
  #232 = Utf8               parser
  #233 = String             #232          // parser
  #234 = String             #30           // Leaf
  #235 = Utf8               [Ljava/lang/Object;
  #236 = Class              #235          // "[Ljava/lang/Object;"
  #237 = Utf8               wrapRefArray
  #238 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #239 = NameAndType        #237:#238     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #240 = Methodref          #152.#239     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #241 = Utf8               scala/collection/immutable/List$
  #242 = Class              #241          // scala/collection/immutable/List$
  #243 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #244 = NameAndType        #112:#243     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #245 = Methodref          #242.#244     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #246 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #247 = NameAndType        #169:#246     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #248 = Methodref          #221.#247     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #249 = String             #83           // text
  #250 = String             #88           // ruleName
  #251 = String             #92           // tipe
  #252 = Utf8               org/sireum/U32
  #253 = Class              #252          // org/sireum/U32
  #254 = Utf8               (I)V
  #255 = NameAndType        #169:#254     // "<init>":(I)V
  #256 = Methodref          #253.#255     // org/sireum/U32."<init>":(I)V
  #257 = String             #97           // isHidden
  #258 = Utf8               org/sireum/B
  #259 = Class              #258          // org/sireum/B
  #260 = Utf8               (Z)V
  #261 = NameAndType        #169:#260     // "<init>":(Z)V
  #262 = Methodref          #259.#261     // org/sireum/B."<init>":(Z)V
  #263 = String             #101          // posOpt
  #264 = Utf8               scala/collection/immutable/Seq
  #265 = Class              #264          // scala/collection/immutable/Seq
  #266 = NameAndType        #33:#34       // $content:Lscala/collection/immutable/Seq;
  #267 = Fieldref           #2.#266       // org/sireum/parser/ParseTree$Leaf.$content:Lscala/collection/immutable/Seq;
  #268 = NameAndType        #217:#218     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #269 = Methodref          #2.#268       // org/sireum/parser/ParseTree$Leaf.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #270 = Utf8               toST
  #271 = Utf8               ()Lorg/sireum/ST;
  #272 = Utf8               org/sireum/B$
  #273 = Class              #272          // org/sireum/B$
  #274 = Utf8               Lorg/sireum/B$;
  #275 = NameAndType        #108:#274     // MODULE$:Lorg/sireum/B$;
  #276 = Fieldref           #273.#275     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #277 = Utf8               org/sireum/ops/StringOps$
  #278 = Class              #277          // org/sireum/ops/StringOps$
  #279 = Utf8               Lorg/sireum/ops/StringOps$;
  #280 = NameAndType        #108:#279     // MODULE$:Lorg/sireum/ops/StringOps$;
  #281 = Fieldref           #278.#280     // org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
  #282 = Utf8               (Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #283 = NameAndType        #112:#282     // apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #284 = Methodref          #278.#283     // org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
  #285 = Utf8               org/sireum/String$
  #286 = Class              #285          // org/sireum/String$
  #287 = Utf8               Lorg/sireum/String$;
  #288 = NameAndType        #108:#287     // MODULE$:Lorg/sireum/String$;
  #289 = Fieldref           #286.#288     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #290 = Utf8               \'
  #291 = String             #290          // \'
  #292 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #293 = NameAndType        #112:#292     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #294 = Methodref          #286.#293     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #295 = Utf8               org/sireum/ops/StringOps
  #296 = Class              #295          // org/sireum/ops/StringOps
  #297 = Utf8               startsWith
  #298 = Utf8               (Ljava/lang/String;)Z
  #299 = NameAndType        #297:#298     // startsWith:(Ljava/lang/String;)Z
  #300 = Methodref          #296.#299     // org/sireum/ops/StringOps.startsWith:(Ljava/lang/String;)Z
  #301 = Utf8               $4B
  #302 = Utf8               (Z)Z
  #303 = NameAndType        #301:#302     // $4B:(Z)Z
  #304 = Methodref          #273.#303     // org/sireum/B$.$4B:(Z)Z
  #305 = Utf8               org/sireum/ST$
  #306 = Class              #305          // org/sireum/ST$
  #307 = Utf8               Lorg/sireum/ST$;
  #308 = NameAndType        #108:#307     // MODULE$:Lorg/sireum/ST$;
  #309 = Fieldref           #306.#308     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #310 = Utf8               \"
  #311 = String             #310          // \"
  #312 = Utf8               Lorg/sireum/ST$Templ$;
  #313 = NameAndType        #108:#312     // MODULE$:Lorg/sireum/ST$Templ$;
  #314 = Fieldref           #28.#313      // org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
  #315 = Utf8               escapeST
  #316 = NameAndType        #315:#271     // escapeST:()Lorg/sireum/ST;
  #317 = Methodref          #296.#316     // org/sireum/ops/StringOps.escapeST:()Lorg/sireum/ST;
  #318 = Utf8
  #319 = String             #318          //
  #320 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #321 = NameAndType        #112:#320     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #322 = Methodref          #28.#321      // org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #323 = Utf8                                                                         st\"\"\"\"${ops.StringOps(text).escapeST}\"\"\"\"
  #324 = String             #323          //                                                           st\"\"\"\"${ops.StringOps(text).escapeST}\"\"\"\"
  #325 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #326 = NameAndType        #112:#325     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #327 = Methodref          #306.#326     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #328 = Utf8               [\"
  #329 = String             #328          // [\"
  #330 = Utf8               \"]
  #331 = String             #330          // \"]
  #332 = Utf8               Lorg/sireum/ST$Any$;
  #333 = NameAndType        #108:#332     // MODULE$:Lorg/sireum/ST$Any$;
  #334 = Fieldref           #19.#333      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #335 = Utf8               org/sireum/$internal/Option$
  #336 = Class              #335          // org/sireum/$internal/Option$
  #337 = Utf8               Lorg/sireum/$internal/Option$;
  #338 = NameAndType        #108:#337     // MODULE$:Lorg/sireum/$internal/Option$;
  #339 = Fieldref           #336.#338     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #340 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #341 = NameAndType        #112:#340     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #342 = Methodref          #336.#341     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #343 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #344 = NameAndType        #112:#343     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #345 = Methodref          #19.#344      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #346 = Utf8                          st\"\"\"$ruleName[\"${ops.StringOps(text).escapeST}\"]\"\"\"
  #347 = String             #346          //            st\"\"\"$ruleName[\"${ops.StringOps(text).escapeST}\"]\"\"\"
  #348 = Utf8               ()Ljava/lang/Object;
  #349 = NameAndType        #75:#76       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #350 = Methodref          #2.#349       // org/sireum/parser/ParseTree$Leaf.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #351 = Utf8               $anonfun$_posOpt$1
  #352 = Utf8               ()Lorg/sireum/message/Position;
  #353 = Utf8               (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option<Lorg/sireum/message/Position;>;)V
  #354 = Utf8               __text
  #355 = Utf8               __ruleName
  #356 = Utf8               __tipe
  #357 = Utf8               __isHidden
  #358 = Utf8               __posOpt
  #359 = Utf8               ()V
  #360 = NameAndType        #169:#359     // "<init>":()V
  #361 = Methodref          #4.#360       // java/lang/Object."<init>":()V
  #362 = Utf8               $init$
  #363 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #364 = NameAndType        #362:#363     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #365 = InterfaceMethodref #78.#364      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #366 = Utf8               (Lorg/sireum/Immutable;)V
  #367 = NameAndType        #362:#366     // $init$:(Lorg/sireum/Immutable;)V
  #368 = InterfaceMethodref #60.#367      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #369 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #370 = NameAndType        #362:#369     // $init$:(Lorg/sireum/DatatypeSig;)V
  #371 = InterfaceMethodref #50.#370      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #372 = Utf8               (Lorg/sireum/parser/ParseTree;)V
  #373 = NameAndType        #362:#372     // $init$:(Lorg/sireum/parser/ParseTree;)V
  #374 = InterfaceMethodref #6.#373       // org/sireum/parser/ParseTree.$init$:(Lorg/sireum/parser/ParseTree;)V
  #375 = Utf8               org/sireum/Option
  #376 = Class              #375          // org/sireum/Option
  #377 = Utf8               isEmpty
  #378 = NameAndType        #377:#66      // isEmpty:()Z
  #379 = InterfaceMethodref #376.#378     // org/sireum/Option.isEmpty:()Z
  #380 = MethodType         #348          //  ()Ljava/lang/Object;
  #381 = NameAndType        #351:#352     // $anonfun$_posOpt$1:()Lorg/sireum/message/Position;
  #382 = Methodref          #2.#381       // org/sireum/parser/ParseTree$Leaf.$anonfun$_posOpt$1:()Lorg/sireum/message/Position;
  #383 = MethodHandle       6:#382        // REF_invokeStatic org/sireum/parser/ParseTree$Leaf.$anonfun$_posOpt$1:()Lorg/sireum/message/Position;
  #384 = MethodType         #352          //  ()Lorg/sireum/message/Position;
  #385 = Integer            5
  #386 = Integer            1
  #387 = Utf8               java/lang/invoke/LambdaMetafactory
  #388 = Class              #387          // java/lang/invoke/LambdaMetafactory
  #389 = Utf8               altMetafactory
  #390 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #391 = NameAndType        #389:#390     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #392 = Methodref          #388.#391     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #393 = MethodHandle       6:#392        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #394 = Utf8               ()Lscala/Function0;
  #395 = NameAndType        #112:#394     // apply:()Lscala/Function0;
  #396 = InvokeDynamic      #0:#395       // #0:apply:()Lscala/Function0;
  #397 = Utf8               getOrElse
  #398 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #399 = NameAndType        #397:#398     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #400 = InterfaceMethodref #376.#399     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #401 = Utf8               org/sireum/message/Position
  #402 = Class              #401          // org/sireum/message/Position
  #403 = Utf8               $deserializeLambda$
  #404 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #405 = Utf8               scala/runtime/LambdaDeserialize
  #406 = Class              #405          // scala/runtime/LambdaDeserialize
  #407 = Utf8               bootstrap
  #408 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #409 = NameAndType        #407:#408     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #410 = Methodref          #406.#409     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #411 = MethodHandle       6:#410        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #412 = Utf8               lambdaDeserialize
  #413 = NameAndType        #412:#404     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #414 = InvokeDynamic      #1:#413       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #415 = Utf8               Signature
  #416 = Utf8               Code
  #417 = Utf8               LineNumberTable
  #418 = Utf8               LocalVariableTable
  #419 = Utf8               StackMapTable
  #420 = Utf8               MethodParameters
  #421 = Utf8               InnerClasses
  #422 = Utf8               SourceFile
  #423 = Utf8               BootstrapMethods
  #424 = Utf8               ScalaInlineInfo
  #425 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #35                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _text;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _ruleName;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int _tipe;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _isHidden;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bposOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.message.Position _posOpt;
    descriptor: Lorg/sireum/message/Position;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #54                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.String text();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #86                 // Field _text:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.String getText();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #86                 // Field _text:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.String ruleName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #90                 // Field _ruleName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.String getRuleName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #90                 // Field _ruleName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public int tipe();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field _tipe:I
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public int getTipe();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #95                 // Field _tipe:I
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public boolean isHidden();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field _isHidden:Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public boolean getIsHidden();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #99                 // Field _isHidden:Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public org.sireum.Option<org.sireum.message.Position> posOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #105                // Field _bposOpt:Z
         4: ifeq          16
         7: getstatic     #111                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #115                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #120                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #122                // Field _posOpt:Lorg/sireum/message/Position;
        23: invokevirtual #125                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/parser/ParseTree$Leaf;
    Signature: #103                         // ()Lorg/sireum/Option<Lorg/sireum/message/Position;>;

  public org.sireum.Option<org.sireum.message.Position> getPosOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #128                // Method posOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;
    Signature: #103                         // ()Lorg/sireum/Option<Lorg/sireum/message/Position;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #133                // InterfaceMethod org/sireum/parser/ParseTree.string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #133                // InterfaceMethod org/sireum/parser/ParseTree.string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #137                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     95
        15: aload_0
        16: aload_0
        17: invokevirtual #139                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #141                // Method java/lang/Object.hashCode:()I
        27: goto          81
        30: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #159                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #164                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: new           #166                // class org/sireum/String
        58: dup
        59: aload_0
        60: invokevirtual #168                // Method text:()Ljava/lang/String;
        63: invokespecial #172                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        66: aastore
        67: invokevirtual #176                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        70: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        73: checkcast     #183                // class scala/collection/Seq
        76: invokeinterface #184,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        81: putfield      #186                // Field hashCode:I
        84: aload_0
        85: aload_0
        86: getfield      #137                // Field bitmap$0:B
        89: iconst_1
        90: ior
        91: i2b
        92: putfield      #137                // Field bitmap$0:B
        95: aload_1
        96: monitorexit
        97: goto          103
       100: aload_1
       101: monitorexit
       102: athrow
       103: aload_0
       104: getfield      #186                // Field hashCode:I
       107: ireturn
      Exception table:
         from    to  target type
             4    95   100   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/parser/ParseTree$Leaf, class org/sireum/parser/ParseTree$Leaf ]
          stack = [ class org/sireum/parser/ParseTree$Leaf ]
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/parser/ParseTree$Leaf, class org/sireum/parser/ParseTree$Leaf ]
          stack = [ class org/sireum/parser/ParseTree$Leaf, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     108     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #137                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #190                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #186                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #139                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #195                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/parser/ParseTree$Leaf
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/parser/ParseTree$Leaf
        37: astore        4
        39: aload_0
        40: invokevirtual #196                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #196                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #168                // Method text:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #168                // Method text:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #195                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/parser/ParseTree$Leaf ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/ParseTree$Leaf, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/ParseTree$Leaf, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/ParseTree$Leaf, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/ParseTree$Leaf ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/parser/ParseTree$Leaf, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/ParseTree$Leaf, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/parser/ParseTree$Leaf;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.parser.ParseTree$Leaf apply(java.lang.String, java.lang.String, int, boolean, org.sireum.Option<org.sireum.message.Position>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)Lorg/sireum/parser/ParseTree$Leaf;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: new           #2                  // class org/sireum/parser/ParseTree$Leaf
         3: dup
         4: aload_1
         5: aload_2
         6: iload_3
         7: iload         4
         9: aload         5
        11: invokespecial #204                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)V
        14: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/parser/ParseTree$Leaf;
            0      15     1  text   Ljava/lang/String;
            0      15     2 ruleName   Ljava/lang/String;
            0      15     3  tipe   I
            0      15     4 isHidden   Z
            0      15     5 posOpt   Lorg/sireum/Option;
    Signature: #201                         // (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option<Lorg/sireum/message/Position;>;)Lorg/sireum/parser/ParseTree$Leaf;
    MethodParameters:
      Name                           Flags
      text                           final
      ruleName                       final
      tipe                           final
      isHidden                       final
      posOpt                         final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #168                // Method text:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.String apply$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #209                // Method ruleName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public int apply$default$3();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #212                // Method tipe:()I
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public boolean apply$default$4();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #215                // Method isHidden:()Z
         4: ireturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public org.sireum.Option<org.sireum.message.Position> apply$default$5();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #128                // Method posOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;
    Signature: #103                         // ()Lorg/sireum/Option<Lorg/sireum/message/Position;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #137                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     220
        15: aload_0
        16: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: bipush        6
        27: anewarray     #221                // class scala/Tuple2
        30: dup
        31: iconst_0
        32: new           #221                // class scala/Tuple2
        35: dup
        36: ldc           #223                // String type
        38: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
        41: invokevirtual #227                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        44: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        47: iconst_4
        48: anewarray     #199                // class java/lang/String
        51: dup
        52: iconst_0
        53: ldc           #229                // String org
        55: aastore
        56: dup
        57: iconst_1
        58: ldc           #231                // String sireum
        60: aastore
        61: dup
        62: iconst_2
        63: ldc           #233                // String parser
        65: aastore
        66: dup
        67: iconst_3
        68: ldc           #234                // String Leaf
        70: aastore
        71: checkcast     #236                // class "[Ljava/lang/Object;"
        74: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        77: invokevirtual #245                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        80: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        83: aastore
        84: dup
        85: iconst_1
        86: new           #221                // class scala/Tuple2
        89: dup
        90: ldc           #249                // String text
        92: new           #166                // class org/sireum/String
        95: dup
        96: aload_0
        97: invokevirtual #168                // Method text:()Ljava/lang/String;
       100: invokespecial #172                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       103: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       106: aastore
       107: dup
       108: iconst_2
       109: new           #221                // class scala/Tuple2
       112: dup
       113: ldc           #250                // String ruleName
       115: new           #166                // class org/sireum/String
       118: dup
       119: aload_0
       120: invokevirtual #209                // Method ruleName:()Ljava/lang/String;
       123: invokespecial #172                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       126: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       129: aastore
       130: dup
       131: iconst_3
       132: new           #221                // class scala/Tuple2
       135: dup
       136: ldc           #251                // String tipe
       138: new           #253                // class org/sireum/U32
       141: dup
       142: aload_0
       143: invokevirtual #212                // Method tipe:()I
       146: invokespecial #256                // Method org/sireum/U32."<init>":(I)V
       149: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       152: aastore
       153: dup
       154: iconst_4
       155: new           #221                // class scala/Tuple2
       158: dup
       159: ldc_w         #257                // String isHidden
       162: new           #259                // class org/sireum/B
       165: dup
       166: aload_0
       167: invokevirtual #215                // Method isHidden:()Z
       170: invokespecial #262                // Method org/sireum/B."<init>":(Z)V
       173: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       176: aastore
       177: dup
       178: iconst_5
       179: new           #221                // class scala/Tuple2
       182: dup
       183: ldc_w         #263                // String posOpt
       186: aload_0
       187: invokevirtual #128                // Method posOpt:()Lorg/sireum/Option;
       190: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       193: aastore
       194: checkcast     #236                // class "[Ljava/lang/Object;"
       197: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       200: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       203: checkcast     #265                // class scala/collection/immutable/Seq
       206: putfield      #267                // Field $content:Lscala/collection/immutable/Seq;
       209: aload_0
       210: aload_0
       211: getfield      #137                // Field bitmap$0:B
       214: iconst_2
       215: ior
       216: i2b
       217: putfield      #137                // Field bitmap$0:B
       220: aload_1
       221: monitorexit
       222: goto          228
       225: aload_1
       226: monitorexit
       227: athrow
       228: aload_0
       229: getfield      #267                // Field $content:Lscala/collection/immutable/Seq;
       232: areturn
      Exception table:
         from    to  target type
             4   220   225   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 220
          locals = [ class org/sireum/parser/ParseTree$Leaf ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     233     0  this   Lorg/sireum/parser/ParseTree$Leaf;
    Signature: #219                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #137                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #269                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #267                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/ParseTree$Leaf;
    Signature: #219                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.ST toST();
    descriptor: ()Lorg/sireum/ST;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=17, locals=1, args_size=1
         0: getstatic     #276                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #281                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
         6: aload_0
         7: invokevirtual #209                // Method ruleName:()Ljava/lang/String;
        10: invokevirtual #284                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
        13: getstatic     #289                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        16: ldc_w         #291                // String \'
        19: invokevirtual #294                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        22: invokevirtual #300                // Method org/sireum/ops/StringOps.startsWith:(Ljava/lang/String;)Z
        25: invokevirtual #304                // Method org/sireum/B$.$4B:(Z)Z
        28: ifeq          158
        31: getstatic     #309                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
        34: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
        37: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        40: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        43: iconst_2
        44: anewarray     #199                // class java/lang/String
        47: dup
        48: iconst_0
        49: ldc_w         #311                // String \"
        52: aastore
        53: dup
        54: iconst_1
        55: ldc_w         #311                // String \"
        58: aastore
        59: checkcast     #236                // class "[Ljava/lang/Object;"
        62: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        65: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        68: checkcast     #265                // class scala/collection/immutable/Seq
        71: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
        74: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        77: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        80: iconst_1
        81: anewarray     #22                 // class org/sireum/ST$Arg
        84: dup
        85: iconst_0
        86: getstatic     #314                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        89: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
        92: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        95: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        98: iconst_1
        99: anewarray     #16                 // class org/sireum/ST
       102: dup
       103: iconst_0
       104: getstatic     #281                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
       107: aload_0
       108: invokevirtual #168                // Method text:()Ljava/lang/String;
       111: invokevirtual #284                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
       114: invokevirtual #317                // Method org/sireum/ops/StringOps.escapeST:()Lorg/sireum/ST;
       117: aastore
       118: checkcast     #236                // class "[Ljava/lang/Object;"
       121: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       124: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       127: checkcast     #265                // class scala/collection/immutable/Seq
       130: ldc_w         #319                // String
       133: invokevirtual #322                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       136: aastore
       137: checkcast     #236                // class "[Ljava/lang/Object;"
       140: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       143: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       146: checkcast     #265                // class scala/collection/immutable/Seq
       149: ldc_w         #324                // String                                                           st\"\"\"\"${ops.StringOps(text).escapeST}\"\"\"\"
       152: invokevirtual #327                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       155: goto          342
       158: getstatic     #309                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
       161: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
       164: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       167: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       170: iconst_3
       171: anewarray     #199                // class java/lang/String
       174: dup
       175: iconst_0
       176: ldc_w         #319                // String
       179: aastore
       180: dup
       181: iconst_1
       182: ldc_w         #329                // String [\"
       185: aastore
       186: dup
       187: iconst_2
       188: ldc_w         #331                // String \"]
       191: aastore
       192: checkcast     #236                // class "[Ljava/lang/Object;"
       195: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       198: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       201: checkcast     #265                // class scala/collection/immutable/Seq
       204: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
       207: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       210: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       213: iconst_2
       214: anewarray     #22                 // class org/sireum/ST$Arg
       217: dup
       218: iconst_0
       219: getstatic     #334                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       222: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
       225: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       228: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       231: iconst_1
       232: anewarray     #4                  // class java/lang/Object
       235: dup
       236: iconst_0
       237: getstatic     #339                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       240: new           #166                // class org/sireum/String
       243: dup
       244: aload_0
       245: invokevirtual #209                // Method ruleName:()Ljava/lang/String;
       248: invokespecial #172                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       251: invokevirtual #342                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       254: aastore
       255: invokevirtual #176                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       258: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       261: checkcast     #265                // class scala/collection/immutable/Seq
       264: ldc_w         #319                // String
       267: invokevirtual #345                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       270: aastore
       271: dup
       272: iconst_1
       273: getstatic     #314                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
       276: getstatic     #146                // Field scala/package$.MODULE$:Lscala/package$;
       279: invokevirtual #150                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       282: getstatic     #155                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       285: iconst_1
       286: anewarray     #16                 // class org/sireum/ST
       289: dup
       290: iconst_0
       291: getstatic     #281                // Field org/sireum/ops/StringOps$.MODULE$:Lorg/sireum/ops/StringOps$;
       294: aload_0
       295: invokevirtual #168                // Method text:()Ljava/lang/String;
       298: invokevirtual #284                // Method org/sireum/ops/StringOps$.apply:(Ljava/lang/String;)Lorg/sireum/ops/StringOps;
       301: invokevirtual #317                // Method org/sireum/ops/StringOps.escapeST:()Lorg/sireum/ST;
       304: aastore
       305: checkcast     #236                // class "[Ljava/lang/Object;"
       308: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       311: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       314: checkcast     #265                // class scala/collection/immutable/Seq
       317: ldc_w         #319                // String
       320: invokevirtual #322                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       323: aastore
       324: checkcast     #236                // class "[Ljava/lang/Object;"
       327: invokevirtual #240                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       330: invokevirtual #181                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       333: checkcast     #265                // class scala/collection/immutable/Seq
       336: ldc_w         #347                // String            st\"\"\"$ruleName[\"${ops.StringOps(text).escapeST}\"]\"\"\"
       339: invokevirtual #327                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       342: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 158
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 183
          stack = [ class org/sireum/ST ]
      LineNumberTable:
        line 53: 0
        line 54: 158
        line 53: 342
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     343     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #350                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Leaf;

  public static final org.sireum.message.Position $anonfun$_posOpt$1();
    descriptor: ()Lorg/sireum/message/Position;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 47: 0

  public org.sireum.parser.ParseTree$Leaf(java.lang.String, java.lang.String, int, boolean, org.sireum.Option<org.sireum.message.Position>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=6
         0: aload_0
         1: invokespecial #361                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #365                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #368                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #371                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: invokestatic  #374                // InterfaceMethod org/sireum/parser/ParseTree.$init$:(Lorg/sireum/parser/ParseTree;)V
        20: aload_0
        21: aload_1
        22: putfield      #86                 // Field _text:Ljava/lang/String;
        25: aload_0
        26: aload_2
        27: putfield      #90                 // Field _ruleName:Ljava/lang/String;
        30: aload_0
        31: iload_3
        32: putfield      #95                 // Field _tipe:I
        35: aload_0
        36: iload         4
        38: putfield      #99                 // Field _isHidden:Z
        41: aload_0
        42: aload         5
        44: invokeinterface #379,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        49: putfield      #105                // Field _bposOpt:Z
        52: aload_0
        53: aload         5
        55: invokedynamic #396,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        60: invokeinterface #400,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        65: checkcast     #402                // class org/sireum/message/Position
        68: putfield      #122                // Field _posOpt:Lorg/sireum/message/Position;
        71: return
      LineNumberTable:
        line 51: 0
        line 47: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      72     0  this   Lorg/sireum/parser/ParseTree$Leaf;
            0      72     1 __text   Ljava/lang/String;
            0      72     2 __ruleName   Ljava/lang/String;
            0      72     3 __tipe   I
            0      72     4 __isHidden   Z
            0      72     5 __posOpt   Lorg/sireum/Option;
    Signature: #353                         // (Ljava/lang/String;Ljava/lang/String;IZLorg/sireum/Option<Lorg/sireum/message/Position;>;)V
    MethodParameters:
      Name                           Flags
      __text                         final
      __ruleName                     final
      __tipe                         final
      __isHidden                     final
      __posOpt                       final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #414,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #20= #19 of #16;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #23= #22 of #16;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #26= #25 of #16;    // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #29= #28 of #16;          // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
  public static final #30= #2 of #6;      // Leaf=class org/sireum/parser/ParseTree$Leaf of class org/sireum/parser/ParseTree
SourceFile: "ParseTree.scala"
BootstrapMethods:
  0: #393 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #380 ()Ljava/lang/Object;
      #383 REF_invokeStatic org/sireum/parser/ParseTree$Leaf.$anonfun$_posOpt$1:()Lorg/sireum/message/Position;
      #384 ()Lorg/sireum/message/Position;
      #385 5
      #386 1
      #384 ()Lorg/sireum/message/Position;
  1: #411 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #383 REF_invokeStatic org/sireum/parser/ParseTree$Leaf.$anonfun$_posOpt$1:()Lorg/sireum/message/Position;
  ScalaInlineInfo: length = 0xA4 (unknown attribute)
   01 01 00 20 01 5F 01 60 01 00 39 00 3A 01 00 4B
   01 5C 01 00 4B 00 4C 01 00 21 00 DA 01 00 D9 00
   DA 01 00 41 00 42 01 00 47 00 42 01 00 A9 00 CA
   01 00 70 00 C8 01 00 CE 00 54 01 00 CF 00 54 01
   00 D2 00 5D 01 00 D5 00 42 01 00 D8 00 66 01 00
   BF 00 C0 01 00 64 00 42 01 00 7E 00 66 01 00 5B
   00 54 01 00 57 00 54 01 00 60 00 5D 01 00 2F 00
   30 01 00 1F 00 5D 01 00 87 00 5D 01 00 61 00 42
   01 00 65 00 66 01 00 58 00 54 01 00 86 00 54 01
   00 53 00 54 01 00 5C 00 5D 01 01 0E 01 0F 01 00
   81 00 54 01
  Scala: length = 0x0 (unknown attribute)

