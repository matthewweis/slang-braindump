Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/S8_Ext$.class
  Last modified May 29, 2022; size 5720 bytes
  SHA-256 checksum 2080254b96dd5caffa202c8cd06ad1909aeca26a1754ada436d709a2663f1d88
  Compiled from "extension.scala"
public final class org.sireum.conversions.S8_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/S8_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 23, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/conversions/S8_Ext$
    #2 = Class              #1            // org/sireum/conversions/S8_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               extension.scala
    #6 = Utf8               org/sireum/R$$String$
    #7 = Class              #6            // org/sireum/R$$String$
    #8 = Utf8               org/sireum/R
    #9 = Class              #8            // org/sireum/R
   #10 = Utf8               $String$
   #11 = Utf8               org/sireum/S8$S8$Slang
   #12 = Class              #11           // org/sireum/S8$S8$Slang
   #13 = Utf8               org/sireum/S8
   #14 = Class              #13           // org/sireum/S8
   #15 = Utf8               S8$Slang
   #16 = Utf8               org/sireum/S8$S8$Slang$s8$
   #17 = Class              #16           // org/sireum/S8$S8$Slang$s8$
   #18 = Utf8               s8$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lorg/sireum/conversions/S8_Ext$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // org/sireum/conversions/S8_Ext$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Lorg/sireum/conversions/S8_Ext$;
   #27 = Fieldref           #2.#26        // org/sireum/conversions/S8_Ext$.MODULE$:Lorg/sireum/conversions/S8_Ext$;
   #28 = Utf8               toB
   #29 = Utf8               (B)Z
   #30 = Utf8               n
   #31 = Utf8               org/sireum/B$
   #32 = Class              #31           // org/sireum/B$
   #33 = Utf8               Lorg/sireum/B$;
   #34 = NameAndType        #19:#33       // MODULE$:Lorg/sireum/B$;
   #35 = Fieldref           #32.#34       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #36 = Utf8               org/sireum/S8$
   #37 = Class              #36           // org/sireum/S8$
   #38 = Utf8               Lorg/sireum/S8$;
   #39 = NameAndType        #19:#38       // MODULE$:Lorg/sireum/S8$;
   #40 = Fieldref           #37.#39       // org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
   #41 = Utf8               scala/StringContext
   #42 = Class              #41           // scala/StringContext
   #43 = Utf8               scala/runtime/ScalaRunTime$
   #44 = Class              #43           // scala/runtime/ScalaRunTime$
   #45 = Utf8               Lscala/runtime/ScalaRunTime$;
   #46 = NameAndType        #19:#45       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #47 = Fieldref           #44.#46       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #48 = Utf8               java/lang/String
   #49 = Class              #48           // java/lang/String
   #50 = Utf8               0
   #51 = String             #50           // 0
   #52 = Utf8               [Ljava/lang/Object;
   #53 = Class              #52           // "[Ljava/lang/Object;"
   #54 = Utf8               wrapRefArray
   #55 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #56 = NameAndType        #54:#55       // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #57 = Methodref          #44.#56       // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
   #58 = Utf8               (Lscala/collection/immutable/Seq;)V
   #59 = NameAndType        #23:#58       // "<init>":(Lscala/collection/immutable/Seq;)V
   #60 = Methodref          #42.#59       // scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
   #61 = Utf8               (Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
   #62 = NameAndType        #15:#61       // S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
   #63 = Methodref          #37.#62       // org/sireum/S8$.S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
   #64 = Utf8               s8
   #65 = Utf8               ()Lorg/sireum/S8$S8$Slang$s8$;
   #66 = NameAndType        #64:#65       // s8:()Lorg/sireum/S8$S8$Slang$s8$;
   #67 = Methodref          #12.#66       // org/sireum/S8$S8$Slang.s8:()Lorg/sireum/S8$S8$Slang$s8$;
   #68 = Utf8               scala/collection/immutable/Nil$
   #69 = Class              #68           // scala/collection/immutable/Nil$
   #70 = Utf8               Lscala/collection/immutable/Nil$;
   #71 = NameAndType        #19:#70       // MODULE$:Lscala/collection/immutable/Nil$;
   #72 = Fieldref           #69.#71       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #73 = Utf8               apply
   #74 = Utf8               (Lscala/collection/immutable/Seq;)B
   #75 = NameAndType        #73:#74       // apply:(Lscala/collection/immutable/Seq;)B
   #76 = Methodref          #17.#75       // org/sireum/S8$S8$Slang$s8$.apply:(Lscala/collection/immutable/Seq;)B
   #77 = Utf8               (Z)Z
   #78 = NameAndType        #73:#77       // apply:(Z)Z
   #79 = Methodref          #32.#78       // org/sireum/B$.apply:(Z)Z
   #80 = Utf8               this
   #81 = Utf8               B
   #82 = Utf8               toZ
   #83 = Utf8               (B)Lorg/sireum/Z;
   #84 = Utf8               (B)V
   #85 = NameAndType        #23:#84       // "<init>":(B)V
   #86 = Methodref          #14.#85       // org/sireum/S8."<init>":(B)V
   #87 = Utf8               toMP
   #88 = Utf8               ()Lorg/sireum/Z;
   #89 = NameAndType        #87:#88       // toMP:()Lorg/sireum/Z;
   #90 = Methodref          #14.#89       // org/sireum/S8.toMP:()Lorg/sireum/Z;
   #91 = Utf8               toZ8
   #92 = Utf8               org/sireum/Z8$
   #93 = Class              #92           // org/sireum/Z8$
   #94 = Utf8               Lorg/sireum/Z8$;
   #95 = NameAndType        #19:#94       // MODULE$:Lorg/sireum/Z8$;
   #96 = Fieldref           #93.#95       // org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
   #97 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #98 = NameAndType        #73:#97       // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #99 = Methodref          #93.#98       // org/sireum/Z8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #100 = Utf8               toZ16
  #101 = Utf8               org/sireum/Z16$
  #102 = Class              #101          // org/sireum/Z16$
  #103 = Utf8               Lorg/sireum/Z16$;
  #104 = NameAndType        #19:#103      // MODULE$:Lorg/sireum/Z16$;
  #105 = Fieldref           #102.#104     // org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
  #106 = Methodref          #102.#98      // org/sireum/Z16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #107 = Utf8               toZ32
  #108 = Utf8               org/sireum/Z32$
  #109 = Class              #108          // org/sireum/Z32$
  #110 = Utf8               Lorg/sireum/Z32$;
  #111 = NameAndType        #19:#110      // MODULE$:Lorg/sireum/Z32$;
  #112 = Fieldref           #109.#111     // org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
  #113 = Methodref          #109.#98      // org/sireum/Z32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #114 = Utf8               toZ64
  #115 = Utf8               org/sireum/Z64$
  #116 = Class              #115          // org/sireum/Z64$
  #117 = Utf8               Lorg/sireum/Z64$;
  #118 = NameAndType        #19:#117      // MODULE$:Lorg/sireum/Z64$;
  #119 = Fieldref           #116.#118     // org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
  #120 = Methodref          #116.#98      // org/sireum/Z64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #121 = Utf8               toN
  #122 = Utf8               org/sireum/N$
  #123 = Class              #122          // org/sireum/N$
  #124 = Utf8               Lorg/sireum/N$;
  #125 = NameAndType        #19:#124      // MODULE$:Lorg/sireum/N$;
  #126 = Fieldref           #123.#125     // org/sireum/N$.MODULE$:Lorg/sireum/N$;
  #127 = Methodref          #123.#98      // org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #128 = Utf8               toN8
  #129 = Utf8               org/sireum/N8$
  #130 = Class              #129          // org/sireum/N8$
  #131 = Utf8               Lorg/sireum/N8$;
  #132 = NameAndType        #19:#131      // MODULE$:Lorg/sireum/N8$;
  #133 = Fieldref           #130.#132     // org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
  #134 = Methodref          #130.#98      // org/sireum/N8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #135 = Utf8               toN16
  #136 = Utf8               org/sireum/N16$
  #137 = Class              #136          // org/sireum/N16$
  #138 = Utf8               Lorg/sireum/N16$;
  #139 = NameAndType        #19:#138      // MODULE$:Lorg/sireum/N16$;
  #140 = Fieldref           #137.#139     // org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
  #141 = Methodref          #137.#98      // org/sireum/N16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #142 = Utf8               toN32
  #143 = Utf8               org/sireum/N32$
  #144 = Class              #143          // org/sireum/N32$
  #145 = Utf8               Lorg/sireum/N32$;
  #146 = NameAndType        #19:#145      // MODULE$:Lorg/sireum/N32$;
  #147 = Fieldref           #144.#146     // org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
  #148 = Methodref          #144.#98      // org/sireum/N32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #149 = Utf8               toN64
  #150 = Utf8               org/sireum/N64$
  #151 = Class              #150          // org/sireum/N64$
  #152 = Utf8               Lorg/sireum/N64$;
  #153 = NameAndType        #19:#152      // MODULE$:Lorg/sireum/N64$;
  #154 = Fieldref           #151.#153     // org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
  #155 = Methodref          #151.#98      // org/sireum/N64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #156 = Utf8               toS8
  #157 = Utf8               (B)B
  #158 = Utf8               scala/Predef$
  #159 = Class              #158          // scala/Predef$
  #160 = Utf8               Lscala/Predef$;
  #161 = NameAndType        #19:#160      // MODULE$:Lscala/Predef$;
  #162 = Fieldref           #159.#161     // scala/Predef$.MODULE$:Lscala/Predef$;
  #163 = Utf8               org/sireum/conversions/Z_Ext$
  #164 = Class              #163          // org/sireum/conversions/Z_Ext$
  #165 = Utf8               Lorg/sireum/conversions/Z_Ext$;
  #166 = NameAndType        #19:#165      // MODULE$:Lorg/sireum/conversions/Z_Ext$;
  #167 = Fieldref           #164.#166     // org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
  #168 = Utf8               isInRangeSigned8
  #169 = Utf8               (Lorg/sireum/Z;)Z
  #170 = NameAndType        #168:#169     // isInRangeSigned8:(Lorg/sireum/Z;)Z
  #171 = Methodref          #164.#170     // org/sireum/conversions/Z_Ext$.isInRangeSigned8:(Lorg/sireum/Z;)Z
  #172 = Utf8               $4B
  #173 = NameAndType        #172:#77      // $4B:(Z)Z
  #174 = Methodref          #32.#173      // org/sireum/B$.$4B:(Z)Z
  #175 = Utf8               require
  #176 = Utf8               (Z)V
  #177 = NameAndType        #175:#176     // require:(Z)V
  #178 = Methodref          #159.#177     // scala/Predef$.require:(Z)V
  #179 = Utf8               (Lorg/sireum/Z;)B
  #180 = NameAndType        #73:#179      // apply:(Lorg/sireum/Z;)B
  #181 = Methodref          #37.#180      // org/sireum/S8$.apply:(Lorg/sireum/Z;)B
  #182 = Utf8               mp
  #183 = Utf8               Lorg/sireum/Z;
  #184 = Utf8               toS16
  #185 = Utf8               (B)S
  #186 = Utf8               isInRangeSigned16
  #187 = NameAndType        #186:#169     // isInRangeSigned16:(Lorg/sireum/Z;)Z
  #188 = Methodref          #164.#187     // org/sireum/conversions/Z_Ext$.isInRangeSigned16:(Lorg/sireum/Z;)Z
  #189 = Utf8               org/sireum/S16$
  #190 = Class              #189          // org/sireum/S16$
  #191 = Utf8               Lorg/sireum/S16$;
  #192 = NameAndType        #19:#191      // MODULE$:Lorg/sireum/S16$;
  #193 = Fieldref           #190.#192     // org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
  #194 = Utf8               (Lorg/sireum/Z;)S
  #195 = NameAndType        #73:#194      // apply:(Lorg/sireum/Z;)S
  #196 = Methodref          #190.#195     // org/sireum/S16$.apply:(Lorg/sireum/Z;)S
  #197 = Utf8               toS32
  #198 = Utf8               (B)I
  #199 = Utf8               isInRangeSigned32
  #200 = NameAndType        #199:#169     // isInRangeSigned32:(Lorg/sireum/Z;)Z
  #201 = Methodref          #164.#200     // org/sireum/conversions/Z_Ext$.isInRangeSigned32:(Lorg/sireum/Z;)Z
  #202 = Utf8               org/sireum/S32$
  #203 = Class              #202          // org/sireum/S32$
  #204 = Utf8               Lorg/sireum/S32$;
  #205 = NameAndType        #19:#204      // MODULE$:Lorg/sireum/S32$;
  #206 = Fieldref           #203.#205     // org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
  #207 = Utf8               (Lorg/sireum/Z;)I
  #208 = NameAndType        #73:#207      // apply:(Lorg/sireum/Z;)I
  #209 = Methodref          #203.#208     // org/sireum/S32$.apply:(Lorg/sireum/Z;)I
  #210 = Utf8               toS64
  #211 = Utf8               (B)J
  #212 = Utf8               isInRangeSigned64
  #213 = NameAndType        #212:#169     // isInRangeSigned64:(Lorg/sireum/Z;)Z
  #214 = Methodref          #164.#213     // org/sireum/conversions/Z_Ext$.isInRangeSigned64:(Lorg/sireum/Z;)Z
  #215 = Utf8               org/sireum/S64$
  #216 = Class              #215          // org/sireum/S64$
  #217 = Utf8               Lorg/sireum/S64$;
  #218 = NameAndType        #19:#217      // MODULE$:Lorg/sireum/S64$;
  #219 = Fieldref           #216.#218     // org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
  #220 = Utf8               (Lorg/sireum/Z;)J
  #221 = NameAndType        #73:#220      // apply:(Lorg/sireum/Z;)J
  #222 = Methodref          #216.#221     // org/sireum/S64$.apply:(Lorg/sireum/Z;)J
  #223 = Utf8               toU8
  #224 = Utf8               isInRangeUnsigned8
  #225 = NameAndType        #224:#169     // isInRangeUnsigned8:(Lorg/sireum/Z;)Z
  #226 = Methodref          #164.#225     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned8:(Lorg/sireum/Z;)Z
  #227 = Utf8               org/sireum/U8$
  #228 = Class              #227          // org/sireum/U8$
  #229 = Utf8               Lorg/sireum/U8$;
  #230 = NameAndType        #19:#229      // MODULE$:Lorg/sireum/U8$;
  #231 = Fieldref           #228.#230     // org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
  #232 = Methodref          #228.#180     // org/sireum/U8$.apply:(Lorg/sireum/Z;)B
  #233 = Utf8               toU16
  #234 = Utf8               isInRangeUnsigned16
  #235 = NameAndType        #234:#169     // isInRangeUnsigned16:(Lorg/sireum/Z;)Z
  #236 = Methodref          #164.#235     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned16:(Lorg/sireum/Z;)Z
  #237 = Utf8               org/sireum/U16$
  #238 = Class              #237          // org/sireum/U16$
  #239 = Utf8               Lorg/sireum/U16$;
  #240 = NameAndType        #19:#239      // MODULE$:Lorg/sireum/U16$;
  #241 = Fieldref           #238.#240     // org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
  #242 = Methodref          #238.#195     // org/sireum/U16$.apply:(Lorg/sireum/Z;)S
  #243 = Utf8               toU32
  #244 = Utf8               isInRangeUnsigned32
  #245 = NameAndType        #244:#169     // isInRangeUnsigned32:(Lorg/sireum/Z;)Z
  #246 = Methodref          #164.#245     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned32:(Lorg/sireum/Z;)Z
  #247 = Utf8               org/sireum/U32$
  #248 = Class              #247          // org/sireum/U32$
  #249 = Utf8               Lorg/sireum/U32$;
  #250 = NameAndType        #19:#249      // MODULE$:Lorg/sireum/U32$;
  #251 = Fieldref           #248.#250     // org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
  #252 = Methodref          #248.#208     // org/sireum/U32$.apply:(Lorg/sireum/Z;)I
  #253 = Utf8               toU64
  #254 = Utf8               isInRangeUnsigned64
  #255 = NameAndType        #254:#169     // isInRangeUnsigned64:(Lorg/sireum/Z;)Z
  #256 = Methodref          #164.#255     // org/sireum/conversions/Z_Ext$.isInRangeUnsigned64:(Lorg/sireum/Z;)Z
  #257 = Utf8               org/sireum/U64$
  #258 = Class              #257          // org/sireum/U64$
  #259 = Utf8               Lorg/sireum/U64$;
  #260 = NameAndType        #19:#259      // MODULE$:Lorg/sireum/U64$;
  #261 = Fieldref           #258.#260     // org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
  #262 = Methodref          #258.#221     // org/sireum/U64$.apply:(Lorg/sireum/Z;)J
  #263 = Utf8               toR
  #264 = Utf8               (B)Lscala/math/BigDecimal;
  #265 = Utf8               Lorg/sireum/R$$String$;
  #266 = NameAndType        #19:#265      // MODULE$:Lorg/sireum/R$$String$;
  #267 = Fieldref           #7.#266       // org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
  #268 = Utf8               toString
  #269 = Utf8               ()Ljava/lang/String;
  #270 = NameAndType        #268:#269     // toString:()Ljava/lang/String;
  #271 = Methodref          #14.#270      // org/sireum/S8.toString:()Ljava/lang/String;
  #272 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
  #273 = NameAndType        #73:#272      // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #274 = Methodref          #7.#273       // org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
  #275 = Utf8               toRawU8
  #276 = Utf8               (I)B
  #277 = NameAndType        #73:#276      // apply:(I)B
  #278 = Methodref          #228.#277     // org/sireum/U8$.apply:(I)B
  #279 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #280 = Utf8               Code
  #281 = Utf8               LineNumberTable
  #282 = Utf8               StackMapTable
  #283 = Utf8               LocalVariableTable
  #284 = Utf8               MethodParameters
  #285 = Utf8               InnerClasses
  #286 = Utf8               SourceFile
  #287 = Utf8               ScalaInlineInfo
  #288 = Utf8               Scala
{
  public static final org.sireum.conversions.S8_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/S8_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/S8_Ext$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Lorg/sireum/conversions/S8_Ext$;
        10: return
      LineNumberTable:
        line 872: 0

  public boolean toB(byte);
    descriptor: (B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=2, args_size=2
         0: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: iload_1
         4: getstatic     #40                 // Field org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
         7: new           #42                 // class scala/StringContext
        10: dup
        11: getstatic     #47                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        14: iconst_1
        15: anewarray     #49                 // class java/lang/String
        18: dup
        19: iconst_0
        20: ldc           #51                 // String 0
        22: aastore
        23: checkcast     #53                 // class "[Ljava/lang/Object;"
        26: invokevirtual #57                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        29: invokespecial #60                 // Method scala/StringContext."<init>":(Lscala/collection/immutable/Seq;)V
        32: invokevirtual #63                 // Method org/sireum/S8$.S8$Slang:(Lscala/StringContext;)Lorg/sireum/S8$S8$Slang;
        35: invokevirtual #67                 // Method org/sireum/S8$S8$Slang.s8:()Lorg/sireum/S8$S8$Slang$s8$;
        38: getstatic     #72                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        41: invokevirtual #76                 // Method org/sireum/S8$S8$Slang$s8$.apply:(Lscala/collection/immutable/Seq;)B
        44: if_icmpeq     51
        47: iconst_1
        48: goto          52
        51: iconst_0
        52: invokevirtual #79                 // Method org/sireum/B$.apply:(Z)Z
        55: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 115 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/conversions/S8_Ext$, int ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 874: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      56     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: areturn
      LineNumberTable:
        line 876: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      12     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ8(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #96                 // Field org/sireum/Z8$.MODULE$:Lorg/sireum/Z8$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #99                 // Method org/sireum/Z8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 878: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ16(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #105                // Field org/sireum/Z16$.MODULE$:Lorg/sireum/Z16$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #106                // Method org/sireum/Z16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 880: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ32(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #112                // Field org/sireum/Z32$.MODULE$:Lorg/sireum/Z32$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #113                // Method org/sireum/Z32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 882: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ64(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #119                // Field org/sireum/Z64$.MODULE$:Lorg/sireum/Z64$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #120                // Method org/sireum/Z64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 884: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #126                // Field org/sireum/N$.MODULE$:Lorg/sireum/N$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #127                // Method org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 886: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN8(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #133                // Field org/sireum/N8$.MODULE$:Lorg/sireum/N8$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #134                // Method org/sireum/N8$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 888: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN16(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #140                // Field org/sireum/N16$.MODULE$:Lorg/sireum/N16$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #141                // Method org/sireum/N16$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 890: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN32(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #147                // Field org/sireum/N32$.MODULE$:Lorg/sireum/N32$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #148                // Method org/sireum/N32$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 892: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN64(byte);
    descriptor: (B)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #154                // Field org/sireum/N64$.MODULE$:Lorg/sireum/N64$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        14: invokevirtual #155                // Method org/sireum/N64$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: areturn
      LineNumberTable:
        line 894: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toS8(byte);
    descriptor: (B)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #171                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned8:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #40                 // Field org/sireum/S8$.MODULE$:Lorg/sireum/S8$;
        34: aload_2
        35: invokevirtual #181                // Method org/sireum/S8$.apply:(Lorg/sireum/Z;)B
        38: ireturn
      LineNumberTable:
        line 897: 0
        line 898: 12
        line 899: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public short toS16(byte);
    descriptor: (B)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #188                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned16:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #193                // Field org/sireum/S16$.MODULE$:Lorg/sireum/S16$;
        34: aload_2
        35: invokevirtual #196                // Method org/sireum/S16$.apply:(Lorg/sireum/Z;)S
        38: ireturn
      LineNumberTable:
        line 903: 0
        line 904: 12
        line 905: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public int toS32(byte);
    descriptor: (B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #201                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned32:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #206                // Field org/sireum/S32$.MODULE$:Lorg/sireum/S32$;
        34: aload_2
        35: invokevirtual #209                // Method org/sireum/S32$.apply:(Lorg/sireum/Z;)I
        38: ireturn
      LineNumberTable:
        line 909: 0
        line 910: 12
        line 911: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public long toS64(byte);
    descriptor: (B)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #214                // Method org/sireum/conversions/Z_Ext$.isInRangeSigned64:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #219                // Field org/sireum/S64$.MODULE$:Lorg/sireum/S64$;
        34: aload_2
        35: invokevirtual #222                // Method org/sireum/S64$.apply:(Lorg/sireum/Z;)J
        38: lreturn
      LineNumberTable:
        line 915: 0
        line 916: 12
        line 917: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toU8(byte);
    descriptor: (B)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #226                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned8:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #231                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
        34: aload_2
        35: invokevirtual #232                // Method org/sireum/U8$.apply:(Lorg/sireum/Z;)B
        38: ireturn
      LineNumberTable:
        line 921: 0
        line 922: 12
        line 923: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public short toU16(byte);
    descriptor: (B)S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #236                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned16:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #241                // Field org/sireum/U16$.MODULE$:Lorg/sireum/U16$;
        34: aload_2
        35: invokevirtual #242                // Method org/sireum/U16$.apply:(Lorg/sireum/Z;)S
        38: ireturn
      LineNumberTable:
        line 927: 0
        line 928: 12
        line 929: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public int toU32(byte);
    descriptor: (B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #246                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned32:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #251                // Field org/sireum/U32$.MODULE$:Lorg/sireum/U32$;
        34: aload_2
        35: invokevirtual #252                // Method org/sireum/U32$.apply:(Lorg/sireum/Z;)I
        38: ireturn
      LineNumberTable:
        line 933: 0
        line 934: 12
        line 935: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public long toU64(byte);
    descriptor: (B)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #14                 // class org/sireum/S8
         3: dup
         4: iload_1
         5: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
         8: invokevirtual #90                 // Method org/sireum/S8.toMP:()Lorg/sireum/Z;
        11: astore_2
        12: getstatic     #162                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: getstatic     #35                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #167                // Field org/sireum/conversions/Z_Ext$.MODULE$:Lorg/sireum/conversions/Z_Ext$;
        21: aload_2
        22: invokevirtual #256                // Method org/sireum/conversions/Z_Ext$.isInRangeUnsigned64:(Lorg/sireum/Z;)Z
        25: invokevirtual #174                // Method org/sireum/B$.$4B:(Z)Z
        28: invokevirtual #178                // Method scala/Predef$.require:(Z)V
        31: getstatic     #261                // Field org/sireum/U64$.MODULE$:Lorg/sireum/U64$;
        34: aload_2
        35: invokevirtual #262                // Method org/sireum/U64$.apply:(Lorg/sireum/Z;)J
        38: lreturn
      LineNumberTable:
        line 939: 0
        line 940: 12
        line 941: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      26     2    mp   Lorg/sireum/Z;
            0      39     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      39     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal toR(byte);
    descriptor: (B)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #267                // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
         3: new           #14                 // class org/sireum/S8
         6: dup
         7: iload_1
         8: invokespecial #86                 // Method org/sireum/S8."<init>":(B)V
        11: invokevirtual #271                // Method org/sireum/S8.toString:()Ljava/lang/String;
        14: invokevirtual #274                // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        17: areturn
      LineNumberTable:
        line 944: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/sireum/conversions/S8_Ext$;
            0      18     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  public byte toRawU8(byte);
    descriptor: (B)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #231                // Field org/sireum/U8$.MODULE$:Lorg/sireum/U8$;
         3: iload_1
         4: invokevirtual #278                // Method org/sireum/U8$.apply:(I)B
         7: ireturn
      LineNumberTable:
        line 946: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/S8_Ext$;
            0       8     1     n   B
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.conversions.S8_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #279                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 872: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/S8_Ext$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/R$$String$ of class org/sireum/R
  public static #15= #12 of #14;          // S8$Slang=class org/sireum/S8$S8$Slang of class org/sireum/S8
  public #18= #17 of #12;                 // s8$=class org/sireum/S8$S8$Slang$s8$ of class org/sireum/S8$S8$Slang
SourceFile: "extension.scala"
  ScalaInlineInfo: length = 0x72 (unknown attribute)
   01 01 00 16 00 17 00 16 01 00 1C 00 1D 01 00 79
   00 53 01 00 87 00 53 01 00 8E 00 53 01 00 95 00
   53 01 00 80 00 53 01 01 07 01 08 01 01 13 00 9D
   01 00 B8 00 B9 01 00 C5 00 C6 01 00 D2 00 D3 01
   00 9C 00 9D 01 00 E9 00 B9 01 00 F3 00 C6 01 00
   FD 00 D3 01 00 DF 00 9D 01 00 52 00 53 01 00 64
   00 53 01 00 6B 00 53 01 00 72 00 53 01 00 5B 00
   53 01
  Scala: length = 0x0 (unknown attribute)

