Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.class
  Last modified May 29, 2022; size 5209 bytes
  SHA-256 checksum 041ebe37fb6974aaf005a2564a012ec3a67873195646ba9ce3dd6911bc275edc
  Compiled from "JsonNodeDeserializer.java"
public class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer extends com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer<com.fasterxml.jackson.databind.JsonNode>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #24                         // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
  super_class: #26                        // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
  interfaces: 0, fields: 1, methods: 12, attributes: 3
Constant pool:
    #1 = Class              #83           // com/fasterxml/jackson/databind/JsonNode
    #2 = Methodref          #26.#84       // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer."<init>":(Ljava/lang/Class;Ljava/lang/Boolean;)V
    #3 = Class              #85           // com/fasterxml/jackson/databind/node/ObjectNode
    #4 = Methodref          #30.#86       // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer.getInstance:()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer;
    #5 = Class              #87           // com/fasterxml/jackson/databind/node/ArrayNode
    #6 = Methodref          #27.#88       // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer.getInstance:()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
    #7 = Fieldref           #24.#89       // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
    #8 = Methodref          #90.#91       // com/fasterxml/jackson/databind/DeserializationContext.getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
    #9 = Methodref          #92.#93       // com/fasterxml/jackson/databind/node/JsonNodeFactory.nullNode:()Lcom/fasterxml/jackson/databind/node/NullNode;
   #10 = Class              #94           // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
   #11 = Methodref          #10.#95       // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack."<init>":()V
   #12 = Methodref          #96.#97       // com/fasterxml/jackson/core/JsonParser.currentTokenId:()I
   #13 = Methodref          #92.#98       // com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
   #14 = Methodref          #24.#99       // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer._deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
   #15 = Methodref          #92.#100      // com/fasterxml/jackson/databind/node/JsonNodeFactory.arrayNode:()Lcom/fasterxml/jackson/databind/node/ArrayNode;
   #16 = Methodref          #24.#101      // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer._deserializeObjectAtName:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
   #17 = Methodref          #24.#102      // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer._deserializeAnyScalar:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
   #18 = Methodref          #26.#103      // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.supportsUpdate:(Lcom/fasterxml/jackson/databind/DeserializationConfig;)Ljava/lang/Boolean;
   #19 = Methodref          #26.#104      // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.isCachable:()Z
   #20 = Methodref          #26.#105      // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.logicalType:()Lcom/fasterxml/jackson/databind/type/LogicalType;
   #21 = Methodref          #26.#106      // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.deserializeWithType:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)Ljava/lang/Object;
   #22 = Methodref          #24.#107      // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
   #23 = Methodref          #24.#108      // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer.deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
   #24 = Class              #109          // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
   #25 = Methodref          #24.#95       // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer."<init>":()V
   #26 = Class              #110          // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
   #27 = Class              #111          // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer
   #28 = Utf8               ArrayDeserializer
   #29 = Utf8               InnerClasses
   #30 = Class              #112          // com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer
   #31 = Utf8               ObjectDeserializer
   #32 = Utf8               instance
   #33 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
   #34 = Utf8               <init>
   #35 = Utf8               ()V
   #36 = Utf8               Code
   #37 = Utf8               LineNumberTable
   #38 = Utf8               LocalVariableTable
   #39 = Utf8               this
   #40 = Utf8               getDeserializer
   #41 = Utf8               (Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonDeserializer;
   #42 = Utf8               nodeClass
   #43 = Utf8               Ljava/lang/Class;
   #44 = Utf8               LocalVariableTypeTable
   #45 = Utf8               Ljava/lang/Class<*>;
   #46 = Utf8               StackMapTable
   #47 = Utf8               Signature
   #48 = Utf8               (Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JsonDeserializer<+Lcom/fasterxml/jackson/databind/JsonNode;>;
   #49 = Utf8               getNullValue
   #50 = Utf8               (Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
   #51 = Utf8               ctxt
   #52 = Utf8               Lcom/fasterxml/jackson/databind/DeserializationContext;
   #53 = Utf8               getAbsentValue
   #54 = Utf8               (Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
   #55 = Utf8               deserialize
   #56 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
   #57 = Utf8               p
   #58 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;
   #59 = Utf8               stack
   #60 = Utf8               ContainerStack
   #61 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;
   #62 = Utf8               nodeF
   #63 = Utf8               Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
   #64 = Class              #94           // com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
   #65 = Class              #113          // com/fasterxml/jackson/databind/node/JsonNodeFactory
   #66 = Utf8               Exceptions
   #67 = Class              #114          // java/io/IOException
   #68 = Utf8               supportsUpdate
   #69 = Utf8               (Lcom/fasterxml/jackson/databind/DeserializationConfig;)Ljava/lang/Boolean;
   #70 = Utf8               isCachable
   #71 = Utf8               ()Z
   #72 = Utf8               logicalType
   #73 = Utf8               ()Lcom/fasterxml/jackson/databind/type/LogicalType;
   #74 = Utf8               deserializeWithType
   #75 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)Ljava/lang/Object;
   #76 = Class              #115          // com/fasterxml/jackson/databind/JsonMappingException
   #77 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
   #78 = Class              #116          // com/fasterxml/jackson/core/JacksonException
   #79 = Utf8               <clinit>
   #80 = Utf8               Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer<Lcom/fasterxml/jackson/databind/JsonNode;>;
   #81 = Utf8               SourceFile
   #82 = Utf8               JsonNodeDeserializer.java
   #83 = Utf8               com/fasterxml/jackson/databind/JsonNode
   #84 = NameAndType        #34:#117      // "<init>":(Ljava/lang/Class;Ljava/lang/Boolean;)V
   #85 = Utf8               com/fasterxml/jackson/databind/node/ObjectNode
   #86 = NameAndType        #118:#119     // getInstance:()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer;
   #87 = Utf8               com/fasterxml/jackson/databind/node/ArrayNode
   #88 = NameAndType        #118:#120     // getInstance:()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
   #89 = NameAndType        #32:#33       // instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
   #90 = Class              #121          // com/fasterxml/jackson/databind/DeserializationContext
   #91 = NameAndType        #122:#123     // getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
   #92 = Class              #113          // com/fasterxml/jackson/databind/node/JsonNodeFactory
   #93 = NameAndType        #124:#125     // nullNode:()Lcom/fasterxml/jackson/databind/node/NullNode;
   #94 = Utf8               com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
   #95 = NameAndType        #34:#35       // "<init>":()V
   #96 = Class              #126          // com/fasterxml/jackson/core/JsonParser
   #97 = NameAndType        #127:#128     // currentTokenId:()I
   #98 = NameAndType        #129:#130     // objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
   #99 = NameAndType        #131:#132     // _deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
  #100 = NameAndType        #133:#134     // arrayNode:()Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #101 = NameAndType        #135:#136     // _deserializeObjectAtName:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #102 = NameAndType        #137:#56      // _deserializeAnyScalar:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
  #103 = NameAndType        #68:#69       // supportsUpdate:(Lcom/fasterxml/jackson/databind/DeserializationConfig;)Ljava/lang/Boolean;
  #104 = NameAndType        #70:#71       // isCachable:()Z
  #105 = NameAndType        #72:#73       // logicalType:()Lcom/fasterxml/jackson/databind/type/LogicalType;
  #106 = NameAndType        #74:#75       // deserializeWithType:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)Ljava/lang/Object;
  #107 = NameAndType        #49:#50       // getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
  #108 = NameAndType        #55:#56       // deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
  #109 = Utf8               com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
  #110 = Utf8               com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
  #111 = Utf8               com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer
  #112 = Utf8               com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer
  #113 = Utf8               com/fasterxml/jackson/databind/node/JsonNodeFactory
  #114 = Utf8               java/io/IOException
  #115 = Utf8               com/fasterxml/jackson/databind/JsonMappingException
  #116 = Utf8               com/fasterxml/jackson/core/JacksonException
  #117 = Utf8               (Ljava/lang/Class;Ljava/lang/Boolean;)V
  #118 = Utf8               getInstance
  #119 = Utf8               ()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer;
  #120 = Utf8               ()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
  #121 = Utf8               com/fasterxml/jackson/databind/DeserializationContext
  #122 = Utf8               getNodeFactory
  #123 = Utf8               ()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
  #124 = Utf8               nullNode
  #125 = Utf8               ()Lcom/fasterxml/jackson/databind/node/NullNode;
  #126 = Utf8               com/fasterxml/jackson/core/JsonParser
  #127 = Utf8               currentTokenId
  #128 = Utf8               ()I
  #129 = Utf8               objectNode
  #130 = Utf8               ()Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #131 = Utf8               _deserializeContainerNoRecursion
  #132 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
  #133 = Utf8               arrayNode
  #134 = Utf8               ()Lcom/fasterxml/jackson/databind/node/ArrayNode;
  #135 = Utf8               _deserializeObjectAtName
  #136 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
  #137 = Utf8               _deserializeAnyScalar
{
  private static final com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance;
    descriptor: Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  protected com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #1                  // class com/fasterxml/jackson/databind/JsonNode
         3: aconst_null
         4: invokespecial #2                  // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer."<init>":(Ljava/lang/Class;Ljava/lang/Boolean;)V
         7: return
      LineNumberTable:
        line 34: 0
        line 35: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;

  public static com.fasterxml.jackson.databind.JsonDeserializer<? extends com.fasterxml.jackson.databind.JsonNode> getDeserializer(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonDeserializer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #3                  // class com/fasterxml/jackson/databind/node/ObjectNode
         3: if_acmpne     10
         6: invokestatic  #4                  // Method com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer.getInstance:()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer;
         9: areturn
        10: aload_0
        11: ldc           #5                  // class com/fasterxml/jackson/databind/node/ArrayNode
        13: if_acmpne     20
        16: invokestatic  #6                  // Method com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer.getInstance:()Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer;
        19: areturn
        20: getstatic     #7                  // Field instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
        23: areturn
      LineNumberTable:
        line 42: 0
        line 43: 6
        line 45: 10
        line 46: 16
        line 49: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 nodeClass   Ljava/lang/Class;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      24     0 nodeClass   Ljava/lang/Class<*>;
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 9 /* same */
    Signature: #48                          // (Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JsonDeserializer<+Lcom/fasterxml/jackson/databind/JsonNode;>;

  public com.fasterxml.jackson.databind.JsonNode getNullValue(com.fasterxml.jackson.databind.DeserializationContext);
    descriptor: (Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #8                  // Method com/fasterxml/jackson/databind/DeserializationContext.getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
         4: invokevirtual #9                  // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.nullNode:()Lcom/fasterxml/jackson/databind/node/NullNode;
         7: areturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
            0       8     1  ctxt   Lcom/fasterxml/jackson/databind/DeserializationContext;

  public java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext);
    descriptor: (Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
            0       2     1  ctxt   Lcom/fasterxml/jackson/databind/DeserializationContext;

  public com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=3
         0: new           #10                 // class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack
         3: dup
         4: invokespecial #11                 // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack."<init>":()V
         7: astore_3
         8: aload_2
         9: invokevirtual #8                  // Method com/fasterxml/jackson/databind/DeserializationContext.getNodeFactory:()Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
        12: astore        4
        14: aload_1
        15: invokevirtual #12                 // Method com/fasterxml/jackson/core/JsonParser.currentTokenId:()I
        18: tableswitch   { // 1 to 5
                       1: 52
                       2: 67
                       3: 73
                       4: 98
                       5: 88
                 default: 98
            }
        52: aload_0
        53: aload_1
        54: aload_2
        55: aload         4
        57: aload_3
        58: aload         4
        60: invokevirtual #13                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
        63: invokevirtual #14                 // Method _deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
        66: areturn
        67: aload         4
        69: invokevirtual #13                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.objectNode:()Lcom/fasterxml/jackson/databind/node/ObjectNode;
        72: areturn
        73: aload_0
        74: aload_1
        75: aload_2
        76: aload         4
        78: aload_3
        79: aload         4
        81: invokevirtual #15                 // Method com/fasterxml/jackson/databind/node/JsonNodeFactory.arrayNode:()Lcom/fasterxml/jackson/databind/node/ArrayNode;
        84: invokevirtual #14                 // Method _deserializeContainerNoRecursion:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;Lcom/fasterxml/jackson/databind/node/ContainerNode;)Lcom/fasterxml/jackson/databind/node/ContainerNode;
        87: areturn
        88: aload_0
        89: aload_1
        90: aload_2
        91: aload         4
        93: aload_3
        94: invokevirtual #16                 // Method _deserializeObjectAtName:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
        97: areturn
        98: aload_0
        99: aload_1
       100: aload_2
       101: invokevirtual #17                 // Method _deserializeAnyScalar:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
       104: areturn
      LineNumberTable:
        line 80: 0
        line 81: 8
        line 82: 14
        line 84: 52
        line 86: 67
        line 88: 73
        line 90: 88
        line 93: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     105     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
            0     105     1     p   Lcom/fasterxml/jackson/core/JsonParser;
            0     105     2  ctxt   Lcom/fasterxml/jackson/databind/DeserializationContext;
            8      97     3 stack   Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack;
           14      91     4 nodeF   Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 52
          locals = [ class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack, class com/fasterxml/jackson/databind/node/JsonNodeFactory ]
        frame_type = 14 /* same */
        frame_type = 5 /* same */
        frame_type = 14 /* same */
        frame_type = 9 /* same */
    Exceptions:
      throws java.io.IOException

  public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig);
    descriptor: (Lcom/fasterxml/jackson/databind/DeserializationConfig;)Ljava/lang/Boolean;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #18                 // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.supportsUpdate:(Lcom/fasterxml/jackson/databind/DeserializationConfig;)Ljava/lang/Boolean;
         5: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;

  public boolean isCachable();
    descriptor: ()Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #19                 // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.isCachable:()Z
         4: ireturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;

  public com.fasterxml.jackson.databind.type.LogicalType logicalType();
    descriptor: ()Lcom/fasterxml/jackson/databind/type/LogicalType;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #20                 // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.logicalType:()Lcom/fasterxml/jackson/databind/type/LogicalType;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;

  public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokespecial #21                 // Method com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer.deserializeWithType:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)Ljava/lang/Object;
         7: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
    Exceptions:
      throws java.io.IOException

  public java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    descriptor: (Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #22                 // Method getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
         5: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
    Exceptions:
      throws com.fasterxml.jackson.databind.JsonMappingException

  public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JacksonException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #23                 // Method deserialize:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Lcom/fasterxml/jackson/databind/JsonNode;
         6: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
    Exceptions:
      throws java.io.IOException, com.fasterxml.jackson.core.JacksonException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #24                 // class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #7                  // Field instance:Lcom/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer;
        10: return
      LineNumberTable:
        line 28: 0
}
Signature: #80                          // Lcom/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer<Lcom/fasterxml/jackson/databind/JsonNode;>;
SourceFile: "JsonNodeDeserializer.java"
InnerClasses:
  static final #28= #27 of #24;           // ArrayDeserializer=class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ArrayDeserializer of class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
  static final #31= #30 of #24;           // ObjectDeserializer=class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer$ObjectDeserializer of class com/fasterxml/jackson/databind/deser/std/JsonNodeDeserializer
  static final #60= #10 of #26;           // ContainerStack=class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer$ContainerStack of class com/fasterxml/jackson/databind/deser/std/BaseNodeDeserializer
