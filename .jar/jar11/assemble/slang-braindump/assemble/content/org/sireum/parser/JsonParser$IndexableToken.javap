Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/parser/JsonParser$IndexableToken.class
  Last modified May 29, 2022; size 14399 bytes
  SHA-256 checksum dca2d9a9a3240fa957a067dfc262cd77cf1cbe1c496fe908d876a76422fa946a
  Compiled from "JsonParser.scala"
public final class org.sireum.parser.JsonParser$IndexableToken extends java.lang.Object implements org.sireum.Indexable<org.sireum.parser.JsonParser$Result>, org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/JsonParser$IndexableToken
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 8, methods: 37, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/parser/JsonParser$IndexableToken
    #2 = Class              #1            // org/sireum/parser/JsonParser$IndexableToken
    #3 = Utf8               Ljava/lang/Object;Lorg/sireum/Indexable<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/DatatypeSig;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/Indexable
    #7 = Class              #6            // org/sireum/Indexable
    #8 = Utf8               org/sireum/DatatypeSig
    #9 = Class              #8            // org/sireum/DatatypeSig
   #10 = Utf8               JsonParser.scala
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               org/sireum/Indexable$Pos
   #17 = Class              #16           // org/sireum/Indexable$Pos
   #18 = Utf8               Pos
   #19 = Utf8               org/sireum/parser/JsonParser
   #20 = Class              #19           // org/sireum/parser/JsonParser
   #21 = Utf8               IndexableToken
   #22 = Utf8               org/sireum/parser/JsonParser$Result
   #23 = Class              #22           // org/sireum/parser/JsonParser$Result
   #24 = Utf8               Result
   #25 = Utf8               org/sireum/parser/JsonParser$Result$
   #26 = Class              #25           // org/sireum/parser/JsonParser$Result$
   #27 = Utf8               Result$
   #28 = Utf8               org/sireum/parser/JsonParser$Result$Kind$
   #29 = Class              #28           // org/sireum/parser/JsonParser$Result$Kind$
   #30 = Utf8               Kind$
   #31 = Utf8               org/sireum/parser/JsonParser$Result$Kind$Normal$
   #32 = Class              #31           // org/sireum/parser/JsonParser$Result$Kind$Normal$
   #33 = Utf8               Normal$
   #34 = Utf8               org/sireum/parser/JsonParser$Result$Kind$Type
   #35 = Class              #34           // org/sireum/parser/JsonParser$Result$Kind$Type
   #36 = Utf8               Type
   #37 = Utf8               org/sireum/parser/ParseTree$Leaf
   #38 = Class              #37           // org/sireum/parser/ParseTree$Leaf
   #39 = Utf8               org/sireum/parser/ParseTree
   #40 = Class              #39           // org/sireum/parser/ParseTree
   #41 = Utf8               Leaf
   #42 = Utf8               scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala
   #43 = Class              #42           // scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala
   #44 = Utf8               scala/collection/convert/AsScalaExtensions
   #45 = Class              #44           // scala/collection/convert/AsScalaExtensions
   #46 = Utf8               ConcurrentMapHasAsScala
   #47 = Utf8               hashCode
   #48 = Utf8               I
   #49 = Utf8               $content
   #50 = Utf8               Lscala/collection/immutable/Seq;
   #51 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #52 = Utf8               _has
   #53 = Utf8               Lscala/Function1;
   #54 = Utf8               Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/B;>;
   #55 = Utf8               _at
   #56 = Utf8               Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;
   #57 = Utf8               _input
   #58 = Utf8               Lorg/sireum/Indexable$Pos;
   #59 = Utf8               Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;
   #60 = Utf8               _skipHidden
   #61 = Utf8               Z
   #62 = Utf8               lexer
   #63 = Utf8               Lorg/sireum/parser/JsonLexer;
   #64 = Utf8               bitmap$0
   #65 = Utf8               B
   #66 = Utf8               hash
   #67 = Utf8               ()Lorg/sireum/Z;
   #68 = Utf8               hash$
   #69 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #70 = NameAndType        #68:#69       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #71 = InterfaceMethodref #9.#70        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #72 = Utf8               this
   #73 = Utf8               Lorg/sireum/parser/JsonParser$IndexableToken;
   #74 = Utf8               $cannotMixImmutableAndMutable
   #75 = Utf8               ()Lscala/runtime/Nothing$;
   #76 = Utf8               org/sireum/Immutable
   #77 = Class              #76           // org/sireum/Immutable
   #78 = Utf8               $cannotMixImmutableAndMutable$
   #79 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #80 = NameAndType        #78:#79       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #81 = InterfaceMethodref #77.#80       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #82 = Utf8               $hasEquals
   #83 = Utf8               ()Z
   #84 = Utf8               $hasEquals$
   #85 = Utf8               (Lorg/sireum/Immutable;)Z
   #86 = NameAndType        #84:#85       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #87 = InterfaceMethodref #77.#86       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #88 = Utf8               $hasString
   #89 = Utf8               $hasString$
   #90 = NameAndType        #89:#85       // $hasString$:(Lorg/sireum/Immutable;)Z
   #91 = InterfaceMethodref #77.#90       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #92 = Utf8               $clone
   #93 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #94 = Utf8               org/sireum/$internal/ImmutableMarker
   #95 = Class              #94           // org/sireum/$internal/ImmutableMarker
   #96 = Utf8               $clone$
   #97 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #98 = NameAndType        #96:#97       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #99 = InterfaceMethodref #95.#98       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #100 = Utf8               input
  #101 = Utf8               ()Lorg/sireum/Indexable$Pos;
  #102 = Utf8               ()Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;
  #103 = NameAndType        #57:#58       // _input:Lorg/sireum/Indexable$Pos;
  #104 = Fieldref           #2.#103       // org/sireum/parser/JsonParser$IndexableToken._input:Lorg/sireum/Indexable$Pos;
  #105 = Utf8               getInput
  #106 = Utf8               skipHidden
  #107 = NameAndType        #60:#61       // _skipHidden:Z
  #108 = Fieldref           #2.#107       // org/sireum/parser/JsonParser$IndexableToken._skipHidden:Z
  #109 = Utf8               getSkipHidden
  #110 = Utf8               toString
  #111 = Utf8               ()Ljava/lang/String;
  #112 = NameAndType        #88:#83       // $hasString:()Z
  #113 = Methodref          #2.#112       // org/sireum/parser/JsonParser$IndexableToken.$hasString:()Z
  #114 = Utf8               string$
  #115 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #116 = NameAndType        #114:#115     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #117 = InterfaceMethodref #9.#116       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #118 = Utf8               java/lang/StringBuilder
  #119 = Class              #118          // java/lang/StringBuilder
  #120 = Utf8               <init>
  #121 = Utf8               ()V
  #122 = NameAndType        #120:#121     // "<init>":()V
  #123 = Methodref          #119.#122     // java/lang/StringBuilder."<init>":()V
  #124 = String             #21           // IndexableToken
  #125 = Utf8               append
  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #127 = NameAndType        #125:#126     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #128 = Methodref          #119.#127     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #129 = Utf8               (C)Ljava/lang/StringBuilder;
  #130 = NameAndType        #125:#129     // append:(C)Ljava/lang/StringBuilder;
  #131 = Methodref          #119.#130     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #132 = Utf8               org/sireum/String$
  #133 = Class              #132          // org/sireum/String$
  #134 = Utf8               MODULE$
  #135 = Utf8               Lorg/sireum/String$;
  #136 = NameAndType        #134:#135     // MODULE$:Lorg/sireum/String$;
  #137 = Fieldref           #133.#136     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #138 = NameAndType        #100:#101     // input:()Lorg/sireum/Indexable$Pos;
  #139 = Methodref          #2.#138       // org/sireum/parser/JsonParser$IndexableToken.input:()Lorg/sireum/Indexable$Pos;
  #140 = Utf8               escape
  #141 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #142 = NameAndType        #140:#141     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #143 = Methodref          #133.#142     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #144 = Utf8               ,
  #145 = String             #144          // ,
  #146 = Utf8               org/sireum/B
  #147 = Class              #146          // org/sireum/B
  #148 = NameAndType        #106:#83      // skipHidden:()Z
  #149 = Methodref          #2.#148       // org/sireum/parser/JsonParser$IndexableToken.skipHidden:()Z
  #150 = Utf8               (Z)V
  #151 = NameAndType        #120:#150     // "<init>":(Z)V
  #152 = Methodref          #147.#151     // org/sireum/B."<init>":(Z)V
  #153 = NameAndType        #110:#111     // toString:()Ljava/lang/String;
  #154 = Methodref          #119.#153     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #155 = Utf8               sb
  #156 = Utf8               Ljava/lang/StringBuilder;
  #157 = Utf8               java/lang/String
  #158 = Class              #157          // java/lang/String
  #159 = Utf8               string
  #160 = Methodref          #2.#153       // org/sireum/parser/JsonParser$IndexableToken.toString:()Ljava/lang/String;
  #161 = Utf8               apply
  #162 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #163 = NameAndType        #161:#162     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #164 = Methodref          #133.#163     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #165 = Utf8               hashCode$lzycompute
  #166 = Utf8               ()I
  #167 = NameAndType        #64:#65       // bitmap$0:B
  #168 = Fieldref           #2.#167       // org/sireum/parser/JsonParser$IndexableToken.bitmap$0:B
  #169 = NameAndType        #82:#83       // $hasEquals:()Z
  #170 = Methodref          #2.#169       // org/sireum/parser/JsonParser$IndexableToken.$hasEquals:()Z
  #171 = NameAndType        #47:#166      // hashCode:()I
  #172 = Methodref          #5.#171       // java/lang/Object.hashCode:()I
  #173 = Utf8               scala/package$
  #174 = Class              #173          // scala/package$
  #175 = Utf8               Lscala/package$;
  #176 = NameAndType        #134:#175     // MODULE$:Lscala/package$;
  #177 = Fieldref           #174.#176     // scala/package$.MODULE$:Lscala/package$;
  #178 = Utf8               Seq
  #179 = Utf8               ()Lscala/collection/immutable/Seq$;
  #180 = NameAndType        #178:#179     // Seq:()Lscala/collection/immutable/Seq$;
  #181 = Methodref          #174.#180     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #182 = Utf8               scala/runtime/ScalaRunTime$
  #183 = Class              #182          // scala/runtime/ScalaRunTime$
  #184 = Utf8               Lscala/runtime/ScalaRunTime$;
  #185 = NameAndType        #134:#184     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #186 = Fieldref           #183.#185     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #187 = Utf8               getClass
  #188 = Utf8               ()Ljava/lang/Class;
  #189 = NameAndType        #187:#188     // getClass:()Ljava/lang/Class;
  #190 = Methodref          #2.#189       // org/sireum/parser/JsonParser$IndexableToken.getClass:()Ljava/lang/Class;
  #191 = Utf8               java/lang/Class
  #192 = Class              #191          // java/lang/Class
  #193 = Utf8               getName
  #194 = NameAndType        #193:#111     // getName:()Ljava/lang/String;
  #195 = Methodref          #192.#194     // java/lang/Class.getName:()Ljava/lang/String;
  #196 = Utf8               genericWrapArray
  #197 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #198 = NameAndType        #196:#197     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #199 = Methodref          #183.#198     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #200 = Utf8               scala/collection/immutable/Seq$
  #201 = Class              #200          // scala/collection/immutable/Seq$
  #202 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #203 = NameAndType        #161:#202     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #204 = Methodref          #201.#203     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #205 = Utf8               scala/collection/Seq
  #206 = Class              #205          // scala/collection/Seq
  #207 = InterfaceMethodref #206.#171     // scala/collection/Seq.hashCode:()I
  #208 = NameAndType        #47:#48       // hashCode:I
  #209 = Fieldref           #2.#208       // org/sireum/parser/JsonParser$IndexableToken.hashCode:I
  #210 = Utf8               java/lang/Throwable
  #211 = Class              #210          // java/lang/Throwable
  #212 = NameAndType        #165:#166     // hashCode$lzycompute:()I
  #213 = Methodref          #2.#212       // org/sireum/parser/JsonParser$IndexableToken.hashCode$lzycompute:()I
  #214 = Utf8               equals
  #215 = Utf8               (Ljava/lang/Object;)Z
  #216 = Utf8               o
  #217 = NameAndType        #214:#215     // equals:(Ljava/lang/Object;)Z
  #218 = Methodref          #5.#217       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #219 = Methodref          #2.#171       // org/sireum/parser/JsonParser$IndexableToken.hashCode:()I
  #220 = Utf8               Ljava/lang/Object;
  #221 = Utf8               (Lorg/sireum/Indexable$Pos;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
  #222 = Utf8               (Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
  #223 = Utf8               (Lorg/sireum/Indexable$Pos;Z)V
  #224 = NameAndType        #120:#223     // "<init>":(Lorg/sireum/Indexable$Pos;Z)V
  #225 = Methodref          #2.#224       // org/sireum/parser/JsonParser$IndexableToken."<init>":(Lorg/sireum/Indexable$Pos;Z)V
  #226 = Utf8               apply$default$1
  #227 = Utf8               apply$default$2
  #228 = Utf8               $content$lzycompute
  #229 = Utf8               ()Lscala/collection/immutable/Seq;
  #230 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #231 = Utf8               scala/Tuple2
  #232 = Class              #231          // scala/Tuple2
  #233 = Utf8               type
  #234 = String             #233          // type
  #235 = Utf8               List
  #236 = Utf8               ()Lscala/collection/immutable/List$;
  #237 = NameAndType        #235:#236     // List:()Lscala/collection/immutable/List$;
  #238 = Methodref          #174.#237     // scala/package$.List:()Lscala/collection/immutable/List$;
  #239 = Utf8               org
  #240 = String             #239          // org
  #241 = Utf8               sireum
  #242 = String             #241          // sireum
  #243 = Utf8               parser
  #244 = String             #243          // parser
  #245 = Utf8               [Ljava/lang/Object;
  #246 = Class              #245          // "[Ljava/lang/Object;"
  #247 = Utf8               wrapRefArray
  #248 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #249 = NameAndType        #247:#248     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #250 = Methodref          #183.#249     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #251 = Utf8               scala/collection/immutable/List$
  #252 = Class              #251          // scala/collection/immutable/List$
  #253 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #254 = NameAndType        #161:#253     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #255 = Methodref          #252.#254     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #256 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #257 = NameAndType        #120:#256     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #258 = Methodref          #232.#257     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #259 = String             #100          // input
  #260 = String             #106          // skipHidden
  #261 = Utf8               scala/collection/immutable/Seq
  #262 = Class              #261          // scala/collection/immutable/Seq
  #263 = NameAndType        #49:#50       // $content:Lscala/collection/immutable/Seq;
  #264 = Fieldref           #2.#263       // org/sireum/parser/JsonParser$IndexableToken.$content:Lscala/collection/immutable/Seq;
  #265 = NameAndType        #228:#229     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #266 = Methodref          #2.#265       // org/sireum/parser/JsonParser$IndexableToken.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #267 = Utf8               ()Lorg/sireum/parser/JsonLexer;
  #268 = NameAndType        #62:#63       // lexer:Lorg/sireum/parser/JsonLexer;
  #269 = Fieldref           #2.#268       // org/sireum/parser/JsonParser$IndexableToken.lexer:Lorg/sireum/parser/JsonLexer;
  #270 = Utf8               at
  #271 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #272 = Utf8               i
  #273 = Utf8               ()Lscala/Function1;
  #274 = NameAndType        #55:#273      // _at:()Lscala/Function1;
  #275 = Methodref          #2.#274       // org/sireum/parser/JsonParser$IndexableToken._at:()Lscala/Function1;
  #276 = Utf8               scala/Function1
  #277 = Class              #276          // scala/Function1
  #278 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #279 = NameAndType        #161:#278     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #280 = InterfaceMethodref #277.#279     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #281 = Utf8               Lorg/sireum/Z;
  #282 = Utf8               has
  #283 = Utf8               (Lorg/sireum/Z;)Z
  #284 = NameAndType        #52:#273      // _has:()Lscala/Function1;
  #285 = Methodref          #2.#284       // org/sireum/parser/JsonParser$IndexableToken._has:()Lscala/Function1;
  #286 = Utf8               value
  #287 = NameAndType        #286:#83      // value:()Z
  #288 = Methodref          #147.#287     // org/sireum/B.value:()Z
  #289 = Utf8               _has$lzycompute
  #290 = Utf8               ()Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/B;>;
  #291 = Utf8               org/sireum/$internal/CollectionCompat$
  #292 = Class              #291          // org/sireum/$internal/CollectionCompat$
  #293 = Utf8               Lorg/sireum/$internal/CollectionCompat$;
  #294 = NameAndType        #134:#293     // MODULE$:Lorg/sireum/$internal/CollectionCompat$;
  #295 = Fieldref           #292.#294     // org/sireum/$internal/CollectionCompat$.MODULE$:Lorg/sireum/$internal/CollectionCompat$;
  #296 = Utf8               Converters
  #297 = Utf8               ()Lscala/jdk/CollectionConverters$;
  #298 = NameAndType        #296:#297     // Converters:()Lscala/jdk/CollectionConverters$;
  #299 = Methodref          #292.#298     // org/sireum/$internal/CollectionCompat$.Converters:()Lscala/jdk/CollectionConverters$;
  #300 = Utf8               java/util/concurrent/ConcurrentHashMap
  #301 = Class              #300          // java/util/concurrent/ConcurrentHashMap
  #302 = Methodref          #301.#122     // java/util/concurrent/ConcurrentHashMap."<init>":()V
  #303 = Utf8               scala/jdk/CollectionConverters$
  #304 = Class              #303          // scala/jdk/CollectionConverters$
  #305 = Utf8               (Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala;
  #306 = NameAndType        #46:#305      // ConcurrentMapHasAsScala:(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala;
  #307 = Methodref          #304.#306     // scala/jdk/CollectionConverters$.ConcurrentMapHasAsScala:(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala;
  #308 = Utf8               asScala
  #309 = Utf8               ()Lscala/collection/concurrent/Map;
  #310 = NameAndType        #308:#309     // asScala:()Lscala/collection/concurrent/Map;
  #311 = Methodref          #43.#310      // scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.asScala:()Lscala/collection/concurrent/Map;
  #312 = MethodType         #278          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #313 = Utf8               $anonfun$_has$1$adapted
  #314 = Utf8               (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
  #315 = NameAndType        #313:#314     // $anonfun$_has$1$adapted:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
  #316 = Methodref          #2.#315       // org/sireum/parser/JsonParser$IndexableToken.$anonfun$_has$1$adapted:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
  #317 = MethodHandle       6:#316        // REF_invokeStatic org/sireum/parser/JsonParser$IndexableToken.$anonfun$_has$1$adapted:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
  #318 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #319 = MethodType         #318          //  (Lorg/sireum/Z;)Ljava/lang/Object;
  #320 = Integer            5
  #321 = Integer            1
  #322 = Utf8               java/lang/invoke/LambdaMetafactory
  #323 = Class              #322          // java/lang/invoke/LambdaMetafactory
  #324 = Utf8               altMetafactory
  #325 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #326 = NameAndType        #324:#325     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #327 = Methodref          #323.#326     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #328 = MethodHandle       6:#327        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #329 = Utf8               (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;)Lscala/Function1;
  #330 = NameAndType        #161:#329     // apply:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;)Lscala/Function1;
  #331 = InvokeDynamic      #0:#330       // #0:apply:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;)Lscala/Function1;
  #332 = NameAndType        #52:#53       // _has:Lscala/Function1;
  #333 = Fieldref           #2.#332       // org/sireum/parser/JsonParser$IndexableToken._has:Lscala/Function1;
  #334 = Utf8               cache
  #335 = Utf8               Lscala/collection/mutable/Map;
  #336 = NameAndType        #289:#273     // _has$lzycompute:()Lscala/Function1;
  #337 = Methodref          #2.#336       // org/sireum/parser/JsonParser$IndexableToken._has$lzycompute:()Lscala/Function1;
  #338 = Utf8               _at$lzycompute
  #339 = Utf8               ()Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;
  #340 = Utf8               $anonfun$_at$1
  #341 = Utf8               (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #342 = NameAndType        #340:#341     // $anonfun$_at$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #343 = Methodref          #2.#342       // org/sireum/parser/JsonParser$IndexableToken.$anonfun$_at$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #344 = MethodHandle       6:#343        // REF_invokeStatic org/sireum/parser/JsonParser$IndexableToken.$anonfun$_at$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #345 = MethodType         #271          //  (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #346 = InvokeDynamic      #1:#330       // #1:apply:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;)Lscala/Function1;
  #347 = NameAndType        #55:#53       // _at:Lscala/Function1;
  #348 = Fieldref           #2.#347       // org/sireum/parser/JsonParser$IndexableToken._at:Lscala/Function1;
  #349 = NameAndType        #338:#273     // _at$lzycompute:()Lscala/Function1;
  #350 = Methodref          #2.#349       // org/sireum/parser/JsonParser$IndexableToken._at$lzycompute:()Lscala/Function1;
  #351 = Utf8               ()Ljava/lang/Object;
  #352 = NameAndType        #92:#93       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #353 = Methodref          #2.#352       // org/sireum/parser/JsonParser$IndexableToken.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #354 = NameAndType        #270:#271     // at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #355 = Methodref          #2.#354       // org/sireum/parser/JsonParser$IndexableToken.at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #356 = Utf8               _internal$1
  #357 = Utf8               i$1
  #358 = Utf8               scala/Predef$
  #359 = Class              #358          // scala/Predef$
  #360 = Utf8               Lscala/Predef$;
  #361 = NameAndType        #134:#360     // MODULE$:Lscala/Predef$;
  #362 = Fieldref           #359.#361     // scala/Predef$.MODULE$:Lscala/Predef$;
  #363 = Utf8               org/sireum/B$
  #364 = Class              #363          // org/sireum/B$
  #365 = Utf8               Lorg/sireum/B$;
  #366 = NameAndType        #134:#365     // MODULE$:Lorg/sireum/B$;
  #367 = Fieldref           #364.#366     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #368 = Utf8               org/sireum/Z$
  #369 = Class              #368          // org/sireum/Z$
  #370 = Utf8               Lorg/sireum/Z$;
  #371 = NameAndType        #134:#370     // MODULE$:Lorg/sireum/Z$;
  #372 = Fieldref           #369.#371     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #373 = Utf8               (I)Lorg/sireum/Z;
  #374 = NameAndType        #161:#373     // apply:(I)Lorg/sireum/Z;
  #375 = Methodref          #369.#374     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #376 = Utf8               org/sireum/Z
  #377 = Class              #376          // org/sireum/Z
  #378 = Utf8               $greater$eq
  #379 = NameAndType        #378:#283     // $greater$eq:(Lorg/sireum/Z;)Z
  #380 = InterfaceMethodref #377.#379     // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
  #381 = Utf8               $4B
  #382 = Utf8               (Z)Z
  #383 = NameAndType        #381:#382     // $4B:(Z)Z
  #384 = Methodref          #364.#383     // org/sireum/B$.$4B:(Z)Z
  #385 = Utf8               assert
  #386 = NameAndType        #385:#150     // assert:(Z)V
  #387 = Methodref          #359.#386     // scala/Predef$.assert:(Z)V
  #388 = Utf8               org/sireum/package$
  #389 = Class              #388          // org/sireum/package$
  #390 = Utf8               Lorg/sireum/package$;
  #391 = NameAndType        #134:#390     // MODULE$:Lorg/sireum/package$;
  #392 = Fieldref           #389.#391     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #393 = Utf8               T
  #394 = NameAndType        #393:#83      // T:()Z
  #395 = Methodref          #389.#394     // org/sireum/package$.T:()Z
  #396 = Utf8               $minus
  #397 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #398 = NameAndType        #396:#397     // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #399 = InterfaceMethodref #377.#398     // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #400 = Utf8               unary_$bang$extension
  #401 = NameAndType        #400:#382     // unary_$bang$extension:(Z)Z
  #402 = Methodref          #364.#401     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #403 = Utf8               F
  #404 = NameAndType        #403:#83      // F:()Z
  #405 = Methodref          #389.#404     // org/sireum/package$.F:()Z
  #406 = Utf8               kind
  #407 = Utf8               ()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
  #408 = NameAndType        #406:#407     // kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
  #409 = Methodref          #23.#408      // org/sireum/parser/JsonParser$Result.kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
  #410 = Utf8               Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
  #411 = NameAndType        #134:#410     // MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
  #412 = Fieldref           #32.#411      // org/sireum/parser/JsonParser$Result$Kind$Normal$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
  #413 = Utf8               newIndex
  #414 = NameAndType        #413:#67      // newIndex:()Lorg/sireum/Z;
  #415 = Methodref          #23.#414      // org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
  #416 = NameAndType        #161:#382     // apply:(Z)Z
  #417 = Methodref          #364.#416     // org/sireum/B$.apply:(Z)Z
  #418 = Utf8               prev
  #419 = Utf8               Lorg/sireum/parser/JsonParser$Result;
  #420 = Utf8               __has$1
  #421 = Utf8               (Lorg/sireum/Z;Lscala/collection/mutable/Map;)Z
  #422 = Utf8               cache$1
  #423 = Utf8               scala/collection/mutable/Map
  #424 = Class              #423          // scala/collection/mutable/Map
  #425 = Utf8               get
  #426 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #427 = NameAndType        #425:#426     // get:(Ljava/lang/Object;)Lscala/Option;
  #428 = InterfaceMethodref #424.#427     // scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #429 = Utf8               scala/Some
  #430 = Class              #429          // scala/Some
  #431 = NameAndType        #286:#351     // value:()Ljava/lang/Object;
  #432 = Methodref          #430.#431     // scala/Some.value:()Ljava/lang/Object;
  #433 = Utf8               scala/runtime/BoxedUnit
  #434 = Class              #433          // scala/runtime/BoxedUnit
  #435 = Utf8               UNIT
  #436 = Utf8               Lscala/runtime/BoxedUnit;
  #437 = NameAndType        #435:#436     // UNIT:Lscala/runtime/BoxedUnit;
  #438 = Fieldref           #434.#437     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #439 = Utf8               clear
  #440 = NameAndType        #439:#121     // clear:()V
  #441 = InterfaceMethodref #424.#440     // scala/collection/mutable/Map.clear:()V
  #442 = NameAndType        #356:#283     // _internal$1:(Lorg/sireum/Z;)Z
  #443 = Methodref          #2.#442       // org/sireum/parser/JsonParser$IndexableToken._internal$1:(Lorg/sireum/Z;)Z
  #444 = Utf8               update
  #445 = NameAndType        #444:#256     // update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #446 = InterfaceMethodref #424.#445     // scala/collection/mutable/Map.update:(Ljava/lang/Object;Ljava/lang/Object;)V
  #447 = Utf8               r
  #448 = Utf8               refresh
  #449 = Utf8               arg
  #450 = Utf8               scala/Option
  #451 = Class              #450          // scala/Option
  #452 = Utf8               $anonfun$_has$1
  #453 = Utf8               (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Z
  #454 = Utf8               $this
  #455 = NameAndType        #420:#421     // __has$1:(Lorg/sireum/Z;Lscala/collection/mutable/Map;)Z
  #456 = Methodref          #2.#455       // org/sireum/parser/JsonParser$IndexableToken.__has$1:(Lorg/sireum/Z;Lscala/collection/mutable/Map;)Z
  #457 = Utf8               _internal$2
  #458 = Utf8               i$2
  #459 = NameAndType        #282:#283     // has:(Lorg/sireum/Z;)Z
  #460 = InterfaceMethodref #17.#459      // org/sireum/Indexable$Pos.has:(Lorg/sireum/Z;)Z
  #461 = NameAndType        #62:#267      // lexer:()Lorg/sireum/parser/JsonLexer;
  #462 = Methodref          #2.#461       // org/sireum/parser/JsonParser$IndexableToken.lexer:()Lorg/sireum/parser/JsonLexer;
  #463 = Utf8               org/sireum/parser/JsonLexer
  #464 = Class              #463          // org/sireum/parser/JsonLexer
  #465 = Utf8               tokenize
  #466 = Utf8               (Lorg/sireum/Z;Z)Lorg/sireum/Option;
  #467 = NameAndType        #465:#466     // tokenize:(Lorg/sireum/Z;Z)Lorg/sireum/Option;
  #468 = Methodref          #464.#467     // org/sireum/parser/JsonLexer.tokenize:(Lorg/sireum/Z;Z)Lorg/sireum/Option;
  #469 = Utf8               org/sireum/Some
  #470 = Class              #469          // org/sireum/Some
  #471 = Utf8               org/sireum/Some$
  #472 = Class              #471          // org/sireum/Some$
  #473 = Utf8               Lorg/sireum/Some$;
  #474 = NameAndType        #134:#473     // MODULE$:Lorg/sireum/Some$;
  #475 = Fieldref           #472.#474     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #476 = Utf8               unapply
  #477 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #478 = NameAndType        #476:#477     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #479 = Methodref          #472.#478     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #480 = Utf8               isEmpty
  #481 = NameAndType        #480:#83      // isEmpty:()Z
  #482 = Methodref          #430.#481     // scala/Some.isEmpty:()Z
  #483 = NameAndType        #425:#351     // get:()Ljava/lang/Object;
  #484 = Methodref          #430.#483     // scala/Some.get:()Ljava/lang/Object;
  #485 = Utf8               Lorg/sireum/parser/JsonParser$Result$;
  #486 = NameAndType        #134:#485     // MODULE$:Lorg/sireum/parser/JsonParser$Result$;
  #487 = Fieldref           #26.#486      // org/sireum/parser/JsonParser$Result$.MODULE$:Lorg/sireum/parser/JsonParser$Result$;
  #488 = Utf8               org/sireum/parser/JsonParser$
  #489 = Class              #488          // org/sireum/parser/JsonParser$
  #490 = Utf8               Lorg/sireum/parser/JsonParser$;
  #491 = NameAndType        #134:#490     // MODULE$:Lorg/sireum/parser/JsonParser$;
  #492 = Fieldref           #489.#491     // org/sireum/parser/JsonParser$.MODULE$:Lorg/sireum/parser/JsonParser$;
  #493 = Utf8               eofLeaf
  #494 = Utf8               ()Lorg/sireum/parser/ParseTree$Leaf;
  #495 = NameAndType        #493:#494     // eofLeaf:()Lorg/sireum/parser/ParseTree$Leaf;
  #496 = Methodref          #489.#495     // org/sireum/parser/JsonParser$.eofLeaf:()Lorg/sireum/parser/ParseTree$Leaf;
  #497 = Utf8               (Lorg/sireum/parser/JsonParser$Result$Kind$Type;Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #498 = NameAndType        #161:#497     // apply:(Lorg/sireum/parser/JsonParser$Result$Kind$Type;Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #499 = Methodref          #26.#498      // org/sireum/parser/JsonParser$Result$.apply:(Lorg/sireum/parser/JsonParser$Result$Kind$Type;Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #500 = Utf8               result
  #501 = Utf8               org/sireum/Option
  #502 = Class              #501          // org/sireum/Option
  #503 = Utf8               __at$1
  #504 = Utf8               (Lorg/sireum/Z;Lscala/collection/mutable/Map;)Lorg/sireum/parser/JsonParser$Result;
  #505 = Utf8               cache$2
  #506 = NameAndType        #457:#271     // _internal$2:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #507 = Methodref          #2.#506       // org/sireum/parser/JsonParser$IndexableToken._internal$2:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  #508 = NameAndType        #503:#504     // __at$1:(Lorg/sireum/Z;Lscala/collection/mutable/Map;)Lorg/sireum/parser/JsonParser$Result;
  #509 = Methodref          #2.#508       // org/sireum/parser/JsonParser$IndexableToken.__at$1:(Lorg/sireum/Z;Lscala/collection/mutable/Map;)Lorg/sireum/parser/JsonParser$Result;
  #510 = Utf8               (Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;Z)V
  #511 = Utf8               __input
  #512 = Utf8               __skipHidden
  #513 = Methodref          #5.#122       // java/lang/Object."<init>":()V
  #514 = Utf8               $init$
  #515 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #516 = NameAndType        #514:#515     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #517 = InterfaceMethodref #95.#516      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #518 = Utf8               (Lorg/sireum/Immutable;)V
  #519 = NameAndType        #514:#518     // $init$:(Lorg/sireum/Immutable;)V
  #520 = InterfaceMethodref #77.#519      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #521 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #522 = NameAndType        #514:#521     // $init$:(Lorg/sireum/DatatypeSig;)V
  #523 = InterfaceMethodref #9.#522       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #524 = Utf8               org/sireum/parser/JsonLexer$
  #525 = Class              #524          // org/sireum/parser/JsonLexer$
  #526 = Utf8               Lorg/sireum/parser/JsonLexer$;
  #527 = NameAndType        #134:#526     // MODULE$:Lorg/sireum/parser/JsonLexer$;
  #528 = Fieldref           #525.#527     // org/sireum/parser/JsonLexer$.MODULE$:Lorg/sireum/parser/JsonLexer$;
  #529 = Utf8               (Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
  #530 = NameAndType        #161:#529     // apply:(Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
  #531 = Methodref          #525.#530     // org/sireum/parser/JsonLexer$.apply:(Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
  #532 = NameAndType        #452:#453     // $anonfun$_has$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Z
  #533 = Methodref          #2.#532       // org/sireum/parser/JsonParser$IndexableToken.$anonfun$_has$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Z
  #534 = Utf8               $deserializeLambda$
  #535 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #536 = Utf8               scala/runtime/LambdaDeserialize
  #537 = Class              #536          // scala/runtime/LambdaDeserialize
  #538 = Utf8               bootstrap
  #539 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #540 = NameAndType        #538:#539     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #541 = Methodref          #537.#540     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #542 = MethodHandle       6:#541        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #543 = Utf8               lambdaDeserialize
  #544 = NameAndType        #543:#535     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #545 = InvokeDynamic      #2:#544       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #546 = Utf8               Signature
  #547 = Utf8               Code
  #548 = Utf8               LineNumberTable
  #549 = Utf8               LocalVariableTable
  #550 = Utf8               StackMapTable
  #551 = Utf8               MethodParameters
  #552 = Utf8               InnerClasses
  #553 = Utf8               SourceFile
  #554 = Utf8               BootstrapMethods
  #555 = Utf8               ScalaInlineInfo
  #556 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #51                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private scala.Function1<org.sireum.Z, org.sireum.B> _has;
    descriptor: Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Signature: #54                          // Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/B;>;

  private scala.Function1<org.sireum.Z, org.sireum.parser.JsonParser$Result> _at;
    descriptor: Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Signature: #56                          // Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;

  private final org.sireum.Indexable$Pos<org.sireum.C> _input;
    descriptor: Lorg/sireum/Indexable$Pos;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #59                          // Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;

  private final boolean _skipHidden;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.parser.JsonLexer lexer;
    descriptor: Lorg/sireum/parser/JsonLexer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #81                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #99                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public org.sireum.Indexable$Pos<org.sireum.C> input();
    descriptor: ()Lorg/sireum/Indexable$Pos;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _input:Lorg/sireum/Indexable$Pos;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #102                         // ()Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;

  public org.sireum.Indexable$Pos<org.sireum.C> getInput();
    descriptor: ()Lorg/sireum/Indexable$Pos;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field _input:Lorg/sireum/Indexable$Pos;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #102                         // ()Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;

  public boolean skipHidden();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _skipHidden:Z
         4: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public boolean getSkipHidden();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #108                // Field _skipHidden:Z
         4: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #113                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #117                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          91
        14: new           #119                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #124                // String IndexableToken
        25: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #131                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #137                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        44: invokevirtual #143                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #145                // String ,
        54: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #137                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: new           #147                // class org/sireum/B
        65: dup
        66: aload_0
        67: invokevirtual #149                // Method skipHidden:()Z
        70: invokespecial #152                // Method org/sireum/B."<init>":(Z)V
        73: invokevirtual #143                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        76: invokevirtual #128                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: bipush        41
        83: invokevirtual #131                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: invokevirtual #154                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        91: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 76
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      69     1    sb   Ljava/lang/StringBuilder;
            0      92     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #113                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #117                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #137                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #160                // Method toString:()Ljava/lang/String;
        21: invokevirtual #164                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #168                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     102
        15: aload_0
        16: aload_0
        17: invokevirtual #170                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #172                // Method java/lang/Object.hashCode:()I
        27: goto          88
        30: getstatic     #177                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #181                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #186                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_3
        40: anewarray     #5                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #190                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #195                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        59: aastore
        60: dup
        61: iconst_2
        62: new           #147                // class org/sireum/B
        65: dup
        66: aload_0
        67: invokevirtual #149                // Method skipHidden:()Z
        70: invokespecial #152                // Method org/sireum/B."<init>":(Z)V
        73: aastore
        74: invokevirtual #199                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        77: invokevirtual #204                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        80: checkcast     #206                // class scala/collection/Seq
        83: invokeinterface #207,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        88: putfield      #209                // Field hashCode:I
        91: aload_0
        92: aload_0
        93: getfield      #168                // Field bitmap$0:B
        96: iconst_1
        97: ior
        98: i2b
        99: putfield      #168                // Field bitmap$0:B
       102: aload_1
       103: monitorexit
       104: goto          110
       107: aload_1
       108: monitorexit
       109: athrow
       110: aload_0
       111: getfield      #209                // Field hashCode:I
       114: ireturn
      Exception table:
         from    to  target type
             4   102   107   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/parser/JsonParser$IndexableToken ]
          stack = [ class org/sireum/parser/JsonParser$IndexableToken ]
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/parser/JsonParser$IndexableToken ]
          stack = [ class org/sireum/parser/JsonParser$IndexableToken, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     115     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #168                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #213                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #209                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #170                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #218                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          117
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          117
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/parser/JsonParser$IndexableToken
        30: ifeq          108
        33: aload_3
        34: checkcast     #2                  // class org/sireum/parser/JsonParser$IndexableToken
        37: astore        4
        39: aload_0
        40: invokevirtual #219                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #219                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          104
        55: aload_0
        56: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        59: aload         4
        61: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          103
        79: aload         5
        81: invokevirtual #218                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          103
        87: aload_0
        88: invokevirtual #149                // Method skipHidden:()Z
        91: aload         4
        93: invokevirtual #149                // Method skipHidden:()Z
        96: if_icmpne     103
        99: iconst_1
       100: goto          104
       103: iconst_0
       104: istore_2
       105: goto          116
       108: goto          111
       111: iconst_0
       112: istore_2
       113: goto          116
       116: iload_2
       117: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/parser/JsonParser$IndexableToken ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Indexable$Pos ]
          stack = [ class org/sireum/Indexable$Pos ]
        frame_type = 7 /* same */
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/JsonParser$IndexableToken ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     118     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0     118     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.parser.JsonParser$IndexableToken apply(org.sireum.Indexable$Pos<org.sireum.C>, boolean);
    descriptor: (Lorg/sireum/Indexable$Pos;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/sireum/parser/JsonParser$IndexableToken
         3: dup
         4: aload_1
         5: iload_2
         6: invokespecial #225                // Method "<init>":(Lorg/sireum/Indexable$Pos;Z)V
         9: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      10     1 input   Lorg/sireum/Indexable$Pos;
            0      10     2 skipHidden   Z
    Signature: #222                         // (Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;Z)Lorg/sireum/parser/JsonParser$IndexableToken;
    MethodParameters:
      Name                           Flags
      input                          final
      skipHidden                     final

  public org.sireum.Indexable$Pos<org.sireum.C> apply$default$1();
    descriptor: ()Lorg/sireum/Indexable$Pos;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #102                         // ()Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;

  public boolean apply$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #149                // Method skipHidden:()Z
         4: ireturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #168                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     150
        15: aload_0
        16: getstatic     #177                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #181                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #186                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_3
        26: anewarray     #232                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #232                // class scala/Tuple2
        34: dup
        35: ldc           #234                // String type
        37: getstatic     #177                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #238                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #186                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #158                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #240                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #242                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #244                // String parser
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #124                // String IndexableToken
        69: aastore
        70: checkcast     #246                // class "[Ljava/lang/Object;"
        73: invokevirtual #250                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #255                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #258                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #232                // class scala/Tuple2
        88: dup
        89: ldc_w         #259                // String input
        92: aload_0
        93: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        96: invokespecial #258                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        99: aastore
       100: dup
       101: iconst_2
       102: new           #232                // class scala/Tuple2
       105: dup
       106: ldc_w         #260                // String skipHidden
       109: new           #147                // class org/sireum/B
       112: dup
       113: aload_0
       114: invokevirtual #149                // Method skipHidden:()Z
       117: invokespecial #152                // Method org/sireum/B."<init>":(Z)V
       120: invokespecial #258                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       123: aastore
       124: checkcast     #246                // class "[Ljava/lang/Object;"
       127: invokevirtual #250                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       130: invokevirtual #204                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       133: checkcast     #262                // class scala/collection/immutable/Seq
       136: putfield      #264                // Field $content:Lscala/collection/immutable/Seq;
       139: aload_0
       140: aload_0
       141: getfield      #168                // Field bitmap$0:B
       144: iconst_2
       145: ior
       146: i2b
       147: putfield      #168                // Field bitmap$0:B
       150: aload_1
       151: monitorexit
       152: goto          158
       155: aload_1
       156: monitorexit
       157: athrow
       158: aload_0
       159: getfield      #264                // Field $content:Lscala/collection/immutable/Seq;
       162: areturn
      Exception table:
         from    to  target type
             4   150   155   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 150
          locals = [ class org/sireum/parser/JsonParser$IndexableToken ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     163     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #230                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #168                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #266                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #264                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #230                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.parser.JsonLexer lexer();
    descriptor: ()Lorg/sireum/parser/JsonLexer;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #269                // Field lexer:Lorg/sireum/parser/JsonLexer;
         4: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public org.sireum.parser.JsonParser$Result at(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #275                // Method _at:()Lscala/Function1;
         4: aload_1
         5: invokeinterface #280,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #23                 // class org/sireum/parser/JsonParser$Result
        13: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      14     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      i                              final

  public boolean has(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #285                // Method _has:()Lscala/Function1;
         4: aload_1
         5: invokeinterface #280,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #147                // class org/sireum/B
        13: invokevirtual #288                // Method org/sireum/B.value:()Z
        16: ireturn
      LineNumberTable:
        line 155: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      17     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      i                              final

  private scala.Function1<org.sireum.Z, org.sireum.B> _has$lzycompute();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #168                // Field bitmap$0:B
         8: iconst_4
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     57
        15: aload_0
        16: getstatic     #295                // Field org/sireum/$internal/CollectionCompat$.MODULE$:Lorg/sireum/$internal/CollectionCompat$;
        19: invokevirtual #299                // Method org/sireum/$internal/CollectionCompat$.Converters:()Lscala/jdk/CollectionConverters$;
        22: new           #301                // class java/util/concurrent/ConcurrentHashMap
        25: dup
        26: invokespecial #302                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        29: invokevirtual #307                // Method scala/jdk/CollectionConverters$.ConcurrentMapHasAsScala:(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala;
        32: invokevirtual #311                // Method scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.asScala:()Lscala/collection/concurrent/Map;
        35: astore_2
        36: aload_0
        37: aload_2
        38: invokedynamic #331,  0            // InvokeDynamic #0:apply:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;)Lscala/Function1;
        43: putfield      #333                // Field _has:Lscala/Function1;
        46: aload_0
        47: aload_0
        48: getfield      #168                // Field bitmap$0:B
        51: iconst_4
        52: ior
        53: i2b
        54: putfield      #168                // Field bitmap$0:B
        57: aload_1
        58: monitorexit
        59: goto          65
        62: aload_1
        63: monitorexit
        64: athrow
        65: aload_0
        66: getfield      #333                // Field _has:Lscala/Function1;
        69: areturn
      Exception table:
         from    to  target type
             4    57    62   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 57
          locals = [ class org/sireum/parser/JsonParser$IndexableToken ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           36       7     2 cache   Lscala/collection/mutable/Map;
            0      70     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #290                         // ()Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/B;>;

  public scala.Function1<org.sireum.Z, org.sireum.B> _has();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #168                // Field bitmap$0:B
         4: iconst_4
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #337                // Method _has$lzycompute:()Lscala/Function1;
        15: goto          22
        18: aload_0
        19: getfield      #333                // Field _has:Lscala/Function1;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Function1 ]
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #290                         // ()Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/B;>;

  private scala.Function1<org.sireum.Z, org.sireum.parser.JsonParser$Result> _at$lzycompute();
    descriptor: ()Lscala/Function1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #168                // Field bitmap$0:B
         8: bipush        8
        10: iand
        11: i2b
        12: iconst_0
        13: if_icmpne     59
        16: aload_0
        17: getstatic     #295                // Field org/sireum/$internal/CollectionCompat$.MODULE$:Lorg/sireum/$internal/CollectionCompat$;
        20: invokevirtual #299                // Method org/sireum/$internal/CollectionCompat$.Converters:()Lscala/jdk/CollectionConverters$;
        23: new           #301                // class java/util/concurrent/ConcurrentHashMap
        26: dup
        27: invokespecial #302                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        30: invokevirtual #307                // Method scala/jdk/CollectionConverters$.ConcurrentMapHasAsScala:(Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala;
        33: invokevirtual #311                // Method scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala.asScala:()Lscala/collection/concurrent/Map;
        36: astore_2
        37: aload_0
        38: aload_2
        39: invokedynamic #346,  0            // InvokeDynamic #1:apply:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;)Lscala/Function1;
        44: putfield      #348                // Field _at:Lscala/Function1;
        47: aload_0
        48: aload_0
        49: getfield      #168                // Field bitmap$0:B
        52: bipush        8
        54: ior
        55: i2b
        56: putfield      #168                // Field bitmap$0:B
        59: aload_1
        60: monitorexit
        61: goto          67
        64: aload_1
        65: monitorexit
        66: athrow
        67: aload_0
        68: getfield      #348                // Field _at:Lscala/Function1;
        71: areturn
      Exception table:
         from    to  target type
             4    59    64   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 59
          locals = [ class org/sireum/parser/JsonParser$IndexableToken ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37       7     2 cache   Lscala/collection/mutable/Map;
            0      72     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #339                         // ()Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;

  public scala.Function1<org.sireum.Z, org.sireum.parser.JsonParser$Result> _at();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #168                // Field bitmap$0:B
         4: bipush        8
         6: iand
         7: i2b
         8: iconst_0
         9: if_icmpne     19
        12: aload_0
        13: invokespecial #350                // Method _at$lzycompute:()Lscala/Function1;
        16: goto          23
        19: aload_0
        20: getfield      #348                // Field _at:Lscala/Function1;
        23: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Function1 ]
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
    Signature: #339                         // ()Lscala/Function1<Lorg/sireum/Z;Lorg/sireum/parser/JsonParser$Result;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #353                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;

  public java.lang.Object at(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #355                // Method at:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
         5: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0       6     1     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      i                              final

  private final boolean _internal$1(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=6, locals=6, args_size=2
         0: getstatic     #362                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #367                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: aload_1
         7: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        10: iconst_0
        11: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        14: invokeinterface #380,  2          // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
        19: invokevirtual #384                // Method org/sireum/B$.$4B:(Z)Z
        22: invokevirtual #387                // Method scala/Predef$.assert:(Z)V
        25: aload_1
        26: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        29: iconst_0
        30: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        33: astore_2
        34: dup
        35: ifnonnull     46
        38: pop
        39: aload_2
        40: ifnull        53
        43: goto          60
        46: aload_2
        47: invokevirtual #218                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        50: ifeq          60
        53: getstatic     #392                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        56: invokevirtual #395                // Method org/sireum/package$.T:()Z
        59: ireturn
        60: getstatic     #367                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        63: getstatic     #367                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        66: aload_0
        67: invokevirtual #285                // Method _has:()Lscala/Function1;
        70: aload_1
        71: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        74: iconst_1
        75: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        78: invokeinterface #399,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        83: invokeinterface #280,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        88: checkcast     #147                // class org/sireum/B
        91: invokevirtual #288                // Method org/sireum/B.value:()Z
        94: invokevirtual #402                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        97: invokevirtual #384                // Method org/sireum/B$.$4B:(Z)Z
       100: ifeq          110
       103: getstatic     #392                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       106: invokevirtual #405                // Method org/sireum/package$.F:()Z
       109: ireturn
       110: aload_0
       111: invokevirtual #275                // Method _at:()Lscala/Function1;
       114: aload_1
       115: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       118: iconst_1
       119: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       122: invokeinterface #399,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       127: invokeinterface #280,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       132: checkcast     #23                 // class org/sireum/parser/JsonParser$Result
       135: astore_3
       136: getstatic     #367                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       139: aload_3
       140: invokevirtual #409                // Method org/sireum/parser/JsonParser$Result.kind:()Lorg/sireum/parser/JsonParser$Result$Kind$Type;
       143: getstatic     #412                // Field org/sireum/parser/JsonParser$Result$Kind$Normal$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
       146: astore        4
       148: dup
       149: ifnonnull     161
       152: pop
       153: aload         4
       155: ifnull        169
       158: goto          207
       161: aload         4
       163: invokevirtual #218                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       166: ifeq          207
       169: aload_3
       170: invokevirtual #415                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       173: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       176: iconst_m1
       177: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       180: astore        5
       182: dup
       183: ifnonnull     195
       186: pop
       187: aload         5
       189: ifnull        207
       192: goto          203
       195: aload         5
       197: invokevirtual #218                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       200: ifne          207
       203: iconst_1
       204: goto          208
       207: iconst_0
       208: invokevirtual #417                // Method org/sireum/B$.apply:(Z)Z
       211: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 49 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 50
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class org/sireum/Z, class org/sireum/parser/JsonParser$Result, class org/sireum/parser/JsonParser$Result$Kind$Normal$ ]
          stack = [ class org/sireum/B$, class org/sireum/parser/JsonParser$Result$Kind$Type ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class org/sireum/Z, class org/sireum/parser/JsonParser$Result, class org/sireum/parser/JsonParser$Result$Kind$Normal$, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class org/sireum/Z, class org/sireum/parser/JsonParser$Result, class org/sireum/parser/JsonParser$Result$Kind$Normal$ ]
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class org/sireum/Z, class org/sireum/parser/JsonParser$Result, class org/sireum/parser/JsonParser$Result$Kind$Normal$ ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 159: 0
        line 160: 25
        line 161: 53
        line 163: 60
        line 164: 103
        line 166: 110
        line 167: 136
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          136      76     3  prev   Lorg/sireum/parser/JsonParser$Result;
            0     212     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0     212     1   i$1   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      i$1                            final

  private final boolean __has$1(org.sireum.Z, scala.collection.mutable.Map);
    descriptor: (Lorg/sireum/Z;Lscala/collection/mutable/Map;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=10, args_size=3
         0: iconst_0
         1: istore        4
         3: aload_1
         4: astore        5
         6: iload         4
         8: ifne          65
        11: aload_2
        12: aload         5
        14: invokeinterface #428,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        19: astore        6
        21: aload         6
        23: instanceof    #430                // class scala/Some
        26: ifeq          52
        29: aload         6
        31: checkcast     #430                // class scala/Some
        34: astore        7
        36: aload         7
        38: invokevirtual #432                // Method scala/Some.value:()Ljava/lang/Object;
        41: checkcast     #147                // class org/sireum/B
        44: invokevirtual #288                // Method org/sireum/B.value:()Z
        47: istore        8
        49: iload         8
        51: ireturn
        52: goto          55
        55: getstatic     #438                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        58: astore_3
        59: goto          62
        62: goto          71
        65: aload_2
        66: invokeinterface #441,  1          // InterfaceMethod scala/collection/mutable/Map.clear:()V
        71: aload_0
        72: aload_1
        73: invokespecial #443                // Method _internal$1:(Lorg/sireum/Z;)Z
        76: istore        9
        78: aload_2
        79: aload         5
        81: new           #147                // class org/sireum/B
        84: dup
        85: iload         9
        87: invokespecial #152                // Method org/sireum/B."<init>":(Z)V
        90: invokeinterface #446,  3          // InterfaceMethod scala/collection/mutable/Map.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        95: iload         9
        97: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 52
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/collection/mutable/Map, top, int, class org/sireum/Z, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/collection/mutable/Map, class scala/runtime/BoxedUnit, int, class org/sireum/Z, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/collection/mutable/Map, top, int, class org/sireum/Z ]
          stack = []
        frame_type = 5 /* same */
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           49       3     8     r   Z
            3      94     4 refresh   Z
            6      91     5   arg   Lorg/sireum/Z;
           78      19     9     r   Z
            0      98     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      98     1     i   Lorg/sireum/Z;
            0      98     2 cache$1   Lscala/collection/mutable/Map;
    MethodParameters:
      Name                           Flags
      i                              final
      cache$1                        final

  public static final boolean $anonfun$_has$1(org.sireum.parser.JsonParser$IndexableToken, scala.collection.mutable.Map, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #456                // Method __has$1:(Lorg/sireum/Z;Lscala/collection/mutable/Map;)Z
         6: ireturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0       7     1 cache$1   Lscala/collection/mutable/Map;
            0       7     2     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      cache$1                        final
      i                              final

  private final org.sireum.parser.JsonParser$Result _internal$2(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=14, args_size=2
         0: aload_1
         1: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         4: iconst_0
         5: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         8: astore        4
        10: dup
        11: ifnonnull     23
        14: pop
        15: aload         4
        17: ifnull        31
        20: goto          141
        23: aload         4
        25: invokevirtual #218                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        28: ifeq          141
        31: getstatic     #367                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        34: aload_0
        35: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        38: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        41: iconst_0
        42: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        45: invokeinterface #460,  2          // InterfaceMethod org/sireum/Indexable$Pos.has:(Lorg/sireum/Z;)Z
        50: invokevirtual #384                // Method org/sireum/B$.$4B:(Z)Z
        53: ifeq          138
        56: aload_0
        57: invokevirtual #462                // Method lexer:()Lorg/sireum/parser/JsonLexer;
        60: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        63: iconst_0
        64: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        67: aload_0
        68: invokevirtual #149                // Method skipHidden:()Z
        71: invokevirtual #468                // Method org/sireum/parser/JsonLexer.tokenize:(Lorg/sireum/Z;Z)Lorg/sireum/Option;
        74: astore        5
        76: aload         5
        78: instanceof    #470                // class org/sireum/Some
        81: ifeq          125
        84: aload         5
        86: checkcast     #470                // class org/sireum/Some
        89: astore        6
        91: getstatic     #475                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        94: aload         6
        96: invokevirtual #479                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
        99: astore        7
       101: aload         7
       103: invokevirtual #482                // Method scala/Some.isEmpty:()Z
       106: ifne          122
       109: aload         7
       111: invokevirtual #484                // Method scala/Some.get:()Ljava/lang/Object;
       114: checkcast     #23                 // class org/sireum/parser/JsonParser$Result
       117: astore        8
       119: aload         8
       121: areturn
       122: goto          128
       125: goto          128
       128: getstatic     #438                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       131: astore_3
       132: goto          135
       135: goto          138
       138: goto          271
       141: aload_0
       142: invokevirtual #275                // Method _at:()Lscala/Function1;
       145: aload_1
       146: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       149: iconst_1
       150: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       153: invokeinterface #399,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       158: invokeinterface #280,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       163: checkcast     #23                 // class org/sireum/parser/JsonParser$Result
       166: astore        9
       168: getstatic     #367                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       171: aload_0
       172: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
       175: aload         9
       177: invokevirtual #415                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       180: invokeinterface #460,  2          // InterfaceMethod org/sireum/Indexable$Pos.has:(Lorg/sireum/Z;)Z
       185: invokevirtual #384                // Method org/sireum/B$.$4B:(Z)Z
       188: ifeq          271
       191: aload_0
       192: invokevirtual #462                // Method lexer:()Lorg/sireum/parser/JsonLexer;
       195: aload         9
       197: invokevirtual #415                // Method org/sireum/parser/JsonParser$Result.newIndex:()Lorg/sireum/Z;
       200: aload_0
       201: invokevirtual #149                // Method skipHidden:()Z
       204: invokevirtual #468                // Method org/sireum/parser/JsonLexer.tokenize:(Lorg/sireum/Z;Z)Lorg/sireum/Option;
       207: astore        10
       209: aload         10
       211: instanceof    #470                // class org/sireum/Some
       214: ifeq          258
       217: aload         10
       219: checkcast     #470                // class org/sireum/Some
       222: astore        11
       224: getstatic     #475                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       227: aload         11
       229: invokevirtual #479                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       232: astore        12
       234: aload         12
       236: invokevirtual #482                // Method scala/Some.isEmpty:()Z
       239: ifne          255
       242: aload         12
       244: invokevirtual #484                // Method scala/Some.get:()Ljava/lang/Object;
       247: checkcast     #23                 // class org/sireum/parser/JsonParser$Result
       250: astore        13
       252: aload         13
       254: areturn
       255: goto          261
       258: goto          261
       261: getstatic     #438                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       264: astore_2
       265: goto          268
       268: goto          271
       271: getstatic     #487                // Field org/sireum/parser/JsonParser$Result$.MODULE$:Lorg/sireum/parser/JsonParser$Result$;
       274: getstatic     #412                // Field org/sireum/parser/JsonParser$Result$Kind$Normal$.MODULE$:Lorg/sireum/parser/JsonParser$Result$Kind$Normal$;
       277: getstatic     #492                // Field org/sireum/parser/JsonParser$.MODULE$:Lorg/sireum/parser/JsonParser$;
       280: invokevirtual #496                // Method org/sireum/parser/JsonParser$.eofLeaf:()Lorg/sireum/parser/ParseTree$Leaf;
       283: getstatic     #372                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       286: iconst_m1
       287: invokevirtual #375                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       290: invokevirtual #499                // Method org/sireum/parser/JsonParser$Result$.apply:(Lorg/sireum/parser/JsonParser$Result$Kind$Type;Lorg/sireum/parser/ParseTree;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
       293: areturn
      StackMapTable: number_of_entries = 13
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, top, top, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 254 /* append */
          offset_delta = 90
          locals = [ class org/sireum/Option, class org/sireum/Some, class scala/Some ]
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, top, class scala/runtime/BoxedUnit, class org/sireum/Z, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, top, top, class org/sireum/Z ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 113
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, top, top, class org/sireum/Z, top, top, top, top, class org/sireum/parser/JsonParser$Result, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/runtime/BoxedUnit, top, class org/sireum/Z, top, top, top, top, class org/sireum/parser/JsonParser$Result, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, top, top, class org/sireum/Z ]
          stack = []
      LineNumberTable:
        line 171: 0
        line 172: 31
        line 173: 56
        line 174: 76
        line 173: 109
        line 174: 119
        line 175: 128
        line 173: 135
        line 172: 138
        line 179: 141
        line 180: 168
        line 181: 191
        line 182: 209
        line 181: 242
        line 182: 252
        line 183: 261
        line 181: 268
        line 187: 271
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          119       3     8 result   Lorg/sireum/parser/JsonParser$Result;
          252       3    13 result   Lorg/sireum/parser/JsonParser$Result;
          168     103     9  prev   Lorg/sireum/parser/JsonParser$Result;
            0     294     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0     294     1   i$2   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      i$2                            final

  private final org.sireum.parser.JsonParser$Result __at$1(org.sireum.Z, scala.collection.mutable.Map);
    descriptor: (Lorg/sireum/Z;Lscala/collection/mutable/Map;)Lorg/sireum/parser/JsonParser$Result;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=10, args_size=3
         0: iconst_0
         1: istore        4
         3: aload_1
         4: astore        5
         6: iload         4
         8: ifne          62
        11: aload_2
        12: aload         5
        14: invokeinterface #428,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        19: astore        6
        21: aload         6
        23: instanceof    #430                // class scala/Some
        26: ifeq          49
        29: aload         6
        31: checkcast     #430                // class scala/Some
        34: astore        7
        36: aload         7
        38: invokevirtual #432                // Method scala/Some.value:()Ljava/lang/Object;
        41: checkcast     #23                 // class org/sireum/parser/JsonParser$Result
        44: astore        8
        46: aload         8
        48: areturn
        49: goto          52
        52: getstatic     #438                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        55: astore_3
        56: goto          59
        59: goto          68
        62: aload_2
        63: invokeinterface #441,  1          // InterfaceMethod scala/collection/mutable/Map.clear:()V
        68: aload_0
        69: aload_1
        70: invokespecial #507                // Method _internal$2:(Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
        73: astore        9
        75: aload_2
        76: aload         5
        78: aload         9
        80: invokeinterface #446,  3          // InterfaceMethod scala/collection/mutable/Map.update:(Ljava/lang/Object;Ljava/lang/Object;)V
        85: aload         9
        87: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/collection/mutable/Map, top, int, class org/sireum/Z, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/collection/mutable/Map, class scala/runtime/BoxedUnit, int, class org/sireum/Z, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/sireum/parser/JsonParser$IndexableToken, class org/sireum/Z, class scala/collection/mutable/Map, top, int, class org/sireum/Z ]
          stack = []
        frame_type = 5 /* same */
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46       3     8     r   Lorg/sireum/parser/JsonParser$Result;
            3      84     4 refresh   Z
            6      81     5   arg   Lorg/sireum/Z;
           75      12     9     r   Lorg/sireum/parser/JsonParser$Result;
            0      88     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      88     1     i   Lorg/sireum/Z;
            0      88     2 cache$2   Lscala/collection/mutable/Map;
    MethodParameters:
      Name                           Flags
      i                              final
      cache$2                        final

  public static final org.sireum.parser.JsonParser$Result $anonfun$_at$1(org.sireum.parser.JsonParser$IndexableToken, scala.collection.mutable.Map, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #509                // Method __at$1:(Lorg/sireum/Z;Lscala/collection/mutable/Map;)Lorg/sireum/parser/JsonParser$Result;
         6: areturn
      LineNumberTable:
        line 170: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0       7     1 cache$2   Lscala/collection/mutable/Map;
            0       7     2     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      cache$2                        final
      i                              final

  public org.sireum.parser.JsonParser$IndexableToken(org.sireum.Indexable$Pos<org.sireum.C>, boolean);
    descriptor: (Lorg/sireum/Indexable$Pos;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #513                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #517                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #520                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #523                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #104                // Field _input:Lorg/sireum/Indexable$Pos;
        21: aload_0
        22: iload_2
        23: putfield      #108                // Field _skipHidden:Z
        26: aload_0
        27: getstatic     #528                // Field org/sireum/parser/JsonLexer$.MODULE$:Lorg/sireum/parser/JsonLexer$;
        30: aload_0
        31: invokevirtual #139                // Method input:()Lorg/sireum/Indexable$Pos;
        34: invokevirtual #531                // Method org/sireum/parser/JsonLexer$.apply:(Lorg/sireum/Indexable$Pos;)Lorg/sireum/parser/JsonLexer;
        37: putfield      #269                // Field lexer:Lorg/sireum/parser/JsonLexer;
        40: return
      LineNumberTable:
        line 147: 0
        line 148: 26
        line 147: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      41     1 __input   Lorg/sireum/Indexable$Pos;
            0      41     2 __skipHidden   Z
    Signature: #510                         // (Lorg/sireum/Indexable$Pos<Lorg/sireum/C;>;Z)V
    MethodParameters:
      Name                           Flags
      __input                        final
      __skipHidden                   final

  public static final java.lang.Object $anonfun$_has$1$adapted(org.sireum.parser.JsonParser$IndexableToken, scala.collection.mutable.Map, org.sireum.Z);
    descriptor: (Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: new           #147                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: aload_2
         7: invokestatic  #533                // Method $anonfun$_has$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Z
        10: invokespecial #152                // Method org/sireum/B."<init>":(Z)V
        13: areturn
      LineNumberTable:
        line 158: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Lorg/sireum/parser/JsonParser$IndexableToken;
            0      14     1 cache$1   Lscala/collection/mutable/Map;
            0      14     2     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      $this                          final
      cache$1                        final
      i                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #545,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #17 of #7;           // Pos=class org/sireum/Indexable$Pos of class org/sireum/Indexable
  public static final #21= #2 of #20;     // IndexableToken=class org/sireum/parser/JsonParser$IndexableToken of class org/sireum/parser/JsonParser
  public static final #24= #23 of #20;    // Result=class org/sireum/parser/JsonParser$Result of class org/sireum/parser/JsonParser
  public static #27= #26 of #20;          // Result$=class org/sireum/parser/JsonParser$Result$ of class org/sireum/parser/JsonParser
  public static #30= #29 of #26;          // Kind$=class org/sireum/parser/JsonParser$Result$Kind$ of class org/sireum/parser/JsonParser$Result$
  public static final #33= #32 of #29;    // Normal$=class org/sireum/parser/JsonParser$Result$Kind$Normal$ of class org/sireum/parser/JsonParser$Result$Kind$
  public static #36= #35 of #29;          // Type=class org/sireum/parser/JsonParser$Result$Kind$Type of class org/sireum/parser/JsonParser$Result$Kind$
  public static final #41= #38 of #40;    // Leaf=class org/sireum/parser/ParseTree$Leaf of class org/sireum/parser/ParseTree
  public #46= #43 of #45;                 // ConcurrentMapHasAsScala=class scala/collection/convert/AsScalaExtensions$ConcurrentMapHasAsScala of class scala/collection/convert/AsScalaExtensions
Signature: #3                           // Ljava/lang/Object;Lorg/sireum/Indexable<Lorg/sireum/parser/JsonParser$Result;>;Lorg/sireum/DatatypeSig;
SourceFile: "JsonParser.scala"
BootstrapMethods:
  0: #328 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #312 (Ljava/lang/Object;)Ljava/lang/Object;
      #317 REF_invokeStatic org/sireum/parser/JsonParser$IndexableToken.$anonfun$_has$1$adapted:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
      #319 (Lorg/sireum/Z;)Ljava/lang/Object;
      #320 5
      #321 1
      #319 (Lorg/sireum/Z;)Ljava/lang/Object;
  1: #328 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #312 (Ljava/lang/Object;)Ljava/lang/Object;
      #344 REF_invokeStatic org/sireum/parser/JsonParser$IndexableToken.$anonfun$_at$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
      #345 (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
      #320 5
      #321 1
      #345 (Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
  2: #542 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #344 REF_invokeStatic org/sireum/parser/JsonParser$IndexableToken.$anonfun$_at$1:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Lorg/sireum/parser/JsonParser$Result;
      #317 REF_invokeStatic org/sireum/parser/JsonParser$IndexableToken.$anonfun$_has$1$adapted:(Lorg/sireum/parser/JsonParser$IndexableToken;Lscala/collection/mutable/Map;Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xB8 (unknown attribute)
   01 01 00 24 01 54 01 55 01 01 C4 01 C5 01 01 39
   01 3A 01 00 4A 00 4B 01 00 5C 01 5F 01 00 5C 00
   5D 01 00 31 00 E5 01 00 E4 00 E5 01 00 52 00 53
   01 00 58 00 53 01 00 78 00 DF 01 01 F7 01 F8 01
   01 A4 01 A5 01 00 37 01 11 01 01 52 01 11 01 00
   34 01 11 01 01 21 01 11 01 01 64 01 1B 01 01 C9
   01 0F 01 00 A1 00 DD 01 00 E2 00 65 01 00 E3 00
   53 01 01 0E 01 3E 01 01 0E 01 0F 01 00 D6 00 D7
   01 00 69 00 65 01 00 6D 00 53 01 01 1A 01 1B 01
   00 42 00 43 01 00 2F 00 A6 01 00 A5 00 A6 01 00
   64 00 65 01 00 3E 01 0B 01 00 6A 00 53 01 00 9F
   00 6F 01 00 6E 00 6F 01
  Scala: length = 0x0 (unknown attribute)

