Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.class
  Last modified May 29, 2022; size 3104 bytes
  SHA-256 checksum 0e2ab9450d7160ff38097051dbff7dfe67b61bb874971060eb9aa9e526f9d9b8
  Compiled from "AbstractCircuitBreaker.java"
public abstract class org.apache.commons.lang3.concurrent.AbstractCircuitBreaker<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.CircuitBreaker<T>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #17                         // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker
  super_class: #22                        // java/lang/Object
  interfaces: 1, fields: 3, methods: 11, attributes: 3
Constant pool:
    #1 = Methodref          #22.#69       // java/lang/Object."<init>":()V
    #2 = Class              #70           // java/util/concurrent/atomic/AtomicReference
    #3 = Fieldref           #10.#71       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
    #4 = Methodref          #2.#72        // java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
    #5 = Fieldref           #17.#73       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.state:Ljava/util/concurrent/atomic/AtomicReference;
    #6 = Class              #74           // java/beans/PropertyChangeSupport
    #7 = Methodref          #6.#72        // java/beans/PropertyChangeSupport."<init>":(Ljava/lang/Object;)V
    #8 = Fieldref           #17.#75       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeSupport:Ljava/beans/PropertyChangeSupport;
    #9 = Methodref          #2.#76        // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
   #10 = Class              #77           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State
   #11 = Methodref          #17.#78       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
   #12 = Methodref          #17.#79       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:()Z
   #13 = Methodref          #17.#80       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V
   #14 = Fieldref           #10.#81       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #15 = Methodref          #10.#82       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #16 = Methodref          #2.#83        // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #17 = Class              #84           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker
   #18 = String             #54           // open
   #19 = Methodref          #6.#85        // java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V
   #20 = Methodref          #6.#86        // java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
   #21 = Methodref          #6.#87        // java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
   #22 = Class              #88           // java/lang/Object
   #23 = Class              #89           // org/apache/commons/lang3/concurrent/CircuitBreaker
   #24 = Class              #90           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1
   #25 = Utf8               InnerClasses
   #26 = Utf8               State
   #27 = Utf8               PROPERTY_NAME
   #28 = Utf8               Ljava/lang/String;
   #29 = Utf8               ConstantValue
   #30 = Utf8               state
   #31 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;
   #32 = Utf8               Signature
   #33 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;>;
   #34 = Utf8               changeSupport
   #35 = Utf8               Ljava/beans/PropertyChangeSupport;
   #36 = Utf8               <init>
   #37 = Utf8               ()V
   #38 = Utf8               Code
   #39 = Utf8               LineNumberTable
   #40 = Utf8               LocalVariableTable
   #41 = Utf8               this
   #42 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
   #43 = Utf8               LocalVariableTypeTable
   #44 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;
   #45 = Utf8               isOpen
   #46 = Utf8               ()Z
   #47 = Utf8               isClosed
   #48 = Utf8               StackMapTable
   #49 = Utf8               checkState
   #50 = Utf8               incrementAndCheckState
   #51 = Utf8               (Ljava/lang/Object;)Z
   #52 = Utf8               (TT;)Z
   #53 = Utf8               close
   #54 = Utf8               open
   #55 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
   #56 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #57 = Utf8               changeState
   #58 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V
   #59 = Utf8               newState
   #60 = Class              #91           // java/lang/String
   #61 = Utf8               addChangeListener
   #62 = Utf8               (Ljava/beans/PropertyChangeListener;)V
   #63 = Utf8               listener
   #64 = Utf8               Ljava/beans/PropertyChangeListener;
   #65 = Utf8               removeChangeListener
   #66 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;
   #67 = Utf8               SourceFile
   #68 = Utf8               AbstractCircuitBreaker.java
   #69 = NameAndType        #36:#37       // "<init>":()V
   #70 = Utf8               java/util/concurrent/atomic/AtomicReference
   #71 = NameAndType        #92:#56       // CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #72 = NameAndType        #36:#93       // "<init>":(Ljava/lang/Object;)V
   #73 = NameAndType        #30:#31       // state:Ljava/util/concurrent/atomic/AtomicReference;
   #74 = Utf8               java/beans/PropertyChangeSupport
   #75 = NameAndType        #34:#35       // changeSupport:Ljava/beans/PropertyChangeSupport;
   #76 = NameAndType        #94:#95       // get:()Ljava/lang/Object;
   #77 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State
   #78 = NameAndType        #45:#55       // isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
   #79 = NameAndType        #45:#46       // isOpen:()Z
   #80 = NameAndType        #57:#58       // changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V
   #81 = NameAndType        #96:#56       // OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #82 = NameAndType        #97:#98       // oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #83 = NameAndType        #99:#100      // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #84 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker
   #85 = NameAndType        #101:#102     // firePropertyChange:(Ljava/lang/String;ZZ)V
   #86 = NameAndType        #103:#62      // addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
   #87 = NameAndType        #104:#62      // removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
   #88 = Utf8               java/lang/Object
   #89 = Utf8               org/apache/commons/lang3/concurrent/CircuitBreaker
   #90 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1
   #91 = Utf8               java/lang/String
   #92 = Utf8               CLOSED
   #93 = Utf8               (Ljava/lang/Object;)V
   #94 = Utf8               get
   #95 = Utf8               ()Ljava/lang/Object;
   #96 = Utf8               OPEN
   #97 = Utf8               oppositeState
   #98 = Utf8               ()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
   #99 = Utf8               compareAndSet
  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #101 = Utf8               firePropertyChange
  #102 = Utf8               (Ljava/lang/String;ZZ)V
  #103 = Utf8               addPropertyChangeListener
  #104 = Utf8               removePropertyChangeListener
{
  public static final java.lang.String PROPERTY_NAME;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String open

  protected final java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State> state;
    descriptor: Ljava/util/concurrent/atomic/AtomicReference;
    flags: (0x0014) ACC_PROTECTED, ACC_FINAL
    Signature: #33                          // Ljava/util/concurrent/atomic/AtomicReference<Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;>;

  private final java.beans.PropertyChangeSupport changeSupport;
    descriptor: Ljava/beans/PropertyChangeSupport;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.lang3.concurrent.AbstractCircuitBreaker();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
         8: dup
         9: getstatic     #3                  // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
        12: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
        15: putfield      #5                  // Field state:Ljava/util/concurrent/atomic/AtomicReference;
        18: aload_0
        19: new           #6                  // class java/beans/PropertyChangeSupport
        22: dup
        23: aload_0
        24: invokespecial #7                  // Method java/beans/PropertyChangeSupport."<init>":(Ljava/lang/Object;)V
        27: putfield      #8                  // Field changeSupport:Ljava/beans/PropertyChangeSupport;
        30: return
      LineNumberTable:
        line 45: 0
        line 37: 4
        line 46: 18
        line 47: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;

  public boolean isOpen();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field state:Ljava/util/concurrent/atomic/AtomicReference;
         4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
         7: checkcast     #10                 // class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State
        10: invokestatic  #11                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
        13: ireturn
      LineNumberTable:
        line 54: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;

  public boolean isClosed();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #12                 // Method isOpen:()Z
         4: ifne          11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public abstract boolean checkState();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract boolean incrementAndCheckState(T);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #52                          // (TT;)Z

  public void close();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #3                  // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
         4: invokevirtual #13                 // Method changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V
         7: return
      LineNumberTable:
        line 82: 0
        line 83: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;

  public void open();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #14                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
         4: invokevirtual #13                 // Method changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V
         7: return
      LineNumberTable:
        line 90: 0
        line 91: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;

  protected static boolean isOpen(org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State);
    descriptor: (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
    flags: (0x000c) ACC_PROTECTED, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #14                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
         4: if_acmpne     11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 state   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  protected void changeState(org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State);
    descriptor: (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getfield      #5                  // Field state:Ljava/util/concurrent/atomic/AtomicReference;
         4: aload_1
         5: invokevirtual #15                 // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
         8: aload_1
         9: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
        12: ifeq          40
        15: aload_0
        16: getfield      #8                  // Field changeSupport:Ljava/beans/PropertyChangeSupport;
        19: ldc           #18                 // String open
        21: aload_1
        22: invokestatic  #11                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
        25: ifne          32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: aload_1
        34: invokestatic  #11                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z
        37: invokevirtual #19                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V
        40: return
      LineNumberTable:
        line 110: 0
        line 111: 15
        line 113: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
            0      41     1 newState   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 32
          locals = [ class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker, class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State ]
          stack = [ class java/beans/PropertyChangeSupport, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker, class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State ]
          stack = [ class java/beans/PropertyChangeSupport, class java/lang/String, int ]
        frame_type = 6 /* same */

  public void addChangeListener(java.beans.PropertyChangeListener);
    descriptor: (Ljava/beans/PropertyChangeListener;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #8                  // Field changeSupport:Ljava/beans/PropertyChangeSupport;
         4: aload_1
         5: invokevirtual #20                 // Method java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
         8: return
      LineNumberTable:
        line 123: 0
        line 124: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
            0       9     1 listener   Ljava/beans/PropertyChangeListener;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;

  public void removeChangeListener(java.beans.PropertyChangeListener);
    descriptor: (Ljava/beans/PropertyChangeListener;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #8                  // Field changeSupport:Ljava/beans/PropertyChangeSupport;
         4: aload_1
         5: invokevirtual #21                 // Method java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
         8: return
      LineNumberTable:
        line 132: 0
        line 133: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;
            0       9     1 listener   Ljava/beans/PropertyChangeListener;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;
}
Signature: #66                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;
SourceFile: "AbstractCircuitBreaker.java"
InnerClasses:
  static #24;                             // class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1
  protected static abstract #26= #10 of #17; // State=class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State of class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker
