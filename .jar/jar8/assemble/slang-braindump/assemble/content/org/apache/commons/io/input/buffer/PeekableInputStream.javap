Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/buffer/PeekableInputStream.class
  Last modified May 29, 2022; size 1826 bytes
  SHA-256 checksum 72c45b705c02ffaf728d454325154752f902be911fb26a65bc5ac4c75b69ef25
  Compiled from "PeekableInputStream.java"
public class org.apache.commons.io.input.buffer.PeekableInputStream extends org.apache.commons.io.input.buffer.CircularBufferInputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #20                         // org/apache/commons/io/input/buffer/PeekableInputStream
  super_class: #21                        // org/apache/commons/io/input/buffer/CircularBufferInputStream
  interfaces: 0, fields: 0, methods: 4, attributes: 1
Constant pool:
   #1 = Methodref          #21.#46        // org/apache/commons/io/input/buffer/CircularBufferInputStream."<init>":(Ljava/io/InputStream;I)V
   #2 = Methodref          #21.#47        // org/apache/commons/io/input/buffer/CircularBufferInputStream."<init>":(Ljava/io/InputStream;)V
   #3 = String             #48            // Buffer
   #4 = Methodref          #49.#50        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #5 = Fieldref           #20.#51        // org/apache/commons/io/input/buffer/PeekableInputStream.bufferSize:I
   #6 = Class              #52            // java/lang/IllegalArgumentException
   #7 = Class              #53            // java/lang/StringBuilder
   #8 = Methodref          #7.#54         // java/lang/StringBuilder."<init>":()V
   #9 = String             #55            // Peek request size of
  #10 = Methodref          #7.#56         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #11 = Methodref          #7.#57         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #12 = String             #58            //  bytes exceeds buffer size of
  #13 = String             #59            //  bytes
  #14 = Methodref          #7.#60         // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #15 = Methodref          #6.#61         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #16 = Fieldref           #20.#62        // org/apache/commons/io/input/buffer/PeekableInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
  #17 = Methodref          #63.#64        // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I
  #18 = Methodref          #20.#65        // org/apache/commons/io/input/buffer/PeekableInputStream.fillBuffer:()V
  #19 = Methodref          #63.#66        // org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z
  #20 = Class              #67            // org/apache/commons/io/input/buffer/PeekableInputStream
  #21 = Class              #68            // org/apache/commons/io/input/buffer/CircularBufferInputStream
  #22 = Utf8               <init>
  #23 = Utf8               (Ljava/io/InputStream;I)V
  #24 = Utf8               Code
  #25 = Utf8               LineNumberTable
  #26 = Utf8               LocalVariableTable
  #27 = Utf8               this
  #28 = Utf8               Lorg/apache/commons/io/input/buffer/PeekableInputStream;
  #29 = Utf8               inputStream
  #30 = Utf8               Ljava/io/InputStream;
  #31 = Utf8               bufferSize
  #32 = Utf8               I
  #33 = Utf8               (Ljava/io/InputStream;)V
  #34 = Utf8               peek
  #35 = Utf8               ([B)Z
  #36 = Utf8               sourceBuffer
  #37 = Utf8               [B
  #38 = Utf8               StackMapTable
  #39 = Utf8               Exceptions
  #40 = Class              #69            // java/io/IOException
  #41 = Utf8               ([BII)Z
  #42 = Utf8               offset
  #43 = Utf8               length
  #44 = Utf8               SourceFile
  #45 = Utf8               PeekableInputStream.java
  #46 = NameAndType        #22:#23        // "<init>":(Ljava/io/InputStream;I)V
  #47 = NameAndType        #22:#33        // "<init>":(Ljava/io/InputStream;)V
  #48 = Utf8               Buffer
  #49 = Class              #70            // java/util/Objects
  #50 = NameAndType        #71:#72        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #51 = NameAndType        #31:#32        // bufferSize:I
  #52 = Utf8               java/lang/IllegalArgumentException
  #53 = Utf8               java/lang/StringBuilder
  #54 = NameAndType        #22:#73        // "<init>":()V
  #55 = Utf8               Peek request size of
  #56 = NameAndType        #74:#75        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #57 = NameAndType        #74:#76        // append:(I)Ljava/lang/StringBuilder;
  #58 = Utf8                bytes exceeds buffer size of
  #59 = Utf8                bytes
  #60 = NameAndType        #77:#78        // toString:()Ljava/lang/String;
  #61 = NameAndType        #22:#79        // "<init>":(Ljava/lang/String;)V
  #62 = NameAndType        #80:#81        // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
  #63 = Class              #82            // org/apache/commons/io/input/buffer/CircularByteBuffer
  #64 = NameAndType        #83:#84        // getCurrentNumberOfBytes:()I
  #65 = NameAndType        #85:#73        // fillBuffer:()V
  #66 = NameAndType        #34:#41        // peek:([BII)Z
  #67 = Utf8               org/apache/commons/io/input/buffer/PeekableInputStream
  #68 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream
  #69 = Utf8               java/io/IOException
  #70 = Utf8               java/util/Objects
  #71 = Utf8               requireNonNull
  #72 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #73 = Utf8               ()V
  #74 = Utf8               append
  #75 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #76 = Utf8               (I)Ljava/lang/StringBuilder;
  #77 = Utf8               toString
  #78 = Utf8               ()Ljava/lang/String;
  #79 = Utf8               (Ljava/lang/String;)V
  #80 = Utf8               buffer
  #81 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
  #82 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer
  #83 = Utf8               getCurrentNumberOfBytes
  #84 = Utf8               ()I
  #85 = Utf8               fillBuffer
{
  public org.apache.commons.io.input.buffer.PeekableInputStream(java.io.InputStream, int);
    descriptor: (Ljava/io/InputStream;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokespecial #1                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream."<init>":(Ljava/io/InputStream;I)V
         6: return
      LineNumberTable:
        line 40: 0
        line 41: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;
            0       7     1 inputStream   Ljava/io/InputStream;
            0       7     2 bufferSize   I

  public org.apache.commons.io.input.buffer.PeekableInputStream(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #2                  // Method org/apache/commons/io/input/buffer/CircularBufferInputStream."<init>":(Ljava/io/InputStream;)V
         5: return
      LineNumberTable:
        line 50: 0
        line 51: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;
            0       6     1 inputStream   Ljava/io/InputStream;

  public boolean peek(byte[]) throws java.io.IOException;
    descriptor: ([B)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: ldc           #3                  // String Buffer
         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: aload_1
         8: arraylength
         9: aload_0
        10: getfield      #5                  // Field bufferSize:I
        13: if_icmple     61
        16: new           #6                  // class java/lang/IllegalArgumentException
        19: dup
        20: new           #7                  // class java/lang/StringBuilder
        23: dup
        24: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
        27: ldc           #9                  // String Peek request size of
        29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: aload_1
        33: arraylength
        34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        37: ldc           #12                 // String  bytes exceeds buffer size of
        39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: aload_0
        43: getfield      #5                  // Field bufferSize:I
        46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        49: ldc           #13                 // String  bytes
        51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        60: athrow
        61: aload_0
        62: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        65: invokevirtual #17                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I
        68: aload_1
        69: arraylength
        70: if_icmpge     77
        73: aload_0
        74: invokevirtual #18                 // Method fillBuffer:()V
        77: aload_0
        78: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        81: aload_1
        82: iconst_0
        83: aload_1
        84: arraylength
        85: invokevirtual #19                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z
        88: ireturn
      LineNumberTable:
        line 63: 0
        line 64: 7
        line 65: 16
        line 68: 61
        line 69: 73
        line 71: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      89     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;
            0      89     1 sourceBuffer   [B
      StackMapTable: number_of_entries = 2
        frame_type = 61 /* same */
        frame_type = 15 /* same */
    Exceptions:
      throws java.io.IOException

  public boolean peek(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_1
         1: ldc           #3                  // String Buffer
         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: aload_1
         8: arraylength
         9: aload_0
        10: getfield      #5                  // Field bufferSize:I
        13: if_icmple     61
        16: new           #6                  // class java/lang/IllegalArgumentException
        19: dup
        20: new           #7                  // class java/lang/StringBuilder
        23: dup
        24: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
        27: ldc           #9                  // String Peek request size of
        29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: aload_1
        33: arraylength
        34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        37: ldc           #12                 // String  bytes exceeds buffer size of
        39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: aload_0
        43: getfield      #5                  // Field bufferSize:I
        46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        49: ldc           #13                 // String  bytes
        51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        60: athrow
        61: aload_0
        62: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        65: invokevirtual #17                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I
        68: aload_1
        69: arraylength
        70: if_icmpge     77
        73: aload_0
        74: invokevirtual #18                 // Method fillBuffer:()V
        77: aload_0
        78: getfield      #16                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;
        81: aload_1
        82: iload_2
        83: iload_3
        84: invokevirtual #19                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.peek:([BII)Z
        87: ireturn
      LineNumberTable:
        line 85: 0
        line 86: 7
        line 87: 16
        line 90: 61
        line 91: 73
        line 93: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      88     0  this   Lorg/apache/commons/io/input/buffer/PeekableInputStream;
            0      88     1 sourceBuffer   [B
            0      88     2 offset   I
            0      88     3 length   I
      StackMapTable: number_of_entries = 2
        frame_type = 61 /* same */
        frame_type = 15 /* same */
    Exceptions:
      throws java.io.IOException
}
SourceFile: "PeekableInputStream.java"
