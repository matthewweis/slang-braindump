Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/tools/SocketReporterConfiguration.class
  Last modified May 29, 2022; size 5482 bytes
  SHA-256 checksum 51575ccad35470b8197b7e2c368c78925f4243fb2a9dd15a806ffa62e9ccdc9c
  Compiled from "ReporterConfiguration.scala"
public class org.scalatest.tools.SocketReporterConfiguration extends org.scalatest.tools.ReporterConfiguration
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/tools/SocketReporterConfiguration
  super_class: #4                         // org/scalatest/tools/ReporterConfiguration
  interfaces: 0, fields: 2, methods: 19, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/tools/SocketReporterConfiguration
    #2 = Class              #1            // org/scalatest/tools/SocketReporterConfiguration
    #3 = Utf8               org/scalatest/tools/ReporterConfiguration
    #4 = Class              #3            // org/scalatest/tools/ReporterConfiguration
    #5 = Utf8               ReporterConfiguration.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u0005ec!B\r\u001b\u0001j\u0001\u0003\u0002\u0003\u001d\u0001\u0005+\u0007I\u0011A\u001d\t\u0011\t\u0003!\u0011#Q\u0001\niB\u0001b\u0011\u0001\u0003\u0016\u0004%\t\u0001\u0012\u0005\t\u0011\u0002\u0011\t\u0012)A\u0005\u000b\")\u0011\n\u0001C\u0001\u0015\"9a\nAA\u0001\n\u0003y\u0005b\u0002*\u0001#\u0003%\ta\u0015\u0005\b=\u0002\t\n\u0011\"\u0001`\u0011\u001d\t\u0007!!A\u0005B\tDqA\u001b\u0001\u0002\u0002\u0013\u0005A\tC\u0004l\u0001\u0005\u0005I\u0011\u00017\t\u000fI\u0004\u0011\u0011!C!g\"9!\u0010AA\u0001\n\u0003Y\b\"CA\u0001\u0001\u0005\u0005I\u0011IA\u0002\u0011%\t9\u0001AA\u0001\n\u0003\nI\u0001C\u0005\u0002\f\u0001\t\t\u0011\"\u0011\u0002\u000e!I\u0011q\u0002\u0001\u0002\u0002\u0013\u0005\u0013\u0011C\u0004\u000b\u0003+Q\u0012\u0011!E\u00015\u0005]a!C\r\u001b\u0003\u0003E\tAGA\r\u0011\u0019I5\u0003\"\u0001\u00022!I\u00111B\n\u0002\u0002\u0013\u0015\u0013Q\u0002\u0005\n\u0003g\u0019\u0012\u0011!CA\u0003kA\u0011\"a\u000f\u0014\u0003\u0003%\t)!\u0010\t\u0013\u0005=3#!A\u0005\n\u0005E#aG*pG.,GOU3q_J$XM]\"p]\u001aLw-\u001e:bi&|gN\u0003\u0002\u001c9\u0005)Ao\\8mg*\u0011QDH\u0001\ng\u000e\fG.\u0019;fgRT\u0011aH\u0001\u0004_J<7\u0003\u0002\u0001\"K-\u0002\"AI\u0012\u000e\u0003iI!\u0001\n\u000e\u0003+I+\u0007o\u001c:uKJ\u001cuN\u001c4jOV\u0014\u0018\r^5p]B\u0011a%K\u0007\u0002O)\t\u0001&A\u0003tG\u0006d\u0017-\u0003\u0002+O\t9\u0001K]8ek\u000e$\bC\u0001\u00176\u001d\ti3G\u0004\u0002/e5\tqF\u0003\u00021c\u00051AH]8piz\u001a\u0001!C\u0001)\u0013\t!t%A\u0004qC\u000e\\\u0017mZ3\n\u0005Y:$\u0001D*fe&\fG.\u001b>bE2,\'B\u0001\u001b(\u0003\u0011Awn\u001d;\u0016\u0003i\u0002\"aO \u000f\u0005qj\u0004C\u0001\u0018(\u0013\tqt%\u0001\u0004Qe\u0016$WMZ\u0005\u0003\u0001\u0006\u0013aa\u0015;sS:<\'B\u0001 (\u0003\u0015Awn\u001d;!\u0003\u0011\u0001xN\u001d;\u0016\u0003\u0015\u0003\"A\n$\n\u0005\u001d;#aA%oi\u0006)\u0001o\u001c:uA\u00051A(\u001b8jiz\"2a\u0013\'N!\t\u0011\u0003\u0001C\u00039\u000b\u0001\u0007!\bC\u0003D\u000b\u0001\u0007Q)\u0001\u0003d_BLHcA&Q#\"9\u0001H\u0002I\u0001\u0002\u0004Q\u0004bB\"\u0007!\u0003\u0005\r!R\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00132+\u0005!&F\u0001\u001eVW\u00051\u0006CA,]\u001b\u0005A&BA-[\u0003%)hn\u00195fG.,GM\u0003\u0002\\O\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\u0005uC&!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u0006q1m\u001c9zI\u0011,g-Y;mi\u0012\u0012T#\u00011+\u0005\u0015+\u0016!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070F\u0001d!\t!\u0017.D\u0001f\u0015\t1w-\u0001\u0003mC:<\'\"\u00015\u0002\t)\fg/Y\u0005\u0003\u0001\u0016\fA\u0002\u001d:pIV\u001cG/\u0011:jif\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0002naB\u0011aE\\\u0005\u0003_\u001e\u00121!\u00118z\u0011\u001d\t8\"!AA\u0002\u0015\u000b1\u0001\u001f\u00132\u0003=\u0001(o\u001c3vGRLE/\u001a:bi>\u0014X#\u0001;\u0011\u0007UDX.D\u0001w\u0015\t9x%\u0001\u0006d_2dWm\u0019;j_:L!!\u001f<\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0003y~\u0004\"AJ?\n\u0005y<#a\u0002\"p_2,\u0017M\u001c\u0005\bc6\t\t\u00111\u0001n\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\u0007\r\f)\u0001C\u0004r\u001d\u0005\u0005\t\u0019A#\u0002\u0011!\f7\u000f[\"pI\u0016$\u0012!R\u0001\ti>\u001cFO]5oOR\t1-\u0001\u0004fcV\fGn\u001d\u000b\u0004y\u0006M\u0001bB9\u0012\u0003\u0003\u0005\r!\\\u0001\u001c\'>\u001c7.\u001a;SKB|\'\u000f^3s\u0007>tg-[4ve\u0006$\u0018n\u001c8\u0011\u0005\t\u001a2#B\n\u0002\u001c\u0005\u001d\u0002cBA\u000f\u0003GQTiS\u0007\u0003\u0003?Q1!!\t(\u0003\u001d\u0011XO\u001c;j[\u0016LA!!\n\u0002 \t\t\u0012IY:ue\u0006\u001cGOR;oGRLwN\u001c\u001a\u0011\t\u0005%\u0012qF\u0007\u0003\u0003WQ1!!\fh\u0003\tIw.C\u00027\u0003W!\"!a\u0006\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u000b-\u000b9$!\u000f\t\u000ba2\u0002\u0019\u0001\u001e\t\u000b\r3\u0002\u0019A#\u0002\u000fUt\u0017\r\u001d9msR!\u0011qHA&!\u00151\u0013\u0011IA#\u0013\r\t\u0019e\n\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u000b\u0019\n9EO#\n\u0007\u0005%sE\u0001\u0004UkBdWM\r\u0005\t\u0003\u001b:\u0012\u0011!a\u0001\u0017\u0006\u0019\u0001\u0010\n\u0019\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\u0005M\u0003c\u00013\u0002V%\u0019\u0011qK3\u0003\r=\u0013\'.Z2u\u0001
    #9 = Utf8               host
   #10 = Utf8               Ljava/lang/String;
   #11 = Utf8               port
   #12 = Utf8               I
   #13 = Utf8               unapply
   #14 = Utf8               (Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option;
   #15 = Utf8               (Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #16 = Utf8               x$0
   #17 = Utf8               org/scalatest/tools/SocketReporterConfiguration$
   #18 = Class              #17           // org/scalatest/tools/SocketReporterConfiguration$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lorg/scalatest/tools/SocketReporterConfiguration$;
   #21 = NameAndType        #19:#20       // MODULE$:Lorg/scalatest/tools/SocketReporterConfiguration$;
   #22 = Fieldref           #18.#21       // org/scalatest/tools/SocketReporterConfiguration$.MODULE$:Lorg/scalatest/tools/SocketReporterConfiguration$;
   #23 = NameAndType        #13:#14       // unapply:(Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option;
   #24 = Methodref          #18.#23       // org/scalatest/tools/SocketReporterConfiguration$.unapply:(Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option;
   #25 = Utf8               Lorg/scalatest/tools/SocketReporterConfiguration;
   #26 = Utf8               apply
   #27 = Utf8               (Ljava/lang/String;I)Lorg/scalatest/tools/SocketReporterConfiguration;
   #28 = NameAndType        #26:#27       // apply:(Ljava/lang/String;I)Lorg/scalatest/tools/SocketReporterConfiguration;
   #29 = Methodref          #18.#28       // org/scalatest/tools/SocketReporterConfiguration$.apply:(Ljava/lang/String;I)Lorg/scalatest/tools/SocketReporterConfiguration;
   #30 = Utf8               tupled
   #31 = Utf8               ()Lscala/Function1;
   #32 = Utf8               ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;Lorg/scalatest/tools/SocketReporterConfiguration;>;
   #33 = NameAndType        #30:#31       // tupled:()Lscala/Function1;
   #34 = Methodref          #18.#33       // org/scalatest/tools/SocketReporterConfiguration$.tupled:()Lscala/Function1;
   #35 = Utf8               curried
   #36 = Utf8               ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/tools/SocketReporterConfiguration;>;>;
   #37 = NameAndType        #35:#31       // curried:()Lscala/Function1;
   #38 = Methodref          #18.#37       // org/scalatest/tools/SocketReporterConfiguration$.curried:()Lscala/Function1;
   #39 = Utf8               ()Ljava/lang/String;
   #40 = NameAndType        #9:#10        // host:Ljava/lang/String;
   #41 = Fieldref           #2.#40        // org/scalatest/tools/SocketReporterConfiguration.host:Ljava/lang/String;
   #42 = Utf8               this
   #43 = Utf8               ()I
   #44 = NameAndType        #11:#12       // port:I
   #45 = Fieldref           #2.#44        // org/scalatest/tools/SocketReporterConfiguration.port:I
   #46 = Utf8               copy
   #47 = Utf8               <init>
   #48 = Utf8               (Ljava/lang/String;I)V
   #49 = NameAndType        #47:#48       // "<init>":(Ljava/lang/String;I)V
   #50 = Methodref          #2.#49        // org/scalatest/tools/SocketReporterConfiguration."<init>":(Ljava/lang/String;I)V
   #51 = Utf8               copy$default$1
   #52 = NameAndType        #9:#39        // host:()Ljava/lang/String;
   #53 = Methodref          #2.#52        // org/scalatest/tools/SocketReporterConfiguration.host:()Ljava/lang/String;
   #54 = Utf8               copy$default$2
   #55 = NameAndType        #11:#43       // port:()I
   #56 = Methodref          #2.#55        // org/scalatest/tools/SocketReporterConfiguration.port:()I
   #57 = Utf8               productPrefix
   #58 = Utf8               SocketReporterConfiguration
   #59 = String             #58           // SocketReporterConfiguration
   #60 = Utf8               productArity
   #61 = Utf8               productElement
   #62 = Utf8               (I)Ljava/lang/Object;
   #63 = Utf8               x$1
   #64 = Utf8               scala/runtime/BoxesRunTime
   #65 = Class              #64           // scala/runtime/BoxesRunTime
   #66 = Utf8               boxToInteger
   #67 = Utf8               (I)Ljava/lang/Integer;
   #68 = NameAndType        #66:#67       // boxToInteger:(I)Ljava/lang/Integer;
   #69 = Methodref          #65.#68       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #70 = Utf8               scala/runtime/Statics
   #71 = Class              #70           // scala/runtime/Statics
   #72 = Utf8               ioobe
   #73 = NameAndType        #72:#62       // ioobe:(I)Ljava/lang/Object;
   #74 = Methodref          #71.#73       // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
   #75 = Utf8               java/lang/Object
   #76 = Class              #75           // java/lang/Object
   #77 = Utf8               productIterator
   #78 = Utf8               ()Lscala/collection/Iterator;
   #79 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #80 = Utf8               scala/runtime/ScalaRunTime$
   #81 = Class              #80           // scala/runtime/ScalaRunTime$
   #82 = Utf8               Lscala/runtime/ScalaRunTime$;
   #83 = NameAndType        #19:#82       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #84 = Fieldref           #81.#83       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #85 = Utf8               typedProductIterator
   #86 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #87 = NameAndType        #85:#86       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #88 = Methodref          #81.#87       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #89 = Utf8               canEqual
   #90 = Utf8               (Ljava/lang/Object;)Z
   #91 = Utf8               Ljava/lang/Object;
   #92 = Utf8               productElementName
   #93 = Utf8               (I)Ljava/lang/String;
   #94 = String             #9            // host
   #95 = String             #11           // port
   #96 = Utf8               java/lang/String
   #97 = Class              #96           // java/lang/String
   #98 = Utf8               hashCode
   #99 = Integer            -889275714
  #100 = NameAndType        #57:#39       // productPrefix:()Ljava/lang/String;
  #101 = Methodref          #2.#100       // org/scalatest/tools/SocketReporterConfiguration.productPrefix:()Ljava/lang/String;
  #102 = NameAndType        #98:#43       // hashCode:()I
  #103 = Methodref          #97.#102      // java/lang/String.hashCode:()I
  #104 = Utf8               mix
  #105 = Utf8               (II)I
  #106 = NameAndType        #104:#105     // mix:(II)I
  #107 = Methodref          #71.#106      // scala/runtime/Statics.mix:(II)I
  #108 = Utf8               anyHash
  #109 = Utf8               (Ljava/lang/Object;)I
  #110 = NameAndType        #108:#109     // anyHash:(Ljava/lang/Object;)I
  #111 = Methodref          #71.#110      // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #112 = Utf8               finalizeHash
  #113 = NameAndType        #112:#105     // finalizeHash:(II)I
  #114 = Methodref          #71.#113      // scala/runtime/Statics.finalizeHash:(II)I
  #115 = Utf8               toString
  #116 = Utf8               _toString
  #117 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #118 = NameAndType        #116:#117     // _toString:(Lscala/Product;)Ljava/lang/String;
  #119 = Methodref          #81.#118      // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #120 = Utf8               equals
  #121 = NameAndType        #120:#90      // equals:(Ljava/lang/Object;)Z
  #122 = Methodref          #76.#121      // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #123 = NameAndType        #89:#90       // canEqual:(Ljava/lang/Object;)Z
  #124 = Methodref          #2.#123       // org/scalatest/tools/SocketReporterConfiguration.canEqual:(Ljava/lang/Object;)Z
  #125 = Utf8               ()V
  #126 = NameAndType        #47:#125      // "<init>":()V
  #127 = Methodref          #4.#126       // org/scalatest/tools/ReporterConfiguration."<init>":()V
  #128 = Utf8               Code
  #129 = Utf8               LocalVariableTable
  #130 = Utf8               Signature
  #131 = Utf8               MethodParameters
  #132 = Utf8               LineNumberTable
  #133 = Utf8               StackMapTable
  #134 = Utf8               SourceFile
  #135 = Utf8               RuntimeVisibleAnnotations
  #136 = Utf8               ScalaInlineInfo
  #137 = Utf8               ScalaSig
{
  private final java.lang.String host;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int port;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<scala.Tuple2<java.lang.String, java.lang.Object>> unapply(org.scalatest.tools.SocketReporterConfiguration);
    descriptor: (Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #22                 // Field org/scalatest/tools/SocketReporterConfiguration$.MODULE$:Lorg/scalatest/tools/SocketReporterConfiguration$;
         3: aload_0
         4: invokevirtual #24                 // Method org/scalatest/tools/SocketReporterConfiguration$.unapply:(Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalatest/tools/SocketReporterConfiguration;
    Signature: #15                          // (Lorg/scalatest/tools/SocketReporterConfiguration;)Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static org.scalatest.tools.SocketReporterConfiguration apply(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lorg/scalatest/tools/SocketReporterConfiguration;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #22                 // Field org/scalatest/tools/SocketReporterConfiguration$.MODULE$:Lorg/scalatest/tools/SocketReporterConfiguration$;
         3: aload_0
         4: iload_1
         5: invokevirtual #29                 // Method org/scalatest/tools/SocketReporterConfiguration$.apply:(Ljava/lang/String;I)Lorg/scalatest/tools/SocketReporterConfiguration;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  host   Ljava/lang/String;
            0       9     1  port   I
    MethodParameters:
      Name                           Flags
      host                           final
      port                           final

  public static scala.Function1<scala.Tuple2<java.lang.String, java.lang.Object>, org.scalatest.tools.SocketReporterConfiguration> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #22                 // Field org/scalatest/tools/SocketReporterConfiguration$.MODULE$:Lorg/scalatest/tools/SocketReporterConfiguration$;
         3: invokevirtual #34                 // Method org/scalatest/tools/SocketReporterConfiguration$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #32                          // ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;Lorg/scalatest/tools/SocketReporterConfiguration;>;

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.Object, org.scalatest.tools.SocketReporterConfiguration>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #22                 // Field org/scalatest/tools/SocketReporterConfiguration$.MODULE$:Lorg/scalatest/tools/SocketReporterConfiguration$;
         3: invokevirtual #38                 // Method org/scalatest/tools/SocketReporterConfiguration$.curried:()Lscala/Function1;
         6: areturn
    Signature: #36                          // ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/tools/SocketReporterConfiguration;>;>;

  public java.lang.String host();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #41                 // Field host:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public int port();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #45                 // Field port:I
         4: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public org.scalatest.tools.SocketReporterConfiguration copy(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lorg/scalatest/tools/SocketReporterConfiguration;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/scalatest/tools/SocketReporterConfiguration
         3: dup
         4: aload_1
         5: iload_2
         6: invokespecial #50                 // Method "<init>":(Ljava/lang/String;I)V
         9: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
            0      10     1  host   Ljava/lang/String;
            0      10     2  port   I
    MethodParameters:
      Name                           Flags
      host                           final
      port                           final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method host:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public int copy$default$2();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #56                 // Method port:()I
         4: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #59                 // String SocketReporterConfiguration
         2: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 41
            }
        24: aload_0
        25: invokevirtual #53                 // Method host:()Ljava/lang/String;
        28: goto          48
        31: aload_0
        32: invokevirtual #56                 // Method port:()I
        35: invokestatic  #69                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        38: goto          48
        41: iload_1
        42: invokestatic  #74                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        45: goto          48
        48: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
            0      49     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #84                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #88                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
    Signature: #79                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/tools/SocketReporterConfiguration
         4: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #94                 // String host
        26: goto          44
        29: ldc           #95                 // String port
        31: goto          44
        34: iload_1
        35: invokestatic  #74                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #97                 // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: ldc           #99                 // int -889275714
         2: istore_1
         3: iload_1
         4: aload_0
         5: invokevirtual #101                // Method productPrefix:()Ljava/lang/String;
         8: invokevirtual #103                // Method java/lang/String.hashCode:()I
        11: invokestatic  #107                // Method scala/runtime/Statics.mix:(II)I
        14: istore_1
        15: iload_1
        16: aload_0
        17: invokevirtual #53                 // Method host:()Ljava/lang/String;
        20: invokestatic  #111                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        23: invokestatic  #107                // Method scala/runtime/Statics.mix:(II)I
        26: istore_1
        27: iload_1
        28: aload_0
        29: invokevirtual #56                 // Method port:()I
        32: invokestatic  #107                // Method scala/runtime/Statics.mix:(II)I
        35: istore_1
        36: iload_1
        37: iconst_2
        38: invokestatic  #114                // Method scala/runtime/Statics.finalizeHash:(II)I
        41: ireturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #84                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #119                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     98
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/tools/SocketReporterConfiguration
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          102
        31: aload_1
        32: checkcast     #2                  // class org/scalatest/tools/SocketReporterConfiguration
        35: astore        4
        37: aload_0
        38: invokevirtual #56                 // Method port:()I
        41: aload         4
        43: invokevirtual #56                 // Method port:()I
        46: if_icmpne     94
        49: aload_0
        50: invokevirtual #53                 // Method host:()Ljava/lang/String;
        53: aload         4
        55: invokevirtual #53                 // Method host:()Ljava/lang/String;
        58: astore        5
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         5
        67: ifnull        81
        70: goto          94
        73: aload         5
        75: invokevirtual #122                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          94
        81: aload         4
        83: aload_0
        84: invokevirtual #124                // Method canEqual:(Ljava/lang/Object;)Z
        87: ifeq          94
        90: iconst_1
        91: goto          95
        94: iconst_0
        95: ifeq          102
        98: iconst_1
        99: goto          103
       102: iconst_0
       103: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/tools/SocketReporterConfiguration, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 45
          locals = [ class org/scalatest/tools/SocketReporterConfiguration, class java/lang/Object, int, class java/lang/Object, class org/scalatest/tools/SocketReporterConfiguration, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/tools/SocketReporterConfiguration, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     104     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
            0     104     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalatest.tools.SocketReporterConfiguration(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #41                 // Field host:Ljava/lang/String;
         5: aload_0
         6: iload_2
         7: putfield      #45                 // Field port:I
        10: aload_0
        11: invokespecial #127                // Method org/scalatest/tools/ReporterConfiguration."<init>":()V
        14: return
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/scalatest/tools/SocketReporterConfiguration;
            0      15     1  host   Ljava/lang/String;
            0      15     2  port   I
    MethodParameters:
      Name                           Flags
      host                           final
      port                           final
}
SourceFile: "ReporterConfiguration.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005ec!B\r\u001b\u0001j\u0001\u0003\u0002\u0003\u001d\u0001\u0005+\u0007I\u0011A\u001d\t\u0011\t\u0003!\u0011#Q\u0001\niB\u0001b\u0011\u0001\u0003\u0016\u0004%\t\u0001\u0012\u0005\t\u0011\u0002\u0011\t\u0012)A\u0005\u000b\")\u0011\n\u0001C\u0001\u0015\"9a\nAA\u0001\n\u0003y\u0005b\u0002*\u0001#\u0003%\ta\u0015\u0005\b=\u0002\t\n\u0011\"\u0001`\u0011\u001d\t\u0007!!A\u0005B\tDqA\u001b\u0001\u0002\u0002\u0013\u0005A\tC\u0004l\u0001\u0005\u0005I\u0011\u00017\t\u000fI\u0004\u0011\u0011!C!g\"9!\u0010AA\u0001\n\u0003Y\b\"CA\u0001\u0001\u0005\u0005I\u0011IA\u0002\u0011%\t9\u0001AA\u0001\n\u0003\nI\u0001C\u0005\u0002\f\u0001\t\t\u0011\"\u0011\u0002\u000e!I\u0011q\u0002\u0001\u0002\u0002\u0013\u0005\u0013\u0011C\u0004\u000b\u0003+Q\u0012\u0011!E\u00015\u0005]a!C\r\u001b\u0003\u0003E\tAGA\r\u0011\u0019I5\u0003\"\u0001\u00022!I\u00111B\n\u0002\u0002\u0013\u0015\u0013Q\u0002\u0005\n\u0003g\u0019\u0012\u0011!CA\u0003kA\u0011\"a\u000f\u0014\u0003\u0003%\t)!\u0010\t\u0013\u0005=3#!A\u0005\n\u0005E#aG*pG.,GOU3q_J$XM]\"p]\u001aLw-\u001e:bi&|gN\u0003\u0002\u001c9\u0005)Ao\\8mg*\u0011QDH\u0001\ng\u000e\fG.\u0019;fgRT\u0011aH\u0001\u0004_J<7\u0003\u0002\u0001\"K-\u0002\"AI\u0012\u000e\u0003iI!\u0001\n\u000e\u0003+I+\u0007o\u001c:uKJ\u001cuN\u001c4jOV\u0014\u0018\r^5p]B\u0011a%K\u0007\u0002O)\t\u0001&A\u0003tG\u0006d\u0017-\u0003\u0002+O\t9\u0001K]8ek\u000e$\bC\u0001\u00176\u001d\ti3G\u0004\u0002/e5\tqF\u0003\u00021c\u00051AH]8piz\u001a\u0001!C\u0001)\u0013\t!t%A\u0004qC\u000e\\\u0017mZ3\n\u0005Y:$\u0001D*fe&\fG.\u001b>bE2,\'B\u0001\u001b(\u0003\u0011Awn\u001d;\u0016\u0003i\u0002\"aO \u000f\u0005qj\u0004C\u0001\u0018(\u0013\tqt%\u0001\u0004Qe\u0016$WMZ\u0005\u0003\u0001\u0006\u0013aa\u0015;sS:<\'B\u0001 (\u0003\u0015Awn\u001d;!\u0003\u0011\u0001xN\u001d;\u0016\u0003\u0015\u0003\"A\n$\n\u0005\u001d;#aA%oi\u0006)\u0001o\u001c:uA\u00051A(\u001b8jiz\"2a\u0013\'N!\t\u0011\u0003\u0001C\u00039\u000b\u0001\u0007!\bC\u0003D\u000b\u0001\u0007Q)\u0001\u0003d_BLHcA&Q#\"9\u0001H\u0002I\u0001\u0002\u0004Q\u0004bB\"\u0007!\u0003\u0005\r!R\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00132+\u0005!&F\u0001\u001eVW\u00051\u0006CA,]\u001b\u0005A&BA-[\u0003%)hn\u00195fG.,GM\u0003\u0002\\O\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\u0005uC&!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u0006q1m\u001c9zI\u0011,g-Y;mi\u0012\u0012T#\u00011+\u0005\u0015+\u0016!\u00049s_\u0012,8\r\u001e)sK\u001aL\u00070F\u0001d!\t!\u0017.D\u0001f\u0015\t1w-\u0001\u0003mC:<\'\"\u00015\u0002\t)\fg/Y\u0005\u0003\u0001\u0016\fA\u0002\u001d:pIV\u001cG/\u0011:jif\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0002naB\u0011aE\\\u0005\u0003_\u001e\u00121!\u00118z\u0011\u001d\t8\"!AA\u0002\u0015\u000b1\u0001\u001f\u00132\u0003=\u0001(o\u001c3vGRLE/\u001a:bi>\u0014X#\u0001;\u0011\u0007UDX.D\u0001w\u0015\t9x%\u0001\u0006d_2dWm\u0019;j_:L!!\u001f<\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0003y~\u0004\"AJ?\n\u0005y<#a\u0002\"p_2,\u0017M\u001c\u0005\bc6\t\t\u00111\u0001n\u0003I\u0001(o\u001c3vGR,E.Z7f]Rt\u0015-\\3\u0015\u0007\r\f)\u0001C\u0004r\u001d\u0005\u0005\t\u0019A#\u0002\u0011!\f7\u000f[\"pI\u0016$\u0012!R\u0001\ti>\u001cFO]5oOR\t1-\u0001\u0004fcV\fGn\u001d\u000b\u0004y\u0006M\u0001bB9\u0012\u0003\u0003\u0005\r!\\\u0001\u001c\'>\u001c7.\u001a;SKB|\'\u000f^3s\u0007>tg-[4ve\u0006$\u0018n\u001c8\u0011\u0005\t\u001a2#B\n\u0002\u001c\u0005\u001d\u0002cBA\u000f\u0003GQTiS\u0007\u0003\u0003?Q1!!\t(\u0003\u001d\u0011XO\u001c;j[\u0016LA!!\n\u0002 \t\t\u0012IY:ue\u0006\u001cGOR;oGRLwN\u001c\u001a\u0011\t\u0005%\u0012qF\u0007\u0003\u0003WQ1!!\fh\u0003\tIw.C\u00027\u0003W!\"!a\u0006\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u000b-\u000b9$!\u000f\t\u000ba2\u0002\u0019\u0001\u001e\t\u000b\r3\u0002\u0019A#\u0002\u000fUt\u0017\r\u001d9msR!\u0011qHA&!\u00151\u0013\u0011IA#\u0013\r\t\u0019e\n\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u000b\u0019\n9EO#\n\u0007\u0005%sE\u0001\u0004UkBdWM\r\u0005\t\u0003\u001b:\u0012\u0011!a\u0001\u0017\u0006\u0019\u0001\u0010\n\u0019\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\u0005M\u0003c\u00013\u0002V%\u0019\u0011qK3\u0003\r=\u0013\'.Z2u\u0001"
    )
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 00 00 0F 00 2F 00 30 00 00 59 00 5A 00 00 2E
   00 1B 00 00 33 00 27 00 00 36 00 2B 00 00 78 00
   5A 00 00 62 00 2B 00 00 09 00 27 00 00 0B 00 2B
   00 00 3C 00 2B 00 00 3D 00 3E 00 00 5C 00 5D 00
   00 4D 00 4E 00 00 39 00 27 00 00 73 00 27 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
