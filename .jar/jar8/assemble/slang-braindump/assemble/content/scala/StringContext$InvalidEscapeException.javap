Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/StringContext$InvalidEscapeException.class
  Last modified May 29, 2022; size 1639 bytes
  SHA-256 checksum ef81cc7cd2d74c6593b9052119a45239912f45fd840d797bddffc363ef5fa837
  Compiled from "StringContext.scala"
public class scala.StringContext$InvalidEscapeException extends java.lang.IllegalArgumentException
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/StringContext$InvalidEscapeException
  super_class: #4                         // java/lang/IllegalArgumentException
  interfaces: 0, fields: 1, methods: 2, attributes: 4
Constant pool:
   #1 = Utf8               scala/StringContext$InvalidEscapeException
   #2 = Class              #1             // scala/StringContext$InvalidEscapeException
   #3 = Utf8               java/lang/IllegalArgumentException
   #4 = Class              #3             // java/lang/IllegalArgumentException
   #5 = Utf8               StringContext.scala
   #6 = Utf8               scala/StringContext
   #7 = Class              #6             // scala/StringContext
   #8 = Utf8               InvalidEscapeException
   #9 = Utf8               index
  #10 = Utf8               I
  #11 = Utf8               ()I
  #12 = NameAndType        #9:#10         // index:I
  #13 = Fieldref           #2.#12         // scala/StringContext$InvalidEscapeException.index:I
  #14 = Utf8               this
  #15 = Utf8               Lscala/StringContext$InvalidEscapeException;
  #16 = Utf8               <init>
  #17 = Utf8               (Ljava/lang/String;I)V
  #18 = Utf8               str
  #19 = Utf8               java/lang/StringBuilder
  #20 = Class              #19            // java/lang/StringBuilder
  #21 = Integer            51
  #22 = Utf8               (I)V
  #23 = NameAndType        #16:#22        // "<init>":(I)V
  #24 = Methodref          #20.#23        // java/lang/StringBuilder."<init>":(I)V
  #25 = Utf8               invalid escape
  #26 = String             #25            // invalid escape
  #27 = Utf8               append
  #28 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #29 = NameAndType        #27:#28        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #30 = Methodref          #20.#29        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #31 = Utf8               scala/Predef$
  #32 = Class              #31            // scala/Predef$
  #33 = Utf8               MODULE$
  #34 = Utf8               Lscala/Predef$;
  #35 = NameAndType        #33:#34        // MODULE$:Lscala/Predef$;
  #36 = Fieldref           #32.#35        // scala/Predef$.MODULE$:Lscala/Predef$;
  #37 = Utf8               java/lang/String
  #38 = Class              #37            // java/lang/String
  #39 = Utf8               length
  #40 = NameAndType        #39:#11        // length:()I
  #41 = Methodref          #38.#40        // java/lang/String.length:()I
  #42 = Utf8               require
  #43 = Utf8               (Z)V
  #44 = NameAndType        #42:#43        // require:(Z)V
  #45 = Methodref          #32.#44        // scala/Predef$.require:(Z)V
  #46 = Utf8               [\\b, \\t, \\n, \\f, \\r, \\\\, \\\", \\\', \\uxxxx]
  #47 = String             #46            // [\\b, \\t, \\n, \\f, \\r, \\\\, \\\", \\\', \\uxxxx]
  #48 = Utf8               at terminal
  #49 = String             #48            // at terminal
  #50 = Integer            18
  #51 = Utf8               \'\\
  #52 = String             #51            // \'\\
  #53 = Utf8               charAt
  #54 = Utf8               (I)C
  #55 = NameAndType        #53:#54        // charAt:(I)C
  #56 = Methodref          #38.#55        // java/lang/String.charAt:(I)C
  #57 = Utf8               (C)Ljava/lang/StringBuilder;
  #58 = NameAndType        #27:#57        // append:(C)Ljava/lang/StringBuilder;
  #59 = Methodref          #20.#58        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #60 = Utf8               \' not one of
  #61 = String             #60            // \' not one of
  #62 = Utf8                at
  #63 = String             #62            //  at
  #64 = Utf8               toString
  #65 = Utf8               ()Ljava/lang/String;
  #66 = NameAndType        #64:#65        // toString:()Ljava/lang/String;
  #67 = Methodref          #20.#66        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #68 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #69 = NameAndType        #27:#68        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #70 = Methodref          #20.#69        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #71 = Utf8                index
  #72 = String             #71            //  index
  #73 = Utf8               (I)Ljava/lang/StringBuilder;
  #74 = NameAndType        #27:#73        // append:(I)Ljava/lang/StringBuilder;
  #75 = Methodref          #20.#74        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #76 = Utf8                in \"
  #77 = String             #76            //  in \"
  #78 = Utf8               \". Use \\\\ for literal \\.
  #79 = String             #78            // \". Use \\\\ for literal \\.
  #80 = Utf8               (Ljava/lang/String;)V
  #81 = NameAndType        #16:#80        // "<init>":(Ljava/lang/String;)V
  #82 = Methodref          #4.#81         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #83 = Utf8               ok
  #84 = Utf8               Ljava/lang/String;
  #85 = Utf8               apply$extension_i
  #86 = Utf8               Code
  #87 = Utf8               LineNumberTable
  #88 = Utf8               LocalVariableTable
  #89 = Utf8               StackMapTable
  #90 = Utf8               MethodParameters
  #91 = Utf8               InnerClasses
  #92 = Utf8               SourceFile
  #93 = Utf8               ScalaInlineInfo
  #94 = Utf8               Scala
{
  private final int index;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public int index();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field index:I
         4: ireturn
      LineNumberTable:
        line 324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/StringContext$InvalidEscapeException;

  public scala.StringContext$InvalidEscapeException(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=3
         0: aload_0
         1: iload_2
         2: putfield      #13                 // Field index:I
         5: aload_0
         6: new           #20                 // class java/lang/StringBuilder
         9: dup
        10: ldc           #21                 // int 51
        12: invokespecial #24                 // Method java/lang/StringBuilder."<init>":(I)V
        15: ldc           #26                 // String invalid escape
        17: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: getstatic     #36                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        23: iload_2
        24: iconst_0
        25: if_icmplt     40
        28: iload_2
        29: aload_1
        30: invokevirtual #41                 // Method java/lang/String.length:()I
        33: if_icmpge     40
        36: iconst_1
        37: goto          41
        40: iconst_0
        41: invokevirtual #45                 // Method scala/Predef$.require:(Z)V
        44: ldc           #47                 // String [\\b, \\t, \\n, \\f, \\r, \\\\, \\\", \\\', \\uxxxx]
        46: astore_3
        47: iload_2
        48: aload_1
        49: invokevirtual #41                 // Method java/lang/String.length:()I
        52: iconst_1
        53: isub
        54: if_icmpne     62
        57: ldc           #49                 // String at terminal
        59: goto          107
        62: new           #20                 // class java/lang/StringBuilder
        65: dup
        66: ldc           #50                 // int 18
        68: invokespecial #24                 // Method java/lang/StringBuilder."<init>":(I)V
        71: ldc           #52                 // String \'\\
        73: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        76: iload_2
        77: iconst_1
        78: iadd
        79: istore        4
        81: aload_1
        82: iload         4
        84: invokevirtual #56                 // Method java/lang/String.charAt:(I)C
        87: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        90: ldc           #61                 // String \' not one of
        92: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: aload_3
        96: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        99: ldc           #63                 // String  at
       101: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       104: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       107: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       110: ldc           #72                 // String  index
       112: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       115: iload_2
       116: invokevirtual #75                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       119: ldc           #77                 // String  in \"
       121: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       124: aload_1
       125: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       128: ldc           #79                 // String \". Use \\\\ for literal \\.
       130: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       133: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       136: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       139: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ this, class java/lang/String, int ]
          stack = [ this, class java/lang/StringBuilder, class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ this, class java/lang/String, int ]
          stack = [ this, class java/lang/StringBuilder, class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ this, class java/lang/String, int, class java/lang/String ]
          stack = [ this, class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ this, class java/lang/String, int, class java/lang/String ]
          stack = [ this, class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 324: 0
        line 329: 6
        line 325: 15
        line 326: 20
        line 327: 44
        line 328: 47
        line 329: 110
        line 324: 139
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           47      60     3    ok   Ljava/lang/String;
            0     140     0  this   Lscala/StringContext$InvalidEscapeException;
            0     140     1   str   Ljava/lang/String;
            0     140     2 index   I
           81       6     4 apply$extension_i   I
    MethodParameters:
      Name                           Flags
      str                            final
      index                          final
}
InnerClasses:
  public static #8= #2 of #7;             // InvalidEscapeException=class scala/StringContext$InvalidEscapeException of class scala/StringContext
SourceFile: "StringContext.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 00 00 02 00 10 00 11 00 00 09 00 0B 00
  Scala: length = 0x0 (unknown attribute)

