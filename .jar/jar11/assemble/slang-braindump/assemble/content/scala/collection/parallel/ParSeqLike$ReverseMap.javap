Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParSeqLike$ReverseMap.class
  Last modified May 29, 2022; size 7895 bytes
  SHA-256 checksum 53e45e7493534192d6235f9f8d9778c2d92eead837cec524e0b26080a1e5b79e
  Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$ReverseMap<S extends java.lang.Object, That extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeTransformer<scala.collection.parallel.Combiner<S, That>, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ReverseMap<S, That>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParSeqLike$ReverseMap
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 28, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParSeqLike$ReverseMap
    #2 = Class              #1            // scala/collection/parallel/ParSeqLike$ReverseMap
    #3 = Utf8               <S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeTransformer<Lscala/collection/parallel/Combiner<TS;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer
    #7 = Class              #6            // scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer
    #8 = Utf8               ParSeqLike.scala
    #9 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #10 = Class              #9            // scala/collection/parallel/ParIterableLike$Accessor
   #11 = Utf8               scala/collection/parallel/ParIterableLike
   #12 = Class              #11           // scala/collection/parallel/ParIterableLike
   #13 = Utf8               Accessor
   #14 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #16 = Utf8               StrictSplitterCheckTask
   #17 = Utf8               scala/collection/parallel/ParSeqLike
   #18 = Class              #17           // scala/collection/parallel/ParSeqLike
   #19 = Utf8               ParSeqLikeTransformer
   #20 = Utf8               ReverseMap
   #21 = Utf8               f
   #22 = Utf8               Lscala/Function1;
   #23 = Utf8               Lscala/Function1<TT;TS;>;
   #24 = Utf8               pbf
   #25 = Utf8               Lscala/Function0;
   #26 = Utf8               Lscala/Function0<Lscala/collection/parallel/Combiner<TS;TThat;>;>;
   #27 = Utf8               pit
   #28 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #29 = Utf8               Lscala/collection/parallel/SeqSplitter<TT;>;
   #30 = Utf8               result
   #31 = Utf8               Lscala/collection/parallel/Combiner;
   #32 = Utf8               Lscala/collection/parallel/Combiner<TS;TThat;>;
   #33 = Utf8               throwable
   #34 = Utf8               Ljava/lang/Throwable;
   #35 = Utf8               $outer
   #36 = Utf8               Lscala/collection/parallel/ParSeqLike;
   #37 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #38 = Utf8               ()Ljava/lang/String;
   #39 = Utf8               toString
   #40 = NameAndType        #39:#38       // toString:()Ljava/lang/String;
   #41 = Methodref          #5.#40        // java/lang/Object.toString:()Ljava/lang/String;
   #42 = Utf8               this
   #43 = Utf8               Lscala/collection/parallel/ParSeqLike$ReverseMap;
   #44 = Utf8               shouldSplitFurther
   #45 = Utf8               ()Z
   #46 = Utf8               shouldSplitFurther$
   #47 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #48 = NameAndType        #46:#47       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #49 = InterfaceMethodref #10.#48       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #50 = Utf8               split
   #51 = Utf8               ()Lscala/collection/immutable/Seq;
   #52 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<TS;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;>;>;
   #53 = Utf8               split$
   #54 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/immutable/Seq;
   #55 = NameAndType        #53:#54       // split$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/immutable/Seq;
   #56 = InterfaceMethodref #10.#55       // scala/collection/parallel/ParIterableLike$Accessor.split$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/immutable/Seq;
   #57 = Utf8               signalAbort
   #58 = Utf8               ()V
   #59 = Utf8               signalAbort$
   #60 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #61 = NameAndType        #59:#60       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #62 = InterfaceMethodref #10.#61       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #63 = Utf8               toString$
   #64 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #65 = NameAndType        #63:#64       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #66 = InterfaceMethodref #10.#65       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #67 = Utf8               requiresStrictSplitters
   #68 = Utf8               requiresStrictSplitters$
   #69 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #70 = NameAndType        #68:#69       // requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #71 = InterfaceMethodref #15.#70       // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #72 = Utf8               repr
   #73 = Utf8               ()Ljava/lang/Object;
   #74 = Utf8               scala/collection/parallel/Task
   #75 = Class              #74           // scala/collection/parallel/Task
   #76 = Utf8               repr$
   #77 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #78 = NameAndType        #76:#77       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #79 = InterfaceMethodref #75.#78       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #80 = Utf8               forwardThrowable
   #81 = Utf8               forwardThrowable$
   #82 = Utf8               (Lscala/collection/parallel/Task;)V
   #83 = NameAndType        #81:#82       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #84 = InterfaceMethodref #75.#83       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #85 = Utf8               tryLeaf
   #86 = Utf8               (Lscala/Option;)V
   #87 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<TS;TThat;>;>;)V
   #88 = Utf8               lastres
   #89 = Utf8               tryLeaf$
   #90 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #91 = NameAndType        #89:#90       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #92 = InterfaceMethodref #75.#91       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #93 = Utf8               Lscala/Option;
   #94 = Utf8               tryMerge
   #95 = Utf8               (Ljava/lang/Object;)V
   #96 = Utf8               t
   #97 = Utf8               tryMerge$
   #98 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #99 = NameAndType        #97:#98       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #100 = InterfaceMethodref #75.#99       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #101 = Utf8               Ljava/lang/Object;
  #102 = Utf8               mergeThrowables
  #103 = Utf8               (Lscala/collection/parallel/Task<**>;)V
  #104 = Utf8               that
  #105 = Utf8               mergeThrowables$
  #106 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #107 = NameAndType        #105:#106     // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #108 = InterfaceMethodref #75.#107      // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #109 = Utf8               Lscala/collection/parallel/Task;
  #110 = Utf8               ()Ljava/lang/Throwable;
  #111 = NameAndType        #33:#34       // throwable:Ljava/lang/Throwable;
  #112 = Fieldref           #2.#111       // scala/collection/parallel/ParSeqLike$ReverseMap.throwable:Ljava/lang/Throwable;
  #113 = Utf8               throwable_$eq
  #114 = Utf8               (Ljava/lang/Throwable;)V
  #115 = Utf8               x$1
  #116 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #117 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TT;>;
  #118 = NameAndType        #27:#28       // pit:Lscala/collection/parallel/SeqSplitter;
  #119 = Fieldref           #2.#118       // scala/collection/parallel/ParSeqLike$ReverseMap.pit:Lscala/collection/parallel/SeqSplitter;
  #120 = Utf8               ()Lscala/collection/parallel/Combiner;
  #121 = Utf8               ()Lscala/collection/parallel/Combiner<TS;TThat;>;
  #122 = NameAndType        #30:#31       // result:Lscala/collection/parallel/Combiner;
  #123 = Fieldref           #2.#122       // scala/collection/parallel/ParSeqLike$ReverseMap.result:Lscala/collection/parallel/Combiner;
  #124 = Utf8               result_$eq
  #125 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #126 = Utf8               (Lscala/collection/parallel/Combiner<TS;TThat;>;)V
  #127 = Utf8               leaf
  #128 = Utf8               prev
  #129 = NameAndType        #27:#116      // pit:()Lscala/collection/parallel/SeqSplitter;
  #130 = Methodref          #2.#129       // scala/collection/parallel/ParSeqLike$ReverseMap.pit:()Lscala/collection/parallel/SeqSplitter;
  #131 = NameAndType        #21:#22       // f:Lscala/Function1;
  #132 = Fieldref           #2.#131       // scala/collection/parallel/ParSeqLike$ReverseMap.f:Lscala/Function1;
  #133 = NameAndType        #24:#25       // pbf:Lscala/Function0;
  #134 = Fieldref           #2.#133       // scala/collection/parallel/ParSeqLike$ReverseMap.pbf:Lscala/Function0;
  #135 = Utf8               scala/Function0
  #136 = Class              #135          // scala/Function0
  #137 = Utf8               apply
  #138 = NameAndType        #137:#73      // apply:()Ljava/lang/Object;
  #139 = InterfaceMethodref #136.#138     // scala/Function0.apply:()Ljava/lang/Object;
  #140 = Utf8               scala/collection/parallel/Combiner
  #141 = Class              #140          // scala/collection/parallel/Combiner
  #142 = Utf8               scala/collection/parallel/SeqSplitter
  #143 = Class              #142          // scala/collection/parallel/SeqSplitter
  #144 = Utf8               reverseMap2combiner
  #145 = Utf8               (Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #146 = NameAndType        #144:#145     // reverseMap2combiner:(Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #147 = InterfaceMethodref #143.#146     // scala/collection/parallel/SeqSplitter.reverseMap2combiner:(Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #148 = NameAndType        #124:#125     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #149 = Methodref          #2.#148       // scala/collection/parallel/ParSeqLike$ReverseMap.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #150 = Utf8               newSubtask
  #151 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$ReverseMap;
  #152 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;
  #153 = Utf8               p
  #154 = Utf8               scala$collection$parallel$ParSeqLike$ReverseMap$$$outer
  #155 = Utf8               ()Lscala/collection/parallel/ParSeqLike;
  #156 = NameAndType        #154:#155     // scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #157 = Methodref          #2.#156       // scala/collection/parallel/ParSeqLike$ReverseMap.scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #158 = Utf8               down
  #159 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
  #160 = NameAndType        #158:#159     // down:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
  #161 = InterfaceMethodref #18.#160      // scala/collection/parallel/ParSeqLike.down:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
  #162 = Utf8               <init>
  #163 = Utf8               (Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
  #164 = NameAndType        #162:#163     // "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
  #165 = Methodref          #2.#164       // scala/collection/parallel/ParSeqLike$ReverseMap."<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
  #166 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #167 = Utf8               merge
  #168 = Utf8               (Lscala/collection/parallel/ParSeqLike$ReverseMap;)V
  #169 = Utf8               (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;)V
  #170 = NameAndType        #30:#120      // result:()Lscala/collection/parallel/Combiner;
  #171 = Methodref          #2.#170       // scala/collection/parallel/ParSeqLike$ReverseMap.result:()Lscala/collection/parallel/Combiner;
  #172 = Utf8               combine
  #173 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #174 = NameAndType        #172:#173     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #175 = InterfaceMethodref #141.#174     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #176 = NameAndType        #35:#36       // $outer:Lscala/collection/parallel/ParSeqLike;
  #177 = Fieldref           #2.#176       // scala/collection/parallel/ParSeqLike$ReverseMap.$outer:Lscala/collection/parallel/ParSeqLike;
  #178 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #179 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #180 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #181 = NameAndType        #167:#168     // merge:(Lscala/collection/parallel/ParSeqLike$ReverseMap;)V
  #182 = Methodref          #2.#181       // scala/collection/parallel/ParSeqLike$ReverseMap.merge:(Lscala/collection/parallel/ParSeqLike$ReverseMap;)V
  #183 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #184 = NameAndType        #150:#151     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$ReverseMap;
  #185 = Methodref          #2.#184       // scala/collection/parallel/ParSeqLike$ReverseMap.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$ReverseMap;
  #186 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #187 = Utf8               (Lscala/Function1<TT;TS;>;Lscala/Function0<Lscala/collection/parallel/Combiner<TS;TThat;>;>;Lscala/collection/parallel/SeqSplitter<TT;>;)V
  #188 = NameAndType        #162:#58      // "<init>":()V
  #189 = Methodref          #5.#188       // java/lang/Object."<init>":()V
  #190 = Utf8               $init$
  #191 = NameAndType        #190:#82      // $init$:(Lscala/collection/parallel/Task;)V
  #192 = InterfaceMethodref #75.#191      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #193 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #194 = NameAndType        #190:#193     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #195 = InterfaceMethodref #15.#194      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #196 = NameAndType        #190:#60      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #197 = InterfaceMethodref #10.#196      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #198 = Utf8               Signature
  #199 = Utf8               Code
  #200 = Utf8               LineNumberTable
  #201 = Utf8               LocalVariableTable
  #202 = Utf8               MethodParameters
  #203 = Utf8               StackMapTable
  #204 = Utf8               InnerClasses
  #205 = Utf8               SourceFile
  #206 = Utf8               ScalaInlineInfo
  #207 = Utf8               Scala
{
  private final scala.Function1<T, S> f;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Lscala/Function1<TT;TS;>;

  private final scala.Function0<scala.collection.parallel.Combiner<S, That>> pbf;
    descriptor: Lscala/Function0;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #26                          // Lscala/Function0<Lscala/collection/parallel/Combiner<TS;TThat;>;>;

  private final scala.collection.parallel.SeqSplitter<T> pit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #29                          // Lscala/collection/parallel/SeqSplitter<TT;>;

  private volatile scala.collection.parallel.Combiner<S, That> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #32                          // Lscala/collection/parallel/Combiner<TS;TThat;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParSeqLike $outer;
    descriptor: Lscala/collection/parallel/ParSeqLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #41                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #49                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.collection.parallel.Combiner<S, That>, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ReverseMap<S, That>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.split$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
    Signature: #52                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<TS;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;>;>;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #66                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
         4: ireturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #84                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<S, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #92                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       6     1 lastres   Lscala/Option;
    Signature: #87                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TS;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #100                // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #108                // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #103                         // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #112                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #112                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.SeqSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #119                // Field pit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
    Signature: #117                         // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public scala.collection.parallel.Combiner<S, That> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #123                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 548: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
    Signature: #121                         // ()Lscala/collection/parallel/Combiner<TS;TThat;>;

  public void result_$eq(scala.collection.parallel.Combiner<S, That>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #123                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 548: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #126                         // (Lscala/collection/parallel/Combiner<TS;TThat;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<S, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #130                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         5: aload_0
         6: getfield      #132                // Field f:Lscala/Function1;
         9: aload_0
        10: getfield      #134                // Field pbf:Lscala/Function0;
        13: invokeinterface #139,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        18: checkcast     #141                // class scala/collection/parallel/Combiner
        21: invokeinterface #147,  3          // InterfaceMethod scala/collection/parallel/SeqSplitter.reverseMap2combiner:(Lscala/Function1;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        26: invokevirtual #149                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        29: return
      LineNumberTable:
        line 549: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0      30     1  prev   Lscala/Option;
    Signature: #87                          // (Lscala/Option<Lscala/collection/parallel/Combiner<TS;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ReverseMap<S, That> newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$ReverseMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #2                  // class scala/collection/parallel/ParSeqLike$ReverseMap
         3: dup
         4: aload_0
         5: invokevirtual #157                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
         8: aload_0
         9: getfield      #132                // Field f:Lscala/Function1;
        12: aload_0
        13: getfield      #134                // Field pbf:Lscala/Function0;
        16: aload_0
        17: invokevirtual #157                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
        20: aload_1
        21: invokeinterface #161,  2          // InterfaceMethod scala/collection/parallel/ParSeqLike.down:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/SeqSplitter;
        26: invokespecial #165                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
        29: areturn
      LineNumberTable:
        line 550: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0      30     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #152                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public void merge(scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ReverseMap<S, That>);
    descriptor: (Lscala/collection/parallel/ParSeqLike$ReverseMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #171                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_0
         6: invokevirtual #171                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #175,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #149                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 551: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0      18     1  that   Lscala/collection/parallel/ParSeqLike$ReverseMap;
    Signature: #169                         // (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$ReverseMap$$$outer();
    descriptor: ()Lscala/collection/parallel/ParSeqLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #177                // Field $outer:Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #157                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #157                // Method scala$collection$parallel$ParSeqLike$ReverseMap$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$ReverseMap
         5: invokevirtual #182                // Method merge:(Lscala/collection/parallel/ParSeqLike$ReverseMap;)V
         8: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #185                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParSeqLike$ReverseMap;
         5: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #141                // class scala/collection/parallel/Combiner
         5: invokevirtual #149                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #171                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public scala.collection.parallel.IterableSplitter pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;

  public scala.collection.parallel.ParSeqLike$ReverseMap(scala.Function1<T, S>, scala.Function0<scala.collection.parallel.Combiner<S, That>>, scala.collection.parallel.SeqSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParSeqLike;Lscala/Function1;Lscala/Function0;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_2
         2: putfield      #132                // Field f:Lscala/Function1;
         5: aload_0
         6: aload_3
         7: putfield      #134                // Field pbf:Lscala/Function0;
        10: aload_0
        11: aload         4
        13: putfield      #119                // Field pit:Lscala/collection/parallel/SeqSplitter;
        16: aload_1
        17: ifnonnull     22
        20: aconst_null
        21: athrow
        22: aload_0
        23: aload_1
        24: putfield      #177                // Field $outer:Lscala/collection/parallel/ParSeqLike;
        27: aload_0
        28: invokespecial #189                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #192                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        35: aload_0
        36: invokestatic  #195                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        39: aload_0
        40: invokestatic  #197                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        43: aload_0
        44: aconst_null
        45: putfield      #123                // Field result:Lscala/collection/parallel/Combiner;
        48: return
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 546: 0
        line 547: 27
        line 548: 43
        line 546: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/collection/parallel/ParSeqLike$ReverseMap;
            0      49     1 $outer   Lscala/collection/parallel/ParSeqLike;
            0      49     2     f   Lscala/Function1;
            0      49     3   pbf   Lscala/Function0;
            0      49     4   pit   Lscala/collection/parallel/SeqSplitter;
    Signature: #187                         // (Lscala/Function1<TT;TS;>;Lscala/Function0<Lscala/collection/parallel/Combiner<TS;TThat;>;>;Lscala/collection/parallel/SeqSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      f                              final
      pbf                            final
      pit                            final
}
InnerClasses:
  public #13= #10 of #12;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #16= #15 of #12;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #19= #7 of #18;                  // ParSeqLikeTransformer=class scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer of class scala/collection/parallel/ParSeqLike
  public #20= #2 of #18;                  // ReverseMap=class scala/collection/parallel/ParSeqLike$ReverseMap of class scala/collection/parallel/ParSeqLike
Signature: #3                           // <S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeTransformer<Lscala/collection/parallel/Combiner<TS;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ReverseMap<TS;TThat;>;>;
SourceFile: "ParSeqLike.scala"
  ScalaInlineInfo: length = 0x90 (unknown attribute)
   01 00 00 1C 00 A2 00 A3 00 00 50 00 3A 00 00 7F
   00 56 00 00 A7 00 5F 00 00 A7 00 A8 00 00 66 00
   52 00 00 96 00 B7 00 00 96 00 97 00 00 1B 00 BA
   00 00 1B 00 74 00 00 48 00 49 00 00 43 00 2D 00
   00 1E 00 49 00 00 1E 00 78 00 00 7C 00 5F 00 00
   7C 00 7D 00 00 B2 00 B3 00 00 25 00 26 01 00 B4
   00 B3 00 00 9A 00 9B 00 00 2C 00 2D 00 00 39 00
   3A 00 00 32 00 33 00 00 21 00 6E 00 00 71 00 72
   00 00 27 00 26 00 00 55 00 56 00 00 5E 00 5F 00

  Scala: length = 0x0 (unknown attribute)

