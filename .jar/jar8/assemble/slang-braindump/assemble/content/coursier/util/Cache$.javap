Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/util/Cache$.class
  Last modified May 29, 2022; size 1719 bytes
  SHA-256 checksum 3a39dc311e6126d7a960a8e637af1e035effd831c4981279b6f0ba653c2f494e
  Compiled from "Cache.scala"
public final class coursier.util.Cache$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/Cache$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               coursier/util/Cache$
   #2 = Class              #1             // coursier/util/Cache$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               Cache.scala
   #6 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType
   #7 = Class              #6             // concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType
   #8 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
   #9 = Class              #8             // concurrentrefhashmap/ConcurrentReferenceHashMap
  #10 = Utf8               ReferenceType
  #11 = Utf8               MODULE$
  #12 = Utf8               Lcoursier/util/Cache$;
  #13 = Utf8               <clinit>
  #14 = Utf8               ()V
  #15 = Utf8               <init>
  #16 = NameAndType        #15:#14        // "<init>":()V
  #17 = Methodref          #2.#16         // coursier/util/Cache$."<init>":()V
  #18 = NameAndType        #11:#12        // MODULE$:Lcoursier/util/Cache$;
  #19 = Fieldref           #2.#18         // coursier/util/Cache$.MODULE$:Lcoursier/util/Cache$;
  #20 = Utf8               createCache
  #21 = Utf8               ()Ljava/util/concurrent/ConcurrentMap;
  #22 = Utf8               <T:Ljava/lang/Object;>()Ljava/util/concurrent/ConcurrentMap<TT;TT;>;
  #23 = Utf8               WEAK
  #24 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #25 = NameAndType        #23:#24        // WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #26 = Fieldref           #7.#25         // concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #27 = Utf8               (ILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;)V
  #28 = NameAndType        #15:#27        // "<init>":(ILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;)V
  #29 = Methodref          #9.#28         // concurrentrefhashmap/ConcurrentReferenceHashMap."<init>":(ILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;)V
  #30 = Utf8               this
  #31 = Utf8               cacheMethod
  #32 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;)Ljava/lang/Object;
  #33 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TT;TT;>;TT;)TT;
  #34 = Utf8               instanceCache
  #35 = Utf8               t
  #36 = Utf8               java/util/concurrent/ConcurrentMap
  #37 = Class              #36            // java/util/concurrent/ConcurrentMap
  #38 = Utf8               get
  #39 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #40 = NameAndType        #38:#39        // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #41 = InterfaceMethodref #37.#40        // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
  #42 = Utf8               putIfAbsent
  #43 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #44 = NameAndType        #42:#43        // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #45 = InterfaceMethodref #37.#44        // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #46 = Utf8               previous
  #47 = Utf8               Ljava/lang/Object;
  #48 = Utf8               first
  #49 = Utf8               Ljava/util/concurrent/ConcurrentMap;
  #50 = Methodref          #4.#16         // java/lang/Object."<init>":()V
  #51 = Utf8               Code
  #52 = Utf8               LineNumberTable
  #53 = Utf8               LocalVariableTable
  #54 = Utf8               Signature
  #55 = Utf8               StackMapTable
  #56 = Utf8               MethodParameters
  #57 = Utf8               InnerClasses
  #58 = Utf8               SourceFile
  #59 = Utf8               ScalaInlineInfo
  #60 = Utf8               Scala
{
  public static final coursier.util.Cache$ MODULE$;
    descriptor: Lcoursier/util/Cache$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/util/Cache$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Lcoursier/util/Cache$;
        10: return
      LineNumberTable:
        line 7: 0

  public <T extends java.lang.Object> java.util.concurrent.ConcurrentMap<T, T> createCache();
    descriptor: ()Ljava/util/concurrent/ConcurrentMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #9                  // class concurrentrefhashmap/ConcurrentReferenceHashMap
         3: dup
         4: bipush        8
         6: getstatic     #26                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
         9: getstatic     #26                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
        12: invokespecial #29                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap."<init>":(ILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;)V
        15: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/util/Cache$;
    Signature: #22                          // <T:Ljava/lang/Object;>()Ljava/util/concurrent/ConcurrentMap<TT;TT;>;

  public <T extends java.lang.Object> T cacheMethod(java.util.concurrent.ConcurrentMap<T, T>, T);
    descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: aload_1
         1: aload_2
         2: invokeinterface #41,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
         7: astore_3
         8: aload_3
         9: ifnonnull     36
        12: aload_1
        13: aload_2
        14: aload_2
        15: invokeinterface #45,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        20: astore        4
        22: aload         4
        24: ifnonnull     31
        27: aload_2
        28: goto          33
        31: aload         4
        33: goto          37
        36: aload_3
        37: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 11: 0
        line 12: 8
        line 13: 12
        line 14: 22
        line 16: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      11     4 previous   Ljava/lang/Object;
            8      29     3 first   Ljava/lang/Object;
            0      38     0  this   Lcoursier/util/Cache$;
            0      38     1 instanceCache   Ljava/util/concurrent/ConcurrentMap;
            0      38     2     t   Ljava/lang/Object;
    Signature: #33                          // <T:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TT;TT;>;TT;)TT;
    MethodParameters:
      Name                           Flags
      instanceCache                  final
      t                              final

  private coursier.util.Cache$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #50                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 18: 0
        line 7: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/Cache$;
}
InnerClasses:
  public static final #10= #7 of #9;      // ReferenceType=class concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType of class concurrentrefhashmap/ConcurrentReferenceHashMap
SourceFile: "Cache.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 0F 00 0E 01 00 1F 00 20 01 00 14
   00 15 01
  Scala: length = 0x0 (unknown attribute)

