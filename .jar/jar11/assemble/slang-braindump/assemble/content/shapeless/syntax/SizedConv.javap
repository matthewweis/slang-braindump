Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/shapeless/syntax/SizedConv.class
  Last modified May 29, 2022; size 3650 bytes
  SHA-256 checksum a0e355a36656274ae70ab8a094d278e366667e340666c64d271d004964405491
  Compiled from "sized.scala"
public final class shapeless.syntax.SizedConv<Repr extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/syntax/SizedConv
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               shapeless/syntax/SizedConv
    #2 = Class              #1            // shapeless/syntax/SizedConv
    #3 = Utf8               <Repr:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               sized.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005Q4A!\u0003\u0006\u0003\u001f!Aq\u0003\u0001B\u0001B\u0003%\u0001\u0004\u0003\u0005$\u0001\t\u0005\t\u0015a\u0003%\u0011!i\u0003A!A!\u0002\u0017q\u0003\"B\u0019\u0001\t\u0003\u0011\u0004\"B\u001d\u0001\t\u0003Q\u0004\"B*\u0001\t\u0003!\u0006\"B*\u0001\t\u0003\u0001\u0007\"\u00027\u0001\t\u0003i\'!C*ju\u0016$7i\u001c8w\u0015\tYA\"\u0001\u0004ts:$\u0018\r\u001f\u0006\u0002\u001b\u0005I1\u000f[1qK2,7o]\u0002\u0001+\t\u0001\"d\u0005\u0002\u0001#A\u0011!#F\u0007\u0002\')\tA#A\u0003tG\u0006d\u0017-\u0003\u0002\u0017\'\t1\u0011I\\=SK\u001a\f\u0011A\u001d\t\u00033ia\u0001\u0001B\u0003\u001c\u0001\t\u0007AD\u0001\u0003SKB\u0014\u0018CA\u000f!!\t\u0011b$\u0003\u0002 \'\t9aj\u001c;iS:<\u0007C\u0001\n\"\u0013\t\u00113CA\u0002B]f\f1![5m!\r)\u0013\u0006\u0007\b\u0003M\u001dj\u0011\u0001D\u0005\u0003Q1\tq\u0001]1dW\u0006<W-\u0003\u0002+W\t\t\u0012j\u001d*fOVd\u0017M]%uKJ\f\'\r\\3\n\u00051b!!F*dC2\fg+\u001a:tS>t7\u000b]3dS\u001aL7m]\u0001\u0004KZ\u0014\u0004c\u0001\u001401%\u0011\u0001\u0007\u0004\u0002\u0013\u0003\u0012$\u0017\u000e^5wK\u000e{G\u000e\\3di&|g.\u0001\u0004=S:LGO\u0010\u000b\u0003ga\"2\u0001\u000e\u001c8!\r)\u0004\u0001G\u0007\u0002\u0015!)1\u0005\u0002a\u0002I!)Q\u0006\u0002a\u0002]!)q\u0003\u0002a\u00011\u0005I1\r[3dWNK\'0Z\u000b\u0003w5#\"\u0001P \u0011\u0005Ii\u0014B\u0001 \u0014\u0005\u001d\u0011un\u001c7fC:DQ\u0001Q\u0003A\u0004\u0005\u000bQ\u0001^8J]R\u00042AQ%M\u001d\t\u0019eI\u0004\u0002\'\t&\u0011Q\tD\u0001\u0004_B\u001c\u0018BA$I\u0003\rq\u0017\r\u001e\u0006\u0003\u000b2I!AS&\u0003\u000bQ{\u0017J\u001c;\u000b\u0005\u001dC\u0005CA\rN\t\u0015qUA1\u0001P\u0005\u0005a\u0015CA\u000fQ!\t1\u0013+\u0003\u0002S\u0019\t\u0019a*\u0019;\u0002\u000bML\'0\u001a3\u0016\u0005UkFC\u0001,_!\r\u0011r+W\u0005\u00031N\u0011aa\u00149uS>t\u0007\u0003\u0002\u0014[1qK!a\u0017\u0007\u0003\u000bMK\'0\u001a3\u0011\u0005eiF!\u0002(\u0007\u0005\u0004y\u0005\"\u0002!\u0007\u0001\by\u0006c\u0001\"J9R\u0011\u0011M\u001a\u000b\u0003E*\u00042AE,d!\u00111#\f\u00073\u0011\u0005\u0015DgBA\rg\u0011\u00159w\u00011\u0001Q\u0003\u0005a\u0017BA5R\u0005\u0005q\u0005\"\u0002!\b\u0001\bY\u0007c\u0001\"JI\u0006YQM\\:ve\u0016\u001c\u0016N_3e+\tq\u0017\u000f\u0006\u0002peB!aE\u0017\rq!\tI\u0012\u000fB\u0003O\u0011\t\u0007q\nC\u0003A\u0011\u0001\u000f1\u000fE\u0002C\u0013B\u0004
   #10 = Utf8               shapeless/ops/nat$ToInt
   #11 = Class              #10           // shapeless/ops/nat$ToInt
   #12 = Utf8               shapeless/ops/nat
   #13 = Class              #12           // shapeless/ops/nat
   #14 = Utf8               ToInt
   #15 = Utf8               r
   #16 = Utf8               Ljava/lang/Object;
   #17 = Utf8               TRepr;
   #18 = Utf8               iil
   #19 = Utf8               Lscala/collection/generic/IsIterable;
   #20 = Utf8               Lscala/collection/generic/IsIterable<TRepr;>;
   #21 = Utf8               ev2
   #22 = Utf8               Lshapeless/AdditiveCollection;
   #23 = Utf8               Lshapeless/AdditiveCollection<TRepr;>;
   #24 = Utf8               checkSize
   #25 = Utf8               (Lshapeless/ops/nat$ToInt;)Z
   #26 = Utf8               <L::Lshapeless/Nat;>(Lshapeless/ops/nat$ToInt<TL;>;)Z
   #27 = Utf8               toInt
   #28 = NameAndType        #18:#19       // iil:Lscala/collection/generic/IsIterable;
   #29 = Fieldref           #2.#28        // shapeless/syntax/SizedConv.iil:Lscala/collection/generic/IsIterable;
   #30 = NameAndType        #15:#16       // r:Ljava/lang/Object;
   #31 = Fieldref           #2.#30        // shapeless/syntax/SizedConv.r:Ljava/lang/Object;
   #32 = Utf8               scala/collection/generic/IsIterable
   #33 = Class              #32           // scala/collection/generic/IsIterable
   #34 = Utf8               apply
   #35 = Utf8               (Ljava/lang/Object;)Lscala/collection/IterableOps;
   #36 = NameAndType        #34:#35       // apply:(Ljava/lang/Object;)Lscala/collection/IterableOps;
   #37 = InterfaceMethodref #33.#36       // scala/collection/generic/IsIterable.apply:(Ljava/lang/Object;)Lscala/collection/IterableOps;
   #38 = Utf8               scala/collection/IterableOps
   #39 = Class              #38           // scala/collection/IterableOps
   #40 = Utf8               size
   #41 = Utf8               ()I
   #42 = NameAndType        #40:#41       // size:()I
   #43 = InterfaceMethodref #39.#42       // scala/collection/IterableOps.size:()I
   #44 = NameAndType        #34:#41       // apply:()I
   #45 = InterfaceMethodref #11.#44       // shapeless/ops/nat$ToInt.apply:()I
   #46 = Utf8               this
   #47 = Utf8               Lshapeless/syntax/SizedConv;
   #48 = Utf8               Lshapeless/ops/nat$ToInt;
   #49 = Utf8               sized
   #50 = Utf8               (Lshapeless/ops/nat$ToInt;)Lscala/Option;
   #51 = Utf8               <L::Lshapeless/Nat;>(Lshapeless/ops/nat$ToInt<TL;>;)Lscala/Option<Lshapeless/Sized<TRepr;TL;>;>;
   #52 = NameAndType        #24:#25       // checkSize:(Lshapeless/ops/nat$ToInt;)Z
   #53 = Methodref          #2.#52        // shapeless/syntax/SizedConv.checkSize:(Lshapeless/ops/nat$ToInt;)Z
   #54 = Utf8               scala/Some
   #55 = Class              #54           // scala/Some
   #56 = Utf8               shapeless/Sized$
   #57 = Class              #56           // shapeless/Sized$
   #58 = Utf8               MODULE$
   #59 = Utf8               Lshapeless/Sized$;
   #60 = NameAndType        #58:#59       // MODULE$:Lshapeless/Sized$;
   #61 = Fieldref           #57.#60       // shapeless/Sized$.MODULE$:Lshapeless/Sized$;
   #62 = NameAndType        #21:#22       // ev2:Lshapeless/AdditiveCollection;
   #63 = Fieldref           #2.#62        // shapeless/syntax/SizedConv.ev2:Lshapeless/AdditiveCollection;
   #64 = Utf8               wrap
   #65 = Utf8               (Ljava/lang/Object;Lshapeless/AdditiveCollection;)Lshapeless/Sized;
   #66 = NameAndType        #64:#65       // wrap:(Ljava/lang/Object;Lshapeless/AdditiveCollection;)Lshapeless/Sized;
   #67 = Methodref          #57.#66       // shapeless/Sized$.wrap:(Ljava/lang/Object;Lshapeless/AdditiveCollection;)Lshapeless/Sized;
   #68 = Utf8               <init>
   #69 = Utf8               (Ljava/lang/Object;)V
   #70 = NameAndType        #68:#69       // "<init>":(Ljava/lang/Object;)V
   #71 = Methodref          #55.#70       // scala/Some."<init>":(Ljava/lang/Object;)V
   #72 = Utf8               scala/None$
   #73 = Class              #72           // scala/None$
   #74 = Utf8               Lscala/None$;
   #75 = NameAndType        #58:#74       // MODULE$:Lscala/None$;
   #76 = Fieldref           #73.#75       // scala/None$.MODULE$:Lscala/None$;
   #77 = Utf8               scala/Option
   #78 = Class              #77           // scala/Option
   #79 = Utf8               (Lshapeless/Nat;Lshapeless/ops/nat$ToInt;)Lscala/Option;
   #80 = Utf8               (Lshapeless/Nat;Lshapeless/ops/nat$ToInt<Lshapeless/Nat;>;)Lscala/Option<Lshapeless/Sized<TRepr;Lshapeless/Nat;>;>;
   #81 = Utf8               l
   #82 = Utf8               Lshapeless/Nat;
   #83 = Utf8               ensureSized
   #84 = Utf8               (Lshapeless/ops/nat$ToInt;)Lshapeless/Sized;
   #85 = Utf8               <L::Lshapeless/Nat;>(Lshapeless/ops/nat$ToInt<TL;>;)Lshapeless/Sized<TRepr;TL;>;
   #86 = Utf8               scala/Predef$
   #87 = Class              #86           // scala/Predef$
   #88 = Utf8               Lscala/Predef$;
   #89 = NameAndType        #58:#88       // MODULE$:Lscala/Predef$;
   #90 = Fieldref           #87.#89       // scala/Predef$.MODULE$:Lscala/Predef$;
   #91 = Utf8               assert
   #92 = Utf8               (Z)V
   #93 = NameAndType        #91:#92       // assert:(Z)V
   #94 = Methodref          #87.#93       // scala/Predef$.assert:(Z)V
   #95 = Utf8               (Ljava/lang/Object;Lscala/collection/generic/IsIterable;Lshapeless/AdditiveCollection;)V
   #96 = Utf8               (TRepr;Lscala/collection/generic/IsIterable<TRepr;>;Lshapeless/AdditiveCollection<TRepr;>;)V
   #97 = Utf8               ()V
   #98 = NameAndType        #68:#97       // "<init>":()V
   #99 = Methodref          #5.#98        // java/lang/Object."<init>":()V
  #100 = Utf8               Signature
  #101 = Utf8               Code
  #102 = Utf8               StackMapTable
  #103 = Utf8               LineNumberTable
  #104 = Utf8               LocalVariableTable
  #105 = Utf8               MethodParameters
  #106 = Utf8               InnerClasses
  #107 = Utf8               SourceFile
  #108 = Utf8               RuntimeVisibleAnnotations
  #109 = Utf8               ScalaInlineInfo
  #110 = Utf8               ScalaSig
{
  private final Repr r;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // TRepr;

  private final scala.collection.generic.IsIterable<Repr> iil;
    descriptor: Lscala/collection/generic/IsIterable;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #20                          // Lscala/collection/generic/IsIterable<TRepr;>;

  private final shapeless.AdditiveCollection<Repr> ev2;
    descriptor: Lshapeless/AdditiveCollection;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Lshapeless/AdditiveCollection<TRepr;>;

  public <L extends shapeless.Nat> boolean checkSize(shapeless.ops.nat$ToInt<L>);
    descriptor: (Lshapeless/ops/nat$ToInt;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #29                 // Field iil:Lscala/collection/generic/IsIterable;
         4: aload_0
         5: getfield      #31                 // Field r:Ljava/lang/Object;
         8: invokeinterface #37,  2           // InterfaceMethod scala/collection/generic/IsIterable.apply:(Ljava/lang/Object;)Lscala/collection/IterableOps;
        13: invokeinterface #43,  1           // InterfaceMethod scala/collection/IterableOps.size:()I
        18: aload_1
        19: invokeinterface #45,  1           // InterfaceMethod shapeless/ops/nat$ToInt.apply:()I
        24: if_icmpne     31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lshapeless/syntax/SizedConv;
            0      33     1 toInt   Lshapeless/ops/nat$ToInt;
    Signature: #26                          // <L::Lshapeless/Nat;>(Lshapeless/ops/nat$ToInt<TL;>;)Z
    MethodParameters:
      Name                           Flags
      toInt                          final

  public <L extends shapeless.Nat> scala.Option<shapeless.Sized<Repr, L>> sized(shapeless.ops.nat$ToInt<L>);
    descriptor: (Lshapeless/ops/nat$ToInt;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #53                 // Method checkSize:(Lshapeless/ops/nat$ToInt;)Z
         5: ifeq          32
         8: new           #55                 // class scala/Some
        11: dup
        12: getstatic     #61                 // Field shapeless/Sized$.MODULE$:Lshapeless/Sized$;
        15: aload_0
        16: getfield      #31                 // Field r:Ljava/lang/Object;
        19: aload_0
        20: getfield      #63                 // Field ev2:Lshapeless/AdditiveCollection;
        23: invokevirtual #67                 // Method shapeless/Sized$.wrap:(Ljava/lang/Object;Lshapeless/AdditiveCollection;)Lshapeless/Sized;
        26: invokespecial #71                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        29: goto          35
        32: getstatic     #76                 // Field scala/None$.MODULE$:Lscala/None$;
        35: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 32 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lshapeless/syntax/SizedConv;
            0      36     1 toInt   Lshapeless/ops/nat$ToInt;
    Signature: #51                          // <L::Lshapeless/Nat;>(Lshapeless/ops/nat$ToInt<TL;>;)Lscala/Option<Lshapeless/Sized<TRepr;TL;>;>;
    MethodParameters:
      Name                           Flags
      toInt                          final

  public scala.Option<shapeless.Sized<Repr, shapeless.Nat>> sized(shapeless.Nat, shapeless.ops.nat$ToInt<shapeless.Nat>);
    descriptor: (Lshapeless/Nat;Lshapeless/ops/nat$ToInt;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_2
         1: astore_3
         2: aload_0
         3: aload_3
         4: invokevirtual #53                 // Method checkSize:(Lshapeless/ops/nat$ToInt;)Z
         7: ifeq          34
        10: new           #55                 // class scala/Some
        13: dup
        14: getstatic     #61                 // Field shapeless/Sized$.MODULE$:Lshapeless/Sized$;
        17: aload_0
        18: getfield      #31                 // Field r:Ljava/lang/Object;
        21: aload_0
        22: getfield      #63                 // Field ev2:Lshapeless/AdditiveCollection;
        25: invokevirtual #67                 // Method shapeless/Sized$.wrap:(Ljava/lang/Object;Lshapeless/AdditiveCollection;)Lshapeless/Sized;
        28: invokespecial #71                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        31: goto          37
        34: getstatic     #76                 // Field scala/None$.MODULE$:Lscala/None$;
        37: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 34
          locals = [ class shapeless/ops/nat$ToInt ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 38: 0
        line 39: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lshapeless/syntax/SizedConv;
            0      38     1     l   Lshapeless/Nat;
            0      38     2 toInt   Lshapeless/ops/nat$ToInt;
    Signature: #80                          // (Lshapeless/Nat;Lshapeless/ops/nat$ToInt<Lshapeless/Nat;>;)Lscala/Option<Lshapeless/Sized<TRepr;Lshapeless/Nat;>;>;
    MethodParameters:
      Name                           Flags
      l                              final
      toInt                          final

  public <L extends shapeless.Nat> shapeless.Sized<Repr, L> ensureSized(shapeless.ops.nat$ToInt<L>);
    descriptor: (Lshapeless/ops/nat$ToInt;)Lshapeless/Sized;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #90                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_0
         4: aload_1
         5: invokevirtual #53                 // Method checkSize:(Lshapeless/ops/nat$ToInt;)Z
         8: invokevirtual #94                 // Method scala/Predef$.assert:(Z)V
        11: getstatic     #61                 // Field shapeless/Sized$.MODULE$:Lshapeless/Sized$;
        14: aload_0
        15: getfield      #31                 // Field r:Ljava/lang/Object;
        18: aload_0
        19: getfield      #63                 // Field ev2:Lshapeless/AdditiveCollection;
        22: invokevirtual #67                 // Method shapeless/Sized$.wrap:(Ljava/lang/Object;Lshapeless/AdditiveCollection;)Lshapeless/Sized;
        25: areturn
      LineNumberTable:
        line 42: 0
        line 43: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lshapeless/syntax/SizedConv;
            0      26     1 toInt   Lshapeless/ops/nat$ToInt;
    Signature: #85                          // <L::Lshapeless/Nat;>(Lshapeless/ops/nat$ToInt<TL;>;)Lshapeless/Sized<TRepr;TL;>;
    MethodParameters:
      Name                           Flags
      toInt                          final

  public shapeless.syntax.SizedConv(Repr, scala.collection.generic.IsIterable<Repr>, shapeless.AdditiveCollection<Repr>);
    descriptor: (Ljava/lang/Object;Lscala/collection/generic/IsIterable;Lshapeless/AdditiveCollection;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #31                 // Field r:Ljava/lang/Object;
         5: aload_0
         6: aload_2
         7: putfield      #29                 // Field iil:Lscala/collection/generic/IsIterable;
        10: aload_0
        11: aload_3
        12: putfield      #63                 // Field ev2:Lshapeless/AdditiveCollection;
        15: aload_0
        16: invokespecial #99                 // Method java/lang/Object."<init>":()V
        19: return
      LineNumberTable:
        line 28: 0
        line 45: 15
        line 28: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lshapeless/syntax/SizedConv;
            0      20     1     r   Ljava/lang/Object;
            0      20     2   iil   Lscala/collection/generic/IsIterable;
            0      20     3   ev2   Lshapeless/AdditiveCollection;
    Signature: #96                          // (TRepr;Lscala/collection/generic/IsIterable<TRepr;>;Lshapeless/AdditiveCollection<TRepr;>;)V
    MethodParameters:
      Name                           Flags
      r                              final
      iil                            final
      ev2                            final
}
InnerClasses:
  public static #14= #11 of #13;          // ToInt=class shapeless/ops/nat$ToInt of class shapeless/ops/nat
Signature: #3                           // <Repr:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "sized.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005Q4A!\u0003\u0006\u0003\u001f!Aq\u0003\u0001B\u0001B\u0003%\u0001\u0004\u0003\u0005$\u0001\t\u0005\t\u0015a\u0003%\u0011!i\u0003A!A!\u0002\u0017q\u0003\"B\u0019\u0001\t\u0003\u0011\u0004\"B\u001d\u0001\t\u0003Q\u0004\"B*\u0001\t\u0003!\u0006\"B*\u0001\t\u0003\u0001\u0007\"\u00027\u0001\t\u0003i\'!C*ju\u0016$7i\u001c8w\u0015\tYA\"\u0001\u0004ts:$\u0018\r\u001f\u0006\u0002\u001b\u0005I1\u000f[1qK2,7o]\u0002\u0001+\t\u0001\"d\u0005\u0002\u0001#A\u0011!#F\u0007\u0002\')\tA#A\u0003tG\u0006d\u0017-\u0003\u0002\u0017\'\t1\u0011I\\=SK\u001a\f\u0011A\u001d\t\u00033ia\u0001\u0001B\u0003\u001c\u0001\t\u0007AD\u0001\u0003SKB\u0014\u0018CA\u000f!!\t\u0011b$\u0003\u0002 \'\t9aj\u001c;iS:<\u0007C\u0001\n\"\u0013\t\u00113CA\u0002B]f\f1![5m!\r)\u0013\u0006\u0007\b\u0003M\u001dj\u0011\u0001D\u0005\u0003Q1\tq\u0001]1dW\u0006<W-\u0003\u0002+W\t\t\u0012j\u001d*fOVd\u0017M]%uKJ\f\'\r\\3\n\u00051b!!F*dC2\fg+\u001a:tS>t7\u000b]3dS\u001aL7m]\u0001\u0004KZ\u0014\u0004c\u0001\u001401%\u0011\u0001\u0007\u0004\u0002\u0013\u0003\u0012$\u0017\u000e^5wK\u000e{G\u000e\\3di&|g.\u0001\u0004=S:LGO\u0010\u000b\u0003ga\"2\u0001\u000e\u001c8!\r)\u0004\u0001G\u0007\u0002\u0015!)1\u0005\u0002a\u0002I!)Q\u0006\u0002a\u0002]!)q\u0003\u0002a\u00011\u0005I1\r[3dWNK\'0Z\u000b\u0003w5#\"\u0001P \u0011\u0005Ii\u0014B\u0001 \u0014\u0005\u001d\u0011un\u001c7fC:DQ\u0001Q\u0003A\u0004\u0005\u000bQ\u0001^8J]R\u00042AQ%M\u001d\t\u0019eI\u0004\u0002\'\t&\u0011Q\tD\u0001\u0004_B\u001c\u0018BA$I\u0003\rq\u0017\r\u001e\u0006\u0003\u000b2I!AS&\u0003\u000bQ{\u0017J\u001c;\u000b\u0005\u001dC\u0005CA\rN\t\u0015qUA1\u0001P\u0005\u0005a\u0015CA\u000fQ!\t1\u0013+\u0003\u0002S\u0019\t\u0019a*\u0019;\u0002\u000bML\'0\u001a3\u0016\u0005UkFC\u0001,_!\r\u0011r+W\u0005\u00031N\u0011aa\u00149uS>t\u0007\u0003\u0002\u0014[1qK!a\u0017\u0007\u0003\u000bMK\'0\u001a3\u0011\u0005eiF!\u0002(\u0007\u0005\u0004y\u0005\"\u0002!\u0007\u0001\by\u0006c\u0001\"J9R\u0011\u0011M\u001a\u000b\u0003E*\u00042AE,d!\u00111#\f\u00073\u0011\u0005\u0015DgBA\rg\u0011\u00159w\u00011\u0001Q\u0003\u0005a\u0017BA5R\u0005\u0005q\u0005\"\u0002!\b\u0001\bY\u0007c\u0001\"JI\u0006YQM\\:ve\u0016\u001c\u0016N_3e+\tq\u0017\u000f\u0006\u0002peB!aE\u0017\rq!\tI\u0012\u000fB\u0003O\u0011\t\u0007q\nC\u0003A\u0011\u0001\u000f1\u000fE\u0002C\u0013B\u0004"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 44 00 5F 01 00 18 00 19 01 00 53
   00 54 01 00 31 00 4F 01 00 31 00 32 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
