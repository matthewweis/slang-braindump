Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/math/Fraction.class
  Last modified May 29, 2022; size 10850 bytes
  SHA-256 checksum ba3c023e73b2c89e5a1126770f47d7483e717e16d82e158a69566280dd78a853
  Compiled from "Fraction.java"
public final class org.apache.commons.lang3.math.Fraction extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.math.Fraction>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #13                         // org/apache/commons/lang3/math/Fraction
  super_class: #105                       // java/lang/Number
  interfaces: 1, fields: 18, methods: 36, attributes: 2
Constant pool:
    #1 = Methodref          #105.#242     // java/lang/Number."<init>":()V
    #2 = Fieldref           #13.#243      // org/apache/commons/lang3/math/Fraction.hashCode:I
    #3 = Fieldref           #13.#244      // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;
    #4 = Fieldref           #13.#245      // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;
    #5 = Fieldref           #13.#246      // org/apache/commons/lang3/math/Fraction.numerator:I
    #6 = Fieldref           #13.#247      // org/apache/commons/lang3/math/Fraction.denominator:I
    #7 = Class              #248          // java/lang/ArithmeticException
    #8 = String             #249          // The denominator must not be zero
    #9 = Methodref          #7.#250       // java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
   #10 = Class              #251          // java/lang/Integer
   #11 = Integer            -2147483648
   #12 = String             #252          // overflow: can\'t negate
   #13 = Class              #253          // org/apache/commons/lang3/math/Fraction
   #14 = Methodref          #13.#254      // org/apache/commons/lang3/math/Fraction."<init>":(II)V
   #15 = String             #255          // The denominator must not be negative
   #16 = String             #256          // The numerator must not be negative
   #17 = Long               -2147483648l
   #19 = Long               2147483647l
   #21 = String             #257          // Numerator too large to represent as an Integer.
   #22 = Fieldref           #13.#258      // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;
   #23 = Methodref          #13.#259      // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I
   #24 = Methodref          #260.#261     // java/lang/Math.abs:(D)D
   #25 = Double             2.147483647E9d
   #27 = Methodref          #29.#262      // java/lang/Double.isNaN:(D)Z
   #28 = String             #263          // The value must not be greater than Integer.MAX_VALUE or NaN
   #29 = Class              #264          // java/lang/Double
   #30 = Double             1.7976931348623157E308d
   #32 = String             #265          // Unable to convert double to fraction
   #33 = Methodref          #13.#266      // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
   #34 = String             #267          // The string must not be null
   #35 = Class              #268          // java/lang/Object
   #36 = Methodref          #269.#270     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
   #37 = Methodref          #271.#272     // java/lang/String.indexOf:(I)I
   #38 = Methodref          #29.#273      // java/lang/Double.parseDouble:(Ljava/lang/String;)D
   #39 = Methodref          #13.#274      // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;
   #40 = Methodref          #271.#275     // java/lang/String.substring:(II)Ljava/lang/String;
   #41 = Methodref          #10.#276      // java/lang/Integer.parseInt:(Ljava/lang/String;)I
   #42 = Methodref          #271.#277     // java/lang/String.substring:(I)Ljava/lang/String;
   #43 = Class              #278          // java/lang/NumberFormatException
   #44 = String             #279          // The fraction could not be parsed as the format X Y/Z
   #45 = Methodref          #43.#250      // java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
   #46 = Methodref          #13.#280      // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;
   #47 = Methodref          #13.#281      // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
   #48 = Methodref          #260.#282     // java/lang/Math.abs:(I)I
   #49 = Methodref          #13.#283      // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z
   #50 = String             #284          // Unable to invert zero.
   #51 = String             #285          // overflow: can\'t negate numerator
   #52 = String             #286          // overflow: too large to negate
   #53 = Methodref          #13.#287      // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;
   #54 = Fieldref           #13.#288      // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;
   #55 = Methodref          #13.#289      // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;
   #56 = Methodref          #13.#290      // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;
   #57 = Methodref          #13.#291      // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
   #58 = String             #292          // overflow: gcd is 2^31
   #59 = String             #293          // overflow: mul
   #60 = String             #294          // overflow: mulPos
   #61 = String             #295          // overflow: add
   #62 = Methodref          #13.#296      // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
   #63 = String             #297          // The fraction must not be null
   #64 = Methodref          #13.#298      // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I
   #65 = Methodref          #13.#299      // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I
   #66 = Methodref          #13.#300      // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I
   #67 = Methodref          #13.#301      // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I
   #68 = Methodref          #221.#302     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
   #69 = Methodref          #221.#303     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #70 = Methodref          #221.#304     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #71 = Methodref          #221.#305     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #72 = Methodref          #221.#306     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #73 = Methodref          #221.#307     // java/math/BigInteger.intValue:()I
   #74 = Methodref          #221.#308     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
   #75 = Methodref          #221.#309     // java/math/BigInteger.bitLength:()I
   #76 = String             #310          // overflow: numerator too large after multiply
   #77 = String             #311          // The fraction to divide by must not be zero
   #78 = Methodref          #13.#312      // org/apache/commons/lang3/math/Fraction.getNumerator:()I
   #79 = Methodref          #13.#313      // org/apache/commons/lang3/math/Fraction.getDenominator:()I
   #80 = Methodref          #314.#315     // java/lang/Long.compare:(JJ)I
   #81 = Class              #316          // java/lang/StringBuilder
   #82 = Methodref          #81.#242      // java/lang/StringBuilder."<init>":()V
   #83 = Methodref          #81.#317      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #84 = String             #318          // /
   #85 = Methodref          #81.#319      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #86 = Methodref          #81.#320      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #87 = String             #321          // 0
   #88 = String             #322          // 1
   #89 = String             #323          // -1
   #90 = Methodref          #13.#324      // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I
   #91 = Methodref          #13.#325      // org/apache/commons/lang3/math/Fraction.getProperWhole:()I
   #92 = Methodref          #10.#326      // java/lang/Integer.toString:(I)Ljava/lang/String;
   #93 = String             #327          //
   #94 = Methodref          #13.#328      // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I
   #95 = Fieldref           #13.#329      // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;
   #96 = Fieldref           #13.#330      // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;
   #97 = Fieldref           #13.#331      // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;
   #98 = Fieldref           #13.#332      // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;
   #99 = Fieldref           #13.#333      // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
  #100 = Fieldref           #13.#334      // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
  #101 = Fieldref           #13.#335      // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;
  #102 = Fieldref           #13.#336      // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
  #103 = Fieldref           #13.#337      // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
  #104 = Fieldref           #13.#338      // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
  #105 = Class              #339          // java/lang/Number
  #106 = Class              #340          // java/lang/Comparable
  #107 = Utf8               serialVersionUID
  #108 = Utf8               J
  #109 = Utf8               ConstantValue
  #110 = Long               65382027393090l
  #112 = Utf8               ZERO
  #113 = Utf8               Lorg/apache/commons/lang3/math/Fraction;
  #114 = Utf8               ONE
  #115 = Utf8               ONE_HALF
  #116 = Utf8               ONE_THIRD
  #117 = Utf8               TWO_THIRDS
  #118 = Utf8               ONE_QUARTER
  #119 = Utf8               TWO_QUARTERS
  #120 = Utf8               THREE_QUARTERS
  #121 = Utf8               ONE_FIFTH
  #122 = Utf8               TWO_FIFTHS
  #123 = Utf8               THREE_FIFTHS
  #124 = Utf8               FOUR_FIFTHS
  #125 = Utf8               numerator
  #126 = Utf8               I
  #127 = Utf8               denominator
  #128 = Utf8               hashCode
  #129 = Utf8               toString
  #130 = Utf8               Ljava/lang/String;
  #131 = Utf8               toProperString
  #132 = Utf8               <init>
  #133 = Utf8               (II)V
  #134 = Utf8               Code
  #135 = Utf8               LineNumberTable
  #136 = Utf8               LocalVariableTable
  #137 = Utf8               this
  #138 = Utf8               getFraction
  #139 = Utf8               (II)Lorg/apache/commons/lang3/math/Fraction;
  #140 = Utf8               StackMapTable
  #141 = Utf8               (III)Lorg/apache/commons/lang3/math/Fraction;
  #142 = Utf8               numeratorValue
  #143 = Utf8               whole
  #144 = Utf8               getReducedFraction
  #145 = Utf8               gcd
  #146 = Utf8               (D)Lorg/apache/commons/lang3/math/Fraction;
  #147 = Utf8               value
  #148 = Utf8               D
  #149 = Utf8               sign
  #150 = Utf8               wholeNumber
  #151 = Utf8               numer0
  #152 = Utf8               denom0
  #153 = Utf8               numer1
  #154 = Utf8               denom1
  #155 = Utf8               numer2
  #156 = Utf8               denom2
  #157 = Utf8               a1
  #158 = Utf8               a2
  #159 = Utf8               x1
  #160 = Utf8               x2
  #161 = Utf8               y1
  #162 = Utf8               y2
  #163 = Utf8               delta1
  #164 = Utf8               delta2
  #165 = Utf8               fraction
  #166 = Utf8               i
  #167 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;
  #168 = Utf8               numer
  #169 = Utf8               denom
  #170 = Utf8               str
  #171 = Utf8               pos
  #172 = Utf8               getNumerator
  #173 = Utf8               ()I
  #174 = Utf8               getDenominator
  #175 = Utf8               getProperNumerator
  #176 = Utf8               getProperWhole
  #177 = Utf8               intValue
  #178 = Utf8               longValue
  #179 = Utf8               ()J
  #180 = Utf8               floatValue
  #181 = Utf8               ()F
  #182 = Utf8               doubleValue
  #183 = Utf8               ()D
  #184 = Utf8               reduce
  #185 = Utf8               ()Lorg/apache/commons/lang3/math/Fraction;
  #186 = Utf8               invert
  #187 = Utf8               negate
  #188 = Utf8               abs
  #189 = Utf8               pow
  #190 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;
  #191 = Utf8               f
  #192 = Utf8               power
  #193 = Utf8               greatestCommonDivisor
  #194 = Utf8               (II)I
  #195 = Utf8               u
  #196 = Utf8               v
  #197 = Utf8               k
  #198 = Utf8               t
  #199 = Utf8               mulAndCheck
  #200 = Utf8               x
  #201 = Utf8               y
  #202 = Utf8               m
  #203 = Utf8               mulPosAndCheck
  #204 = Utf8               addAndCheck
  #205 = Utf8               s
  #206 = Utf8               subAndCheck
  #207 = Utf8               add
  #208 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
  #209 = Utf8               subtract
  #210 = Utf8               addSub
  #211 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
  #212 = Utf8               uvp
  #213 = Utf8               upv
  #214 = Utf8               isAdd
  #215 = Utf8               Z
  #216 = Utf8               d1
  #217 = Utf8               Ljava/math/BigInteger;
  #218 = Utf8               tmodd1
  #219 = Utf8               d2
  #220 = Utf8               w
  #221 = Class              #341          // java/math/BigInteger
  #222 = Utf8               multiplyBy
  #223 = Utf8               divideBy
  #224 = Utf8               equals
  #225 = Utf8               (Ljava/lang/Object;)Z
  #226 = Utf8               obj
  #227 = Utf8               Ljava/lang/Object;
  #228 = Utf8               other
  #229 = Utf8               compareTo
  #230 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I
  #231 = Utf8               first
  #232 = Utf8               second
  #233 = Utf8               ()Ljava/lang/String;
  #234 = Utf8               properNumerator
  #235 = Utf8               (Ljava/lang/Object;)I
  #236 = Utf8               <clinit>
  #237 = Utf8               ()V
  #238 = Utf8               Signature
  #239 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;
  #240 = Utf8               SourceFile
  #241 = Utf8               Fraction.java
  #242 = NameAndType        #132:#237     // "<init>":()V
  #243 = NameAndType        #128:#126     // hashCode:I
  #244 = NameAndType        #129:#130     // toString:Ljava/lang/String;
  #245 = NameAndType        #131:#130     // toProperString:Ljava/lang/String;
  #246 = NameAndType        #125:#126     // numerator:I
  #247 = NameAndType        #127:#126     // denominator:I
  #248 = Utf8               java/lang/ArithmeticException
  #249 = Utf8               The denominator must not be zero
  #250 = NameAndType        #132:#342     // "<init>":(Ljava/lang/String;)V
  #251 = Utf8               java/lang/Integer
  #252 = Utf8               overflow: can\'t negate
  #253 = Utf8               org/apache/commons/lang3/math/Fraction
  #254 = NameAndType        #132:#133     // "<init>":(II)V
  #255 = Utf8               The denominator must not be negative
  #256 = Utf8               The numerator must not be negative
  #257 = Utf8               Numerator too large to represent as an Integer.
  #258 = NameAndType        #112:#113     // ZERO:Lorg/apache/commons/lang3/math/Fraction;
  #259 = NameAndType        #193:#194     // greatestCommonDivisor:(II)I
  #260 = Class              #343          // java/lang/Math
  #261 = NameAndType        #188:#344     // abs:(D)D
  #262 = NameAndType        #345:#346     // isNaN:(D)Z
  #263 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN
  #264 = Utf8               java/lang/Double
  #265 = Utf8               Unable to convert double to fraction
  #266 = NameAndType        #144:#139     // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
  #267 = Utf8               The string must not be null
  #268 = Utf8               java/lang/Object
  #269 = Class              #347          // org/apache/commons/lang3/Validate
  #270 = NameAndType        #348:#349     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
  #271 = Class              #350          // java/lang/String
  #272 = NameAndType        #351:#352     // indexOf:(I)I
  #273 = NameAndType        #353:#354     // parseDouble:(Ljava/lang/String;)D
  #274 = NameAndType        #138:#146     // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;
  #275 = NameAndType        #355:#356     // substring:(II)Ljava/lang/String;
  #276 = NameAndType        #357:#358     // parseInt:(Ljava/lang/String;)I
  #277 = NameAndType        #355:#359     // substring:(I)Ljava/lang/String;
  #278 = Utf8               java/lang/NumberFormatException
  #279 = Utf8               The fraction could not be parsed as the format X Y/Z
  #280 = NameAndType        #138:#141     // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;
  #281 = NameAndType        #138:#139     // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
  #282 = NameAndType        #188:#352     // abs:(I)I
  #283 = NameAndType        #224:#225     // equals:(Ljava/lang/Object;)Z
  #284 = Utf8               Unable to invert zero.
  #285 = Utf8               overflow: can\'t negate numerator
  #286 = Utf8               overflow: too large to negate
  #287 = NameAndType        #187:#185     // negate:()Lorg/apache/commons/lang3/math/Fraction;
  #288 = NameAndType        #114:#113     // ONE:Lorg/apache/commons/lang3/math/Fraction;
  #289 = NameAndType        #186:#185     // invert:()Lorg/apache/commons/lang3/math/Fraction;
  #290 = NameAndType        #189:#190     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;
  #291 = NameAndType        #222:#208     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
  #292 = Utf8               overflow: gcd is 2^31
  #293 = Utf8               overflow: mul
  #294 = Utf8               overflow: mulPos
  #295 = Utf8               overflow: add
  #296 = NameAndType        #210:#211     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
  #297 = Utf8               The fraction must not be null
  #298 = NameAndType        #199:#194     // mulAndCheck:(II)I
  #299 = NameAndType        #204:#194     // addAndCheck:(II)I
  #300 = NameAndType        #206:#194     // subAndCheck:(II)I
  #301 = NameAndType        #203:#194     // mulPosAndCheck:(II)I
  #302 = NameAndType        #360:#361     // valueOf:(J)Ljava/math/BigInteger;
  #303 = NameAndType        #362:#363     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #304 = NameAndType        #207:#363     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #305 = NameAndType        #209:#363     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #306 = NameAndType        #364:#363     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #307 = NameAndType        #177:#173     // intValue:()I
  #308 = NameAndType        #365:#363     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #309 = NameAndType        #366:#173     // bitLength:()I
  #310 = Utf8               overflow: numerator too large after multiply
  #311 = Utf8               The fraction to divide by must not be zero
  #312 = NameAndType        #172:#173     // getNumerator:()I
  #313 = NameAndType        #174:#173     // getDenominator:()I
  #314 = Class              #367          // java/lang/Long
  #315 = NameAndType        #368:#369     // compare:(JJ)I
  #316 = Utf8               java/lang/StringBuilder
  #317 = NameAndType        #370:#371     // append:(I)Ljava/lang/StringBuilder;
  #318 = Utf8               /
  #319 = NameAndType        #370:#372     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #320 = NameAndType        #129:#233     // toString:()Ljava/lang/String;
  #321 = Utf8               0
  #322 = Utf8               1
  #323 = Utf8               -1
  #324 = NameAndType        #175:#173     // getProperNumerator:()I
  #325 = NameAndType        #176:#173     // getProperWhole:()I
  #326 = NameAndType        #129:#359     // toString:(I)Ljava/lang/String;
  #327 = Utf8
  #328 = NameAndType        #229:#230     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I
  #329 = NameAndType        #115:#113     // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;
  #330 = NameAndType        #116:#113     // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;
  #331 = NameAndType        #117:#113     // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;
  #332 = NameAndType        #118:#113     // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;
  #333 = NameAndType        #119:#113     // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
  #334 = NameAndType        #120:#113     // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
  #335 = NameAndType        #121:#113     // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;
  #336 = NameAndType        #122:#113     // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
  #337 = NameAndType        #123:#113     // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
  #338 = NameAndType        #124:#113     // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
  #339 = Utf8               java/lang/Number
  #340 = Utf8               java/lang/Comparable
  #341 = Utf8               java/math/BigInteger
  #342 = Utf8               (Ljava/lang/String;)V
  #343 = Utf8               java/lang/Math
  #344 = Utf8               (D)D
  #345 = Utf8               isNaN
  #346 = Utf8               (D)Z
  #347 = Utf8               org/apache/commons/lang3/Validate
  #348 = Utf8               isTrue
  #349 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V
  #350 = Utf8               java/lang/String
  #351 = Utf8               indexOf
  #352 = Utf8               (I)I
  #353 = Utf8               parseDouble
  #354 = Utf8               (Ljava/lang/String;)D
  #355 = Utf8               substring
  #356 = Utf8               (II)Ljava/lang/String;
  #357 = Utf8               parseInt
  #358 = Utf8               (Ljava/lang/String;)I
  #359 = Utf8               (I)Ljava/lang/String;
  #360 = Utf8               valueOf
  #361 = Utf8               (J)Ljava/math/BigInteger;
  #362 = Utf8               multiply
  #363 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;
  #364 = Utf8               mod
  #365 = Utf8               divide
  #366 = Utf8               bitLength
  #367 = Utf8               java/lang/Long
  #368 = Utf8               compare
  #369 = Utf8               (JJ)I
  #370 = Utf8               append
  #371 = Utf8               (I)Ljava/lang/StringBuilder;
  #372 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 65382027393090l

  public static final org.apache.commons.lang3.math.Fraction ZERO;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction ONE;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction ONE_HALF;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction ONE_THIRD;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction TWO_THIRDS;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction ONE_QUARTER;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction TWO_QUARTERS;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction THREE_QUARTERS;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction ONE_FIFTH;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction TWO_FIFTHS;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction THREE_FIFTHS;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final org.apache.commons.lang3.math.Fraction FOUR_FIFTHS;
    descriptor: Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private final int numerator;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int denominator;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private transient int hashCode;
    descriptor: I
    flags: (0x0082) ACC_PRIVATE, ACC_TRANSIENT

  private transient java.lang.String toString;
    descriptor: Ljava/lang/String;
    flags: (0x0082) ACC_PRIVATE, ACC_TRANSIENT

  private transient java.lang.String toProperString;
    descriptor: Ljava/lang/String;
    flags: (0x0082) ACC_PRIVATE, ACC_TRANSIENT

  private org.apache.commons.lang3.math.Fraction(int, int);
    descriptor: (II)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Number."<init>":()V
         4: aload_0
         5: iconst_0
         6: putfield      #2                  // Field hashCode:I
         9: aload_0
        10: aconst_null
        11: putfield      #3                  // Field toString:Ljava/lang/String;
        14: aload_0
        15: aconst_null
        16: putfield      #4                  // Field toProperString:Ljava/lang/String;
        19: aload_0
        20: iload_1
        21: putfield      #5                  // Field numerator:I
        24: aload_0
        25: iload_2
        26: putfield      #6                  // Field denominator:I
        29: return
      LineNumberTable:
        line 125: 0
        line 107: 4
        line 111: 9
        line 115: 14
        line 126: 19
        line 127: 24
        line 128: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0      30     1 numerator   I
            0      30     2 denominator   I

  public static org.apache.commons.lang3.math.Fraction getFraction(int, int);
    descriptor: (II)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: iload_1
         1: ifne          14
         4: new           #7                  // class java/lang/ArithmeticException
         7: dup
         8: ldc           #8                  // String The denominator must not be zero
        10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: iload_1
        15: ifge          46
        18: iload_0
        19: ldc           #11                 // int -2147483648
        21: if_icmpeq     30
        24: iload_1
        25: ldc           #11                 // int -2147483648
        27: if_icmpne     40
        30: new           #7                  // class java/lang/ArithmeticException
        33: dup
        34: ldc           #12                 // String overflow: can\'t negate
        36: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        39: athrow
        40: iload_0
        41: ineg
        42: istore_0
        43: iload_1
        44: ineg
        45: istore_1
        46: new           #13                 // class org/apache/commons/lang3/math/Fraction
        49: dup
        50: iload_0
        51: iload_1
        52: invokespecial #14                 // Method "<init>":(II)V
        55: areturn
      LineNumberTable:
        line 143: 0
        line 144: 4
        line 146: 14
        line 147: 18
        line 148: 30
        line 150: 40
        line 151: 43
        line 153: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0 numerator   I
            0      56     1 denominator   I
      StackMapTable: number_of_entries = 4
        frame_type = 14 /* same */
        frame_type = 15 /* same */
        frame_type = 9 /* same */
        frame_type = 5 /* same */

  public static org.apache.commons.lang3.math.Fraction getFraction(int, int, int);
    descriptor: (III)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=5, args_size=3
         0: iload_2
         1: ifne          14
         4: new           #7                  // class java/lang/ArithmeticException
         7: dup
         8: ldc           #8                  // String The denominator must not be zero
        10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: iload_2
        15: ifge          28
        18: new           #7                  // class java/lang/ArithmeticException
        21: dup
        22: ldc           #15                 // String The denominator must not be negative
        24: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        27: athrow
        28: iload_1
        29: ifge          42
        32: new           #7                  // class java/lang/ArithmeticException
        35: dup
        36: ldc           #16                 // String The numerator must not be negative
        38: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: iload_0
        43: ifge          58
        46: iload_0
        47: i2l
        48: iload_2
        49: i2l
        50: lmul
        51: iload_1
        52: i2l
        53: lsub
        54: lstore_3
        55: goto          67
        58: iload_0
        59: i2l
        60: iload_2
        61: i2l
        62: lmul
        63: iload_1
        64: i2l
        65: ladd
        66: lstore_3
        67: lload_3
        68: ldc2_w        #17                 // long -2147483648l
        71: lcmp
        72: iflt          83
        75: lload_3
        76: ldc2_w        #19                 // long 2147483647l
        79: lcmp
        80: ifle          93
        83: new           #7                  // class java/lang/ArithmeticException
        86: dup
        87: ldc           #21                 // String Numerator too large to represent as an Integer.
        89: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        92: athrow
        93: new           #13                 // class org/apache/commons/lang3/math/Fraction
        96: dup
        97: lload_3
        98: l2i
        99: iload_2
       100: invokespecial #14                 // Method "<init>":(II)V
       103: areturn
      LineNumberTable:
        line 173: 0
        line 174: 4
        line 176: 14
        line 177: 18
        line 179: 28
        line 180: 32
        line 183: 42
        line 184: 46
        line 186: 58
        line 188: 67
        line 189: 83
        line 191: 93
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55       3     3 numeratorValue   J
            0     104     0 whole   I
            0     104     1 numerator   I
            0     104     2 denominator   I
           67      37     3 numeratorValue   J
      StackMapTable: number_of_entries = 7
        frame_type = 14 /* same */
        frame_type = 13 /* same */
        frame_type = 13 /* same */
        frame_type = 15 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ long ]
        frame_type = 15 /* same */
        frame_type = 9 /* same */

  public static org.apache.commons.lang3.math.Fraction getReducedFraction(int, int);
    descriptor: (II)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=2
         0: iload_1
         1: ifne          14
         4: new           #7                  // class java/lang/ArithmeticException
         7: dup
         8: ldc           #8                  // String The denominator must not be zero
        10: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: iload_0
        15: ifne          22
        18: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
        21: areturn
        22: iload_1
        23: ldc           #11                 // int -2147483648
        25: if_icmpne     42
        28: iload_0
        29: iconst_1
        30: iand
        31: ifne          42
        34: iload_0
        35: iconst_2
        36: idiv
        37: istore_0
        38: iload_1
        39: iconst_2
        40: idiv
        41: istore_1
        42: iload_1
        43: ifge          74
        46: iload_0
        47: ldc           #11                 // int -2147483648
        49: if_icmpeq     58
        52: iload_1
        53: ldc           #11                 // int -2147483648
        55: if_icmpne     68
        58: new           #7                  // class java/lang/ArithmeticException
        61: dup
        62: ldc           #12                 // String overflow: can\'t negate
        64: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        67: athrow
        68: iload_0
        69: ineg
        70: istore_0
        71: iload_1
        72: ineg
        73: istore_1
        74: iload_0
        75: iload_1
        76: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
        79: istore_2
        80: iload_0
        81: iload_2
        82: idiv
        83: istore_0
        84: iload_1
        85: iload_2
        86: idiv
        87: istore_1
        88: new           #13                 // class org/apache/commons/lang3/math/Fraction
        91: dup
        92: iload_0
        93: iload_1
        94: invokespecial #14                 // Method "<init>":(II)V
        97: areturn
      LineNumberTable:
        line 209: 0
        line 210: 4
        line 212: 14
        line 213: 18
        line 216: 22
        line 217: 34
        line 218: 38
        line 220: 42
        line 221: 46
        line 222: 58
        line 224: 68
        line 225: 71
        line 228: 74
        line 229: 80
        line 230: 84
        line 231: 88
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0 numerator   I
            0      98     1 denominator   I
           80      18     2   gcd   I
      StackMapTable: number_of_entries = 6
        frame_type = 14 /* same */
        frame_type = 7 /* same */
        frame_type = 19 /* same */
        frame_type = 15 /* same */
        frame_type = 9 /* same */
        frame_type = 5 /* same */

  public static org.apache.commons.lang3.math.Fraction getFraction(double);
    descriptor: (D)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=27, args_size=1
         0: dload_0
         1: dconst_0
         2: dcmpg
         3: ifge          10
         6: iconst_m1
         7: goto          11
        10: iconst_1
        11: istore_2
        12: dload_0
        13: invokestatic  #24                 // Method java/lang/Math.abs:(D)D
        16: dstore_0
        17: dload_0
        18: ldc2_w        #25                 // double 2.147483647E9d
        21: dcmpl
        22: ifgt          32
        25: dload_0
        26: invokestatic  #27                 // Method java/lang/Double.isNaN:(D)Z
        29: ifeq          42
        32: new           #7                  // class java/lang/ArithmeticException
        35: dup
        36: ldc           #28                 // String The value must not be greater than Integer.MAX_VALUE or NaN
        38: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: dload_0
        43: d2i
        44: istore_3
        45: dload_0
        46: iload_3
        47: i2d
        48: dsub
        49: dstore_0
        50: iconst_0
        51: istore        4
        53: iconst_1
        54: istore        5
        56: iconst_1
        57: istore        6
        59: iconst_0
        60: istore        7
        62: iconst_0
        63: istore        8
        65: iconst_0
        66: istore        9
        68: dload_0
        69: d2i
        70: istore        10
        72: iconst_0
        73: istore        11
        75: dconst_1
        76: dstore        12
        78: dconst_0
        79: dstore        14
        81: dload_0
        82: iload         10
        84: i2d
        85: dsub
        86: dstore        16
        88: dconst_0
        89: dstore        18
        91: ldc2_w        #30                 // double 1.7976931348623157E308d
        94: dstore        22
        96: iconst_1
        97: istore        26
        99: dload         22
       101: dstore        20
       103: dload         12
       105: dload         16
       107: ddiv
       108: d2i
       109: istore        11
       111: dload         16
       113: dstore        14
       115: dload         12
       117: iload         11
       119: i2d
       120: dload         16
       122: dmul
       123: dsub
       124: dstore        18
       126: iload         10
       128: iload         6
       130: imul
       131: iload         4
       133: iadd
       134: istore        8
       136: iload         10
       138: iload         7
       140: imul
       141: iload         5
       143: iadd
       144: istore        9
       146: iload         8
       148: i2d
       149: iload         9
       151: i2d
       152: ddiv
       153: dstore        24
       155: dload_0
       156: dload         24
       158: dsub
       159: invokestatic  #24                 // Method java/lang/Math.abs:(D)D
       162: dstore        22
       164: iload         11
       166: istore        10
       168: dload         14
       170: dstore        12
       172: dload         18
       174: dstore        16
       176: iload         6
       178: istore        4
       180: iload         7
       182: istore        5
       184: iload         8
       186: istore        6
       188: iload         9
       190: istore        7
       192: iinc          26, 1
       195: dload         20
       197: dload         22
       199: dcmpl
       200: ifle          223
       203: iload         9
       205: sipush        10000
       208: if_icmpgt     223
       211: iload         9
       213: ifle          223
       216: iload         26
       218: bipush        25
       220: if_icmplt     99
       223: iload         26
       225: bipush        25
       227: if_icmpne     240
       230: new           #7                  // class java/lang/ArithmeticException
       233: dup
       234: ldc           #32                 // String Unable to convert double to fraction
       236: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
       239: athrow
       240: iload         4
       242: iload_3
       243: iload         5
       245: imul
       246: iadd
       247: iload_2
       248: imul
       249: iload         5
       251: invokestatic  #33                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
       254: areturn
      LineNumberTable:
        line 249: 0
        line 250: 12
        line 251: 17
        line 252: 32
        line 254: 42
        line 255: 45
        line 257: 50
        line 258: 53
        line 259: 56
        line 260: 59
        line 261: 62
        line 262: 65
        line 263: 68
        line 264: 72
        line 265: 75
        line 266: 78
        line 267: 81
        line 268: 88
        line 269: 91
        line 271: 96
        line 273: 99
        line 274: 103
        line 275: 111
        line 276: 115
        line 277: 126
        line 278: 136
        line 279: 146
        line 280: 155
        line 281: 164
        line 282: 168
        line 283: 172
        line 284: 176
        line 285: 180
        line 286: 184
        line 287: 188
        line 288: 192
        line 289: 195
        line 290: 223
        line 291: 230
        line 293: 240
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     255     0 value   D
           12     243     2  sign   I
           45     210     3 wholeNumber   I
           53     202     4 numer0   I
           56     199     5 denom0   I
           59     196     6 numer1   I
           62     193     7 denom1   I
           65     190     8 numer2   I
           68     187     9 denom2   I
           72     183    10    a1   I
           75     180    11    a2   I
           78     177    12    x1   D
           81     174    14    x2   D
           88     167    16    y1   D
           91     164    18    y2   D
          103     152    20 delta1   D
           96     159    22 delta2   D
          155     100    24 fraction   D
           99     156    26     i   I
      StackMapTable: number_of_entries = 7
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ double, int, int, int, int, int, int, int, int, int, int, double, double, double, double, top, top, double, top, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 123
          locals = [ double, int, int, int, int, int, int, int, int, int, int, double, double, double, double, double, double, double, int ]
          stack = []
        frame_type = 16 /* same */

  public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #34                 // String The string must not be null
        11: iconst_0
        12: anewarray     #35                 // class java/lang/Object
        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: aload_0
        19: bipush        46
        21: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
        24: istore_1
        25: iload_1
        26: iflt          37
        29: aload_0
        30: invokestatic  #38                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
        33: invokestatic  #39                 // Method getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;
        36: areturn
        37: aload_0
        38: bipush        32
        40: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
        43: istore_1
        44: iload_1
        45: ifle          117
        48: aload_0
        49: iconst_0
        50: iload_1
        51: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        54: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
        57: istore_2
        58: aload_0
        59: iload_1
        60: iconst_1
        61: iadd
        62: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
        65: astore_0
        66: aload_0
        67: bipush        47
        69: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
        72: istore_1
        73: iload_1
        74: ifge          87
        77: new           #43                 // class java/lang/NumberFormatException
        80: dup
        81: ldc           #44                 // String The fraction could not be parsed as the format X Y/Z
        83: invokespecial #45                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        86: athrow
        87: aload_0
        88: iconst_0
        89: iload_1
        90: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        93: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
        96: istore_3
        97: aload_0
        98: iload_1
        99: iconst_1
       100: iadd
       101: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       104: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       107: istore        4
       109: iload_2
       110: iload_3
       111: iload         4
       113: invokestatic  #46                 // Method getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;
       116: areturn
       117: aload_0
       118: bipush        47
       120: invokevirtual #37                 // Method java/lang/String.indexOf:(I)I
       123: istore_1
       124: iload_1
       125: ifge          137
       128: aload_0
       129: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       132: iconst_1
       133: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
       136: areturn
       137: aload_0
       138: iconst_0
       139: iload_1
       140: invokevirtual #40                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       143: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       146: istore_2
       147: aload_0
       148: iload_1
       149: iconst_1
       150: iadd
       151: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       154: invokestatic  #41                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       157: istore_3
       158: iload_2
       159: iload_3
       160: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
       163: areturn
      LineNumberTable:
        line 315: 0
        line 317: 18
        line 318: 25
        line 319: 29
        line 323: 37
        line 324: 44
        line 325: 48
        line 326: 58
        line 327: 66
        line 328: 73
        line 329: 77
        line 331: 87
        line 332: 97
        line 333: 109
        line 337: 117
        line 338: 124
        line 340: 128
        line 342: 137
        line 343: 147
        line 344: 158
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           58      59     2 whole   I
           97      20     3 numer   I
          109       8     4 denom   I
            0     164     0   str   Ljava/lang/String;
           25     139     1   pos   I
          147      17     2 numer   I
          158       6     3 denom   I
      StackMapTable: number_of_entries = 6
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 29
        frame_type = 19 /* same */

  public int getNumerator();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: ireturn
      LineNumberTable:
        line 359: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public int getDenominator();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field denominator:I
         4: ireturn
      LineNumberTable:
        line 368: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public int getProperNumerator();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: aload_0
         5: getfield      #6                  // Field denominator:I
         8: irem
         9: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
        12: ireturn
      LineNumberTable:
        line 383: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public int getProperWhole();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: aload_0
         5: getfield      #6                  // Field denominator:I
         8: idiv
         9: ireturn
      LineNumberTable:
        line 398: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public int intValue();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: aload_0
         5: getfield      #6                  // Field denominator:I
         8: idiv
         9: ireturn
      LineNumberTable:
        line 412: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public long longValue();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: i2l
         5: aload_0
         6: getfield      #6                  // Field denominator:I
         9: i2l
        10: ldiv
        11: lreturn
      LineNumberTable:
        line 423: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public float floatValue();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: i2f
         5: aload_0
         6: getfield      #6                  // Field denominator:I
         9: i2f
        10: fdiv
        11: freturn
      LineNumberTable:
        line 434: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public double doubleValue();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: i2d
         5: aload_0
         6: getfield      #6                  // Field denominator:I
         9: i2d
        10: ddiv
        11: dreturn
      LineNumberTable:
        line 445: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/apache/commons/lang3/math/Fraction;

  public org.apache.commons.lang3.math.Fraction reduce();
    descriptor: ()Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: ifne          25
         7: aload_0
         8: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
        11: invokevirtual #49                 // Method equals:(Ljava/lang/Object;)Z
        14: ifeq          21
        17: aload_0
        18: goto          24
        21: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
        24: areturn
        25: aload_0
        26: getfield      #5                  // Field numerator:I
        29: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
        32: aload_0
        33: getfield      #6                  // Field denominator:I
        36: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
        39: istore_1
        40: iload_1
        41: iconst_1
        42: if_icmpne     47
        45: aload_0
        46: areturn
        47: aload_0
        48: getfield      #5                  // Field numerator:I
        51: iload_1
        52: idiv
        53: aload_0
        54: getfield      #6                  // Field denominator:I
        57: iload_1
        58: idiv
        59: invokestatic  #47                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
        62: areturn
      LineNumberTable:
        line 461: 0
        line 462: 7
        line 464: 25
        line 465: 40
        line 466: 45
        line 468: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/apache/commons/lang3/math/Fraction;
           40      23     1   gcd   I
      StackMapTable: number_of_entries = 4
        frame_type = 21 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class org/apache/commons/lang3/math/Fraction ]
        frame_type = 0 /* same */
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ int ]

  public org.apache.commons.lang3.math.Fraction invert();
    descriptor: ()Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: ifne          17
         7: new           #7                  // class java/lang/ArithmeticException
        10: dup
        11: ldc           #50                 // String Unable to invert zero.
        13: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        16: athrow
        17: aload_0
        18: getfield      #5                  // Field numerator:I
        21: ldc           #11                 // int -2147483648
        23: if_icmpne     36
        26: new           #7                  // class java/lang/ArithmeticException
        29: dup
        30: ldc           #51                 // String overflow: can\'t negate numerator
        32: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        35: athrow
        36: aload_0
        37: getfield      #5                  // Field numerator:I
        40: ifge          61
        43: new           #13                 // class org/apache/commons/lang3/math/Fraction
        46: dup
        47: aload_0
        48: getfield      #6                  // Field denominator:I
        51: ineg
        52: aload_0
        53: getfield      #5                  // Field numerator:I
        56: ineg
        57: invokespecial #14                 // Method "<init>":(II)V
        60: areturn
        61: new           #13                 // class org/apache/commons/lang3/math/Fraction
        64: dup
        65: aload_0
        66: getfield      #6                  // Field denominator:I
        69: aload_0
        70: getfield      #5                  // Field numerator:I
        73: invokespecial #14                 // Method "<init>":(II)V
        76: areturn
      LineNumberTable:
        line 481: 0
        line 482: 7
        line 484: 17
        line 485: 26
        line 487: 36
        line 488: 43
        line 490: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 3
        frame_type = 17 /* same */
        frame_type = 18 /* same */
        frame_type = 24 /* same */

  public org.apache.commons.lang3.math.Fraction negate();
    descriptor: ()Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: ldc           #11                 // int -2147483648
         6: if_icmpne     19
         9: new           #7                  // class java/lang/ArithmeticException
        12: dup
        13: ldc           #52                 // String overflow: too large to negate
        15: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        18: athrow
        19: new           #13                 // class org/apache/commons/lang3/math/Fraction
        22: dup
        23: aload_0
        24: getfield      #5                  // Field numerator:I
        27: ineg
        28: aload_0
        29: getfield      #6                  // Field denominator:I
        32: invokespecial #14                 // Method "<init>":(II)V
        35: areturn
      LineNumberTable:
        line 502: 0
        line 503: 9
        line 505: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 1
        frame_type = 19 /* same */

  public org.apache.commons.lang3.math.Fraction abs();
    descriptor: ()Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field numerator:I
         4: iflt          9
         7: aload_0
         8: areturn
         9: aload_0
        10: invokevirtual #53                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;
        13: areturn
      LineNumberTable:
        line 518: 0
        line 519: 7
        line 521: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 1
        frame_type = 9 /* same */

  public org.apache.commons.lang3.math.Fraction pow(int);
    descriptor: (I)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: iconst_1
         2: if_icmpne     7
         5: aload_0
         6: areturn
         7: iload_1
         8: ifne          15
        11: getstatic     #54                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;
        14: areturn
        15: iload_1
        16: ifge          51
        19: iload_1
        20: ldc           #11                 // int -2147483648
        22: if_icmpne     41
        25: aload_0
        26: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;
        29: iconst_2
        30: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
        33: iload_1
        34: iconst_2
        35: idiv
        36: ineg
        37: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
        40: areturn
        41: aload_0
        42: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;
        45: iload_1
        46: ineg
        47: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
        50: areturn
        51: aload_0
        52: aload_0
        53: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
        56: astore_2
        57: iload_1
        58: iconst_2
        59: irem
        60: ifne          71
        63: aload_2
        64: iload_1
        65: iconst_2
        66: idiv
        67: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
        70: areturn
        71: aload_2
        72: iload_1
        73: iconst_2
        74: idiv
        75: invokevirtual #56                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;
        78: aload_0
        79: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
        82: areturn
      LineNumberTable:
        line 537: 0
        line 538: 5
        line 539: 7
        line 540: 11
        line 541: 15
        line 542: 19
        line 543: 25
        line 545: 41
        line 547: 51
        line 548: 57
        line 549: 63
        line 551: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           57      26     2     f   Lorg/apache/commons/lang3/math/Fraction;
            0      83     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0      83     1 power   I
      StackMapTable: number_of_entries = 5
        frame_type = 7 /* same */
        frame_type = 7 /* same */
        frame_type = 25 /* same */
        frame_type = 9 /* same */
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class org/apache/commons/lang3/math/Fraction ]

  private static int greatestCommonDivisor(int, int);
    descriptor: (II)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=4, args_size=2
         0: iload_0
         1: ifeq          8
         4: iload_1
         5: ifne          40
         8: iload_0
         9: ldc           #11                 // int -2147483648
        11: if_icmpeq     20
        14: iload_1
        15: ldc           #11                 // int -2147483648
        17: if_icmpne     30
        20: new           #7                  // class java/lang/ArithmeticException
        23: dup
        24: ldc           #58                 // String overflow: gcd is 2^31
        26: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        29: athrow
        30: iload_0
        31: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
        34: iload_1
        35: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
        38: iadd
        39: ireturn
        40: iload_0
        41: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
        44: iconst_1
        45: if_icmpeq     56
        48: iload_1
        49: invokestatic  #48                 // Method java/lang/Math.abs:(I)I
        52: iconst_1
        53: if_icmpne     58
        56: iconst_1
        57: ireturn
        58: iload_0
        59: ifle          65
        62: iload_0
        63: ineg
        64: istore_0
        65: iload_1
        66: ifle          72
        69: iload_1
        70: ineg
        71: istore_1
        72: iconst_0
        73: istore_2
        74: iload_0
        75: iconst_1
        76: iand
        77: ifne          106
        80: iload_1
        81: iconst_1
        82: iand
        83: ifne          106
        86: iload_2
        87: bipush        31
        89: if_icmpge     106
        92: iload_0
        93: iconst_2
        94: idiv
        95: istore_0
        96: iload_1
        97: iconst_2
        98: idiv
        99: istore_1
       100: iinc          2, 1
       103: goto          74
       106: iload_2
       107: bipush        31
       109: if_icmpne     122
       112: new           #7                  // class java/lang/ArithmeticException
       115: dup
       116: ldc           #58                 // String overflow: gcd is 2^31
       118: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
       121: athrow
       122: iload_0
       123: iconst_1
       124: iand
       125: iconst_1
       126: if_icmpne     133
       129: iload_1
       130: goto          137
       133: iload_0
       134: iconst_2
       135: idiv
       136: ineg
       137: istore_3
       138: iload_3
       139: iconst_1
       140: iand
       141: ifne          151
       144: iload_3
       145: iconst_2
       146: idiv
       147: istore_3
       148: goto          138
       151: iload_3
       152: ifle          161
       155: iload_3
       156: ineg
       157: istore_0
       158: goto          163
       161: iload_3
       162: istore_1
       163: iload_1
       164: iload_0
       165: isub
       166: iconst_2
       167: idiv
       168: istore_3
       169: iload_3
       170: ifne          138
       173: iload_0
       174: ineg
       175: iconst_1
       176: iload_2
       177: ishl
       178: imul
       179: ireturn
      LineNumberTable:
        line 567: 0
        line 568: 8
        line 569: 20
        line 571: 30
        line 574: 40
        line 575: 56
        line 581: 58
        line 582: 62
        line 584: 65
        line 585: 69
        line 588: 72
        line 589: 74
        line 590: 92
        line 591: 96
        line 592: 100
        line 594: 106
        line 595: 112
        line 599: 122
        line 605: 138
        line 606: 144
        line 609: 151
        line 610: 155
        line 612: 161
        line 615: 163
        line 618: 169
        line 619: 173
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     180     0     u   I
            0     180     1     v   I
           74     106     2     k   I
          138      42     3     t   I
      StackMapTable: number_of_entries = 17
        frame_type = 8 /* same */
        frame_type = 11 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 15 /* same */
        frame_type = 1 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 31 /* same */
        frame_type = 15 /* same */
        frame_type = 10 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 0
          locals = [ int ]
        frame_type = 12 /* same */
        frame_type = 9 /* same */
        frame_type = 1 /* same */

  private static int mulAndCheck(int, int);
    descriptor: (II)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: iload_0
         1: i2l
         2: iload_1
         3: i2l
         4: lmul
         5: lstore_2
         6: lload_2
         7: ldc2_w        #17                 // long -2147483648l
        10: lcmp
        11: iflt          22
        14: lload_2
        15: ldc2_w        #19                 // long 2147483647l
        18: lcmp
        19: ifle          32
        22: new           #7                  // class java/lang/ArithmeticException
        25: dup
        26: ldc           #59                 // String overflow: mul
        28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        31: athrow
        32: lload_2
        33: l2i
        34: ireturn
      LineNumberTable:
        line 635: 0
        line 636: 6
        line 637: 22
        line 639: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0     x   I
            0      35     1     y   I
            6      29     2     m   J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ long ]
        frame_type = 9 /* same */

  private static int mulPosAndCheck(int, int);
    descriptor: (II)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: iload_0
         1: i2l
         2: iload_1
         3: i2l
         4: lmul
         5: lstore_2
         6: lload_2
         7: ldc2_w        #19                 // long 2147483647l
        10: lcmp
        11: ifle          24
        14: new           #7                  // class java/lang/ArithmeticException
        17: dup
        18: ldc           #60                 // String overflow: mulPos
        20: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        23: athrow
        24: lload_2
        25: l2i
        26: ireturn
      LineNumberTable:
        line 653: 0
        line 654: 6
        line 655: 14
        line 657: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0     x   I
            0      27     1     y   I
            6      21     2     m   J
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ long ]

  private static int addAndCheck(int, int);
    descriptor: (II)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: iload_0
         1: i2l
         2: iload_1
         3: i2l
         4: ladd
         5: lstore_2
         6: lload_2
         7: ldc2_w        #17                 // long -2147483648l
        10: lcmp
        11: iflt          22
        14: lload_2
        15: ldc2_w        #19                 // long 2147483647l
        18: lcmp
        19: ifle          32
        22: new           #7                  // class java/lang/ArithmeticException
        25: dup
        26: ldc           #61                 // String overflow: add
        28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        31: athrow
        32: lload_2
        33: l2i
        34: ireturn
      LineNumberTable:
        line 670: 0
        line 671: 6
        line 672: 22
        line 674: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0     x   I
            0      35     1     y   I
            6      29     2     s   J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ long ]
        frame_type = 9 /* same */

  private static int subAndCheck(int, int);
    descriptor: (II)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: iload_0
         1: i2l
         2: iload_1
         3: i2l
         4: lsub
         5: lstore_2
         6: lload_2
         7: ldc2_w        #17                 // long -2147483648l
        10: lcmp
        11: iflt          22
        14: lload_2
        15: ldc2_w        #19                 // long 2147483647l
        18: lcmp
        19: ifle          32
        22: new           #7                  // class java/lang/ArithmeticException
        25: dup
        26: ldc           #61                 // String overflow: add
        28: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        31: athrow
        32: lload_2
        33: l2i
        34: ireturn
      LineNumberTable:
        line 687: 0
        line 688: 6
        line 689: 22
        line 691: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0     x   I
            0      35     1     y   I
            6      29     2     s   J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ long ]
        frame_type = 9 /* same */

  public org.apache.commons.lang3.math.Fraction add(org.apache.commons.lang3.math.Fraction);
    descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_1
         3: invokespecial #62                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
         6: areturn
      LineNumberTable:
        line 705: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0       7     1 fraction   Lorg/apache/commons/lang3/math/Fraction;

  public org.apache.commons.lang3.math.Fraction subtract(org.apache.commons.lang3.math.Fraction);
    descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokespecial #62                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
         6: areturn
      LineNumberTable:
        line 719: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0       7     1 fraction   Lorg/apache/commons/lang3/math/Fraction;

  private org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction, boolean);
    descriptor: (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=10, args_size=3
         0: aload_1
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #63                 // String The fraction must not be null
        11: iconst_0
        12: anewarray     #35                 // class java/lang/Object
        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: aload_0
        19: getfield      #5                  // Field numerator:I
        22: ifne          38
        25: iload_2
        26: ifeq          33
        29: aload_1
        30: goto          37
        33: aload_1
        34: invokevirtual #53                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;
        37: areturn
        38: aload_1
        39: getfield      #5                  // Field numerator:I
        42: ifne          47
        45: aload_0
        46: areturn
        47: aload_0
        48: getfield      #6                  // Field denominator:I
        51: aload_1
        52: getfield      #6                  // Field denominator:I
        55: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
        58: istore_3
        59: iload_3
        60: iconst_1
        61: if_icmpne     130
        64: aload_0
        65: getfield      #5                  // Field numerator:I
        68: aload_1
        69: getfield      #6                  // Field denominator:I
        72: invokestatic  #64                 // Method mulAndCheck:(II)I
        75: istore        4
        77: aload_1
        78: getfield      #5                  // Field numerator:I
        81: aload_0
        82: getfield      #6                  // Field denominator:I
        85: invokestatic  #64                 // Method mulAndCheck:(II)I
        88: istore        5
        90: new           #13                 // class org/apache/commons/lang3/math/Fraction
        93: dup
        94: iload_2
        95: ifeq          108
        98: iload         4
       100: iload         5
       102: invokestatic  #65                 // Method addAndCheck:(II)I
       105: goto          115
       108: iload         4
       110: iload         5
       112: invokestatic  #66                 // Method subAndCheck:(II)I
       115: aload_0
       116: getfield      #6                  // Field denominator:I
       119: aload_1
       120: getfield      #6                  // Field denominator:I
       123: invokestatic  #67                 // Method mulPosAndCheck:(II)I
       126: invokespecial #14                 // Method "<init>":(II)V
       129: areturn
       130: aload_0
       131: getfield      #5                  // Field numerator:I
       134: i2l
       135: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       138: aload_1
       139: getfield      #6                  // Field denominator:I
       142: iload_3
       143: idiv
       144: i2l
       145: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       148: invokevirtual #69                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       151: astore        4
       153: aload_1
       154: getfield      #5                  // Field numerator:I
       157: i2l
       158: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       161: aload_0
       162: getfield      #6                  // Field denominator:I
       165: iload_3
       166: idiv
       167: i2l
       168: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       171: invokevirtual #69                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       174: astore        5
       176: iload_2
       177: ifeq          190
       180: aload         4
       182: aload         5
       184: invokevirtual #70                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       187: goto          197
       190: aload         4
       192: aload         5
       194: invokevirtual #71                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       197: astore        6
       199: aload         6
       201: iload_3
       202: i2l
       203: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       206: invokevirtual #72                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       209: invokevirtual #73                 // Method java/math/BigInteger.intValue:()I
       212: istore        7
       214: iload         7
       216: ifne          223
       219: iload_3
       220: goto          229
       223: iload         7
       225: iload_3
       226: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
       229: istore        8
       231: aload         6
       233: iload         8
       235: i2l
       236: invokestatic  #68                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
       239: invokevirtual #74                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
       242: astore        9
       244: aload         9
       246: invokevirtual #75                 // Method java/math/BigInteger.bitLength:()I
       249: bipush        31
       251: if_icmple     264
       254: new           #7                  // class java/lang/ArithmeticException
       257: dup
       258: ldc           #76                 // String overflow: numerator too large after multiply
       260: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
       263: athrow
       264: new           #13                 // class org/apache/commons/lang3/math/Fraction
       267: dup
       268: aload         9
       270: invokevirtual #73                 // Method java/math/BigInteger.intValue:()I
       273: aload_0
       274: getfield      #6                  // Field denominator:I
       277: iload_3
       278: idiv
       279: aload_1
       280: getfield      #6                  // Field denominator:I
       283: iload         8
       285: idiv
       286: invokestatic  #67                 // Method mulPosAndCheck:(II)I
       289: invokespecial #14                 // Method "<init>":(II)V
       292: areturn
      LineNumberTable:
        line 733: 0
        line 735: 18
        line 736: 25
        line 738: 38
        line 739: 45
        line 743: 47
        line 744: 59
        line 746: 64
        line 747: 77
        line 748: 90
        line 754: 130
        line 755: 153
        line 756: 176
        line 759: 199
        line 760: 214
        line 763: 231
        line 764: 244
        line 765: 254
        line 767: 264
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           77      53     4   uvp   I
           90      40     5   upv   I
            0     293     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0     293     1 fraction   Lorg/apache/commons/lang3/math/Fraction;
            0     293     2 isAdd   Z
           59     234     3    d1   I
          153     140     4   uvp   Ljava/math/BigInteger;
          176     117     5   upv   Ljava/math/BigInteger;
          199      94     6     t   Ljava/math/BigInteger;
          214      79     7 tmodd1   I
          231      62     8    d2   I
          244      49     9     w   Ljava/math/BigInteger;
      StackMapTable: number_of_entries = 14
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 23 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/apache/commons/lang3/math/Fraction ]
        frame_type = 0 /* same */
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class org/apache/commons/lang3/math/Fraction, class org/apache/commons/lang3/math/Fraction, int, int, int, int ]
          stack = [ uninitialized 90, uninitialized 90 ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class org/apache/commons/lang3/math/Fraction, class org/apache/commons/lang3/math/Fraction, int, int, int, int ]
          stack = [ uninitialized 90, uninitialized 90, int ]
        frame_type = 249 /* chop */
          offset_delta = 14
        frame_type = 253 /* append */
          offset_delta = 59
          locals = [ class java/math/BigInteger, class java/math/BigInteger ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/math/BigInteger ]
        frame_type = 253 /* append */
          offset_delta = 25
          locals = [ class java/math/BigInteger, int ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [ int, class java/math/BigInteger ]

  public org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction);
    descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_1
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #63                 // String The fraction must not be null
        11: iconst_0
        12: anewarray     #35                 // class java/lang/Object
        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: aload_0
        19: getfield      #5                  // Field numerator:I
        22: ifeq          32
        25: aload_1
        26: getfield      #5                  // Field numerator:I
        29: ifne          36
        32: getstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
        35: areturn
        36: aload_0
        37: getfield      #5                  // Field numerator:I
        40: aload_1
        41: getfield      #6                  // Field denominator:I
        44: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
        47: istore_2
        48: aload_1
        49: getfield      #5                  // Field numerator:I
        52: aload_0
        53: getfield      #6                  // Field denominator:I
        56: invokestatic  #23                 // Method greatestCommonDivisor:(II)I
        59: istore_3
        60: aload_0
        61: getfield      #5                  // Field numerator:I
        64: iload_2
        65: idiv
        66: aload_1
        67: getfield      #5                  // Field numerator:I
        70: iload_3
        71: idiv
        72: invokestatic  #64                 // Method mulAndCheck:(II)I
        75: aload_0
        76: getfield      #6                  // Field denominator:I
        79: iload_3
        80: idiv
        81: aload_1
        82: getfield      #6                  // Field denominator:I
        85: iload_2
        86: idiv
        87: invokestatic  #67                 // Method mulPosAndCheck:(II)I
        90: invokestatic  #33                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;
        93: areturn
      LineNumberTable:
        line 781: 0
        line 782: 18
        line 783: 32
        line 787: 36
        line 788: 48
        line 789: 60
        line 790: 87
        line 789: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0      94     1 fraction   Lorg/apache/commons/lang3/math/Fraction;
           48      46     2    d1   I
           60      34     3    d2   I
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 22 /* same */
        frame_type = 3 /* same */

  public org.apache.commons.lang3.math.Fraction divideBy(org.apache.commons.lang3.math.Fraction);
    descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #63                 // String The fraction must not be null
        11: iconst_0
        12: anewarray     #35                 // class java/lang/Object
        15: invokestatic  #36                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: aload_1
        19: getfield      #5                  // Field numerator:I
        22: ifne          35
        25: new           #7                  // class java/lang/ArithmeticException
        28: dup
        29: ldc           #77                 // String The fraction to divide by must not be zero
        31: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
        34: athrow
        35: aload_0
        36: aload_1
        37: invokevirtual #55                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;
        40: invokevirtual #57                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;
        43: areturn
      LineNumberTable:
        line 804: 0
        line 805: 18
        line 806: 25
        line 808: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0      44     1 fraction   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 25 /* same */

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: instanceof    #13                 // class org/apache/commons/lang3/math/Fraction
        11: ifne          16
        14: iconst_0
        15: ireturn
        16: aload_1
        17: checkcast     #13                 // class org/apache/commons/lang3/math/Fraction
        20: astore_2
        21: aload_0
        22: invokevirtual #78                 // Method getNumerator:()I
        25: aload_2
        26: invokevirtual #78                 // Method getNumerator:()I
        29: if_icmpne     47
        32: aload_0
        33: invokevirtual #79                 // Method getDenominator:()I
        36: aload_2
        37: invokevirtual #79                 // Method getDenominator:()I
        40: if_icmpne     47
        43: iconst_1
        44: goto          48
        47: iconst_0
        48: ireturn
      LineNumberTable:
        line 824: 0
        line 825: 5
        line 827: 7
        line 828: 14
        line 830: 16
        line 831: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0      49     1   obj   Ljava/lang/Object;
           21      28     2 other   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 4
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ class org/apache/commons/lang3/math/Fraction ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field hashCode:I
         4: ifne          27
         7: aload_0
         8: bipush        37
        10: sipush        629
        13: aload_0
        14: invokevirtual #78                 // Method getNumerator:()I
        17: iadd
        18: imul
        19: aload_0
        20: invokevirtual #79                 // Method getDenominator:()I
        23: iadd
        24: putfield      #2                  // Field hashCode:I
        27: aload_0
        28: getfield      #2                  // Field hashCode:I
        31: ireturn
      LineNumberTable:
        line 841: 0
        line 843: 7
        line 845: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 1
        frame_type = 27 /* same */

  public int compareTo(org.apache.commons.lang3.math.Fraction);
    descriptor: (Lorg/apache/commons/lang3/math/Fraction;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpne     7
         5: iconst_0
         6: ireturn
         7: aload_0
         8: getfield      #5                  // Field numerator:I
        11: aload_1
        12: getfield      #5                  // Field numerator:I
        15: if_icmpne     31
        18: aload_0
        19: getfield      #6                  // Field denominator:I
        22: aload_1
        23: getfield      #6                  // Field denominator:I
        26: if_icmpne     31
        29: iconst_0
        30: ireturn
        31: aload_0
        32: getfield      #5                  // Field numerator:I
        35: i2l
        36: aload_1
        37: getfield      #6                  // Field denominator:I
        40: i2l
        41: lmul
        42: lstore_2
        43: aload_1
        44: getfield      #5                  // Field numerator:I
        47: i2l
        48: aload_0
        49: getfield      #6                  // Field denominator:I
        52: i2l
        53: lmul
        54: lstore        4
        56: lload_2
        57: lload         4
        59: invokestatic  #80                 // Method java/lang/Long.compare:(JJ)I
        62: ireturn
      LineNumberTable:
        line 862: 0
        line 863: 5
        line 865: 7
        line 866: 29
        line 870: 31
        line 871: 43
        line 872: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/apache/commons/lang3/math/Fraction;
            0      63     1 other   Lorg/apache/commons/lang3/math/Fraction;
           43      20     2 first   J
           56       7     4 second   J
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 23 /* same */

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field toString:Ljava/lang/String;
         4: ifnonnull     40
         7: aload_0
         8: new           #81                 // class java/lang/StringBuilder
        11: dup
        12: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
        15: aload_0
        16: invokevirtual #78                 // Method getNumerator:()I
        19: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        22: ldc           #84                 // String /
        24: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: aload_0
        28: invokevirtual #79                 // Method getDenominator:()I
        31: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        34: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        37: putfield      #3                  // Field toString:Ljava/lang/String;
        40: aload_0
        41: getfield      #3                  // Field toString:Ljava/lang/String;
        44: areturn
      LineNumberTable:
        line 884: 0
        line 885: 7
        line 887: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 1
        frame_type = 40 /* same */

  public java.lang.String toProperString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: getfield      #4                  // Field toProperString:Ljava/lang/String;
         4: ifnonnull     193
         7: aload_0
         8: getfield      #5                  // Field numerator:I
        11: ifne          23
        14: aload_0
        15: ldc           #87                 // String 0
        17: putfield      #4                  // Field toProperString:Ljava/lang/String;
        20: goto          193
        23: aload_0
        24: getfield      #5                  // Field numerator:I
        27: aload_0
        28: getfield      #6                  // Field denominator:I
        31: if_icmpne     43
        34: aload_0
        35: ldc           #88                 // String 1
        37: putfield      #4                  // Field toProperString:Ljava/lang/String;
        40: goto          193
        43: aload_0
        44: getfield      #5                  // Field numerator:I
        47: iconst_m1
        48: aload_0
        49: getfield      #6                  // Field denominator:I
        52: imul
        53: if_icmpne     65
        56: aload_0
        57: ldc           #89                 // String -1
        59: putfield      #4                  // Field toProperString:Ljava/lang/String;
        62: goto          193
        65: aload_0
        66: getfield      #5                  // Field numerator:I
        69: ifle          80
        72: aload_0
        73: getfield      #5                  // Field numerator:I
        76: ineg
        77: goto          84
        80: aload_0
        81: getfield      #5                  // Field numerator:I
        84: aload_0
        85: getfield      #6                  // Field denominator:I
        88: ineg
        89: if_icmpge     160
        92: aload_0
        93: invokevirtual #90                 // Method getProperNumerator:()I
        96: istore_1
        97: iload_1
        98: ifne          115
       101: aload_0
       102: aload_0
       103: invokevirtual #91                 // Method getProperWhole:()I
       106: invokestatic  #92                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       109: putfield      #4                  // Field toProperString:Ljava/lang/String;
       112: goto          157
       115: aload_0
       116: new           #81                 // class java/lang/StringBuilder
       119: dup
       120: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
       123: aload_0
       124: invokevirtual #91                 // Method getProperWhole:()I
       127: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       130: ldc           #93                 // String
       132: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       135: iload_1
       136: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       139: ldc           #84                 // String /
       141: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       144: aload_0
       145: invokevirtual #79                 // Method getDenominator:()I
       148: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       151: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       154: putfield      #4                  // Field toProperString:Ljava/lang/String;
       157: goto          193
       160: aload_0
       161: new           #81                 // class java/lang/StringBuilder
       164: dup
       165: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
       168: aload_0
       169: invokevirtual #78                 // Method getNumerator:()I
       172: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       175: ldc           #84                 // String /
       177: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       180: aload_0
       181: invokevirtual #79                 // Method getDenominator:()I
       184: invokevirtual #83                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       187: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       190: putfield      #4                  // Field toProperString:Ljava/lang/String;
       193: aload_0
       194: getfield      #4                  // Field toProperString:Ljava/lang/String;
       197: areturn
      LineNumberTable:
        line 900: 0
        line 901: 7
        line 902: 14
        line 903: 23
        line 904: 34
        line 905: 43
        line 906: 56
        line 907: 65
        line 912: 92
        line 913: 97
        line 914: 101
        line 916: 115
        line 918: 157
        line 919: 160
        line 922: 193
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           97      60     1 properNumerator   I
            0     198     0  this   Lorg/apache/commons/lang3/math/Fraction;
      StackMapTable: number_of_entries = 9
        frame_type = 23 /* same */
        frame_type = 19 /* same */
        frame_type = 21 /* same */
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 41
        frame_type = 2 /* same */
        frame_type = 32 /* same */

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #13                 // class org/apache/commons/lang3/math/Fraction
         5: invokevirtual #94                 // Method compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I
         8: ireturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/lang3/math/Fraction;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=0, args_size=0
         0: new           #13                 // class org/apache/commons/lang3/math/Fraction
         3: dup
         4: iconst_0
         5: iconst_1
         6: invokespecial #14                 // Method "<init>":(II)V
         9: putstatic     #22                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;
        12: new           #13                 // class org/apache/commons/lang3/math/Fraction
        15: dup
        16: iconst_1
        17: iconst_1
        18: invokespecial #14                 // Method "<init>":(II)V
        21: putstatic     #54                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;
        24: new           #13                 // class org/apache/commons/lang3/math/Fraction
        27: dup
        28: iconst_1
        29: iconst_2
        30: invokespecial #14                 // Method "<init>":(II)V
        33: putstatic     #95                 // Field ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;
        36: new           #13                 // class org/apache/commons/lang3/math/Fraction
        39: dup
        40: iconst_1
        41: iconst_3
        42: invokespecial #14                 // Method "<init>":(II)V
        45: putstatic     #96                 // Field ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;
        48: new           #13                 // class org/apache/commons/lang3/math/Fraction
        51: dup
        52: iconst_2
        53: iconst_3
        54: invokespecial #14                 // Method "<init>":(II)V
        57: putstatic     #97                 // Field TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;
        60: new           #13                 // class org/apache/commons/lang3/math/Fraction
        63: dup
        64: iconst_1
        65: iconst_4
        66: invokespecial #14                 // Method "<init>":(II)V
        69: putstatic     #98                 // Field ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;
        72: new           #13                 // class org/apache/commons/lang3/math/Fraction
        75: dup
        76: iconst_2
        77: iconst_4
        78: invokespecial #14                 // Method "<init>":(II)V
        81: putstatic     #99                 // Field TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
        84: new           #13                 // class org/apache/commons/lang3/math/Fraction
        87: dup
        88: iconst_3
        89: iconst_4
        90: invokespecial #14                 // Method "<init>":(II)V
        93: putstatic     #100                // Field THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;
        96: new           #13                 // class org/apache/commons/lang3/math/Fraction
        99: dup
       100: iconst_1
       101: iconst_5
       102: invokespecial #14                 // Method "<init>":(II)V
       105: putstatic     #101                // Field ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;
       108: new           #13                 // class org/apache/commons/lang3/math/Fraction
       111: dup
       112: iconst_2
       113: iconst_5
       114: invokespecial #14                 // Method "<init>":(II)V
       117: putstatic     #102                // Field TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
       120: new           #13                 // class org/apache/commons/lang3/math/Fraction
       123: dup
       124: iconst_3
       125: iconst_5
       126: invokespecial #14                 // Method "<init>":(II)V
       129: putstatic     #103                // Field THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
       132: new           #13                 // class org/apache/commons/lang3/math/Fraction
       135: dup
       136: iconst_4
       137: iconst_5
       138: invokespecial #14                 // Method "<init>":(II)V
       141: putstatic     #104                // Field FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;
       144: return
      LineNumberTable:
        line 48: 0
        line 52: 12
        line 56: 24
        line 60: 36
        line 64: 48
        line 68: 60
        line 72: 72
        line 76: 84
        line 80: 96
        line 84: 108
        line 88: 120
        line 92: 132
}
Signature: #239                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;
SourceFile: "Fraction.java"
