Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParSeqLike$ParSeqLikeZip.class
  Last modified May 29, 2022; size 8927 bytes
  SHA-256 checksum e31420231e30d95223af29d89fce174b209a4deccd81a28f3e2f41ca14f71ba4
  Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$ParSeqLikeZip<U extends java.lang.Object, S extends java.lang.Object, That extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeTransformer<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeZip<U, S, That>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParSeqLike$ParSeqLikeZip
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 7, methods: 29, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParSeqLike$ParSeqLikeZip
    #2 = Class              #1            // scala/collection/parallel/ParSeqLike$ParSeqLikeZip
    #3 = Utf8               <U:Ljava/lang/Object;S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeTransformer<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeZip<TU;TS;TThat;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer
    #7 = Class              #6            // scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer
    #8 = Utf8               ParSeqLike.scala
    #9 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #10 = Class              #9            // scala/collection/parallel/ParIterableLike$Accessor
   #11 = Utf8               scala/collection/parallel/ParIterableLike
   #12 = Class              #11           // scala/collection/parallel/ParIterableLike
   #13 = Utf8               Accessor
   #14 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #16 = Utf8               StrictSplitterCheckTask
   #17 = Utf8               scala/collection/parallel/ParSeqLike
   #18 = Class              #17           // scala/collection/parallel/ParSeqLike
   #19 = Utf8               ParSeqLikeTransformer
   #20 = Utf8               ParSeqLikeZip
   #21 = Utf8               len
   #22 = Utf8               I
   #23 = Utf8               cf
   #24 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #25 = Utf8               Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;
   #26 = Utf8               pit
   #27 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #28 = Utf8               Lscala/collection/parallel/SeqSplitter<TT;>;
   #29 = Utf8               otherpit
   #30 = Utf8               Lscala/collection/parallel/SeqSplitter<TS;>;
   #31 = Utf8               result
   #32 = Utf8               Lscala/collection/parallel/Combiner;
   #33 = Utf8               Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;
   #34 = Utf8               throwable
   #35 = Utf8               Ljava/lang/Throwable;
   #36 = Utf8               $outer
   #37 = Utf8               Lscala/collection/parallel/ParSeqLike;
   #38 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #39 = Utf8               ()Ljava/lang/String;
   #40 = Utf8               toString
   #41 = NameAndType        #40:#39       // toString:()Ljava/lang/String;
   #42 = Methodref          #5.#41        // java/lang/Object.toString:()Ljava/lang/String;
   #43 = Utf8               this
   #44 = Utf8               Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
   #45 = Utf8               shouldSplitFurther
   #46 = Utf8               ()Z
   #47 = Utf8               shouldSplitFurther$
   #48 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #49 = NameAndType        #47:#48       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #50 = InterfaceMethodref #10.#49       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #51 = Utf8               signalAbort
   #52 = Utf8               ()V
   #53 = Utf8               signalAbort$
   #54 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #55 = NameAndType        #53:#54       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #56 = InterfaceMethodref #10.#55       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #57 = Utf8               toString$
   #58 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #59 = NameAndType        #57:#58       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #60 = InterfaceMethodref #10.#59       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #61 = Utf8               requiresStrictSplitters
   #62 = Utf8               requiresStrictSplitters$
   #63 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #64 = NameAndType        #62:#63       // requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #65 = InterfaceMethodref #15.#64       // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
   #66 = Utf8               repr
   #67 = Utf8               ()Ljava/lang/Object;
   #68 = Utf8               scala/collection/parallel/Task
   #69 = Class              #68           // scala/collection/parallel/Task
   #70 = Utf8               repr$
   #71 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #73 = InterfaceMethodref #69.#72       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #74 = Utf8               forwardThrowable
   #75 = Utf8               forwardThrowable$
   #76 = Utf8               (Lscala/collection/parallel/Task;)V
   #77 = NameAndType        #75:#76       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #78 = InterfaceMethodref #69.#77       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #79 = Utf8               tryLeaf
   #80 = Utf8               (Lscala/Option;)V
   #81 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
   #82 = Utf8               lastres
   #83 = Utf8               tryLeaf$
   #84 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #85 = NameAndType        #83:#84       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #86 = InterfaceMethodref #69.#85       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #87 = Utf8               Lscala/Option;
   #88 = Utf8               tryMerge
   #89 = Utf8               (Ljava/lang/Object;)V
   #90 = Utf8               t
   #91 = Utf8               tryMerge$
   #92 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #93 = NameAndType        #91:#92       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #94 = InterfaceMethodref #69.#93       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #95 = Utf8               Ljava/lang/Object;
   #96 = Utf8               mergeThrowables
   #97 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #98 = Utf8               that
   #99 = Utf8               mergeThrowables$
  #100 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #101 = NameAndType        #99:#100      // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #102 = InterfaceMethodref #69.#101      // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #103 = Utf8               Lscala/collection/parallel/Task;
  #104 = Utf8               ()Ljava/lang/Throwable;
  #105 = NameAndType        #34:#35       // throwable:Ljava/lang/Throwable;
  #106 = Fieldref           #2.#105       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.throwable:Ljava/lang/Throwable;
  #107 = Utf8               throwable_$eq
  #108 = Utf8               (Ljava/lang/Throwable;)V
  #109 = Utf8               x$1
  #110 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #111 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TT;>;
  #112 = NameAndType        #26:#27       // pit:Lscala/collection/parallel/SeqSplitter;
  #113 = Fieldref           #2.#112       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.pit:Lscala/collection/parallel/SeqSplitter;
  #114 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TS;>;
  #115 = NameAndType        #29:#27       // otherpit:Lscala/collection/parallel/SeqSplitter;
  #116 = Fieldref           #2.#115       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.otherpit:Lscala/collection/parallel/SeqSplitter;
  #117 = Utf8               ()Lscala/collection/parallel/Combiner;
  #118 = Utf8               ()Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;
  #119 = NameAndType        #31:#32       // result:Lscala/collection/parallel/Combiner;
  #120 = Fieldref           #2.#119       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.result:Lscala/collection/parallel/Combiner;
  #121 = Utf8               result_$eq
  #122 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #123 = Utf8               (Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;)V
  #124 = Utf8               leaf
  #125 = Utf8               prev
  #126 = NameAndType        #26:#110      // pit:()Lscala/collection/parallel/SeqSplitter;
  #127 = Methodref          #2.#126       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.pit:()Lscala/collection/parallel/SeqSplitter;
  #128 = NameAndType        #29:#110      // otherpit:()Lscala/collection/parallel/SeqSplitter;
  #129 = Methodref          #2.#128       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.otherpit:()Lscala/collection/parallel/SeqSplitter;
  #130 = NameAndType        #23:#24       // cf:Lscala/collection/parallel/CombinerFactory;
  #131 = Fieldref           #2.#130       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.cf:Lscala/collection/parallel/CombinerFactory;
  #132 = Utf8               scala/collection/parallel/CombinerFactory
  #133 = Class              #132          // scala/collection/parallel/CombinerFactory
  #134 = Utf8               apply
  #135 = NameAndType        #134:#117     // apply:()Lscala/collection/parallel/Combiner;
  #136 = InterfaceMethodref #133.#135     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #137 = Utf8               scala/collection/parallel/SeqSplitter
  #138 = Class              #137          // scala/collection/parallel/SeqSplitter
  #139 = Utf8               zip2combiner
  #140 = Utf8               (Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #141 = NameAndType        #139:#140     // zip2combiner:(Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #142 = InterfaceMethodref #138.#141     // scala/collection/parallel/SeqSplitter.zip2combiner:(Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #143 = NameAndType        #121:#122     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #144 = Methodref          #2.#143       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #145 = Utf8               newSubtask
  #146 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #147 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #148 = Utf8               p
  #149 = Utf8               java/lang/UnsupportedOperationException
  #150 = Class              #149          // java/lang/UnsupportedOperationException
  #151 = Utf8               <init>
  #152 = NameAndType        #151:#52      // "<init>":()V
  #153 = Methodref          #150.#152     // java/lang/UnsupportedOperationException."<init>":()V
  #154 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #155 = Utf8               split
  #156 = Utf8               ()Lscala/collection/immutable/Seq;
  #157 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeZip<TU;TS;TThat;>;>;
  #158 = NameAndType        #21:#22       // len:I
  #159 = Fieldref           #2.#158       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.len:I
  #160 = Utf8               scala/runtime/ScalaRunTime$
  #161 = Class              #160          // scala/runtime/ScalaRunTime$
  #162 = Utf8               MODULE$
  #163 = Utf8               Lscala/runtime/ScalaRunTime$;
  #164 = NameAndType        #162:#163     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #165 = Fieldref           #161.#164     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #166 = Utf8               wrapIntArray
  #167 = Utf8               ([I)Lscala/collection/immutable/ArraySeq;
  #168 = NameAndType        #166:#167     // wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
  #169 = Methodref          #161.#168     // scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
  #170 = Utf8               psplitWithSignalling
  #171 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #172 = NameAndType        #170:#171     // psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #173 = InterfaceMethodref #138.#172     // scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #174 = Utf8               scala/package$
  #175 = Class              #174          // scala/package$
  #176 = Utf8               Lscala/package$;
  #177 = NameAndType        #162:#176     // MODULE$:Lscala/package$;
  #178 = Fieldref           #175.#177     // scala/package$.MODULE$:Lscala/package$;
  #179 = Utf8               Seq
  #180 = Utf8               ()Lscala/collection/immutable/Seq$;
  #181 = NameAndType        #179:#180     // Seq:()Lscala/collection/immutable/Seq$;
  #182 = Methodref          #175.#181     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #183 = Utf8               scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer
  #184 = Utf8               ()Lscala/collection/parallel/ParSeqLike;
  #185 = NameAndType        #183:#184     // scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #186 = Methodref          #2.#185       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #187 = Utf8               scala/collection/immutable/Seq
  #188 = Class              #187          // scala/collection/immutable/Seq
  #189 = Utf8               (I)Ljava/lang/Object;
  #190 = NameAndType        #134:#189     // apply:(I)Ljava/lang/Object;
  #191 = InterfaceMethodref #188.#190     // scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
  #192 = Utf8               (Lscala/collection/parallel/ParSeqLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #193 = NameAndType        #151:#192     // "<init>":(Lscala/collection/parallel/ParSeqLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #194 = Methodref          #2.#193       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip."<init>":(Lscala/collection/parallel/ParSeqLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #195 = Utf8               [Ljava/lang/Object;
  #196 = Class              #195          // "[Ljava/lang/Object;"
  #197 = Utf8               wrapRefArray
  #198 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #199 = NameAndType        #197:#198     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #200 = Methodref          #161.#199     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #201 = Utf8               scala/collection/immutable/Seq$
  #202 = Class              #201          // scala/collection/immutable/Seq$
  #203 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #204 = NameAndType        #134:#203     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #205 = Methodref          #202.#204     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #206 = Utf8               fp
  #207 = Utf8               sp
  #208 = Utf8               pits
  #209 = Utf8               Lscala/collection/immutable/Seq;
  #210 = Utf8               opits
  #211 = Utf8               merge
  #212 = Utf8               (Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;)V
  #213 = Utf8               (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeZip<TU;TS;TThat;>;)V
  #214 = NameAndType        #31:#117      // result:()Lscala/collection/parallel/Combiner;
  #215 = Methodref          #2.#214       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.result:()Lscala/collection/parallel/Combiner;
  #216 = Utf8               scala/collection/parallel/Combiner
  #217 = Class              #216          // scala/collection/parallel/Combiner
  #218 = Utf8               combine
  #219 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #220 = NameAndType        #218:#219     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #221 = InterfaceMethodref #217.#220     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #222 = NameAndType        #36:#37       // $outer:Lscala/collection/parallel/ParSeqLike;
  #223 = Fieldref           #2.#222       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.$outer:Lscala/collection/parallel/ParSeqLike;
  #224 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #225 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #226 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #227 = NameAndType        #211:#212     // merge:(Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;)V
  #228 = Methodref          #2.#227       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.merge:(Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;)V
  #229 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #230 = NameAndType        #145:#146     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #231 = Methodref          #2.#230       // scala/collection/parallel/ParSeqLike$ParSeqLikeZip.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #232 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #233 = Utf8               (ILscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/SeqSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
  #234 = Methodref          #5.#152       // java/lang/Object."<init>":()V
  #235 = Utf8               $init$
  #236 = NameAndType        #235:#76      // $init$:(Lscala/collection/parallel/Task;)V
  #237 = InterfaceMethodref #69.#236      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #238 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #239 = NameAndType        #235:#238     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #240 = InterfaceMethodref #15.#239      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #241 = NameAndType        #235:#54      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #242 = InterfaceMethodref #10.#241      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #243 = Utf8               Signature
  #244 = Utf8               Code
  #245 = Utf8               LineNumberTable
  #246 = Utf8               LocalVariableTable
  #247 = Utf8               MethodParameters
  #248 = Utf8               StackMapTable
  #249 = Utf8               InnerClasses
  #250 = Utf8               SourceFile
  #251 = Utf8               ScalaInlineInfo
  #252 = Utf8               Scala
{
  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.parallel.CombinerFactory<scala.Tuple2<U, S>, That> cf;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #25                          // Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;

  private final scala.collection.parallel.SeqSplitter<T> pit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/collection/parallel/SeqSplitter<TT;>;

  private final scala.collection.parallel.SeqSplitter<S> otherpit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #30                          // Lscala/collection/parallel/SeqSplitter<TS;>;

  private volatile scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #33                          // Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParSeqLike $outer;
    descriptor: Lscala/collection/parallel/ParSeqLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #42                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #60                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #65                 // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.requiresStrictSplitters$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)Z
         4: ireturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #73                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #78                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #86                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       6     1 lastres   Lscala/Option;
    Signature: #81                          // (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #94                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #102                // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #97                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #106                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #106                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.SeqSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #113                // Field pit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
    Signature: #111                         // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public scala.collection.parallel.SeqSplitter<S> otherpit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #116                // Field otherpit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
    Signature: #114                         // ()Lscala/collection/parallel/SeqSplitter<TS;>;

  public scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #120                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 586: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
    Signature: #118                         // ()Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;

  public void result_$eq(scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #120                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 586: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #123                         // (Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #127                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         5: aload_0
         6: invokevirtual #129                // Method otherpit:()Lscala/collection/parallel/SeqSplitter;
         9: aload_0
        10: getfield      #131                // Field cf:Lscala/collection/parallel/CombinerFactory;
        13: invokeinterface #136,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        18: invokeinterface #142,  3          // InterfaceMethod scala/collection/parallel/SeqSplitter.zip2combiner:(Lscala/collection/parallel/RemainsIterator;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        23: invokevirtual #144                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        26: return
      LineNumberTable:
        line 587: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0      27     1  prev   Lscala/Option;
    Signature: #81                          // (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #150                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #153                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 588: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #147                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeZip<U, S, That>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=13, locals=5, args_size=1
         0: aload_0
         1: getfield      #159                // Field len:I
         4: iconst_2
         5: idiv
         6: istore_1
         7: aload_0
         8: getfield      #159                // Field len:I
        11: aload_0
        12: getfield      #159                // Field len:I
        15: iconst_2
        16: idiv
        17: isub
        18: istore_2
        19: aload_0
        20: invokevirtual #127                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        23: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        26: iconst_2
        27: newarray       int
        29: dup
        30: iconst_0
        31: iload_1
        32: iastore
        33: dup
        34: iconst_1
        35: iload_2
        36: iastore
        37: invokevirtual #169                // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
        40: invokeinterface #173,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        45: astore_3
        46: aload_0
        47: invokevirtual #129                // Method otherpit:()Lscala/collection/parallel/SeqSplitter;
        50: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        53: iconst_2
        54: newarray       int
        56: dup
        57: iconst_0
        58: iload_1
        59: iastore
        60: dup
        61: iconst_1
        62: iload_2
        63: iastore
        64: invokevirtual #169                // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
        67: invokeinterface #173,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        72: astore        4
        74: getstatic     #178                // Field scala/package$.MODULE$:Lscala/package$;
        77: invokevirtual #182                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        80: getstatic     #165                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        83: iconst_2
        84: anewarray     #2                  // class scala/collection/parallel/ParSeqLike$ParSeqLikeZip
        87: dup
        88: iconst_0
        89: new           #2                  // class scala/collection/parallel/ParSeqLike$ParSeqLikeZip
        92: dup
        93: aload_0
        94: invokevirtual #186                // Method scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer:()Lscala/collection/parallel/ParSeqLike;
        97: iload_1
        98: aload_0
        99: getfield      #131                // Field cf:Lscala/collection/parallel/CombinerFactory;
       102: aload_3
       103: iconst_0
       104: invokeinterface #191,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
       109: checkcast     #138                // class scala/collection/parallel/SeqSplitter
       112: aload         4
       114: iconst_0
       115: invokeinterface #191,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
       120: checkcast     #138                // class scala/collection/parallel/SeqSplitter
       123: invokespecial #194                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
       126: aastore
       127: dup
       128: iconst_1
       129: new           #2                  // class scala/collection/parallel/ParSeqLike$ParSeqLikeZip
       132: dup
       133: aload_0
       134: invokevirtual #186                // Method scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer:()Lscala/collection/parallel/ParSeqLike;
       137: iload_2
       138: aload_0
       139: getfield      #131                // Field cf:Lscala/collection/parallel/CombinerFactory;
       142: aload_3
       143: iconst_1
       144: invokeinterface #191,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
       149: checkcast     #138                // class scala/collection/parallel/SeqSplitter
       152: aload         4
       154: iconst_1
       155: invokeinterface #191,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
       160: checkcast     #138                // class scala/collection/parallel/SeqSplitter
       163: invokespecial #194                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
       166: aastore
       167: checkcast     #196                // class "[Ljava/lang/Object;"
       170: invokevirtual #200                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       173: invokevirtual #205                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       176: checkcast     #188                // class scala/collection/immutable/Seq
       179: areturn
      LineNumberTable:
        line 590: 0
        line 591: 7
        line 592: 19
        line 593: 46
        line 594: 74
        line 595: 89
        line 596: 129
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7     172     1    fp   I
           19     160     2    sp   I
           46     133     3  pits   Lscala/collection/immutable/Seq;
           74     105     4 opits   Lscala/collection/immutable/Seq;
            0     180     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
    Signature: #157                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeZip<TU;TS;TThat;>;>;

  public void merge(scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeZip<U, S, That>);
    descriptor: (Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #215                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_1
         6: invokevirtual #215                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #221,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #144                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 599: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0      18     1  that   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
    Signature: #213                         // (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeZip<TU;TS;TThat;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer();
    descriptor: ()Lscala/collection/parallel/ParSeqLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #223                // Field $outer:Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method scala$collection$parallel$ParSeqLike$ParSeqLikeZip$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$ParSeqLikeZip
         5: invokevirtual #228                // Method merge:(Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;)V
         8: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #231                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #217                // class scala/collection/parallel/Combiner
         5: invokevirtual #144                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #215                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public scala.collection.parallel.IterableSplitter pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #127                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;

  public scala.collection.parallel.ParSeqLike$ParSeqLikeZip(int, scala.collection.parallel.CombinerFactory<scala.Tuple2<U, S>, That>, scala.collection.parallel.SeqSplitter<T>, scala.collection.parallel.SeqSplitter<S>);
    descriptor: (Lscala/collection/parallel/ParSeqLike;ILscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: iload_2
         2: putfield      #159                // Field len:I
         5: aload_0
         6: aload_3
         7: putfield      #131                // Field cf:Lscala/collection/parallel/CombinerFactory;
        10: aload_0
        11: aload         4
        13: putfield      #113                // Field pit:Lscala/collection/parallel/SeqSplitter;
        16: aload_0
        17: aload         5
        19: putfield      #116                // Field otherpit:Lscala/collection/parallel/SeqSplitter;
        22: aload_1
        23: ifnonnull     28
        26: aconst_null
        27: athrow
        28: aload_0
        29: aload_1
        30: putfield      #223                // Field $outer:Lscala/collection/parallel/ParSeqLike;
        33: aload_0
        34: invokespecial #234                // Method java/lang/Object."<init>":()V
        37: aload_0
        38: invokestatic  #237                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        41: aload_0
        42: invokestatic  #240                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        45: aload_0
        46: invokestatic  #242                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        49: aload_0
        50: aconst_null
        51: putfield      #120                // Field result:Lscala/collection/parallel/Combiner;
        54: return
      StackMapTable: number_of_entries = 1
        frame_type = 28 /* same */
      LineNumberTable:
        line 584: 0
        line 585: 33
        line 586: 49
        line 584: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0  this   Lscala/collection/parallel/ParSeqLike$ParSeqLikeZip;
            0      55     1 $outer   Lscala/collection/parallel/ParSeqLike;
            0      55     2   len   I
            0      55     3    cf   Lscala/collection/parallel/CombinerFactory;
            0      55     4   pit   Lscala/collection/parallel/SeqSplitter;
            0      55     5 otherpit   Lscala/collection/parallel/SeqSplitter;
    Signature: #233                         // (ILscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/SeqSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      len                            final
      cf                             final
      pit                            final
      otherpit                       final
}
InnerClasses:
  public #13= #10 of #12;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #16= #15 of #12;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #19= #7 of #18;                  // ParSeqLikeTransformer=class scala/collection/parallel/ParSeqLike$ParSeqLikeTransformer of class scala/collection/parallel/ParSeqLike
  public #20= #2 of #18;                  // ParSeqLikeZip=class scala/collection/parallel/ParSeqLike$ParSeqLikeZip of class scala/collection/parallel/ParSeqLike
Signature: #3                           // <U:Ljava/lang/Object;S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeTransformer<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeZip<TU;TS;TThat;>;>;
SourceFile: "ParSeqLike.scala"
  ScalaInlineInfo: length = 0x95 (unknown attribute)
   01 00 00 1D 00 97 00 C0 00 00 4A 00 34 00 00 7C
   00 50 00 00 D3 00 59 00 00 D3 00 D4 00 00 60 00
   4C 00 00 91 00 E5 00 00 91 00 92 00 00 1D 00 6E
   00 00 1A 00 E8 00 00 1A 00 6E 00 00 42 00 43 00
   00 3D 00 2E 00 00 1F 00 43 00 00 1F 00 75 00 00
   79 00 59 00 00 79 00 7A 00 00 E0 00 E1 00 00 26
   00 27 01 00 E2 00 E1 00 00 B7 00 B8 00 00 2D 00
   2E 00 00 33 00 34 00 00 9B 00 9C 00 00 22 00 68
   00 00 6B 00 6C 00 00 28 00 27 00 00 4F 00 50 00
   00 58 00 59 00
  Scala: length = 0x0 (unknown attribute)

