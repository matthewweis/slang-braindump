Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/ConcurrentUtils.class
  Last modified May 29, 2022; size 5147 bytes
  SHA-256 checksum 794dcb0c9b18745266627607d03daed33530ec07e5ef62da28912eade70a51ed
  Compiled from "ConcurrentUtils.java"
public class org.apache.commons.lang3.concurrent.ConcurrentUtils
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #31                         // org/apache/commons/lang3/concurrent/ConcurrentUtils
  super_class: #19                        // java/lang/Object
  interfaces: 0, fields: 0, methods: 13, attributes: 2
Constant pool:
    #1 = Methodref          #19.#93       // java/lang/Object."<init>":()V
    #2 = Methodref          #94.#95       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
    #3 = Methodref          #31.#96       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V
    #4 = Class              #97           // org/apache/commons/lang3/concurrent/ConcurrentException
    #5 = Methodref          #94.#98       // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;
    #6 = Methodref          #4.#99        // org/apache/commons/lang3/concurrent/ConcurrentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
    #7 = Class              #100          // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
    #8 = Methodref          #7.#99        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
    #9 = Methodref          #31.#101      // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
   #10 = Methodref          #31.#102      // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
   #11 = Class              #103          // java/lang/RuntimeException
   #12 = Class              #104          // java/lang/Error
   #13 = Class              #105          // java/lang/StringBuilder
   #14 = Methodref          #13.#93       // java/lang/StringBuilder."<init>":()V
   #15 = String             #106          // Not a checked exception:
   #16 = Methodref          #13.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #17 = Methodref          #13.#108      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #18 = Methodref          #13.#109      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #19 = Class              #110          // java/lang/Object
   #20 = Methodref          #111.#112     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
   #21 = InterfaceMethodref #113.#114     // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;
   #22 = Methodref          #31.#115      // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
   #23 = Methodref          #4.#95        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;
   #24 = Methodref          #7.#116       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/Throwable;)V
   #25 = InterfaceMethodref #117.#118     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #26 = InterfaceMethodref #117.#119     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #27 = Methodref          #31.#120      // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #28 = Methodref          #31.#121      // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
   #29 = Class              #122          // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture
   #30 = Methodref          #29.#123      // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture."<init>":(Ljava/lang/Object;)V
   #31 = Class              #124          // org/apache/commons/lang3/concurrent/ConcurrentUtils
   #32 = Utf8               ConstantFuture
   #33 = Utf8               InnerClasses
   #34 = Utf8               <init>
   #35 = Utf8               ()V
   #36 = Utf8               Code
   #37 = Utf8               LineNumberTable
   #38 = Utf8               LocalVariableTable
   #39 = Utf8               this
   #40 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentUtils;
   #41 = Utf8               extractCause
   #42 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
   #43 = Utf8               ex
   #44 = Utf8               Ljava/util/concurrent/ExecutionException;
   #45 = Utf8               StackMapTable
   #46 = Utf8               extractCauseUnchecked
   #47 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
   #48 = Utf8               handleCause
   #49 = Utf8               (Ljava/util/concurrent/ExecutionException;)V
   #50 = Utf8               cex
   #51 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentException;
   #52 = Utf8               Exceptions
   #53 = Utf8               handleCauseUnchecked
   #54 = Utf8               crex
   #55 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
   #56 = Utf8               checkedException
   #57 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;
   #58 = Utf8               Ljava/lang/Throwable;
   #59 = Utf8               throwCause
   #60 = Utf8               initialize
   #61 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
   #62 = Utf8               initializer
   #63 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;
   #64 = Utf8               LocalVariableTypeTable
   #65 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;
   #66 = Utf8               Signature
   #67 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;
   #68 = Utf8               initializeUnchecked
   #69 = Utf8               putIfAbsent
   #70 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #71 = Utf8               map
   #72 = Utf8               Ljava/util/concurrent/ConcurrentMap;
   #73 = Utf8               key
   #74 = Utf8               Ljava/lang/Object;
   #75 = Utf8               value
   #76 = Utf8               result
   #77 = Utf8               Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
   #78 = Utf8               TK;
   #79 = Utf8               TV;
   #80 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;
   #81 = Utf8               createIfAbsent
   #82 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
   #83 = Utf8               init
   #84 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;
   #85 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;
   #86 = Utf8               createIfAbsentUnchecked
   #87 = Utf8               constantFuture
   #88 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;
   #89 = Utf8               TT;
   #90 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;
   #91 = Utf8               SourceFile
   #92 = Utf8               ConcurrentUtils.java
   #93 = NameAndType        #34:#35       // "<init>":()V
   #94 = Class              #125          // java/util/concurrent/ExecutionException
   #95 = NameAndType        #126:#127     // getCause:()Ljava/lang/Throwable;
   #96 = NameAndType        #59:#49       // throwCause:(Ljava/util/concurrent/ExecutionException;)V
   #97 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException
   #98 = NameAndType        #128:#129     // getMessage:()Ljava/lang/String;
   #99 = NameAndType        #34:#130      // "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
  #100 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
  #101 = NameAndType        #41:#42       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
  #102 = NameAndType        #46:#47       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
  #103 = Utf8               java/lang/RuntimeException
  #104 = Utf8               java/lang/Error
  #105 = Utf8               java/lang/StringBuilder
  #106 = Utf8               Not a checked exception:
  #107 = NameAndType        #131:#132     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #108 = NameAndType        #131:#133     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #109 = NameAndType        #134:#129     // toString:()Ljava/lang/String;
  #110 = Utf8               java/lang/Object
  #111 = Class              #135          // org/apache/commons/lang3/Validate
  #112 = NameAndType        #136:#137     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
  #113 = Class              #138          // org/apache/commons/lang3/concurrent/ConcurrentInitializer
  #114 = NameAndType        #139:#140     // get:()Ljava/lang/Object;
  #115 = NameAndType        #60:#61       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
  #116 = NameAndType        #34:#141      // "<init>":(Ljava/lang/Throwable;)V
  #117 = Class              #142          // java/util/concurrent/ConcurrentMap
  #118 = NameAndType        #69:#143      // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #119 = NameAndType        #139:#144     // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #120 = NameAndType        #69:#70       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #121 = NameAndType        #81:#82       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
  #122 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture
  #123 = NameAndType        #34:#145      // "<init>":(Ljava/lang/Object;)V
  #124 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils
  #125 = Utf8               java/util/concurrent/ExecutionException
  #126 = Utf8               getCause
  #127 = Utf8               ()Ljava/lang/Throwable;
  #128 = Utf8               getMessage
  #129 = Utf8               ()Ljava/lang/String;
  #130 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V
  #131 = Utf8               append
  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #133 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #134 = Utf8               toString
  #135 = Utf8               org/apache/commons/lang3/Validate
  #136 = Utf8               isTrue
  #137 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V
  #138 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer
  #139 = Utf8               get
  #140 = Utf8               ()Ljava/lang/Object;
  #141 = Utf8               (Ljava/lang/Throwable;)V
  #142 = Utf8               java/util/concurrent/ConcurrentMap
  #143 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #145 = Utf8               (Ljava/lang/Object;)V
{
  private org.apache.commons.lang3.concurrent.ConcurrentUtils();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 40: 0
        line 41: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/ConcurrentUtils;

  public static org.apache.commons.lang3.concurrent.ConcurrentException extractCause(java.util.concurrent.ExecutionException);
    descriptor: (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: ifnull        11
         4: aload_0
         5: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
         8: ifnonnull     13
        11: aconst_null
        12: areturn
        13: aload_0
        14: invokestatic  #3                  // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V
        17: new           #4                  // class org/apache/commons/lang3/concurrent/ConcurrentException
        20: dup
        21: aload_0
        22: invokevirtual #5                  // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;
        25: aload_0
        26: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
        29: invokespecial #6                  // Method org/apache/commons/lang3/concurrent/ConcurrentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
        32: areturn
      LineNumberTable:
        line 62: 0
        line 63: 11
        line 66: 13
        line 67: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0    ex   Ljava/util/concurrent/ExecutionException;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 1 /* same */

  public static org.apache.commons.lang3.concurrent.ConcurrentRuntimeException extractCauseUnchecked(java.util.concurrent.ExecutionException);
    descriptor: (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: ifnull        11
         4: aload_0
         5: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
         8: ifnonnull     13
        11: aconst_null
        12: areturn
        13: aload_0
        14: invokestatic  #3                  // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V
        17: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
        20: dup
        21: aload_0
        22: invokevirtual #5                  // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;
        25: aload_0
        26: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
        29: invokespecial #8                  // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
        32: areturn
      LineNumberTable:
        line 84: 0
        line 85: 11
        line 88: 13
        line 89: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0    ex   Ljava/util/concurrent/ExecutionException;
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 1 /* same */

  public static void handleCause(java.util.concurrent.ExecutionException) throws org.apache.commons.lang3.concurrent.ConcurrentException;
    descriptor: (Ljava/util/concurrent/ExecutionException;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokestatic  #9                  // Method extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
         4: astore_1
         5: aload_1
         6: ifnull        11
         9: aload_1
        10: athrow
        11: return
      LineNumberTable:
        line 107: 0
        line 109: 5
        line 110: 9
        line 112: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    ex   Ljava/util/concurrent/ExecutionException;
            5       7     1   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]
    Exceptions:
      throws org.apache.commons.lang3.concurrent.ConcurrentException

  public static void handleCauseUnchecked(java.util.concurrent.ExecutionException);
    descriptor: (Ljava/util/concurrent/ExecutionException;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokestatic  #10                 // Method extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
         4: astore_1
         5: aload_1
         6: ifnull        11
         9: aload_1
        10: athrow
        11: return
      LineNumberTable:
        line 128: 0
        line 130: 5
        line 131: 9
        line 133: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0    ex   Ljava/util/concurrent/ExecutionException;
            5       7     1  crex   Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException ]

  static java.lang.Throwable checkedException(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Ljava/lang/Throwable;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ifnull        22
         4: aload_0
         5: instanceof    #11                 // class java/lang/RuntimeException
         8: ifne          22
        11: aload_0
        12: instanceof    #12                 // class java/lang/Error
        15: ifne          22
        18: iconst_1
        19: goto          23
        22: iconst_0
        23: new           #13                 // class java/lang/StringBuilder
        26: dup
        27: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
        30: ldc           #15                 // String Not a checked exception:
        32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: aload_0
        36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        42: iconst_0
        43: anewarray     #19                 // class java/lang/Object
        46: invokestatic  #20                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        49: aload_0
        50: areturn
      LineNumberTable:
        line 145: 0
        line 148: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0    ex   Ljava/lang/Throwable;
      StackMapTable: number_of_entries = 2
        frame_type = 22 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  private static void throwCause(java.util.concurrent.ExecutionException);
    descriptor: (Ljava/util/concurrent/ExecutionException;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
         4: instanceof    #11                 // class java/lang/RuntimeException
         7: ifeq          18
        10: aload_0
        11: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
        14: checkcast     #11                 // class java/lang/RuntimeException
        17: athrow
        18: aload_0
        19: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
        22: instanceof    #12                 // class java/lang/Error
        25: ifeq          36
        28: aload_0
        29: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
        32: checkcast     #12                 // class java/lang/Error
        35: athrow
        36: return
      LineNumberTable:
        line 158: 0
        line 159: 10
        line 162: 18
        line 163: 28
        line 165: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0    ex   Ljava/util/concurrent/ExecutionException;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 17 /* same */

  public static <T extends java.lang.Object> T initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>) throws org.apache.commons.lang3.concurrent.ConcurrentException;
    descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        13
         4: aload_0
         5: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;
        10: goto          14
        13: aconst_null
        14: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      15     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
    Exceptions:
      throws org.apache.commons.lang3.concurrent.ConcurrentException
    Signature: #67                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;

  public static <T extends java.lang.Object> T initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);
    descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokestatic  #22                 // Method initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
         4: areturn
         5: astore_1
         6: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
         9: dup
        10: aload_1
        11: invokevirtual #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;
        14: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/Throwable;)V
        17: athrow
      Exception table:
         from    to  target type
             0     4     5   Class org/apache/commons/lang3/concurrent/ConcurrentException
      LineNumberTable:
        line 201: 0
        line 202: 5
        line 203: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      12     1   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;
            0      18     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      18     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;
      StackMapTable: number_of_entries = 1
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]
    Signature: #67                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;

  public static <K extends java.lang.Object, V extends java.lang.Object> V putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, V);
    descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: aload_1
         8: aload_2
         9: invokeinterface #25,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        14: astore_3
        15: aload_3
        16: ifnull        23
        19: aload_3
        20: goto          24
        23: aload_2
        24: areturn
      LineNumberTable:
        line 243: 0
        line 244: 4
        line 247: 6
        line 248: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   map   Ljava/util/concurrent/ConcurrentMap;
            0      25     1   key   Ljava/lang/Object;
            0      25     2 value   Ljava/lang/Object;
           15      10     3 result   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      25     0   map   Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
            0      25     1   key   TK;
            0      25     2 value   TV;
           15      10     3 result   TV;
      StackMapTable: number_of_entries = 3
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ class java/lang/Object ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
    Signature: #80                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;

  public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>) throws org.apache.commons.lang3.concurrent.ConcurrentException;
    descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: ifnull        8
         4: aload_2
         5: ifnonnull     10
         8: aconst_null
         9: areturn
        10: aload_0
        11: aload_1
        12: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        17: astore_3
        18: aload_3
        19: ifnonnull     34
        22: aload_0
        23: aload_1
        24: aload_2
        25: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;
        30: invokestatic  #27                 // Method putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        33: areturn
        34: aload_3
        35: areturn
      LineNumberTable:
        line 273: 0
        line 274: 8
        line 277: 10
        line 278: 18
        line 279: 22
        line 281: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0   map   Ljava/util/concurrent/ConcurrentMap;
            0      36     1   key   Ljava/lang/Object;
            0      36     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;
           18      18     3 value   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      36     0   map   Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
            0      36     1   key   TK;
            0      36     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;
           18      18     3 value   TV;
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ class java/lang/Object ]
    Exceptions:
      throws org.apache.commons.lang3.concurrent.ConcurrentException
    Signature: #85                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;

  public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);
    descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #28                 // Method createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;
         6: areturn
         7: astore_3
         8: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException
        11: dup
        12: aload_3
        13: invokevirtual #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;
        16: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException."<init>":(Ljava/lang/Throwable;)V
        19: athrow
      Exception table:
         from    to  target type
             0     6     7   Class org/apache/commons/lang3/concurrent/ConcurrentException
      LineNumberTable:
        line 302: 0
        line 303: 7
        line 304: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      12     3   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;
            0      20     0   map   Ljava/util/concurrent/ConcurrentMap;
            0      20     1   key   Ljava/lang/Object;
            0      20     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      20     0   map   Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
            0      20     1   key   TK;
            0      20     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;
      StackMapTable: number_of_entries = 1
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]
    Signature: #85                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;

  public static <T extends java.lang.Object> java.util.concurrent.Future<T> constantFuture(T);
    descriptor: (Ljava/lang/Object;)Ljava/util/concurrent/Future;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #29                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture
         3: dup
         4: aload_0
         5: invokespecial #30                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 325: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 value   Ljava/lang/Object;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0 value   TT;
    Signature: #90                          // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;
}
SourceFile: "ConcurrentUtils.java"
InnerClasses:
  static final #32= #29 of #31;           // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils
