Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator.class
  Last modified May 29, 2022; size 3026 bytes
  SHA-256 checksum 5c304fdf51ece90ef14423b9c64377023f26d040679f81484bfae3185bca992e
  Compiled from "FunctionConverters.scala"
public final class scala.compat.java8.functionConverterImpls.RichFunction2AsIntBinaryOperator
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 4
Constant pool:
   #1 = Utf8               scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator
   #2 = Class              #1             // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               FunctionConverters.scala
   #6 = Utf8               Lscala/reflect/ScalaSignature;
   #7 = Utf8               bytes
   #8 = Utf8               \u0006\u0005m3A!\u0004\b\u0003/!aA\u0004\u0001C\u0001\u0002\u000b\u0015)\u0019!C\u0005;!IA\u0005\u0001B\u0003\u0002\u0003\u0006IA\b\u0005\u0006K\u0001!\tA\n\u0005\u0006W\u0001!\t\u0001\f\u0005\bw\u0001\t\t\u0011\"\u0011=\u0011\u001di\u0004!!A\u0005By:qa\u0012\b\u0002\u0002#\u0005\u0001JB\u0004\u000e\u001d\u0005\u0005\t\u0012A%\t\u000b\u0015BA\u0011A\'\t\u000b9CAQA(\t\u000fMC\u0011\u0011!C\u0003)\"9a\u000bCA\u0001\n\u000b9&\u0001\t*jG\"4UO\\2uS>t\'\'Q:J]R\u0014\u0015N\\1ss>\u0003XM]1u_JT!a\u0004\t\u0002-\u0019,hn\u0019;j_:\u001cuN\u001c<feR,\'/S7qYNT!!\u0005\n\u0002\u000b)\fg/\u0019\u001d\u000b\u0005M!\u0012AB2p[B\fGOC\u0001\u0016\u0003\u0015\u00198-\u00197b\u0007\u0001\u0019\"\u0001\u0001\r\u0011\u0005eQR\"\u0001\u000b\n\u0005m!\"AB!osZ\u000bG.\u0001,tG\u0006d\u0017\rJ2p[B\fG\u000f\n6bm\u0006DDEZ;oGRLwN\\\"p]Z,\'\u000f^3s\u00136\u0004Hn\u001d\u0013SS\u000eDg)\u001e8di&|gNM!t\u0013:$()\u001b8bef|\u0005/\u001a:bi>\u0014H\u0005J;oI\u0016\u0014H._5oOV\ta\u0004E\u0003\u001a?\u0005\n\u0013%\u0003\u0002!)\tIa)\u001e8di&|gN\r\t\u00033\tJ!a\t\u000b\u0003\u0007%sG/A,tG\u0006d\u0017\rJ2p[B\fG\u000f\n6bm\u0006DDEZ;oGRLwN\\\"p]Z,\'\u000f^3s\u00136\u0004Hn\u001d\u0013SS\u000eDg)\u001e8di&|gNM!t\u0013:$()\u001b8bef|\u0005/\u001a:bi>\u0014H\u0005J;oI\u0016\u0014H._5oO\u0002\na\u0001P5oSRtDCA\u0014*!\tA\u0003!D\u0001\u000f\u0011\u0015Q3\u00011\u0001\u001f\u0003))h\u000eZ3sYfLgnZ\u0001\u0007CNT\u0015M^1\u0016\u00035\u0002\"AL\u001b\u000e\u0003=R!\u0001M\u0019\u0002\u0011\u0019,hn\u0019;j_:T!AM\u001a\u0002\tU$\u0018\u000e\u001c\u0006\u0002i\u0005!!.\u0019<b\u0013\t1tFA\tJ]R\u0014\u0015N\\1ss>\u0003XM]1u_JD#\u0001\u0002\u001d\u0011\u0005eI\u0014B\u0001\u001e\u0015\u0005\u0019Ig\u000e\\5oK\u0006A\u0001.Y:i\u0007>$W\rF\u0001\"\u0003\u0019)\u0017/^1mgR\u0011qH\u0011\t\u00033\u0001K!!\u0011\u000b\u0003\u000f\t{w\u000e\\3b]\"91IBA\u0001\u0002\u0004!\u0015a\u0001=%cA\u0011\u0011$R\u0005\u0003\rR\u00111!\u00118z\u0003\u0001\u0012\u0016n\u00195Gk:\u001cG/[8oe\u0005\u001b\u0018J\u001c;CS:\f\'/_(qKJ\fGo\u001c:\u0011\u0005!B1C\u0001\u0005K!\tI2*\u0003\u0002M)\t1\u0011I\\=SK\u001a$\u0012\u0001S\u0001\u0011CNT\u0015M^1%Kb$XM\\:j_:$\"!\f)\t\u000bES\u0001\u0019A\u0014\u0002\u000b\u0011\"\b.[:)\u0005)A\u0014A\u00055bg\"\u001cu\u000eZ3%Kb$XM\\:j_:$\"\u0001P+\t\u000bE[\u0001\u0019A\u0014\u0002!\u0015\fX/\u00197tI\u0015DH/\u001a8tS>tGC\u0001-[)\ty\u0014\fC\u0004D\u0019\u0005\u0005\t\u0019\u0001#\t\u000bEc\u0001\u0019A\u0014
   #9 = Utf8               scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying
  #10 = Utf8               Lscala/Function2;
  #11 = Utf8               Lscala/Function2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;
  #12 = Utf8               equals$extension
  #13 = Utf8               (Lscala/Function2;Ljava/lang/Object;)Z
  #14 = Utf8               $this
  #15 = Utf8               x$1
  #16 = Utf8               scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$
  #17 = Class              #16            // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$
  #18 = Utf8               MODULE$
  #19 = Utf8               Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
  #20 = NameAndType        #18:#19        // MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
  #21 = Fieldref           #17.#20        // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
  #22 = NameAndType        #12:#13        // equals$extension:(Lscala/Function2;Ljava/lang/Object;)Z
  #23 = Methodref          #17.#22        // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.equals$extension:(Lscala/Function2;Ljava/lang/Object;)Z
  #24 = Utf8               Ljava/lang/Object;
  #25 = Utf8               hashCode$extension
  #26 = Utf8               (Lscala/Function2;)I
  #27 = NameAndType        #25:#26        // hashCode$extension:(Lscala/Function2;)I
  #28 = Methodref          #17.#27        // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.hashCode$extension:(Lscala/Function2;)I
  #29 = Utf8               asJava$extension
  #30 = Utf8               (Lscala/Function2;)Ljava/util/function/IntBinaryOperator;
  #31 = NameAndType        #29:#30        // asJava$extension:(Lscala/Function2;)Ljava/util/function/IntBinaryOperator;
  #32 = Methodref          #17.#31        // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.asJava$extension:(Lscala/Function2;)Ljava/util/function/IntBinaryOperator;
  #33 = Utf8               ()Lscala/Function2;
  #34 = Utf8               ()Lscala/Function2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;
  #35 = NameAndType        #9:#10         // scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:Lscala/Function2;
  #36 = Fieldref           #2.#35         // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator.scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:Lscala/Function2;
  #37 = Utf8               this
  #38 = Utf8               Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator;
  #39 = Utf8               asJava
  #40 = Utf8               ()Ljava/util/function/IntBinaryOperator;
  #41 = NameAndType        #9:#33         // scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:()Lscala/Function2;
  #42 = Methodref          #2.#41         // scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator.scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:()Lscala/Function2;
  #43 = Utf8               hashCode
  #44 = Utf8               ()I
  #45 = Utf8               equals
  #46 = Utf8               (Ljava/lang/Object;)Z
  #47 = Utf8               <init>
  #48 = Utf8               (Lscala/Function2;)V
  #49 = Utf8               (Lscala/Function2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;)V
  #50 = Utf8               underlying
  #51 = Utf8               ()V
  #52 = NameAndType        #47:#51        // "<init>":()V
  #53 = Methodref          #4.#52         // java/lang/Object."<init>":()V
  #54 = Utf8               Signature
  #55 = Utf8               Code
  #56 = Utf8               LocalVariableTable
  #57 = Utf8               MethodParameters
  #58 = Utf8               LineNumberTable
  #59 = Utf8               SourceFile
  #60 = Utf8               RuntimeVisibleAnnotations
  #61 = Utf8               ScalaInlineInfo
  #62 = Utf8               ScalaSig
{
  private final scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object> scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #11                          // Lscala/Function2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;

  public static boolean equals$extension(scala.Function2, java.lang.Object);
    descriptor: (Lscala/Function2;Ljava/lang/Object;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #21                 // Field scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
         3: aload_0
         4: aload_1
         5: invokevirtual #23                 // Method scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.equals$extension:(Lscala/Function2;Ljava/lang/Object;)Z
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/Function2;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public static int hashCode$extension(scala.Function2);
    descriptor: (Lscala/Function2;)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
         3: aload_0
         4: invokevirtual #28                 // Method scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.hashCode$extension:(Lscala/Function2;)I
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/Function2;
    MethodParameters:
      Name                           Flags
      $this                          final

  public static java.util.function.IntBinaryOperator asJava$extension(scala.Function2);
    descriptor: (Lscala/Function2;)Ljava/util/function/IntBinaryOperator;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
         3: aload_0
         4: invokevirtual #32                 // Method scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.asJava$extension:(Lscala/Function2;)Ljava/util/function/IntBinaryOperator;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/Function2;
    MethodParameters:
      Name                           Flags
      $this                          final

  public scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object> scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying();
    descriptor: ()Lscala/Function2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #36                 // Field scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:Lscala/Function2;
         4: areturn
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator;
    Signature: #34                          // ()Lscala/Function2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;

  public java.util.function.IntBinaryOperator asJava();
    descriptor: ()Ljava/util/function/IntBinaryOperator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
         3: aload_0
         4: invokevirtual #42                 // Method scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:()Lscala/Function2;
         7: invokevirtual #32                 // Method scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.asJava$extension:(Lscala/Function2;)Ljava/util/function/IntBinaryOperator;
        10: areturn
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #21                 // Field scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
         3: aload_0
         4: invokevirtual #42                 // Method scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:()Lscala/Function2;
         7: invokevirtual #28                 // Method scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.hashCode$extension:(Lscala/Function2;)I
        10: ireturn
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #21                 // Field scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.MODULE$:Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$;
         3: aload_0
         4: invokevirtual #42                 // Method scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:()Lscala/Function2;
         7: aload_1
         8: invokevirtual #23                 // Method scala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator$.equals$extension:(Lscala/Function2;Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator;
            0      12     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.compat.java8.functionConverterImpls.RichFunction2AsIntBinaryOperator(scala.Function2<java.lang.Object, java.lang.Object, java.lang.Object>);
    descriptor: (Lscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #36                 // Field scala$compat$java8$functionConverterImpls$RichFunction2AsIntBinaryOperator$$underlying:Lscala/Function2;
         5: aload_0
         6: invokespecial #53                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 279: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/compat/java8/functionConverterImpls/RichFunction2AsIntBinaryOperator;
            0      10     1 underlying   Lscala/Function2;
    Signature: #49                          // (Lscala/Function2<Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
}
SourceFile: "FunctionConverters.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005m3A!\u0004\b\u0003/!aA\u0004\u0001C\u0001\u0002\u000b\u0015)\u0019!C\u0005;!IA\u0005\u0001B\u0003\u0002\u0003\u0006IA\b\u0005\u0006K\u0001!\tA\n\u0005\u0006W\u0001!\t\u0001\f\u0005\bw\u0001\t\t\u0011\"\u0011=\u0011\u001di\u0004!!A\u0005By:qa\u0012\b\u0002\u0002#\u0005\u0001JB\u0004\u000e\u001d\u0005\u0005\t\u0012A%\t\u000b\u0015BA\u0011A\'\t\u000b9CAQA(\t\u000fMC\u0011\u0011!C\u0003)\"9a\u000bCA\u0001\n\u000b9&\u0001\t*jG\"4UO\\2uS>t\'\'Q:J]R\u0014\u0015N\\1ss>\u0003XM]1u_JT!a\u0004\t\u0002-\u0019,hn\u0019;j_:\u001cuN\u001c<feR,\'/S7qYNT!!\u0005\n\u0002\u000b)\fg/\u0019\u001d\u000b\u0005M!\u0012AB2p[B\fGOC\u0001\u0016\u0003\u0015\u00198-\u00197b\u0007\u0001\u0019\"\u0001\u0001\r\u0011\u0005eQR\"\u0001\u000b\n\u0005m!\"AB!osZ\u000bG.\u0001,tG\u0006d\u0017\rJ2p[B\fG\u000f\n6bm\u0006DDEZ;oGRLwN\\\"p]Z,\'\u000f^3s\u00136\u0004Hn\u001d\u0013SS\u000eDg)\u001e8di&|gNM!t\u0013:$()\u001b8bef|\u0005/\u001a:bi>\u0014H\u0005J;oI\u0016\u0014H._5oOV\ta\u0004E\u0003\u001a?\u0005\n\u0013%\u0003\u0002!)\tIa)\u001e8di&|gN\r\t\u00033\tJ!a\t\u000b\u0003\u0007%sG/A,tG\u0006d\u0017\rJ2p[B\fG\u000f\n6bm\u0006DDEZ;oGRLwN\\\"p]Z,\'\u000f^3s\u00136\u0004Hn\u001d\u0013SS\u000eDg)\u001e8di&|gNM!t\u0013:$()\u001b8bef|\u0005/\u001a:bi>\u0014H\u0005J;oI\u0016\u0014H._5oO\u0002\na\u0001P5oSRtDCA\u0014*!\tA\u0003!D\u0001\u000f\u0011\u0015Q3\u00011\u0001\u001f\u0003))h\u000eZ3sYfLgnZ\u0001\u0007CNT\u0015M^1\u0016\u00035\u0002\"AL\u001b\u000e\u0003=R!\u0001M\u0019\u0002\u0011\u0019,hn\u0019;j_:T!AM\u001a\u0002\tU$\u0018\u000e\u001c\u0006\u0002i\u0005!!.\u0019<b\u0013\t1tFA\tJ]R\u0014\u0015N\\1ss>\u0003XM]1u_JD#\u0001\u0002\u001d\u0011\u0005eI\u0014B\u0001\u001e\u0015\u0005\u0019Ig\u000e\\5oK\u0006A\u0001.Y:i\u0007>$W\rF\u0001\"\u0003\u0019)\u0017/^1mgR\u0011qH\u0011\t\u00033\u0001K!!\u0011\u000b\u0003\u000f\t{w\u000e\\3b]\"91IBA\u0001\u0002\u0004!\u0015a\u0001=%cA\u0011\u0011$R\u0005\u0003\rR\u00111!\u00118z\u0003\u0001\u0012\u0016n\u00195Gk:\u001cG/[8oe\u0005\u001b\u0018J\u001c;CS:\f\'/_(qKJ\fGo\u001c:\u0011\u0005!B1C\u0001\u0005K!\tI2*\u0003\u0002M)\t1\u0011I\\=SK\u001a$\u0012\u0001S\u0001\u0011CNT\u0015M^1%Kb$XM\\:j_:$\"!\f)\t\u000bES\u0001\u0019A\u0014\u0002\u000b\u0011\"\b.[:)\u0005)A\u0014A\u00055bg\"\u001cu\u000eZ3%Kb$XM\\:j_:$\"\u0001P+\t\u000bE[\u0001\u0019A\u0014\u0002!\u0015\fX/\u00197tI\u0015DH/\u001a8tS>tGC\u0001-[)\ty\u0014\fC\u0004D\u0019\u0005\u0005\t\u0019\u0001#\t\u000bEc\u0001\u0019A\u0014"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 2F 00 30 01 00 27 00 28 05 00 2D
   00 2E 01 00 2B 00 2C 01 00 09 00 21 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
