Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParSeqLike$IndexWhere.class
  Last modified May 29, 2022; size 10154 bytes
  SHA-256 checksum 4e62fb3256f0d114c446fcbe5b23bcb02607850ffc03b88a8ddf325f28dae429
  Compiled from "ParSeqLike.scala"
public class scala.collection.parallel.ParSeqLike$IndexWhere extends java.lang.Object implements scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.ParSeqLikeAccessor<java.lang.Object, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.IndexWhere>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParSeqLike$IndexWhere
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 34, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParSeqLike$IndexWhere
    #2 = Class              #1            // scala/collection/parallel/ParSeqLike$IndexWhere
    #3 = Utf8               Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeAccessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.IndexWhere;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParSeqLike$ParSeqLikeAccessor
    #7 = Class              #6            // scala/collection/parallel/ParSeqLike$ParSeqLikeAccessor
    #8 = Utf8               ParSeqLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Class              #19           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               scala/collection/parallel/ParSeqLike
   #23 = Class              #22           // scala/collection/parallel/ParSeqLike
   #24 = Utf8               IndexWhere
   #25 = Utf8               ParSeqLikeAccessor
   #26 = Utf8               pred
   #27 = Utf8               Lscala/Function1;
   #28 = Utf8               Lscala/Function1<TT;Ljava/lang/Object;>;
   #29 = Utf8               from
   #30 = Utf8               I
   #31 = Utf8               pit
   #32 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #33 = Utf8               Lscala/collection/parallel/SeqSplitter<TT;>;
   #34 = Utf8               result
   #35 = Utf8               throwable
   #36 = Utf8               Ljava/lang/Throwable;
   #37 = Utf8               $outer
   #38 = Utf8               Lscala/collection/parallel/ParSeqLike;
   #39 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #40 = Utf8               ()Ljava/lang/String;
   #41 = Utf8               toString
   #42 = NameAndType        #41:#40       // toString:()Ljava/lang/String;
   #43 = Methodref          #5.#42        // java/lang/Object.toString:()Ljava/lang/String;
   #44 = Utf8               this
   #45 = Utf8               Lscala/collection/parallel/ParSeqLike$IndexWhere;
   #46 = Utf8               shouldSplitFurther
   #47 = Utf8               ()Z
   #48 = Utf8               shouldSplitFurther$
   #49 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #50 = NameAndType        #48:#49       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #51 = InterfaceMethodref #15.#50       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #52 = Utf8               signalAbort
   #53 = Utf8               ()V
   #54 = Utf8               signalAbort$
   #55 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #56 = NameAndType        #54:#55       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #57 = InterfaceMethodref #15.#56       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #58 = Utf8               toString$
   #59 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #60 = NameAndType        #58:#59       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #61 = InterfaceMethodref #15.#60       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #62 = Utf8               repr
   #63 = Utf8               ()Ljava/lang/Object;
   #64 = Utf8               scala/collection/parallel/Task
   #65 = Class              #64           // scala/collection/parallel/Task
   #66 = Utf8               repr$
   #67 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #68 = NameAndType        #66:#67       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #69 = InterfaceMethodref #65.#68       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #70 = Utf8               forwardThrowable
   #71 = Utf8               forwardThrowable$
   #72 = Utf8               (Lscala/collection/parallel/Task;)V
   #73 = NameAndType        #71:#72       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #74 = InterfaceMethodref #65.#73       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #75 = Utf8               tryLeaf
   #76 = Utf8               (Lscala/Option;)V
   #77 = Utf8               (Lscala/Option<Ljava/lang/Object;>;)V
   #78 = Utf8               lastres
   #79 = Utf8               tryLeaf$
   #80 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #81 = NameAndType        #79:#80       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #82 = InterfaceMethodref #65.#81       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #83 = Utf8               Lscala/Option;
   #84 = Utf8               tryMerge
   #85 = Utf8               (Ljava/lang/Object;)V
   #86 = Utf8               t
   #87 = Utf8               tryMerge$
   #88 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #89 = NameAndType        #87:#88       // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #90 = InterfaceMethodref #65.#89       // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
   #91 = Utf8               Ljava/lang/Object;
   #92 = Utf8               mergeThrowables
   #93 = Utf8               (Lscala/collection/parallel/Task<**>;)V
   #94 = Utf8               that
   #95 = Utf8               mergeThrowables$
   #96 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #97 = NameAndType        #95:#96       // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #98 = InterfaceMethodref #65.#97       // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
   #99 = Utf8               Lscala/collection/parallel/Task;
  #100 = Utf8               ()Ljava/lang/Throwable;
  #101 = NameAndType        #35:#36       // throwable:Ljava/lang/Throwable;
  #102 = Fieldref           #2.#101       // scala/collection/parallel/ParSeqLike$IndexWhere.throwable:Ljava/lang/Throwable;
  #103 = Utf8               throwable_$eq
  #104 = Utf8               (Ljava/lang/Throwable;)V
  #105 = Utf8               x$1
  #106 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #107 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TT;>;
  #108 = NameAndType        #31:#32       // pit:Lscala/collection/parallel/SeqSplitter;
  #109 = Fieldref           #2.#108       // scala/collection/parallel/ParSeqLike$IndexWhere.pit:Lscala/collection/parallel/SeqSplitter;
  #110 = Utf8               ()I
  #111 = NameAndType        #34:#30       // result:I
  #112 = Fieldref           #2.#111       // scala/collection/parallel/ParSeqLike$IndexWhere.result:I
  #113 = Utf8               result_$eq
  #114 = Utf8               (I)V
  #115 = Utf8               leaf
  #116 = Utf8               prev
  #117 = NameAndType        #29:#30       // from:I
  #118 = Fieldref           #2.#117       // scala/collection/parallel/ParSeqLike$IndexWhere.from:I
  #119 = NameAndType        #31:#106      // pit:()Lscala/collection/parallel/SeqSplitter;
  #120 = Methodref          #2.#119       // scala/collection/parallel/ParSeqLike$IndexWhere.pit:()Lscala/collection/parallel/SeqSplitter;
  #121 = Utf8               scala/collection/parallel/SeqSplitter
  #122 = Class              #121          // scala/collection/parallel/SeqSplitter
  #123 = Utf8               indexFlag
  #124 = NameAndType        #123:#110     // indexFlag:()I
  #125 = InterfaceMethodref #122.#124     // scala/collection/parallel/SeqSplitter.indexFlag:()I
  #126 = NameAndType        #26:#27       // pred:Lscala/Function1;
  #127 = Fieldref           #2.#126       // scala/collection/parallel/ParSeqLike$IndexWhere.pred:Lscala/Function1;
  #128 = Utf8               indexWhere
  #129 = Utf8               (Lscala/Function1;)I
  #130 = NameAndType        #128:#129     // indexWhere:(Lscala/Function1;)I
  #131 = InterfaceMethodref #122.#130     // scala/collection/parallel/SeqSplitter.indexWhere:(Lscala/Function1;)I
  #132 = NameAndType        #113:#114     // result_$eq:(I)V
  #133 = Methodref          #2.#132       // scala/collection/parallel/ParSeqLike$IndexWhere.result_$eq:(I)V
  #134 = Utf8               setIndexFlagIfLesser
  #135 = NameAndType        #134:#114     // setIndexFlagIfLesser:(I)V
  #136 = InterfaceMethodref #122.#135     // scala/collection/parallel/SeqSplitter.setIndexFlagIfLesser:(I)V
  #137 = Utf8               r
  #138 = Utf8               newSubtask
  #139 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #140 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #141 = Utf8               p
  #142 = Utf8               java/lang/UnsupportedOperationException
  #143 = Class              #142          // java/lang/UnsupportedOperationException
  #144 = Utf8               <init>
  #145 = NameAndType        #144:#53      // "<init>":()V
  #146 = Methodref          #143.#145     // java/lang/UnsupportedOperationException."<init>":()V
  #147 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #148 = Utf8               split
  #149 = Utf8               ()Lscala/collection/immutable/Seq;
  #150 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.IndexWhere;>;>;
  #151 = Utf8               splitWithSignalling
  #152 = NameAndType        #151:#149     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #153 = InterfaceMethodref #122.#152     // scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #154 = Utf8               scala/runtime/BoxesRunTime
  #155 = Class              #154          // scala/runtime/BoxesRunTime
  #156 = Utf8               boxToInteger
  #157 = Utf8               (I)Ljava/lang/Integer;
  #158 = NameAndType        #156:#157     // boxToInteger:(I)Ljava/lang/Integer;
  #159 = Methodref          #155.#158     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #160 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #161 = MethodType         #160          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #162 = Utf8               $anonfun$split$4$adapted
  #163 = Utf8               (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #164 = NameAndType        #162:#163     // $anonfun$split$4$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #165 = Methodref          #2.#164       // scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$4$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #166 = MethodHandle       6:#165        // REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$4$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #167 = MethodType         #163          //  (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #168 = Integer            5
  #169 = Integer            1
  #170 = Utf8               java/lang/invoke/LambdaMetafactory
  #171 = Class              #170          // java/lang/invoke/LambdaMetafactory
  #172 = Utf8               altMetafactory
  #173 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #174 = NameAndType        #172:#173     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #175 = Methodref          #171.#174     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #176 = MethodHandle       6:#175        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #177 = Utf8               apply
  #178 = Utf8               ()Lscala/Function2;
  #179 = NameAndType        #177:#178     // apply:()Lscala/Function2;
  #180 = InvokeDynamic      #0:#179       // #0:apply:()Lscala/Function2;
  #181 = Utf8               scala/collection/immutable/Seq
  #182 = Class              #181          // scala/collection/immutable/Seq
  #183 = Utf8               scanLeft
  #184 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #185 = NameAndType        #183:#184     // scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #186 = InterfaceMethodref #182.#185     // scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #187 = Utf8               scala/collection/IterableOnce
  #188 = Class              #187          // scala/collection/IterableOnce
  #189 = Utf8               zip
  #190 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #191 = NameAndType        #189:#190     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #192 = InterfaceMethodref #182.#191     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #193 = Utf8               scala/collection/IterableOps
  #194 = Class              #193          // scala/collection/IterableOps
  #195 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #196 = MethodType         #195          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #197 = Utf8               $anonfun$split$5$adapted
  #198 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #199 = NameAndType        #197:#198     // $anonfun$split$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #200 = Methodref          #2.#199       // scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #201 = MethodHandle       6:#200        // REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #202 = MethodType         #198          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #203 = Utf8               ()Lscala/Function1;
  #204 = NameAndType        #177:#203     // apply:()Lscala/Function1;
  #205 = InvokeDynamic      #1:#204       // #1:apply:()Lscala/Function1;
  #206 = Utf8               withFilter
  #207 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #208 = NameAndType        #206:#207     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #209 = InterfaceMethodref #194.#208     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #210 = Utf8               $anonfun$split$6
  #211 = Utf8               (Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #212 = NameAndType        #210:#211     // $anonfun$split$6:(Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #213 = Methodref          #2.#212       // scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$6:(Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #214 = MethodHandle       6:#213        // REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$6:(Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #215 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #216 = MethodType         #215          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #217 = Utf8               (Lscala/collection/parallel/ParSeqLike$IndexWhere;)Lscala/Function1;
  #218 = NameAndType        #177:#217     // apply:(Lscala/collection/parallel/ParSeqLike$IndexWhere;)Lscala/Function1;
  #219 = InvokeDynamic      #2:#218       // #2:apply:(Lscala/collection/parallel/ParSeqLike$IndexWhere;)Lscala/Function1;
  #220 = Utf8               scala/collection/WithFilter
  #221 = Class              #220          // scala/collection/WithFilter
  #222 = Utf8               map
  #223 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #224 = NameAndType        #222:#223     // map:(Lscala/Function1;)Ljava/lang/Object;
  #225 = Methodref          #221.#224     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #226 = Utf8               pits
  #227 = Utf8               Lscala/collection/immutable/Seq;
  #228 = Utf8               merge
  #229 = Utf8               (Lscala/collection/parallel/ParSeqLike$IndexWhere;)V
  #230 = Utf8               (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.IndexWhere;)V
  #231 = NameAndType        #34:#110      // result:()I
  #232 = Methodref          #2.#231       // scala/collection/parallel/ParSeqLike$IndexWhere.result:()I
  #233 = Utf8               scala/runtime/RichInt$
  #234 = Class              #233          // scala/runtime/RichInt$
  #235 = Utf8               MODULE$
  #236 = Utf8               Lscala/runtime/RichInt$;
  #237 = NameAndType        #235:#236     // MODULE$:Lscala/runtime/RichInt$;
  #238 = Fieldref           #234.#237     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #239 = Utf8               scala/Predef$
  #240 = Class              #239          // scala/Predef$
  #241 = Utf8               Lscala/Predef$;
  #242 = NameAndType        #235:#241     // MODULE$:Lscala/Predef$;
  #243 = Fieldref           #240.#242     // scala/Predef$.MODULE$:Lscala/Predef$;
  #244 = Utf8               intWrapper
  #245 = Utf8               (I)I
  #246 = NameAndType        #244:#245     // intWrapper:(I)I
  #247 = Methodref          #240.#246     // scala/Predef$.intWrapper:(I)I
  #248 = Utf8               min$extension
  #249 = Utf8               (II)I
  #250 = NameAndType        #248:#249     // min$extension:(II)I
  #251 = Methodref          #234.#250     // scala/runtime/RichInt$.min$extension:(II)I
  #252 = Utf8               requiresStrictSplitters
  #253 = Utf8               scala$collection$parallel$ParSeqLike$IndexWhere$$$outer
  #254 = Utf8               ()Lscala/collection/parallel/ParSeqLike;
  #255 = NameAndType        #37:#38       // $outer:Lscala/collection/parallel/ParSeqLike;
  #256 = Fieldref           #2.#255       // scala/collection/parallel/ParSeqLike$IndexWhere.$outer:Lscala/collection/parallel/ParSeqLike;
  #257 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #258 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #259 = NameAndType        #253:#254     // scala$collection$parallel$ParSeqLike$IndexWhere$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #260 = Methodref          #2.#259       // scala/collection/parallel/ParSeqLike$IndexWhere.scala$collection$parallel$ParSeqLike$IndexWhere$$$outer:()Lscala/collection/parallel/ParSeqLike;
  #261 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #262 = NameAndType        #228:#229     // merge:(Lscala/collection/parallel/ParSeqLike$IndexWhere;)V
  #263 = Methodref          #2.#262       // scala/collection/parallel/ParSeqLike$IndexWhere.merge:(Lscala/collection/parallel/ParSeqLike$IndexWhere;)V
  #264 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #265 = NameAndType        #138:#139     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #266 = Methodref          #2.#265       // scala/collection/parallel/ParSeqLike$IndexWhere.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #267 = Utf8               unboxToInt
  #268 = Utf8               (Ljava/lang/Object;)I
  #269 = NameAndType        #267:#268     // unboxToInt:(Ljava/lang/Object;)I
  #270 = Methodref          #155.#269     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #271 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #272 = Utf8               $anonfun$split$4
  #273 = Utf8               (ILscala/collection/parallel/SeqSplitter;)I
  #274 = Utf8               x$22
  #275 = Utf8               x$23
  #276 = Utf8               remaining
  #277 = NameAndType        #276:#110     // remaining:()I
  #278 = InterfaceMethodref #122.#277     // scala/collection/parallel/SeqSplitter.remaining:()I
  #279 = Utf8               $anonfun$split$5
  #280 = Utf8               (Lscala/Tuple2;)Z
  #281 = Utf8               check$ifrefutable$3
  #282 = Utf8               Lscala/Tuple2;
  #283 = Utf8               scala/Tuple2
  #284 = Class              #283          // scala/Tuple2
  #285 = Utf8               $this
  #286 = Utf8               x$24
  #287 = Utf8               _1
  #288 = NameAndType        #287:#63      // _1:()Ljava/lang/Object;
  #289 = Methodref          #284.#288     // scala/Tuple2._1:()Ljava/lang/Object;
  #290 = Utf8               _2$mcI$sp
  #291 = NameAndType        #290:#110     // _2$mcI$sp:()I
  #292 = Methodref          #284.#291     // scala/Tuple2._2$mcI$sp:()I
  #293 = Utf8               (Lscala/collection/parallel/ParSeqLike;Lscala/Function1;ILscala/collection/parallel/SeqSplitter;)V
  #294 = NameAndType        #144:#293     // "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;ILscala/collection/parallel/SeqSplitter;)V
  #295 = Methodref          #2.#294       // scala/collection/parallel/ParSeqLike$IndexWhere."<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;ILscala/collection/parallel/SeqSplitter;)V
  #296 = Utf8               scala/MatchError
  #297 = Class              #296          // scala/MatchError
  #298 = NameAndType        #144:#85      // "<init>":(Ljava/lang/Object;)V
  #299 = Methodref          #297.#298     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #300 = Utf8               untilp
  #301 = Utf8               (Lscala/Function1<TT;Ljava/lang/Object;>;ILscala/collection/parallel/SeqSplitter<TT;>;)V
  #302 = Methodref          #5.#145       // java/lang/Object."<init>":()V
  #303 = Utf8               $init$
  #304 = NameAndType        #303:#72      // $init$:(Lscala/collection/parallel/Task;)V
  #305 = InterfaceMethodref #65.#304      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #306 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #307 = NameAndType        #303:#306     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #308 = InterfaceMethodref #20.#307      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #309 = NameAndType        #303:#55      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #310 = InterfaceMethodref #15.#309      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #311 = NameAndType        #272:#273     // $anonfun$split$4:(ILscala/collection/parallel/SeqSplitter;)I
  #312 = Methodref          #2.#311       // scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$4:(ILscala/collection/parallel/SeqSplitter;)I
  #313 = NameAndType        #279:#280     // $anonfun$split$5:(Lscala/Tuple2;)Z
  #314 = Methodref          #2.#313       // scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$5:(Lscala/Tuple2;)Z
  #315 = Utf8               boxToBoolean
  #316 = Utf8               (Z)Ljava/lang/Boolean;
  #317 = NameAndType        #315:#316     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #318 = Methodref          #155.#317     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #319 = Utf8               $deserializeLambda$
  #320 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #321 = Utf8               scala/runtime/LambdaDeserialize
  #322 = Class              #321          // scala/runtime/LambdaDeserialize
  #323 = Utf8               bootstrap
  #324 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #325 = NameAndType        #323:#324     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #326 = Methodref          #322.#325     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #327 = MethodHandle       6:#326        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #328 = Utf8               lambdaDeserialize
  #329 = NameAndType        #328:#320     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #330 = InvokeDynamic      #3:#329       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #331 = Utf8               Signature
  #332 = Utf8               Code
  #333 = Utf8               LineNumberTable
  #334 = Utf8               LocalVariableTable
  #335 = Utf8               MethodParameters
  #336 = Utf8               StackMapTable
  #337 = Utf8               InnerClasses
  #338 = Utf8               SourceFile
  #339 = Utf8               BootstrapMethods
  #340 = Utf8               ScalaInlineInfo
  #341 = Utf8               Scala
{
  private final scala.Function1<T, java.lang.Object> pred;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/Function1<TT;Ljava/lang/Object;>;

  private final int from;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.parallel.SeqSplitter<T> pit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // Lscala/collection/parallel/SeqSplitter<TT;>;

  private volatile int result;
    descriptor: I
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParSeqLike $outer;
    descriptor: Lscala/collection/parallel/ParSeqLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #43                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #51                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #57                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #69                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public void tryLeaf(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #82                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       6     1 lastres   Lscala/Option;
    Signature: #77                          // (Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #90                 // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #98                 // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #93                          // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #102                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #102                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.SeqSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #109                // Field pit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
    Signature: #107                         // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public int result();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #112                // Field result:I
         4: ireturn
      LineNumberTable:
        line 498: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public void result_$eq(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #112                // Field result:I
         5: return
      LineNumberTable:
        line 498: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       6     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: getfield      #118                // Field from:I
         4: aload_0
         5: invokevirtual #120                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         8: invokeinterface #125,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.indexFlag:()I
        13: if_icmpge     64
        16: aload_0
        17: invokevirtual #120                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        20: aload_0
        21: getfield      #127                // Field pred:Lscala/Function1;
        24: invokeinterface #131,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.indexWhere:(Lscala/Function1;)I
        29: istore_2
        30: iload_2
        31: iconst_m1
        32: if_icmpeq     61
        35: aload_0
        36: aload_0
        37: getfield      #118                // Field from:I
        40: iload_2
        41: iadd
        42: invokevirtual #133                // Method result_$eq:(I)V
        45: aload_0
        46: invokevirtual #120                // Method pit:()Lscala/collection/parallel/SeqSplitter;
        49: aload_0
        50: getfield      #118                // Field from:I
        53: invokeinterface #136,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.setIndexFlagIfLesser:(I)V
        58: goto          61
        61: goto          64
        64: return
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 61
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 499: 0
        line 500: 16
        line 501: 30
        line 502: 35
        line 503: 45
        line 501: 61
        line 499: 64
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30      31     2     r   I
            0      65     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0      65     1  prev   Lscala/Option;
    Signature: #77                          // (Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #143                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #146                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 506: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #140                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<java.lang.Object, scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.IndexWhere>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #120                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: invokeinterface #153,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: aload_1
        12: aload_0
        13: getfield      #118                // Field from:I
        16: invokestatic  #159                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        19: invokedynamic #180,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
        24: invokeinterface #186,  3          // InterfaceMethod scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        29: checkcast     #188                // class scala/collection/IterableOnce
        32: invokeinterface #192,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        37: checkcast     #194                // class scala/collection/IterableOps
        40: invokedynamic #205,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        45: invokeinterface #209,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        50: aload_0
        51: invokedynamic #219,  0            // InvokeDynamic #2:apply:(Lscala/collection/parallel/ParSeqLike$IndexWhere;)Lscala/Function1;
        56: invokevirtual #225                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        59: checkcast     #182                // class scala/collection/immutable/Seq
        62: areturn
      LineNumberTable:
        line 508: 0
        line 509: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      52     1  pits   Lscala/collection/immutable/Seq;
            0      63     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
    Signature: #150                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.IndexWhere;>;>;

  public void merge(scala.collection.parallel.ParSeqLike<T, CC, Repr, Sequential>.IndexWhere);
    descriptor: (Lscala/collection/parallel/ParSeqLike$IndexWhere;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #232                // Method result:()I
         5: iconst_m1
         6: if_icmpne     16
         9: aload_1
        10: invokevirtual #232                // Method result:()I
        13: goto          51
        16: aload_1
        17: invokevirtual #232                // Method result:()I
        20: iconst_m1
        21: if_icmpeq     47
        24: getstatic     #238                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        27: getstatic     #243                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        30: aload_0
        31: invokevirtual #232                // Method result:()I
        34: invokevirtual #247                // Method scala/Predef$.intWrapper:(I)I
        37: aload_1
        38: invokevirtual #232                // Method result:()I
        41: invokevirtual #251                // Method scala/runtime/RichInt$.min$extension:(II)I
        44: goto          51
        47: aload_0
        48: invokevirtual #232                // Method result:()I
        51: invokevirtual #133                // Method result_$eq:(I)V
        54: return
      StackMapTable: number_of_entries = 3
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/ParSeqLike$IndexWhere ]
        frame_type = 94 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/ParSeqLike$IndexWhere ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class scala/collection/parallel/ParSeqLike$IndexWhere, class scala/collection/parallel/ParSeqLike$IndexWhere ]
          stack = [ class scala/collection/parallel/ParSeqLike$IndexWhere, int ]
      LineNumberTable:
        line 511: 0
        line 512: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      55     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0      55     1  that   Lscala/collection/parallel/ParSeqLike$IndexWhere;
    Signature: #230                         // (Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.IndexWhere;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 514: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public scala.collection.parallel.ParSeqLike scala$collection$parallel$ParSeqLike$IndexWhere$$$outer();
    descriptor: ()Lscala/collection/parallel/ParSeqLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #256                // Field $outer:Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #260                // Method scala$collection$parallel$ParSeqLike$IndexWhere$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #260                // Method scala$collection$parallel$ParSeqLike$IndexWhere$$$outer:()Lscala/collection/parallel/ParSeqLike;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParSeqLike$IndexWhere
         5: invokevirtual #263                // Method merge:(Lscala/collection/parallel/ParSeqLike$IndexWhere;)V
         8: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #266                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #270                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokevirtual #133                // Method result_$eq:(I)V
         8: return
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #232                // Method result:()I
         4: invokestatic  #159                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public scala.collection.parallel.IterableSplitter pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #120                // Method pit:()Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;

  public static final int $anonfun$split$4(int, scala.collection.parallel.SeqSplitter);
    descriptor: (ILscala/collection/parallel/SeqSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokeinterface #278,  1          // InterfaceMethod scala/collection/parallel/SeqSplitter.remaining:()I
         7: iadd
         8: ireturn
      LineNumberTable:
        line 509: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$22   I
            0       9     1  x$23   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      x$22                           final
      x$23                           final

  public static final boolean $anonfun$split$5(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 509: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$3   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$3            final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$6(scala.collection.parallel.ParSeqLike$IndexWhere, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        44
         6: aload_3
         7: invokevirtual #289                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #122                // class scala/collection/parallel/SeqSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #292                // Method scala/Tuple2._2$mcI$sp:()I
        19: istore        5
        21: new           #2                  // class scala/collection/parallel/ParSeqLike$IndexWhere
        24: dup
        25: aload_0
        26: invokevirtual #260                // Method scala$collection$parallel$ParSeqLike$IndexWhere$$$outer:()Lscala/collection/parallel/ParSeqLike;
        29: aload_0
        30: getfield      #127                // Field pred:Lscala/Function1;
        33: iload         5
        35: aload         4
        37: invokespecial #295                // Method "<init>":(Lscala/collection/parallel/ParSeqLike;Lscala/Function1;ILscala/collection/parallel/SeqSplitter;)V
        40: astore_2
        41: goto          56
        44: goto          47
        47: new           #297                // class scala/MatchError
        50: dup
        51: aload_3
        52: invokespecial #299                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        55: athrow
        56: aload_2
        57: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParSeqLike$IndexWhere, class scala/Tuple2, class scala/collection/parallel/ParSeqLike$IndexWhere, class scala/Tuple2, class scala/collection/parallel/SeqSplitter, int ]
          stack = []
      LineNumberTable:
        line 509: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      29     4     p   Lscala/collection/parallel/SeqSplitter;
           21      23     5 untilp   I
            0      58     0 $this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0      58     1  x$24   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$24                           final

  public scala.collection.parallel.ParSeqLike$IndexWhere(scala.Function1<T, java.lang.Object>, int, scala.collection.parallel.SeqSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParSeqLike;Lscala/Function1;ILscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: aload_2
         2: putfield      #127                // Field pred:Lscala/Function1;
         5: aload_0
         6: iload_3
         7: putfield      #118                // Field from:I
        10: aload_0
        11: aload         4
        13: putfield      #109                // Field pit:Lscala/collection/parallel/SeqSplitter;
        16: aload_1
        17: ifnonnull     22
        20: aconst_null
        21: athrow
        22: aload_0
        23: aload_1
        24: putfield      #256                // Field $outer:Lscala/collection/parallel/ParSeqLike;
        27: aload_0
        28: invokespecial #302                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #305                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        35: aload_0
        36: invokestatic  #308                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        39: aload_0
        40: invokestatic  #310                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        43: aload_0
        44: iconst_m1
        45: putfield      #112                // Field result:I
        48: return
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 496: 0
        line 497: 27
        line 498: 43
        line 496: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lscala/collection/parallel/ParSeqLike$IndexWhere;
            0      49     1 $outer   Lscala/collection/parallel/ParSeqLike;
            0      49     2  pred   Lscala/Function1;
            0      49     3  from   I
            0      49     4   pit   Lscala/collection/parallel/SeqSplitter;
    Signature: #301                         // (Lscala/Function1<TT;Ljava/lang/Object;>;ILscala/collection/parallel/SeqSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      pred                           final
      from                           final
      pit                            final

  public static final java.lang.Object $anonfun$split$4$adapted(java.lang.Object, scala.collection.parallel.SeqSplitter);
    descriptor: (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #270                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #312                // Method $anonfun$split$4:(ILscala/collection/parallel/SeqSplitter;)I
         8: invokestatic  #159                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 509: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  x$22   Ljava/lang/Object;
            0      12     1  x$23   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      x$22                           final
      x$23                           final

  public static final java.lang.Object $anonfun$split$5$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #314                // Method $anonfun$split$5:(Lscala/Tuple2;)Z
         4: invokestatic  #318                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 509: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$3   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$3            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #330,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #21= #20 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #24= #2 of #23;                  // IndexWhere=class scala/collection/parallel/ParSeqLike$IndexWhere of class scala/collection/parallel/ParSeqLike
  public #25= #7 of #23;                  // ParSeqLikeAccessor=class scala/collection/parallel/ParSeqLike$ParSeqLikeAccessor of class scala/collection/parallel/ParSeqLike
Signature: #3                           // Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.ParSeqLikeAccessor<Ljava/lang/Object;Lscala/collection/parallel/ParSeqLike<TT;TCC;TRepr;TSequential;>.IndexWhere;>;
SourceFile: "ParSeqLike.scala"
BootstrapMethods:
  0: #176 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #161 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #166 REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$4$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #167 (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #168 5
      #169 1
      #167 (Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  1: #176 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #196 (Ljava/lang/Object;)Ljava/lang/Object;
      #201 REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #202 (Lscala/Tuple2;)Ljava/lang/Object;
      #168 5
      #169 1
      #202 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #176 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #196 (Ljava/lang/Object;)Ljava/lang/Object;
      #214 REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$6:(Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #216 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #168 5
      #169 1
      #216 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  3: #327 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #166 REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$4$adapted:(Ljava/lang/Object;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #201 REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$5$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #214 REF_invokeStatic scala/collection/parallel/ParSeqLike$IndexWhere.$anonfun$split$6:(Lscala/collection/parallel/ParSeqLike$IndexWhere;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xA9 (unknown attribute)
   01 00 00 21 01 10 01 11 01 00 A2 00 A3 01 01 17
   01 18 01 00 C5 00 C6 01 00 D2 00 D3 01 00 90 01
   25 00 00 46 00 35 00 00 73 00 4C 00 00 E4 00 55
   00 00 E4 00 E5 00 00 5C 00 48 00 00 8A 01 08 00
   00 8A 00 8B 00 00 1F 01 0F 00 00 1F 00 6A 00 00
   3E 00 3F 00 00 FC 00 2F 00 00 22 00 6E 00 00 22
   00 3F 00 00 71 00 72 00 00 71 00 55 00 01 01 01
   02 00 00 27 00 28 01 01 05 01 02 00 00 FD 00 FE
   00 00 2E 00 2F 00 00 34 00 35 00 00 94 00 95 00
   00 23 00 64 00 00 67 00 68 00 00 29 00 28 00 00
   4B 00 4C 00 00 54 00 55 00
  Scala: length = 0x0 (unknown attribute)

