Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/tools/XmlSocketReporter.class
  Last modified May 29, 2022; size 2237 bytes
  SHA-256 checksum c82f30f9ad11bb614d9c8e3b75b8022c875a0ae005a2a3ecc9ef6dab9594abe2
  Compiled from "XmlSocketReporter.scala"
public class org.scalatest.tools.XmlSocketReporter implements org.scalatest.ResourcefulReporter
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/tools/XmlSocketReporter
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 5, attributes: 4
Constant pool:
   #1 = Utf8               org/scalatest/tools/XmlSocketReporter
   #2 = Class              #1             // org/scalatest/tools/XmlSocketReporter
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               org/scalatest/ResourcefulReporter
   #6 = Class              #5             // org/scalatest/ResourcefulReporter
   #7 = Utf8               XmlSocketReporter.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005Y3QAC\u0006\u0001\u001bEA\u0001\u0002\b\u0001\u0003\u0002\u0003\u0006IA\b\u0005\tS\u0001\u0011\t\u0011)A\u0005U!)Q\u0006\u0001C\u0001]!91\u0007\u0001b\u0001\n\u0013!\u0004BB\u001f\u0001A\u0003%Q\u0007C\u0004?\u0001\t\u0007I\u0011B \t\r\u0019\u0003\u0001\u0015!\u0003A\u0011\u00159\u0005\u0001\"\u0001I\u0011\u0015!\u0006\u0001\"\u0001V\u0005EAV\u000e\\*pG.,GOU3q_J$XM\u001d\u0006\u0003\u00195\tQ\u0001^8pYNT!AD\b\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\t\u0002\u0007=\u0014xmE\u0002\u0001%a\u0001\"a\u0005\f\u000e\u0003QQ\u0011!F\u0001\u0006g\u000e\fG.Y\u0005\u0003/Q\u0011a!\u00118z%\u00164\u0007CA\r\u001b\u001b\u0005i\u0011BA\u000e\u000e\u0005M\u0011Vm]8ve\u000e,g-\u001e7SKB|\'\u000f^3s\u0003\u0011Awn\u001d;\u0004\u0001A\u0011qD\n\b\u0003A\u0011\u0002\"!\t\u000b\u000e\u0003\tR!aI\u000f\u0002\rq\u0012xn\u001c;?\u0013\t)C#\u0001\u0004Qe\u0016$WMZ\u0005\u0003O!\u0012aa\u0015;sS:<\'BA\u0013\u0015\u0003\u0011\u0001xN\u001d;\u0011\u0005MY\u0013B\u0001\u0017\u0015\u0005\rIe\u000e^\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0007=\n$\u0007\u0005\u00021\u00015\t1\u0002C\u0003\u001d\u0007\u0001\u0007a\u0004C\u0003*\u0007\u0001\u0007!&\u0001\u0004t_\u000e\\W\r^\u000b\u0002kA\u0011agO\u0007\u0002o)\u0011\u0001(O\u0001\u0004]\u0016$(\"\u0001\u001e\u0002\t)\fg/Y\u0005\u0003y]\u0012aaU8dW\u0016$\u0018aB:pG.,G\u000fI\u0001\u0004_V$X#\u0001!\u0011\u0005\u0005#U\"\u0001\"\u000b\u0005\rK\u0014AA5p\u0013\t)%IA\u0006Qe&tGo\u0016:ji\u0016\u0014\u0018\u0001B8vi\u0002\nQ!\u00199qYf$\"!\u0013\'\u0011\u0005MQ\u0015BA&\u0015\u0005\u0011)f.\u001b;\t\u000b5C\u0001\u0019\u0001(\u0002\u000b\u00154XM\u001c;\u0011\u0005=\u0013V\"\u0001)\u000b\u0005Ek\u0011AB3wK:$8/\u0003\u0002T!\n)QI^3oi\u00069A-[:q_N,G#A%
  #11 = Utf8               socket
  #12 = Utf8               Ljava/net/Socket;
  #13 = Utf8               out
  #14 = Utf8               Ljava/io/PrintWriter;
  #15 = Utf8               ()Ljava/net/Socket;
  #16 = NameAndType        #11:#12        // socket:Ljava/net/Socket;
  #17 = Fieldref           #2.#16         // org/scalatest/tools/XmlSocketReporter.socket:Ljava/net/Socket;
  #18 = Utf8               this
  #19 = Utf8               Lorg/scalatest/tools/XmlSocketReporter;
  #20 = Utf8               ()Ljava/io/PrintWriter;
  #21 = NameAndType        #13:#14        // out:Ljava/io/PrintWriter;
  #22 = Fieldref           #2.#21         // org/scalatest/tools/XmlSocketReporter.out:Ljava/io/PrintWriter;
  #23 = Utf8               apply
  #24 = Utf8               (Lorg/scalatest/events/Event;)V
  #25 = Utf8               event
  #26 = NameAndType        #13:#20        // out:()Ljava/io/PrintWriter;
  #27 = Methodref          #2.#26         // org/scalatest/tools/XmlSocketReporter.out:()Ljava/io/PrintWriter;
  #28 = Utf8               org/scalatest/events/Event
  #29 = Class              #28            // org/scalatest/events/Event
  #30 = Utf8               toXml
  #31 = Utf8               ()Lscala/xml/Elem;
  #32 = NameAndType        #30:#31        // toXml:()Lscala/xml/Elem;
  #33 = Methodref          #29.#32        // org/scalatest/events/Event.toXml:()Lscala/xml/Elem;
  #34 = Utf8               scala/xml/Elem
  #35 = Class              #34            // scala/xml/Elem
  #36 = Utf8               toString
  #37 = Utf8               ()Ljava/lang/String;
  #38 = NameAndType        #36:#37        // toString:()Ljava/lang/String;
  #39 = Methodref          #35.#38        // scala/xml/Elem.toString:()Ljava/lang/String;
  #40 = Utf8               java/io/PrintWriter
  #41 = Class              #40            // java/io/PrintWriter
  #42 = Utf8               println
  #43 = Utf8               (Ljava/lang/String;)V
  #44 = NameAndType        #42:#43        // println:(Ljava/lang/String;)V
  #45 = Methodref          #41.#44        // java/io/PrintWriter.println:(Ljava/lang/String;)V
  #46 = Utf8               flush
  #47 = Utf8               ()V
  #48 = NameAndType        #46:#47        // flush:()V
  #49 = Methodref          #41.#48        // java/io/PrintWriter.flush:()V
  #50 = Utf8               Lorg/scalatest/events/Event;
  #51 = Utf8               dispose
  #52 = Utf8               close
  #53 = NameAndType        #52:#47        // close:()V
  #54 = Methodref          #41.#53        // java/io/PrintWriter.close:()V
  #55 = NameAndType        #11:#15        // socket:()Ljava/net/Socket;
  #56 = Methodref          #2.#55         // org/scalatest/tools/XmlSocketReporter.socket:()Ljava/net/Socket;
  #57 = Utf8               java/net/Socket
  #58 = Class              #57            // java/net/Socket
  #59 = Methodref          #58.#53        // java/net/Socket.close:()V
  #60 = Utf8               <init>
  #61 = Utf8               (Ljava/lang/String;I)V
  #62 = Utf8               host
  #63 = Utf8               port
  #64 = NameAndType        #60:#47        // "<init>":()V
  #65 = Methodref          #4.#64         // java/lang/Object."<init>":()V
  #66 = NameAndType        #60:#61        // "<init>":(Ljava/lang/String;I)V
  #67 = Methodref          #58.#66        // java/net/Socket."<init>":(Ljava/lang/String;I)V
  #68 = Utf8               java/io/BufferedOutputStream
  #69 = Class              #68            // java/io/BufferedOutputStream
  #70 = Utf8               getOutputStream
  #71 = Utf8               ()Ljava/io/OutputStream;
  #72 = NameAndType        #70:#71        // getOutputStream:()Ljava/io/OutputStream;
  #73 = Methodref          #58.#72        // java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
  #74 = Utf8               (Ljava/io/OutputStream;)V
  #75 = NameAndType        #60:#74        // "<init>":(Ljava/io/OutputStream;)V
  #76 = Methodref          #69.#75        // java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
  #77 = Methodref          #41.#75        // java/io/PrintWriter."<init>":(Ljava/io/OutputStream;)V
  #78 = Utf8               Ljava/lang/String;
  #79 = Utf8               I
  #80 = Utf8               Code
  #81 = Utf8               LineNumberTable
  #82 = Utf8               LocalVariableTable
  #83 = Utf8               MethodParameters
  #84 = Utf8               SourceFile
  #85 = Utf8               RuntimeVisibleAnnotations
  #86 = Utf8               ScalaInlineInfo
  #87 = Utf8               ScalaSig
{
  private final java.net.Socket socket;
    descriptor: Ljava/net/Socket;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.io.PrintWriter out;
    descriptor: Ljava/io/PrintWriter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.net.Socket socket();
    descriptor: ()Ljava/net/Socket;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #17                 // Field socket:Ljava/net/Socket;
         4: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/XmlSocketReporter;

  private java.io.PrintWriter out();
    descriptor: ()Ljava/io/PrintWriter;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #22                 // Field out:Ljava/io/PrintWriter;
         4: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/XmlSocketReporter;

  public void apply(org.scalatest.events.Event);
    descriptor: (Lorg/scalatest/events/Event;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #27                 // Method out:()Ljava/io/PrintWriter;
         4: aload_1
         5: invokevirtual #33                 // Method org/scalatest/events/Event.toXml:()Lscala/xml/Elem;
         8: invokevirtual #39                 // Method scala/xml/Elem.toString:()Ljava/lang/String;
        11: invokevirtual #45                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V
        14: aload_0
        15: invokespecial #27                 // Method out:()Ljava/io/PrintWriter;
        18: invokevirtual #49                 // Method java/io/PrintWriter.flush:()V
        21: return
      LineNumberTable:
        line 30: 0
        line 31: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/tools/XmlSocketReporter;
            0      22     1 event   Lorg/scalatest/events/Event;
    MethodParameters:
      Name                           Flags
      event                          final

  public void dispose();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #27                 // Method out:()Ljava/io/PrintWriter;
         4: invokevirtual #49                 // Method java/io/PrintWriter.flush:()V
         7: aload_0
         8: invokespecial #27                 // Method out:()Ljava/io/PrintWriter;
        11: invokevirtual #54                 // Method java/io/PrintWriter.close:()V
        14: aload_0
        15: invokespecial #56                 // Method socket:()Ljava/net/Socket;
        18: invokevirtual #59                 // Method java/net/Socket.close:()V
        21: return
      LineNumberTable:
        line 35: 0
        line 36: 7
        line 37: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/scalatest/tools/XmlSocketReporter;

  public org.scalatest.tools.XmlSocketReporter(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokespecial #65                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: new           #58                 // class java/net/Socket
         8: dup
         9: aload_1
        10: iload_2
        11: invokespecial #67                 // Method java/net/Socket."<init>":(Ljava/lang/String;I)V
        14: putfield      #17                 // Field socket:Ljava/net/Socket;
        17: aload_0
        18: new           #41                 // class java/io/PrintWriter
        21: dup
        22: new           #69                 // class java/io/BufferedOutputStream
        25: dup
        26: aload_0
        27: invokespecial #56                 // Method socket:()Ljava/net/Socket;
        30: invokevirtual #73                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
        33: invokespecial #76                 // Method java/io/BufferedOutputStream."<init>":(Ljava/io/OutputStream;)V
        36: invokespecial #77                 // Method java/io/PrintWriter."<init>":(Ljava/io/OutputStream;)V
        39: putfield      #22                 // Field out:Ljava/io/PrintWriter;
        42: return
      LineNumberTable:
        line 24: 0
        line 26: 4
        line 27: 17
        line 24: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/scalatest/tools/XmlSocketReporter;
            0      43     1  host   Ljava/lang/String;
            0      43     2  port   I
    MethodParameters:
      Name                           Flags
      host                           final
      port                           final
}
SourceFile: "XmlSocketReporter.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005Y3QAC\u0006\u0001\u001bEA\u0001\u0002\b\u0001\u0003\u0002\u0003\u0006IA\b\u0005\tS\u0001\u0011\t\u0011)A\u0005U!)Q\u0006\u0001C\u0001]!91\u0007\u0001b\u0001\n\u0013!\u0004BB\u001f\u0001A\u0003%Q\u0007C\u0004?\u0001\t\u0007I\u0011B \t\r\u0019\u0003\u0001\u0015!\u0003A\u0011\u00159\u0005\u0001\"\u0001I\u0011\u0015!\u0006\u0001\"\u0001V\u0005EAV\u000e\\*pG.,GOU3q_J$XM\u001d\u0006\u0003\u00195\tQ\u0001^8pYNT!AD\b\u0002\u0013M\u001c\u0017\r\\1uKN$(\"\u0001\t\u0002\u0007=\u0014xmE\u0002\u0001%a\u0001\"a\u0005\f\u000e\u0003QQ\u0011!F\u0001\u0006g\u000e\fG.Y\u0005\u0003/Q\u0011a!\u00118z%\u00164\u0007CA\r\u001b\u001b\u0005i\u0011BA\u000e\u000e\u0005M\u0011Vm]8ve\u000e,g-\u001e7SKB|\'\u000f^3s\u0003\u0011Awn\u001d;\u0004\u0001A\u0011qD\n\b\u0003A\u0011\u0002\"!\t\u000b\u000e\u0003\tR!aI\u000f\u0002\rq\u0012xn\u001c;?\u0013\t)C#\u0001\u0004Qe\u0016$WMZ\u0005\u0003O!\u0012aa\u0015;sS:<\'BA\u0013\u0015\u0003\u0011\u0001xN\u001d;\u0011\u0005MY\u0013B\u0001\u0017\u0015\u0005\rIe\u000e^\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0007=\n$\u0007\u0005\u00021\u00015\t1\u0002C\u0003\u001d\u0007\u0001\u0007a\u0004C\u0003*\u0007\u0001\u0007!&\u0001\u0004t_\u000e\\W\r^\u000b\u0002kA\u0011agO\u0007\u0002o)\u0011\u0001(O\u0001\u0004]\u0016$(\"\u0001\u001e\u0002\t)\fg/Y\u0005\u0003y]\u0012aaU8dW\u0016$\u0018aB:pG.,G\u000fI\u0001\u0004_V$X#\u0001!\u0011\u0005\u0005#U\"\u0001\"\u000b\u0005\rK\u0014AA5p\u0013\t)%IA\u0006Qe&tGo\u0016:ji\u0016\u0014\u0018\u0001B8vi\u0002\nQ!\u00199qYf$\"!\u0013\'\u0011\u0005MQ\u0015BA&\u0015\u0005\u0011)f.\u001b;\t\u000b5C\u0001\u0019\u0001(\u0002\u000b\u00154XM\u001c;\u0011\u0005=\u0013V\"\u0001)\u000b\u0005Ek\u0011AB3wK:$8/\u0003\u0002T!\n)QI^3oi\u00069A-[:q_N,G#A%"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 3C 00 3D 00 00 17 00 18 00 00 33
   00 2F 00 00 0D 00 14 01 00 0B 00 0F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
