Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/enablers/Containing$.class
  Last modified May 29, 2022; size 6749 bytes
  SHA-256 checksum 7086d726474fccd61ca0ac159ea0459d2872e1af8536a941d4d68afa884872a1
  Compiled from "Containing.scala"
public final class org.scalatest.enablers.Containing$ implements org.scalatest.enablers.ContainingHighPriorityImplicits
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/enablers/Containing$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 20, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/enablers/Containing$
    #2 = Class              #1            // org/scalatest/enablers/Containing$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/scalatest/enablers/ContainingHighPriorityImplicits
    #6 = Class              #5            // org/scalatest/enablers/ContainingHighPriorityImplicits
    #7 = Utf8               Containing.scala
    #8 = Utf8               java/util/Map$Entry
    #9 = Class              #8            // java/util/Map$Entry
   #10 = Utf8               java/util/Map
   #11 = Class              #10           // java/util/Map
   #12 = Utf8               Entry
   #13 = Utf8               MODULE$
   #14 = Utf8               Lorg/scalatest/enablers/Containing$;
   #15 = Utf8               <clinit>
   #16 = Utf8               ()V
   #17 = Utf8               <init>
   #18 = NameAndType        #17:#16       // "<init>":()V
   #19 = Methodref          #2.#18        // org/scalatest/enablers/Containing$."<init>":()V
   #20 = NameAndType        #13:#14       // MODULE$:Lorg/scalatest/enablers/Containing$;
   #21 = Fieldref           #2.#20        // org/scalatest/enablers/Containing$.MODULE$:Lorg/scalatest/enablers/Containing$;
   #22 = Utf8               org/scalatest/enablers/ContainingImpls
   #23 = Class              #22           // org/scalatest/enablers/ContainingImpls
   #24 = Utf8               $init$
   #25 = Utf8               (Lorg/scalatest/enablers/ContainingImpls;)V
   #26 = NameAndType        #24:#25       // $init$:(Lorg/scalatest/enablers/ContainingImpls;)V
   #27 = InterfaceMethodref #23.#26       // org/scalatest/enablers/ContainingImpls.$init$:(Lorg/scalatest/enablers/ContainingImpls;)V
   #28 = Utf8               org/scalatest/enablers/JavaContainingImplicits
   #29 = Class              #28           // org/scalatest/enablers/JavaContainingImplicits
   #30 = Utf8               (Lorg/scalatest/enablers/JavaContainingImplicits;)V
   #31 = NameAndType        #24:#30       // $init$:(Lorg/scalatest/enablers/JavaContainingImplicits;)V
   #32 = InterfaceMethodref #29.#31       // org/scalatest/enablers/JavaContainingImplicits.$init$:(Lorg/scalatest/enablers/JavaContainingImplicits;)V
   #33 = Utf8               org/scalatest/enablers/ContainingStandardImplicits
   #34 = Class              #33           // org/scalatest/enablers/ContainingStandardImplicits
   #35 = Utf8               (Lorg/scalatest/enablers/ContainingStandardImplicits;)V
   #36 = NameAndType        #24:#35       // $init$:(Lorg/scalatest/enablers/ContainingStandardImplicits;)V
   #37 = InterfaceMethodref #34.#36       // org/scalatest/enablers/ContainingStandardImplicits.$init$:(Lorg/scalatest/enablers/ContainingStandardImplicits;)V
   #38 = Utf8               (Lorg/scalatest/enablers/ContainingHighPriorityImplicits;)V
   #39 = NameAndType        #24:#38       // $init$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;)V
   #40 = InterfaceMethodref #6.#39        // org/scalatest/enablers/ContainingHighPriorityImplicits.$init$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;)V
   #41 = Utf8               containingNatureOfMap
   #42 = Utf8               (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #43 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;MAP::Lscala/collection/Map<Ljava/lang/Object;Ljava/lang/Object;>;>(Lorg/scalactic/Equality<Lscala/Tuple2<TK;TV;>;>;)Lorg/scalatest/enablers/Containing<TMAP;>;
   #44 = Utf8               equality
   #45 = Utf8               containingNatureOfMap$
   #46 = Utf8               (Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #47 = NameAndType        #45:#46       // containingNatureOfMap$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #48 = InterfaceMethodref #6.#47        // org/scalatest/enablers/ContainingHighPriorityImplicits.containingNatureOfMap$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #49 = Utf8               this
   #50 = Utf8               Lorg/scalactic/Equality;
   #51 = Utf8               convertEqualityToMapContaining
   #52 = Utf8               convertEqualityToMapContaining$
   #53 = NameAndType        #52:#46       // convertEqualityToMapContaining$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #54 = InterfaceMethodref #6.#53        // org/scalatest/enablers/ContainingHighPriorityImplicits.convertEqualityToMapContaining$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #55 = Utf8               containingNatureOfGenTraversable
   #56 = Utf8               <E:Ljava/lang/Object;TRAV::Lscala/collection/Iterable<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TTRAV;>;
   #57 = Utf8               containingNatureOfGenTraversable$
   #58 = Utf8               (Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #59 = NameAndType        #57:#58       // containingNatureOfGenTraversable$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #60 = InterfaceMethodref #34.#59       // org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfGenTraversable$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #61 = Utf8               convertEqualityToGenTraversableContaining
   #62 = Utf8               convertEqualityToGenTraversableContaining$
   #63 = NameAndType        #62:#58       // convertEqualityToGenTraversableContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #64 = InterfaceMethodref #34.#63       // org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToGenTraversableContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #65 = Utf8               containingNatureOfOption
   #66 = Utf8               <E:Ljava/lang/Object;OPT:Lscala/Option<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TOPT;>;
   #67 = Utf8               containingNatureOfOption$
   #68 = NameAndType        #67:#58       // containingNatureOfOption$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #69 = InterfaceMethodref #34.#68       // org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfOption$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #70 = Utf8               convertEqualityToOptionContaining
   #71 = Utf8               convertEqualityToOptionContaining$
   #72 = NameAndType        #71:#58       // convertEqualityToOptionContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #73 = InterfaceMethodref #34.#72       // org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToOptionContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #74 = Utf8               containingNatureOfArray
   #75 = Utf8               <E:Ljava/lang/Object;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<Ljava/lang/Object;>;
   #76 = Utf8               containingNatureOfArray$
   #77 = NameAndType        #76:#58       // containingNatureOfArray$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #78 = InterfaceMethodref #34.#77       // org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfArray$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #79 = Utf8               convertEqualityToArrayContaining
   #80 = Utf8               convertEqualityToArrayContaining$
   #81 = NameAndType        #80:#58       // convertEqualityToArrayContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #82 = InterfaceMethodref #34.#81       // org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToArrayContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #83 = Utf8               containingNatureOfString
   #84 = Utf8               (Lorg/scalactic/Equality<Ljava/lang/Object;>;)Lorg/scalatest/enablers/Containing<Ljava/lang/String;>;
   #85 = Utf8               containingNatureOfString$
   #86 = NameAndType        #85:#58       // containingNatureOfString$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #87 = InterfaceMethodref #34.#86       // org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfString$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #88 = Utf8               convertEqualityToStringContaining
   #89 = Utf8               convertEqualityToStringContaining$
   #90 = NameAndType        #89:#58       // convertEqualityToStringContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #91 = InterfaceMethodref #34.#90       // org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToStringContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #92 = Utf8               containingNatureOfEvery
   #93 = Utf8               <E:Ljava/lang/Object;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<Lorg/scalactic/Every<TE;>;>;
   #94 = Utf8               containingNatureOfEvery$
   #95 = NameAndType        #94:#58       // containingNatureOfEvery$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #96 = InterfaceMethodref #34.#95       // org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfEvery$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
   #97 = Utf8               convertEqualityToEveryContaining
   #98 = Utf8               convertEqualityToEveryContaining$
   #99 = NameAndType        #98:#58       // convertEqualityToEveryContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #100 = InterfaceMethodref #34.#99       // org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToEveryContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #101 = Utf8               containingNatureOfJavaCollection
  #102 = Utf8               <E:Ljava/lang/Object;JCOL::Ljava/util/Collection<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TJCOL;>;
  #103 = Utf8               containingNatureOfJavaCollection$
  #104 = Utf8               (Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #105 = NameAndType        #103:#104     // containingNatureOfJavaCollection$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #106 = InterfaceMethodref #29.#105      // org/scalatest/enablers/JavaContainingImplicits.containingNatureOfJavaCollection$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #107 = Utf8               convertEqualityToJavaCollectionContaining
  #108 = Utf8               convertEqualityToJavaCollectionContaining$
  #109 = NameAndType        #108:#104     // convertEqualityToJavaCollectionContaining$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #110 = InterfaceMethodref #29.#109      // org/scalatest/enablers/JavaContainingImplicits.convertEqualityToJavaCollectionContaining$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #111 = Utf8               containingNatureOfJavaMap
  #112 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;JMAP::Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;>(Lorg/scalactic/Equality<Ljava/util/Map$Entry<TK;TV;>;>;)Lorg/scalatest/enablers/Containing<TJMAP;>;
  #113 = Utf8               containingNatureOfJavaMap$
  #114 = NameAndType        #113:#104     // containingNatureOfJavaMap$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #115 = InterfaceMethodref #29.#114      // org/scalatest/enablers/JavaContainingImplicits.containingNatureOfJavaMap$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #116 = Utf8               convertEqualityToJavaMapContaining
  #117 = Utf8               convertEqualityToJavaMapContaining$
  #118 = NameAndType        #117:#104     // convertEqualityToJavaMapContaining$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #119 = InterfaceMethodref #29.#118      // org/scalatest/enablers/JavaContainingImplicits.convertEqualityToJavaMapContaining$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
  #120 = Utf8               checkOneOf
  #121 = Utf8               (Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/collection/immutable/Set;
  #122 = Utf8               <T:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TT;>;Lscala/collection/Iterable<Ljava/lang/Object;>;Lorg/scalactic/Equality<TT;>;)Lscala/collection/immutable/Set<Ljava/lang/Object;>;
  #123 = Utf8               left
  #124 = Utf8               right
  #125 = Utf8               checkOneOf$
  #126 = Utf8               (Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/collection/immutable/Set;
  #127 = NameAndType        #125:#126     // checkOneOf$:(Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/collection/immutable/Set;
  #128 = InterfaceMethodref #23.#127      // org/scalatest/enablers/ContainingImpls.checkOneOf$:(Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/collection/immutable/Set;
  #129 = Utf8               Lscala/collection/IterableOnce;
  #130 = Utf8               Lscala/collection/Iterable;
  #131 = Utf8               checkNoneOf
  #132 = Utf8               (Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/Option;
  #133 = Utf8               <T:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TT;>;Lscala/collection/Iterable<Ljava/lang/Object;>;Lorg/scalactic/Equality<TT;>;)Lscala/Option<Ljava/lang/Object;>;
  #134 = Utf8               checkNoneOf$
  #135 = Utf8               (Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/Option;
  #136 = NameAndType        #134:#135     // checkNoneOf$:(Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/Option;
  #137 = InterfaceMethodref #23.#136      // org/scalatest/enablers/ContainingImpls.checkNoneOf$:(Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/Option;
  #138 = Methodref          #4.#18        // java/lang/Object."<init>":()V
  #139 = Utf8               Code
  #140 = Utf8               LineNumberTable
  #141 = Utf8               LocalVariableTable
  #142 = Utf8               Signature
  #143 = Utf8               MethodParameters
  #144 = Utf8               InnerClasses
  #145 = Utf8               SourceFile
  #146 = Utf8               ScalaInlineInfo
  #147 = Utf8               Scala
{
  public static final org.scalatest.enablers.Containing$ MODULE$;
    descriptor: Lorg/scalatest/enablers/Containing$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/scalatest/enablers/Containing$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lorg/scalatest/enablers/Containing$;
        10: getstatic     #21                 // Field MODULE$:Lorg/scalatest/enablers/Containing$;
        13: invokestatic  #27                 // InterfaceMethod org/scalatest/enablers/ContainingImpls.$init$:(Lorg/scalatest/enablers/ContainingImpls;)V
        16: getstatic     #21                 // Field MODULE$:Lorg/scalatest/enablers/Containing$;
        19: invokestatic  #32                 // InterfaceMethod org/scalatest/enablers/JavaContainingImplicits.$init$:(Lorg/scalatest/enablers/JavaContainingImplicits;)V
        22: getstatic     #21                 // Field MODULE$:Lorg/scalatest/enablers/Containing$;
        25: invokestatic  #37                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.$init$:(Lorg/scalatest/enablers/ContainingStandardImplicits;)V
        28: getstatic     #21                 // Field MODULE$:Lorg/scalatest/enablers/Containing$;
        31: invokestatic  #40                 // InterfaceMethod org/scalatest/enablers/ContainingHighPriorityImplicits.$init$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;)V
        34: return
      LineNumberTable:
        line 556: 0

  public <K extends java.lang.Object, V extends java.lang.Object, MAP extends scala.collection.Map<java.lang.Object, java.lang.Object>> org.scalatest.enablers.Containing<MAP> containingNatureOfMap(org.scalactic.Equality<scala.Tuple2<K, V>>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #48                 // InterfaceMethod org/scalatest/enablers/ContainingHighPriorityImplicits.containingNatureOfMap$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #43                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;MAP::Lscala/collection/Map<Ljava/lang/Object;Ljava/lang/Object;>;>(Lorg/scalactic/Equality<Lscala/Tuple2<TK;TV;>;>;)Lorg/scalatest/enablers/Containing<TMAP;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <K extends java.lang.Object, V extends java.lang.Object, MAP extends scala.collection.Map<java.lang.Object, java.lang.Object>> org.scalatest.enablers.Containing<MAP> convertEqualityToMapContaining(org.scalactic.Equality<scala.Tuple2<K, V>>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #54                 // InterfaceMethod org/scalatest/enablers/ContainingHighPriorityImplicits.convertEqualityToMapContaining$:(Lorg/scalatest/enablers/ContainingHighPriorityImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #43                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;MAP::Lscala/collection/Map<Ljava/lang/Object;Ljava/lang/Object;>;>(Lorg/scalactic/Equality<Lscala/Tuple2<TK;TV;>;>;)Lorg/scalatest/enablers/Containing<TMAP;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object, TRAV extends scala.collection.Iterable<java.lang.Object>> org.scalatest.enablers.Containing<TRAV> containingNatureOfGenTraversable(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #60                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfGenTraversable$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #56                          // <E:Ljava/lang/Object;TRAV::Lscala/collection/Iterable<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TTRAV;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object, TRAV extends scala.collection.Iterable<java.lang.Object>> org.scalatest.enablers.Containing<TRAV> convertEqualityToGenTraversableContaining(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #64                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToGenTraversableContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #56                          // <E:Ljava/lang/Object;TRAV::Lscala/collection/Iterable<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TTRAV;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object, OPT extends scala.Option<java.lang.Object>> org.scalatest.enablers.Containing<OPT> containingNatureOfOption(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #69                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfOption$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #66                          // <E:Ljava/lang/Object;OPT:Lscala/Option<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TOPT;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object, OPT extends scala.Option<java.lang.Object>> org.scalatest.enablers.Containing<OPT> convertEqualityToOptionContaining(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #73                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToOptionContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #66                          // <E:Ljava/lang/Object;OPT:Lscala/Option<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TOPT;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object> org.scalatest.enablers.Containing<java.lang.Object> containingNatureOfArray(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #78                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfArray$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #75                          // <E:Ljava/lang/Object;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object> org.scalatest.enablers.Containing<java.lang.Object> convertEqualityToArrayContaining(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #82                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToArrayContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #75                          // <E:Ljava/lang/Object;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public org.scalatest.enablers.Containing<java.lang.String> containingNatureOfString(org.scalactic.Equality<java.lang.Object>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #87                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfString$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #84                          // (Lorg/scalactic/Equality<Ljava/lang/Object;>;)Lorg/scalatest/enablers/Containing<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public org.scalatest.enablers.Containing<java.lang.String> convertEqualityToStringContaining(org.scalactic.Equality<java.lang.Object>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #91                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToStringContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #84                          // (Lorg/scalactic/Equality<Ljava/lang/Object;>;)Lorg/scalatest/enablers/Containing<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object> org.scalatest.enablers.Containing<org.scalactic.Every<E>> containingNatureOfEvery(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #96                 // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.containingNatureOfEvery$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #93                          // <E:Ljava/lang/Object;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<Lorg/scalactic/Every<TE;>;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object> org.scalatest.enablers.Containing<org.scalactic.Every<E>> convertEqualityToEveryContaining(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #100                // InterfaceMethod org/scalatest/enablers/ContainingStandardImplicits.convertEqualityToEveryContaining$:(Lorg/scalatest/enablers/ContainingStandardImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #93                          // <E:Ljava/lang/Object;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<Lorg/scalactic/Every<TE;>;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object, JCOL extends java.util.Collection<java.lang.Object>> org.scalatest.enablers.Containing<JCOL> containingNatureOfJavaCollection(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #106                // InterfaceMethod org/scalatest/enablers/JavaContainingImplicits.containingNatureOfJavaCollection$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #102                         // <E:Ljava/lang/Object;JCOL::Ljava/util/Collection<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TJCOL;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <E extends java.lang.Object, JCOL extends java.util.Collection<java.lang.Object>> org.scalatest.enablers.Containing<JCOL> convertEqualityToJavaCollectionContaining(org.scalactic.Equality<E>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #110                // InterfaceMethod org/scalatest/enablers/JavaContainingImplicits.convertEqualityToJavaCollectionContaining$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #102                         // <E:Ljava/lang/Object;JCOL::Ljava/util/Collection<Ljava/lang/Object;>;>(Lorg/scalactic/Equality<TE;>;)Lorg/scalatest/enablers/Containing<TJCOL;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <K extends java.lang.Object, V extends java.lang.Object, JMAP extends java.util.Map<java.lang.Object, java.lang.Object>> org.scalatest.enablers.Containing<JMAP> containingNatureOfJavaMap(org.scalactic.Equality<java.util.Map$Entry<K, V>>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #115                // InterfaceMethod org/scalatest/enablers/JavaContainingImplicits.containingNatureOfJavaMap$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #112                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;JMAP::Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;>(Lorg/scalactic/Equality<Ljava/util/Map$Entry<TK;TV;>;>;)Lorg/scalatest/enablers/Containing<TJMAP;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <K extends java.lang.Object, V extends java.lang.Object, JMAP extends java.util.Map<java.lang.Object, java.lang.Object>> org.scalatest.enablers.Containing<JMAP> convertEqualityToJavaMapContaining(org.scalactic.Equality<java.util.Map$Entry<K, V>>);
    descriptor: (Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #119                // InterfaceMethod org/scalatest/enablers/JavaContainingImplicits.convertEqualityToJavaMapContaining$:(Lorg/scalatest/enablers/JavaContainingImplicits;Lorg/scalactic/Equality;)Lorg/scalatest/enablers/Containing;
         5: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/scalatest/enablers/Containing$;
            0       6     1 equality   Lorg/scalactic/Equality;
    Signature: #112                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;JMAP::Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;>(Lorg/scalactic/Equality<Ljava/util/Map$Entry<TK;TV;>;>;)Lorg/scalatest/enablers/Containing<TJMAP;>;
    MethodParameters:
      Name                           Flags
      equality                       final

  public <T extends java.lang.Object> scala.collection.immutable.Set<java.lang.Object> checkOneOf(scala.collection.IterableOnce<T>, scala.collection.Iterable<java.lang.Object>, org.scalactic.Equality<T>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #128                // InterfaceMethod org/scalatest/enablers/ContainingImpls.checkOneOf$:(Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/collection/immutable/Set;
         7: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/enablers/Containing$;
            0       8     1  left   Lscala/collection/IterableOnce;
            0       8     2 right   Lscala/collection/Iterable;
            0       8     3 equality   Lorg/scalactic/Equality;
    Signature: #122                         // <T:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TT;>;Lscala/collection/Iterable<Ljava/lang/Object;>;Lorg/scalactic/Equality<TT;>;)Lscala/collection/immutable/Set<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      left                           final
      right                          final
      equality                       final

  public <T extends java.lang.Object> scala.Option<java.lang.Object> checkNoneOf(scala.collection.IterableOnce<T>, scala.collection.Iterable<java.lang.Object>, org.scalactic.Equality<T>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #137                // InterfaceMethod org/scalatest/enablers/ContainingImpls.checkNoneOf$:(Lorg/scalatest/enablers/ContainingImpls;Lscala/collection/IterableOnce;Lscala/collection/Iterable;Lorg/scalactic/Equality;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/enablers/Containing$;
            0       8     1  left   Lscala/collection/IterableOnce;
            0       8     2 right   Lscala/collection/Iterable;
            0       8     3 equality   Lorg/scalactic/Equality;
    Signature: #133                         // <T:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TT;>;Lscala/collection/Iterable<Ljava/lang/Object;>;Lorg/scalactic/Equality<TT;>;)Lscala/Option<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      left                           final
      right                          final
      equality                       final

  private org.scalatest.enablers.Containing$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #138                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/enablers/Containing$;
}
InnerClasses:
  public static #12= #9 of #11;           // Entry=class java/util/Map$Entry of class java/util/Map
SourceFile: "Containing.scala"
  ScalaInlineInfo: length = 0x63 (unknown attribute)
   01 01 00 13 00 11 00 10 01 00 83 00 84 01 00 78
   00 79 01 00 4A 00 2A 01 00 5C 00 2A 01 00 37 00
   2A 01 00 65 00 2A 01 00 6F 00 2A 01 00 29 00 2A
   01 00 41 00 2A 01 00 53 00 2A 01 00 4F 00 2A 01
   00 61 00 2A 01 00 3D 00 2A 01 00 6B 00 2A 01 00
   74 00 2A 01 00 33 00 2A 01 00 46 00 2A 01 00 58
   00 2A 01
  Scala: length = 0x0 (unknown attribute)

