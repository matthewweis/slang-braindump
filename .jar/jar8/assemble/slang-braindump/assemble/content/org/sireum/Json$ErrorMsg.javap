Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Json$ErrorMsg.class
  Last modified May 29, 2022; size 6314 bytes
  SHA-256 checksum 37a7544a6096e325c966d72bcd1fbcda36d94e5bb0e2a2a155d948521ec23990
  Compiled from "Json.scala"
public final class org.sireum.Json$ErrorMsg implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/Json$ErrorMsg
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 24, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/Json$ErrorMsg
    #2 = Class              #1            // org/sireum/Json$ErrorMsg
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/DatatypeSig
    #6 = Class              #5            // org/sireum/DatatypeSig
    #7 = Utf8               Json.scala
    #8 = Utf8               org/sireum/Json
    #9 = Class              #8            // org/sireum/Json
   #10 = Utf8               ErrorMsg
   #11 = Utf8               hashCode
   #12 = Utf8               I
   #13 = Utf8               $content
   #14 = Utf8               Lscala/collection/immutable/Seq;
   #15 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #16 = Utf8               _line
   #17 = Utf8               Lorg/sireum/Z;
   #18 = Utf8               _column
   #19 = Utf8               _message
   #20 = Utf8               Ljava/lang/String;
   #21 = Utf8               bitmap$0
   #22 = Utf8               B
   #23 = Utf8               hash
   #24 = Utf8               ()Lorg/sireum/Z;
   #25 = Utf8               hash$
   #26 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #27 = NameAndType        #25:#26       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #28 = InterfaceMethodref #6.#27        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #29 = Utf8               this
   #30 = Utf8               Lorg/sireum/Json$ErrorMsg;
   #31 = Utf8               $cannotMixImmutableAndMutable
   #32 = Utf8               ()Lscala/runtime/Nothing$;
   #33 = Utf8               org/sireum/Immutable
   #34 = Class              #33           // org/sireum/Immutable
   #35 = Utf8               $cannotMixImmutableAndMutable$
   #36 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #37 = NameAndType        #35:#36       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #38 = InterfaceMethodref #34.#37       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #39 = Utf8               $hasEquals
   #40 = Utf8               ()Z
   #41 = Utf8               $hasEquals$
   #42 = Utf8               (Lorg/sireum/Immutable;)Z
   #43 = NameAndType        #41:#42       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #44 = InterfaceMethodref #34.#43       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #45 = Utf8               $hasString
   #46 = Utf8               $hasString$
   #47 = NameAndType        #46:#42       // $hasString$:(Lorg/sireum/Immutable;)Z
   #48 = InterfaceMethodref #34.#47       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #49 = Utf8               $clone
   #50 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #51 = Utf8               org/sireum/$internal/ImmutableMarker
   #52 = Class              #51           // org/sireum/$internal/ImmutableMarker
   #53 = Utf8               $clone$
   #54 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #55 = NameAndType        #53:#54       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #56 = InterfaceMethodref #52.#55       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #57 = Utf8               line
   #58 = NameAndType        #16:#17       // _line:Lorg/sireum/Z;
   #59 = Fieldref           #2.#58        // org/sireum/Json$ErrorMsg._line:Lorg/sireum/Z;
   #60 = Utf8               getLine
   #61 = Utf8               column
   #62 = NameAndType        #18:#17       // _column:Lorg/sireum/Z;
   #63 = Fieldref           #2.#62        // org/sireum/Json$ErrorMsg._column:Lorg/sireum/Z;
   #64 = Utf8               getColumn
   #65 = Utf8               message
   #66 = Utf8               ()Ljava/lang/String;
   #67 = NameAndType        #19:#20       // _message:Ljava/lang/String;
   #68 = Fieldref           #2.#67        // org/sireum/Json$ErrorMsg._message:Ljava/lang/String;
   #69 = Utf8               getMessage
   #70 = Utf8               toString
   #71 = NameAndType        #45:#40       // $hasString:()Z
   #72 = Methodref          #2.#71        // org/sireum/Json$ErrorMsg.$hasString:()Z
   #73 = Utf8               string$
   #74 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #75 = NameAndType        #73:#74       // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #76 = InterfaceMethodref #6.#75        // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
   #77 = Utf8               java/lang/StringBuilder
   #78 = Class              #77           // java/lang/StringBuilder
   #79 = Utf8               <init>
   #80 = Utf8               ()V
   #81 = NameAndType        #79:#80       // "<init>":()V
   #82 = Methodref          #78.#81       // java/lang/StringBuilder."<init>":()V
   #83 = String             #10           // ErrorMsg
   #84 = Utf8               append
   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #86 = NameAndType        #84:#85       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #87 = Methodref          #78.#86       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #88 = Utf8               (C)Ljava/lang/StringBuilder;
   #89 = NameAndType        #84:#88       // append:(C)Ljava/lang/StringBuilder;
   #90 = Methodref          #78.#89       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #91 = Utf8               org/sireum/String$
   #92 = Class              #91           // org/sireum/String$
   #93 = Utf8               MODULE$
   #94 = Utf8               Lorg/sireum/String$;
   #95 = NameAndType        #93:#94       // MODULE$:Lorg/sireum/String$;
   #96 = Fieldref           #92.#95       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #97 = NameAndType        #57:#24       // line:()Lorg/sireum/Z;
   #98 = Methodref          #2.#97        // org/sireum/Json$ErrorMsg.line:()Lorg/sireum/Z;
   #99 = Utf8               escape
  #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #101 = NameAndType        #99:#100      // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #102 = Methodref          #92.#101      // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #103 = Utf8               ,
  #104 = String             #103          // ,
  #105 = NameAndType        #61:#24       // column:()Lorg/sireum/Z;
  #106 = Methodref          #2.#105       // org/sireum/Json$ErrorMsg.column:()Lorg/sireum/Z;
  #107 = Utf8               org/sireum/String
  #108 = Class              #107          // org/sireum/String
  #109 = NameAndType        #65:#66       // message:()Ljava/lang/String;
  #110 = Methodref          #2.#109       // org/sireum/Json$ErrorMsg.message:()Ljava/lang/String;
  #111 = Utf8               (Ljava/lang/String;)V
  #112 = NameAndType        #79:#111      // "<init>":(Ljava/lang/String;)V
  #113 = Methodref          #108.#112     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #114 = NameAndType        #70:#66       // toString:()Ljava/lang/String;
  #115 = Methodref          #78.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #116 = Utf8               sb
  #117 = Utf8               Ljava/lang/StringBuilder;
  #118 = Utf8               java/lang/String
  #119 = Class              #118          // java/lang/String
  #120 = Utf8               string
  #121 = Methodref          #2.#114       // org/sireum/Json$ErrorMsg.toString:()Ljava/lang/String;
  #122 = Utf8               apply
  #123 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #124 = NameAndType        #122:#123     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #125 = Methodref          #92.#124      // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #126 = Utf8               hashCode$lzycompute
  #127 = Utf8               ()I
  #128 = NameAndType        #21:#22       // bitmap$0:B
  #129 = Fieldref           #2.#128       // org/sireum/Json$ErrorMsg.bitmap$0:B
  #130 = NameAndType        #39:#40       // $hasEquals:()Z
  #131 = Methodref          #2.#130       // org/sireum/Json$ErrorMsg.$hasEquals:()Z
  #132 = NameAndType        #11:#127      // hashCode:()I
  #133 = Methodref          #4.#132       // java/lang/Object.hashCode:()I
  #134 = Utf8               scala/package$
  #135 = Class              #134          // scala/package$
  #136 = Utf8               Lscala/package$;
  #137 = NameAndType        #93:#136      // MODULE$:Lscala/package$;
  #138 = Fieldref           #135.#137     // scala/package$.MODULE$:Lscala/package$;
  #139 = Utf8               Seq
  #140 = Utf8               ()Lscala/collection/immutable/Seq$;
  #141 = NameAndType        #139:#140     // Seq:()Lscala/collection/immutable/Seq$;
  #142 = Methodref          #135.#141     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #143 = Utf8               scala/runtime/ScalaRunTime$
  #144 = Class              #143          // scala/runtime/ScalaRunTime$
  #145 = Utf8               Lscala/runtime/ScalaRunTime$;
  #146 = NameAndType        #93:#145      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #147 = Fieldref           #144.#146     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #148 = Utf8               getClass
  #149 = Utf8               ()Ljava/lang/Class;
  #150 = NameAndType        #148:#149     // getClass:()Ljava/lang/Class;
  #151 = Methodref          #2.#150       // org/sireum/Json$ErrorMsg.getClass:()Ljava/lang/Class;
  #152 = Utf8               java/lang/Class
  #153 = Class              #152          // java/lang/Class
  #154 = Utf8               getName
  #155 = NameAndType        #154:#66      // getName:()Ljava/lang/String;
  #156 = Methodref          #153.#155     // java/lang/Class.getName:()Ljava/lang/String;
  #157 = Utf8               genericWrapArray
  #158 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #159 = NameAndType        #157:#158     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #160 = Methodref          #144.#159     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #161 = Utf8               scala/collection/immutable/Seq$
  #162 = Class              #161          // scala/collection/immutable/Seq$
  #163 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #164 = NameAndType        #122:#163     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #165 = Methodref          #162.#164     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #166 = Utf8               scala/collection/Seq
  #167 = Class              #166          // scala/collection/Seq
  #168 = InterfaceMethodref #167.#132     // scala/collection/Seq.hashCode:()I
  #169 = NameAndType        #11:#12       // hashCode:I
  #170 = Fieldref           #2.#169       // org/sireum/Json$ErrorMsg.hashCode:I
  #171 = Utf8               java/lang/Throwable
  #172 = Class              #171          // java/lang/Throwable
  #173 = NameAndType        #126:#127     // hashCode$lzycompute:()I
  #174 = Methodref          #2.#173       // org/sireum/Json$ErrorMsg.hashCode$lzycompute:()I
  #175 = Utf8               equals
  #176 = Utf8               (Ljava/lang/Object;)Z
  #177 = Utf8               o
  #178 = NameAndType        #175:#176     // equals:(Ljava/lang/Object;)Z
  #179 = Methodref          #4.#178       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #180 = Methodref          #2.#132       // org/sireum/Json$ErrorMsg.hashCode:()I
  #181 = Utf8               Ljava/lang/Object;
  #182 = Utf8               org/sireum/Z
  #183 = Class              #182          // org/sireum/Z
  #184 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)Lorg/sireum/Json$ErrorMsg;
  #185 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)V
  #186 = NameAndType        #79:#185      // "<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)V
  #187 = Methodref          #2.#186       // org/sireum/Json$ErrorMsg."<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)V
  #188 = Utf8               apply$default$1
  #189 = Utf8               apply$default$2
  #190 = Utf8               apply$default$3
  #191 = Utf8               $content$lzycompute
  #192 = Utf8               ()Lscala/collection/immutable/Seq;
  #193 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #194 = Utf8               scala/Tuple2
  #195 = Class              #194          // scala/Tuple2
  #196 = Utf8               type
  #197 = String             #196          // type
  #198 = Utf8               List
  #199 = Utf8               ()Lscala/collection/immutable/List$;
  #200 = NameAndType        #198:#199     // List:()Lscala/collection/immutable/List$;
  #201 = Methodref          #135.#200     // scala/package$.List:()Lscala/collection/immutable/List$;
  #202 = Utf8               org
  #203 = String             #202          // org
  #204 = Utf8               sireum
  #205 = String             #204          // sireum
  #206 = Utf8               [Ljava/lang/Object;
  #207 = Class              #206          // "[Ljava/lang/Object;"
  #208 = Utf8               wrapRefArray
  #209 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #210 = NameAndType        #208:#209     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #211 = Methodref          #144.#210     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #212 = Utf8               scala/collection/immutable/List$
  #213 = Class              #212          // scala/collection/immutable/List$
  #214 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #215 = NameAndType        #122:#214     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #216 = Methodref          #213.#215     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #217 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #218 = NameAndType        #79:#217      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #219 = Methodref          #195.#218     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #220 = String             #57           // line
  #221 = String             #61           // column
  #222 = String             #65           // message
  #223 = Utf8               scala/collection/immutable/Seq
  #224 = Class              #223          // scala/collection/immutable/Seq
  #225 = NameAndType        #13:#14       // $content:Lscala/collection/immutable/Seq;
  #226 = Fieldref           #2.#225       // org/sireum/Json$ErrorMsg.$content:Lscala/collection/immutable/Seq;
  #227 = NameAndType        #191:#192     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #228 = Methodref          #2.#227       // org/sireum/Json$ErrorMsg.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #229 = Utf8               ()Ljava/lang/Object;
  #230 = NameAndType        #49:#50       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #231 = Methodref          #2.#230       // org/sireum/Json$ErrorMsg.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #232 = Utf8               __line
  #233 = Utf8               __column
  #234 = Utf8               __message
  #235 = Methodref          #4.#81        // java/lang/Object."<init>":()V
  #236 = Utf8               $init$
  #237 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #238 = NameAndType        #236:#237     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #239 = InterfaceMethodref #52.#238      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #240 = Utf8               (Lorg/sireum/Immutable;)V
  #241 = NameAndType        #236:#240     // $init$:(Lorg/sireum/Immutable;)V
  #242 = InterfaceMethodref #34.#241      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #243 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #244 = NameAndType        #236:#243     // $init$:(Lorg/sireum/DatatypeSig;)V
  #245 = InterfaceMethodref #6.#244       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #246 = Utf8               Signature
  #247 = Utf8               Code
  #248 = Utf8               LineNumberTable
  #249 = Utf8               LocalVariableTable
  #250 = Utf8               StackMapTable
  #251 = Utf8               MethodParameters
  #252 = Utf8               InnerClasses
  #253 = Utf8               SourceFile
  #254 = Utf8               ScalaInlineInfo
  #255 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #15                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.Z _line;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.Z _column;
    descriptor: Lorg/sireum/Z;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _message;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #28                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #38                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #48                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #56                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.Z line();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #59                 // Field _line:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.Z getLine();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #59                 // Field _line:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.Z column();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #63                 // Field _column:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.Z getColumn();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #63                 // Field _column:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public java.lang.String message();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #68                 // Field _message:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public java.lang.String getMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #68                 // Field _message:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #72                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #76                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          113
        14: new           #78                 // class java/lang/StringBuilder
        17: dup
        18: invokespecial #82                 // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #83                 // String ErrorMsg
        25: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #96                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: aload_0
        41: invokevirtual #98                 // Method line:()Lorg/sireum/Z;
        44: invokevirtual #102                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        47: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: ldc           #104                // String ,
        54: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: getstatic     #96                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        62: aload_0
        63: invokevirtual #106                // Method column:()Lorg/sireum/Z;
        66: invokevirtual #102                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        69: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        72: pop
        73: aload_1
        74: ldc           #104                // String ,
        76: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: pop
        80: aload_1
        81: getstatic     #96                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        84: new           #108                // class org/sireum/String
        87: dup
        88: aload_0
        89: invokevirtual #110                // Method message:()Ljava/lang/String;
        92: invokespecial #113                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        95: invokevirtual #102                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        98: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       101: pop
       102: aload_1
       103: bipush        41
       105: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       113: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 98
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      91     1    sb   Ljava/lang/StringBuilder;
            0     114     0  this   Lorg/sireum/Json$ErrorMsg;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #72                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #76                 // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #96                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #121                // Method toString:()Ljava/lang/String;
        21: invokevirtual #125                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/Json$ErrorMsg;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #129                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     109
        15: aload_0
        16: aload_0
        17: invokevirtual #131                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #133                // Method java/lang/Object.hashCode:()I
        27: goto          95
        30: getstatic     #138                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #142                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #147                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_4
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #151                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #156                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #98                 // Method line:()Lorg/sireum/Z;
        59: aastore
        60: dup
        61: iconst_2
        62: aload_0
        63: invokevirtual #106                // Method column:()Lorg/sireum/Z;
        66: aastore
        67: dup
        68: iconst_3
        69: new           #108                // class org/sireum/String
        72: dup
        73: aload_0
        74: invokevirtual #110                // Method message:()Ljava/lang/String;
        77: invokespecial #113                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        80: aastore
        81: invokevirtual #160                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        84: invokevirtual #165                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        87: checkcast     #167                // class scala/collection/Seq
        90: invokeinterface #168,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        95: putfield      #170                // Field hashCode:I
        98: aload_0
        99: aload_0
       100: getfield      #129                // Field bitmap$0:B
       103: iconst_1
       104: ior
       105: i2b
       106: putfield      #129                // Field bitmap$0:B
       109: aload_1
       110: monitorexit
       111: goto          117
       114: aload_1
       115: monitorexit
       116: athrow
       117: aload_0
       118: getfield      #170                // Field hashCode:I
       121: ireturn
      Exception table:
         from    to  target type
             4   109   114   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/Json$ErrorMsg, class org/sireum/Json$ErrorMsg ]
          stack = [ class org/sireum/Json$ErrorMsg ]
        frame_type = 255 /* full_frame */
          offset_delta = 64
          locals = [ class org/sireum/Json$ErrorMsg, class org/sireum/Json$ErrorMsg ]
          stack = [ class org/sireum/Json$ErrorMsg, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     122     0  this   Lorg/sireum/Json$ErrorMsg;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #129                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #174                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #170                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Json$ErrorMsg;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #131                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #179                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          169
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          169
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/Json$ErrorMsg
        30: ifeq          160
        33: aload_3
        34: checkcast     #2                  // class org/sireum/Json$ErrorMsg
        37: astore        4
        39: aload_0
        40: invokevirtual #180                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #180                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          156
        55: aload_0
        56: invokevirtual #98                 // Method line:()Lorg/sireum/Z;
        59: aload         4
        61: invokevirtual #98                 // Method line:()Lorg/sireum/Z;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          155
        79: aload         5
        81: invokevirtual #179                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          155
        87: aload_0
        88: invokevirtual #106                // Method column:()Lorg/sireum/Z;
        91: aload         4
        93: invokevirtual #106                // Method column:()Lorg/sireum/Z;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          155
       111: aload         6
       113: invokevirtual #179                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          155
       119: aload_0
       120: invokevirtual #110                // Method message:()Ljava/lang/String;
       123: aload         4
       125: invokevirtual #110                // Method message:()Ljava/lang/String;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          155
       143: aload         7
       145: invokevirtual #179                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          155
       151: iconst_1
       152: goto          156
       155: iconst_0
       156: istore_2
       157: goto          168
       160: goto          163
       163: iconst_0
       164: istore_2
       165: goto          168
       168: iload_2
       169: ireturn
      StackMapTable: number_of_entries = 15
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/Json$ErrorMsg ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Json$ErrorMsg, class java/lang/Object, top, class java/lang/Object, class org/sireum/Json$ErrorMsg, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Json$ErrorMsg, class java/lang/Object, top, class java/lang/Object, class org/sireum/Json$ErrorMsg, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/Z ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/Json$ErrorMsg, class java/lang/Object, top, class java/lang/Object, class org/sireum/Json$ErrorMsg, class org/sireum/Z, class org/sireum/Z, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Json$ErrorMsg, class java/lang/Object, top, class java/lang/Object, class org/sireum/Json$ErrorMsg ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/Json$ErrorMsg, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/Json$ErrorMsg, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     170     0  this   Lorg/sireum/Json$ErrorMsg;
            0     170     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.Json$ErrorMsg apply(org.sireum.Z, org.sireum.Z, java.lang.String);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)Lorg/sireum/Json$ErrorMsg;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/Json$ErrorMsg
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #187                // Method "<init>":(Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/Json$ErrorMsg;
            0      11     1  line   Lorg/sireum/Z;
            0      11     2 column   Lorg/sireum/Z;
            0      11     3 message   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      line                           final
      column                         final
      message                        final

  public org.sireum.Z apply$default$1();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #98                 // Method line:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.Z apply$default$2();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #106                // Method column:()Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public java.lang.String apply$default$3();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #110                // Method message:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #129                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     159
        15: aload_0
        16: getstatic     #138                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #142                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #147                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_4
        26: anewarray     #195                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #195                // class scala/Tuple2
        34: dup
        35: ldc           #197                // String type
        37: getstatic     #138                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #201                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #147                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_3
        47: anewarray     #119                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #203                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #205                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #83                 // String ErrorMsg
        64: aastore
        65: checkcast     #207                // class "[Ljava/lang/Object;"
        68: invokevirtual #211                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        71: invokevirtual #216                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        74: invokespecial #219                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        77: aastore
        78: dup
        79: iconst_1
        80: new           #195                // class scala/Tuple2
        83: dup
        84: ldc           #220                // String line
        86: aload_0
        87: invokevirtual #98                 // Method line:()Lorg/sireum/Z;
        90: invokespecial #219                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: aastore
        94: dup
        95: iconst_2
        96: new           #195                // class scala/Tuple2
        99: dup
       100: ldc           #221                // String column
       102: aload_0
       103: invokevirtual #106                // Method column:()Lorg/sireum/Z;
       106: invokespecial #219                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       109: aastore
       110: dup
       111: iconst_3
       112: new           #195                // class scala/Tuple2
       115: dup
       116: ldc           #222                // String message
       118: new           #108                // class org/sireum/String
       121: dup
       122: aload_0
       123: invokevirtual #110                // Method message:()Ljava/lang/String;
       126: invokespecial #113                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       129: invokespecial #219                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       132: aastore
       133: checkcast     #207                // class "[Ljava/lang/Object;"
       136: invokevirtual #211                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       139: invokevirtual #165                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       142: checkcast     #224                // class scala/collection/immutable/Seq
       145: putfield      #226                // Field $content:Lscala/collection/immutable/Seq;
       148: aload_0
       149: aload_0
       150: getfield      #129                // Field bitmap$0:B
       153: iconst_2
       154: ior
       155: i2b
       156: putfield      #129                // Field bitmap$0:B
       159: aload_1
       160: monitorexit
       161: goto          167
       164: aload_1
       165: monitorexit
       166: athrow
       167: aload_0
       168: getfield      #226                // Field $content:Lscala/collection/immutable/Seq;
       171: areturn
      Exception table:
         from    to  target type
             4   159   164   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 159
          locals = [ class org/sireum/Json$ErrorMsg ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     172     0  this   Lorg/sireum/Json$ErrorMsg;
    Signature: #193                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #129                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #228                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #226                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/Json$ErrorMsg;
    Signature: #193                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #231                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Json$ErrorMsg;

  public org.sireum.Json$ErrorMsg(org.sireum.Z, org.sireum.Z, java.lang.String);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #235                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #239                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #242                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #245                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #59                 // Field _line:Lorg/sireum/Z;
        21: aload_0
        22: aload_2
        23: putfield      #63                 // Field _column:Lorg/sireum/Z;
        26: aload_0
        27: aload_3
        28: putfield      #68                 // Field _message:Ljava/lang/String;
        31: return
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lorg/sireum/Json$ErrorMsg;
            0      32     1 __line   Lorg/sireum/Z;
            0      32     2 __column   Lorg/sireum/Z;
            0      32     3 __message   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      __line                         final
      __column                       final
      __message                      final
}
InnerClasses:
  public static final #10= #2 of #9;      // ErrorMsg=class org/sireum/Json$ErrorMsg of class org/sireum/Json
SourceFile: "Json.scala"
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 01 00 18 00 1F 00 20 01 00 31 00 E5 01 00 31
   00 32 01 00 0D 00 C0 01 00 BF 00 C0 01 00 27 00
   28 01 00 2D 00 28 01 00 4F 00 B9 01 00 7A 00 B8
   01 00 BC 00 18 01 00 BD 00 18 01 00 BE 00 42 01
   00 3D 00 18 01 00 AF 00 B0 01 00 40 00 18 01 00
   3C 00 18 01 00 45 00 42 01 00 17 00 18 01 00 0B
   00 7F 01 00 7E 00 7F 01 00 39 00 18 01 00 41 00
   42 01 00 78 00 42 01 00 46 00 42 01
  Scala: length = 0x0 (unknown attribute)

