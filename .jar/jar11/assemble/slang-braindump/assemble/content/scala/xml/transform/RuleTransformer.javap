Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/xml/transform/RuleTransformer.class
  Last modified May 29, 2022; size 3736 bytes
  SHA-256 checksum 2b0778d13c5be07a6497e833e1db6e1659005d434385c4e029dc30cf32dd1462
  Compiled from "RuleTransformer.scala"
public class scala.xml.transform.RuleTransformer extends scala.xml.transform.BasicTransformer
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/xml/transform/RuleTransformer
  super_class: #4                         // scala/xml/transform/BasicTransformer
  interfaces: 0, fields: 1, methods: 6, attributes: 6
Constant pool:
    #1 = Utf8               scala/xml/transform/RuleTransformer
    #2 = Class              #1            // scala/xml/transform/RuleTransformer
    #3 = Utf8               scala/xml/transform/BasicTransformer
    #4 = Class              #3            // scala/xml/transform/BasicTransformer
    #5 = Utf8               RuleTransformer.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005]2AAB\u0004\u0001\u001d!A1\u0003\u0001B\u0001B\u0003%A\u0003C\u0003\u001c\u0001\u0011\u0005A\u0004C\u0004 \u0001\t\u0007I\u0011\u0002\u0011\t\r1\u0002\u0001\u0015!\u0003\"\u0011\u0015A\u0001\u0001\"\u0011.\u0005=\u0011V\u000f\\3Ue\u0006t7OZ8s[\u0016\u0014(B\u0001\u0005\n\u0003%!(/\u00198tM>\u0014XN\u0003\u0002\u000b\u0017\u0005\u0019\u00010\u001c7\u000b\u00031\tQa]2bY\u0006\u001c\u0001a\u0005\u0002\u0001\u001fA\u0011\u0001#E\u0007\u0002\u000f%\u0011!c\u0002\u0002\u0011\u0005\u0006\u001c\u0018n\u0019+sC:\u001chm\u001c:nKJ\fQA];mKN\u00042!\u0006\f\u0019\u001b\u0005Y\u0011BA\f\f\u0005)a$/\u001a9fCR,GM\u0010\t\u0003!eI!AG\u0004\u0003\u0017I+wO]5uKJ+H.Z\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005uq\u0002C\u0001\t\u0001\u0011\u0015\u0019\"\u00011\u0001\u0015\u00031!(/\u00198tM>\u0014X.\u001a:t+\u0005\t\u0003c\u0001\u0012(S5\t1E\u0003\u0002%K\u0005I\u0011.\\7vi\u0006\u0014G.\u001a\u0006\u0003M-\t!bY8mY\u0016\u001cG/[8o\u0013\tA3EA\u0002TKF\u0004\"\u0001\u0005\u0016\n\u0005-:!A\u0005(fgRLgn\u001a+sC:\u001chm\u001c:nKJ\fQ\u0002\u001e:b]N4wN]7feN\u0004CC\u0001\u00186!\ry\u0003\'M\u0007\u0002K%\u0011\u0001&\n\t\u0003eMj\u0011!C\u0005\u0003i%\u0011AAT8eK\")a\'\u0002a\u0001c\u0005\ta\u000e
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               transformers
   #15 = Utf8               Lscala/collection/immutable/Seq;
   #16 = Utf8               Lscala/collection/immutable/Seq<Lscala/xml/transform/NestingTransformer;>;
   #17 = Utf8               ()Lscala/collection/immutable/Seq;
   #18 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/xml/transform/NestingTransformer;>;
   #19 = NameAndType        #14:#15       // transformers:Lscala/collection/immutable/Seq;
   #20 = Fieldref           #2.#19        // scala/xml/transform/RuleTransformer.transformers:Lscala/collection/immutable/Seq;
   #21 = Utf8               this
   #22 = Utf8               Lscala/xml/transform/RuleTransformer;
   #23 = Utf8               transform
   #24 = Utf8               (Lscala/xml/Node;)Lscala/collection/Seq;
   #25 = Utf8               (Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;
   #26 = Utf8               n
   #27 = NameAndType        #14:#17       // transformers:()Lscala/collection/immutable/Seq;
   #28 = Methodref          #2.#27        // scala/xml/transform/RuleTransformer.transformers:()Lscala/collection/immutable/Seq;
   #29 = Utf8               scala/collection/immutable/Seq
   #30 = Class              #29           // scala/collection/immutable/Seq
   #31 = Utf8               isEmpty
   #32 = Utf8               ()Z
   #33 = NameAndType        #31:#32       // isEmpty:()Z
   #34 = InterfaceMethodref #30.#33       // scala/collection/immutable/Seq.isEmpty:()Z
   #35 = Utf8               tail
   #36 = Utf8               ()Ljava/lang/Object;
   #37 = NameAndType        #35:#36       // tail:()Ljava/lang/Object;
   #38 = InterfaceMethodref #30.#37       // scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
   #39 = Utf8               scala/collection/IterableOnceOps
   #40 = Class              #39           // scala/collection/IterableOnceOps
   #41 = Utf8               head
   #42 = NameAndType        #41:#36       // head:()Ljava/lang/Object;
   #43 = InterfaceMethodref #30.#42       // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
   #44 = Utf8               scala/xml/transform/NestingTransformer
   #45 = Class              #44           // scala/xml/transform/NestingTransformer
   #46 = NameAndType        #23:#24       // transform:(Lscala/xml/Node;)Lscala/collection/Seq;
   #47 = Methodref          #45.#46       // scala/xml/transform/NestingTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Seq;
   #48 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #49 = MethodType         #48           //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #50 = Utf8               $anonfun$transform$1
   #51 = Utf8               (Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
   #52 = NameAndType        #50:#51       // $anonfun$transform$1:(Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
   #53 = Methodref          #2.#52        // scala/xml/transform/RuleTransformer.$anonfun$transform$1:(Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
   #54 = MethodHandle       6:#53         // REF_invokeStatic scala/xml/transform/RuleTransformer.$anonfun$transform$1:(Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
   #55 = MethodType         #51           //  (Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
   #56 = Integer            5
   #57 = Integer            1
   #58 = Utf8               java/lang/invoke/LambdaMetafactory
   #59 = Class              #58           // java/lang/invoke/LambdaMetafactory
   #60 = Utf8               altMetafactory
   #61 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #62 = NameAndType        #60:#61       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #63 = Methodref          #59.#62       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #64 = MethodHandle       6:#63         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #65 = Utf8               apply
   #66 = Utf8               ()Lscala/Function2;
   #67 = NameAndType        #65:#66       // apply:()Lscala/Function2;
   #68 = InvokeDynamic      #0:#67        // #0:apply:()Lscala/Function2;
   #69 = Utf8               foldLeft
   #70 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #71 = NameAndType        #69:#70       // foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #72 = InterfaceMethodref #40.#71       // scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #73 = Utf8               scala/collection/Seq
   #74 = Class              #73           // scala/collection/Seq
   #75 = Utf8               Lscala/xml/Node;
   #76 = Utf8               $anonfun$transformers$1
   #77 = Utf8               (Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
   #78 = Utf8               x$1
   #79 = Utf8               <init>
   #80 = Utf8               (Lscala/xml/transform/RewriteRule;)V
   #81 = NameAndType        #79:#80       // "<init>":(Lscala/xml/transform/RewriteRule;)V
   #82 = Methodref          #45.#81       // scala/xml/transform/NestingTransformer."<init>":(Lscala/xml/transform/RewriteRule;)V
   #83 = Utf8               Lscala/xml/transform/RewriteRule;
   #84 = Utf8               res
   #85 = Utf8               transformer
   #86 = Utf8               (Lscala/collection/Seq;)Lscala/collection/Seq;
   #87 = NameAndType        #23:#86       // transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
   #88 = Methodref          #45.#87       // scala/xml/transform/NestingTransformer.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
   #89 = Utf8               Lscala/collection/Seq;
   #90 = Utf8               Lscala/xml/transform/NestingTransformer;
   #91 = Utf8               (Lscala/collection/immutable/Seq;)V
   #92 = Utf8               (Lscala/collection/immutable/Seq<Lscala/xml/transform/RewriteRule;>;)V
   #93 = Utf8               rules
   #94 = Utf8               ()V
   #95 = NameAndType        #79:#94       // "<init>":()V
   #96 = Methodref          #4.#95        // scala/xml/transform/BasicTransformer."<init>":()V
   #97 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #98 = MethodType         #97           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #99 = NameAndType        #76:#77       // $anonfun$transformers$1:(Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
  #100 = Methodref          #2.#99        // scala/xml/transform/RuleTransformer.$anonfun$transformers$1:(Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
  #101 = MethodHandle       6:#100        // REF_invokeStatic scala/xml/transform/RuleTransformer.$anonfun$transformers$1:(Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
  #102 = MethodType         #77           //  (Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
  #103 = Utf8               ()Lscala/Function1;
  #104 = NameAndType        #65:#103      // apply:()Lscala/Function1;
  #105 = InvokeDynamic      #1:#104       // #1:apply:()Lscala/Function1;
  #106 = Utf8               map
  #107 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #108 = NameAndType        #106:#107     // map:(Lscala/Function1;)Ljava/lang/Object;
  #109 = InterfaceMethodref #30.#108      // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #110 = Utf8               $deserializeLambda$
  #111 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #112 = Utf8               scala/runtime/LambdaDeserialize
  #113 = Class              #112          // scala/runtime/LambdaDeserialize
  #114 = Utf8               bootstrap
  #115 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #116 = NameAndType        #114:#115     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #117 = Methodref          #113.#116     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #118 = MethodHandle       6:#117        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #119 = Utf8               lambdaDeserialize
  #120 = NameAndType        #119:#111     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #121 = InvokeDynamic      #2:#120       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #122 = Utf8               Signature
  #123 = Utf8               Code
  #124 = Utf8               LineNumberTable
  #125 = Utf8               LocalVariableTable
  #126 = Utf8               StackMapTable
  #127 = Utf8               MethodParameters
  #128 = Utf8               InnerClasses
  #129 = Utf8               SourceFile
  #130 = Utf8               RuntimeVisibleAnnotations
  #131 = Utf8               BootstrapMethods
  #132 = Utf8               ScalaInlineInfo
  #133 = Utf8               ScalaSig
{
  private final scala.collection.immutable.Seq<scala.xml.transform.NestingTransformer> transformers;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #16                          // Lscala/collection/immutable/Seq<Lscala/xml/transform/NestingTransformer;>;

  private scala.collection.immutable.Seq<scala.xml.transform.NestingTransformer> transformers();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #20                 // Field transformers:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/transform/RuleTransformer;
    Signature: #18                          // ()Lscala/collection/immutable/Seq<Lscala/xml/transform/NestingTransformer;>;

  public scala.collection.Seq<scala.xml.Node> transform(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Lscala/collection/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #28                 // Method transformers:()Lscala/collection/immutable/Seq;
         4: invokeinterface #34,  1           // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
         9: ifeq          16
        12: aload_1
        13: goto          57
        16: aload_0
        17: invokespecial #28                 // Method transformers:()Lscala/collection/immutable/Seq;
        20: invokeinterface #38,  1           // InterfaceMethod scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
        25: checkcast     #40                 // class scala/collection/IterableOnceOps
        28: aload_0
        29: invokespecial #28                 // Method transformers:()Lscala/collection/immutable/Seq;
        32: invokeinterface #43,  1           // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        37: checkcast     #45                 // class scala/xml/transform/NestingTransformer
        40: aload_1
        41: invokevirtual #47                 // Method scala/xml/transform/NestingTransformer.transform:(Lscala/xml/Node;)Lscala/collection/Seq;
        44: invokedynamic #68,  0             // InvokeDynamic #0:apply:()Lscala/Function2;
        49: invokeinterface #72,  3           // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        54: checkcast     #74                 // class scala/collection/Seq
        57: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 104 /* same_locals_1_stack_item */
          stack = [ class scala/collection/Seq ]
      LineNumberTable:
        line 22: 0
        line 23: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lscala/xml/transform/RuleTransformer;
            0      58     1     n   Lscala/xml/Node;
    Signature: #25                          // (Lscala/xml/Node;)Lscala/collection/Seq<Lscala/xml/Node;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.xml.transform.NestingTransformer $anonfun$transformers$1(scala.xml.transform.RewriteRule);
    descriptor: (Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #45                 // class scala/xml/transform/NestingTransformer
         3: dup
         4: aload_0
         5: invokespecial #82                 // Method scala/xml/transform/NestingTransformer."<init>":(Lscala/xml/transform/RewriteRule;)V
         8: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$1   Lscala/xml/transform/RewriteRule;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.collection.Seq $anonfun$transform$1(scala.collection.Seq, scala.xml.transform.NestingTransformer);
    descriptor: (Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #88                 // Method scala/xml/transform/NestingTransformer.transform:(Lscala/collection/Seq;)Lscala/collection/Seq;
         5: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   res   Lscala/collection/Seq;
            0       6     1 transformer   Lscala/xml/transform/NestingTransformer;
    MethodParameters:
      Name                           Flags
      res                            final
      transformer                    final

  public scala.xml.transform.RuleTransformer(scala.collection.immutable.Seq<scala.xml.transform.RewriteRule>);
    descriptor: (Lscala/collection/immutable/Seq;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #96                 // Method scala/xml/transform/BasicTransformer."<init>":()V
         4: aload_0
         5: aload_1
         6: invokedynamic #105,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        11: invokeinterface #109,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        16: checkcast     #30                 // class scala/collection/immutable/Seq
        19: putfield      #20                 // Field transformers:Lscala/collection/immutable/Seq;
        22: return
      LineNumberTable:
        line 19: 0
        line 20: 4
        line 19: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/xml/transform/RuleTransformer;
            0      23     1 rules   Lscala/collection/immutable/Seq;
    Signature: #92                          // (Lscala/collection/immutable/Seq<Lscala/xml/transform/RewriteRule;>;)V
    MethodParameters:
      Name                           Flags
      rules                          final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #121,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "RuleTransformer.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005]2AAB\u0004\u0001\u001d!A1\u0003\u0001B\u0001B\u0003%A\u0003C\u0003\u001c\u0001\u0011\u0005A\u0004C\u0004 \u0001\t\u0007I\u0011\u0002\u0011\t\r1\u0002\u0001\u0015!\u0003\"\u0011\u0015A\u0001\u0001\"\u0011.\u0005=\u0011V\u000f\\3Ue\u0006t7OZ8s[\u0016\u0014(B\u0001\u0005\n\u0003%!(/\u00198tM>\u0014XN\u0003\u0002\u000b\u0017\u0005\u0019\u00010\u001c7\u000b\u00031\tQa]2bY\u0006\u001c\u0001a\u0005\u0002\u0001\u001fA\u0011\u0001#E\u0007\u0002\u000f%\u0011!c\u0002\u0002\u0011\u0005\u0006\u001c\u0018n\u0019+sC:\u001chm\u001c:nKJ\fQA];mKN\u00042!\u0006\f\u0019\u001b\u0005Y\u0011BA\f\f\u0005)a$/\u001a9fCR,GM\u0010\t\u0003!eI!AG\u0004\u0003\u0017I+wO]5uKJ+H.Z\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0005uq\u0002C\u0001\t\u0001\u0011\u0015\u0019\"\u00011\u0001\u0015\u00031!(/\u00198tM>\u0014X.\u001a:t+\u0005\t\u0003c\u0001\u0012(S5\t1E\u0003\u0002%K\u0005I\u0011.\\7vi\u0006\u0014G.\u001a\u0006\u0003M-\t!bY8mY\u0016\u001cG/[8o\u0013\tA3EA\u0002TKF\u0004\"\u0001\u0005\u0016\n\u0005-:!A\u0005(fgRLgn\u001a+sC:\u001chm\u001c:nKJ\fQ\u0002\u001e:b]N4wN]7feN\u0004CC\u0001\u00186!\ry\u0003\'M\u0007\u0002K%\u0011\u0001&\n\t\u0003eMj\u0011!C\u0005\u0003i%\u0011AAT8eK\")a\'\u0002a\u0001c\u0005\ta\u000e"
    )
BootstrapMethods:
  0: #64 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #49 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #54 REF_invokeStatic scala/xml/transform/RuleTransformer.$anonfun$transform$1:(Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
      #55 (Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
      #56 5
      #57 1
      #55 (Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
  1: #64 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #101 REF_invokeStatic scala/xml/transform/RuleTransformer.$anonfun$transformers$1:(Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
      #102 (Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
      #56 5
      #57 1
      #102 (Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
  2: #118 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #54 REF_invokeStatic scala/xml/transform/RuleTransformer.$anonfun$transform$1:(Lscala/collection/Seq;Lscala/xml/transform/NestingTransformer;)Lscala/collection/Seq;
      #101 REF_invokeStatic scala/xml/transform/RuleTransformer.$anonfun$transformers$1:(Lscala/xml/transform/RewriteRule;)Lscala/xml/transform/NestingTransformer;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 32 00 33 01 00 4C 00 4D 01 00 4F
   00 5B 00 00 17 00 18 00 00 0E 00 11 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
