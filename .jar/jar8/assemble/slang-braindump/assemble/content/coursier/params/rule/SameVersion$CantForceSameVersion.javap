Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/params/rule/SameVersion$CantForceSameVersion.class
  Last modified May 29, 2022; size 2710 bytes
  SHA-256 checksum be6c1cc09916893af6fe36fd8b8d126f77a871ec3ac92adc59ca84fc0ee31fcb
  Compiled from "SameVersion.scala"
public final class coursier.params.rule.SameVersion$CantForceSameVersion extends coursier.error.ResolutionError$UnsatisfiableRule
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/params/rule/SameVersion$CantForceSameVersion
  super_class: #4                         // coursier/error/ResolutionError$UnsatisfiableRule
  interfaces: 0, fields: 0, methods: 3, attributes: 4
Constant pool:
    #1 = Utf8               coursier/params/rule/SameVersion$CantForceSameVersion
    #2 = Class              #1            // coursier/params/rule/SameVersion$CantForceSameVersion
    #3 = Utf8               coursier/error/ResolutionError$UnsatisfiableRule
    #4 = Class              #3            // coursier/error/ResolutionError$UnsatisfiableRule
    #5 = Utf8               SameVersion.scala
    #6 = Utf8               coursier/error/ResolutionError
    #7 = Class              #6            // coursier/error/ResolutionError
    #8 = Utf8               UnsatisfiableRule
    #9 = Utf8               coursier/params/rule/SameVersion
   #10 = Class              #9            // coursier/params/rule/SameVersion
   #11 = Utf8               CantForceSameVersion
   #12 = Utf8               coursier/params/rule/SameVersion$CantForceSameVersion$$anonfun$$lessinit$greater$2
   #13 = Class              #12           // coursier/params/rule/SameVersion$CantForceSameVersion$$anonfun$$lessinit$greater$2
   #14 = Utf8               coursier/params/rule/SameVersion$SameVersionConflict
   #15 = Class              #14           // coursier/params/rule/SameVersion$SameVersionConflict
   #16 = Utf8               SameVersionConflict
   #17 = Utf8               rule
   #18 = Utf8               ()Lcoursier/params/rule/SameVersion;
   #19 = Utf8               ()Lcoursier/params/rule/Rule;
   #20 = NameAndType        #17:#19       // rule:()Lcoursier/params/rule/Rule;
   #21 = Methodref          #4.#20        // coursier/error/ResolutionError$UnsatisfiableRule.rule:()Lcoursier/params/rule/Rule;
   #22 = Utf8               this
   #23 = Utf8               Lcoursier/params/rule/SameVersion$CantForceSameVersion;
   #24 = NameAndType        #17:#18       // rule:()Lcoursier/params/rule/SameVersion;
   #25 = Methodref          #2.#24        // coursier/params/rule/SameVersion$CantForceSameVersion.rule:()Lcoursier/params/rule/SameVersion;
   #26 = Utf8               <init>
   #27 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
   #28 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set<Lcoursier/core/Module;>;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
   #29 = Utf8               resolution
   #30 = Utf8               modules
   #31 = Utf8               version
   #32 = Utf8               conflict
   #33 = Utf8               java/lang/StringBuilder
   #34 = Class              #33           // java/lang/StringBuilder
   #35 = Integer            33
   #36 = Utf8               (I)V
   #37 = NameAndType        #26:#36       // "<init>":(I)V
   #38 = Methodref          #34.#37       // java/lang/StringBuilder."<init>":(I)V
   #39 = Utf8               Can\'t force version
   #40 = String             #39           // Can\'t force version
   #41 = Utf8               append
   #42 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #43 = NameAndType        #41:#42       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #44 = Methodref          #34.#43       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #45 = Utf8                for modules
   #46 = String             #45           //  for modules
   #47 = Utf8               scala/collection/immutable/Set
   #48 = Class              #47           // scala/collection/immutable/Set
   #49 = Utf8               toVector
   #50 = Utf8               ()Lscala/collection/immutable/Vector;
   #51 = NameAndType        #49:#50       // toVector:()Lscala/collection/immutable/Vector;
   #52 = InterfaceMethodref #48.#51       // scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
   #53 = Utf8               ()V
   #54 = NameAndType        #26:#53       // "<init>":()V
   #55 = Methodref          #13.#54       // coursier/params/rule/SameVersion$CantForceSameVersion$$anonfun$$lessinit$greater$2."<init>":()V
   #56 = Utf8               scala/collection/immutable/Vector
   #57 = Class              #56           // scala/collection/immutable/Vector
   #58 = Utf8               map
   #59 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #60 = NameAndType        #58:#59       // map:(Lscala/Function1;)Ljava/lang/Object;
   #61 = Methodref          #57.#60       // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
   #62 = Utf8               scala/collection/IterableOnceOps
   #63 = Class              #62           // scala/collection/IterableOnceOps
   #64 = Utf8               ,
   #65 = String             #64           // ,
   #66 = Utf8               mkString
   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #68 = NameAndType        #66:#67       // mkString:(Ljava/lang/String;)Ljava/lang/String;
   #69 = InterfaceMethodref #63.#68       // scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
   #70 = Utf8               toString
   #71 = Utf8               ()Ljava/lang/String;
   #72 = NameAndType        #70:#71       // toString:()Ljava/lang/String;
   #73 = Methodref          #34.#72       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #74 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
   #75 = NameAndType        #26:#74       // "<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
   #76 = Methodref          #4.#75        // coursier/error/ResolutionError$UnsatisfiableRule."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
   #77 = Utf8               scala/Predef$
   #78 = Class              #77           // scala/Predef$
   #79 = Utf8               MODULE$
   #80 = Utf8               Lscala/Predef$;
   #81 = NameAndType        #79:#80       // MODULE$:Lscala/Predef$;
   #82 = Fieldref           #78.#81       // scala/Predef$.MODULE$:Lscala/Predef$;
   #83 = Utf8               nonEmpty
   #84 = Utf8               ()Z
   #85 = NameAndType        #83:#84       // nonEmpty:()Z
   #86 = InterfaceMethodref #48.#85       // scala/collection/immutable/Set.nonEmpty:()Z
   #87 = Utf8               assert
   #88 = Utf8               (Z)V
   #89 = NameAndType        #87:#88       // assert:(Z)V
   #90 = Methodref          #78.#89       // scala/Predef$.assert:(Z)V
   #91 = Utf8               ()Lcoursier/error/conflict/UnsatisfiedRule;
   #92 = NameAndType        #32:#91       // conflict:()Lcoursier/error/conflict/UnsatisfiedRule;
   #93 = Methodref          #4.#92        // coursier/error/ResolutionError$UnsatisfiableRule.conflict:()Lcoursier/error/conflict/UnsatisfiedRule;
   #94 = Utf8               ()Lscala/collection/immutable/Set;
   #95 = NameAndType        #30:#94       // modules:()Lscala/collection/immutable/Set;
   #96 = Methodref          #15.#95       // coursier/params/rule/SameVersion$SameVersionConflict.modules:()Lscala/collection/immutable/Set;
   #97 = Utf8               forall
   #98 = Utf8               (Lscala/Function1;)Z
   #99 = NameAndType        #97:#98       // forall:(Lscala/Function1;)Z
  #100 = InterfaceMethodref #48.#99       // scala/collection/immutable/Set.forall:(Lscala/Function1;)Z
  #101 = Utf8               Lcoursier/core/Resolution;
  #102 = Utf8               Lcoursier/params/rule/SameVersion;
  #103 = Utf8               Lscala/collection/immutable/Set;
  #104 = Utf8               Ljava/lang/String;
  #105 = Utf8               Lcoursier/params/rule/SameVersion$SameVersionConflict;
  #106 = Utf8               Code
  #107 = Utf8               LineNumberTable
  #108 = Utf8               LocalVariableTable
  #109 = Utf8               Signature
  #110 = Utf8               MethodParameters
  #111 = Utf8               InnerClasses
  #112 = Utf8               SourceFile
  #113 = Utf8               ScalaInlineInfo
  #114 = Utf8               Scala
{
  public coursier.params.rule.SameVersion rule();
    descriptor: ()Lcoursier/params/rule/SameVersion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #21                 // Method coursier/error/ResolutionError$UnsatisfiableRule.rule:()Lcoursier/params/rule/Rule;
         4: checkcast     #10                 // class coursier/params/rule/SameVersion
         7: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/params/rule/SameVersion$CantForceSameVersion;

  public coursier.params.rule.Rule rule();
    descriptor: ()Lcoursier/params/rule/Rule;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #25                 // Method rule:()Lcoursier/params/rule/SameVersion;
         4: areturn
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/SameVersion$CantForceSameVersion;

  public coursier.params.rule.SameVersion$CantForceSameVersion(coursier.core.Resolution, coursier.params.rule.SameVersion, scala.collection.immutable.Set<coursier.core.Module>, java.lang.String, coursier.params.rule.SameVersion$SameVersionConflict);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload         5
         5: new           #34                 // class java/lang/StringBuilder
         8: dup
         9: ldc           #35                 // int 33
        11: invokespecial #38                 // Method java/lang/StringBuilder."<init>":(I)V
        14: ldc           #40                 // String Can\'t force version
        16: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: aload         4
        21: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc           #46                 // String  for modules
        26: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: aload_3
        30: invokeinterface #52,  1           // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
        35: new           #13                 // class coursier/params/rule/SameVersion$CantForceSameVersion$$anonfun$$lessinit$greater$2
        38: dup
        39: invokespecial #55                 // Method coursier/params/rule/SameVersion$CantForceSameVersion$$anonfun$$lessinit$greater$2."<init>":()V
        42: invokevirtual #61                 // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        45: checkcast     #63                 // class scala/collection/IterableOnceOps
        48: ldc           #65                 // String ,
        50: invokeinterface #69,  2           // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
        55: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        61: invokespecial #76                 // Method coursier/error/ResolutionError$UnsatisfiableRule."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Rule;Lcoursier/error/conflict/UnsatisfiedRule;Ljava/lang/String;)V
        64: getstatic     #82                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        67: aload_3
        68: invokeinterface #86,  1           // InterfaceMethod scala/collection/immutable/Set.nonEmpty:()Z
        73: invokevirtual #90                 // Method scala/Predef$.assert:(Z)V
        76: getstatic     #82                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        79: aload_3
        80: aload_0
        81: invokespecial #93                 // Method coursier/error/ResolutionError$UnsatisfiableRule.conflict:()Lcoursier/error/conflict/UnsatisfiedRule;
        84: checkcast     #15                 // class coursier/params/rule/SameVersion$SameVersionConflict
        87: invokevirtual #96                 // Method coursier/params/rule/SameVersion$SameVersionConflict.modules:()Lscala/collection/immutable/Set;
        90: invokeinterface #100,  2          // InterfaceMethod scala/collection/immutable/Set.forall:(Lscala/Function1;)Z
        95: invokevirtual #90                 // Method scala/Predef$.assert:(Z)V
        98: return
      LineNumberTable:
        line 95: 0
        line 96: 1
        line 97: 2
        line 98: 3
        line 100: 5
        line 102: 64
        line 103: 76
        line 89: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      99     0  this   Lcoursier/params/rule/SameVersion$CantForceSameVersion;
            0      99     1 resolution   Lcoursier/core/Resolution;
            0      99     2  rule   Lcoursier/params/rule/SameVersion;
            0      99     3 modules   Lscala/collection/immutable/Set;
            0      99     4 version   Ljava/lang/String;
            0      99     5 conflict   Lcoursier/params/rule/SameVersion$SameVersionConflict;
    Signature: #28                          // (Lcoursier/core/Resolution;Lcoursier/params/rule/SameVersion;Lscala/collection/immutable/Set<Lcoursier/core/Module;>;Ljava/lang/String;Lcoursier/params/rule/SameVersion$SameVersionConflict;)V
    MethodParameters:
      Name                           Flags
      resolution                     final
      rule                           final
      modules                        final
      version                        final
      conflict                       final
}
InnerClasses:
  public static abstract #8= #4 of #7;    // UnsatisfiableRule=class coursier/error/ResolutionError$UnsatisfiableRule of class coursier/error/ResolutionError
  public static final #11= #2 of #10;     // CantForceSameVersion=class coursier/params/rule/SameVersion$CantForceSameVersion of class coursier/params/rule/SameVersion
  public final #13;                       // class coursier/params/rule/SameVersion$CantForceSameVersion$$anonfun$$lessinit$greater$2
  public static final #16= #15 of #10;    // SameVersionConflict=class coursier/params/rule/SameVersion$SameVersionConflict of class coursier/params/rule/SameVersion
SourceFile: "SameVersion.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 1A 00 1B 01 00 11 00 13 01 00 11
   00 12 01
  Scala: length = 0x0 (unknown attribute)

