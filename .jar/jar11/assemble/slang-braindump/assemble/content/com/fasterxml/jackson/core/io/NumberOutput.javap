Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/core/io/NumberOutput.class
  Last modified May 29, 2022; size 7635 bytes
  SHA-256 checksum bafe08b1a2eee4486ce6549e5c55e0f6c42905fcb026ee3e6bf7e930ed5c4740
  Compiled from "NumberOutput.java"
public final class com.fasterxml.jackson.core.io.NumberOutput
  minor version: 0
  major version: 50
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #77                         // com/fasterxml/jackson/core/io/NumberOutput
  super_class: #78                        // java/lang/Object
  interfaces: 0, fields: 10, methods: 26, attributes: 1
Constant pool:
    #1 = Methodref          #78.#153      // java/lang/Object."<init>":()V
    #2 = Class              #154          // java/lang/Integer
    #3 = Integer            -2147483648
    #4 = Methodref          #77.#155      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestI:([CI)I
    #5 = Fieldref           #77.#156      // com/fasterxml/jackson/core/io/NumberOutput.MILLION:I
    #6 = Methodref          #77.#157      // com/fasterxml/jackson/core/io/NumberOutput._leading3:(I[CI)I
    #7 = Methodref          #77.#158      // com/fasterxml/jackson/core/io/NumberOutput._full3:(I[CI)I
    #8 = Fieldref           #77.#159      // com/fasterxml/jackson/core/io/NumberOutput.BILLION:I
    #9 = Methodref          #77.#160      // com/fasterxml/jackson/core/io/NumberOutput._outputFullBillion:(I[CI)I
   #10 = Methodref          #77.#161      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestI:([BI)I
   #11 = Methodref          #77.#162      // com/fasterxml/jackson/core/io/NumberOutput._leading3:(I[BI)I
   #12 = Methodref          #77.#163      // com/fasterxml/jackson/core/io/NumberOutput._full3:(I[BI)I
   #13 = Methodref          #77.#164      // com/fasterxml/jackson/core/io/NumberOutput._outputFullBillion:(I[BI)I
   #14 = Fieldref           #77.#165      // com/fasterxml/jackson/core/io/NumberOutput.MIN_INT_AS_LONG:J
   #15 = Methodref          #77.#166      // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[CI)I
   #16 = Class              #167          // java/lang/Long
   #17 = Long               -9223372036854775808l
   #19 = Methodref          #77.#168      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestL:([CI)I
   #20 = Fieldref           #77.#169      // com/fasterxml/jackson/core/io/NumberOutput.MAX_INT_AS_LONG:J
   #21 = Fieldref           #77.#170      // com/fasterxml/jackson/core/io/NumberOutput.BILLION_L:J
   #22 = Methodref          #77.#171      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoBillion:(I[CI)I
   #23 = Methodref          #77.#172      // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[BI)I
   #24 = Methodref          #77.#173      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestL:([BI)I
   #25 = Methodref          #77.#174      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoBillion:(I[BI)I
   #26 = Fieldref           #77.#175      // com/fasterxml/jackson/core/io/NumberOutput.sSmallIntStrs:[Ljava/lang/String;
   #27 = Fieldref           #77.#176      // com/fasterxml/jackson/core/io/NumberOutput.sSmallIntStrs2:[Ljava/lang/String;
   #28 = Methodref          #2.#177       // java/lang/Integer.toString:(I)Ljava/lang/String;
   #29 = Long               2147483647l
   #31 = Long               -2147483648l
   #33 = Methodref          #77.#177      // com/fasterxml/jackson/core/io/NumberOutput.toString:(I)Ljava/lang/String;
   #34 = Methodref          #16.#178      // java/lang/Long.toString:(J)Ljava/lang/String;
   #35 = Methodref          #179.#180     // java/lang/Double.toString:(D)Ljava/lang/String;
   #36 = Methodref          #181.#182     // java/lang/Float.toString:(F)Ljava/lang/String;
   #37 = Methodref          #179.#183     // java/lang/Double.isNaN:(D)Z
   #38 = Methodref          #179.#184     // java/lang/Double.isInfinite:(D)Z
   #39 = Methodref          #181.#185     // java/lang/Float.isNaN:(F)Z
   #40 = Methodref          #181.#186     // java/lang/Float.isInfinite:(F)Z
   #41 = Methodref          #77.#187      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoMillion:([CIII)I
   #42 = Fieldref           #77.#188      // com/fasterxml/jackson/core/io/NumberOutput.TRIPLET_TO_CHARS:[I
   #43 = Methodref          #77.#189      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoMillion:([BIII)I
   #44 = Fieldref           #77.#190      // com/fasterxml/jackson/core/io/NumberOutput.SMALLEST_LONG:Ljava/lang/String;
   #45 = Methodref          #55.#191      // java/lang/String.length:()I
   #46 = Methodref          #55.#192      // java/lang/String.getChars:(II[CI)V
   #47 = Methodref          #55.#193      // java/lang/String.charAt:(I)C
   #48 = Fieldref           #77.#194      // com/fasterxml/jackson/core/io/NumberOutput.SMALLEST_INT:Ljava/lang/String;
   #49 = Integer            1000000
   #50 = Integer            1000000000
   #51 = Long               1000000000l
   #53 = Methodref          #55.#195      // java/lang/String.valueOf:(I)Ljava/lang/String;
   #54 = Methodref          #55.#196      // java/lang/String.valueOf:(J)Ljava/lang/String;
   #55 = Class              #197          // java/lang/String
   #56 = String             #198          // 0
   #57 = String             #199          // 1
   #58 = String             #200          // 2
   #59 = String             #201          // 3
   #60 = String             #202          // 4
   #61 = String             #203          // 5
   #62 = String             #204          // 6
   #63 = String             #205          // 7
   #64 = String             #206          // 8
   #65 = String             #207          // 9
   #66 = String             #208          // 10
   #67 = String             #209          // -1
   #68 = String             #210          // -2
   #69 = String             #211          // -3
   #70 = String             #212          // -4
   #71 = String             #213          // -5
   #72 = String             #214          // -6
   #73 = String             #215          // -7
   #74 = String             #216          // -8
   #75 = String             #217          // -9
   #76 = String             #218          // -10
   #77 = Class              #219          // com/fasterxml/jackson/core/io/NumberOutput
   #78 = Class              #220          // java/lang/Object
   #79 = Utf8               MILLION
   #80 = Utf8               I
   #81 = Utf8               BILLION
   #82 = Utf8               BILLION_L
   #83 = Utf8               J
   #84 = Utf8               MIN_INT_AS_LONG
   #85 = Utf8               MAX_INT_AS_LONG
   #86 = Utf8               SMALLEST_INT
   #87 = Utf8               Ljava/lang/String;
   #88 = Utf8               SMALLEST_LONG
   #89 = Utf8               TRIPLET_TO_CHARS
   #90 = Utf8               [I
   #91 = Utf8               sSmallIntStrs
   #92 = Utf8               [Ljava/lang/String;
   #93 = Utf8               sSmallIntStrs2
   #94 = Utf8               <init>
   #95 = Utf8               ()V
   #96 = Utf8               Code
   #97 = Utf8               LineNumberTable
   #98 = Utf8               LocalVariableTable
   #99 = Utf8               this
  #100 = Utf8               Lcom/fasterxml/jackson/core/io/NumberOutput;
  #101 = Utf8               outputInt
  #102 = Utf8               (I[CI)I
  #103 = Utf8               thousands
  #104 = Utf8               v
  #105 = Utf8               b
  #106 = Utf8               [C
  #107 = Utf8               off
  #108 = Utf8               newValue
  #109 = Utf8               ones
  #110 = Utf8               StackMapTable
  #111 = Utf8               (I[BI)I
  #112 = Utf8               [B
  #113 = Utf8               outputLong
  #114 = Utf8               (J[CI)I
  #115 = Utf8               hi
  #116 = Utf8               upper
  #117 = Utf8               (J[BI)I
  #118 = Utf8               toString
  #119 = Utf8               (I)Ljava/lang/String;
  #120 = Utf8               v2
  #121 = Utf8               (J)Ljava/lang/String;
  #122 = Utf8               (D)Ljava/lang/String;
  #123 = Utf8               D
  #124 = Utf8               (F)Ljava/lang/String;
  #125 = Utf8               F
  #126 = Utf8               notFinite
  #127 = Utf8               (D)Z
  #128 = Utf8               value
  #129 = Utf8               (F)Z
  #130 = Utf8               _outputUptoBillion
  #131 = Utf8               millions
  #132 = Utf8               enc
  #133 = Utf8               _outputFullBillion
  #134 = Utf8               _outputUptoMillion
  #135 = Utf8               ([CIII)I
  #136 = Utf8               ([BIII)I
  #137 = Utf8               _leading3
  #138 = Utf8               t
  #139 = Utf8               _full3
  #140 = Utf8               _outputSmallestL
  #141 = Utf8               ([CI)I
  #142 = Utf8               len
  #143 = Utf8               ([BI)I
  #144 = Utf8               i
  #145 = Utf8               _outputSmallestI
  #146 = Utf8               <clinit>
  #147 = Utf8               i3
  #148 = Utf8               i2
  #149 = Utf8               i1
  #150 = Utf8               fullIx
  #151 = Utf8               SourceFile
  #152 = Utf8               NumberOutput.java
  #153 = NameAndType        #94:#95       // "<init>":()V
  #154 = Utf8               java/lang/Integer
  #155 = NameAndType        #145:#141     // _outputSmallestI:([CI)I
  #156 = NameAndType        #79:#80       // MILLION:I
  #157 = NameAndType        #137:#102     // _leading3:(I[CI)I
  #158 = NameAndType        #139:#102     // _full3:(I[CI)I
  #159 = NameAndType        #81:#80       // BILLION:I
  #160 = NameAndType        #133:#102     // _outputFullBillion:(I[CI)I
  #161 = NameAndType        #145:#143     // _outputSmallestI:([BI)I
  #162 = NameAndType        #137:#111     // _leading3:(I[BI)I
  #163 = NameAndType        #139:#111     // _full3:(I[BI)I
  #164 = NameAndType        #133:#111     // _outputFullBillion:(I[BI)I
  #165 = NameAndType        #84:#83       // MIN_INT_AS_LONG:J
  #166 = NameAndType        #101:#102     // outputInt:(I[CI)I
  #167 = Utf8               java/lang/Long
  #168 = NameAndType        #140:#141     // _outputSmallestL:([CI)I
  #169 = NameAndType        #85:#83       // MAX_INT_AS_LONG:J
  #170 = NameAndType        #82:#83       // BILLION_L:J
  #171 = NameAndType        #130:#102     // _outputUptoBillion:(I[CI)I
  #172 = NameAndType        #101:#111     // outputInt:(I[BI)I
  #173 = NameAndType        #140:#143     // _outputSmallestL:([BI)I
  #174 = NameAndType        #130:#111     // _outputUptoBillion:(I[BI)I
  #175 = NameAndType        #91:#92       // sSmallIntStrs:[Ljava/lang/String;
  #176 = NameAndType        #93:#92       // sSmallIntStrs2:[Ljava/lang/String;
  #177 = NameAndType        #118:#119     // toString:(I)Ljava/lang/String;
  #178 = NameAndType        #118:#121     // toString:(J)Ljava/lang/String;
  #179 = Class              #221          // java/lang/Double
  #180 = NameAndType        #118:#122     // toString:(D)Ljava/lang/String;
  #181 = Class              #222          // java/lang/Float
  #182 = NameAndType        #118:#124     // toString:(F)Ljava/lang/String;
  #183 = NameAndType        #223:#127     // isNaN:(D)Z
  #184 = NameAndType        #224:#127     // isInfinite:(D)Z
  #185 = NameAndType        #223:#129     // isNaN:(F)Z
  #186 = NameAndType        #224:#129     // isInfinite:(F)Z
  #187 = NameAndType        #134:#135     // _outputUptoMillion:([CIII)I
  #188 = NameAndType        #89:#90       // TRIPLET_TO_CHARS:[I
  #189 = NameAndType        #134:#136     // _outputUptoMillion:([BIII)I
  #190 = NameAndType        #88:#87       // SMALLEST_LONG:Ljava/lang/String;
  #191 = NameAndType        #225:#226     // length:()I
  #192 = NameAndType        #227:#228     // getChars:(II[CI)V
  #193 = NameAndType        #229:#230     // charAt:(I)C
  #194 = NameAndType        #86:#87       // SMALLEST_INT:Ljava/lang/String;
  #195 = NameAndType        #231:#119     // valueOf:(I)Ljava/lang/String;
  #196 = NameAndType        #231:#121     // valueOf:(J)Ljava/lang/String;
  #197 = Utf8               java/lang/String
  #198 = Utf8               0
  #199 = Utf8               1
  #200 = Utf8               2
  #201 = Utf8               3
  #202 = Utf8               4
  #203 = Utf8               5
  #204 = Utf8               6
  #205 = Utf8               7
  #206 = Utf8               8
  #207 = Utf8               9
  #208 = Utf8               10
  #209 = Utf8               -1
  #210 = Utf8               -2
  #211 = Utf8               -3
  #212 = Utf8               -4
  #213 = Utf8               -5
  #214 = Utf8               -6
  #215 = Utf8               -7
  #216 = Utf8               -8
  #217 = Utf8               -9
  #218 = Utf8               -10
  #219 = Utf8               com/fasterxml/jackson/core/io/NumberOutput
  #220 = Utf8               java/lang/Object
  #221 = Utf8               java/lang/Double
  #222 = Utf8               java/lang/Float
  #223 = Utf8               isNaN
  #224 = Utf8               isInfinite
  #225 = Utf8               length
  #226 = Utf8               ()I
  #227 = Utf8               getChars
  #228 = Utf8               (II[CI)V
  #229 = Utf8               charAt
  #230 = Utf8               (I)C
  #231 = Utf8               valueOf
{
  private static int MILLION;
    descriptor: I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static int BILLION;
    descriptor: I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static long BILLION_L;
    descriptor: J
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static long MIN_INT_AS_LONG;
    descriptor: J
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static long MAX_INT_AS_LONG;
    descriptor: J
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  static final java.lang.String SMALLEST_INT;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  static final java.lang.String SMALLEST_LONG;
    descriptor: Ljava/lang/String;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  private static final int[] TRIPLET_TO_CHARS;
    descriptor: [I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.lang.String[] sSmallIntStrs;
    descriptor: [Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.lang.String[] sSmallIntStrs2;
    descriptor: [Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public com.fasterxml.jackson.core.io.NumberOutput();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/io/NumberOutput;

  public static int outputInt(int, char[], int);
    descriptor: (I[CI)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: iload_0
         1: ifge          27
         4: iload_0
         5: ldc           #3                  // int -2147483648
         7: if_icmpne     16
        10: aload_1
        11: iload_2
        12: invokestatic  #4                  // Method _outputSmallestI:([CI)I
        15: ireturn
        16: aload_1
        17: iload_2
        18: iinc          2, 1
        21: bipush        45
        23: castore
        24: iload_0
        25: ineg
        26: istore_0
        27: iload_0
        28: getstatic     #5                  // Field MILLION:I
        31: if_icmpge     96
        34: iload_0
        35: sipush        1000
        38: if_icmpge     66
        41: iload_0
        42: bipush        10
        44: if_icmpge     59
        47: aload_1
        48: iload_2
        49: bipush        48
        51: iload_0
        52: iadd
        53: i2c
        54: castore
        55: iload_2
        56: iconst_1
        57: iadd
        58: ireturn
        59: iload_0
        60: aload_1
        61: iload_2
        62: invokestatic  #6                  // Method _leading3:(I[CI)I
        65: ireturn
        66: iload_0
        67: sipush        1000
        70: idiv
        71: istore_3
        72: iload_0
        73: iload_3
        74: sipush        1000
        77: imul
        78: isub
        79: istore_0
        80: iload_3
        81: aload_1
        82: iload_2
        83: invokestatic  #6                  // Method _leading3:(I[CI)I
        86: istore_2
        87: iload_0
        88: aload_1
        89: iload_2
        90: invokestatic  #7                  // Method _full3:(I[CI)I
        93: istore_2
        94: iload_2
        95: ireturn
        96: iload_0
        97: getstatic     #8                  // Field BILLION:I
       100: if_icmplt     148
       103: iload_0
       104: getstatic     #8                  // Field BILLION:I
       107: isub
       108: istore_0
       109: iload_0
       110: getstatic     #8                  // Field BILLION:I
       113: if_icmplt     133
       116: iload_0
       117: getstatic     #8                  // Field BILLION:I
       120: isub
       121: istore_0
       122: aload_1
       123: iload_2
       124: iinc          2, 1
       127: bipush        50
       129: castore
       130: goto          141
       133: aload_1
       134: iload_2
       135: iinc          2, 1
       138: bipush        49
       140: castore
       141: iload_0
       142: aload_1
       143: iload_2
       144: invokestatic  #9                  // Method _outputFullBillion:(I[CI)I
       147: ireturn
       148: iload_0
       149: sipush        1000
       152: idiv
       153: istore_3
       154: iload_0
       155: iload_3
       156: sipush        1000
       159: imul
       160: isub
       161: istore        4
       163: iload_3
       164: istore_0
       165: iload_3
       166: sipush        1000
       169: idiv
       170: istore_3
       171: iload_0
       172: iload_3
       173: sipush        1000
       176: imul
       177: isub
       178: istore        5
       180: iload_3
       181: aload_1
       182: iload_2
       183: invokestatic  #6                  // Method _leading3:(I[CI)I
       186: istore_2
       187: iload         5
       189: aload_1
       190: iload_2
       191: invokestatic  #7                  // Method _full3:(I[CI)I
       194: istore_2
       195: iload         4
       197: aload_1
       198: iload_2
       199: invokestatic  #7                  // Method _full3:(I[CI)I
       202: ireturn
      LineNumberTable:
        line 67: 0
        line 68: 4
        line 71: 10
        line 73: 16
        line 74: 24
        line 77: 27
        line 78: 34
        line 79: 41
        line 80: 47
        line 81: 55
        line 83: 59
        line 85: 66
        line 86: 72
        line 87: 80
        line 88: 87
        line 89: 94
        line 97: 96
        line 98: 103
        line 99: 109
        line 100: 116
        line 101: 122
        line 103: 133
        line 105: 141
        line 107: 148
        line 108: 154
        line 109: 163
        line 110: 165
        line 111: 171
        line 113: 180
        line 114: 187
        line 115: 195
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           72      24     3 thousands   I
            0     203     0     v   I
            0     203     1     b   [C
            0     203     2   off   I
          154      49     3 newValue   I
          163      40     4  ones   I
          180      23     5 thousands   I
      StackMapTable: number_of_entries = 8
        frame_type = 16 /* same */
        frame_type = 10 /* same */
        frame_type = 31 /* same */
        frame_type = 6 /* same */
        frame_type = 29 /* same */
        frame_type = 36 /* same */
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static int outputInt(int, byte[], int);
    descriptor: (I[BI)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: iload_0
         1: ifge          27
         4: iload_0
         5: ldc           #3                  // int -2147483648
         7: if_icmpne     16
        10: aload_1
        11: iload_2
        12: invokestatic  #10                 // Method _outputSmallestI:([BI)I
        15: ireturn
        16: aload_1
        17: iload_2
        18: iinc          2, 1
        21: bipush        45
        23: bastore
        24: iload_0
        25: ineg
        26: istore_0
        27: iload_0
        28: getstatic     #5                  // Field MILLION:I
        31: if_icmpge     101
        34: iload_0
        35: sipush        1000
        38: if_icmpge     71
        41: iload_0
        42: bipush        10
        44: if_icmpge     61
        47: aload_1
        48: iload_2
        49: iinc          2, 1
        52: bipush        48
        54: iload_0
        55: iadd
        56: i2b
        57: bastore
        58: goto          99
        61: iload_0
        62: aload_1
        63: iload_2
        64: invokestatic  #11                 // Method _leading3:(I[BI)I
        67: istore_2
        68: goto          99
        71: iload_0
        72: sipush        1000
        75: idiv
        76: istore_3
        77: iload_0
        78: iload_3
        79: sipush        1000
        82: imul
        83: isub
        84: istore_0
        85: iload_3
        86: aload_1
        87: iload_2
        88: invokestatic  #11                 // Method _leading3:(I[BI)I
        91: istore_2
        92: iload_0
        93: aload_1
        94: iload_2
        95: invokestatic  #12                 // Method _full3:(I[BI)I
        98: istore_2
        99: iload_2
       100: ireturn
       101: iload_0
       102: getstatic     #8                  // Field BILLION:I
       105: if_icmplt     153
       108: iload_0
       109: getstatic     #8                  // Field BILLION:I
       112: isub
       113: istore_0
       114: iload_0
       115: getstatic     #8                  // Field BILLION:I
       118: if_icmplt     138
       121: iload_0
       122: getstatic     #8                  // Field BILLION:I
       125: isub
       126: istore_0
       127: aload_1
       128: iload_2
       129: iinc          2, 1
       132: bipush        50
       134: bastore
       135: goto          146
       138: aload_1
       139: iload_2
       140: iinc          2, 1
       143: bipush        49
       145: bastore
       146: iload_0
       147: aload_1
       148: iload_2
       149: invokestatic  #13                 // Method _outputFullBillion:(I[BI)I
       152: ireturn
       153: iload_0
       154: sipush        1000
       157: idiv
       158: istore_3
       159: iload_0
       160: iload_3
       161: sipush        1000
       164: imul
       165: isub
       166: istore        4
       168: iload_3
       169: istore_0
       170: iload_3
       171: sipush        1000
       174: idiv
       175: istore_3
       176: iload_0
       177: iload_3
       178: sipush        1000
       181: imul
       182: isub
       183: istore        5
       185: iload_3
       186: aload_1
       187: iload_2
       188: invokestatic  #11                 // Method _leading3:(I[BI)I
       191: istore_2
       192: iload         5
       194: aload_1
       195: iload_2
       196: invokestatic  #12                 // Method _full3:(I[BI)I
       199: istore_2
       200: iload         4
       202: aload_1
       203: iload_2
       204: invokestatic  #12                 // Method _full3:(I[BI)I
       207: ireturn
      LineNumberTable:
        line 120: 0
        line 121: 4
        line 122: 10
        line 124: 16
        line 125: 24
        line 128: 27
        line 129: 34
        line 130: 41
        line 131: 47
        line 133: 61
        line 136: 71
        line 137: 77
        line 138: 85
        line 139: 92
        line 141: 99
        line 143: 101
        line 144: 108
        line 145: 114
        line 146: 121
        line 147: 127
        line 149: 138
        line 151: 146
        line 153: 153
        line 154: 159
        line 155: 168
        line 156: 170
        line 157: 176
        line 158: 185
        line 159: 192
        line 160: 200
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           77      22     3 thousands   I
            0     208     0     v   I
            0     208     1     b   [B
            0     208     2   off   I
          159      49     3 newValue   I
          168      40     4  ones   I
          185      23     5 thousands   I
      StackMapTable: number_of_entries = 9
        frame_type = 16 /* same */
        frame_type = 10 /* same */
        frame_type = 33 /* same */
        frame_type = 9 /* same */
        frame_type = 27 /* same */
        frame_type = 1 /* same */
        frame_type = 36 /* same */
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static int outputLong(long, char[], int);
    descriptor: (J[CI)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=8, args_size=3
         0: lload_0
         1: lconst_0
         2: lcmp
         3: ifge          50
         6: lload_0
         7: getstatic     #14                 // Field MIN_INT_AS_LONG:J
        10: lcmp
        11: ifle          22
        14: lload_0
        15: l2i
        16: aload_2
        17: iload_3
        18: invokestatic  #15                 // Method outputInt:(I[CI)I
        21: ireturn
        22: lload_0
        23: ldc2_w        #17                 // long -9223372036854775808l
        26: lcmp
        27: ifne          36
        30: aload_2
        31: iload_3
        32: invokestatic  #19                 // Method _outputSmallestL:([CI)I
        35: ireturn
        36: aload_2
        37: iload_3
        38: iinc          3, 1
        41: bipush        45
        43: castore
        44: lload_0
        45: lneg
        46: lstore_0
        47: goto          66
        50: lload_0
        51: getstatic     #20                 // Field MAX_INT_AS_LONG:J
        54: lcmp
        55: ifgt          66
        58: lload_0
        59: l2i
        60: aload_2
        61: iload_3
        62: invokestatic  #15                 // Method outputInt:(I[CI)I
        65: ireturn
        66: lload_0
        67: getstatic     #21                 // Field BILLION_L:J
        70: ldiv
        71: lstore        4
        73: lload_0
        74: lload         4
        76: getstatic     #21                 // Field BILLION_L:J
        79: lmul
        80: lsub
        81: lstore_0
        82: lload         4
        84: getstatic     #21                 // Field BILLION_L:J
        87: lcmp
        88: ifge          103
        91: lload         4
        93: l2i
        94: aload_2
        95: iload_3
        96: invokestatic  #22                 // Method _outputUptoBillion:(I[CI)I
        99: istore_3
       100: goto          140
       103: lload         4
       105: getstatic     #21                 // Field BILLION_L:J
       108: ldiv
       109: lstore        6
       111: lload         4
       113: lload         6
       115: getstatic     #21                 // Field BILLION_L:J
       118: lmul
       119: lsub
       120: lstore        4
       122: lload         6
       124: l2i
       125: aload_2
       126: iload_3
       127: invokestatic  #6                  // Method _leading3:(I[CI)I
       130: istore_3
       131: lload         4
       133: l2i
       134: aload_2
       135: iload_3
       136: invokestatic  #9                  // Method _outputFullBillion:(I[CI)I
       139: istore_3
       140: lload_0
       141: l2i
       142: aload_2
       143: iload_3
       144: invokestatic  #9                  // Method _outputFullBillion:(I[CI)I
       147: ireturn
      LineNumberTable:
        line 179: 0
        line 180: 6
        line 181: 14
        line 183: 22
        line 184: 30
        line 186: 36
        line 187: 44
        line 189: 50
        line 190: 58
        line 195: 66
        line 196: 73
        line 199: 82
        line 200: 91
        line 203: 103
        line 204: 111
        line 205: 122
        line 206: 131
        line 208: 140
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          111      29     6    hi   J
            0     148     0     v   J
            0     148     2     b   [C
            0     148     3   off   I
           73      75     4 upper   J
      StackMapTable: number_of_entries = 6
        frame_type = 22 /* same */
        frame_type = 13 /* same */
        frame_type = 13 /* same */
        frame_type = 15 /* same */
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ long ]
        frame_type = 36 /* same */

  public static int outputLong(long, byte[], int);
    descriptor: (J[BI)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=8, args_size=3
         0: lload_0
         1: lconst_0
         2: lcmp
         3: ifge          50
         6: lload_0
         7: getstatic     #14                 // Field MIN_INT_AS_LONG:J
        10: lcmp
        11: ifle          22
        14: lload_0
        15: l2i
        16: aload_2
        17: iload_3
        18: invokestatic  #23                 // Method outputInt:(I[BI)I
        21: ireturn
        22: lload_0
        23: ldc2_w        #17                 // long -9223372036854775808l
        26: lcmp
        27: ifne          36
        30: aload_2
        31: iload_3
        32: invokestatic  #24                 // Method _outputSmallestL:([BI)I
        35: ireturn
        36: aload_2
        37: iload_3
        38: iinc          3, 1
        41: bipush        45
        43: bastore
        44: lload_0
        45: lneg
        46: lstore_0
        47: goto          66
        50: lload_0
        51: getstatic     #20                 // Field MAX_INT_AS_LONG:J
        54: lcmp
        55: ifgt          66
        58: lload_0
        59: l2i
        60: aload_2
        61: iload_3
        62: invokestatic  #23                 // Method outputInt:(I[BI)I
        65: ireturn
        66: lload_0
        67: getstatic     #21                 // Field BILLION_L:J
        70: ldiv
        71: lstore        4
        73: lload_0
        74: lload         4
        76: getstatic     #21                 // Field BILLION_L:J
        79: lmul
        80: lsub
        81: lstore_0
        82: lload         4
        84: getstatic     #21                 // Field BILLION_L:J
        87: lcmp
        88: ifge          103
        91: lload         4
        93: l2i
        94: aload_2
        95: iload_3
        96: invokestatic  #25                 // Method _outputUptoBillion:(I[BI)I
        99: istore_3
       100: goto          140
       103: lload         4
       105: getstatic     #21                 // Field BILLION_L:J
       108: ldiv
       109: lstore        6
       111: lload         4
       113: lload         6
       115: getstatic     #21                 // Field BILLION_L:J
       118: lmul
       119: lsub
       120: lstore        4
       122: lload         6
       124: l2i
       125: aload_2
       126: iload_3
       127: invokestatic  #11                 // Method _leading3:(I[BI)I
       130: istore_3
       131: lload         4
       133: l2i
       134: aload_2
       135: iload_3
       136: invokestatic  #13                 // Method _outputFullBillion:(I[BI)I
       139: istore_3
       140: lload_0
       141: l2i
       142: aload_2
       143: iload_3
       144: invokestatic  #13                 // Method _outputFullBillion:(I[BI)I
       147: ireturn
      LineNumberTable:
        line 213: 0
        line 214: 6
        line 215: 14
        line 217: 22
        line 218: 30
        line 220: 36
        line 221: 44
        line 223: 50
        line 224: 58
        line 229: 66
        line 230: 73
        line 233: 82
        line 234: 91
        line 237: 103
        line 238: 111
        line 239: 122
        line 240: 131
        line 242: 140
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          111      29     6    hi   J
            0     148     0     v   J
            0     148     2     b   [B
            0     148     3   off   I
           73      75     4 upper   J
      StackMapTable: number_of_entries = 6
        frame_type = 22 /* same */
        frame_type = 13 /* same */
        frame_type = 13 /* same */
        frame_type = 15 /* same */
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ long ]
        frame_type = 36 /* same */

  public static java.lang.String toString(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: iload_0
         1: getstatic     #26                 // Field sSmallIntStrs:[Ljava/lang/String;
         4: arraylength
         5: if_icmpge     37
         8: iload_0
         9: iflt          18
        12: getstatic     #26                 // Field sSmallIntStrs:[Ljava/lang/String;
        15: iload_0
        16: aaload
        17: areturn
        18: iload_0
        19: ineg
        20: iconst_1
        21: isub
        22: istore_1
        23: iload_1
        24: getstatic     #27                 // Field sSmallIntStrs2:[Ljava/lang/String;
        27: arraylength
        28: if_icmpge     37
        31: getstatic     #27                 // Field sSmallIntStrs2:[Ljava/lang/String;
        34: iload_1
        35: aaload
        36: areturn
        37: iload_0
        38: invokestatic  #28                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
        41: areturn
      LineNumberTable:
        line 257: 0
        line 258: 8
        line 259: 12
        line 261: 18
        line 262: 23
        line 263: 31
        line 266: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      14     1    v2   I
            0      42     0     v   I
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 18 /* same */

  public static java.lang.String toString(long);
    descriptor: (J)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: lload_0
         1: ldc2_w        #29                 // long 2147483647l
         4: lcmp
         5: ifgt          22
         8: lload_0
         9: ldc2_w        #31                 // long -2147483648l
        12: lcmp
        13: iflt          22
        16: lload_0
        17: l2i
        18: invokestatic  #33                 // Method toString:(I)Ljava/lang/String;
        21: areturn
        22: lload_0
        23: invokestatic  #34                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 270: 0
        line 271: 16
        line 273: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0     v   J
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */

  public static java.lang.String toString(double);
    descriptor: (D)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: dload_0
         1: invokestatic  #35                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     v   D

  public static java.lang.String toString(float);
    descriptor: (F)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: fload_0
         1: invokestatic  #36                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     v   F

  public static boolean notFinite(double);
    descriptor: (D)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: dload_0
         1: invokestatic  #37                 // Method java/lang/Double.isNaN:(D)Z
         4: ifne          14
         7: dload_0
         8: invokestatic  #38                 // Method java/lang/Double.isInfinite:(D)Z
        11: ifeq          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: ireturn
      LineNumberTable:
        line 303: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 value   D
      StackMapTable: number_of_entries = 3
        frame_type = 14 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static boolean notFinite(float);
    descriptor: (F)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: fload_0
         1: invokestatic  #39                 // Method java/lang/Float.isNaN:(F)Z
         4: ifne          14
         7: fload_0
         8: invokestatic  #40                 // Method java/lang/Float.isInfinite:(F)Z
        11: ifeq          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: ireturn
      LineNumberTable:
        line 318: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 value   F
      StackMapTable: number_of_entries = 3
        frame_type = 14 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  private static int _outputUptoBillion(int, char[], int);
    descriptor: (I[CI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=3
         0: iload_0
         1: getstatic     #5                  // Field MILLION:I
         4: if_icmpge     45
         7: iload_0
         8: sipush        1000
        11: if_icmpge     21
        14: iload_0
        15: aload_1
        16: iload_2
        17: invokestatic  #6                  // Method _leading3:(I[CI)I
        20: ireturn
        21: iload_0
        22: sipush        1000
        25: idiv
        26: istore_3
        27: iload_0
        28: iload_3
        29: sipush        1000
        32: imul
        33: isub
        34: istore        4
        36: aload_1
        37: iload_2
        38: iload_3
        39: iload         4
        41: invokestatic  #41                 // Method _outputUptoMillion:([CIII)I
        44: ireturn
        45: iload_0
        46: sipush        1000
        49: idiv
        50: istore_3
        51: iload_0
        52: iload_3
        53: sipush        1000
        56: imul
        57: isub
        58: istore        4
        60: iload_3
        61: sipush        1000
        64: idiv
        65: istore        5
        67: iload_3
        68: iload         5
        70: sipush        1000
        73: imul
        74: isub
        75: istore_3
        76: iload         5
        78: aload_1
        79: iload_2
        80: invokestatic  #6                  // Method _leading3:(I[CI)I
        83: istore_2
        84: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        87: iload_3
        88: iaload
        89: istore        6
        91: aload_1
        92: iload_2
        93: iinc          2, 1
        96: iload         6
        98: bipush        16
       100: ishr
       101: i2c
       102: castore
       103: aload_1
       104: iload_2
       105: iinc          2, 1
       108: iload         6
       110: bipush        8
       112: ishr
       113: bipush        127
       115: iand
       116: i2c
       117: castore
       118: aload_1
       119: iload_2
       120: iinc          2, 1
       123: iload         6
       125: bipush        127
       127: iand
       128: i2c
       129: castore
       130: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
       133: iload         4
       135: iaload
       136: istore        6
       138: aload_1
       139: iload_2
       140: iinc          2, 1
       143: iload         6
       145: bipush        16
       147: ishr
       148: i2c
       149: castore
       150: aload_1
       151: iload_2
       152: iinc          2, 1
       155: iload         6
       157: bipush        8
       159: ishr
       160: bipush        127
       162: iand
       163: i2c
       164: castore
       165: aload_1
       166: iload_2
       167: iinc          2, 1
       170: iload         6
       172: bipush        127
       174: iand
       175: i2c
       176: castore
       177: iload_2
       178: ireturn
      LineNumberTable:
        line 329: 0
        line 330: 7
        line 331: 14
        line 333: 21
        line 334: 27
        line 335: 36
        line 337: 45
        line 338: 51
        line 339: 60
        line 340: 67
        line 342: 76
        line 344: 84
        line 345: 91
        line 346: 103
        line 347: 118
        line 349: 130
        line 350: 138
        line 351: 150
        line 352: 165
        line 354: 177
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      18     3 thousands   I
           36       9     4  ones   I
            0     179     0     v   I
            0     179     1     b   [C
            0     179     2   off   I
           51     128     3 thousands   I
           60     119     4  ones   I
           67     112     5 millions   I
           91      88     6   enc   I
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 23 /* same */

  private static int _outputFullBillion(int, char[], int);
    descriptor: (I[CI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=3
         0: iload_0
         1: sipush        1000
         4: idiv
         5: istore_3
         6: iload_0
         7: iload_3
         8: sipush        1000
        11: imul
        12: isub
        13: istore        4
        15: iload_3
        16: sipush        1000
        19: idiv
        20: istore        5
        22: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        25: iload         5
        27: iaload
        28: istore        6
        30: aload_1
        31: iload_2
        32: iinc          2, 1
        35: iload         6
        37: bipush        16
        39: ishr
        40: i2c
        41: castore
        42: aload_1
        43: iload_2
        44: iinc          2, 1
        47: iload         6
        49: bipush        8
        51: ishr
        52: bipush        127
        54: iand
        55: i2c
        56: castore
        57: aload_1
        58: iload_2
        59: iinc          2, 1
        62: iload         6
        64: bipush        127
        66: iand
        67: i2c
        68: castore
        69: iload_3
        70: iload         5
        72: sipush        1000
        75: imul
        76: isub
        77: istore_3
        78: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        81: iload_3
        82: iaload
        83: istore        6
        85: aload_1
        86: iload_2
        87: iinc          2, 1
        90: iload         6
        92: bipush        16
        94: ishr
        95: i2c
        96: castore
        97: aload_1
        98: iload_2
        99: iinc          2, 1
       102: iload         6
       104: bipush        8
       106: ishr
       107: bipush        127
       109: iand
       110: i2c
       111: castore
       112: aload_1
       113: iload_2
       114: iinc          2, 1
       117: iload         6
       119: bipush        127
       121: iand
       122: i2c
       123: castore
       124: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
       127: iload         4
       129: iaload
       130: istore        6
       132: aload_1
       133: iload_2
       134: iinc          2, 1
       137: iload         6
       139: bipush        16
       141: ishr
       142: i2c
       143: castore
       144: aload_1
       145: iload_2
       146: iinc          2, 1
       149: iload         6
       151: bipush        8
       153: ishr
       154: bipush        127
       156: iand
       157: i2c
       158: castore
       159: aload_1
       160: iload_2
       161: iinc          2, 1
       164: iload         6
       166: bipush        127
       168: iand
       169: i2c
       170: castore
       171: iload_2
       172: ireturn
      LineNumberTable:
        line 359: 0
        line 360: 6
        line 361: 15
        line 363: 22
        line 364: 30
        line 365: 42
        line 366: 57
        line 368: 69
        line 369: 78
        line 370: 85
        line 371: 97
        line 372: 112
        line 374: 124
        line 375: 132
        line 376: 144
        line 377: 159
        line 379: 171
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     173     0     v   I
            0     173     1     b   [C
            0     173     2   off   I
            6     167     3 thousands   I
           15     158     4  ones   I
           22     151     5 millions   I
           30     143     6   enc   I

  private static int _outputUptoBillion(int, byte[], int);
    descriptor: (I[BI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=3
         0: iload_0
         1: getstatic     #5                  // Field MILLION:I
         4: if_icmpge     45
         7: iload_0
         8: sipush        1000
        11: if_icmpge     21
        14: iload_0
        15: aload_1
        16: iload_2
        17: invokestatic  #11                 // Method _leading3:(I[BI)I
        20: ireturn
        21: iload_0
        22: sipush        1000
        25: idiv
        26: istore_3
        27: iload_0
        28: iload_3
        29: sipush        1000
        32: imul
        33: isub
        34: istore        4
        36: aload_1
        37: iload_2
        38: iload_3
        39: iload         4
        41: invokestatic  #43                 // Method _outputUptoMillion:([BIII)I
        44: ireturn
        45: iload_0
        46: sipush        1000
        49: idiv
        50: istore_3
        51: iload_0
        52: iload_3
        53: sipush        1000
        56: imul
        57: isub
        58: istore        4
        60: iload_3
        61: sipush        1000
        64: idiv
        65: istore        5
        67: iload_3
        68: iload         5
        70: sipush        1000
        73: imul
        74: isub
        75: istore_3
        76: iload         5
        78: aload_1
        79: iload_2
        80: invokestatic  #11                 // Method _leading3:(I[BI)I
        83: istore_2
        84: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        87: iload_3
        88: iaload
        89: istore        6
        91: aload_1
        92: iload_2
        93: iinc          2, 1
        96: iload         6
        98: bipush        16
       100: ishr
       101: i2b
       102: bastore
       103: aload_1
       104: iload_2
       105: iinc          2, 1
       108: iload         6
       110: bipush        8
       112: ishr
       113: i2b
       114: bastore
       115: aload_1
       116: iload_2
       117: iinc          2, 1
       120: iload         6
       122: i2b
       123: bastore
       124: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
       127: iload         4
       129: iaload
       130: istore        6
       132: aload_1
       133: iload_2
       134: iinc          2, 1
       137: iload         6
       139: bipush        16
       141: ishr
       142: i2b
       143: bastore
       144: aload_1
       145: iload_2
       146: iinc          2, 1
       149: iload         6
       151: bipush        8
       153: ishr
       154: i2b
       155: bastore
       156: aload_1
       157: iload_2
       158: iinc          2, 1
       161: iload         6
       163: i2b
       164: bastore
       165: iload_2
       166: ireturn
      LineNumberTable:
        line 384: 0
        line 385: 7
        line 386: 14
        line 388: 21
        line 389: 27
        line 390: 36
        line 392: 45
        line 393: 51
        line 394: 60
        line 395: 67
        line 397: 76
        line 399: 84
        line 400: 91
        line 401: 103
        line 402: 115
        line 404: 124
        line 405: 132
        line 406: 144
        line 407: 156
        line 409: 165
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      18     3 thousands   I
           36       9     4  ones   I
            0     167     0     v   I
            0     167     1     b   [B
            0     167     2   off   I
           51     116     3 thousands   I
           60     107     4  ones   I
           67     100     5 millions   I
           91      76     6   enc   I
      StackMapTable: number_of_entries = 2
        frame_type = 21 /* same */
        frame_type = 23 /* same */

  private static int _outputFullBillion(int, byte[], int);
    descriptor: (I[BI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=7, args_size=3
         0: iload_0
         1: sipush        1000
         4: idiv
         5: istore_3
         6: iload_0
         7: iload_3
         8: sipush        1000
        11: imul
        12: isub
        13: istore        4
        15: iload_3
        16: sipush        1000
        19: idiv
        20: istore        5
        22: iload_3
        23: iload         5
        25: sipush        1000
        28: imul
        29: isub
        30: istore_3
        31: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        34: iload         5
        36: iaload
        37: istore        6
        39: aload_1
        40: iload_2
        41: iinc          2, 1
        44: iload         6
        46: bipush        16
        48: ishr
        49: i2b
        50: bastore
        51: aload_1
        52: iload_2
        53: iinc          2, 1
        56: iload         6
        58: bipush        8
        60: ishr
        61: i2b
        62: bastore
        63: aload_1
        64: iload_2
        65: iinc          2, 1
        68: iload         6
        70: i2b
        71: bastore
        72: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        75: iload_3
        76: iaload
        77: istore        6
        79: aload_1
        80: iload_2
        81: iinc          2, 1
        84: iload         6
        86: bipush        16
        88: ishr
        89: i2b
        90: bastore
        91: aload_1
        92: iload_2
        93: iinc          2, 1
        96: iload         6
        98: bipush        8
       100: ishr
       101: i2b
       102: bastore
       103: aload_1
       104: iload_2
       105: iinc          2, 1
       108: iload         6
       110: i2b
       111: bastore
       112: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
       115: iload         4
       117: iaload
       118: istore        6
       120: aload_1
       121: iload_2
       122: iinc          2, 1
       125: iload         6
       127: bipush        16
       129: ishr
       130: i2b
       131: bastore
       132: aload_1
       133: iload_2
       134: iinc          2, 1
       137: iload         6
       139: bipush        8
       141: ishr
       142: i2b
       143: bastore
       144: aload_1
       145: iload_2
       146: iinc          2, 1
       149: iload         6
       151: i2b
       152: bastore
       153: iload_2
       154: ireturn
      LineNumberTable:
        line 414: 0
        line 415: 6
        line 416: 15
        line 417: 22
        line 419: 31
        line 420: 39
        line 421: 51
        line 422: 63
        line 424: 72
        line 425: 79
        line 426: 91
        line 427: 103
        line 429: 112
        line 430: 120
        line 431: 132
        line 432: 144
        line 434: 153
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     155     0     v   I
            0     155     1     b   [B
            0     155     2   off   I
            6     149     3 thousands   I
           15     140     4  ones   I
           22     133     5 millions   I
           39     116     6   enc   I

  private static int _outputUptoMillion(char[], int, int, int);
    descriptor: ([CIII)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=5, args_size=4
         0: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
         3: iload_2
         4: iaload
         5: istore        4
         7: iload_2
         8: bipush        9
        10: if_icmple     46
        13: iload_2
        14: bipush        99
        16: if_icmple     31
        19: aload_0
        20: iload_1
        21: iinc          1, 1
        24: iload         4
        26: bipush        16
        28: ishr
        29: i2c
        30: castore
        31: aload_0
        32: iload_1
        33: iinc          1, 1
        36: iload         4
        38: bipush        8
        40: ishr
        41: bipush        127
        43: iand
        44: i2c
        45: castore
        46: aload_0
        47: iload_1
        48: iinc          1, 1
        51: iload         4
        53: bipush        127
        55: iand
        56: i2c
        57: castore
        58: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        61: iload_3
        62: iaload
        63: istore        4
        65: aload_0
        66: iload_1
        67: iinc          1, 1
        70: iload         4
        72: bipush        16
        74: ishr
        75: i2c
        76: castore
        77: aload_0
        78: iload_1
        79: iinc          1, 1
        82: iload         4
        84: bipush        8
        86: ishr
        87: bipush        127
        89: iand
        90: i2c
        91: castore
        92: aload_0
        93: iload_1
        94: iinc          1, 1
        97: iload         4
        99: bipush        127
       101: iand
       102: i2c
       103: castore
       104: iload_1
       105: ireturn
      LineNumberTable:
        line 439: 0
        line 440: 7
        line 441: 13
        line 442: 19
        line 444: 31
        line 446: 46
        line 448: 58
        line 449: 65
        line 450: 77
        line 451: 92
        line 452: 104
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0     b   [C
            0     106     1   off   I
            0     106     2 thousands   I
            0     106     3  ones   I
            7      99     4   enc   I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 14 /* same */

  private static int _outputUptoMillion(byte[], int, int, int);
    descriptor: ([BIII)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=5, args_size=4
         0: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
         3: iload_2
         4: iaload
         5: istore        4
         7: iload_2
         8: bipush        9
        10: if_icmple     43
        13: iload_2
        14: bipush        99
        16: if_icmple     31
        19: aload_0
        20: iload_1
        21: iinc          1, 1
        24: iload         4
        26: bipush        16
        28: ishr
        29: i2b
        30: bastore
        31: aload_0
        32: iload_1
        33: iinc          1, 1
        36: iload         4
        38: bipush        8
        40: ishr
        41: i2b
        42: bastore
        43: aload_0
        44: iload_1
        45: iinc          1, 1
        48: iload         4
        50: i2b
        51: bastore
        52: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        55: iload_3
        56: iaload
        57: istore        4
        59: aload_0
        60: iload_1
        61: iinc          1, 1
        64: iload         4
        66: bipush        16
        68: ishr
        69: i2b
        70: bastore
        71: aload_0
        72: iload_1
        73: iinc          1, 1
        76: iload         4
        78: bipush        8
        80: ishr
        81: i2b
        82: bastore
        83: aload_0
        84: iload_1
        85: iinc          1, 1
        88: iload         4
        90: i2b
        91: bastore
        92: iload_1
        93: ireturn
      LineNumberTable:
        line 457: 0
        line 458: 7
        line 459: 13
        line 460: 19
        line 462: 31
        line 464: 43
        line 466: 52
        line 467: 59
        line 468: 71
        line 469: 83
        line 470: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0     b   [B
            0      94     1   off   I
            0      94     2 thousands   I
            0      94     3  ones   I
            7      87     4   enc   I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ int ]
        frame_type = 11 /* same */

  private static int _leading3(int, char[], int);
    descriptor: (I[CI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
         3: iload_0
         4: iaload
         5: istore_3
         6: iload_0
         7: bipush        9
         9: if_icmple     43
        12: iload_0
        13: bipush        99
        15: if_icmple     29
        18: aload_1
        19: iload_2
        20: iinc          2, 1
        23: iload_3
        24: bipush        16
        26: ishr
        27: i2c
        28: castore
        29: aload_1
        30: iload_2
        31: iinc          2, 1
        34: iload_3
        35: bipush        8
        37: ishr
        38: bipush        127
        40: iand
        41: i2c
        42: castore
        43: aload_1
        44: iload_2
        45: iinc          2, 1
        48: iload_3
        49: bipush        127
        51: iand
        52: i2c
        53: castore
        54: iload_2
        55: ireturn
      LineNumberTable:
        line 475: 0
        line 476: 6
        line 477: 12
        line 478: 18
        line 480: 29
        line 482: 43
        line 483: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      56     0     t   I
            0      56     1     b   [C
            0      56     2   off   I
            6      50     3   enc   I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ int ]
        frame_type = 13 /* same */

  private static int _leading3(int, byte[], int);
    descriptor: (I[BI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
         3: iload_0
         4: iaload
         5: istore_3
         6: iload_0
         7: bipush        9
         9: if_icmple     40
        12: iload_0
        13: bipush        99
        15: if_icmple     29
        18: aload_1
        19: iload_2
        20: iinc          2, 1
        23: iload_3
        24: bipush        16
        26: ishr
        27: i2b
        28: bastore
        29: aload_1
        30: iload_2
        31: iinc          2, 1
        34: iload_3
        35: bipush        8
        37: ishr
        38: i2b
        39: bastore
        40: aload_1
        41: iload_2
        42: iinc          2, 1
        45: iload_3
        46: i2b
        47: bastore
        48: iload_2
        49: ireturn
      LineNumberTable:
        line 488: 0
        line 489: 6
        line 490: 12
        line 491: 18
        line 493: 29
        line 495: 40
        line 496: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0     t   I
            0      50     1     b   [B
            0      50     2   off   I
            6      44     3   enc   I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ int ]
        frame_type = 10 /* same */

  private static int _full3(int, char[], int);
    descriptor: (I[CI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
         3: iload_0
         4: iaload
         5: istore_3
         6: aload_1
         7: iload_2
         8: iinc          2, 1
        11: iload_3
        12: bipush        16
        14: ishr
        15: i2c
        16: castore
        17: aload_1
        18: iload_2
        19: iinc          2, 1
        22: iload_3
        23: bipush        8
        25: ishr
        26: bipush        127
        28: iand
        29: i2c
        30: castore
        31: aload_1
        32: iload_2
        33: iinc          2, 1
        36: iload_3
        37: bipush        127
        39: iand
        40: i2c
        41: castore
        42: iload_2
        43: ireturn
      LineNumberTable:
        line 501: 0
        line 502: 6
        line 503: 17
        line 504: 31
        line 505: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0     t   I
            0      44     1     b   [C
            0      44     2   off   I
            6      38     3   enc   I

  private static int _full3(int, byte[], int);
    descriptor: (I[BI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=3
         0: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
         3: iload_0
         4: iaload
         5: istore_3
         6: aload_1
         7: iload_2
         8: iinc          2, 1
        11: iload_3
        12: bipush        16
        14: ishr
        15: i2b
        16: bastore
        17: aload_1
        18: iload_2
        19: iinc          2, 1
        22: iload_3
        23: bipush        8
        25: ishr
        26: i2b
        27: bastore
        28: aload_1
        29: iload_2
        30: iinc          2, 1
        33: iload_3
        34: i2b
        35: bastore
        36: iload_2
        37: ireturn
      LineNumberTable:
        line 510: 0
        line 511: 6
        line 512: 17
        line 513: 28
        line 514: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0     t   I
            0      38     1     b   [B
            0      38     2   off   I
            6      32     3   enc   I

  private static int _outputSmallestL(char[], int);
    descriptor: ([CI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #44                 // Field SMALLEST_LONG:Ljava/lang/String;
         3: invokevirtual #45                 // Method java/lang/String.length:()I
         6: istore_2
         7: getstatic     #44                 // Field SMALLEST_LONG:Ljava/lang/String;
        10: iconst_0
        11: iload_2
        12: aload_0
        13: iload_1
        14: invokevirtual #46                 // Method java/lang/String.getChars:(II[CI)V
        17: iload_1
        18: iload_2
        19: iadd
        20: ireturn
      LineNumberTable:
        line 521: 0
        line 522: 7
        line 523: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0     b   [C
            0      21     1   off   I
            7      14     2   len   I

  private static int _outputSmallestL(byte[], int);
    descriptor: ([BI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #44                 // Field SMALLEST_LONG:Ljava/lang/String;
         3: invokevirtual #45                 // Method java/lang/String.length:()I
         6: istore_2
         7: iconst_0
         8: istore_3
         9: iload_3
        10: iload_2
        11: if_icmpge     34
        14: aload_0
        15: iload_1
        16: iinc          1, 1
        19: getstatic     #44                 // Field SMALLEST_LONG:Ljava/lang/String;
        22: iload_3
        23: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
        26: i2b
        27: bastore
        28: iinc          3, 1
        31: goto          9
        34: iload_1
        35: ireturn
      LineNumberTable:
        line 528: 0
        line 529: 7
        line 530: 14
        line 529: 28
        line 532: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      25     3     i   I
            0      36     0     b   [B
            0      36     1   off   I
            7      29     2   len   I
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 9
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 24

  private static int _outputSmallestI(char[], int);
    descriptor: ([CI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #48                 // Field SMALLEST_INT:Ljava/lang/String;
         3: invokevirtual #45                 // Method java/lang/String.length:()I
         6: istore_2
         7: getstatic     #48                 // Field SMALLEST_INT:Ljava/lang/String;
        10: iconst_0
        11: iload_2
        12: aload_0
        13: iload_1
        14: invokevirtual #46                 // Method java/lang/String.getChars:(II[CI)V
        17: iload_1
        18: iload_2
        19: iadd
        20: ireturn
      LineNumberTable:
        line 537: 0
        line 538: 7
        line 539: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0     b   [C
            0      21     1   off   I
            7      14     2   len   I

  private static int _outputSmallestI(byte[], int);
    descriptor: ([BI)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: getstatic     #48                 // Field SMALLEST_INT:Ljava/lang/String;
         3: invokevirtual #45                 // Method java/lang/String.length:()I
         6: istore_2
         7: iconst_0
         8: istore_3
         9: iload_3
        10: iload_2
        11: if_icmpge     34
        14: aload_0
        15: iload_1
        16: iinc          1, 1
        19: getstatic     #48                 // Field SMALLEST_INT:Ljava/lang/String;
        22: iload_3
        23: invokevirtual #47                 // Method java/lang/String.charAt:(I)C
        26: i2b
        27: bastore
        28: iinc          3, 1
        31: goto          9
        34: iload_1
        35: ireturn
      LineNumberTable:
        line 544: 0
        line 545: 7
        line 546: 14
        line 545: 28
        line 548: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      25     3     i   I
            0      36     0     b   [B
            0      36     1   off   I
            7      29     2   len   I
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 9
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 24

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=4, locals=5, args_size=0
         0: ldc           #49                 // int 1000000
         2: putstatic     #5                  // Field MILLION:I
         5: ldc           #50                 // int 1000000000
         7: putstatic     #8                  // Field BILLION:I
        10: ldc2_w        #51                 // long 1000000000l
        13: putstatic     #21                 // Field BILLION_L:J
        16: ldc2_w        #31                 // long -2147483648l
        19: putstatic     #14                 // Field MIN_INT_AS_LONG:J
        22: ldc2_w        #29                 // long 2147483647l
        25: putstatic     #20                 // Field MAX_INT_AS_LONG:J
        28: ldc           #3                  // int -2147483648
        30: invokestatic  #53                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
        33: putstatic     #48                 // Field SMALLEST_INT:Ljava/lang/String;
        36: ldc2_w        #17                 // long -9223372036854775808l
        39: invokestatic  #54                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;
        42: putstatic     #44                 // Field SMALLEST_LONG:Ljava/lang/String;
        45: sipush        1000
        48: newarray       int
        50: putstatic     #42                 // Field TRIPLET_TO_CHARS:[I
        53: iconst_0
        54: istore_0
        55: iconst_0
        56: istore_1
        57: iload_1
        58: bipush        10
        60: if_icmpge     129
        63: iconst_0
        64: istore_2
        65: iload_2
        66: bipush        10
        68: if_icmpge     123
        71: iconst_0
        72: istore_3
        73: iload_3
        74: bipush        10
        76: if_icmpge     117
        79: iload_1
        80: bipush        48
        82: iadd
        83: bipush        16
        85: ishl
        86: iload_2
        87: bipush        48
        89: iadd
        90: bipush        8
        92: ishl
        93: ior
        94: iload_3
        95: bipush        48
        97: iadd
        98: ior
        99: istore        4
       101: getstatic     #42                 // Field TRIPLET_TO_CHARS:[I
       104: iload_0
       105: iinc          0, 1
       108: iload         4
       110: iastore
       111: iinc          3, 1
       114: goto          73
       117: iinc          2, 1
       120: goto          65
       123: iinc          1, 1
       126: goto          57
       129: bipush        11
       131: anewarray     #55                 // class java/lang/String
       134: dup
       135: iconst_0
       136: ldc           #56                 // String 0
       138: aastore
       139: dup
       140: iconst_1
       141: ldc           #57                 // String 1
       143: aastore
       144: dup
       145: iconst_2
       146: ldc           #58                 // String 2
       148: aastore
       149: dup
       150: iconst_3
       151: ldc           #59                 // String 3
       153: aastore
       154: dup
       155: iconst_4
       156: ldc           #60                 // String 4
       158: aastore
       159: dup
       160: iconst_5
       161: ldc           #61                 // String 5
       163: aastore
       164: dup
       165: bipush        6
       167: ldc           #62                 // String 6
       169: aastore
       170: dup
       171: bipush        7
       173: ldc           #63                 // String 7
       175: aastore
       176: dup
       177: bipush        8
       179: ldc           #64                 // String 8
       181: aastore
       182: dup
       183: bipush        9
       185: ldc           #65                 // String 9
       187: aastore
       188: dup
       189: bipush        10
       191: ldc           #66                 // String 10
       193: aastore
       194: putstatic     #26                 // Field sSmallIntStrs:[Ljava/lang/String;
       197: bipush        10
       199: anewarray     #55                 // class java/lang/String
       202: dup
       203: iconst_0
       204: ldc           #67                 // String -1
       206: aastore
       207: dup
       208: iconst_1
       209: ldc           #68                 // String -2
       211: aastore
       212: dup
       213: iconst_2
       214: ldc           #69                 // String -3
       216: aastore
       217: dup
       218: iconst_3
       219: ldc           #70                 // String -4
       221: aastore
       222: dup
       223: iconst_4
       224: ldc           #71                 // String -5
       226: aastore
       227: dup
       228: iconst_5
       229: ldc           #72                 // String -6
       231: aastore
       232: dup
       233: bipush        6
       235: ldc           #73                 // String -7
       237: aastore
       238: dup
       239: bipush        7
       241: ldc           #74                 // String -8
       243: aastore
       244: dup
       245: bipush        8
       247: ldc           #75                 // String -9
       249: aastore
       250: dup
       251: bipush        9
       253: ldc           #76                 // String -10
       255: aastore
       256: putstatic     #27                 // Field sSmallIntStrs2:[Ljava/lang/String;
       259: return
      LineNumberTable:
        line 5: 0
        line 6: 5
        line 7: 10
        line 9: 16
        line 10: 22
        line 12: 28
        line 13: 36
        line 21: 45
        line 26: 53
        line 27: 55
        line 28: 63
        line 29: 71
        line 30: 79
        line 33: 101
        line 29: 111
        line 28: 117
        line 27: 123
        line 39: 129
        line 42: 197
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          101      10     4   enc   I
           73      44     3    i3   I
           65      58     2    i2   I
           57      72     1    i1   I
           55      74     0 fullIx   I
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 57
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 7
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 7
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 43
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 249 /* chop */
          offset_delta = 5
}
SourceFile: "NumberOutput.java"
