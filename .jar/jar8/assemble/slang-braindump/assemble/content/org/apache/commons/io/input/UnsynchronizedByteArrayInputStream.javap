Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.class
  Last modified May 29, 2022; size 2704 bytes
  SHA-256 checksum 6914820523124996025c442f377af15a4e0d76e0cde82ef22f0595c3234d0f88
  Compiled from "UnsynchronizedByteArrayInputStream.java"
public class org.apache.commons.io.input.UnsynchronizedByteArrayInputStream extends java.io.InputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #12                         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream
  super_class: #18                        // java/io/InputStream
  interfaces: 0, fields: 5, methods: 11, attributes: 1
Constant pool:
   #1 = Methodref          #18.#64        // java/io/InputStream."<init>":()V
   #2 = Methodref          #65.#66        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
   #3 = Fieldref           #12.#67        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B
   #4 = Fieldref           #12.#68        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I
   #5 = Fieldref           #12.#69        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I
   #6 = Fieldref           #12.#70        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I
   #7 = Class              #71            // java/lang/IllegalArgumentException
   #8 = String             #72            // offset cannot be negative
   #9 = Methodref          #7.#73         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #10 = Methodref          #74.#75        // java/lang/Math.min:(II)I
  #11 = String             #76            // length cannot be negative
  #12 = Class              #77            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream
  #13 = Methodref          #12.#78        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I
  #14 = Class              #79            // java/lang/IndexOutOfBoundsException
  #15 = Methodref          #14.#64        // java/lang/IndexOutOfBoundsException."<init>":()V
  #16 = Methodref          #80.#81        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #17 = String             #82            // Skipping backward is not supported
  #18 = Class              #83            // java/io/InputStream
  #19 = Utf8               END_OF_STREAM
  #20 = Utf8               I
  #21 = Utf8               ConstantValue
  #22 = Integer            -1
  #23 = Utf8               data
  #24 = Utf8               [B
  #25 = Utf8               eod
  #26 = Utf8               offset
  #27 = Utf8               markedOffset
  #28 = Utf8               <init>
  #29 = Utf8               ([B)V
  #30 = Utf8               Code
  #31 = Utf8               LineNumberTable
  #32 = Utf8               LocalVariableTable
  #33 = Utf8               this
  #34 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
  #35 = Utf8               ([BI)V
  #36 = Utf8               StackMapTable
  #37 = Class              #77            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream
  #38 = Class              #24            // "[B"
  #39 = Utf8               ([BII)V
  #40 = Utf8               length
  #41 = Utf8               available
  #42 = Utf8               ()I
  #43 = Utf8               read
  #44 = Utf8               ([B)I
  #45 = Utf8               b
  #46 = Utf8               ([BII)I
  #47 = Utf8               off
  #48 = Utf8               len
  #49 = Utf8               actualLen
  #50 = Utf8               skip
  #51 = Utf8               (J)J
  #52 = Utf8               n
  #53 = Utf8               J
  #54 = Utf8               actualSkip
  #55 = Utf8               markSupported
  #56 = Utf8               ()Z
  #57 = Utf8               mark
  #58 = Utf8               (I)V
  #59 = Utf8               readlimit
  #60 = Utf8               reset
  #61 = Utf8               ()V
  #62 = Utf8               SourceFile
  #63 = Utf8               UnsynchronizedByteArrayInputStream.java
  #64 = NameAndType        #28:#61        // "<init>":()V
  #65 = Class              #84            // java/util/Objects
  #66 = NameAndType        #85:#86        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
  #67 = NameAndType        #23:#24        // data:[B
  #68 = NameAndType        #26:#20        // offset:I
  #69 = NameAndType        #25:#20        // eod:I
  #70 = NameAndType        #27:#20        // markedOffset:I
  #71 = Utf8               java/lang/IllegalArgumentException
  #72 = Utf8               offset cannot be negative
  #73 = NameAndType        #28:#87        // "<init>":(Ljava/lang/String;)V
  #74 = Class              #88            // java/lang/Math
  #75 = NameAndType        #89:#90        // min:(II)I
  #76 = Utf8               length cannot be negative
  #77 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream
  #78 = NameAndType        #43:#46        // read:([BII)I
  #79 = Utf8               java/lang/IndexOutOfBoundsException
  #80 = Class              #91            // java/lang/System
  #81 = NameAndType        #92:#93        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #82 = Utf8               Skipping backward is not supported
  #83 = Utf8               java/io/InputStream
  #84 = Utf8               java/util/Objects
  #85 = Utf8               requireNonNull
  #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #87 = Utf8               (Ljava/lang/String;)V
  #88 = Utf8               java/lang/Math
  #89 = Utf8               min
  #90 = Utf8               (II)I
  #91 = Utf8               java/lang/System
  #92 = Utf8               arraycopy
  #93 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
{
  public static final int END_OF_STREAM;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int -1

  private final byte[] data;
    descriptor: [B
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int eod;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private int offset;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int markedOffset;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[]);
    descriptor: ([B)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
         4: aload_1
         5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: aload_0
        10: aload_1
        11: putfield      #3                  // Field data:[B
        14: aload_0
        15: iconst_0
        16: putfield      #4                  // Field offset:I
        19: aload_0
        20: aload_1
        21: arraylength
        22: putfield      #5                  // Field eod:I
        25: aload_0
        26: aload_0
        27: getfield      #4                  // Field offset:I
        30: putfield      #6                  // Field markedOffset:I
        33: return
      LineNumberTable:
        line 67: 0
        line 68: 4
        line 69: 9
        line 70: 14
        line 71: 19
        line 72: 25
        line 73: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0      34     1  data   [B

  public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int);
    descriptor: ([BI)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
         4: aload_1
         5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: iload_2
        10: ifge          23
        13: new           #7                  // class java/lang/IllegalArgumentException
        16: dup
        17: ldc           #8                  // String offset cannot be negative
        19: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        22: athrow
        23: aload_0
        24: aload_1
        25: putfield      #3                  // Field data:[B
        28: aload_0
        29: iload_2
        30: aload_1
        31: arraylength
        32: ifle          40
        35: aload_1
        36: arraylength
        37: goto          41
        40: iload_2
        41: invokestatic  #10                 // Method java/lang/Math.min:(II)I
        44: putfield      #4                  // Field offset:I
        47: aload_0
        48: aload_1
        49: arraylength
        50: putfield      #5                  // Field eod:I
        53: aload_0
        54: aload_0
        55: getfield      #4                  // Field offset:I
        58: putfield      #6                  // Field markedOffset:I
        61: return
      LineNumberTable:
        line 83: 0
        line 84: 4
        line 85: 9
        line 86: 13
        line 88: 23
        line 89: 28
        line 90: 47
        line 91: 53
        line 92: 61
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      62     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0      62     1  data   [B
            0      62     2 offset   I
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, class "[B", int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, class "[B", int ]
          stack = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, class "[B", int ]
          stack = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, int, int ]

  public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int, int);
    descriptor: ([BII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
         4: aload_1
         5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         8: pop
         9: iload_2
        10: ifge          23
        13: new           #7                  // class java/lang/IllegalArgumentException
        16: dup
        17: ldc           #8                  // String offset cannot be negative
        19: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        22: athrow
        23: iload_3
        24: ifge          37
        27: new           #7                  // class java/lang/IllegalArgumentException
        30: dup
        31: ldc           #11                 // String length cannot be negative
        33: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        36: athrow
        37: aload_0
        38: aload_1
        39: putfield      #3                  // Field data:[B
        42: aload_0
        43: iload_2
        44: aload_1
        45: arraylength
        46: ifle          54
        49: aload_1
        50: arraylength
        51: goto          55
        54: iload_2
        55: invokestatic  #10                 // Method java/lang/Math.min:(II)I
        58: putfield      #4                  // Field offset:I
        61: aload_0
        62: aload_0
        63: getfield      #4                  // Field offset:I
        66: iload_3
        67: iadd
        68: aload_1
        69: arraylength
        70: invokestatic  #10                 // Method java/lang/Math.min:(II)I
        73: putfield      #5                  // Field eod:I
        76: aload_0
        77: aload_0
        78: getfield      #4                  // Field offset:I
        81: putfield      #6                  // Field markedOffset:I
        84: return
      LineNumberTable:
        line 104: 0
        line 105: 4
        line 106: 9
        line 107: 13
        line 109: 23
        line 110: 27
        line 112: 37
        line 113: 42
        line 114: 61
        line 115: 76
        line 116: 84
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0      85     1  data   [B
            0      85     2 offset   I
            0      85     3 length   I
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, class "[B", int, int ]
          stack = []
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, class "[B", int, int ]
          stack = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, class "[B", int, int ]
          stack = [ class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream, int, int ]

  public int available();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field offset:I
         4: aload_0
         5: getfield      #5                  // Field eod:I
         8: if_icmpge     23
        11: aload_0
        12: getfield      #5                  // Field eod:I
        15: aload_0
        16: getfield      #4                  // Field offset:I
        19: isub
        20: goto          24
        23: iconst_0
        24: ireturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int read();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: getfield      #4                  // Field offset:I
         4: aload_0
         5: getfield      #5                  // Field eod:I
         8: if_icmpge     34
        11: aload_0
        12: getfield      #3                  // Field data:[B
        15: aload_0
        16: dup
        17: getfield      #4                  // Field offset:I
        20: dup_x1
        21: iconst_1
        22: iadd
        23: putfield      #4                  // Field offset:I
        26: baload
        27: sipush        255
        30: iand
        31: goto          35
        34: iconst_m1
        35: ireturn
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 34 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int read(byte[]);
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: aload_0
         6: aload_1
         7: iconst_0
         8: aload_1
         9: arraylength
        10: invokevirtual #13                 // Method read:([BII)I
        13: ireturn
      LineNumberTable:
        line 130: 0
        line 131: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0      14     1     b   [B

  public int read(byte[], int, int);
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=4
         0: aload_1
         1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
         4: pop
         5: iload_2
         6: iflt          21
         9: iload_3
        10: iflt          21
        13: iload_2
        14: iload_3
        15: iadd
        16: aload_1
        17: arraylength
        18: if_icmple     29
        21: new           #14                 // class java/lang/IndexOutOfBoundsException
        24: dup
        25: invokespecial #15                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
        28: athrow
        29: aload_0
        30: getfield      #4                  // Field offset:I
        33: aload_0
        34: getfield      #5                  // Field eod:I
        37: if_icmplt     42
        40: iconst_m1
        41: ireturn
        42: aload_0
        43: getfield      #5                  // Field eod:I
        46: aload_0
        47: getfield      #4                  // Field offset:I
        50: isub
        51: istore        4
        53: iload_3
        54: iload         4
        56: if_icmpge     62
        59: iload_3
        60: istore        4
        62: iload         4
        64: ifgt          69
        67: iconst_0
        68: ireturn
        69: aload_0
        70: getfield      #3                  // Field data:[B
        73: aload_0
        74: getfield      #4                  // Field offset:I
        77: aload_1
        78: iload_2
        79: iload         4
        81: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        84: aload_0
        85: dup
        86: getfield      #4                  // Field offset:I
        89: iload         4
        91: iadd
        92: putfield      #4                  // Field offset:I
        95: iload         4
        97: ireturn
      LineNumberTable:
        line 136: 0
        line 137: 5
        line 138: 21
        line 141: 29
        line 142: 40
        line 145: 42
        line 146: 53
        line 147: 59
        line 149: 62
        line 150: 67
        line 152: 69
        line 153: 84
        line 154: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0      98     1     b   [B
            0      98     2   off   I
            0      98     3   len   I
           53      45     4 actualLen   I
      StackMapTable: number_of_entries = 5
        frame_type = 21 /* same */
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ int ]
        frame_type = 6 /* same */

  public long skip(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: lload_1
         1: lconst_0
         2: lcmp
         3: ifge          16
         6: new           #7                  // class java/lang/IllegalArgumentException
         9: dup
        10: ldc           #17                 // String Skipping backward is not supported
        12: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        15: athrow
        16: aload_0
        17: getfield      #5                  // Field eod:I
        20: aload_0
        21: getfield      #4                  // Field offset:I
        24: isub
        25: i2l
        26: lstore_3
        27: lload_1
        28: lload_3
        29: lcmp
        30: ifge          35
        33: lload_1
        34: lstore_3
        35: aload_0
        36: dup
        37: getfield      #4                  // Field offset:I
        40: i2l
        41: lload_3
        42: ladd
        43: l2i
        44: putfield      #4                  // Field offset:I
        47: lload_3
        48: lreturn
      LineNumberTable:
        line 159: 0
        line 160: 6
        line 163: 16
        line 164: 27
        line 165: 33
        line 168: 35
        line 169: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0      49     1     n   J
           27      22     3 actualSkip   J
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ long ]

  public boolean markSupported();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;

  public void mark(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #4                  // Field offset:I
         5: putfield      #6                  // Field markedOffset:I
         8: return
      LineNumberTable:
        line 180: 0
        line 181: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
            0       9     1 readlimit   I

  public void reset();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: getfield      #6                  // Field markedOffset:I
         5: putfield      #4                  // Field offset:I
         8: return
      LineNumberTable:
        line 186: 0
        line 187: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;
}
SourceFile: "UnsynchronizedByteArrayInputStream.java"
