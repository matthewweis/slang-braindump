Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/Versions$.class
  Last modified May 29, 2022; size 7302 bytes
  SHA-256 checksum f5ded8c473c706480c7c6fee9714fbbcc07f2ac21e10d812fa1731ae98d95e46
  Compiled from "Versions.scala"
public final class coursier.Versions$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/Versions$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 15, attributes: 5
Constant pool:
    #1 = Utf8               coursier/Versions$
    #2 = Class              #1            // coursier/Versions$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Versions.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               MODULE$
   #14 = Utf8               Lcoursier/Versions$;
   #15 = Utf8               <clinit>
   #16 = Utf8               ()V
   #17 = Utf8               <init>
   #18 = NameAndType        #17:#16       // "<init>":()V
   #19 = Methodref          #2.#18        // coursier/Versions$."<init>":()V
   #20 = NameAndType        #13:#14       // MODULE$:Lcoursier/Versions$;
   #21 = Fieldref           #2.#20        // coursier/Versions$.MODULE$:Lcoursier/Versions$;
   #22 = Utf8               apply
   #23 = Utf8               ()Lcoursier/Versions;
   #24 = Utf8               ()Lcoursier/Versions<Lcoursier/util/Task;>;
   #25 = Utf8               coursier/cache/Cache$
   #26 = Class              #25           // coursier/cache/Cache$
   #27 = Utf8               Lcoursier/cache/Cache$;
   #28 = NameAndType        #13:#27       // MODULE$:Lcoursier/cache/Cache$;
   #29 = Fieldref           #26.#28       // coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
   #30 = Utf8               default
   #31 = Utf8               ()Lcoursier/cache/Cache;
   #32 = NameAndType        #30:#31       // default:()Lcoursier/cache/Cache;
   #33 = Methodref          #26.#32       // coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
   #34 = Utf8               coursier/util/Task$
   #35 = Class              #34           // coursier/util/Task$
   #36 = Utf8               Lcoursier/util/Task$;
   #37 = NameAndType        #13:#36       // MODULE$:Lcoursier/util/Task$;
   #38 = Fieldref           #35.#37       // coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
   #39 = Utf8               sync
   #40 = Utf8               ()Lcoursier/util/Sync;
   #41 = NameAndType        #39:#40       // sync:()Lcoursier/util/Sync;
   #42 = Methodref          #35.#41       // coursier/util/Task$.sync:()Lcoursier/util/Sync;
   #43 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Versions;
   #44 = NameAndType        #22:#43       // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Versions;
   #45 = Methodref          #2.#44        // coursier/Versions$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Versions;
   #46 = Utf8               this
   #47 = Utf8               coursier$Versions$$merge
   #48 = Utf8               (Lscala/collection/immutable/Vector;)Lcoursier/core/Versions;
   #49 = Utf8               (Lscala/collection/immutable/Vector<Lcoursier/core/Versions;>;)Lcoursier/core/Versions;
   #50 = Utf8               versions
   #51 = Utf8               scala/collection/immutable/Vector
   #52 = Class              #51           // scala/collection/immutable/Vector
   #53 = Utf8               isEmpty
   #54 = Utf8               ()Z
   #55 = NameAndType        #53:#54       // isEmpty:()Z
   #56 = Methodref          #52.#55       // scala/collection/immutable/Vector.isEmpty:()Z
   #57 = Utf8               coursier/core/Versions$
   #58 = Class              #57           // coursier/core/Versions$
   #59 = Utf8               Lcoursier/core/Versions$;
   #60 = NameAndType        #13:#59       // MODULE$:Lcoursier/core/Versions$;
   #61 = Fieldref           #58.#60       // coursier/core/Versions$.MODULE$:Lcoursier/core/Versions$;
   #62 = Utf8
   #63 = String             #62           //
   #64 = Utf8               scala/collection/immutable/Nil$
   #65 = Class              #64           // scala/collection/immutable/Nil$
   #66 = Utf8               Lscala/collection/immutable/Nil$;
   #67 = NameAndType        #13:#66       // MODULE$:Lscala/collection/immutable/Nil$;
   #68 = Fieldref           #65.#67       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #69 = Utf8               scala/None$
   #70 = Class              #69           // scala/None$
   #71 = Utf8               Lscala/None$;
   #72 = NameAndType        #13:#71       // MODULE$:Lscala/None$;
   #73 = Fieldref           #70.#72       // scala/None$.MODULE$:Lscala/None$;
   #74 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/List;Lscala/Option;)Lcoursier/core/Versions;
   #75 = NameAndType        #22:#74       // apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/List;Lscala/Option;)Lcoursier/core/Versions;
   #76 = Methodref          #58.#75       // coursier/core/Versions$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/List;Lscala/Option;)Lcoursier/core/Versions;
   #77 = Utf8               lengthCompare
   #78 = Utf8               (I)I
   #79 = NameAndType        #77:#78       // lengthCompare:(I)I
   #80 = Methodref          #52.#79       // scala/collection/immutable/Vector.lengthCompare:(I)I
   #81 = Utf8               head
   #82 = Utf8               ()Ljava/lang/Object;
   #83 = NameAndType        #81:#82       // head:()Ljava/lang/Object;
   #84 = Methodref          #52.#83       // scala/collection/immutable/Vector.head:()Ljava/lang/Object;
   #85 = Utf8               coursier/core/Versions
   #86 = Class              #85           // coursier/core/Versions
   #87 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #88 = MethodType         #87           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #89 = Utf8               $anonfun$merge$1
   #90 = Utf8               (Lcoursier/core/Versions;)Lcoursier/core/Version;
   #91 = NameAndType        #89:#90       // $anonfun$merge$1:(Lcoursier/core/Versions;)Lcoursier/core/Version;
   #92 = Methodref          #2.#91        // coursier/Versions$.$anonfun$merge$1:(Lcoursier/core/Versions;)Lcoursier/core/Version;
   #93 = MethodHandle       6:#92         // REF_invokeStatic coursier/Versions$.$anonfun$merge$1:(Lcoursier/core/Versions;)Lcoursier/core/Version;
   #94 = MethodType         #90           //  (Lcoursier/core/Versions;)Lcoursier/core/Version;
   #95 = Integer            5
   #96 = Integer            1
   #97 = Utf8               java/lang/invoke/LambdaMetafactory
   #98 = Class              #97           // java/lang/invoke/LambdaMetafactory
   #99 = Utf8               altMetafactory
  #100 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #101 = NameAndType        #99:#100      // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #102 = Methodref          #98.#101      // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #103 = MethodHandle       6:#102        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #104 = Utf8               ()Lscala/Function1;
  #105 = NameAndType        #22:#104      // apply:()Lscala/Function1;
  #106 = InvokeDynamic      #0:#105       // #0:apply:()Lscala/Function1;
  #107 = Utf8               map
  #108 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #109 = NameAndType        #107:#108     // map:(Lscala/Function1;)Ljava/lang/Object;
  #110 = Methodref          #52.#109      // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #111 = Utf8               scala/collection/IterableOnceOps
  #112 = Class              #111          // scala/collection/IterableOnceOps
  #113 = Utf8               scala/math/Ordering$
  #114 = Class              #113          // scala/math/Ordering$
  #115 = Utf8               Lscala/math/Ordering$;
  #116 = NameAndType        #13:#115      // MODULE$:Lscala/math/Ordering$;
  #117 = Fieldref           #114.#116     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #118 = Utf8               scala/Predef$
  #119 = Class              #118          // scala/Predef$
  #120 = Utf8               Lscala/Predef$;
  #121 = NameAndType        #13:#120      // MODULE$:Lscala/Predef$;
  #122 = Fieldref           #119.#121     // scala/Predef$.MODULE$:Lscala/Predef$;
  #123 = Utf8               $conforms
  #124 = NameAndType        #123:#104     // $conforms:()Lscala/Function1;
  #125 = Methodref          #119.#124     // scala/Predef$.$conforms:()Lscala/Function1;
  #126 = Utf8               ordered
  #127 = Utf8               (Lscala/Function1;)Lscala/math/Ordering;
  #128 = NameAndType        #126:#127     // ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #129 = Methodref          #114.#128     // scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #130 = Utf8               max
  #131 = Utf8               (Lscala/math/Ordering;)Ljava/lang/Object;
  #132 = NameAndType        #130:#131     // max:(Lscala/math/Ordering;)Ljava/lang/Object;
  #133 = InterfaceMethodref #112.#132     // scala/collection/IterableOnceOps.max:(Lscala/math/Ordering;)Ljava/lang/Object;
  #134 = Utf8               coursier/core/Version
  #135 = Class              #134          // coursier/core/Version
  #136 = Utf8               repr
  #137 = Utf8               ()Ljava/lang/String;
  #138 = NameAndType        #136:#137     // repr:()Ljava/lang/String;
  #139 = Methodref          #135.#138     // coursier/core/Version.repr:()Ljava/lang/String;
  #140 = Utf8               $anonfun$merge$2
  #141 = NameAndType        #140:#90      // $anonfun$merge$2:(Lcoursier/core/Versions;)Lcoursier/core/Version;
  #142 = Methodref          #2.#141       // coursier/Versions$.$anonfun$merge$2:(Lcoursier/core/Versions;)Lcoursier/core/Version;
  #143 = MethodHandle       6:#142        // REF_invokeStatic coursier/Versions$.$anonfun$merge$2:(Lcoursier/core/Versions;)Lcoursier/core/Version;
  #144 = InvokeDynamic      #1:#105       // #1:apply:()Lscala/Function1;
  #145 = Utf8               $anonfun$merge$3
  #146 = Utf8               (Lcoursier/core/Versions;)Lscala/collection/immutable/List;
  #147 = NameAndType        #145:#146     // $anonfun$merge$3:(Lcoursier/core/Versions;)Lscala/collection/immutable/List;
  #148 = Methodref          #2.#147       // coursier/Versions$.$anonfun$merge$3:(Lcoursier/core/Versions;)Lscala/collection/immutable/List;
  #149 = MethodHandle       6:#148        // REF_invokeStatic coursier/Versions$.$anonfun$merge$3:(Lcoursier/core/Versions;)Lscala/collection/immutable/List;
  #150 = MethodType         #146          //  (Lcoursier/core/Versions;)Lscala/collection/immutable/List;
  #151 = InvokeDynamic      #2:#105       // #2:apply:()Lscala/Function1;
  #152 = Utf8               flatMap
  #153 = NameAndType        #152:#108     // flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #154 = Methodref          #52.#153      // scala/collection/immutable/Vector.flatMap:(Lscala/Function1;)Ljava/lang/Object;
  #155 = Utf8               scala/collection/SeqOps
  #156 = Class              #155          // scala/collection/SeqOps
  #157 = Utf8               distinct
  #158 = NameAndType        #157:#82      // distinct:()Ljava/lang/Object;
  #159 = InterfaceMethodref #156.#158     // scala/collection/SeqOps.distinct:()Ljava/lang/Object;
  #160 = Utf8               scala/collection/StrictOptimizedIterableOps
  #161 = Class              #160          // scala/collection/StrictOptimizedIterableOps
  #162 = Utf8               $anonfun$merge$4
  #163 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #164 = NameAndType        #162:#163     // $anonfun$merge$4:(Ljava/lang/String;)Lcoursier/core/Version;
  #165 = Methodref          #2.#164       // coursier/Versions$.$anonfun$merge$4:(Ljava/lang/String;)Lcoursier/core/Version;
  #166 = MethodHandle       6:#165        // REF_invokeStatic coursier/Versions$.$anonfun$merge$4:(Ljava/lang/String;)Lcoursier/core/Version;
  #167 = MethodType         #163          //  (Ljava/lang/String;)Lcoursier/core/Version;
  #168 = InvokeDynamic      #3:#105       // #3:apply:()Lscala/Function1;
  #169 = InterfaceMethodref #161.#109     // scala/collection/StrictOptimizedIterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #170 = Utf8               scala/collection/immutable/StrictOptimizedSeqOps
  #171 = Class              #170          // scala/collection/immutable/StrictOptimizedSeqOps
  #172 = Utf8               sorted
  #173 = NameAndType        #172:#131     // sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #174 = InterfaceMethodref #171.#173     // scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #175 = Utf8               $anonfun$merge$5
  #176 = Utf8               (Lcoursier/core/Version;)Ljava/lang/String;
  #177 = NameAndType        #175:#176     // $anonfun$merge$5:(Lcoursier/core/Version;)Ljava/lang/String;
  #178 = Methodref          #2.#177       // coursier/Versions$.$anonfun$merge$5:(Lcoursier/core/Version;)Ljava/lang/String;
  #179 = MethodHandle       6:#178        // REF_invokeStatic coursier/Versions$.$anonfun$merge$5:(Lcoursier/core/Version;)Ljava/lang/String;
  #180 = MethodType         #176          //  (Lcoursier/core/Version;)Ljava/lang/String;
  #181 = InvokeDynamic      #4:#105       // #4:apply:()Lscala/Function1;
  #182 = Utf8               toList
  #183 = Utf8               ()Lscala/collection/immutable/List;
  #184 = NameAndType        #182:#183     // toList:()Lscala/collection/immutable/List;
  #185 = InterfaceMethodref #112.#184     // scala/collection/IterableOnceOps.toList:()Lscala/collection/immutable/List;
  #186 = Utf8               $anonfun$merge$6
  #187 = Utf8               (Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  #188 = NameAndType        #186:#187     // $anonfun$merge$6:(Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  #189 = Methodref          #2.#188       // coursier/Versions$.$anonfun$merge$6:(Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  #190 = MethodHandle       6:#189        // REF_invokeStatic coursier/Versions$.$anonfun$merge$6:(Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  #191 = MethodType         #187          //  (Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  #192 = InvokeDynamic      #5:#105       // #5:apply:()Lscala/Function1;
  #193 = Utf8               scala/collection/IterableOps
  #194 = Class              #193          // scala/collection/IterableOps
  #195 = Utf8               lastOption
  #196 = Utf8               ()Lscala/Option;
  #197 = NameAndType        #195:#196     // lastOption:()Lscala/Option;
  #198 = InterfaceMethodref #194.#197     // scala/collection/IterableOps.lastOption:()Lscala/Option;
  #199 = Utf8               latest
  #200 = Utf8               Ljava/lang/String;
  #201 = Utf8               release
  #202 = Utf8               available
  #203 = Utf8               Lscala/collection/immutable/List;
  #204 = Utf8               lastUpdated
  #205 = Utf8               Lscala/Option;
  #206 = Utf8               Lscala/collection/immutable/Vector;
  #207 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Versions<TF;>;
  #208 = Utf8               cache
  #209 = Utf8               coursier/Versions
  #210 = Class              #209          // coursier/Versions
  #211 = Utf8               coursier/Resolve$
  #212 = Class              #211          // coursier/Resolve$
  #213 = Utf8               Lcoursier/Resolve$;
  #214 = NameAndType        #13:#213      // MODULE$:Lcoursier/Resolve$;
  #215 = Fieldref           #212.#214     // coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
  #216 = Utf8               defaultRepositories
  #217 = Utf8               ()Lscala/collection/immutable/Seq;
  #218 = NameAndType        #216:#217     // defaultRepositories:()Lscala/collection/immutable/Seq;
  #219 = Methodref          #212.#218     // coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
  #220 = Utf8               defaultMirrorConfFiles
  #221 = NameAndType        #220:#217     // defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
  #222 = Methodref          #212.#221     // coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
  #223 = Utf8               (Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
  #224 = NameAndType        #17:#223      // "<init>":(Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
  #225 = Methodref          #210.#224     // coursier/Versions."<init>":(Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
  #226 = Utf8               Lcoursier/cache/Cache;
  #227 = Utf8               Lcoursier/util/Sync;
  #228 = Utf8               (Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/Versions;
  #229 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/Option<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Versions<TF;>;
  #230 = Utf8               moduleOpt
  #231 = Utf8               repositories
  #232 = Utf8               Lscala/collection/immutable/Seq;
  #233 = Utf8               (Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/Versions;
  #234 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/Option<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Versions<TF;>;
  #235 = Utf8               mirrorConfFiles
  #236 = Utf8               mirrors
  #237 = Utf8               writeReplace
  #238 = Utf8               scala/runtime/ModuleSerializationProxy
  #239 = Class              #238          // scala/runtime/ModuleSerializationProxy
  #240 = Utf8               (Ljava/lang/Class;)V
  #241 = NameAndType        #17:#240      // "<init>":(Ljava/lang/Class;)V
  #242 = Methodref          #239.#241     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #243 = Utf8               v
  #244 = Utf8               coursier/core/Version$
  #245 = Class              #244          // coursier/core/Version$
  #246 = Utf8               Lcoursier/core/Version$;
  #247 = NameAndType        #13:#246      // MODULE$:Lcoursier/core/Version$;
  #248 = Fieldref           #245.#247     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #249 = NameAndType        #199:#137     // latest:()Ljava/lang/String;
  #250 = Methodref          #86.#249      // coursier/core/Versions.latest:()Ljava/lang/String;
  #251 = NameAndType        #22:#163      // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #252 = Methodref          #245.#251     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #253 = Utf8               Lcoursier/core/Versions;
  #254 = NameAndType        #201:#137     // release:()Ljava/lang/String;
  #255 = Methodref          #86.#254      // coursier/core/Versions.release:()Ljava/lang/String;
  #256 = Utf8               x$6
  #257 = NameAndType        #202:#183     // available:()Lscala/collection/immutable/List;
  #258 = Methodref          #86.#257      // coursier/core/Versions.available:()Lscala/collection/immutable/List;
  #259 = Utf8               x$7
  #260 = Utf8               x$8
  #261 = Utf8               Lcoursier/core/Version;
  #262 = Utf8               x$9
  #263 = Utf8               scala/Option$
  #264 = Class              #263          // scala/Option$
  #265 = Utf8               Lscala/Option$;
  #266 = NameAndType        #13:#265      // MODULE$:Lscala/Option$;
  #267 = Fieldref           #264.#266     // scala/Option$.MODULE$:Lscala/Option$;
  #268 = NameAndType        #204:#196     // lastUpdated:()Lscala/Option;
  #269 = Methodref          #86.#268      // coursier/core/Versions.lastUpdated:()Lscala/Option;
  #270 = Utf8               option2Iterable
  #271 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
  #272 = NameAndType        #270:#271     // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #273 = Methodref          #264.#272     // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
  #274 = Utf8               scala/collection/Iterable
  #275 = Class              #274          // scala/collection/Iterable
  #276 = Utf8               toSeq
  #277 = NameAndType        #276:#217     // toSeq:()Lscala/collection/immutable/Seq;
  #278 = InterfaceMethodref #275.#277     // scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
  #279 = Methodref          #4.#18        // java/lang/Object."<init>":()V
  #280 = Utf8               $deserializeLambda$
  #281 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #282 = Utf8               scala/runtime/LambdaDeserialize
  #283 = Class              #282          // scala/runtime/LambdaDeserialize
  #284 = Utf8               bootstrap
  #285 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #286 = NameAndType        #284:#285     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #287 = Methodref          #283.#286     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #288 = MethodHandle       6:#287        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #289 = Utf8               lambdaDeserialize
  #290 = NameAndType        #289:#281     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #291 = InvokeDynamic      #6:#290       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #292 = Utf8               Code
  #293 = Utf8               LineNumberTable
  #294 = Utf8               LocalVariableTable
  #295 = Utf8               Signature
  #296 = Utf8               StackMapTable
  #297 = Utf8               MethodParameters
  #298 = Utf8               InnerClasses
  #299 = Utf8               SourceFile
  #300 = Utf8               BootstrapMethods
  #301 = Utf8               ScalaInlineInfo
  #302 = Utf8               Scala
{
  public static final coursier.Versions$ MODULE$;
    descriptor: Lcoursier/Versions$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/Versions$
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #21                 // Field MODULE$:Lcoursier/Versions$;
        10: return
      LineNumberTable:
        line 10: 0

  public coursier.Versions<coursier.util.Task> apply();
    descriptor: ()Lcoursier/Versions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #29                 // Field coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
         4: invokevirtual #33                 // Method coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
         7: getstatic     #38                 // Field coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
        10: invokevirtual #42                 // Method coursier/util/Task$.sync:()Lcoursier/util/Sync;
        13: invokevirtual #45                 // Method apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Versions;
        16: areturn
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Versions$;
    Signature: #24                          // ()Lcoursier/Versions<Lcoursier/util/Task;>;

  public coursier.core.Versions coursier$Versions$$merge(scala.collection.immutable.Vector<coursier.core.Versions>);
    descriptor: (Lscala/collection/immutable/Vector;)Lcoursier/core/Versions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=2
         0: aload_1
         1: invokevirtual #56                 // Method scala/collection/immutable/Vector.isEmpty:()Z
         4: ifeq          26
         7: getstatic     #61                 // Field coursier/core/Versions$.MODULE$:Lcoursier/core/Versions$;
        10: ldc           #63                 // String
        12: ldc           #63                 // String
        14: getstatic     #68                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        17: getstatic     #73                 // Field scala/None$.MODULE$:Lscala/None$;
        20: invokevirtual #76                 // Method coursier/core/Versions$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/List;Lscala/Option;)Lcoursier/core/Versions;
        23: goto          241
        26: aload_1
        27: iconst_1
        28: invokevirtual #80                 // Method scala/collection/immutable/Vector.lengthCompare:(I)I
        31: iconst_0
        32: if_icmpne     45
        35: aload_1
        36: invokevirtual #84                 // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
        39: checkcast     #86                 // class coursier/core/Versions
        42: goto          241
        45: aload_1
        46: invokedynamic #106,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        51: invokevirtual #110                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        54: checkcast     #112                // class scala/collection/IterableOnceOps
        57: getstatic     #117                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        60: getstatic     #122                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        63: invokevirtual #125                // Method scala/Predef$.$conforms:()Lscala/Function1;
        66: invokevirtual #129                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
        69: invokeinterface #133,  2          // InterfaceMethod scala/collection/IterableOnceOps.max:(Lscala/math/Ordering;)Ljava/lang/Object;
        74: checkcast     #135                // class coursier/core/Version
        77: invokevirtual #139                // Method coursier/core/Version.repr:()Ljava/lang/String;
        80: astore_2
        81: aload_1
        82: invokedynamic #144,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        87: invokevirtual #110                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        90: checkcast     #112                // class scala/collection/IterableOnceOps
        93: getstatic     #117                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        96: getstatic     #122                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        99: invokevirtual #125                // Method scala/Predef$.$conforms:()Lscala/Function1;
       102: invokevirtual #129                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
       105: invokeinterface #133,  2          // InterfaceMethod scala/collection/IterableOnceOps.max:(Lscala/math/Ordering;)Ljava/lang/Object;
       110: checkcast     #135                // class coursier/core/Version
       113: invokevirtual #139                // Method coursier/core/Version.repr:()Ljava/lang/String;
       116: astore_3
       117: aload_1
       118: invokedynamic #151,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       123: invokevirtual #154                // Method scala/collection/immutable/Vector.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       126: checkcast     #156                // class scala/collection/SeqOps
       129: invokeinterface #159,  1          // InterfaceMethod scala/collection/SeqOps.distinct:()Ljava/lang/Object;
       134: checkcast     #161                // class scala/collection/StrictOptimizedIterableOps
       137: invokedynamic #168,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       142: invokeinterface #169,  2          // InterfaceMethod scala/collection/StrictOptimizedIterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
       147: checkcast     #171                // class scala/collection/immutable/StrictOptimizedSeqOps
       150: getstatic     #117                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
       153: getstatic     #122                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       156: invokevirtual #125                // Method scala/Predef$.$conforms:()Lscala/Function1;
       159: invokevirtual #129                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
       162: invokeinterface #174,  2          // InterfaceMethod scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
       167: checkcast     #161                // class scala/collection/StrictOptimizedIterableOps
       170: invokedynamic #181,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
       175: invokeinterface #169,  2          // InterfaceMethod scala/collection/StrictOptimizedIterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
       180: checkcast     #112                // class scala/collection/IterableOnceOps
       183: invokeinterface #185,  1          // InterfaceMethod scala/collection/IterableOnceOps.toList:()Lscala/collection/immutable/List;
       188: astore        4
       190: aload_1
       191: invokedynamic #192,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
       196: invokevirtual #154                // Method scala/collection/immutable/Vector.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       199: checkcast     #171                // class scala/collection/immutable/StrictOptimizedSeqOps
       202: getstatic     #117                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
       205: getstatic     #122                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       208: invokevirtual #125                // Method scala/Predef$.$conforms:()Lscala/Function1;
       211: invokevirtual #129                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
       214: invokeinterface #174,  2          // InterfaceMethod scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
       219: checkcast     #194                // class scala/collection/IterableOps
       222: invokeinterface #198,  1          // InterfaceMethod scala/collection/IterableOps.lastOption:()Lscala/Option;
       227: astore        5
       229: getstatic     #61                 // Field coursier/core/Versions$.MODULE$:Lcoursier/core/Versions$;
       232: aload_2
       233: aload_3
       234: aload         4
       236: aload         5
       238: invokevirtual #76                 // Method coursier/core/Versions$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/List;Lscala/Option;)Lcoursier/core/Versions;
       241: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 26 /* same */
        frame_type = 18 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 195
          stack = [ class coursier/core/Versions ]
      LineNumberTable:
        line 80: 0
        line 81: 7
        line 82: 26
        line 83: 35
        line 85: 45
        line 86: 81
        line 88: 117
        line 89: 118
        line 91: 137
        line 92: 150
        line 93: 170
        line 96: 190
        line 97: 191
        line 98: 202
        line 101: 229
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           81     160     2 latest   Ljava/lang/String;
          117     124     3 release   Ljava/lang/String;
          190      51     4 available   Lscala/collection/immutable/List;
          229      12     5 lastUpdated   Lscala/Option;
            0     242     0  this   Lcoursier/Versions$;
            0     242     1 versions   Lscala/collection/immutable/Vector;
    Signature: #49                          // (Lscala/collection/immutable/Vector<Lcoursier/core/Versions;>;)Lcoursier/core/Versions;
    MethodParameters:
      Name                           Flags
      versions                       final

  public <F extends java.lang.Object> coursier.Versions<F> apply(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Versions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=3, args_size=3
         0: new           #210                // class coursier/Versions
         3: dup
         4: aload_1
         5: getstatic     #73                 // Field scala/None$.MODULE$:Lscala/None$;
         8: getstatic     #215                // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
        11: invokevirtual #219                // Method coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
        14: getstatic     #215                // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
        17: invokevirtual #222                // Method coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
        20: getstatic     #68                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        23: aload_2
        24: invokespecial #225                // Method coursier/Versions."<init>":(Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        27: areturn
      LineNumberTable:
        line 10: 0
        line 12: 5
        line 13: 8
        line 15: 14
        line 16: 20
        line 10: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lcoursier/Versions$;
            0      28     1 cache   Lcoursier/cache/Cache;
            0      28     2  sync   Lcoursier/util/Sync;
    Signature: #207                         // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Versions<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      sync                           final

  public <F extends java.lang.Object> coursier.Versions<F> apply(coursier.cache.Cache<F>, scala.Option<coursier.core.Module>, scala.collection.immutable.Seq<coursier.core.Repository>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/Versions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=5, args_size=5
         0: new           #210                // class coursier/Versions
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: getstatic     #215                // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
        10: invokevirtual #222                // Method coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
        13: getstatic     #68                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        16: aload         4
        18: invokespecial #225                // Method coursier/Versions."<init>":(Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        21: areturn
      LineNumberTable:
        line 10: 0
        line 15: 7
        line 16: 13
        line 10: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lcoursier/Versions$;
            0      22     1 cache   Lcoursier/cache/Cache;
            0      22     2 moduleOpt   Lscala/Option;
            0      22     3 repositories   Lscala/collection/immutable/Seq;
            0      22     4  sync   Lcoursier/util/Sync;
    Signature: #229                         // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/Option<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Versions<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      moduleOpt                      final
      repositories                   final
      sync                           final

  public <F extends java.lang.Object> coursier.Versions<F> apply(coursier.cache.Cache<F>, scala.Option<coursier.core.Module>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/Versions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=7
         0: new           #210                // class coursier/Versions
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: invokespecial #225                // Method coursier/Versions."<init>":(Lcoursier/cache/Cache;Lscala/Option;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        16: areturn
      LineNumberTable:
        line 10: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Versions$;
            0      17     1 cache   Lcoursier/cache/Cache;
            0      17     2 moduleOpt   Lscala/Option;
            0      17     3 repositories   Lscala/collection/immutable/Seq;
            0      17     4 mirrorConfFiles   Lscala/collection/immutable/Seq;
            0      17     5 mirrors   Lscala/collection/immutable/Seq;
            0      17     6  sync   Lcoursier/util/Sync;
    Signature: #234                         // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/Option<Lcoursier/core/Module;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Versions<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      moduleOpt                      final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      sync                           final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #239                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/Versions$
         6: invokespecial #242                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 10: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/Versions$;

  public static final coursier.core.Version $anonfun$merge$1(coursier.core.Versions);
    descriptor: (Lcoursier/core/Versions;)Lcoursier/core/Version;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #248                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #250                // Method coursier/core/Versions.latest:()Ljava/lang/String;
         7: invokevirtual #252                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
        10: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     v   Lcoursier/core/Versions;
    MethodParameters:
      Name                           Flags
      v                              final

  public static final coursier.core.Version $anonfun$merge$2(coursier.core.Versions);
    descriptor: (Lcoursier/core/Versions;)Lcoursier/core/Version;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #248                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #255                // Method coursier/core/Versions.release:()Ljava/lang/String;
         7: invokevirtual #252                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
        10: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     v   Lcoursier/core/Versions;
    MethodParameters:
      Name                           Flags
      v                              final

  public static final scala.collection.immutable.List $anonfun$merge$3(coursier.core.Versions);
    descriptor: (Lcoursier/core/Versions;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #258                // Method coursier/core/Versions.available:()Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 89: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$6   Lcoursier/core/Versions;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final coursier.core.Version $anonfun$merge$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Version;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #248                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #252                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
         7: areturn
      LineNumberTable:
        line 91: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$7   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final java.lang.String $anonfun$merge$5(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method coursier/core/Version.repr:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$8   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final scala.collection.immutable.Seq $anonfun$merge$6(coursier.core.Versions);
    descriptor: (Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #267                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #269                // Method coursier/core/Versions.lastUpdated:()Lscala/Option;
         7: invokevirtual #273                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
        10: invokeinterface #278,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
        15: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   x$9   Lcoursier/core/Versions;
    MethodParameters:
      Name                           Flags
      x$9                            final

  private coursier.Versions$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #279                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 110: 0
        line 10: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Versions$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #291,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Versions.scala"
BootstrapMethods:
  0: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 (Ljava/lang/Object;)Ljava/lang/Object;
      #93 REF_invokeStatic coursier/Versions$.$anonfun$merge$1:(Lcoursier/core/Versions;)Lcoursier/core/Version;
      #94 (Lcoursier/core/Versions;)Lcoursier/core/Version;
      #95 5
      #96 1
      #94 (Lcoursier/core/Versions;)Lcoursier/core/Version;
  1: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 (Ljava/lang/Object;)Ljava/lang/Object;
      #143 REF_invokeStatic coursier/Versions$.$anonfun$merge$2:(Lcoursier/core/Versions;)Lcoursier/core/Version;
      #94 (Lcoursier/core/Versions;)Lcoursier/core/Version;
      #95 5
      #96 1
      #94 (Lcoursier/core/Versions;)Lcoursier/core/Version;
  2: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 (Ljava/lang/Object;)Ljava/lang/Object;
      #149 REF_invokeStatic coursier/Versions$.$anonfun$merge$3:(Lcoursier/core/Versions;)Lscala/collection/immutable/List;
      #150 (Lcoursier/core/Versions;)Lscala/collection/immutable/List;
      #95 5
      #96 1
      #150 (Lcoursier/core/Versions;)Lscala/collection/immutable/List;
  3: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 (Ljava/lang/Object;)Ljava/lang/Object;
      #166 REF_invokeStatic coursier/Versions$.$anonfun$merge$4:(Ljava/lang/String;)Lcoursier/core/Version;
      #167 (Ljava/lang/String;)Lcoursier/core/Version;
      #95 5
      #96 1
      #167 (Ljava/lang/String;)Lcoursier/core/Version;
  4: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 (Ljava/lang/Object;)Ljava/lang/Object;
      #179 REF_invokeStatic coursier/Versions$.$anonfun$merge$5:(Lcoursier/core/Version;)Ljava/lang/String;
      #180 (Lcoursier/core/Version;)Ljava/lang/String;
      #95 5
      #96 1
      #180 (Lcoursier/core/Version;)Ljava/lang/String;
  5: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 (Ljava/lang/Object;)Ljava/lang/Object;
      #190 REF_invokeStatic coursier/Versions$.$anonfun$merge$6:(Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
      #191 (Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
      #95 5
      #96 1
      #191 (Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  6: #288 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #93 REF_invokeStatic coursier/Versions$.$anonfun$merge$1:(Lcoursier/core/Versions;)Lcoursier/core/Version;
      #143 REF_invokeStatic coursier/Versions$.$anonfun$merge$2:(Lcoursier/core/Versions;)Lcoursier/core/Version;
      #149 REF_invokeStatic coursier/Versions$.$anonfun$merge$3:(Lcoursier/core/Versions;)Lscala/collection/immutable/List;
      #166 REF_invokeStatic coursier/Versions$.$anonfun$merge$4:(Ljava/lang/String;)Lcoursier/core/Version;
      #179 REF_invokeStatic coursier/Versions$.$anonfun$merge$5:(Lcoursier/core/Version;)Ljava/lang/String;
      #190 REF_invokeStatic coursier/Versions$.$anonfun$merge$6:(Lcoursier/core/Versions;)Lscala/collection/immutable/Seq;
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 59 00 5A 01 00 8C 00 5A 01 00 91
   00 92 01 00 A2 00 A3 01 00 AF 00 B0 01 00 BA 00
   BB 01 00 11 00 10 01 00 16 00 17 01 00 16 00 2B
   01 00 16 00 E4 01 00 16 00 E9 01 00 2F 00 30 01
   00 ED 00 52 01
  Scala: length = 0x0 (unknown attribute)

