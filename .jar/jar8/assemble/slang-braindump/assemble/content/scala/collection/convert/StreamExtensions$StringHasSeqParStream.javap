Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$StringHasSeqParStream.class
  Last modified May 29, 2022; size 2712 bytes
  SHA-256 checksum 935c62f231aaea7605ca2548c0a07298e20d157c3adb559e9f7a9d5659fd9a85
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$StringHasSeqParStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$StringHasSeqParStream
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 8, attributes: 4
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$StringHasSeqParStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$StringHasSeqParStream
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               StreamExtensions.scala
   #6 = Utf8               java/util/Spliterator$OfInt
   #7 = Class              #6             // java/util/Spliterator$OfInt
   #8 = Utf8               java/util/Spliterator
   #9 = Class              #8             // java/util/Spliterator
  #10 = Utf8               OfInt
  #11 = Utf8               scala/collection/IntStepper$IntStepperSpliterator
  #12 = Class              #11            // scala/collection/IntStepper$IntStepperSpliterator
  #13 = Utf8               scala/collection/IntStepper
  #14 = Class              #13            // scala/collection/IntStepper
  #15 = Utf8               IntStepperSpliterator
  #16 = Utf8               scala/collection/convert/StreamExtensions
  #17 = Class              #16            // scala/collection/convert/StreamExtensions
  #18 = Utf8               StringHasSeqParStream
  #19 = Utf8               s
  #20 = Utf8               Ljava/lang/String;
  #21 = Utf8               $outer
  #22 = Utf8               Lscala/collection/convert/StreamExtensions;
  #23 = Utf8               asJavaSeqStream
  #24 = Utf8               ()Ljava/util/stream/IntStream;
  #25 = NameAndType        #19:#20        // s:Ljava/lang/String;
  #26 = Fieldref           #2.#25         // scala/collection/convert/StreamExtensions$StringHasSeqParStream.s:Ljava/lang/String;
  #27 = Utf8               scala/collection/convert/impl/CharStringStepper
  #28 = Class              #27            // scala/collection/convert/impl/CharStringStepper
  #29 = Utf8               java/lang/String
  #30 = Class              #29            // java/lang/String
  #31 = Utf8               length
  #32 = Utf8               ()I
  #33 = NameAndType        #31:#32        // length:()I
  #34 = Methodref          #30.#33        // java/lang/String.length:()I
  #35 = Utf8               <init>
  #36 = Utf8               (Ljava/lang/String;II)V
  #37 = NameAndType        #35:#36        // "<init>":(Ljava/lang/String;II)V
  #38 = Methodref          #28.#37        // scala/collection/convert/impl/CharStringStepper."<init>":(Ljava/lang/String;II)V
  #39 = Utf8               (Lscala/collection/IntStepper;)V
  #40 = NameAndType        #35:#39        // "<init>":(Lscala/collection/IntStepper;)V
  #41 = Methodref          #12.#40        // scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
  #42 = Utf8               java/util/stream/StreamSupport
  #43 = Class              #42            // java/util/stream/StreamSupport
  #44 = Utf8               intStream
  #45 = Utf8               (Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
  #46 = NameAndType        #44:#45        // intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
  #47 = Methodref          #43.#46        // java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
  #48 = Utf8               this
  #49 = Utf8               Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
  #50 = Utf8               stepper$extension_$this
  #51 = Utf8               spliterator_this
  #52 = Utf8               Lscala/collection/convert/impl/CharStringStepper;
  #53 = Utf8               asJavaParStream
  #54 = Utf8               asJavaSeqCharStream
  #55 = Utf8               charStepper$extension_$this
  #56 = Utf8               asJavaParCharStream
  #57 = Utf8               asJavaSeqCodePointStream
  #58 = Utf8               scala/collection/convert/impl/CodePointStringStepper
  #59 = Class              #58            // scala/collection/convert/impl/CodePointStringStepper
  #60 = Methodref          #59.#37        // scala/collection/convert/impl/CodePointStringStepper."<init>":(Ljava/lang/String;II)V
  #61 = Utf8               codePointStepper$extension_$this
  #62 = Utf8               Lscala/collection/convert/impl/CodePointStringStepper;
  #63 = Utf8               asJavaParCodePointStream
  #64 = Utf8               scala$collection$convert$StreamExtensions$StringHasSeqParStream$$$outer
  #65 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #66 = NameAndType        #21:#22        // $outer:Lscala/collection/convert/StreamExtensions;
  #67 = Fieldref           #2.#66         // scala/collection/convert/StreamExtensions$StringHasSeqParStream.$outer:Lscala/collection/convert/StreamExtensions;
  #68 = Utf8               (Lscala/collection/convert/StreamExtensions;Ljava/lang/String;)V
  #69 = Utf8               ()V
  #70 = NameAndType        #35:#69        // "<init>":()V
  #71 = Methodref          #4.#70         // java/lang/Object."<init>":()V
  #72 = Utf8               Code
  #73 = Utf8               LineNumberTable
  #74 = Utf8               LocalVariableTable
  #75 = Utf8               StackMapTable
  #76 = Utf8               MethodParameters
  #77 = Utf8               InnerClasses
  #78 = Utf8               SourceFile
  #79 = Utf8               ScalaInlineInfo
  #80 = Utf8               Scala
{
  private final java.lang.String s;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.util.stream.IntStream asJavaSeqStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=1
         0: aload_0
         1: getfield      #26                 // Field s:Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: aconst_null
         7: astore_1
         8: astore_2
         9: new           #28                 // class scala/collection/convert/impl/CharStringStepper
        12: dup
        13: aload_2
        14: iconst_0
        15: aload_2
        16: invokevirtual #34                 // Method java/lang/String.length:()I
        19: invokespecial #38                 // Method scala/collection/convert/impl/CharStringStepper."<init>":(Ljava/lang/String;II)V
        22: astore_3
        23: aload_3
        24: aconst_null
        25: astore_3
        26: astore        4
        28: aload         4
        30: aconst_null
        31: astore_2
        32: aconst_null
        33: astore        4
        35: astore        5
        37: new           #12                 // class scala/collection/IntStepper$IntStepperSpliterator
        40: dup
        41: aload         5
        43: invokespecial #41                 // Method scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
        46: aconst_null
        47: astore        5
        49: iconst_0
        50: invokestatic  #47                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        53: areturn
      LineNumberTable:
        line 225: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            9      19     2 stepper$extension_$this   Ljava/lang/String;
           37       9     5 spliterator_this   Lscala/collection/convert/impl/CharStringStepper;

  public java.util.stream.IntStream asJavaParStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=1
         0: aload_0
         1: getfield      #26                 // Field s:Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: aconst_null
         7: astore_1
         8: astore_2
         9: new           #28                 // class scala/collection/convert/impl/CharStringStepper
        12: dup
        13: aload_2
        14: iconst_0
        15: aload_2
        16: invokevirtual #34                 // Method java/lang/String.length:()I
        19: invokespecial #38                 // Method scala/collection/convert/impl/CharStringStepper."<init>":(Ljava/lang/String;II)V
        22: astore_3
        23: aload_3
        24: aconst_null
        25: astore_3
        26: astore        4
        28: aload         4
        30: aconst_null
        31: astore_2
        32: aconst_null
        33: astore        4
        35: astore        5
        37: new           #12                 // class scala/collection/IntStepper$IntStepperSpliterator
        40: dup
        41: aload         5
        43: invokespecial #41                 // Method scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
        46: aconst_null
        47: astore        5
        49: iconst_1
        50: invokestatic  #47                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        53: areturn
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            9      19     2 stepper$extension_$this   Ljava/lang/String;
           37       9     5 spliterator_this   Lscala/collection/convert/impl/CharStringStepper;

  public java.util.stream.IntStream asJavaSeqCharStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=1
         0: aload_0
         1: getfield      #26                 // Field s:Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: aconst_null
         7: astore_1
         8: astore_2
         9: new           #28                 // class scala/collection/convert/impl/CharStringStepper
        12: dup
        13: aload_2
        14: iconst_0
        15: aload_2
        16: invokevirtual #34                 // Method java/lang/String.length:()I
        19: invokespecial #38                 // Method scala/collection/convert/impl/CharStringStepper."<init>":(Ljava/lang/String;II)V
        22: astore_3
        23: aload_3
        24: aconst_null
        25: astore_2
        26: aconst_null
        27: astore_3
        28: astore        4
        30: new           #12                 // class scala/collection/IntStepper$IntStepperSpliterator
        33: dup
        34: aload         4
        36: invokespecial #41                 // Method scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
        39: aconst_null
        40: astore        4
        42: iconst_0
        43: invokestatic  #47                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        46: areturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            9      14     2 charStepper$extension_$this   Ljava/lang/String;
           30       9     4 spliterator_this   Lscala/collection/convert/impl/CharStringStepper;

  public java.util.stream.IntStream asJavaParCharStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=1
         0: aload_0
         1: getfield      #26                 // Field s:Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: aconst_null
         7: astore_1
         8: astore_2
         9: new           #28                 // class scala/collection/convert/impl/CharStringStepper
        12: dup
        13: aload_2
        14: iconst_0
        15: aload_2
        16: invokevirtual #34                 // Method java/lang/String.length:()I
        19: invokespecial #38                 // Method scala/collection/convert/impl/CharStringStepper."<init>":(Ljava/lang/String;II)V
        22: astore_3
        23: aload_3
        24: aconst_null
        25: astore_2
        26: aconst_null
        27: astore_3
        28: astore        4
        30: new           #12                 // class scala/collection/IntStepper$IntStepperSpliterator
        33: dup
        34: aload         4
        36: invokespecial #41                 // Method scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
        39: aconst_null
        40: astore        4
        42: iconst_1
        43: invokestatic  #47                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        46: areturn
      LineNumberTable:
        line 235: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            9      14     2 charStepper$extension_$this   Ljava/lang/String;
           30       9     4 spliterator_this   Lscala/collection/convert/impl/CharStringStepper;

  public java.util.stream.IntStream asJavaSeqCodePointStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=1
         0: aload_0
         1: getfield      #26                 // Field s:Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: aconst_null
         7: astore_1
         8: astore_2
         9: new           #59                 // class scala/collection/convert/impl/CodePointStringStepper
        12: dup
        13: aload_2
        14: iconst_0
        15: aload_2
        16: invokevirtual #34                 // Method java/lang/String.length:()I
        19: invokespecial #60                 // Method scala/collection/convert/impl/CodePointStringStepper."<init>":(Ljava/lang/String;II)V
        22: astore_3
        23: aload_3
        24: aconst_null
        25: astore_2
        26: aconst_null
        27: astore_3
        28: astore        4
        30: new           #12                 // class scala/collection/IntStepper$IntStepperSpliterator
        33: dup
        34: aload         4
        36: invokespecial #41                 // Method scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
        39: aconst_null
        40: astore        4
        42: iconst_0
        43: invokestatic  #47                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        46: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            9      14     2 codePointStepper$extension_$this   Ljava/lang/String;
           30       9     4 spliterator_this   Lscala/collection/convert/impl/CodePointStringStepper;

  public java.util.stream.IntStream asJavaParCodePointStream();
    descriptor: ()Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=1
         0: aload_0
         1: getfield      #26                 // Field s:Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: aconst_null
         7: astore_1
         8: astore_2
         9: new           #59                 // class scala/collection/convert/impl/CodePointStringStepper
        12: dup
        13: aload_2
        14: iconst_0
        15: aload_2
        16: invokevirtual #34                 // Method java/lang/String.length:()I
        19: invokespecial #60                 // Method scala/collection/convert/impl/CodePointStringStepper."<init>":(Ljava/lang/String;II)V
        22: astore_3
        23: aload_3
        24: aconst_null
        25: astore_2
        26: aconst_null
        27: astore_3
        28: astore        4
        30: new           #12                 // class scala/collection/IntStepper$IntStepperSpliterator
        33: dup
        34: aload         4
        36: invokespecial #41                 // Method scala/collection/IntStepper$IntStepperSpliterator."<init>":(Lscala/collection/IntStepper;)V
        39: aconst_null
        40: astore        4
        42: iconst_1
        43: invokestatic  #47                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        46: areturn
      LineNumberTable:
        line 240: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            9      14     2 codePointStepper$extension_$this   Ljava/lang/String;
           30       9     4 spliterator_this   Lscala/collection/convert/impl/CodePointStringStepper;

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$StringHasSeqParStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #67                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 220: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;

  public scala.collection.convert.StreamExtensions$StringHasSeqParStream(scala.collection.convert.StreamExtensions, java.lang.String);
    descriptor: (Lscala/collection/convert/StreamExtensions;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #26                 // Field s:Ljava/lang/String;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #67                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #71                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 220: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$StringHasSeqParStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      s                              final
}
InnerClasses:
  public static #10= #7 of #9;            // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
  public static #15= #12 of #14;          // IntStepperSpliterator=class scala/collection/IntStepper$IntStepperSpliterator of class scala/collection/IntStepper
  public #18= #2 of #17;                  // StringHasSeqParStream=class scala/collection/convert/StreamExtensions$StringHasSeqParStream of class scala/collection/convert/StreamExtensions
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 23 00 44 00 00 38 00 18 00 00 3F
   00 18 00 00 35 00 18 00 00 36 00 18 00 00 39 00
   18 00 00 17 00 18 00 00 40 00 41 00
  Scala: length = 0x0 (unknown attribute)

