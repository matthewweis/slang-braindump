Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/project/Module.class
  Last modified May 29, 2022; size 18212 bytes
  SHA-256 checksum f72b47ebcf66bfbd3fdeb202af07cabd8f72a952c180a85009911355ac7c8961
  Compiled from "Project.scala"
public final class org.sireum.project.Module implements org.sireum.DatatypeSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/project/Module
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 16, methods: 55, attributes: 6
Constant pool:
    #1 = Utf8               org/sireum/project/Module
    #2 = Class              #1            // org/sireum/project/Module
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/DatatypeSig
    #6 = Class              #5            // org/sireum/DatatypeSig
    #7 = Utf8               Project.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\ted\u0001B%K\u0005EC\u0001\u0002\u0018\u0001\u0003\u0002\u0003\u0006I!\u0018\u0005\tA\u0002\u0011\t\u0011)A\u0005;\"A\u0011\r\u0001B\u0001B\u0003%!\r\u0003\u0005f\u0001\t\u0005\t\u0015!\u0003g\u0011!9\bA!A!\u0002\u0013A\b\"CA\u0002\u0001\t\u0005\t\u0015!\u0003g\u0011%\t)\u0001\u0001B\u0001B\u0003%a\rC\u0005\u0002\b\u0001\u0011\t\u0011)A\u0005M\"I\u0011\u0011\u0002\u0001\u0003\u0002\u0003\u0006IA\u001a\u0005\n\u0003\u0017\u0001!\u0011!Q\u0001\n\u0019D!\"!\u0004\u0001\u0005\u0003\u0005\u000b\u0011BA\b\u0011\u001d\t9\u0002\u0001C\u0001\u00033Aq!a\r\u0001A\u0003%Q\fC\u0004\u00026\u0001!\t!a\u000e\t\u000f\u0005e\u0002\u0001\"\u0001\u00028!9\u00111\b\u0001!\u0002\u0013i\u0006bBA\u001f\u0001\u0011\u0005\u0011q\u0007\u0005\b\u0003\u007f\u0001A\u0011AA\u001c\u0011!\t\t\u0005\u0001Q\u0001\n\u0005\r\u0003bBA%\u0001\u0001\u0006I!\u0018\u0005\b\u0003\u0017\u0002A\u0011AA\'\u0011\u001d\ty\u0005\u0001C\u0001\u0003\u001bBq!!\u0015\u0001A\u0003%a\rC\u0004\u0002T\u0001!\t!!\u0016\t\u000f\u0005]\u0003\u0001\"\u0001\u0002V!9\u0011\u0011\f\u0001!\u0002\u0013A\bbBA.\u0001\u0011\u0005\u0011Q\f\u0005\b\u0003?\u0002A\u0011AA/\u0011\u001d\t\t\u0007\u0001Q\u0001\n\u0019Dq!a\u0019\u0001\t\u0003\t)\u0006C\u0004\u0002f\u0001!\t!!\u0016\t\u000f\u0005\u001d\u0004\u0001)A\u0005M\"9\u0011\u0011\u000e\u0001\u0005\u0002\u0005U\u0003bBA6\u0001\u0011\u0005\u0011Q\u000b\u0005\b\u0003[\u0002\u0001\u0015!\u0003g\u0011\u001d\ty\u0007\u0001C\u0001\u0003+Bq!!\u001d\u0001\t\u0003\t)\u0006C\u0004\u0002t\u0001\u0001\u000b\u0011\u00024\t\u000f\u0005U\u0004\u0001\"\u0001\u0002V!9\u0011q\u000f\u0001\u0005\u0002\u0005U\u0003bBA=\u0001\u0001\u0006IA\u001a\u0005\b\u0003w\u0002A\u0011AA+\u0011\u001d\ti\b\u0001C\u0001\u0003+B\u0001\"a \u0001A\u0003%\u00111\t\u0005\t\u0003\u0003\u0003\u0001\u0015!\u0003\u0002\u0012!9\u00111\u0011\u0001\u0005\u0002\u0005\u0015\u0005bBAD\u0001\u0011\u0005\u0011Q\u0011\u0005\b\u0003\u0013\u0003A\u0011IAF\u0011\u001d\tY\n\u0001C!\u0003oA!\"!(\u0001\u0011\u000b\u0007I\u0011IAP\u0011\u001d\t9\u000b\u0001C!\u0003SCq!!.\u0001\t\u0003\t9\fC\u0005\u0002P\u0002\t\n\u0011\"\u0001\u0002R\"I\u0011q\u001d\u0001\u0012\u0002\u0013\u0005\u0011\u0011\u001b\u0005\n\u0003S\u0004\u0011\u0013!C\u0001\u0003WD\u0011\"a<\u0001#\u0003%\t!!=\t\u0013\u0005U\b!%A\u0005\u0002\u0005]\b\"CA~\u0001E\u0005I\u0011AAy\u0011%\ti\u0010AI\u0001\n\u0003\t\t\u0010C\u0005\u0002\u0000\u0002\t\n\u0011\"\u0001\u0002r\"I!\u0011\u0001\u0001\u0012\u0002\u0013\u0005\u0011\u0011\u001f\u0005\n\u0005\u0007\u0001\u0011\u0013!C\u0001\u0003cD\u0011B!\u0002\u0001#\u0003%\tAa\u0002\t\u0015\t-\u0001\u0001#b\u0001\n\u0003\u0012i\u0001C\u0004\u0003&\u0001!\tAa\n\b\u000f\t\r#\n#\u0001\u0003F\u00191\u0011J\u0013E\u0001\u0005\u000fBq!a\u0006D\t\u0003\u0011I\u0005C\u0005\u0003L\r\u0013\r\u0011\"\u0001\u0002^!9!QJ\"!\u0002\u0013A\bbBA[\u0007\u0012\u0005!q\n\u0005\b\u0005O\u001aE\u0011\u0001B5\u0005\u0019iu\u000eZ;mK*\u00111\nT\u0001\baJ|\'.Z2u\u0015\tie*\u0001\u0004tSJ,W/\u001c\u0006\u0002\u001f\u0006\u0019qN]4\u0004\u0001M\u0019\u0001A\u0015-\u0011\u0005M3V\"\u0001+\u000b\u0003U\u000bQa]2bY\u0006L!a\u0016+\u0003\r\u0005s\u0017PU3g!\tI&,D\u0001M\u0013\tYFJA\u0006ECR\fG/\u001f9f\'&<\u0017\u0001B0`S\u0012\u0004\"!\u00170\n\u0005}c%AB*ue&tw-\u0001\u0006`?\n\f7/\u001a)bi\"\fAbX0tk\n\u0004\u0016\r\u001e5PaR\u00042!W2^\u0013\t!GJ\u0001\u0004PaRLwN\\\u0001\u0007?~#W\r]:\u0011\u0007\u001d\fXL\u0004\u0002i_:\u0011\u0011N\u001c\b\u0003U6l\u0011a\u001b\u0006\u0003YB\u000ba\u0001\u0010:p_Rt\u0014\"A(\n\u00055s\u0015B\u00019M\u0003\u001d\u0001\u0018mY6bO\u0016L!A]:\u0003\u0007%\u001b&,\u0003\u0002uk\na\u0001+Y2lC\u001e,GK]1ji*\u0011a\u000fT\u0001\nI%tG/\u001a:oC2\f\u0011bX0uCJ<W\r^:\u0011\u0007\u001d\f\u0018\u0010\u0005\u0002{}:\u00111\u0010`\u0007\u0002\u0015&\u0011QPS\u0001\u0007)\u0006\u0014x-\u001a;\n\u0007}\f\tA\u0001\u0003UsB,\'BA?K\u0003%yv,\u001b<z\t\u0016\u00048/A\u0005`?N|WO]2fg\u0006Yql\u0018:fg>,(oY3t\u00035yv\f^3tiN{WO]2fg\u0006yql\u0018;fgR\u0014Vm]8ve\u000e,7/\u0001\t`?B,(\r\\5tQ&sgm\\(qiB!\u0011lYA\t!\rY\u00181C\u0005\u0004\u0003+Q%a\u0003)vE2L7\u000f[%oM>\fa\u0001P5oSRtD\u0003GA\u000e\u0003;\ty\"!\t\u0002$\u0005\u0015\u0012qEA\u0015\u0003W\ti#a\f\u00022A\u00111\u0010\u0001\u0005\u000692\u0001\r!\u0018\u0005\u0006A2\u0001\r!\u0018\u0005\u0006C2\u0001\rA\u0019\u0005\u0006K2\u0001\rA\u001a\u0005\u0006o2\u0001\r\u0001\u001f\u0005\u0007\u0003\u0007a\u0001\u0019\u00014\t\r\u0005\u0015A\u00021\u0001g\u0011\u0019\t9\u0001\u0004a\u0001M\"1\u0011\u0011\u0002\u0007A\u0002\u0019Da!a\u0003\r\u0001\u00041\u0007bBA\u0007\u0019\u0001\u0007\u0011qB\u0001\u0004?&$\u0017AA5e+\u0005i\u0016!B4fi&#\u0017!C0cCN,\u0007+\u0019;i\u0003!\u0011\u0017m]3QCRD\u0017aC4fi\n\u000b7/\u001a)bi\"\fAb\u00182tk\n\u0004\u0016\r\u001e5PaR\u00042aUA#\u0013\r\t9\u0005\u0016\u0002\b\u0005>|G.Z1o\u0003-y6/\u001e2QCRDw\n\u001d;\u0002\u0015M,(\rU1uQ>\u0003H/F\u0001c\u000359W\r^*vEB\u000bG\u000f[(qi\u0006)q\fZ3qg\u0006!A-\u001a9t+\u00051\u0017aB4fi\u0012+\u0007o]\u0001\t?R\f\'oZ3ug\u00069A/\u0019:hKR\u001cX#\u0001=\u0002\u0015\u001d,G\u000fV1sO\u0016$8/\u0001\u0005`SZLH)\u001a9t\u0003\u001dIg/\u001f#faN\f!bZ3u\u0013ZLH)\u001a9t\u0003!y6o\\;sG\u0016\u001c\u0018aB:pkJ\u001cWm]\u0001\u000bO\u0016$8k\\;sG\u0016\u001c\u0018AC0sKN|WO]2fg\u0006I!/Z:pkJ\u001cWm]\u0001\rO\u0016$(+Z:pkJ\u001cWm]\u0001\r?R,7\u000f^*pkJ\u001cWm]\u0001\fi\u0016\u001cHoU8ve\u000e,7/\u0001\bhKR$Vm\u001d;T_V\u00148-Z:\u0002\u001d}#Xm\u001d;SKN|WO]2fg\u0006iA/Z:u%\u0016\u001cx.\u001e:dKN\f\u0001cZ3u)\u0016\u001cHOU3t_V\u00148-Z:\u0002!}\u0013\u0007/\u001e2mSND\u0017J\u001c4p\u001fB$\u0018aD0qk\nd\u0017n\u001d5J]\u001a|w\n\u001d;\u0002\u001dA,(\r\\5tQ&sgm\\(qiV\u0011\u0011qB\u0001\u0012O\u0016$\b+\u001e2mSND\u0017J\u001c4p\u001fB$\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u00055\u0005\u0003BAH\u00033k!!!%\u000b\t\u0005M\u0015QS\u0001\u0005Y\u0006twM\u0003\u0002\u0002\u0018\u0006!!.\u0019<b\u0013\ry\u0016\u0011S\u0001\u0007gR\u0014\u0018N\\4\u0002\u0011!\f7\u000f[\"pI\u0016,\"!!)\u0011\u0007M\u000b\u0019+C\u0002\u0002&R\u00131!\u00138u\u0003\u0019)\u0017/^1mgR!\u00111IAV\u0011\u001d\tik\ra\u0001\u0003_\u000b\u0011a\u001c\t\u0004\'\u0006E\u0016bAAZ)\n\u0019\u0011I\\=\u0002\u000b\u0005\u0004\b\u000f\\=\u00151\u0005m\u0011\u0011XA^\u0003{\u000by,!1\u0002D\u0006\u0015\u0017qYAe\u0003\u0017\fi\r\u0003\u0005\u00026Q\u0002\n\u00111\u0001^\u0011!\ti\u0004\u000eI\u0001\u0002\u0004i\u0006\u0002CA&iA\u0005\t\u0019\u00012\t\u0011\u0005MC\u0007%AA\u0002\u0019D\u0001\"a\u00175!\u0003\u0005\r\u0001\u001f\u0005\t\u0003G\"\u0004\u0013!a\u0001M\"A\u0011\u0011\u000e\u001b\u0011\u0002\u0003\u0007a\r\u0003\u0005\u0002pQ\u0002\n\u00111\u0001g\u0011!\t)\b\u000eI\u0001\u0002\u00041\u0007\u0002CA>iA\u0005\t\u0019\u00014\t\u0013\u0005\rE\u0007%AA\u0002\u0005=\u0011aD1qa2LH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0005\u0005M\'fA/\u0002V.\u0012\u0011q\u001b\t\u0005\u00033\f\u0019/\u0004\u0002\u0002\\*!\u0011Q\\Ap\u0003%)hn\u00195fG.,GMC\u0002\u0002bR\u000b!\"\u00198o_R\fG/[8o\u0013\u0011\t)/a7\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00133\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012\u001aTCAAwU\r\u0011\u0017Q[\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%iU\u0011\u00111\u001f\u0016\u0004M\u0006U\u0017aD1qa2LH\u0005Z3gCVdG\u000fJ\u001b\u0016\u0005\u0005e(f\u0001=\u0002V\u0006y\u0011\r\u001d9ms\u0012\"WMZ1vYR$c\'A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00138\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012B\u0014aD1qa2LH\u0005Z3gCVdG\u000fJ\u001d\u0002!\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uIE\u0002\u0014\u0001E1qa2LH\u0005Z3gCVdG\u000fJ\u00192+\t\u0011IA\u000b\u0003\u0002\u0010\u0005U\u0017\u0001\u0003\u0013d_:$XM\u001c;\u0016\u0005\t=\u0001C\u0002B\t\u00053\u0011yB\u0004\u0003\u0003\u0014\t]ab\u00016\u0003\u0016%\tQ+\u0003\u0002q)&!!1\u0004B\u000f\u0005\r\u0019V-\u001d\u0006\u0003aR\u0003ra\u0015B\u0011\u0003\u001b\u000by+C\u0002\u0003$Q\u0013a\u0001V;qY\u0016\u0014\u0014!\u00035bgR\u000b\'oZ3u)\u0011\u0011ICa\f\u0011\u0007e\u0013Y#C\u0002\u0003.1\u0013\u0011A\u0011\u0005\u0007\u0005c\t\u0005\u0019A=\u0002\rQ\f\'oZ3uQ\r\t%Q\u0007\t\u00043\n]\u0012b\u0001B\u001d\u0019\nQ1\u000f\u001e:jGR\u0004XO]3)\u0007\u0001\u0011i\u0004E\u0002Z\u0005\u007fI1A!\u0011M\u0005!!\u0017\r^1usB,\u0017AB\'pIVdW\r\u0005\u0002|\u0007N\u00111I\u0015\u000b\u0003\u0005\u000b\n!\"\u00197m)\u0006\u0014x-\u001a;t\u0003-\tG\u000e\u001c+be\u001e,Go\u001d\u0011\u00151\u0005m!\u0011\u000bB*\u0005+\u00129F!\u0017\u0003\\\tu#q\fB1\u0005G\u0012)\u0007\u0003\u0004\u00026\u001d\u0003\r!\u0018\u0005\u0007\u0003{9\u0005\u0019A/\t\r\u0005-s\t1\u0001c\u0011\u0019\t\u0019f\u0012a\u0001M\"1\u00111L$A\u0002aDa!a\u0019H\u0001\u00041\u0007BBA5\u000f\u0002\u0007a\r\u0003\u0004\u0002p\u001d\u0003\rA\u001a\u0005\u0007\u0003k:\u0005\u0019\u00014\t\r\u0005mt\t1\u0001g\u0011\u001d\t\u0019i\u0012a\u0001\u0003\u001f\tq!\u001e8baBd\u0017\u0010\u0006\u0003\u0003l\t]\u0004#B*\u0003n\tE\u0014b\u0001B8)\n!1k\\7f!=\u0019&1O/^E\u001aDhM\u001a4gM\u0006=\u0011b\u0001B;)\n9A+\u001e9mKF\n\u0004bBAW\u0011\u0002\u0007\u00111\u0004
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               org/sireum/project/Target$Type
   #17 = Class              #16           // org/sireum/project/Target$Type
   #18 = Utf8               org/sireum/project/Target
   #19 = Class              #18           // org/sireum/project/Target
   #20 = Utf8               Type
   #21 = Utf8               hashCode
   #22 = Utf8               I
   #23 = Utf8               $content
   #24 = Utf8               Lscala/collection/immutable/Seq;
   #25 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #26 = Utf8               _id
   #27 = Utf8               Ljava/lang/String;
   #28 = Utf8               _basePath
   #29 = Utf8               _bsubPathOpt
   #30 = Utf8               Z
   #31 = Utf8               _subPathOpt
   #32 = Utf8               _deps
   #33 = Utf8               Lorg/sireum/IS;
   #34 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
   #35 = Utf8               _targets
   #36 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;
   #37 = Utf8               _ivyDeps
   #38 = Utf8               _sources
   #39 = Utf8               _resources
   #40 = Utf8               _testSources
   #41 = Utf8               _testResources
   #42 = Utf8               _bpublishInfoOpt
   #43 = Utf8               _publishInfoOpt
   #44 = Utf8               Lorg/sireum/project/PublishInfo;
   #45 = Utf8               bitmap$0
   #46 = Utf8               B
   #47 = Utf8               unapply
   #48 = Utf8               (Lorg/sireum/project/Module;)Lscala/Some;
   #49 = Utf8               (Lorg/sireum/project/Module;)Lscala/Some<Lscala/Tuple11<Lorg/sireum/String;Lorg/sireum/String;Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;>;>;
   #50 = Utf8               o
   #51 = Utf8               org/sireum/project/Module$
   #52 = Class              #51           // org/sireum/project/Module$
   #53 = Utf8               MODULE$
   #54 = Utf8               Lorg/sireum/project/Module$;
   #55 = NameAndType        #53:#54       // MODULE$:Lorg/sireum/project/Module$;
   #56 = Fieldref           #52.#55       // org/sireum/project/Module$.MODULE$:Lorg/sireum/project/Module$;
   #57 = NameAndType        #47:#48       // unapply:(Lorg/sireum/project/Module;)Lscala/Some;
   #58 = Methodref          #52.#57       // org/sireum/project/Module$.unapply:(Lorg/sireum/project/Module;)Lscala/Some;
   #59 = Utf8               Lorg/sireum/project/Module;
   #60 = Utf8               allTargets
   #61 = Utf8               ()Lorg/sireum/IS;
   #62 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;
   #63 = NameAndType        #60:#61       // allTargets:()Lorg/sireum/IS;
   #64 = Methodref          #52.#63       // org/sireum/project/Module$.allTargets:()Lorg/sireum/IS;
   #65 = Utf8               hash
   #66 = Utf8               ()Lorg/sireum/Z;
   #67 = Utf8               hash$
   #68 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #69 = NameAndType        #67:#68       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #70 = InterfaceMethodref #6.#69        // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #71 = Utf8               this
   #72 = Utf8               $cannotMixImmutableAndMutable
   #73 = Utf8               ()Lscala/runtime/Nothing$;
   #74 = Utf8               org/sireum/Immutable
   #75 = Class              #74           // org/sireum/Immutable
   #76 = Utf8               $cannotMixImmutableAndMutable$
   #77 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #78 = NameAndType        #76:#77       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #79 = InterfaceMethodref #75.#78       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #80 = Utf8               $hasEquals
   #81 = Utf8               ()Z
   #82 = Utf8               $hasEquals$
   #83 = Utf8               (Lorg/sireum/Immutable;)Z
   #84 = NameAndType        #82:#83       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #85 = InterfaceMethodref #75.#84       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #86 = Utf8               $hasString
   #87 = Utf8               $hasString$
   #88 = NameAndType        #87:#83       // $hasString$:(Lorg/sireum/Immutable;)Z
   #89 = InterfaceMethodref #75.#88       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #90 = Utf8               $clone
   #91 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #92 = Utf8               org/sireum/$internal/ImmutableMarker
   #93 = Class              #92           // org/sireum/$internal/ImmutableMarker
   #94 = Utf8               $clone$
   #95 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #96 = NameAndType        #94:#95       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #97 = InterfaceMethodref #93.#96       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #98 = Utf8               id
   #99 = Utf8               ()Ljava/lang/String;
  #100 = NameAndType        #26:#27       // _id:Ljava/lang/String;
  #101 = Fieldref           #2.#100       // org/sireum/project/Module._id:Ljava/lang/String;
  #102 = Utf8               getId
  #103 = Utf8               basePath
  #104 = NameAndType        #28:#27       // _basePath:Ljava/lang/String;
  #105 = Fieldref           #2.#104       // org/sireum/project/Module._basePath:Ljava/lang/String;
  #106 = Utf8               getBasePath
  #107 = Utf8               subPathOpt
  #108 = Utf8               ()Lorg/sireum/Option;
  #109 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/String;>;
  #110 = NameAndType        #29:#30       // _bsubPathOpt:Z
  #111 = Fieldref           #2.#110       // org/sireum/project/Module._bsubPathOpt:Z
  #112 = Utf8               org/sireum/None$
  #113 = Class              #112          // org/sireum/None$
  #114 = Utf8               Lorg/sireum/None$;
  #115 = NameAndType        #53:#114      // MODULE$:Lorg/sireum/None$;
  #116 = Fieldref           #113.#115     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #117 = Utf8               apply
  #118 = Utf8               ()Lorg/sireum/None;
  #119 = NameAndType        #117:#118     // apply:()Lorg/sireum/None;
  #120 = Methodref          #113.#119     // org/sireum/None$.apply:()Lorg/sireum/None;
  #121 = Utf8               org/sireum/Some$
  #122 = Class              #121          // org/sireum/Some$
  #123 = Utf8               Lorg/sireum/Some$;
  #124 = NameAndType        #53:#123      // MODULE$:Lorg/sireum/Some$;
  #125 = Fieldref           #122.#124     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #126 = Utf8               org/sireum/String
  #127 = Class              #126          // org/sireum/String
  #128 = NameAndType        #31:#27       // _subPathOpt:Ljava/lang/String;
  #129 = Fieldref           #2.#128       // org/sireum/project/Module._subPathOpt:Ljava/lang/String;
  #130 = Utf8               <init>
  #131 = Utf8               (Ljava/lang/String;)V
  #132 = NameAndType        #130:#131     // "<init>":(Ljava/lang/String;)V
  #133 = Methodref          #127.#132     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #134 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #135 = NameAndType        #117:#134     // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #136 = Methodref          #122.#135     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #137 = Utf8               getSubPathOpt
  #138 = NameAndType        #107:#108     // subPathOpt:()Lorg/sireum/Option;
  #139 = Methodref          #2.#138       // org/sireum/project/Module.subPathOpt:()Lorg/sireum/Option;
  #140 = Utf8               deps
  #141 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;
  #142 = NameAndType        #32:#33       // _deps:Lorg/sireum/IS;
  #143 = Fieldref           #2.#142       // org/sireum/project/Module._deps:Lorg/sireum/IS;
  #144 = Utf8               getDeps
  #145 = Utf8               targets
  #146 = NameAndType        #35:#33       // _targets:Lorg/sireum/IS;
  #147 = Fieldref           #2.#146       // org/sireum/project/Module._targets:Lorg/sireum/IS;
  #148 = Utf8               getTargets
  #149 = Utf8               ivyDeps
  #150 = NameAndType        #37:#33       // _ivyDeps:Lorg/sireum/IS;
  #151 = Fieldref           #2.#150       // org/sireum/project/Module._ivyDeps:Lorg/sireum/IS;
  #152 = Utf8               getIvyDeps
  #153 = Utf8               sources
  #154 = NameAndType        #38:#33       // _sources:Lorg/sireum/IS;
  #155 = Fieldref           #2.#154       // org/sireum/project/Module._sources:Lorg/sireum/IS;
  #156 = Utf8               getSources
  #157 = Utf8               resources
  #158 = NameAndType        #39:#33       // _resources:Lorg/sireum/IS;
  #159 = Fieldref           #2.#158       // org/sireum/project/Module._resources:Lorg/sireum/IS;
  #160 = Utf8               getResources
  #161 = Utf8               testSources
  #162 = NameAndType        #40:#33       // _testSources:Lorg/sireum/IS;
  #163 = Fieldref           #2.#162       // org/sireum/project/Module._testSources:Lorg/sireum/IS;
  #164 = Utf8               getTestSources
  #165 = Utf8               testResources
  #166 = NameAndType        #41:#33       // _testResources:Lorg/sireum/IS;
  #167 = Fieldref           #2.#166       // org/sireum/project/Module._testResources:Lorg/sireum/IS;
  #168 = Utf8               getTestResources
  #169 = Utf8               publishInfoOpt
  #170 = Utf8               ()Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;
  #171 = NameAndType        #42:#30       // _bpublishInfoOpt:Z
  #172 = Fieldref           #2.#171       // org/sireum/project/Module._bpublishInfoOpt:Z
  #173 = NameAndType        #43:#44       // _publishInfoOpt:Lorg/sireum/project/PublishInfo;
  #174 = Fieldref           #2.#173       // org/sireum/project/Module._publishInfoOpt:Lorg/sireum/project/PublishInfo;
  #175 = Utf8               getPublishInfoOpt
  #176 = NameAndType        #169:#108     // publishInfoOpt:()Lorg/sireum/Option;
  #177 = Methodref          #2.#176       // org/sireum/project/Module.publishInfoOpt:()Lorg/sireum/Option;
  #178 = Utf8               toString
  #179 = NameAndType        #86:#81       // $hasString:()Z
  #180 = Methodref          #2.#179       // org/sireum/project/Module.$hasString:()Z
  #181 = Utf8               string$
  #182 = Utf8               (Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #183 = NameAndType        #181:#182     // string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #184 = InterfaceMethodref #6.#183       // org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
  #185 = Utf8               java/lang/StringBuilder
  #186 = Class              #185          // java/lang/StringBuilder
  #187 = Utf8               ()V
  #188 = NameAndType        #130:#187     // "<init>":()V
  #189 = Methodref          #186.#188     // java/lang/StringBuilder."<init>":()V
  #190 = Utf8               Module
  #191 = String             #190          // Module
  #192 = Utf8               append
  #193 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #194 = NameAndType        #192:#193     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #195 = Methodref          #186.#194     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #196 = Utf8               (C)Ljava/lang/StringBuilder;
  #197 = NameAndType        #192:#196     // append:(C)Ljava/lang/StringBuilder;
  #198 = Methodref          #186.#197     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #199 = Utf8               org/sireum/String$
  #200 = Class              #199          // org/sireum/String$
  #201 = Utf8               Lorg/sireum/String$;
  #202 = NameAndType        #53:#201      // MODULE$:Lorg/sireum/String$;
  #203 = Fieldref           #200.#202     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #204 = NameAndType        #98:#99       // id:()Ljava/lang/String;
  #205 = Methodref          #2.#204       // org/sireum/project/Module.id:()Ljava/lang/String;
  #206 = Utf8               escape
  #207 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #208 = NameAndType        #206:#207     // escape:(Ljava/lang/Object;)Ljava/lang/String;
  #209 = Methodref          #200.#208     // org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
  #210 = Utf8               ,
  #211 = String             #210          // ,
  #212 = NameAndType        #103:#99      // basePath:()Ljava/lang/String;
  #213 = Methodref          #2.#212       // org/sireum/project/Module.basePath:()Ljava/lang/String;
  #214 = NameAndType        #140:#61      // deps:()Lorg/sireum/IS;
  #215 = Methodref          #2.#214       // org/sireum/project/Module.deps:()Lorg/sireum/IS;
  #216 = NameAndType        #145:#61      // targets:()Lorg/sireum/IS;
  #217 = Methodref          #2.#216       // org/sireum/project/Module.targets:()Lorg/sireum/IS;
  #218 = NameAndType        #149:#61      // ivyDeps:()Lorg/sireum/IS;
  #219 = Methodref          #2.#218       // org/sireum/project/Module.ivyDeps:()Lorg/sireum/IS;
  #220 = NameAndType        #153:#61      // sources:()Lorg/sireum/IS;
  #221 = Methodref          #2.#220       // org/sireum/project/Module.sources:()Lorg/sireum/IS;
  #222 = NameAndType        #157:#61      // resources:()Lorg/sireum/IS;
  #223 = Methodref          #2.#222       // org/sireum/project/Module.resources:()Lorg/sireum/IS;
  #224 = NameAndType        #161:#61      // testSources:()Lorg/sireum/IS;
  #225 = Methodref          #2.#224       // org/sireum/project/Module.testSources:()Lorg/sireum/IS;
  #226 = NameAndType        #165:#61      // testResources:()Lorg/sireum/IS;
  #227 = Methodref          #2.#226       // org/sireum/project/Module.testResources:()Lorg/sireum/IS;
  #228 = NameAndType        #178:#99      // toString:()Ljava/lang/String;
  #229 = Methodref          #186.#228     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #230 = Utf8               sb
  #231 = Utf8               Ljava/lang/StringBuilder;
  #232 = Utf8               java/lang/String
  #233 = Class              #232          // java/lang/String
  #234 = Utf8               string
  #235 = Methodref          #2.#228       // org/sireum/project/Module.toString:()Ljava/lang/String;
  #236 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #237 = NameAndType        #117:#236     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #238 = Methodref          #200.#237     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #239 = Utf8               hashCode$lzycompute
  #240 = Utf8               ()I
  #241 = NameAndType        #45:#46       // bitmap$0:B
  #242 = Fieldref           #2.#241       // org/sireum/project/Module.bitmap$0:B
  #243 = NameAndType        #80:#81       // $hasEquals:()Z
  #244 = Methodref          #2.#243       // org/sireum/project/Module.$hasEquals:()Z
  #245 = NameAndType        #21:#240      // hashCode:()I
  #246 = Methodref          #4.#245       // java/lang/Object.hashCode:()I
  #247 = Utf8               scala/package$
  #248 = Class              #247          // scala/package$
  #249 = Utf8               Lscala/package$;
  #250 = NameAndType        #53:#249      // MODULE$:Lscala/package$;
  #251 = Fieldref           #248.#250     // scala/package$.MODULE$:Lscala/package$;
  #252 = Utf8               Seq
  #253 = Utf8               ()Lscala/collection/immutable/Seq$;
  #254 = NameAndType        #252:#253     // Seq:()Lscala/collection/immutable/Seq$;
  #255 = Methodref          #248.#254     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #256 = Utf8               scala/runtime/ScalaRunTime$
  #257 = Class              #256          // scala/runtime/ScalaRunTime$
  #258 = Utf8               Lscala/runtime/ScalaRunTime$;
  #259 = NameAndType        #53:#258      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #260 = Fieldref           #257.#259     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #261 = Utf8               getClass
  #262 = Utf8               ()Ljava/lang/Class;
  #263 = NameAndType        #261:#262     // getClass:()Ljava/lang/Class;
  #264 = Methodref          #2.#263       // org/sireum/project/Module.getClass:()Ljava/lang/Class;
  #265 = Utf8               java/lang/Class
  #266 = Class              #265          // java/lang/Class
  #267 = Utf8               getName
  #268 = NameAndType        #267:#99      // getName:()Ljava/lang/String;
  #269 = Methodref          #266.#268     // java/lang/Class.getName:()Ljava/lang/String;
  #270 = Utf8               genericWrapArray
  #271 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #272 = NameAndType        #270:#271     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #273 = Methodref          #257.#272     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #274 = Utf8               scala/collection/immutable/Seq$
  #275 = Class              #274          // scala/collection/immutable/Seq$
  #276 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #277 = NameAndType        #117:#276     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #278 = Methodref          #275.#277     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #279 = Utf8               scala/collection/Seq
  #280 = Class              #279          // scala/collection/Seq
  #281 = InterfaceMethodref #280.#245     // scala/collection/Seq.hashCode:()I
  #282 = NameAndType        #21:#22       // hashCode:I
  #283 = Fieldref           #2.#282       // org/sireum/project/Module.hashCode:I
  #284 = Utf8               java/lang/Throwable
  #285 = Class              #284          // java/lang/Throwable
  #286 = NameAndType        #239:#240     // hashCode$lzycompute:()I
  #287 = Methodref          #2.#286       // org/sireum/project/Module.hashCode$lzycompute:()I
  #288 = Utf8               equals
  #289 = Utf8               (Ljava/lang/Object;)Z
  #290 = NameAndType        #288:#289     // equals:(Ljava/lang/Object;)Z
  #291 = Methodref          #4.#290       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #292 = Methodref          #2.#245       // org/sireum/project/Module.hashCode:()I
  #293 = Utf8               Ljava/lang/Object;
  #294 = Utf8               org/sireum/Option
  #295 = Class              #294          // org/sireum/Option
  #296 = Utf8               org/sireum/IS
  #297 = Class              #296          // org/sireum/IS
  #298 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
  #299 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;)Lorg/sireum/project/Module;
  #300 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)V
  #301 = NameAndType        #130:#300     // "<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)V
  #302 = Methodref          #2.#301       // org/sireum/project/Module."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)V
  #303 = Utf8               Lorg/sireum/Option;
  #304 = Utf8               apply$default$1
  #305 = Utf8               apply$default$2
  #306 = Utf8               apply$default$3
  #307 = Utf8               apply$default$4
  #308 = Utf8               apply$default$5
  #309 = Utf8               apply$default$6
  #310 = Utf8               apply$default$7
  #311 = Utf8               apply$default$8
  #312 = Utf8               apply$default$9
  #313 = Utf8               apply$default$10
  #314 = Utf8               apply$default$11
  #315 = Utf8               $content$lzycompute
  #316 = Utf8               ()Lscala/collection/immutable/Seq;
  #317 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #318 = Utf8               scala/Tuple2
  #319 = Class              #318          // scala/Tuple2
  #320 = Utf8               type
  #321 = String             #320          // type
  #322 = Utf8               List
  #323 = Utf8               ()Lscala/collection/immutable/List$;
  #324 = NameAndType        #322:#323     // List:()Lscala/collection/immutable/List$;
  #325 = Methodref          #248.#324     // scala/package$.List:()Lscala/collection/immutable/List$;
  #326 = Utf8               org
  #327 = String             #326          // org
  #328 = Utf8               sireum
  #329 = String             #328          // sireum
  #330 = Utf8               project
  #331 = String             #330          // project
  #332 = Utf8               [Ljava/lang/Object;
  #333 = Class              #332          // "[Ljava/lang/Object;"
  #334 = Utf8               wrapRefArray
  #335 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #336 = NameAndType        #334:#335     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #337 = Methodref          #257.#336     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #338 = Utf8               scala/collection/immutable/List$
  #339 = Class              #338          // scala/collection/immutable/List$
  #340 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #341 = NameAndType        #117:#340     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #342 = Methodref          #339.#341     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #343 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #344 = NameAndType        #130:#343     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #345 = Methodref          #319.#344     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #346 = String             #98           // id
  #347 = String             #103          // basePath
  #348 = String             #107          // subPathOpt
  #349 = String             #140          // deps
  #350 = String             #145          // targets
  #351 = String             #149          // ivyDeps
  #352 = String             #153          // sources
  #353 = String             #157          // resources
  #354 = String             #161          // testSources
  #355 = String             #165          // testResources
  #356 = String             #169          // publishInfoOpt
  #357 = Utf8               scala/collection/immutable/Seq
  #358 = Class              #357          // scala/collection/immutable/Seq
  #359 = NameAndType        #23:#24       // $content:Lscala/collection/immutable/Seq;
  #360 = Fieldref           #2.#359       // org/sireum/project/Module.$content:Lscala/collection/immutable/Seq;
  #361 = NameAndType        #315:#316     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #362 = Methodref          #2.#361       // org/sireum/project/Module.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #363 = Utf8               hasTarget
  #364 = Utf8               (Lorg/sireum/project/Target$Type;)Z
  #365 = Utf8               target
  #366 = Utf8               org/sireum/ops/ISZOps$
  #367 = Class              #366          // org/sireum/ops/ISZOps$
  #368 = Utf8               Lorg/sireum/ops/ISZOps$;
  #369 = NameAndType        #53:#368      // MODULE$:Lorg/sireum/ops/ISZOps$;
  #370 = Fieldref           #367.#369     // org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
  #371 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #372 = NameAndType        #117:#371     // apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #373 = Methodref          #367.#372     // org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #374 = Utf8               org/sireum/ops/ISZOps
  #375 = Class              #374          // org/sireum/ops/ISZOps
  #376 = Utf8               contains
  #377 = NameAndType        #376:#289     // contains:(Ljava/lang/Object;)Z
  #378 = Methodref          #375.#377     // org/sireum/ops/ISZOps.contains:(Ljava/lang/Object;)Z
  #379 = Utf8               Lorg/sireum/project/Target$Type;
  #380 = Utf8               ()Ljava/lang/Object;
  #381 = NameAndType        #90:#91       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #382 = Methodref          #2.#381       // org/sireum/project/Module.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #383 = Utf8               $anonfun$_subPathOpt$1
  #384 = Utf8               value
  #385 = NameAndType        #384:#99      // value:()Ljava/lang/String;
  #386 = Methodref          #127.#385     // org/sireum/String.value:()Ljava/lang/String;
  #387 = Utf8               $anonfun$_publishInfoOpt$1
  #388 = Utf8               ()Lorg/sireum/project/PublishInfo;
  #389 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;)V
  #390 = Utf8               __id
  #391 = Utf8               __basePath
  #392 = Utf8               __subPathOpt
  #393 = Utf8               __deps
  #394 = Utf8               __targets
  #395 = Utf8               __ivyDeps
  #396 = Utf8               __sources
  #397 = Utf8               __resources
  #398 = Utf8               __testSources
  #399 = Utf8               __testResources
  #400 = Utf8               __publishInfoOpt
  #401 = Methodref          #4.#188       // java/lang/Object."<init>":()V
  #402 = Utf8               $init$
  #403 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #404 = NameAndType        #402:#403     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #405 = InterfaceMethodref #93.#404      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #406 = Utf8               (Lorg/sireum/Immutable;)V
  #407 = NameAndType        #402:#406     // $init$:(Lorg/sireum/Immutable;)V
  #408 = InterfaceMethodref #75.#407      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #409 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #410 = NameAndType        #402:#409     // $init$:(Lorg/sireum/DatatypeSig;)V
  #411 = InterfaceMethodref #6.#410       // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #412 = Utf8               isEmpty
  #413 = NameAndType        #412:#81      // isEmpty:()Z
  #414 = InterfaceMethodref #295.#413     // org/sireum/Option.isEmpty:()Z
  #415 = MethodType         #380          //  ()Ljava/lang/Object;
  #416 = Utf8               $anonfun$_subPathOpt$1$adapted
  #417 = NameAndType        #416:#380     // $anonfun$_subPathOpt$1$adapted:()Ljava/lang/Object;
  #418 = Methodref          #2.#417       // org/sireum/project/Module.$anonfun$_subPathOpt$1$adapted:()Ljava/lang/Object;
  #419 = MethodHandle       6:#418        // REF_invokeStatic org/sireum/project/Module.$anonfun$_subPathOpt$1$adapted:()Ljava/lang/Object;
  #420 = Integer            1
  #421 = Utf8               java/lang/invoke/LambdaMetafactory
  #422 = Class              #421          // java/lang/invoke/LambdaMetafactory
  #423 = Utf8               altMetafactory
  #424 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #425 = NameAndType        #423:#424     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #426 = Methodref          #422.#425     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #427 = MethodHandle       6:#426        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #428 = Utf8               ()Lscala/Function0;
  #429 = NameAndType        #117:#428     // apply:()Lscala/Function0;
  #430 = InvokeDynamic      #0:#429       // #0:apply:()Lscala/Function0;
  #431 = Utf8               getOrElse
  #432 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #433 = NameAndType        #431:#432     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #434 = InterfaceMethodref #295.#433     // org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #435 = NameAndType        #387:#388     // $anonfun$_publishInfoOpt$1:()Lorg/sireum/project/PublishInfo;
  #436 = Methodref          #2.#435       // org/sireum/project/Module.$anonfun$_publishInfoOpt$1:()Lorg/sireum/project/PublishInfo;
  #437 = MethodHandle       6:#436        // REF_invokeStatic org/sireum/project/Module.$anonfun$_publishInfoOpt$1:()Lorg/sireum/project/PublishInfo;
  #438 = MethodType         #388          //  ()Lorg/sireum/project/PublishInfo;
  #439 = Integer            5
  #440 = InvokeDynamic      #1:#429       // #1:apply:()Lscala/Function0;
  #441 = Utf8               org/sireum/project/PublishInfo
  #442 = Class              #441          // org/sireum/project/PublishInfo
  #443 = NameAndType        #383:#99      // $anonfun$_subPathOpt$1:()Ljava/lang/String;
  #444 = Methodref          #2.#443       // org/sireum/project/Module.$anonfun$_subPathOpt$1:()Ljava/lang/String;
  #445 = Utf8               $deserializeLambda$
  #446 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #447 = Utf8               scala/runtime/LambdaDeserialize
  #448 = Class              #447          // scala/runtime/LambdaDeserialize
  #449 = Utf8               bootstrap
  #450 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #451 = NameAndType        #449:#450     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #452 = Methodref          #448.#451     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #453 = MethodHandle       6:#452        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #454 = Utf8               lambdaDeserialize
  #455 = NameAndType        #454:#446     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #456 = InvokeDynamic      #2:#455       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #457 = Utf8               Signature
  #458 = Utf8               Code
  #459 = Utf8               LocalVariableTable
  #460 = Utf8               MethodParameters
  #461 = Utf8               LineNumberTable
  #462 = Utf8               StackMapTable
  #463 = Utf8               InnerClasses
  #464 = Utf8               SourceFile
  #465 = Utf8               RuntimeVisibleAnnotations
  #466 = Utf8               BootstrapMethods
  #467 = Utf8               ScalaInlineInfo
  #468 = Utf8               ScalaSig
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #25                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final java.lang.String _id;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _basePath;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _bsubPathOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String _subPathOpt;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _deps;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> _targets;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #36                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _ivyDeps;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _sources;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _resources;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _testSources;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.String> _testResources;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  private final boolean _bpublishInfoOpt;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final org.sireum.project.PublishInfo _publishInfoOpt;
    descriptor: Lorg/sireum/project/PublishInfo;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static scala.Some<scala.Tuple11<org.sireum.String, org.sireum.String, org.sireum.Option<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.Option<org.sireum.project.PublishInfo>>> unapply(org.sireum.project.Module);
    descriptor: (Lorg/sireum/project/Module;)Lscala/Some;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #56                 // Field org/sireum/project/Module$.MODULE$:Lorg/sireum/project/Module$;
         3: aload_0
         4: invokevirtual #58                 // Method org/sireum/project/Module$.unapply:(Lorg/sireum/project/Module;)Lscala/Some;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/project/Module;
    Signature: #49                          // (Lorg/sireum/project/Module;)Lscala/Some<Lscala/Tuple11<Lorg/sireum/String;Lorg/sireum/String;Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  public static org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> allTargets();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #56                 // Field org/sireum/project/Module$.MODULE$:Lorg/sireum/project/Module$;
         3: invokevirtual #64                 // Method org/sireum/project/Module$.allTargets:()Lorg/sireum/IS;
         6: areturn
    Signature: #62                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #85                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #89                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #97                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public java.lang.String id();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field _id:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public java.lang.String getId();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field _id:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public java.lang.String basePath();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #105                // Field _basePath:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public java.lang.String getBasePath();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #105                // Field _basePath:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public org.sireum.Option<org.sireum.String> subPathOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field _bsubPathOpt:Z
         4: ifeq          16
         7: getstatic     #116                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #120                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          33
        16: getstatic     #125                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: new           #127                // class org/sireum/String
        22: dup
        23: aload_0
        24: getfield      #129                // Field _subPathOpt:Ljava/lang/String;
        27: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        30: invokevirtual #136                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/project/Module;
    Signature: #109                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.String> getSubPathOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #109                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> deps();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #143                // Field _deps:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getDeps();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #143                // Field _deps:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> targets();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #147                // Field _targets:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #62                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> getTargets();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #147                // Field _targets:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #62                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> ivyDeps();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #151                // Field _ivyDeps:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getIvyDeps();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #151                // Field _ivyDeps:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> sources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #155                // Field _sources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getSources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #155                // Field _sources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> resources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #159                // Field _resources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getResources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #159                // Field _resources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> testSources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #163                // Field _testSources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getTestSources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #163                // Field _testSources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> testResources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #167                // Field _testResources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> getTestResources();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #167                // Field _testResources:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.project.PublishInfo> publishInfoOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #172                // Field _bpublishInfoOpt:Z
         4: ifeq          16
         7: getstatic     #116                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        10: invokevirtual #120                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        13: goto          26
        16: getstatic     #125                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        19: aload_0
        20: getfield      #174                // Field _publishInfoOpt:Lorg/sireum/project/PublishInfo;
        23: invokevirtual #136                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/project/Module;
    Signature: #170                         // ()Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;

  public org.sireum.Option<org.sireum.project.PublishInfo> getPublishInfoOpt();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #170                         // ()Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #180                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #184                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          296
        14: new           #186                // class java/lang/StringBuilder
        17: dup
        18: invokespecial #189                // Method java/lang/StringBuilder."<init>":()V
        21: astore_1
        22: aload_1
        23: ldc           #191                // String Module
        25: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: bipush        40
        32: invokevirtual #198                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        35: pop
        36: aload_1
        37: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: new           #127                // class org/sireum/String
        43: dup
        44: aload_0
        45: invokevirtual #205                // Method id:()Ljava/lang/String;
        48: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        51: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        54: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: pop
        58: aload_1
        59: ldc           #211                // String ,
        61: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: pop
        65: aload_1
        66: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        69: new           #127                // class org/sireum/String
        72: dup
        73: aload_0
        74: invokevirtual #213                // Method basePath:()Ljava/lang/String;
        77: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        80: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
        83: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        86: pop
        87: aload_1
        88: ldc           #211                // String ,
        90: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        93: pop
        94: aload_1
        95: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        98: aload_0
        99: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
       102: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       105: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_1
       110: ldc           #211                // String ,
       112: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       115: pop
       116: aload_1
       117: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       120: aload_0
       121: invokevirtual #215                // Method deps:()Lorg/sireum/IS;
       124: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       127: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: ldc           #211                // String ,
       134: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       137: pop
       138: aload_1
       139: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       142: aload_0
       143: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
       146: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       149: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       152: pop
       153: aload_1
       154: ldc           #211                // String ,
       156: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       159: pop
       160: aload_1
       161: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       164: aload_0
       165: invokevirtual #219                // Method ivyDeps:()Lorg/sireum/IS;
       168: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       171: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       174: pop
       175: aload_1
       176: ldc           #211                // String ,
       178: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       181: pop
       182: aload_1
       183: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       186: aload_0
       187: invokevirtual #221                // Method sources:()Lorg/sireum/IS;
       190: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       193: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       196: pop
       197: aload_1
       198: ldc           #211                // String ,
       200: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       203: pop
       204: aload_1
       205: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       208: aload_0
       209: invokevirtual #223                // Method resources:()Lorg/sireum/IS;
       212: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       215: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: pop
       219: aload_1
       220: ldc           #211                // String ,
       222: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       225: pop
       226: aload_1
       227: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       230: aload_0
       231: invokevirtual #225                // Method testSources:()Lorg/sireum/IS;
       234: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       237: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       240: pop
       241: aload_1
       242: ldc           #211                // String ,
       244: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       247: pop
       248: aload_1
       249: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       252: aload_0
       253: invokevirtual #227                // Method testResources:()Lorg/sireum/IS;
       256: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       259: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       262: pop
       263: aload_1
       264: ldc           #211                // String ,
       266: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       269: pop
       270: aload_1
       271: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       274: aload_0
       275: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
       278: invokevirtual #209                // Method org/sireum/String$.escape:(Ljava/lang/Object;)Ljava/lang/String;
       281: invokevirtual #195                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       284: pop
       285: aload_1
       286: bipush        41
       288: invokevirtual #198                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       291: pop
       292: aload_1
       293: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       296: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 281
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22     274     1    sb   Ljava/lang/StringBuilder;
            0     297     0  this   Lorg/sireum/project/Module;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #180                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #184                // InterfaceMethod org/sireum/DatatypeSig.string$:(Lorg/sireum/DatatypeSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #203                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #235                // Method toString:()Ljava/lang/String;
        21: invokevirtual #238                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/project/Module;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #242                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     179
        15: aload_0
        16: aload_0
        17: invokevirtual #244                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #246                // Method java/lang/Object.hashCode:()I
        27: goto          165
        30: getstatic     #251                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #255                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #260                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: bipush        12
        41: anewarray     #4                  // class java/lang/Object
        44: dup
        45: iconst_0
        46: aload_0
        47: invokevirtual #264                // Method getClass:()Ljava/lang/Class;
        50: invokevirtual #269                // Method java/lang/Class.getName:()Ljava/lang/String;
        53: aastore
        54: dup
        55: iconst_1
        56: new           #127                // class org/sireum/String
        59: dup
        60: aload_0
        61: invokevirtual #205                // Method id:()Ljava/lang/String;
        64: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        67: aastore
        68: dup
        69: iconst_2
        70: new           #127                // class org/sireum/String
        73: dup
        74: aload_0
        75: invokevirtual #213                // Method basePath:()Ljava/lang/String;
        78: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        81: aastore
        82: dup
        83: iconst_3
        84: aload_0
        85: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
        88: aastore
        89: dup
        90: iconst_4
        91: aload_0
        92: invokevirtual #215                // Method deps:()Lorg/sireum/IS;
        95: aastore
        96: dup
        97: iconst_5
        98: aload_0
        99: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
       102: aastore
       103: dup
       104: bipush        6
       106: aload_0
       107: invokevirtual #219                // Method ivyDeps:()Lorg/sireum/IS;
       110: aastore
       111: dup
       112: bipush        7
       114: aload_0
       115: invokevirtual #221                // Method sources:()Lorg/sireum/IS;
       118: aastore
       119: dup
       120: bipush        8
       122: aload_0
       123: invokevirtual #223                // Method resources:()Lorg/sireum/IS;
       126: aastore
       127: dup
       128: bipush        9
       130: aload_0
       131: invokevirtual #225                // Method testSources:()Lorg/sireum/IS;
       134: aastore
       135: dup
       136: bipush        10
       138: aload_0
       139: invokevirtual #227                // Method testResources:()Lorg/sireum/IS;
       142: aastore
       143: dup
       144: bipush        11
       146: aload_0
       147: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
       150: aastore
       151: invokevirtual #273                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       154: invokevirtual #278                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       157: checkcast     #280                // class scala/collection/Seq
       160: invokeinterface #281,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
       165: putfield      #283                // Field hashCode:I
       168: aload_0
       169: aload_0
       170: getfield      #242                // Field bitmap$0:B
       173: iconst_1
       174: ior
       175: i2b
       176: putfield      #242                // Field bitmap$0:B
       179: aload_1
       180: monitorexit
       181: goto          187
       184: aload_1
       185: monitorexit
       186: athrow
       187: aload_0
       188: getfield      #283                // Field hashCode:I
       191: ireturn
      Exception table:
         from    to  target type
             4   179   184   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/project/Module, class org/sireum/project/Module ]
          stack = [ class org/sireum/project/Module ]
        frame_type = 255 /* full_frame */
          offset_delta = 134
          locals = [ class org/sireum/project/Module, class org/sireum/project/Module ]
          stack = [ class org/sireum/project/Module, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     192     0  this   Lorg/sireum/project/Module;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #242                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #287                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #283                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/project/Module;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=16, args_size=2
         0: aload_0
         1: invokevirtual #244                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          425
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          425
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/project/Module
        30: ifeq          416
        33: aload_3
        34: checkcast     #2                  // class org/sireum/project/Module
        37: astore        4
        39: aload_0
        40: invokevirtual #292                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #292                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          412
        55: aload_0
        56: invokevirtual #205                // Method id:()Ljava/lang/String;
        59: aload         4
        61: invokevirtual #205                // Method id:()Ljava/lang/String;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          411
        79: aload         5
        81: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          411
        87: aload_0
        88: invokevirtual #213                // Method basePath:()Ljava/lang/String;
        91: aload         4
        93: invokevirtual #213                // Method basePath:()Ljava/lang/String;
        96: astore        6
        98: dup
        99: ifnonnull     111
       102: pop
       103: aload         6
       105: ifnull        119
       108: goto          411
       111: aload         6
       113: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       116: ifeq          411
       119: aload_0
       120: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
       123: aload         4
       125: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
       128: astore        7
       130: dup
       131: ifnonnull     143
       134: pop
       135: aload         7
       137: ifnull        151
       140: goto          411
       143: aload         7
       145: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       148: ifeq          411
       151: aload_0
       152: invokevirtual #215                // Method deps:()Lorg/sireum/IS;
       155: aload         4
       157: invokevirtual #215                // Method deps:()Lorg/sireum/IS;
       160: astore        8
       162: dup
       163: ifnonnull     175
       166: pop
       167: aload         8
       169: ifnull        183
       172: goto          411
       175: aload         8
       177: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       180: ifeq          411
       183: aload_0
       184: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
       187: aload         4
       189: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
       192: astore        9
       194: dup
       195: ifnonnull     207
       198: pop
       199: aload         9
       201: ifnull        215
       204: goto          411
       207: aload         9
       209: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       212: ifeq          411
       215: aload_0
       216: invokevirtual #219                // Method ivyDeps:()Lorg/sireum/IS;
       219: aload         4
       221: invokevirtual #219                // Method ivyDeps:()Lorg/sireum/IS;
       224: astore        10
       226: dup
       227: ifnonnull     239
       230: pop
       231: aload         10
       233: ifnull        247
       236: goto          411
       239: aload         10
       241: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       244: ifeq          411
       247: aload_0
       248: invokevirtual #221                // Method sources:()Lorg/sireum/IS;
       251: aload         4
       253: invokevirtual #221                // Method sources:()Lorg/sireum/IS;
       256: astore        11
       258: dup
       259: ifnonnull     271
       262: pop
       263: aload         11
       265: ifnull        279
       268: goto          411
       271: aload         11
       273: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       276: ifeq          411
       279: aload_0
       280: invokevirtual #223                // Method resources:()Lorg/sireum/IS;
       283: aload         4
       285: invokevirtual #223                // Method resources:()Lorg/sireum/IS;
       288: astore        12
       290: dup
       291: ifnonnull     303
       294: pop
       295: aload         12
       297: ifnull        311
       300: goto          411
       303: aload         12
       305: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       308: ifeq          411
       311: aload_0
       312: invokevirtual #225                // Method testSources:()Lorg/sireum/IS;
       315: aload         4
       317: invokevirtual #225                // Method testSources:()Lorg/sireum/IS;
       320: astore        13
       322: dup
       323: ifnonnull     335
       326: pop
       327: aload         13
       329: ifnull        343
       332: goto          411
       335: aload         13
       337: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       340: ifeq          411
       343: aload_0
       344: invokevirtual #227                // Method testResources:()Lorg/sireum/IS;
       347: aload         4
       349: invokevirtual #227                // Method testResources:()Lorg/sireum/IS;
       352: astore        14
       354: dup
       355: ifnonnull     367
       358: pop
       359: aload         14
       361: ifnull        375
       364: goto          411
       367: aload         14
       369: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       372: ifeq          411
       375: aload_0
       376: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
       379: aload         4
       381: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
       384: astore        15
       386: dup
       387: ifnonnull     399
       390: pop
       391: aload         15
       393: ifnull        407
       396: goto          411
       399: aload         15
       401: invokevirtual #291                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       404: ifeq          411
       407: iconst_1
       408: goto          412
       411: iconst_0
       412: istore_2
       413: goto          424
       416: goto          419
       419: iconst_0
       420: istore_2
       421: goto          424
       424: iload_2
       425: ireturn
      StackMapTable: number_of_entries = 31
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/project/Module ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String, class java/lang/String, class org/sireum/Option, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/IS, class org/sireum/Option ]
          stack = [ class org/sireum/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/Module, class java/lang/Object, top, class java/lang/Object, class org/sireum/project/Module ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/project/Module, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/project/Module, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     426     0  this   Lorg/sireum/project/Module;
            0     426     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.project.Module apply(java.lang.String, java.lang.String, org.sireum.Option<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.Option<org.sireum.project.PublishInfo>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)Lorg/sireum/project/Module;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=13, locals=12, args_size=12
         0: new           #2                  // class org/sireum/project/Module
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: aload         8
        17: aload         9
        19: aload         10
        21: aload         11
        23: invokespecial #302                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)V
        26: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lorg/sireum/project/Module;
            0      27     1    id   Ljava/lang/String;
            0      27     2 basePath   Ljava/lang/String;
            0      27     3 subPathOpt   Lorg/sireum/Option;
            0      27     4  deps   Lorg/sireum/IS;
            0      27     5 targets   Lorg/sireum/IS;
            0      27     6 ivyDeps   Lorg/sireum/IS;
            0      27     7 sources   Lorg/sireum/IS;
            0      27     8 resources   Lorg/sireum/IS;
            0      27     9 testSources   Lorg/sireum/IS;
            0      27    10 testResources   Lorg/sireum/IS;
            0      27    11 publishInfoOpt   Lorg/sireum/Option;
    Signature: #299                         // (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;)Lorg/sireum/project/Module;
    MethodParameters:
      Name                           Flags
      id                             final
      basePath                       final
      subPathOpt                     final
      deps                           final
      targets                        final
      ivyDeps                        final
      sources                        final
      resources                      final
      testSources                    final
      testResources                  final
      publishInfoOpt                 final

  public java.lang.String apply$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #205                // Method id:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public java.lang.String apply$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #213                // Method basePath:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public org.sireum.Option<org.sireum.String> apply$default$3();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #109                         // ()Lorg/sireum/Option<Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$4();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #215                // Method deps:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> apply$default$5();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #62                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$6();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #219                // Method ivyDeps:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$7();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #221                // Method sources:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$8();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #223                // Method resources:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$9();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #225                // Method testSources:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.String> apply$default$10();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #227                // Method testResources:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #141                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;

  public org.sireum.Option<org.sireum.project.PublishInfo> apply$default$11();
    descriptor: ()Lorg/sireum/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;
    Signature: #170                         // ()Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #242                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     321
        15: aload_0
        16: getstatic     #251                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #255                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #260                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: bipush        12
        27: anewarray     #319                // class scala/Tuple2
        30: dup
        31: iconst_0
        32: new           #319                // class scala/Tuple2
        35: dup
        36: ldc_w         #321                // String type
        39: getstatic     #251                // Field scala/package$.MODULE$:Lscala/package$;
        42: invokevirtual #325                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        45: getstatic     #260                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        48: iconst_4
        49: anewarray     #233                // class java/lang/String
        52: dup
        53: iconst_0
        54: ldc_w         #327                // String org
        57: aastore
        58: dup
        59: iconst_1
        60: ldc_w         #329                // String sireum
        63: aastore
        64: dup
        65: iconst_2
        66: ldc_w         #331                // String project
        69: aastore
        70: dup
        71: iconst_3
        72: ldc           #191                // String Module
        74: aastore
        75: checkcast     #333                // class "[Ljava/lang/Object;"
        78: invokevirtual #337                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        81: invokevirtual #342                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        84: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        87: aastore
        88: dup
        89: iconst_1
        90: new           #319                // class scala/Tuple2
        93: dup
        94: ldc_w         #346                // String id
        97: new           #127                // class org/sireum/String
       100: dup
       101: aload_0
       102: invokevirtual #205                // Method id:()Ljava/lang/String;
       105: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       108: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       111: aastore
       112: dup
       113: iconst_2
       114: new           #319                // class scala/Tuple2
       117: dup
       118: ldc_w         #347                // String basePath
       121: new           #127                // class org/sireum/String
       124: dup
       125: aload_0
       126: invokevirtual #213                // Method basePath:()Ljava/lang/String;
       129: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       132: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       135: aastore
       136: dup
       137: iconst_3
       138: new           #319                // class scala/Tuple2
       141: dup
       142: ldc_w         #348                // String subPathOpt
       145: aload_0
       146: invokevirtual #139                // Method subPathOpt:()Lorg/sireum/Option;
       149: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       152: aastore
       153: dup
       154: iconst_4
       155: new           #319                // class scala/Tuple2
       158: dup
       159: ldc_w         #349                // String deps
       162: aload_0
       163: invokevirtual #215                // Method deps:()Lorg/sireum/IS;
       166: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       169: aastore
       170: dup
       171: iconst_5
       172: new           #319                // class scala/Tuple2
       175: dup
       176: ldc_w         #350                // String targets
       179: aload_0
       180: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
       183: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       186: aastore
       187: dup
       188: bipush        6
       190: new           #319                // class scala/Tuple2
       193: dup
       194: ldc_w         #351                // String ivyDeps
       197: aload_0
       198: invokevirtual #219                // Method ivyDeps:()Lorg/sireum/IS;
       201: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       204: aastore
       205: dup
       206: bipush        7
       208: new           #319                // class scala/Tuple2
       211: dup
       212: ldc_w         #352                // String sources
       215: aload_0
       216: invokevirtual #221                // Method sources:()Lorg/sireum/IS;
       219: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       222: aastore
       223: dup
       224: bipush        8
       226: new           #319                // class scala/Tuple2
       229: dup
       230: ldc_w         #353                // String resources
       233: aload_0
       234: invokevirtual #223                // Method resources:()Lorg/sireum/IS;
       237: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       240: aastore
       241: dup
       242: bipush        9
       244: new           #319                // class scala/Tuple2
       247: dup
       248: ldc_w         #354                // String testSources
       251: aload_0
       252: invokevirtual #225                // Method testSources:()Lorg/sireum/IS;
       255: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       258: aastore
       259: dup
       260: bipush        10
       262: new           #319                // class scala/Tuple2
       265: dup
       266: ldc_w         #355                // String testResources
       269: aload_0
       270: invokevirtual #227                // Method testResources:()Lorg/sireum/IS;
       273: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       276: aastore
       277: dup
       278: bipush        11
       280: new           #319                // class scala/Tuple2
       283: dup
       284: ldc_w         #356                // String publishInfoOpt
       287: aload_0
       288: invokevirtual #177                // Method publishInfoOpt:()Lorg/sireum/Option;
       291: invokespecial #345                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       294: aastore
       295: checkcast     #333                // class "[Ljava/lang/Object;"
       298: invokevirtual #337                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       301: invokevirtual #278                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       304: checkcast     #358                // class scala/collection/immutable/Seq
       307: putfield      #360                // Field $content:Lscala/collection/immutable/Seq;
       310: aload_0
       311: aload_0
       312: getfield      #242                // Field bitmap$0:B
       315: iconst_2
       316: ior
       317: i2b
       318: putfield      #242                // Field bitmap$0:B
       321: aload_1
       322: monitorexit
       323: goto          329
       326: aload_1
       327: monitorexit
       328: athrow
       329: aload_0
       330: getfield      #360                // Field $content:Lscala/collection/immutable/Seq;
       333: areturn
      Exception table:
         from    to  target type
             4   321   326   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 321
          locals = [ class org/sireum/project/Module ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     334     0  this   Lorg/sireum/project/Module;
    Signature: #317                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #242                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #362                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #360                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/project/Module;
    Signature: #317                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public boolean hasTarget(org.sireum.project.Target$Type);
    descriptor: (Lorg/sireum/project/Target$Type;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #370                // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
         3: aload_0
         4: invokevirtual #217                // Method targets:()Lorg/sireum/IS;
         7: invokevirtual #373                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
        10: aload_1
        11: invokevirtual #378                // Method org/sireum/ops/ISZOps.contains:(Ljava/lang/Object;)Z
        14: ireturn
      LineNumberTable:
        line 165: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/project/Module;
            0      15     1 target   Lorg/sireum/project/Target$Type;
    MethodParameters:
      Name                           Flags
      target                         final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #382                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Module;

  public static final java.lang.String $anonfun$_subPathOpt$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: ifnonnull     8
         4: aconst_null
         5: goto          12
         8: aconst_null
         9: invokevirtual #386                // Method org/sireum/String.value:()Ljava/lang/String;
        12: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 153: 8

  public static final org.sireum.project.PublishInfo $anonfun$_publishInfoOpt$1();
    descriptor: ()Lorg/sireum/project/PublishInfo;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 153: 0

  public org.sireum.project.Module(java.lang.String, java.lang.String, org.sireum.Option<org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.IS<org.sireum.Z, org.sireum.String>, org.sireum.Option<org.sireum.project.PublishInfo>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/IS;Lorg/sireum/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=12, args_size=12
         0: aload_0
         1: invokespecial #401                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #405                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #408                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #411                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: aload_1
        18: putfield      #101                // Field _id:Ljava/lang/String;
        21: aload_0
        22: aload_2
        23: putfield      #105                // Field _basePath:Ljava/lang/String;
        26: aload_0
        27: aload_3
        28: invokeinterface #414,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
        33: putfield      #111                // Field _bsubPathOpt:Z
        36: aload_0
        37: aload_3
        38: invokedynamic #430,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        43: invokeinterface #434,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        48: checkcast     #127                // class org/sireum/String
        51: invokevirtual #386                // Method org/sireum/String.value:()Ljava/lang/String;
        54: putfield      #129                // Field _subPathOpt:Ljava/lang/String;
        57: aload_0
        58: aload         4
        60: putfield      #143                // Field _deps:Lorg/sireum/IS;
        63: aload_0
        64: aload         5
        66: putfield      #147                // Field _targets:Lorg/sireum/IS;
        69: aload_0
        70: aload         6
        72: putfield      #151                // Field _ivyDeps:Lorg/sireum/IS;
        75: aload_0
        76: aload         7
        78: putfield      #155                // Field _sources:Lorg/sireum/IS;
        81: aload_0
        82: aload         8
        84: putfield      #159                // Field _resources:Lorg/sireum/IS;
        87: aload_0
        88: aload         9
        90: putfield      #163                // Field _testSources:Lorg/sireum/IS;
        93: aload_0
        94: aload         10
        96: putfield      #167                // Field _testResources:Lorg/sireum/IS;
        99: aload_0
       100: aload         11
       102: invokeinterface #414,  1          // InterfaceMethod org/sireum/Option.isEmpty:()Z
       107: putfield      #172                // Field _bpublishInfoOpt:Z
       110: aload_0
       111: aload         11
       113: invokedynamic #440,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
       118: invokeinterface #434,  2          // InterfaceMethod org/sireum/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       123: checkcast     #442                // class org/sireum/project/PublishInfo
       126: putfield      #174                // Field _publishInfoOpt:Lorg/sireum/project/PublishInfo;
       129: return
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     130     0  this   Lorg/sireum/project/Module;
            0     130     1  __id   Ljava/lang/String;
            0     130     2 __basePath   Ljava/lang/String;
            0     130     3 __subPathOpt   Lorg/sireum/Option;
            0     130     4 __deps   Lorg/sireum/IS;
            0     130     5 __targets   Lorg/sireum/IS;
            0     130     6 __ivyDeps   Lorg/sireum/IS;
            0     130     7 __sources   Lorg/sireum/IS;
            0     130     8 __resources   Lorg/sireum/IS;
            0     130     9 __testSources   Lorg/sireum/IS;
            0     130    10 __testResources   Lorg/sireum/IS;
            0     130    11 __publishInfoOpt   Lorg/sireum/Option;
    Signature: #389                         // (Ljava/lang/String;Ljava/lang/String;Lorg/sireum/Option<Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/String;>;Lorg/sireum/Option<Lorg/sireum/project/PublishInfo;>;)V
    MethodParameters:
      Name                           Flags
      __id                           final
      __basePath                     final
      __subPathOpt                   final
      __deps                         final
      __targets                      final
      __ivyDeps                      final
      __sources                      final
      __resources                    final
      __testSources                  final
      __testResources                final
      __publishInfoOpt               final

  public static final java.lang.Object $anonfun$_subPathOpt$1$adapted();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #127                // class org/sireum/String
         3: dup
         4: invokestatic  #444                // Method $anonfun$_subPathOpt$1:()Ljava/lang/String;
         7: invokespecial #133                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        10: areturn
      LineNumberTable:
        line 153: 0

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #456,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // Type=class org/sireum/project/Target$Type of class org/sireum/project/Target
SourceFile: "Project.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\ted\u0001B%K\u0005EC\u0001\u0002\u0018\u0001\u0003\u0002\u0003\u0006I!\u0018\u0005\tA\u0002\u0011\t\u0011)A\u0005;\"A\u0011\r\u0001B\u0001B\u0003%!\r\u0003\u0005f\u0001\t\u0005\t\u0015!\u0003g\u0011!9\bA!A!\u0002\u0013A\b\"CA\u0002\u0001\t\u0005\t\u0015!\u0003g\u0011%\t)\u0001\u0001B\u0001B\u0003%a\rC\u0005\u0002\b\u0001\u0011\t\u0011)A\u0005M\"I\u0011\u0011\u0002\u0001\u0003\u0002\u0003\u0006IA\u001a\u0005\n\u0003\u0017\u0001!\u0011!Q\u0001\n\u0019D!\"!\u0004\u0001\u0005\u0003\u0005\u000b\u0011BA\b\u0011\u001d\t9\u0002\u0001C\u0001\u00033Aq!a\r\u0001A\u0003%Q\fC\u0004\u00026\u0001!\t!a\u000e\t\u000f\u0005e\u0002\u0001\"\u0001\u00028!9\u00111\b\u0001!\u0002\u0013i\u0006bBA\u001f\u0001\u0011\u0005\u0011q\u0007\u0005\b\u0003\u007f\u0001A\u0011AA\u001c\u0011!\t\t\u0005\u0001Q\u0001\n\u0005\r\u0003bBA%\u0001\u0001\u0006I!\u0018\u0005\b\u0003\u0017\u0002A\u0011AA\'\u0011\u001d\ty\u0005\u0001C\u0001\u0003\u001bBq!!\u0015\u0001A\u0003%a\rC\u0004\u0002T\u0001!\t!!\u0016\t\u000f\u0005]\u0003\u0001\"\u0001\u0002V!9\u0011\u0011\f\u0001!\u0002\u0013A\bbBA.\u0001\u0011\u0005\u0011Q\f\u0005\b\u0003?\u0002A\u0011AA/\u0011\u001d\t\t\u0007\u0001Q\u0001\n\u0019Dq!a\u0019\u0001\t\u0003\t)\u0006C\u0004\u0002f\u0001!\t!!\u0016\t\u000f\u0005\u001d\u0004\u0001)A\u0005M\"9\u0011\u0011\u000e\u0001\u0005\u0002\u0005U\u0003bBA6\u0001\u0011\u0005\u0011Q\u000b\u0005\b\u0003[\u0002\u0001\u0015!\u0003g\u0011\u001d\ty\u0007\u0001C\u0001\u0003+Bq!!\u001d\u0001\t\u0003\t)\u0006C\u0004\u0002t\u0001\u0001\u000b\u0011\u00024\t\u000f\u0005U\u0004\u0001\"\u0001\u0002V!9\u0011q\u000f\u0001\u0005\u0002\u0005U\u0003bBA=\u0001\u0001\u0006IA\u001a\u0005\b\u0003w\u0002A\u0011AA+\u0011\u001d\ti\b\u0001C\u0001\u0003+B\u0001\"a \u0001A\u0003%\u00111\t\u0005\t\u0003\u0003\u0003\u0001\u0015!\u0003\u0002\u0012!9\u00111\u0011\u0001\u0005\u0002\u0005\u0015\u0005bBAD\u0001\u0011\u0005\u0011Q\u0011\u0005\b\u0003\u0013\u0003A\u0011IAF\u0011\u001d\tY\n\u0001C!\u0003oA!\"!(\u0001\u0011\u000b\u0007I\u0011IAP\u0011\u001d\t9\u000b\u0001C!\u0003SCq!!.\u0001\t\u0003\t9\fC\u0005\u0002P\u0002\t\n\u0011\"\u0001\u0002R\"I\u0011q\u001d\u0001\u0012\u0002\u0013\u0005\u0011\u0011\u001b\u0005\n\u0003S\u0004\u0011\u0013!C\u0001\u0003WD\u0011\"a<\u0001#\u0003%\t!!=\t\u0013\u0005U\b!%A\u0005\u0002\u0005]\b\"CA~\u0001E\u0005I\u0011AAy\u0011%\ti\u0010AI\u0001\n\u0003\t\t\u0010C\u0005\u0002\u0000\u0002\t\n\u0011\"\u0001\u0002r\"I!\u0011\u0001\u0001\u0012\u0002\u0013\u0005\u0011\u0011\u001f\u0005\n\u0005\u0007\u0001\u0011\u0013!C\u0001\u0003cD\u0011B!\u0002\u0001#\u0003%\tAa\u0002\t\u0015\t-\u0001\u0001#b\u0001\n\u0003\u0012i\u0001C\u0004\u0003&\u0001!\tAa\n\b\u000f\t\r#\n#\u0001\u0003F\u00191\u0011J\u0013E\u0001\u0005\u000fBq!a\u0006D\t\u0003\u0011I\u0005C\u0005\u0003L\r\u0013\r\u0011\"\u0001\u0002^!9!QJ\"!\u0002\u0013A\bbBA[\u0007\u0012\u0005!q\n\u0005\b\u0005O\u001aE\u0011\u0001B5\u0005\u0019iu\u000eZ;mK*\u00111\nT\u0001\baJ|\'.Z2u\u0015\tie*\u0001\u0004tSJ,W/\u001c\u0006\u0002\u001f\u0006\u0019qN]4\u0004\u0001M\u0019\u0001A\u0015-\u0011\u0005M3V\"\u0001+\u000b\u0003U\u000bQa]2bY\u0006L!a\u0016+\u0003\r\u0005s\u0017PU3g!\tI&,D\u0001M\u0013\tYFJA\u0006ECR\fG/\u001f9f\'&<\u0017\u0001B0`S\u0012\u0004\"!\u00170\n\u0005}c%AB*ue&tw-\u0001\u0006`?\n\f7/\u001a)bi\"\fAbX0tk\n\u0004\u0016\r\u001e5PaR\u00042!W2^\u0013\t!GJ\u0001\u0004PaRLwN\\\u0001\u0007?~#W\r]:\u0011\u0007\u001d\fXL\u0004\u0002i_:\u0011\u0011N\u001c\b\u0003U6l\u0011a\u001b\u0006\u0003YB\u000ba\u0001\u0010:p_Rt\u0014\"A(\n\u00055s\u0015B\u00019M\u0003\u001d\u0001\u0018mY6bO\u0016L!A]:\u0003\u0007%\u001b&,\u0003\u0002uk\na\u0001+Y2lC\u001e,GK]1ji*\u0011a\u000fT\u0001\nI%tG/\u001a:oC2\f\u0011bX0uCJ<W\r^:\u0011\u0007\u001d\f\u0018\u0010\u0005\u0002{}:\u00111\u0010`\u0007\u0002\u0015&\u0011QPS\u0001\u0007)\u0006\u0014x-\u001a;\n\u0007}\f\tA\u0001\u0003UsB,\'BA?K\u0003%yv,\u001b<z\t\u0016\u00048/A\u0005`?N|WO]2fg\u0006Yql\u0018:fg>,(oY3t\u00035yv\f^3tiN{WO]2fg\u0006yql\u0018;fgR\u0014Vm]8ve\u000e,7/\u0001\t`?B,(\r\\5tQ&sgm\\(qiB!\u0011lYA\t!\rY\u00181C\u0005\u0004\u0003+Q%a\u0003)vE2L7\u000f[%oM>\fa\u0001P5oSRtD\u0003GA\u000e\u0003;\ty\"!\t\u0002$\u0005\u0015\u0012qEA\u0015\u0003W\ti#a\f\u00022A\u00111\u0010\u0001\u0005\u000692\u0001\r!\u0018\u0005\u0006A2\u0001\r!\u0018\u0005\u0006C2\u0001\rA\u0019\u0005\u0006K2\u0001\rA\u001a\u0005\u0006o2\u0001\r\u0001\u001f\u0005\u0007\u0003\u0007a\u0001\u0019\u00014\t\r\u0005\u0015A\u00021\u0001g\u0011\u0019\t9\u0001\u0004a\u0001M\"1\u0011\u0011\u0002\u0007A\u0002\u0019Da!a\u0003\r\u0001\u00041\u0007bBA\u0007\u0019\u0001\u0007\u0011qB\u0001\u0004?&$\u0017AA5e+\u0005i\u0016!B4fi&#\u0017!C0cCN,\u0007+\u0019;i\u0003!\u0011\u0017m]3QCRD\u0017aC4fi\n\u000b7/\u001a)bi\"\fAb\u00182tk\n\u0004\u0016\r\u001e5PaR\u00042aUA#\u0013\r\t9\u0005\u0016\u0002\b\u0005>|G.Z1o\u0003-y6/\u001e2QCRDw\n\u001d;\u0002\u0015M,(\rU1uQ>\u0003H/F\u0001c\u000359W\r^*vEB\u000bG\u000f[(qi\u0006)q\fZ3qg\u0006!A-\u001a9t+\u00051\u0017aB4fi\u0012+\u0007o]\u0001\t?R\f\'oZ3ug\u00069A/\u0019:hKR\u001cX#\u0001=\u0002\u0015\u001d,G\u000fV1sO\u0016$8/\u0001\u0005`SZLH)\u001a9t\u0003\u001dIg/\u001f#faN\f!bZ3u\u0013ZLH)\u001a9t\u0003!y6o\\;sG\u0016\u001c\u0018aB:pkJ\u001cWm]\u0001\u000bO\u0016$8k\\;sG\u0016\u001c\u0018AC0sKN|WO]2fg\u0006I!/Z:pkJ\u001cWm]\u0001\rO\u0016$(+Z:pkJ\u001cWm]\u0001\r?R,7\u000f^*pkJ\u001cWm]\u0001\fi\u0016\u001cHoU8ve\u000e,7/\u0001\bhKR$Vm\u001d;T_V\u00148-Z:\u0002\u001d}#Xm\u001d;SKN|WO]2fg\u0006iA/Z:u%\u0016\u001cx.\u001e:dKN\f\u0001cZ3u)\u0016\u001cHOU3t_V\u00148-Z:\u0002!}\u0013\u0007/\u001e2mSND\u0017J\u001c4p\u001fB$\u0018aD0qk\nd\u0017n\u001d5J]\u001a|w\n\u001d;\u0002\u001dA,(\r\\5tQ&sgm\\(qiV\u0011\u0011qB\u0001\u0012O\u0016$\b+\u001e2mSND\u0017J\u001c4p\u001fB$\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u00055\u0005\u0003BAH\u00033k!!!%\u000b\t\u0005M\u0015QS\u0001\u0005Y\u0006twM\u0003\u0002\u0002\u0018\u0006!!.\u0019<b\u0013\ry\u0016\u0011S\u0001\u0007gR\u0014\u0018N\\4\u0002\u0011!\f7\u000f[\"pI\u0016,\"!!)\u0011\u0007M\u000b\u0019+C\u0002\u0002&R\u00131!\u00138u\u0003\u0019)\u0017/^1mgR!\u00111IAV\u0011\u001d\tik\ra\u0001\u0003_\u000b\u0011a\u001c\t\u0004\'\u0006E\u0016bAAZ)\n\u0019\u0011I\\=\u0002\u000b\u0005\u0004\b\u000f\\=\u00151\u0005m\u0011\u0011XA^\u0003{\u000by,!1\u0002D\u0006\u0015\u0017qYAe\u0003\u0017\fi\r\u0003\u0005\u00026Q\u0002\n\u00111\u0001^\u0011!\ti\u0004\u000eI\u0001\u0002\u0004i\u0006\u0002CA&iA\u0005\t\u0019\u00012\t\u0011\u0005MC\u0007%AA\u0002\u0019D\u0001\"a\u00175!\u0003\u0005\r\u0001\u001f\u0005\t\u0003G\"\u0004\u0013!a\u0001M\"A\u0011\u0011\u000e\u001b\u0011\u0002\u0003\u0007a\r\u0003\u0005\u0002pQ\u0002\n\u00111\u0001g\u0011!\t)\b\u000eI\u0001\u0002\u00041\u0007\u0002CA>iA\u0005\t\u0019\u00014\t\u0013\u0005\rE\u0007%AA\u0002\u0005=\u0011aD1qa2LH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0005\u0005M\'fA/\u0002V.\u0012\u0011q\u001b\t\u0005\u00033\f\u0019/\u0004\u0002\u0002\\*!\u0011Q\\Ap\u0003%)hn\u00195fG.,GMC\u0002\u0002bR\u000b!\"\u00198o_R\fG/[8o\u0013\u0011\t)/a7\u0003#Ut7\r[3dW\u0016$g+\u0019:jC:\u001cW-A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00133\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012\u001aTCAAwU\r\u0011\u0017Q[\u0001\u0010CB\u0004H.\u001f\u0013eK\u001a\fW\u000f\u001c;%iU\u0011\u00111\u001f\u0016\u0004M\u0006U\u0017aD1qa2LH\u0005Z3gCVdG\u000fJ\u001b\u0016\u0005\u0005e(f\u0001=\u0002V\u0006y\u0011\r\u001d9ms\u0012\"WMZ1vYR$c\'A\bbaBd\u0017\u0010\n3fM\u0006,H\u000e\u001e\u00138\u0003=\t\u0007\u000f\u001d7zI\u0011,g-Y;mi\u0012B\u0014aD1qa2LH\u0005Z3gCVdG\u000fJ\u001d\u0002!\u0005\u0004\b\u000f\\=%I\u00164\u0017-\u001e7uIE\u0002\u0014\u0001E1qa2LH\u0005Z3gCVdG\u000fJ\u00192+\t\u0011IA\u000b\u0003\u0002\u0010\u0005U\u0017\u0001\u0003\u0013d_:$XM\u001c;\u0016\u0005\t=\u0001C\u0002B\t\u00053\u0011yB\u0004\u0003\u0003\u0014\t]ab\u00016\u0003\u0016%\tQ+\u0003\u0002q)&!!1\u0004B\u000f\u0005\r\u0019V-\u001d\u0006\u0003aR\u0003ra\u0015B\u0011\u0003\u001b\u000by+C\u0002\u0003$Q\u0013a\u0001V;qY\u0016\u0014\u0014!\u00035bgR\u000b\'oZ3u)\u0011\u0011ICa\f\u0011\u0007e\u0013Y#C\u0002\u0003.1\u0013\u0011A\u0011\u0005\u0007\u0005c\t\u0005\u0019A=\u0002\rQ\f\'oZ3uQ\r\t%Q\u0007\t\u00043\n]\u0012b\u0001B\u001d\u0019\nQ1\u000f\u001e:jGR\u0004XO]3)\u0007\u0001\u0011i\u0004E\u0002Z\u0005\u007fI1A!\u0011M\u0005!!\u0017\r^1usB,\u0017AB\'pIVdW\r\u0005\u0002|\u0007N\u00111I\u0015\u000b\u0003\u0005\u000b\n!\"\u00197m)\u0006\u0014x-\u001a;t\u0003-\tG\u000e\u001c+be\u001e,Go\u001d\u0011\u00151\u0005m!\u0011\u000bB*\u0005+\u00129F!\u0017\u0003\\\tu#q\fB1\u0005G\u0012)\u0007\u0003\u0004\u00026\u001d\u0003\r!\u0018\u0005\u0007\u0003{9\u0005\u0019A/\t\r\u0005-s\t1\u0001c\u0011\u0019\t\u0019f\u0012a\u0001M\"1\u00111L$A\u0002aDa!a\u0019H\u0001\u00041\u0007BBA5\u000f\u0002\u0007a\r\u0003\u0004\u0002p\u001d\u0003\rA\u001a\u0005\u0007\u0003k:\u0005\u0019\u00014\t\r\u0005mt\t1\u0001g\u0011\u001d\t\u0019i\u0012a\u0001\u0003\u001f\tq!\u001e8baBd\u0017\u0010\u0006\u0003\u0003l\t]\u0004#B*\u0003n\tE\u0014b\u0001B8)\n!1k\\7f!=\u0019&1O/^E\u001aDhM\u001a4gM\u0006=\u0011b\u0001B;)\n9A+\u001e9mKF\n\u0004bBAW\u0011\u0002\u0007\u00111\u0004"
    )
BootstrapMethods:
  0: #427 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #415 ()Ljava/lang/Object;
      #419 REF_invokeStatic org/sireum/project/Module.$anonfun$_subPathOpt$1$adapted:()Ljava/lang/Object;
      #415 ()Ljava/lang/Object;
      #420 1
  1: #427 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #415 ()Ljava/lang/Object;
      #437 REF_invokeStatic org/sireum/project/Module.$anonfun$_publishInfoOpt$1:()Lorg/sireum/project/PublishInfo;
      #438 ()Lorg/sireum/project/PublishInfo;
      #439 5
      #420 1
      #438 ()Lorg/sireum/project/PublishInfo;
  2: #453 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #437 REF_invokeStatic org/sireum/project/Module.$anonfun$_publishInfoOpt$1:()Lorg/sireum/project/PublishInfo;
      #419 REF_invokeStatic org/sireum/project/Module.$anonfun$_subPathOpt$1$adapted:()Ljava/lang/Object;
  ScalaInlineInfo: length = 0x108 (unknown attribute)
   01 01 00 34 01 83 01 84 01 01 7F 00 63 01 01 A0
   01 7C 01 00 48 00 49 01 00 5A 01 7C 01 00 5A 00
   5B 01 00 17 01 3C 01 01 3B 01 3C 01 00 50 00 51
   01 00 56 00 51 01 00 82 01 2C 01 00 75 01 2A 01
   01 30 00 63 01 01 39 00 3D 01 01 3A 00 6C 01 01
   31 00 63 01 01 32 00 6C 01 01 33 00 3D 01 01 34
   00 3D 01 01 35 00 3D 01 01 36 00 3D 01 01 37 00
   3D 01 01 38 00 3D 01 00 67 00 63 01 00 8C 00 3D
   01 01 20 01 21 01 00 6A 00 63 01 00 90 00 3D 01
   00 66 00 63 01 00 98 00 3D 01 00 AF 00 6C 01 00
   A0 00 3D 01 00 9C 00 3D 01 00 89 00 6C 01 00 94
   00 3D 01 00 A8 00 3D 01 00 A4 00 3D 01 01 6B 01
   6C 01 00 41 00 42 01 00 15 00 F0 01 00 EF 00 F0
   01 00 62 00 63 01 00 95 00 3D 01 00 A9 00 6C 01
   00 9D 00 3D 01 00 99 00 3D 01 00 EA 00 63 01 00
   6B 00 6C 01 00 91 00 3D 01 00 A5 00 3D 01 00 A1
   00 3D 01 00 B2 00 63 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
