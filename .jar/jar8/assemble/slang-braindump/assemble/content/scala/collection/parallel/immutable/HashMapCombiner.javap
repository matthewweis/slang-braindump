Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/immutable/HashMapCombiner.class
  Last modified May 29, 2022; size 11346 bytes
  SHA-256 checksum 81f3c23e5714445683b99669fde3e6d6ebc43fab191979340ffbd0f580ffa96c
  Compiled from "ParHashMap.scala"
public abstract class scala.collection.parallel.immutable.HashMapCombiner<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.parallel.BucketCombiner<scala.Tuple2<K, V>, scala.collection.parallel.immutable.ParHashMap<K, V>, scala.Tuple2<K, V>, scala.collection.parallel.immutable.HashMapCombiner<K, V>>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/immutable/HashMapCombiner
  super_class: #5                         // scala/collection/parallel/BucketCombiner
  interfaces: 0, fields: 1, methods: 20, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/parallel/immutable/HashMapCombiner
    #2 = Class              #1            // scala/collection/parallel/immutable/HashMapCombiner
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/parallel/BucketCombiner<Lscala/Tuple2<TK;TV;>;Lscala/collection/parallel/immutable/ParHashMap<TK;TV;>;Lscala/Tuple2<TK;TV;>;Lscala/collection/parallel/immutable/HashMapCombiner<TK;TV;>;>;
    #4 = Utf8               scala/collection/parallel/BucketCombiner
    #5 = Class              #4            // scala/collection/parallel/BucketCombiner
    #6 = Utf8               ParHashMap.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\u0005ehA\u0002\u0017.\u0003\u0003yS\u0007C\u0003T\u0001\u0011\u0005A\u000bC\u0004V\u0001\t\u0007I\u0011\u0001,\t\rq\u0003\u0001\u0015!\u0003X\u0011\u0015i\u0006\u0001\"\u0001_\u0011\u0015\u0011\u0007\u0001\"\u0001d\u0011\u0015!\u0007\u0001\"\u0001f\u0011\u0015\u0019\b\u0001\"\u0011u\r\u0011i\b\u0001\u0001@\t\u0015\u0005M\u0001B!A!\u0002\u0013\t)\u0002\u0003\u0006\u0002@!\u0011\t\u0011)A\u0005\u0003\u0003B!\"a\u0011\t\u0005\u0003\u0005\u000b\u0011BA#\u0011)\tY\u0005\u0003B\u0001B\u0003%\u0011Q\t\u0005\u0007\'\"!\t!!\u0014\t\u0011\tD\u0001\u0019!C\u0001\u0003/B\u0011\"!\u0017\t\u0001\u0004%\t!a\u0017\t\u0011\u0005\u0005\u0004\u0002)Q\u0005\u0003\u0017Aq!a\u001b\t\t\u0003\ti\u0007C\u0004\u0002z!!I!a\u001f\t\u000f\u0005\u0005\u0005\u0002\"\u0001\u0002\u0004\"9\u00111\u0012\u0005\u0005\u0002\u00055eABAK\u0001\u0001\t9\nC\u0005m+\t\u0005\t\u0015!\u0003\u0002$\"Q\u00111C\u000b\u0003\u0002\u0003\u0006I!!\u0006\t\u0015\u0005}RC!A!\u0002\u0013\t9\u000b\u0003\u0006\u0002DU\u0011\t\u0011)A\u0005\u0003\u000bB!\"a\u0013\u0016\u0005\u0003\u0005\u000b\u0011BA#\u0011\u0019\u0019V\u0003\"\u0001\u0002,\"A!-\u0006a\u0001\n\u0003\t9\u0006C\u0005\u0002ZU\u0001\r\u0011\"\u0001\u00028\"A\u0011\u0011M\u000b!B\u0013\tY\u0001C\u0004\u0002lU!\t!!0\t\u000f\u0005\u0005W\u0003\"\u0003\u0002D\"9\u0011\u0011Z\u000b\u0005\n\u0005-\u0007bBAA+\u0011\u0005\u00111\u001b\u0005\b\u0003\u0017+B\u0011AAG\u000f!\t9.\fE\u0001_\u0005ega\u0002\u0017.\u0011\u0003y\u00131\u001c\u0005\u0007\'\u0016\"\t!!8\t\u000f\u0005}W\u0005\"\u0001\u0002b\"Q\u0011q^\u0013C\u0002\u0013\u0005Q&!=\t\u0011\u0005MX\u0005)A\u0005\u0003\u000bB!\"!>&\u0005\u0004%\t!LAy\u0011!\t90\nQ\u0001\n\u0005\u0015#a\u0004%bg\"l\u0015\r]\"p[\nLg.\u001a:\u000b\u00059z\u0013!C5n[V$\u0018M\u00197f\u0015\t\u0001\u0014\'\u0001\u0005qCJ\fG\u000e\\3m\u0015\t\u00114\'\u0001\u0006d_2dWm\u0019;j_:T\u0011\u0001N\u0001\u0006g\u000e\fG.Y\u000b\u0004m\u0005c5C\u0001\u00018!\u0019A\u0014h\u000f(<%6\tq&\u0003\u0002;_\tq!)^2lKR\u001cu.\u001c2j]\u0016\u0014\b\u0003\u0002\u001f>\u007f-k\u0011aM\u0005\u0003}M\u0012a\u0001V;qY\u0016\u0014\u0004C\u0001!B\u0019\u0001!QA\u0011\u0001C\u0002\u0011\u0013\u0011aS\u0002\u0001#\t)\u0005\n\u0005\u0002=\r&\u0011qi\r\u0002\b\u001d>$\b.\u001b8h!\ta\u0014*\u0003\u0002Kg\t\u0019\u0011I\\=\u0011\u0005\u0001cE!B\'\u0001\u0005\u0004!%!\u0001,\u0011\t=\u0003vhS\u0007\u0002[%\u0011\u0011+\f\u0002\u000b!\u0006\u0014\b*Y:i\u001b\u0006\u0004\b\u0003B(\u0001\u007f-\u000ba\u0001P5oSRtD#\u0001*\u0002\u0013\u0015l\u0007\u000f^=Ue&,W#A,\u0011\taSvhS\u0007\u00023*\u0011a&M\u0005\u00037f\u0013!b\u00147e\u0011\u0006\u001c\b.T1q\u0003))W\u000e\u001d;z)JLW\rI\u0001\u0007C\u0012$wJ\\3\u0015\u0005}\u0003W\"\u0001\u0001\t\u000b\u0005$\u0001\u0019A\u001e\u0002\t\u0015dW-\\\u0001\u0007e\u0016\u001cX\u000f\u001c;\u0015\u00039\u000b!b\u001a:pkB\u0014\u0015pS3z+\t1\u0017\u000e\u0006\u0002hWB!q\nU i!\t\u0001\u0015\u000eB\u0003k\r\t\u0007AI\u0001\u0003SKB\u0014\b\"\u00027\u0007\u0001\u0004i\u0017aA2cMB\u0019AH\u001c9\n\u0005=\u001c$!\u0003$v]\u000e$\u0018n\u001c81!\u0011A\u0014o\u00135\n\u0005I|#\u0001C\"p[\nLg.\u001a:\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012!\u001e\t\u0003mnl\u0011a\u001e\u0006\u0003qf\fA\u0001\\1oO*\t!0\u0001\u0003kCZ\f\u0017B\u0001?x\u0005\u0019\u0019FO]5oO\nQ1I]3bi\u0016$&/[3\u0014\t!y\u0018Q\u0001\t\u0004y\u0005\u0005\u0011bAA\u0002g\t1\u0011I\\=SK\u001a\u0004r\u0001OA\u0004\u0003\u0017\t\t\"C\u0002\u0002\n=\u0012A\u0001V1tWB\u0019A(!\u0004\n\u0007\u0005=1G\u0001\u0003V]&$\bCA0\t\u0003\u0015\u0011WoY6t!\u0015a\u0014qCA\u000e\u0013\r\tIb\r\u0002\u0006\u0003J\u0014\u0018-\u001f\t\u0006\u0003;\tId\u000f\b\u0005\u0003?\t\u0019D\u0004\u0003\u0002\"\u0005=b\u0002BA\u0012\u0003[qA!!\n\u0002,5\u0011\u0011q\u0005\u0006\u0004\u0003S\u0019\u0015A\u0002\u001fs_>$h(C\u00015\u0013\t\u00114\'C\u0002\u00022E\nq!\\;uC\ndW-\u0003\u0003\u00026\u0005]\u0012AD+oe>dG.\u001a3Ck\u001a4WM\u001d\u0006\u0004\u0003c\t\u0014\u0002BA\u001e\u0003{\u0011\u0001\"\u00168s_2dW\r\u001a\u0006\u0005\u0003k\t9$\u0001\u0003s_>$\b\u0003\u0002\u001f\u0002\u0018]\u000baa\u001c4gg\u0016$\bc\u0001\u001f\u0002H%\u0019\u0011\u0011J\u001a\u0003\u0007%sG/A\u0004i_^l\u0017M\\=\u0015\u0015\u0005E\u0011qJA)\u0003\'\n)\u0006C\u0004\u0002\u00145\u0001\r!!\u0006\t\u000f\u0005}R\u00021\u0001\u0002B!9\u00111I\u0007A\u0002\u0005\u0015\u0003bBA&\u001b\u0001\u0007\u0011QI\u000b\u0003\u0003\u0017\t!B]3tk2$x\fJ3r)\u0011\tY!!\u0018\t\u0013\u0005}s\"!AA\u0002\u0005-\u0011a\u0001=%c\u00059!/Z:vYR\u0004\u0003f\u0001\t\u0002fA\u0019A(a\u001a\n\u0007\u0005%4G\u0001\u0005w_2\fG/\u001b7f\u0003\u0011aW-\u00194\u0015\t\u0005-\u0011q\u000e\u0005\b\u0003c\n\u0002\u0019AA:\u0003\u0011\u0001(/\u001a<\u0011\u000bq\n)(a\u0003\n\u0007\u0005]4G\u0001\u0004PaRLwN\\\u0001\u000bGJ,\u0017\r^3Ue&,GcA,\u0002~!9\u0011q\u0010\nA\u0002\u0005m\u0011!B3mK6\u001c\u0018!B:qY&$XCAAC!\u0015A\u0016qQA\t\u0013\r\tI)\u0017\u0002\u0005\u0019&\u001cH/\u0001\ntQ>,H\u000eZ*qY&$h)\u001e:uQ\u0016\u0014XCAAH!\ra\u0014\u0011S\u0005\u0004\u0003\'\u001b$a\u0002\"p_2,\u0017M\u001c\u0002\u0012\u0007J,\u0017\r^3He>,\b/\u001a3Ue&,W\u0003BAM\u0003C\u001bB!F@\u0002\u001cB9\u0001(a\u0002\u0002\f\u0005u\u0005\u0003B0\u0016\u0003?\u00032\u0001QAQ\t\u0015QWC1\u0001E!\u0011ad.!*\u0011\u000ba\n8*a(\u0011\u000bq\n9\"!+\u0011\taSvh \u000b\r\u0003;\u000bi+a,\u00022\u0006M\u0016Q\u0017\u0005\u0007Yn\u0001\r!a)\t\u000f\u0005M1\u00041\u0001\u0002\u0016!9\u0011qH\u000eA\u0002\u0005\u001d\u0006bBA\"7\u0001\u0007\u0011Q\t\u0005\b\u0003\u0017Z\u0002\u0019AA#)\u0011\tY!!/\t\u0013\u0005}S$!AA\u0002\u0005-\u0001f\u0001\u0010\u0002fQ!\u00111BA`\u0011\u001d\t\th\ba\u0001\u0003g\n\u0011c\u0019:fCR,wI]8va\u0016$GK]5f)\u0011\t)-a2\u0011\u000baSv(a(\t\u000f\u0005}\u0004\u00051\u0001\u0002\u001c\u0005\tRM^1mk\u0006$XmQ8nE&tWM]:\u0015\t\u0005\u0015\u0017Q\u001a\u0005\b\u0003\u001f\f\u0003\u0019AAi\u0003\u0011!(/[3\u0011\u000baSv(!*\u0016\u0005\u0005U\u0007#\u0002-\u0002\b\u0006u\u0015a\u0004%bg\"l\u0015\r]\"p[\nLg.\u001a:\u0011\u0005=+3CA\u0013\u0000)\t\tI.A\u0003baBd\u00170\u0006\u0004\u0002d\u0006%\u0018Q^\u000b\u0003\u0003K\u0004ba\u0014\u0001\u0002h\u0006-\bc\u0001!\u0002j\u0012)!i\nb\u0001\tB\u0019\u0001)!<\u0005\u000b5;#\u0019\u0001#\u0002\u0011I|w\u000e\u001e2jiN,\"!!\u0012\u0002\u0013I|w\u000e\u001e2jiN\u0004\u0013\u0001\u0003:p_R\u001c\u0018N_3\u0002\u0013I|w\u000e^:ju\u0016\u0004\u0003
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               scala/collection/immutable/OldHashMap$HashTrieMap
   #16 = Class              #15           // scala/collection/immutable/OldHashMap$HashTrieMap
   #17 = Utf8               scala/collection/immutable/OldHashMap
   #18 = Class              #17           // scala/collection/immutable/OldHashMap
   #19 = Utf8               HashTrieMap
   #20 = Utf8               scala/collection/mutable/UnrolledBuffer$Unrolled
   #21 = Class              #20           // scala/collection/mutable/UnrolledBuffer$Unrolled
   #22 = Utf8               scala/collection/mutable/UnrolledBuffer
   #23 = Class              #22           // scala/collection/mutable/UnrolledBuffer
   #24 = Utf8               Unrolled
   #25 = Utf8               scala/collection/parallel/immutable/HashMapCombiner$CreateGroupedTrie
   #26 = Class              #25           // scala/collection/parallel/immutable/HashMapCombiner$CreateGroupedTrie
   #27 = Utf8               CreateGroupedTrie
   #28 = Utf8               scala/collection/parallel/immutable/HashMapCombiner$CreateTrie
   #29 = Class              #28           // scala/collection/parallel/immutable/HashMapCombiner$CreateTrie
   #30 = Utf8               CreateTrie
   #31 = Utf8               emptyTrie
   #32 = Utf8               Lscala/collection/immutable/OldHashMap;
   #33 = Utf8               Lscala/collection/immutable/OldHashMap<TK;TV;>;
   #34 = Utf8               apply
   #35 = Utf8               ()Lscala/collection/parallel/immutable/HashMapCombiner;
   #36 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/parallel/immutable/HashMapCombiner<TK;TV;>;
   #37 = Utf8               scala/collection/parallel/immutable/HashMapCombiner$
   #38 = Class              #37           // scala/collection/parallel/immutable/HashMapCombiner$
   #39 = Utf8               MODULE$
   #40 = Utf8               Lscala/collection/parallel/immutable/HashMapCombiner$;
   #41 = NameAndType        #39:#40       // MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
   #42 = Fieldref           #38.#41       // scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
   #43 = NameAndType        #34:#35       // apply:()Lscala/collection/parallel/immutable/HashMapCombiner;
   #44 = Methodref          #38.#43       // scala/collection/parallel/immutable/HashMapCombiner$.apply:()Lscala/collection/parallel/immutable/HashMapCombiner;
   #45 = Utf8               ()Lscala/collection/immutable/OldHashMap;
   #46 = Utf8               ()Lscala/collection/immutable/OldHashMap<TK;TV;>;
   #47 = NameAndType        #31:#32       // emptyTrie:Lscala/collection/immutable/OldHashMap;
   #48 = Fieldref           #2.#47        // scala/collection/parallel/immutable/HashMapCombiner.emptyTrie:Lscala/collection/immutable/OldHashMap;
   #49 = Utf8               this
   #50 = Utf8               Lscala/collection/parallel/immutable/HashMapCombiner;
   #51 = Utf8               addOne
   #52 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/immutable/HashMapCombiner;
   #53 = Utf8               (Lscala/Tuple2<TK;TV;>;)Lscala/collection/parallel/immutable/HashMapCombiner<TK;TV;>;
   #54 = Utf8               elem
   #55 = Utf8               sz
   #56 = Utf8               ()I
   #57 = NameAndType        #55:#56       // sz:()I
   #58 = Methodref          #2.#57        // scala/collection/parallel/immutable/HashMapCombiner.sz:()I
   #59 = Utf8               sz_$eq
   #60 = Utf8               (I)V
   #61 = NameAndType        #59:#60       // sz_$eq:(I)V
   #62 = Methodref          #2.#61        // scala/collection/parallel/immutable/HashMapCombiner.sz_$eq:(I)V
   #63 = Utf8               scala/collection/Hashing$
   #64 = Class              #63           // scala/collection/Hashing$
   #65 = Utf8               Lscala/collection/Hashing$;
   #66 = NameAndType        #39:#65       // MODULE$:Lscala/collection/Hashing$;
   #67 = Fieldref           #64.#66       // scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
   #68 = Utf8               scala/Tuple2
   #69 = Class              #68           // scala/Tuple2
   #70 = Utf8               _1
   #71 = Utf8               ()Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // _1:()Ljava/lang/Object;
   #73 = Methodref          #69.#72       // scala/Tuple2._1:()Ljava/lang/Object;
   #74 = Utf8               computeHash
   #75 = Utf8               (Ljava/lang/Object;)I
   #76 = NameAndType        #74:#75       // computeHash:(Ljava/lang/Object;)I
   #77 = Methodref          #64.#76       // scala/collection/Hashing$.computeHash:(Ljava/lang/Object;)I
   #78 = Utf8               buckets
   #79 = Utf8               ()[Lscala/collection/mutable/UnrolledBuffer;
   #80 = NameAndType        #78:#79       // buckets:()[Lscala/collection/mutable/UnrolledBuffer;
   #81 = Methodref          #2.#80        // scala/collection/parallel/immutable/HashMapCombiner.buckets:()[Lscala/collection/mutable/UnrolledBuffer;
   #82 = Utf8               scala/reflect/ClassTag$
   #83 = Class              #82           // scala/reflect/ClassTag$
   #84 = Utf8               Lscala/reflect/ClassTag$;
   #85 = NameAndType        #39:#84       // MODULE$:Lscala/reflect/ClassTag$;
   #86 = Fieldref           #83.#85       // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
   #87 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #88 = NameAndType        #34:#87       // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #89 = Methodref          #83.#88       // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
   #90 = Utf8               <init>
   #91 = Utf8               (Lscala/reflect/ClassTag;)V
   #92 = NameAndType        #90:#91       // "<init>":(Lscala/reflect/ClassTag;)V
   #93 = Methodref          #23.#92       // scala/collection/mutable/UnrolledBuffer."<init>":(Lscala/reflect/ClassTag;)V
   #94 = Utf8               $plus$eq
   #95 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #96 = NameAndType        #94:#95       // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #97 = Methodref          #23.#96       // scala/collection/mutable/UnrolledBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
   #98 = Utf8               hc
   #99 = Utf8               I
  #100 = Utf8               pos
  #101 = Utf8               Lscala/Tuple2;
  #102 = Utf8               result
  #103 = Utf8               ()Lscala/collection/parallel/immutable/ParHashMap;
  #104 = Utf8               ()Lscala/collection/parallel/immutable/ParHashMap<TK;TV;>;
  #105 = Utf8               scala/collection/ArrayOps$
  #106 = Class              #105          // scala/collection/ArrayOps$
  #107 = Utf8               Lscala/collection/ArrayOps$;
  #108 = NameAndType        #39:#107      // MODULE$:Lscala/collection/ArrayOps$;
  #109 = Fieldref           #106.#108     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #110 = Utf8               scala/Predef$
  #111 = Class              #110          // scala/Predef$
  #112 = Utf8               Lscala/Predef$;
  #113 = NameAndType        #39:#112      // MODULE$:Lscala/Predef$;
  #114 = Fieldref           #111.#113     // scala/Predef$.MODULE$:Lscala/Predef$;
  #115 = Utf8               [Ljava/lang/Object;
  #116 = Class              #115          // "[Ljava/lang/Object;"
  #117 = Utf8               refArrayOps
  #118 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #119 = NameAndType        #117:#118     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #120 = Methodref          #111.#119     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #122 = MethodType         #121          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #123 = Utf8               $anonfun$result$1$adapted
  #124 = Utf8               (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #125 = NameAndType        #123:#124     // $anonfun$result$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #126 = Methodref          #2.#125       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #127 = MethodHandle       6:#126        // REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #128 = MethodType         #124          //  (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #129 = Integer            5
  #130 = Integer            1
  #131 = Utf8               java/lang/invoke/LambdaMetafactory
  #132 = Class              #131          // java/lang/invoke/LambdaMetafactory
  #133 = Utf8               altMetafactory
  #134 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = NameAndType        #133:#134     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = Methodref          #132.#135     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #137 = MethodHandle       6:#136        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = Utf8               ()Lscala/Function1;
  #139 = NameAndType        #34:#138      // apply:()Lscala/Function1;
  #140 = InvokeDynamic      #0:#139       // #0:apply:()Lscala/Function1;
  #141 = Utf8               filter$extension
  #142 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #143 = NameAndType        #141:#142     // filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #144 = Methodref          #106.#143     // scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #145 = Utf8               $anonfun$result$2
  #146 = Utf8               (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #147 = NameAndType        #145:#146     // $anonfun$result$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #148 = Methodref          #2.#147       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #149 = MethodHandle       6:#148        // REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #150 = MethodType         #146          //  (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #151 = InvokeDynamic      #1:#139       // #1:apply:()Lscala/Function1;
  #152 = Utf8               map$extension
  #153 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #154 = NameAndType        #152:#153     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #155 = Methodref          #106.#154     // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #156 = Utf8               [Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #157 = Class              #156          // "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;"
  #158 = Utf8               combinerTaskSupport
  #159 = Utf8               ()Lscala/collection/parallel/TaskSupport;
  #160 = NameAndType        #158:#159     // combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
  #161 = Methodref          #2.#160       // scala/collection/parallel/immutable/HashMapCombiner.combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
  #162 = Utf8               (Lscala/collection/parallel/immutable/HashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
  #163 = NameAndType        #90:#162      // "<init>":(Lscala/collection/parallel/immutable/HashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
  #164 = Methodref          #29.#163      // scala/collection/parallel/immutable/HashMapCombiner$CreateTrie."<init>":(Lscala/collection/parallel/immutable/HashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
  #165 = Utf8               scala/collection/parallel/TaskSupport
  #166 = Class              #165          // scala/collection/parallel/TaskSupport
  #167 = Utf8               executeAndWaitResult
  #168 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
  #169 = NameAndType        #167:#168     // executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
  #170 = InterfaceMethodref #166.#169     // scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
  #171 = Utf8               rootsize
  #172 = NameAndType        #171:#56      // rootsize:()I
  #173 = Methodref          #38.#172      // scala/collection/parallel/immutable/HashMapCombiner$.rootsize:()I
  #174 = Utf8               scala/runtime/BoxesRunTime
  #175 = Class              #174          // scala/runtime/BoxesRunTime
  #176 = Utf8               boxToInteger
  #177 = Utf8               (I)Ljava/lang/Integer;
  #178 = NameAndType        #176:#177     // boxToInteger:(I)Ljava/lang/Integer;
  #179 = Methodref          #175.#178     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #180 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #181 = MethodType         #180          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #182 = Utf8               $anonfun$result$3$adapted
  #183 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #184 = NameAndType        #182:#183     // $anonfun$result$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #185 = Methodref          #2.#184       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #186 = MethodHandle       6:#185        // REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #187 = MethodType         #183          //  (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #188 = Utf8               ()Lscala/Function2;
  #189 = NameAndType        #34:#188      // apply:()Lscala/Function2;
  #190 = InvokeDynamic      #2:#189       // #2:apply:()Lscala/Function2;
  #191 = Utf8               foldLeft$extension
  #192 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #193 = NameAndType        #191:#192     // foldLeft$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #194 = Methodref          #106.#193     // scala/collection/ArrayOps$.foldLeft$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #195 = Utf8               unboxToInt
  #196 = NameAndType        #195:#75      // unboxToInt:(Ljava/lang/Object;)I
  #197 = Methodref          #175.#196     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #198 = Utf8               scala/collection/parallel/immutable/ParHashMap
  #199 = Class              #198          // scala/collection/parallel/immutable/ParHashMap
  #200 = Utf8               ()V
  #201 = NameAndType        #90:#200      // "<init>":()V
  #202 = Methodref          #199.#201     // scala/collection/parallel/immutable/ParHashMap."<init>":()V
  #203 = Utf8               (Lscala/collection/immutable/OldHashMap;)V
  #204 = NameAndType        #90:#203      // "<init>":(Lscala/collection/immutable/OldHashMap;)V
  #205 = Methodref          #199.#204     // scala/collection/parallel/immutable/ParHashMap."<init>":(Lscala/collection/immutable/OldHashMap;)V
  #206 = Utf8               (I[Lscala/collection/immutable/OldHashMap;I)V
  #207 = NameAndType        #90:#206      // "<init>":(I[Lscala/collection/immutable/OldHashMap;I)V
  #208 = Methodref          #16.#207      // scala/collection/immutable/OldHashMap$HashTrieMap."<init>":(I[Lscala/collection/immutable/OldHashMap;I)V
  #209 = Utf8               trie
  #210 = Utf8               Lscala/collection/immutable/OldHashMap$HashTrieMap;
  #211 = Utf8               bucks
  #212 = Utf8               root
  #213 = Utf8               [Lscala/collection/immutable/OldHashMap;
  #214 = Utf8               bitmap
  #215 = Utf8               i
  #216 = Class              #213          // "[Lscala/collection/immutable/OldHashMap;"
  #217 = Utf8               groupByKey
  #218 = Utf8               (Lscala/Function0;)Lscala/collection/parallel/immutable/ParHashMap;
  #219 = Utf8               <Repr:Ljava/lang/Object;>(Lscala/Function0<Lscala/collection/parallel/Combiner<TV;TRepr;>;>;)Lscala/collection/parallel/immutable/ParHashMap<TK;TRepr;>;
  #220 = Utf8               cbf
  #221 = Utf8               $anonfun$groupByKey$1$adapted
  #222 = NameAndType        #221:#124     // $anonfun$groupByKey$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #223 = Methodref          #2.#222       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #224 = MethodHandle       6:#223        // REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  #225 = InvokeDynamic      #3:#139       // #3:apply:()Lscala/Function1;
  #226 = Utf8               $anonfun$groupByKey$2
  #227 = NameAndType        #226:#146     // $anonfun$groupByKey$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #228 = Methodref          #2.#227       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #229 = MethodHandle       6:#228        // REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #230 = InvokeDynamic      #4:#139       // #4:apply:()Lscala/Function1;
  #231 = Utf8               (Lscala/collection/parallel/immutable/HashMapCombiner;Lscala/Function0;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
  #232 = NameAndType        #90:#231      // "<init>":(Lscala/collection/parallel/immutable/HashMapCombiner;Lscala/Function0;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
  #233 = Methodref          #26.#232      // scala/collection/parallel/immutable/HashMapCombiner$CreateGroupedTrie."<init>":(Lscala/collection/parallel/immutable/HashMapCombiner;Lscala/Function0;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
  #234 = Utf8               $anonfun$groupByKey$3$adapted
  #235 = NameAndType        #234:#183     // $anonfun$groupByKey$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #236 = Methodref          #2.#235       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #237 = MethodHandle       6:#236        // REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  #238 = InvokeDynamic      #5:#189       // #5:apply:()Lscala/Function2;
  #239 = Utf8               Lscala/Function0;
  #240 = Utf8               scala/Function0
  #241 = Class              #240          // scala/Function0
  #242 = Utf8               toString
  #243 = Utf8               ()Ljava/lang/String;
  #244 = Utf8               java/lang/StringBuilder
  #245 = Class              #244          // java/lang/StringBuilder
  #246 = Integer            22
  #247 = NameAndType        #90:#60       // "<init>":(I)V
  #248 = Methodref          #245.#247     // java/lang/StringBuilder."<init>":(I)V
  #249 = Utf8               HashTrieCombiner(sz:
  #250 = String             #249          // HashTrieCombiner(sz:
  #251 = Utf8               append
  #252 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #253 = NameAndType        #251:#252     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #254 = Methodref          #245.#253     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #255 = Utf8               size
  #256 = NameAndType        #255:#56      // size:()I
  #257 = Methodref          #2.#256       // scala/collection/parallel/immutable/HashMapCombiner.size:()I
  #258 = Utf8               (I)Ljava/lang/StringBuilder;
  #259 = NameAndType        #251:#258     // append:(I)Ljava/lang/StringBuilder;
  #260 = Methodref          #245.#259     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #261 = Utf8               )
  #262 = String             #261          // )
  #263 = NameAndType        #242:#243     // toString:()Ljava/lang/String;
  #264 = Methodref          #245.#263     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #265 = NameAndType        #102:#103     // result:()Lscala/collection/parallel/immutable/ParHashMap;
  #266 = Methodref          #2.#265       // scala/collection/parallel/immutable/HashMapCombiner.result:()Lscala/collection/parallel/immutable/ParHashMap;
  #267 = NameAndType        #51:#52       // addOne:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/HashMapCombiner;
  #268 = Methodref          #2.#267       // scala/collection/parallel/immutable/HashMapCombiner.addOne:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/HashMapCombiner;
  #269 = Utf8               Ljava/lang/Object;
  #270 = Utf8               $anonfun$result$1
  #271 = Utf8               (Lscala/collection/mutable/UnrolledBuffer;)Z
  #272 = Utf8               x$3
  #273 = Utf8               Lscala/collection/mutable/UnrolledBuffer;
  #274 = Utf8               x$4
  #275 = Utf8               headPtr
  #276 = Utf8               ()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #277 = NameAndType        #275:#276     // headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #278 = Methodref          #23.#277      // scala/collection/mutable/UnrolledBuffer.headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  #279 = Utf8               $anonfun$result$3
  #280 = Utf8               (ILscala/collection/immutable/OldHashMap;)I
  #281 = Utf8               x$5
  #282 = Utf8               x$6
  #283 = Methodref          #18.#256      // scala/collection/immutable/OldHashMap.size:()I
  #284 = Utf8               $anonfun$groupByKey$1
  #285 = Utf8               x$7
  #286 = Utf8               x$8
  #287 = Utf8               $anonfun$groupByKey$3
  #288 = Utf8               x$9
  #289 = Utf8               x$10
  #290 = Methodref          #5.#247       // scala/collection/parallel/BucketCombiner."<init>":(I)V
  #291 = Utf8               scala/collection/immutable/OldHashMap$
  #292 = Class              #291          // scala/collection/immutable/OldHashMap$
  #293 = Utf8               Lscala/collection/immutable/OldHashMap$;
  #294 = NameAndType        #39:#293      // MODULE$:Lscala/collection/immutable/OldHashMap$;
  #295 = Fieldref           #292.#294     // scala/collection/immutable/OldHashMap$.MODULE$:Lscala/collection/immutable/OldHashMap$;
  #296 = Utf8               empty
  #297 = NameAndType        #296:#45      // empty:()Lscala/collection/immutable/OldHashMap;
  #298 = Methodref          #292.#297     // scala/collection/immutable/OldHashMap$.empty:()Lscala/collection/immutable/OldHashMap;
  #299 = NameAndType        #270:#271     // $anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Z
  #300 = Methodref          #2.#299       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Z
  #301 = Utf8               boxToBoolean
  #302 = Utf8               (Z)Ljava/lang/Boolean;
  #303 = NameAndType        #301:#302     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #304 = Methodref          #175.#303     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #305 = NameAndType        #279:#280     // $anonfun$result$3:(ILscala/collection/immutable/OldHashMap;)I
  #306 = Methodref          #2.#305       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$3:(ILscala/collection/immutable/OldHashMap;)I
  #307 = NameAndType        #284:#271     // $anonfun$groupByKey$1:(Lscala/collection/mutable/UnrolledBuffer;)Z
  #308 = Methodref          #2.#307       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$1:(Lscala/collection/mutable/UnrolledBuffer;)Z
  #309 = NameAndType        #287:#280     // $anonfun$groupByKey$3:(ILscala/collection/immutable/OldHashMap;)I
  #310 = Methodref          #2.#309       // scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$3:(ILscala/collection/immutable/OldHashMap;)I
  #311 = Utf8               $deserializeLambda$
  #312 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #313 = Utf8               scala/runtime/LambdaDeserialize
  #314 = Class              #313          // scala/runtime/LambdaDeserialize
  #315 = Utf8               bootstrap
  #316 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #317 = NameAndType        #315:#316     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #318 = Methodref          #314.#317     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #319 = MethodHandle       6:#318        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #320 = Utf8               lambdaDeserialize
  #321 = NameAndType        #320:#312     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #322 = InvokeDynamic      #6:#321       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #323 = Utf8               Signature
  #324 = Utf8               Code
  #325 = Utf8               LineNumberTable
  #326 = Utf8               LocalVariableTable
  #327 = Utf8               StackMapTable
  #328 = Utf8               MethodParameters
  #329 = Utf8               InnerClasses
  #330 = Utf8               SourceFile
  #331 = Utf8               RuntimeVisibleAnnotations
  #332 = Utf8               BootstrapMethods
  #333 = Utf8               ScalaInlineInfo
  #334 = Utf8               ScalaSig
{
  private final scala.collection.immutable.OldHashMap<K, V> emptyTrie;
    descriptor: Lscala/collection/immutable/OldHashMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // Lscala/collection/immutable/OldHashMap<TK;TV;>;

  public static <K extends java.lang.Object, V extends java.lang.Object> scala.collection.parallel.immutable.HashMapCombiner<K, V> apply();
    descriptor: ()Lscala/collection/parallel/immutable/HashMapCombiner;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #42                 // Field scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
         3: invokevirtual #44                 // Method scala/collection/parallel/immutable/HashMapCombiner$.apply:()Lscala/collection/parallel/immutable/HashMapCombiner;
         6: areturn
    Signature: #36                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Lscala/collection/parallel/immutable/HashMapCombiner<TK;TV;>;

  public scala.collection.immutable.OldHashMap<K, V> emptyTrie();
    descriptor: ()Lscala/collection/immutable/OldHashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field emptyTrie:Lscala/collection/immutable/OldHashMap;
         4: areturn
      LineNumberTable:
        line 161: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;
    Signature: #46                          // ()Lscala/collection/immutable/OldHashMap<TK;TV;>;

  public scala.collection.parallel.immutable.HashMapCombiner<K, V> addOne(scala.Tuple2<K, V>);
    descriptor: (Lscala/Tuple2;)Lscala/collection/parallel/immutable/HashMapCombiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #58                 // Method sz:()I
         5: iconst_1
         6: iadd
         7: invokevirtual #62                 // Method sz_$eq:(I)V
        10: getstatic     #67                 // Field scala/collection/Hashing$.MODULE$:Lscala/collection/Hashing$;
        13: aload_1
        14: invokevirtual #73                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        17: invokevirtual #77                 // Method scala/collection/Hashing$.computeHash:(Ljava/lang/Object;)I
        20: istore_2
        21: iload_2
        22: bipush        31
        24: iand
        25: istore_3
        26: aload_0
        27: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        30: iload_3
        31: aaload
        32: ifnonnull     59
        35: aload_0
        36: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        39: iload_3
        40: new           #23                 // class scala/collection/mutable/UnrolledBuffer
        43: dup
        44: getstatic     #86                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        47: ldc           #69                 // class scala/Tuple2
        49: invokevirtual #89                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        52: invokespecial #93                 // Method scala/collection/mutable/UnrolledBuffer."<init>":(Lscala/reflect/ClassTag;)V
        55: aastore
        56: goto          59
        59: aload_0
        60: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        63: iload_3
        64: aaload
        65: aload_1
        66: invokevirtual #97                 // Method scala/collection/mutable/UnrolledBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        69: pop
        70: aload_0
        71: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 59
          locals = [ int, int ]
      LineNumberTable:
        line 164: 0
        line 165: 10
        line 166: 21
        line 167: 26
        line 169: 35
        line 172: 59
        line 173: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      50     2    hc   I
           26      45     3   pos   I
            0      72     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;
            0      72     1  elem   Lscala/Tuple2;
    Signature: #53                          // (Lscala/Tuple2<TK;TV;>;)Lscala/collection/parallel/immutable/HashMapCombiner<TK;TV;>;
    MethodParameters:
      Name                           Flags
      elem                           final

  public scala.collection.parallel.immutable.ParHashMap<K, V> result();
    descriptor: ()Lscala/collection/parallel/immutable/ParHashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=7, args_size=1
         0: getstatic     #109                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         3: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: getstatic     #109                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         9: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_0
        13: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        16: checkcast     #116                // class "[Ljava/lang/Object;"
        19: invokevirtual #120                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        22: invokedynamic #140,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        27: invokevirtual #144                // Method scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        30: checkcast     #116                // class "[Ljava/lang/Object;"
        33: invokevirtual #120                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        36: invokedynamic #151,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        41: getstatic     #86                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        44: ldc           #21                 // class scala/collection/mutable/UnrolledBuffer$Unrolled
        46: invokevirtual #89                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        49: invokevirtual #155                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        52: checkcast     #157                // class "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;"
        55: astore_1
        56: aload_1
        57: arraylength
        58: anewarray     #18                 // class scala/collection/immutable/OldHashMap
        61: astore_2
        62: aload_0
        63: invokevirtual #161                // Method combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
        66: new           #29                 // class scala/collection/parallel/immutable/HashMapCombiner$CreateTrie
        69: dup
        70: aload_0
        71: aload_1
        72: aload_2
        73: iconst_0
        74: aload_1
        75: arraylength
        76: invokespecial #164                // Method scala/collection/parallel/immutable/HashMapCombiner$CreateTrie."<init>":(Lscala/collection/parallel/immutable/HashMapCombiner;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
        79: invokeinterface #170,  2          // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
        84: pop
        85: iconst_0
        86: istore_3
        87: iconst_0
        88: istore        4
        90: iload         4
        92: getstatic     #42                 // Field scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
        95: invokevirtual #173                // Method scala/collection/parallel/immutable/HashMapCombiner$.rootsize:()I
        98: if_icmpge     130
       101: aload_0
       102: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
       105: iload         4
       107: aaload
       108: ifnull        121
       111: iload_3
       112: iconst_1
       113: iload         4
       115: ishl
       116: ior
       117: istore_3
       118: goto          121
       121: iload         4
       123: iconst_1
       124: iadd
       125: istore        4
       127: goto          90
       130: getstatic     #109                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       133: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       136: aload_2
       137: checkcast     #116                // class "[Ljava/lang/Object;"
       140: invokevirtual #120                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       143: iconst_0
       144: invokestatic  #179                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       147: invokedynamic #190,  0            // InvokeDynamic #2:apply:()Lscala/Function2;
       152: invokevirtual #194                // Method scala/collection/ArrayOps$.foldLeft$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       155: invokestatic  #197                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       158: istore        5
       160: iload         5
       162: iconst_0
       163: if_icmpne     176
       166: new           #199                // class scala/collection/parallel/immutable/ParHashMap
       169: dup
       170: invokespecial #202                // Method scala/collection/parallel/immutable/ParHashMap."<init>":()V
       173: goto          217
       176: iload         5
       178: iconst_1
       179: if_icmpne     195
       182: new           #199                // class scala/collection/parallel/immutable/ParHashMap
       185: dup
       186: aload_2
       187: iconst_0
       188: aaload
       189: invokespecial #205                // Method scala/collection/parallel/immutable/ParHashMap."<init>":(Lscala/collection/immutable/OldHashMap;)V
       192: goto          217
       195: new           #16                 // class scala/collection/immutable/OldHashMap$HashTrieMap
       198: dup
       199: iload_3
       200: aload_2
       201: iload         5
       203: invokespecial #208                // Method scala/collection/immutable/OldHashMap$HashTrieMap."<init>":(I[Lscala/collection/immutable/OldHashMap;I)V
       206: astore        6
       208: new           #199                // class scala/collection/parallel/immutable/ParHashMap
       211: dup
       212: aload         6
       214: invokespecial #205                // Method scala/collection/parallel/immutable/ParHashMap."<init>":(Lscala/collection/immutable/OldHashMap;)V
       217: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 90
          locals = [ class scala/collection/parallel/immutable/HashMapCombiner, class "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;", class "[Lscala/collection/immutable/OldHashMap;", int, int ]
          stack = []
        frame_type = 30 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/immutable/ParHashMap ]
      LineNumberTable:
        line 177: 0
        line 178: 56
        line 180: 62
        line 182: 85
        line 183: 87
        line 184: 90
        line 185: 101
        line 186: 121
        line 184: 127
        line 188: 130
        line 190: 160
        line 191: 176
        line 193: 195
        line 194: 208
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          208       9     6  trie   Lscala/collection/immutable/OldHashMap$HashTrieMap;
           56     161     1 bucks   [Lscala/collection/mutable/UnrolledBuffer$Unrolled;
           62     155     2  root   [Lscala/collection/immutable/OldHashMap;
           87     130     3 bitmap   I
           90     127     4     i   I
          160      57     5    sz   I
            0     218     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;
    Signature: #104                         // ()Lscala/collection/parallel/immutable/ParHashMap<TK;TV;>;

  public <Repr extends java.lang.Object> scala.collection.parallel.immutable.ParHashMap<K, Repr> groupByKey(scala.Function0<scala.collection.parallel.Combiner<V, Repr>>);
    descriptor: (Lscala/Function0;)Lscala/collection/parallel/immutable/ParHashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=8, args_size=2
         0: getstatic     #109                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         3: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: getstatic     #109                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         9: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_0
        13: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
        16: checkcast     #116                // class "[Ljava/lang/Object;"
        19: invokevirtual #120                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        22: invokedynamic #225,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        27: invokevirtual #144                // Method scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        30: checkcast     #116                // class "[Ljava/lang/Object;"
        33: invokevirtual #120                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        36: invokedynamic #230,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        41: getstatic     #86                 // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        44: ldc           #21                 // class scala/collection/mutable/UnrolledBuffer$Unrolled
        46: invokevirtual #89                 // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        49: invokevirtual #155                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        52: checkcast     #157                // class "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;"
        55: astore_2
        56: aload_2
        57: arraylength
        58: anewarray     #18                 // class scala/collection/immutable/OldHashMap
        61: astore_3
        62: aload_0
        63: invokevirtual #161                // Method combinerTaskSupport:()Lscala/collection/parallel/TaskSupport;
        66: new           #26                 // class scala/collection/parallel/immutable/HashMapCombiner$CreateGroupedTrie
        69: dup
        70: aload_0
        71: aload_1
        72: aload_2
        73: aload_3
        74: iconst_0
        75: aload_2
        76: arraylength
        77: invokespecial #233                // Method scala/collection/parallel/immutable/HashMapCombiner$CreateGroupedTrie."<init>":(Lscala/collection/parallel/immutable/HashMapCombiner;Lscala/Function0;[Lscala/collection/mutable/UnrolledBuffer$Unrolled;[Lscala/collection/immutable/OldHashMap;II)V
        80: invokeinterface #170,  2          // InterfaceMethod scala/collection/parallel/TaskSupport.executeAndWaitResult:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
        85: pop
        86: iconst_0
        87: istore        4
        89: iconst_0
        90: istore        5
        92: iload         5
        94: getstatic     #42                 // Field scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
        97: invokevirtual #173                // Method scala/collection/parallel/immutable/HashMapCombiner$.rootsize:()I
       100: if_icmpge     134
       103: aload_0
       104: invokevirtual #81                 // Method buckets:()[Lscala/collection/mutable/UnrolledBuffer;
       107: iload         5
       109: aaload
       110: ifnull        125
       113: iload         4
       115: iconst_1
       116: iload         5
       118: ishl
       119: ior
       120: istore        4
       122: goto          125
       125: iload         5
       127: iconst_1
       128: iadd
       129: istore        5
       131: goto          92
       134: getstatic     #109                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       137: getstatic     #114                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       140: aload_3
       141: checkcast     #116                // class "[Ljava/lang/Object;"
       144: invokevirtual #120                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       147: iconst_0
       148: invokestatic  #179                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       151: invokedynamic #238,  0            // InvokeDynamic #5:apply:()Lscala/Function2;
       156: invokevirtual #194                // Method scala/collection/ArrayOps$.foldLeft$extension:(Ljava/lang/Object;Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
       159: invokestatic  #197                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       162: istore        6
       164: iload         6
       166: iconst_0
       167: if_icmpne     180
       170: new           #199                // class scala/collection/parallel/immutable/ParHashMap
       173: dup
       174: invokespecial #202                // Method scala/collection/parallel/immutable/ParHashMap."<init>":()V
       177: goto          222
       180: iload         6
       182: iconst_1
       183: if_icmpne     199
       186: new           #199                // class scala/collection/parallel/immutable/ParHashMap
       189: dup
       190: aload_3
       191: iconst_0
       192: aaload
       193: invokespecial #205                // Method scala/collection/parallel/immutable/ParHashMap."<init>":(Lscala/collection/immutable/OldHashMap;)V
       196: goto          222
       199: new           #16                 // class scala/collection/immutable/OldHashMap$HashTrieMap
       202: dup
       203: iload         4
       205: aload_3
       206: iload         6
       208: invokespecial #208                // Method scala/collection/immutable/OldHashMap$HashTrieMap."<init>":(I[Lscala/collection/immutable/OldHashMap;I)V
       211: astore        7
       213: new           #199                // class scala/collection/parallel/immutable/ParHashMap
       216: dup
       217: aload         7
       219: invokespecial #205                // Method scala/collection/parallel/immutable/ParHashMap."<init>":(Lscala/collection/immutable/OldHashMap;)V
       222: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 92
          locals = [ class scala/collection/parallel/immutable/HashMapCombiner, class scala/Function0, class "[Lscala/collection/mutable/UnrolledBuffer$Unrolled;", class "[Lscala/collection/immutable/OldHashMap;", int, int ]
          stack = []
        frame_type = 32 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ int ]
        frame_type = 18 /* same */
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/immutable/ParHashMap ]
      LineNumberTable:
        line 199: 0
        line 200: 56
        line 202: 62
        line 204: 86
        line 205: 89
        line 206: 92
        line 207: 103
        line 208: 125
        line 206: 131
        line 210: 134
        line 212: 164
        line 213: 180
        line 215: 199
        line 216: 213
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          213       9     7  trie   Lscala/collection/immutable/OldHashMap$HashTrieMap;
           56     166     2 bucks   [Lscala/collection/mutable/UnrolledBuffer$Unrolled;
           62     160     3  root   [Lscala/collection/immutable/OldHashMap;
           89     133     4 bitmap   I
           92     130     5     i   I
          164      58     6    sz   I
            0     223     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;
            0     223     1   cbf   Lscala/Function0;
    Signature: #219                         // <Repr:Ljava/lang/Object;>(Lscala/Function0<Lscala/collection/parallel/Combiner<TV;TRepr;>;>;)Lscala/collection/parallel/immutable/ParHashMap<TK;TRepr;>;
    MethodParameters:
      Name                           Flags
      cbf                            final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #245                // class java/lang/StringBuilder
         3: dup
         4: ldc           #246                // int 22
         6: invokespecial #248                // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #250                // String HashTrieCombiner(sz:
        11: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: invokevirtual #257                // Method size:()I
        18: invokevirtual #260                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        21: ldc_w         #262                // String )
        24: invokevirtual #254                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: invokevirtual #264                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        30: areturn
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #266                // Method result:()Lscala/collection/parallel/immutable/ParHashMap;
         4: areturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;

  public scala.collection.mutable.Growable addOne(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #69                 // class scala/Tuple2
         5: invokevirtual #268                // Method addOne:(Lscala/Tuple2;)Lscala/collection/parallel/immutable/HashMapCombiner;
         8: areturn
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;
            0       9     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static final boolean $anonfun$result$1(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   x$3   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final scala.collection.mutable.UnrolledBuffer$Unrolled $anonfun$result$2(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #278                // Method scala/collection/mutable/UnrolledBuffer.headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
         4: areturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final int $anonfun$result$3(int, scala.collection.immutable.OldHashMap);
    descriptor: (ILscala/collection/immutable/OldHashMap;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokevirtual #283                // Method scala/collection/immutable/OldHashMap.size:()I
         5: iadd
         6: ireturn
      LineNumberTable:
        line 188: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0   x$5   I
            0       7     1   x$6   Lscala/collection/immutable/OldHashMap;
    MethodParameters:
      Name                           Flags
      x$5                            final
      x$6                            final

  public static final boolean $anonfun$groupByKey$1(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   x$7   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final scala.collection.mutable.UnrolledBuffer$Unrolled $anonfun$groupByKey$2(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #278                // Method scala/collection/mutable/UnrolledBuffer.headPtr:()Lscala/collection/mutable/UnrolledBuffer$Unrolled;
         4: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$8   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final int $anonfun$groupByKey$3(int, scala.collection.immutable.OldHashMap);
    descriptor: (ILscala/collection/immutable/OldHashMap;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokevirtual #283                // Method scala/collection/immutable/OldHashMap.size:()I
         5: iadd
         6: ireturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0   x$9   I
            0       7     1  x$10   Lscala/collection/immutable/OldHashMap;
    MethodParameters:
      Name                           Flags
      x$9                            final
      x$10                           final

  public scala.collection.parallel.immutable.HashMapCombiner();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #42                 // Field scala/collection/parallel/immutable/HashMapCombiner$.MODULE$:Lscala/collection/parallel/immutable/HashMapCombiner$;
         4: invokevirtual #173                // Method scala/collection/parallel/immutable/HashMapCombiner$.rootsize:()I
         7: invokespecial #290                // Method scala/collection/parallel/BucketCombiner."<init>":(I)V
        10: aload_0
        11: getstatic     #295                // Field scala/collection/immutable/OldHashMap$.MODULE$:Lscala/collection/immutable/OldHashMap$;
        14: invokevirtual #298                // Method scala/collection/immutable/OldHashMap$.empty:()Lscala/collection/immutable/OldHashMap;
        17: putfield      #48                 // Field emptyTrie:Lscala/collection/immutable/OldHashMap;
        20: return
      LineNumberTable:
        line 158: 0
        line 161: 10
        line 158: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/parallel/immutable/HashMapCombiner;

  public static final java.lang.Object $anonfun$result$1$adapted(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #300                // Method $anonfun$result$1:(Lscala/collection/mutable/UnrolledBuffer;)Z
         4: invokestatic  #304                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.Object $anonfun$result$3$adapted(java.lang.Object, scala.collection.immutable.OldHashMap);
    descriptor: (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #197                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #306                // Method $anonfun$result$3:(ILscala/collection/immutable/OldHashMap;)I
         8: invokestatic  #179                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 188: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$5   Ljava/lang/Object;
            0      12     1   x$6   Lscala/collection/immutable/OldHashMap;
    MethodParameters:
      Name                           Flags
      x$5                            final
      x$6                            final

  public static final java.lang.Object $anonfun$groupByKey$1$adapted(scala.collection.mutable.UnrolledBuffer);
    descriptor: (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #308                // Method $anonfun$groupByKey$1:(Lscala/collection/mutable/UnrolledBuffer;)Z
         4: invokestatic  #304                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$7   Lscala/collection/mutable/UnrolledBuffer;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final java.lang.Object $anonfun$groupByKey$3$adapted(java.lang.Object, scala.collection.immutable.OldHashMap);
    descriptor: (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #197                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #310                // Method $anonfun$groupByKey$3:(ILscala/collection/immutable/OldHashMap;)I
         8: invokestatic  #179                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$9   Ljava/lang/Object;
            0      12     1  x$10   Lscala/collection/immutable/OldHashMap;
    MethodParameters:
      Name                           Flags
      x$9                            final
      x$10                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #322,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #19= #16 of #18;    // HashTrieMap=class scala/collection/immutable/OldHashMap$HashTrieMap of class scala/collection/immutable/OldHashMap
  public static #24= #21 of #23;          // Unrolled=class scala/collection/mutable/UnrolledBuffer$Unrolled of class scala/collection/mutable/UnrolledBuffer
  public #27= #26 of #2;                  // CreateGroupedTrie=class scala/collection/parallel/immutable/HashMapCombiner$CreateGroupedTrie of class scala/collection/parallel/immutable/HashMapCombiner
  public #30= #29 of #2;                  // CreateTrie=class scala/collection/parallel/immutable/HashMapCombiner$CreateTrie of class scala/collection/parallel/immutable/HashMapCombiner
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/parallel/BucketCombiner<Lscala/Tuple2<TK;TV;>;Lscala/collection/parallel/immutable/ParHashMap<TK;TV;>;Lscala/Tuple2<TK;TV;>;Lscala/collection/parallel/immutable/HashMapCombiner<TK;TV;>;>;
SourceFile: "ParHashMap.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005ehA\u0002\u0017.\u0003\u0003yS\u0007C\u0003T\u0001\u0011\u0005A\u000bC\u0004V\u0001\t\u0007I\u0011\u0001,\t\rq\u0003\u0001\u0015!\u0003X\u0011\u0015i\u0006\u0001\"\u0001_\u0011\u0015\u0011\u0007\u0001\"\u0001d\u0011\u0015!\u0007\u0001\"\u0001f\u0011\u0015\u0019\b\u0001\"\u0011u\r\u0011i\b\u0001\u0001@\t\u0015\u0005M\u0001B!A!\u0002\u0013\t)\u0002\u0003\u0006\u0002@!\u0011\t\u0011)A\u0005\u0003\u0003B!\"a\u0011\t\u0005\u0003\u0005\u000b\u0011BA#\u0011)\tY\u0005\u0003B\u0001B\u0003%\u0011Q\t\u0005\u0007\'\"!\t!!\u0014\t\u0011\tD\u0001\u0019!C\u0001\u0003/B\u0011\"!\u0017\t\u0001\u0004%\t!a\u0017\t\u0011\u0005\u0005\u0004\u0002)Q\u0005\u0003\u0017Aq!a\u001b\t\t\u0003\ti\u0007C\u0004\u0002z!!I!a\u001f\t\u000f\u0005\u0005\u0005\u0002\"\u0001\u0002\u0004\"9\u00111\u0012\u0005\u0005\u0002\u00055eABAK\u0001\u0001\t9\nC\u0005m+\t\u0005\t\u0015!\u0003\u0002$\"Q\u00111C\u000b\u0003\u0002\u0003\u0006I!!\u0006\t\u0015\u0005}RC!A!\u0002\u0013\t9\u000b\u0003\u0006\u0002DU\u0011\t\u0011)A\u0005\u0003\u000bB!\"a\u0013\u0016\u0005\u0003\u0005\u000b\u0011BA#\u0011\u0019\u0019V\u0003\"\u0001\u0002,\"A!-\u0006a\u0001\n\u0003\t9\u0006C\u0005\u0002ZU\u0001\r\u0011\"\u0001\u00028\"A\u0011\u0011M\u000b!B\u0013\tY\u0001C\u0004\u0002lU!\t!!0\t\u000f\u0005\u0005W\u0003\"\u0003\u0002D\"9\u0011\u0011Z\u000b\u0005\n\u0005-\u0007bBAA+\u0011\u0005\u00111\u001b\u0005\b\u0003\u0017+B\u0011AAG\u000f!\t9.\fE\u0001_\u0005ega\u0002\u0017.\u0011\u0003y\u00131\u001c\u0005\u0007\'\u0016\"\t!!8\t\u000f\u0005}W\u0005\"\u0001\u0002b\"Q\u0011q^\u0013C\u0002\u0013\u0005Q&!=\t\u0011\u0005MX\u0005)A\u0005\u0003\u000bB!\"!>&\u0005\u0004%\t!LAy\u0011!\t90\nQ\u0001\n\u0005\u0015#a\u0004%bg\"l\u0015\r]\"p[\nLg.\u001a:\u000b\u00059z\u0013!C5n[V$\u0018M\u00197f\u0015\t\u0001\u0014\'\u0001\u0005qCJ\fG\u000e\\3m\u0015\t\u00114\'\u0001\u0006d_2dWm\u0019;j_:T\u0011\u0001N\u0001\u0006g\u000e\fG.Y\u000b\u0004m\u0005c5C\u0001\u00018!\u0019A\u0014h\u000f(<%6\tq&\u0003\u0002;_\tq!)^2lKR\u001cu.\u001c2j]\u0016\u0014\b\u0003\u0002\u001f>\u007f-k\u0011aM\u0005\u0003}M\u0012a\u0001V;qY\u0016\u0014\u0004C\u0001!B\u0019\u0001!QA\u0011\u0001C\u0002\u0011\u0013\u0011aS\u0002\u0001#\t)\u0005\n\u0005\u0002=\r&\u0011qi\r\u0002\b\u001d>$\b.\u001b8h!\ta\u0014*\u0003\u0002Kg\t\u0019\u0011I\\=\u0011\u0005\u0001cE!B\'\u0001\u0005\u0004!%!\u0001,\u0011\t=\u0003vhS\u0007\u0002[%\u0011\u0011+\f\u0002\u000b!\u0006\u0014\b*Y:i\u001b\u0006\u0004\b\u0003B(\u0001\u007f-\u000ba\u0001P5oSRtD#\u0001*\u0002\u0013\u0015l\u0007\u000f^=Ue&,W#A,\u0011\taSvhS\u0007\u00023*\u0011a&M\u0005\u00037f\u0013!b\u00147e\u0011\u0006\u001c\b.T1q\u0003))W\u000e\u001d;z)JLW\rI\u0001\u0007C\u0012$wJ\\3\u0015\u0005}\u0003W\"\u0001\u0001\t\u000b\u0005$\u0001\u0019A\u001e\u0002\t\u0015dW-\\\u0001\u0007e\u0016\u001cX\u000f\u001c;\u0015\u00039\u000b!b\u001a:pkB\u0014\u0015pS3z+\t1\u0017\u000e\u0006\u0002hWB!q\nU i!\t\u0001\u0015\u000eB\u0003k\r\t\u0007AI\u0001\u0003SKB\u0014\b\"\u00027\u0007\u0001\u0004i\u0017aA2cMB\u0019AH\u001c9\n\u0005=\u001c$!\u0003$v]\u000e$\u0018n\u001c81!\u0011A\u0014o\u00135\n\u0005I|#\u0001C\"p[\nLg.\u001a:\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012!\u001e\t\u0003mnl\u0011a\u001e\u0006\u0003qf\fA\u0001\\1oO*\t!0\u0001\u0003kCZ\f\u0017B\u0001?x\u0005\u0019\u0019FO]5oO\nQ1I]3bi\u0016$&/[3\u0014\t!y\u0018Q\u0001\t\u0004y\u0005\u0005\u0011bAA\u0002g\t1\u0011I\\=SK\u001a\u0004r\u0001OA\u0004\u0003\u0017\t\t\"C\u0002\u0002\n=\u0012A\u0001V1tWB\u0019A(!\u0004\n\u0007\u0005=1G\u0001\u0003V]&$\bCA0\t\u0003\u0015\u0011WoY6t!\u0015a\u0014qCA\u000e\u0013\r\tIb\r\u0002\u0006\u0003J\u0014\u0018-\u001f\t\u0006\u0003;\tId\u000f\b\u0005\u0003?\t\u0019D\u0004\u0003\u0002\"\u0005=b\u0002BA\u0012\u0003[qA!!\n\u0002,5\u0011\u0011q\u0005\u0006\u0004\u0003S\u0019\u0015A\u0002\u001fs_>$h(C\u00015\u0013\t\u00114\'C\u0002\u00022E\nq!\\;uC\ndW-\u0003\u0003\u00026\u0005]\u0012AD+oe>dG.\u001a3Ck\u001a4WM\u001d\u0006\u0004\u0003c\t\u0014\u0002BA\u001e\u0003{\u0011\u0001\"\u00168s_2dW\r\u001a\u0006\u0005\u0003k\t9$\u0001\u0003s_>$\b\u0003\u0002\u001f\u0002\u0018]\u000baa\u001c4gg\u0016$\bc\u0001\u001f\u0002H%\u0019\u0011\u0011J\u001a\u0003\u0007%sG/A\u0004i_^l\u0017M\\=\u0015\u0015\u0005E\u0011qJA)\u0003\'\n)\u0006C\u0004\u0002\u00145\u0001\r!!\u0006\t\u000f\u0005}R\u00021\u0001\u0002B!9\u00111I\u0007A\u0002\u0005\u0015\u0003bBA&\u001b\u0001\u0007\u0011QI\u000b\u0003\u0003\u0017\t!B]3tk2$x\fJ3r)\u0011\tY!!\u0018\t\u0013\u0005}s\"!AA\u0002\u0005-\u0011a\u0001=%c\u00059!/Z:vYR\u0004\u0003f\u0001\t\u0002fA\u0019A(a\u001a\n\u0007\u0005%4G\u0001\u0005w_2\fG/\u001b7f\u0003\u0011aW-\u00194\u0015\t\u0005-\u0011q\u000e\u0005\b\u0003c\n\u0002\u0019AA:\u0003\u0011\u0001(/\u001a<\u0011\u000bq\n)(a\u0003\n\u0007\u0005]4G\u0001\u0004PaRLwN\\\u0001\u000bGJ,\u0017\r^3Ue&,GcA,\u0002~!9\u0011q\u0010\nA\u0002\u0005m\u0011!B3mK6\u001c\u0018!B:qY&$XCAAC!\u0015A\u0016qQA\t\u0013\r\tI)\u0017\u0002\u0005\u0019&\u001cH/\u0001\ntQ>,H\u000eZ*qY&$h)\u001e:uQ\u0016\u0014XCAAH!\ra\u0014\u0011S\u0005\u0004\u0003\'\u001b$a\u0002\"p_2,\u0017M\u001c\u0002\u0012\u0007J,\u0017\r^3He>,\b/\u001a3Ue&,W\u0003BAM\u0003C\u001bB!F@\u0002\u001cB9\u0001(a\u0002\u0002\f\u0005u\u0005\u0003B0\u0016\u0003?\u00032\u0001QAQ\t\u0015QWC1\u0001E!\u0011ad.!*\u0011\u000ba\n8*a(\u0011\u000bq\n9\"!+\u0011\taSvh \u000b\r\u0003;\u000bi+a,\u00022\u0006M\u0016Q\u0017\u0005\u0007Yn\u0001\r!a)\t\u000f\u0005M1\u00041\u0001\u0002\u0016!9\u0011qH\u000eA\u0002\u0005\u001d\u0006bBA\"7\u0001\u0007\u0011Q\t\u0005\b\u0003\u0017Z\u0002\u0019AA#)\u0011\tY!!/\t\u0013\u0005}S$!AA\u0002\u0005-\u0001f\u0001\u0010\u0002fQ!\u00111BA`\u0011\u001d\t\th\ba\u0001\u0003g\n\u0011c\u0019:fCR,wI]8va\u0016$GK]5f)\u0011\t)-a2\u0011\u000baSv(a(\t\u000f\u0005}\u0004\u00051\u0001\u0002\u001c\u0005\tRM^1mk\u0006$XmQ8nE&tWM]:\u0015\t\u0005\u0015\u0017Q\u001a\u0005\b\u0003\u001f\f\u0003\u0019AAi\u0003\u0011!(/[3\u0011\u000baSv(!*\u0016\u0005\u0005U\u0007#\u0002-\u0002\b\u0006u\u0015a\u0004%bg\"l\u0015\r]\"p[\nLg.\u001a:\u0011\u0005=+3CA\u0013\u0000)\t\tI.A\u0003baBd\u00170\u0006\u0004\u0002d\u0006%\u0018Q^\u000b\u0003\u0003K\u0004ba\u0014\u0001\u0002h\u0006-\bc\u0001!\u0002j\u0012)!i\nb\u0001\tB\u0019\u0001)!<\u0005\u000b5;#\u0019\u0001#\u0002\u0011I|w\u000e\u001e2jiN,\"!!\u0012\u0002\u0013I|w\u000e\u001e2jiN\u0004\u0013\u0001\u0003:p_R\u001c\u0018N_3\u0002\u0013I|w\u000e^:ju\u0016\u0004\u0003"
    )
BootstrapMethods:
  0: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #122 (Ljava/lang/Object;)Ljava/lang/Object;
      #127 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
      #128 (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
      #129 5
      #130 1
      #128 (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  1: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #122 (Ljava/lang/Object;)Ljava/lang/Object;
      #149 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #150 (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #129 5
      #130 1
      #150 (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  2: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #181 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #186 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
      #187 (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
      #129 5
      #130 1
      #187 (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  3: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #122 (Ljava/lang/Object;)Ljava/lang/Object;
      #224 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
      #128 (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
      #129 5
      #130 1
      #128 (Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
  4: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #122 (Ljava/lang/Object;)Ljava/lang/Object;
      #229 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #150 (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #129 5
      #130 1
      #150 (Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
  5: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #181 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #237 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
      #187 (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
      #129 5
      #130 1
      #187 (Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  6: #319 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #224 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
      #229 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #237 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$groupByKey$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
      #127 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$1$adapted:(Lscala/collection/mutable/UnrolledBuffer;)Ljava/lang/Object;
      #149 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$2:(Lscala/collection/mutable/UnrolledBuffer;)Lscala/collection/mutable/UnrolledBuffer$Unrolled;
      #186 REF_invokeStatic scala/collection/parallel/immutable/HashMapCombiner.$anonfun$result$3$adapted:(Ljava/lang/Object;Lscala/collection/immutable/OldHashMap;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x5E (unknown attribute)
   01 00 00 12 01 1C 01 0F 01 00 DD 00 7C 01 00 E2
   00 92 01 01 1F 01 18 01 00 EA 00 B7 01 01 0E 01
   0F 01 00 7B 00 7C 01 00 91 00 92 01 01 17 01 18
   01 00 B6 00 B7 01 00 5A 00 C8 00 00 33 00 5F 00
   00 33 00 34 00 00 1F 00 2D 00 00 D9 00 DA 00 00
   66 00 47 00 00 66 00 67 00 00 F2 00 F3 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
