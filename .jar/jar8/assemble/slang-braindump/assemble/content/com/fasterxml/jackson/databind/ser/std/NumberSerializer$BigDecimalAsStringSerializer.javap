Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer.class
  Last modified May 29, 2022; size 2942 bytes
  SHA-256 checksum a45e24982128334c732f6c8a480319b4b1e0d4e2f14daa8c3d61e554e202d85a
  Compiled from "NumberSerializer.java"
final class com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer extends com.fasterxml.jackson.databind.ser.std.ToStringSerializerBase
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #18                         // com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer
  super_class: #21                        // com/fasterxml/jackson/databind/ser/std/ToStringSerializerBase
  interfaces: 0, fields: 1, methods: 6, attributes: 2
Constant pool:
    #1 = Class              #62           // com/fasterxml/jackson/databind/ser/std/NumberSerializer
    #2 = Class              #63           // java/math/BigDecimal
    #3 = Methodref          #21.#64       // com/fasterxml/jackson/databind/ser/std/ToStringSerializerBase."<init>":(Ljava/lang/Class;)V
    #4 = Fieldref           #65.#66       // com/fasterxml/jackson/core/JsonGenerator$Feature.WRITE_BIGDECIMAL_AS_PLAIN:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;
    #5 = Methodref          #67.#68       // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
    #6 = Methodref          #18.#69       // com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer._verifyBigDecimalRange:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/math/BigDecimal;)Z
    #7 = String             #70           // Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]
    #8 = Class              #71           // java/lang/Object
    #9 = Methodref          #2.#72        // java/math/BigDecimal.scale:()I
   #10 = Methodref          #73.#74       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #11 = Methodref          #75.#76       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #12 = Methodref          #77.#78       // com/fasterxml/jackson/databind/SerializerProvider.reportMappingProblem:(Ljava/lang/String;[Ljava/lang/Object;)V
   #13 = Methodref          #2.#79        // java/math/BigDecimal.toPlainString:()Ljava/lang/String;
   #14 = Methodref          #8.#80        // java/lang/Object.toString:()Ljava/lang/String;
   #15 = Methodref          #67.#81       // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
   #16 = Class              #82           // java/lang/IllegalStateException
   #17 = Methodref          #16.#83       // java/lang/IllegalStateException."<init>":()V
   #18 = Class              #84           // com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer
   #19 = Methodref          #18.#83       // com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer."<init>":()V
   #20 = Fieldref           #18.#85       // com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer.BD_INSTANCE:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
   #21 = Class              #86           // com/fasterxml/jackson/databind/ser/std/ToStringSerializerBase
   #22 = Utf8               BD_INSTANCE
   #23 = Utf8               BigDecimalAsStringSerializer
   #24 = Utf8               InnerClasses
   #25 = Utf8               Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
   #26 = Utf8               <init>
   #27 = Utf8               ()V
   #28 = Utf8               Code
   #29 = Utf8               LineNumberTable
   #30 = Utf8               LocalVariableTable
   #31 = Utf8               this
   #32 = Utf8               isEmpty
   #33 = Utf8               (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z
   #34 = Utf8               prov
   #35 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
   #36 = Utf8               value
   #37 = Utf8               Ljava/lang/Object;
   #38 = Utf8               serialize
   #39 = Utf8               (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
   #40 = Utf8               errorMsg
   #41 = Utf8               Ljava/lang/String;
   #42 = Utf8               bd
   #43 = Utf8               Ljava/math/BigDecimal;
   #44 = Utf8               text
   #45 = Utf8               gen
   #46 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
   #47 = Utf8               provider
   #48 = Utf8               StackMapTable
   #49 = Class              #63           // java/math/BigDecimal
   #50 = Class              #87           // java/lang/String
   #51 = Utf8               Exceptions
   #52 = Class              #88           // java/io/IOException
   #53 = Utf8               valueToString
   #54 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #55 = Utf8               _verifyBigDecimalRange
   #56 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/math/BigDecimal;)Z
   #57 = Utf8               scale
   #58 = Utf8               I
   #59 = Utf8               <clinit>
   #60 = Utf8               SourceFile
   #61 = Utf8               NumberSerializer.java
   #62 = Utf8               com/fasterxml/jackson/databind/ser/std/NumberSerializer
   #63 = Utf8               java/math/BigDecimal
   #64 = NameAndType        #26:#89       // "<init>":(Ljava/lang/Class;)V
   #65 = Class              #90           // com/fasterxml/jackson/core/JsonGenerator$Feature
   #66 = NameAndType        #92:#93       // WRITE_BIGDECIMAL_AS_PLAIN:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;
   #67 = Class              #94           // com/fasterxml/jackson/core/JsonGenerator
   #68 = NameAndType        #95:#96       // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
   #69 = NameAndType        #55:#56       // _verifyBigDecimalRange:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/math/BigDecimal;)Z
   #70 = Utf8               Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]
   #71 = Utf8               java/lang/Object
   #72 = NameAndType        #57:#97       // scale:()I
   #73 = Class              #98           // java/lang/Integer
   #74 = NameAndType        #99:#100      // valueOf:(I)Ljava/lang/Integer;
   #75 = Class              #87           // java/lang/String
   #76 = NameAndType        #101:#102     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #77 = Class              #103          // com/fasterxml/jackson/databind/SerializerProvider
   #78 = NameAndType        #104:#105     // reportMappingProblem:(Ljava/lang/String;[Ljava/lang/Object;)V
   #79 = NameAndType        #106:#107     // toPlainString:()Ljava/lang/String;
   #80 = NameAndType        #108:#107     // toString:()Ljava/lang/String;
   #81 = NameAndType        #109:#110     // writeString:(Ljava/lang/String;)V
   #82 = Utf8               java/lang/IllegalStateException
   #83 = NameAndType        #26:#27       // "<init>":()V
   #84 = Utf8               com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer
   #85 = NameAndType        #22:#25       // BD_INSTANCE:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
   #86 = Utf8               com/fasterxml/jackson/databind/ser/std/ToStringSerializerBase
   #87 = Utf8               java/lang/String
   #88 = Utf8               java/io/IOException
   #89 = Utf8               (Ljava/lang/Class;)V
   #90 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature
   #91 = Utf8               Feature
   #92 = Utf8               WRITE_BIGDECIMAL_AS_PLAIN
   #93 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;
   #94 = Utf8               com/fasterxml/jackson/core/JsonGenerator
   #95 = Utf8               isEnabled
   #96 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
   #97 = Utf8               ()I
   #98 = Utf8               java/lang/Integer
   #99 = Utf8               valueOf
  #100 = Utf8               (I)Ljava/lang/Integer;
  #101 = Utf8               format
  #102 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #103 = Utf8               com/fasterxml/jackson/databind/SerializerProvider
  #104 = Utf8               reportMappingProblem
  #105 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)V
  #106 = Utf8               toPlainString
  #107 = Utf8               ()Ljava/lang/String;
  #108 = Utf8               toString
  #109 = Utf8               writeString
  #110 = Utf8               (Ljava/lang/String;)V
{
  static final com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer BD_INSTANCE;
    descriptor: Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  public com.fasterxml.jackson.databind.ser.std.NumberSerializer$BigDecimalAsStringSerializer();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #2                  // class java/math/BigDecimal
         3: invokespecial #3                  // Method com/fasterxml/jackson/databind/ser/std/ToStringSerializerBase."<init>":(Ljava/lang/Class;)V
         6: return
      LineNumberTable:
        line 127: 0
        line 128: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;

  public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object);
    descriptor: (Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=3
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
            0       2     1  prov   Lcom/fasterxml/jackson/databind/SerializerProvider;
            0       2     2 value   Ljava/lang/Object;

  public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=4
         0: aload_2
         1: getstatic     #4                  // Field com/fasterxml/jackson/core/JsonGenerator$Feature.WRITE_BIGDECIMAL_AS_PLAIN:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;
         4: invokevirtual #5                  // Method com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z
         7: ifeq          86
        10: aload_1
        11: checkcast     #2                  // class java/math/BigDecimal
        14: astore        5
        16: aload_0
        17: aload_2
        18: aload         5
        20: invokevirtual #6                  // Method _verifyBigDecimalRange:(Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/math/BigDecimal;)Z
        23: ifne          76
        26: ldc           #7                  // String Attempt to write plain `java.math.BigDecimal` (see JsonGenerator.Feature.WRITE_BIGDECIMAL_AS_PLAIN) with illegal scale (%d): needs to be between [-%d, %d]
        28: iconst_3
        29: anewarray     #8                  // class java/lang/Object
        32: dup
        33: iconst_0
        34: aload         5
        36: invokevirtual #9                  // Method java/math/BigDecimal.scale:()I
        39: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        42: aastore
        43: dup
        44: iconst_1
        45: sipush        9999
        48: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        51: aastore
        52: dup
        53: iconst_2
        54: sipush        9999
        57: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        60: aastore
        61: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        64: astore        6
        66: aload_3
        67: aload         6
        69: iconst_0
        70: anewarray     #8                  // class java/lang/Object
        73: invokevirtual #12                 // Method com/fasterxml/jackson/databind/SerializerProvider.reportMappingProblem:(Ljava/lang/String;[Ljava/lang/Object;)V
        76: aload         5
        78: invokevirtual #13                 // Method java/math/BigDecimal.toPlainString:()Ljava/lang/String;
        81: astore        4
        83: goto          92
        86: aload_1
        87: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;
        90: astore        4
        92: aload_2
        93: aload         4
        95: invokevirtual #15                 // Method com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V
        98: return
      LineNumberTable:
        line 142: 0
        line 143: 10
        line 145: 16
        line 148: 26
        line 150: 36
        line 148: 61
        line 151: 66
        line 153: 76
        line 154: 83
        line 155: 86
        line 157: 92
        line 158: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      10     6 errorMsg   Ljava/lang/String;
           16      67     5    bd   Ljava/math/BigDecimal;
           83       3     4  text   Ljava/lang/String;
            0      99     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
            0      99     1 value   Ljava/lang/Object;
            0      99     2   gen   Lcom/fasterxml/jackson/core/JsonGenerator;
            0      99     3 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
           92       7     4  text   Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 76
          locals = [ top, class java/math/BigDecimal ]
        frame_type = 249 /* chop */
          offset_delta = 9
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ class java/lang/String ]
    Exceptions:
      throws java.io.IOException

  public java.lang.String valueToString(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #16                 // class java/lang/IllegalStateException
         3: dup
         4: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":()V
         7: athrow
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
            0       8     1 value   Ljava/lang/Object;

  protected boolean _verifyBigDecimalRange(com.fasterxml.jackson.core.JsonGenerator, java.math.BigDecimal) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/math/BigDecimal;)Z
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=4, args_size=3
         0: aload_2
         1: invokevirtual #9                  // Method java/math/BigDecimal.scale:()I
         4: istore_3
         5: iload_3
         6: sipush        -9999
         9: if_icmplt     23
        12: iload_3
        13: sipush        9999
        16: if_icmpgt     23
        19: iconst_1
        20: goto          24
        23: iconst_0
        24: ireturn
      LineNumberTable:
        line 168: 0
        line 169: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
            0      25     1   gen   Lcom/fasterxml/jackson/core/JsonGenerator;
            0      25     2 value   Ljava/math/BigDecimal;
            5      20     3 scale   I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 23
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #18                 // class com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer
         3: dup
         4: invokespecial #19                 // Method "<init>":()V
         7: putstatic     #20                 // Field BD_INSTANCE:Lcom/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer;
        10: return
      LineNumberTable:
        line 124: 0
}
SourceFile: "NumberSerializer.java"
InnerClasses:
  static final #23= #18 of #1;            // BigDecimalAsStringSerializer=class com/fasterxml/jackson/databind/ser/std/NumberSerializer$BigDecimalAsStringSerializer of class com/fasterxml/jackson/databind/ser/std/NumberSerializer
  public static final #91= #65 of #67;    // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator
