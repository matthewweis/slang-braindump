Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/CircularQueue$.class
  Last modified May 29, 2022; size 8786 bytes
  SHA-256 checksum f031ef568d81337a19d46ad35d4714b1195523f625b5e4e9da6cba0390d85703
  Compiled from "CircularQueue.scala"
public final class org.sireum.CircularQueue$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/CircularQueue$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/CircularQueue$
    #2 = Class              #1            // org/sireum/CircularQueue$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               CircularQueue.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/CircularQueue$DropFront
   #12 = Class              #11           // org/sireum/CircularQueue$DropFront
   #13 = Utf8               org/sireum/CircularQueue
   #14 = Class              #13           // org/sireum/CircularQueue
   #15 = Utf8               DropFront
   #16 = Utf8               org/sireum/CircularQueue$DropFront$
   #17 = Class              #16           // org/sireum/CircularQueue$DropFront$
   #18 = Utf8               DropFront$
   #19 = Utf8               org/sireum/CircularQueue$DropRear
   #20 = Class              #19           // org/sireum/CircularQueue$DropRear
   #21 = Utf8               DropRear
   #22 = Utf8               org/sireum/CircularQueue$DropRear$
   #23 = Class              #22           // org/sireum/CircularQueue$DropRear$
   #24 = Utf8               DropRear$
   #25 = Utf8               org/sireum/CircularQueue$NoDrop
   #26 = Class              #25           // org/sireum/CircularQueue$NoDrop
   #27 = Utf8               NoDrop
   #28 = Utf8               org/sireum/CircularQueue$NoDrop$
   #29 = Class              #28           // org/sireum/CircularQueue$NoDrop$
   #30 = Utf8               NoDrop$
   #31 = Utf8               org/sireum/CircularQueue$Policy$
   #32 = Class              #31           // org/sireum/CircularQueue$Policy$
   #33 = Utf8               Policy$
   #34 = Utf8               org/sireum/CircularQueue$Policy$DropFront$
   #35 = Class              #34           // org/sireum/CircularQueue$Policy$DropFront$
   #36 = Utf8               org/sireum/CircularQueue$Policy$DropRear$
   #37 = Class              #36           // org/sireum/CircularQueue$Policy$DropRear$
   #38 = Utf8               org/sireum/CircularQueue$Policy$NoDrop$
   #39 = Class              #38           // org/sireum/CircularQueue$Policy$NoDrop$
   #40 = Utf8               org/sireum/CircularQueue$Policy$Type
   #41 = Class              #40           // org/sireum/CircularQueue$Policy$Type
   #42 = Utf8               Type
   #43 = Utf8               org/sireum/contract$All$
   #44 = Class              #43           // org/sireum/contract$All$
   #45 = Utf8               org/sireum/contract
   #46 = Class              #45           // org/sireum/contract
   #47 = Utf8               All$
   #48 = Utf8               MODULE$
   #49 = Utf8               Lorg/sireum/CircularQueue$;
   #50 = Utf8               <clinit>
   #51 = Utf8               ()V
   #52 = Utf8               <init>
   #53 = NameAndType        #52:#51       // "<init>":()V
   #54 = Methodref          #2.#53        // org/sireum/CircularQueue$."<init>":()V
   #55 = NameAndType        #48:#49       // MODULE$:Lorg/sireum/CircularQueue$;
   #56 = Fieldref           #2.#55        // org/sireum/CircularQueue$.MODULE$:Lorg/sireum/CircularQueue$;
   #57 = Utf8               inv
   #58 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;ZLorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)Z
   #59 = Utf8               <E:Ljava/lang/Object;>(Lorg/sireum/Z;TE;ZLorg/sireum/MS<Lorg/sireum/Z;TE;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)Z
   #60 = Utf8               max
   #61 = Utf8               default
   #62 = Utf8               scrub
   #63 = Utf8               queue
   #64 = Utf8               front
   #65 = Utf8               rear
   #66 = Utf8               numOfElements
   #67 = Utf8               org/sireum/B$
   #68 = Class              #67           // org/sireum/B$
   #69 = Utf8               Lorg/sireum/B$;
   #70 = NameAndType        #48:#69       // MODULE$:Lorg/sireum/B$;
   #71 = Fieldref           #68.#70       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #72 = Utf8               org/sireum/Z$
   #73 = Class              #72           // org/sireum/Z$
   #74 = Utf8               Lorg/sireum/Z$;
   #75 = NameAndType        #48:#74       // MODULE$:Lorg/sireum/Z$;
   #76 = Fieldref           #73.#75       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #77 = Utf8               apply
   #78 = Utf8               (I)Lorg/sireum/Z;
   #79 = NameAndType        #77:#78       // apply:(I)Lorg/sireum/Z;
   #80 = Methodref          #73.#79       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #81 = Utf8               org/sireum/Z
   #82 = Class              #81           // org/sireum/Z
   #83 = Utf8               $greater
   #84 = Utf8               (Lorg/sireum/Z;)Z
   #85 = NameAndType        #83:#84       // $greater:(Lorg/sireum/Z;)Z
   #86 = InterfaceMethodref #82.#85       // org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
   #87 = Utf8               $plus
   #88 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #89 = NameAndType        #87:#88       // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #90 = InterfaceMethodref #82.#89       // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #91 = Utf8               org/sireum/MS
   #92 = Class              #91           // org/sireum/MS
   #93 = Utf8               size
   #94 = Utf8               ()Lorg/sireum/Z;
   #95 = NameAndType        #93:#94       // size:()Lorg/sireum/Z;
   #96 = Methodref          #92.#95       // org/sireum/MS.size:()Lorg/sireum/Z;
   #97 = Utf8               equals
   #98 = Utf8               (Ljava/lang/Object;)Z
   #99 = NameAndType        #97:#98       // equals:(Ljava/lang/Object;)Z
  #100 = Methodref          #4.#99        // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #101 = Utf8               (Z)Z
  #102 = NameAndType        #77:#101      // apply:(Z)Z
  #103 = Methodref          #68.#102      // org/sireum/B$.apply:(Z)Z
  #104 = Utf8               $amp$extension
  #105 = Utf8               (ZZ)Z
  #106 = NameAndType        #104:#105     // $amp$extension:(ZZ)Z
  #107 = Methodref          #68.#106      // org/sireum/B$.$amp$extension:(ZZ)Z
  #108 = Utf8               isInBound
  #109 = NameAndType        #108:#98      // isInBound:(Ljava/lang/Object;)Z
  #110 = Methodref          #92.#109      // org/sireum/MS.isInBound:(Ljava/lang/Object;)Z
  #111 = Utf8               $less$eq
  #112 = NameAndType        #111:#84      // $less$eq:(Lorg/sireum/Z;)Z
  #113 = InterfaceMethodref #82.#112      // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #114 = Utf8               $greater$eq
  #115 = NameAndType        #114:#84      // $greater$eq:(Lorg/sireum/Z;)Z
  #116 = InterfaceMethodref #82.#115      // org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
  #117 = Utf8               $minus
  #118 = NameAndType        #117:#88      // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #119 = InterfaceMethodref #82.#118      // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #120 = Utf8               $eq$eq$eq$extension
  #121 = NameAndType        #120:#105     // $eq$eq$eq$extension:(ZZ)Z
  #122 = Methodref          #68.#121      // org/sireum/B$.$eq$eq$eq$extension:(ZZ)Z
  #123 = Utf8               $less
  #124 = NameAndType        #123:#84      // $less:(Lorg/sireum/Z;)Z
  #125 = InterfaceMethodref #82.#124      // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #126 = Utf8               org/sireum/package$
  #127 = Class              #126          // org/sireum/package$
  #128 = Utf8               Lorg/sireum/package$;
  #129 = NameAndType        #48:#128      // MODULE$:Lorg/sireum/package$;
  #130 = Fieldref           #127.#129     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #131 = Utf8               All
  #132 = Utf8               ()Lorg/sireum/contract$All$;
  #133 = NameAndType        #131:#132     // All:()Lorg/sireum/contract$All$;
  #134 = Methodref          #127.#133     // org/sireum/package$.All:()Lorg/sireum/contract$All$;
  #135 = Utf8               until
  #136 = Utf8               (Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #137 = NameAndType        #135:#136     // until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #138 = InterfaceMethodref #82.#137      // org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
  #139 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #140 = MethodType         #139          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #141 = Utf8               $anonfun$inv$1$adapted
  #142 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #143 = NameAndType        #141:#142     // $anonfun$inv$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #144 = Methodref          #2.#143       // org/sireum/CircularQueue$.$anonfun$inv$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #145 = MethodHandle       6:#144        // REF_invokeStatic org/sireum/CircularQueue$.$anonfun$inv$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
  #146 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #147 = MethodType         #146          //  (Lorg/sireum/Z;)Ljava/lang/Object;
  #148 = Integer            5
  #149 = Integer            1
  #150 = Utf8               java/lang/invoke/LambdaMetafactory
  #151 = Class              #150          // java/lang/invoke/LambdaMetafactory
  #152 = Utf8               altMetafactory
  #153 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #154 = NameAndType        #152:#153     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #155 = Methodref          #151.#154     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #156 = MethodHandle       6:#155        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #157 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;)Lscala/Function1;
  #158 = NameAndType        #77:#157      // apply:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;)Lscala/Function1;
  #159 = InvokeDynamic      #0:#158       // #0:apply:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;)Lscala/Function1;
  #160 = Utf8               (Lorg/sireum/ZRange;Lscala/Function1;)Z
  #161 = NameAndType        #77:#160      // apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
  #162 = Methodref          #44.#161      // org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
  #163 = Utf8               $minus$greater$colon$extension
  #164 = NameAndType        #163:#105     // $minus$greater$colon$extension:(ZZ)Z
  #165 = Methodref          #68.#164      // org/sireum/B$.$minus$greater$colon$extension:(ZZ)Z
  #166 = Utf8               this
  #167 = Utf8               Lorg/sireum/Z;
  #168 = Utf8               Ljava/lang/Object;
  #169 = Utf8               Z
  #170 = Utf8               Lorg/sireum/MS;
  #171 = Utf8               refinement
  #172 = Utf8               (Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #173 = Utf8               <E:Ljava/lang/Object;>(Lorg/sireum/MS<Lorg/sireum/Z;TE;>;Lorg/sireum/MS<Lorg/sireum/Z;TE;>;Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #174 = Utf8               rep
  #175 = Utf8               indices
  #176 = Utf8               ()Lorg/sireum/ZRange;
  #177 = NameAndType        #175:#176     // indices:()Lorg/sireum/ZRange;
  #178 = Methodref          #92.#177      // org/sireum/MS.indices:()Lorg/sireum/ZRange;
  #179 = Utf8               $anonfun$refinement$1$adapted
  #180 = Utf8               (Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // $anonfun$refinement$1$adapted:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
  #182 = Methodref          #2.#181       // org/sireum/CircularQueue$.$anonfun$refinement$1$adapted:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
  #183 = MethodHandle       6:#182        // REF_invokeStatic org/sireum/CircularQueue$.$anonfun$refinement$1$adapted:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
  #184 = Utf8               (Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;)Lscala/Function1;
  #185 = NameAndType        #77:#184      // apply:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;)Lscala/Function1;
  #186 = InvokeDynamic      #1:#185       // #1:apply:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;)Lscala/Function1;
  #187 = Utf8               $4B
  #188 = NameAndType        #187:#101     // $4B:(Z)Z
  #189 = Methodref          #68.#188      // org/sireum/B$.$4B:(Z)Z
  #190 = Utf8               createEnsures
  #191 = Utf8               (Lorg/sireum/CircularQueue;Lorg/sireum/Z;Ljava/lang/Object;ZLorg/sireum/CircularQueue$Policy$Type;)Z
  #192 = Utf8               <E:Ljava/lang/Object;>(Lorg/sireum/CircularQueue<TE;>;Lorg/sireum/Z;TE;ZLorg/sireum/CircularQueue$Policy$Type;)Z
  #193 = Utf8               res
  #194 = Utf8               policy
  #195 = NameAndType        #60:#94       // max:()Lorg/sireum/Z;
  #196 = InterfaceMethodref #14.#195      // org/sireum/CircularQueue.max:()Lorg/sireum/Z;
  #197 = Utf8               ()Ljava/lang/Object;
  #198 = NameAndType        #61:#197      // default:()Ljava/lang/Object;
  #199 = InterfaceMethodref #14.#198      // org/sireum/CircularQueue.default:()Ljava/lang/Object;
  #200 = Utf8               scala/runtime/BoxesRunTime
  #201 = Class              #200          // scala/runtime/BoxesRunTime
  #202 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #203 = NameAndType        #97:#202      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #204 = Methodref          #201.#203     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #205 = Utf8               ()Z
  #206 = NameAndType        #62:#205      // scrub:()Z
  #207 = InterfaceMethodref #14.#206      // org/sireum/CircularQueue.scrub:()Z
  #208 = Utf8               ()Lorg/sireum/CircularQueue$Policy$Type;
  #209 = NameAndType        #194:#208     // policy:()Lorg/sireum/CircularQueue$Policy$Type;
  #210 = InterfaceMethodref #14.#209      // org/sireum/CircularQueue.policy:()Lorg/sireum/CircularQueue$Policy$Type;
  #211 = Utf8               Lorg/sireum/CircularQueue;
  #212 = Utf8               Lorg/sireum/CircularQueue$Policy$Type;
  #213 = Utf8               create
  #214 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;ZLorg/sireum/CircularQueue$Policy$Type;)Lorg/sireum/CircularQueue;
  #215 = Utf8               <E:Ljava/lang/Object;>(Lorg/sireum/Z;TE;ZLorg/sireum/CircularQueue$Policy$Type;)Lorg/sireum/CircularQueue<TE;>;
  #216 = Utf8               scala/runtime/BoxedUnit
  #217 = Class              #216          // scala/runtime/BoxedUnit
  #218 = Utf8               UNIT
  #219 = Utf8               Lscala/runtime/BoxedUnit;
  #220 = NameAndType        #218:#219     // UNIT:Lscala/runtime/BoxedUnit;
  #221 = Fieldref           #217.#220     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #222 = Utf8               Lorg/sireum/CircularQueue$Policy$NoDrop$;
  #223 = NameAndType        #48:#222      // MODULE$:Lorg/sireum/CircularQueue$Policy$NoDrop$;
  #224 = Fieldref           #39.#223      // org/sireum/CircularQueue$Policy$NoDrop$.MODULE$:Lorg/sireum/CircularQueue$Policy$NoDrop$;
  #225 = Utf8               org/sireum/helper$
  #226 = Class              #225          // org/sireum/helper$
  #227 = Utf8               Lorg/sireum/helper$;
  #228 = NameAndType        #48:#227      // MODULE$:Lorg/sireum/helper$;
  #229 = Fieldref           #226.#228     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #230 = Utf8               Lorg/sireum/CircularQueue$NoDrop$;
  #231 = NameAndType        #48:#230      // MODULE$:Lorg/sireum/CircularQueue$NoDrop$;
  #232 = Fieldref           #29.#231      // org/sireum/CircularQueue$NoDrop$.MODULE$:Lorg/sireum/CircularQueue$NoDrop$;
  #233 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$NoDrop;
  #234 = NameAndType        #213:#233     // create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$NoDrop;
  #235 = Methodref          #29.#234      // org/sireum/CircularQueue$NoDrop$.create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$NoDrop;
  #236 = Utf8               retMut
  #237 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #238 = NameAndType        #236:#237     // retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #239 = Methodref          #226.#238     // org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #240 = Utf8               Lorg/sireum/CircularQueue$Policy$DropFront$;
  #241 = NameAndType        #48:#240      // MODULE$:Lorg/sireum/CircularQueue$Policy$DropFront$;
  #242 = Fieldref           #35.#241      // org/sireum/CircularQueue$Policy$DropFront$.MODULE$:Lorg/sireum/CircularQueue$Policy$DropFront$;
  #243 = Utf8               Lorg/sireum/CircularQueue$DropFront$;
  #244 = NameAndType        #48:#243      // MODULE$:Lorg/sireum/CircularQueue$DropFront$;
  #245 = Fieldref           #17.#244      // org/sireum/CircularQueue$DropFront$.MODULE$:Lorg/sireum/CircularQueue$DropFront$;
  #246 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropFront;
  #247 = NameAndType        #213:#246     // create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropFront;
  #248 = Methodref          #17.#247      // org/sireum/CircularQueue$DropFront$.create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropFront;
  #249 = Utf8               Lorg/sireum/CircularQueue$Policy$DropRear$;
  #250 = NameAndType        #48:#249      // MODULE$:Lorg/sireum/CircularQueue$Policy$DropRear$;
  #251 = Fieldref           #37.#250      // org/sireum/CircularQueue$Policy$DropRear$.MODULE$:Lorg/sireum/CircularQueue$Policy$DropRear$;
  #252 = Utf8               Lorg/sireum/CircularQueue$DropRear$;
  #253 = NameAndType        #48:#252      // MODULE$:Lorg/sireum/CircularQueue$DropRear$;
  #254 = Fieldref           #23.#253      // org/sireum/CircularQueue$DropRear$.MODULE$:Lorg/sireum/CircularQueue$DropRear$;
  #255 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropRear;
  #256 = NameAndType        #213:#255     // create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropRear;
  #257 = Methodref          #23.#256      // org/sireum/CircularQueue$DropRear$.create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropRear;
  #258 = Utf8               scala/MatchError
  #259 = Class              #258          // scala/MatchError
  #260 = Utf8               (Ljava/lang/Object;)V
  #261 = NameAndType        #52:#260      // "<init>":(Ljava/lang/Object;)V
  #262 = Methodref          #259.#261     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #263 = Utf8               $anonfun$inv$1
  #264 = Utf8               (Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Z
  #265 = Utf8               queue$1
  #266 = Utf8               rear$1
  #267 = Utf8               default$1
  #268 = Utf8               i
  #269 = Utf8               org/sireum/ContractUtil$
  #270 = Class              #269          // org/sireum/ContractUtil$
  #271 = Utf8               Lorg/sireum/ContractUtil$;
  #272 = NameAndType        #48:#271      // MODULE$:Lorg/sireum/ContractUtil$;
  #273 = Fieldref           #270.#272     // org/sireum/ContractUtil$.MODULE$:Lorg/sireum/ContractUtil$;
  #274 = Utf8               modPos
  #275 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
  #276 = NameAndType        #274:#275     // modPos:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
  #277 = Methodref          #270.#276     // org/sireum/ContractUtil$.modPos:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
  #278 = NameAndType        #77:#139      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #279 = Methodref          #92.#278      // org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #280 = Utf8               $anonfun$refinement$1
  #281 = Utf8               rep$1
  #282 = Utf8               queue$2
  #283 = Utf8               front$1
  #284 = Methodref          #4.#53        // java/lang/Object."<init>":()V
  #285 = NameAndType        #263:#264     // $anonfun$inv$1:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Z
  #286 = Methodref          #2.#285       // org/sireum/CircularQueue$.$anonfun$inv$1:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Z
  #287 = Utf8               boxToBoolean
  #288 = Utf8               (Z)Ljava/lang/Boolean;
  #289 = NameAndType        #287:#288     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #290 = Methodref          #201.#289     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #291 = NameAndType        #280:#172     // $anonfun$refinement$1:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #292 = Methodref          #2.#291       // org/sireum/CircularQueue$.$anonfun$refinement$1:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Z
  #293 = Utf8               $deserializeLambda$
  #294 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #295 = Utf8               scala/runtime/LambdaDeserialize
  #296 = Class              #295          // scala/runtime/LambdaDeserialize
  #297 = Utf8               bootstrap
  #298 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #299 = NameAndType        #297:#298     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #300 = Methodref          #296.#299     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #301 = MethodHandle       6:#300        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #302 = Utf8               lambdaDeserialize
  #303 = NameAndType        #302:#294     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #304 = InvokeDynamic      #2:#303       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #305 = Utf8               Code
  #306 = Utf8               LineNumberTable
  #307 = Utf8               StackMapTable
  #308 = Utf8               LocalVariableTable
  #309 = Utf8               Signature
  #310 = Utf8               MethodParameters
  #311 = Utf8               InnerClasses
  #312 = Utf8               SourceFile
  #313 = Utf8               BootstrapMethods
  #314 = Utf8               ScalaInlineInfo
  #315 = Utf8               Scala
{
  public static final org.sireum.CircularQueue$ MODULE$;
    descriptor: Lorg/sireum/CircularQueue$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/CircularQueue$
         3: dup
         4: invokespecial #54                 // Method "<init>":()V
         7: putstatic     #56                 // Field MODULE$:Lorg/sireum/CircularQueue$;
        10: return
      LineNumberTable:
        line 99: 0

  public <E extends java.lang.Object> boolean inv(org.sireum.Z, E, boolean, org.sireum.MS<org.sireum.Z, E>, org.sireum.Z, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Ljava/lang/Object;ZLorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=13, locals=12, args_size=8
         0: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         9: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        12: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        15: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        21: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        24: aload_1
        25: getstatic     #76                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        28: iconst_0
        29: invokevirtual #80                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        32: invokeinterface #86,  2           // InterfaceMethod org/sireum/Z.$greater:(Lorg/sireum/Z;)Z
        37: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        40: aload_1
        41: getstatic     #76                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        44: iconst_1
        45: invokevirtual #80                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        48: invokeinterface #90,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        53: aload         4
        55: invokevirtual #96                 // Method org/sireum/MS.size:()Lorg/sireum/Z;
        58: astore        8
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         8
        67: ifnull        81
        70: goto          85
        73: aload         8
        75: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          85
        81: iconst_1
        82: goto          86
        85: iconst_0
        86: invokevirtual #103                // Method org/sireum/B$.apply:(Z)Z
        89: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
        92: aload         4
        94: aload         5
        96: invokevirtual #110                // Method org/sireum/MS.isInBound:(Ljava/lang/Object;)Z
        99: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       102: aload         4
       104: aload         6
       106: invokevirtual #110                // Method org/sireum/MS.isInBound:(Ljava/lang/Object;)Z
       109: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       112: getstatic     #76                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       115: iconst_0
       116: invokevirtual #80                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       119: aload         7
       121: invokeinterface #113,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
       126: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       129: aload         7
       131: aload_1
       132: invokeinterface #113,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
       137: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       140: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       143: aload         6
       145: aload         5
       147: invokeinterface #116,  2          // InterfaceMethod org/sireum/Z.$greater$eq:(Lorg/sireum/Z;)Z
       152: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       155: aload         7
       157: aload         6
       159: aload         5
       161: invokeinterface #119,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       166: astore        9
       168: dup
       169: ifnonnull     181
       172: pop
       173: aload         9
       175: ifnull        189
       178: goto          193
       181: aload         9
       183: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       186: ifeq          193
       189: iconst_1
       190: goto          194
       193: iconst_0
       194: invokevirtual #103                // Method org/sireum/B$.apply:(Z)Z
       197: invokevirtual #122                // Method org/sireum/B$.$eq$eq$eq$extension:(ZZ)Z
       200: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       203: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       206: aload         6
       208: aload         5
       210: invokeinterface #125,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
       215: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       218: aload         7
       220: aload         6
       222: aload         4
       224: invokevirtual #96                 // Method org/sireum/MS.size:()Lorg/sireum/Z;
       227: invokeinterface #90,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       232: aload         5
       234: invokeinterface #119,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       239: astore        10
       241: dup
       242: ifnonnull     254
       245: pop
       246: aload         10
       248: ifnull        262
       251: goto          266
       254: aload         10
       256: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       259: ifeq          266
       262: iconst_1
       263: goto          267
       266: iconst_0
       267: invokevirtual #103                // Method org/sireum/B$.apply:(Z)Z
       270: invokevirtual #122                // Method org/sireum/B$.$eq$eq$eq$extension:(ZZ)Z
       273: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       276: iload_3
       277: istore        11
       279: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       282: getstatic     #130                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       285: invokevirtual #134                // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
       288: getstatic     #76                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
       291: iconst_0
       292: invokevirtual #80                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
       295: aload         4
       297: invokevirtual #96                 // Method org/sireum/MS.size:()Lorg/sireum/Z;
       300: aload         7
       302: invokeinterface #119,  2          // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
       307: invokeinterface #138,  2          // InterfaceMethod org/sireum/Z.until:(Lorg/sireum/ZLike;)Lorg/sireum/ZRange;
       312: aload         4
       314: aload         6
       316: aload_2
       317: invokedynamic #159,  0            // InvokeDynamic #0:apply:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;)Lscala/Function1;
       322: invokevirtual #162                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
       325: iload         11
       327: invokevirtual #165                // Method org/sireum/B$.$minus$greater$colon$extension:(ZZ)Z
       330: invokevirtual #107                // Method org/sireum/B$.$amp$extension:(ZZ)Z
       333: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 73
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 94
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 59
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$, class org/sireum/Z ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/Z, class java/lang/Object, int, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/B$, int, class org/sireum/B$, int, class org/sireum/B$, int ]
      LineNumberTable:
        line 108: 24
        line 109: 37
        line 110: 92
        line 111: 102
        line 112: 112
        line 113: 129
        line 114: 143
        line 115: 206
        line 116: 276
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     334     0  this   Lorg/sireum/CircularQueue$;
            0     334     1   max   Lorg/sireum/Z;
            0     334     2 default   Ljava/lang/Object;
            0     334     3 scrub   Z
            0     334     4 queue   Lorg/sireum/MS;
            0     334     5 front   Lorg/sireum/Z;
            0     334     6  rear   Lorg/sireum/Z;
            0     334     7 numOfElements   Lorg/sireum/Z;
    Signature: #59                          // <E:Ljava/lang/Object;>(Lorg/sireum/Z;TE;ZLorg/sireum/MS<Lorg/sireum/Z;TE;>;Lorg/sireum/Z;Lorg/sireum/Z;Lorg/sireum/Z;)Z
    MethodParameters:
      Name                           Flags
      max                            final
      default                        final
      scrub                          final
      queue                          final
      front                          final
      rear                           final
      numOfElements                  final

  public <E extends java.lang.Object> boolean refinement(org.sireum.MS<org.sireum.Z, E>, org.sireum.MS<org.sireum.Z, E>, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=6, args_size=5
         0: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #96                 // Method org/sireum/MS.size:()Lorg/sireum/Z;
         7: aload_3
         8: astore        5
        10: dup
        11: ifnonnull     23
        14: pop
        15: aload         5
        17: ifnull        31
        20: goto          35
        23: aload         5
        25: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        28: ifeq          35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        39: getstatic     #130                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        42: invokevirtual #134                // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
        45: aload_1
        46: invokevirtual #178                // Method org/sireum/MS.indices:()Lorg/sireum/ZRange;
        49: aload_1
        50: aload_2
        51: aload         4
        53: invokedynamic #186,  0            // InvokeDynamic #1:apply:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;)Lscala/Function1;
        58: invokevirtual #162                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        61: invokevirtual #189                // Method org/sireum/B$.$4B:(Z)Z
        64: iand
        65: invokevirtual #103                // Method org/sireum/B$.apply:(Z)Z
        68: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/CircularQueue$, class org/sireum/MS, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/MS, class org/sireum/MS, class org/sireum/Z, class org/sireum/Z, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 119: 0
        line 120: 36
        line 119: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      69     0  this   Lorg/sireum/CircularQueue$;
            0      69     1   rep   Lorg/sireum/MS;
            0      69     2 queue   Lorg/sireum/MS;
            0      69     3 numOfElements   Lorg/sireum/Z;
            0      69     4 front   Lorg/sireum/Z;
    Signature: #173                         // <E:Ljava/lang/Object;>(Lorg/sireum/MS<Lorg/sireum/Z;TE;>;Lorg/sireum/MS<Lorg/sireum/Z;TE;>;Lorg/sireum/Z;Lorg/sireum/Z;)Z
    MethodParameters:
      Name                           Flags
      rep                            final
      queue                          final
      numOfElements                  final
      front                          final

  public <E extends java.lang.Object> boolean createEnsures(org.sireum.CircularQueue<E>, org.sireum.Z, E, boolean, org.sireum.CircularQueue$Policy$Type);
    descriptor: (Lorg/sireum/CircularQueue;Lorg/sireum/Z;Ljava/lang/Object;ZLorg/sireum/CircularQueue$Policy$Type;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=6
         0: getstatic     #71                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokeinterface #196,  1          // InterfaceMethod org/sireum/CircularQueue.max:()Lorg/sireum/Z;
         9: aload_2
        10: astore        6
        12: dup
        13: ifnonnull     25
        16: pop
        17: aload         6
        19: ifnull        33
        22: goto          37
        25: aload         6
        27: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        30: ifeq          37
        33: iconst_1
        34: goto          38
        37: iconst_0
        38: aload_1
        39: invokeinterface #199,  1          // InterfaceMethod org/sireum/CircularQueue.default:()Ljava/lang/Object;
        44: aload_3
        45: invokestatic  #204                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        48: ifeq          55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: iand
        57: aload_1
        58: invokeinterface #207,  1          // InterfaceMethod org/sireum/CircularQueue.scrub:()Z
        63: iload         4
        65: if_icmpne     72
        68: iconst_1
        69: goto          73
        72: iconst_0
        73: iand
        74: aload_1
        75: invokeinterface #210,  1          // InterfaceMethod org/sireum/CircularQueue.policy:()Lorg/sireum/CircularQueue$Policy$Type;
        80: aload         5
        82: astore        7
        84: dup
        85: ifnonnull     97
        88: pop
        89: aload         7
        91: ifnull        105
        94: goto          109
        97: aload         7
        99: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       102: ifeq          109
       105: iconst_1
       106: goto          110
       109: iconst_0
       110: iand
       111: invokevirtual #103                // Method org/sireum/B$.apply:(Z)Z
       114: ireturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z, class org/sireum/CircularQueue$Policy$Type ]
          stack = [ class org/sireum/B$, int, class org/sireum/CircularQueue$Policy$Type ]
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z, class org/sireum/CircularQueue$Policy$Type ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z, class org/sireum/CircularQueue$Policy$Type ]
          stack = [ class org/sireum/B$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/CircularQueue$, class org/sireum/CircularQueue, class org/sireum/Z, class java/lang/Object, int, class org/sireum/CircularQueue$Policy$Type, class org/sireum/Z, class org/sireum/CircularQueue$Policy$Type ]
          stack = [ class org/sireum/B$, int, int ]
      LineNumberTable:
        line 125: 0
        line 123: 3
        line 124: 38
        line 125: 57
        line 126: 74
        line 125: 111
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     115     0  this   Lorg/sireum/CircularQueue$;
            0     115     1   res   Lorg/sireum/CircularQueue;
            0     115     2   max   Lorg/sireum/Z;
            0     115     3 default   Ljava/lang/Object;
            0     115     4 scrub   Z
            0     115     5 policy   Lorg/sireum/CircularQueue$Policy$Type;
    Signature: #192                         // <E:Ljava/lang/Object;>(Lorg/sireum/CircularQueue<TE;>;Lorg/sireum/Z;TE;ZLorg/sireum/CircularQueue$Policy$Type;)Z
    MethodParameters:
      Name                           Flags
      res                            final
      max                            final
      default                        final
      scrub                          final
      policy                         final

  public <E extends java.lang.Object> org.sireum.CircularQueue<E> create(org.sireum.Z, E, boolean, org.sireum.CircularQueue$Policy$Type);
    descriptor: (Lorg/sireum/Z;Ljava/lang/Object;ZLorg/sireum/CircularQueue$Policy$Type;)Lorg/sireum/CircularQueue;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=5
         0: getstatic     #221                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload         4
         6: astore        6
         8: getstatic     #224                // Field org/sireum/CircularQueue$Policy$NoDrop$.MODULE$:Lorg/sireum/CircularQueue$Policy$NoDrop$;
        11: aload         6
        13: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        16: ifeq          38
        19: getstatic     #229                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        22: getstatic     #232                // Field org/sireum/CircularQueue$NoDrop$.MODULE$:Lorg/sireum/CircularQueue$NoDrop$;
        25: aload_1
        26: aload_2
        27: iload_3
        28: invokevirtual #235                // Method org/sireum/CircularQueue$NoDrop$.create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$NoDrop;
        31: invokevirtual #239                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        34: checkcast     #26                 // class org/sireum/CircularQueue$NoDrop
        37: areturn
        38: goto          41
        41: getstatic     #242                // Field org/sireum/CircularQueue$Policy$DropFront$.MODULE$:Lorg/sireum/CircularQueue$Policy$DropFront$;
        44: aload         6
        46: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        49: ifeq          71
        52: getstatic     #229                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        55: getstatic     #245                // Field org/sireum/CircularQueue$DropFront$.MODULE$:Lorg/sireum/CircularQueue$DropFront$;
        58: aload_1
        59: aload_2
        60: iload_3
        61: invokevirtual #248                // Method org/sireum/CircularQueue$DropFront$.create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropFront;
        64: invokevirtual #239                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        67: checkcast     #12                 // class org/sireum/CircularQueue$DropFront
        70: areturn
        71: goto          74
        74: getstatic     #251                // Field org/sireum/CircularQueue$Policy$DropRear$.MODULE$:Lorg/sireum/CircularQueue$Policy$DropRear$;
        77: aload         6
        79: invokevirtual #100                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        82: ifeq          104
        85: getstatic     #229                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        88: getstatic     #254                // Field org/sireum/CircularQueue$DropRear$.MODULE$:Lorg/sireum/CircularQueue$DropRear$;
        91: aload_1
        92: aload_2
        93: iload_3
        94: invokevirtual #257                // Method org/sireum/CircularQueue$DropRear$.create:(Lorg/sireum/Z;Ljava/lang/Object;Z)Lorg/sireum/CircularQueue$DropRear;
        97: invokevirtual #239                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
       100: checkcast     #20                 // class org/sireum/CircularQueue$DropRear
       103: areturn
       104: goto          107
       107: new           #259                // class scala/MatchError
       110: dup
       111: aload         6
       113: invokespecial #262                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       116: athrow
      StackMapTable: number_of_entries = 6
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ top, class org/sireum/CircularQueue$Policy$Type ]
        frame_type = 2 /* same */
        frame_type = 29 /* same */
        frame_type = 2 /* same */
        frame_type = 29 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 515: 0
        line 517: 4
        line 518: 8
        line 519: 41
        line 520: 74
        line 517: 107
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     117     0  this   Lorg/sireum/CircularQueue$;
            0     117     1   max   Lorg/sireum/Z;
            0     117     2 default   Ljava/lang/Object;
            0     117     3 scrub   Z
            0     117     4 policy   Lorg/sireum/CircularQueue$Policy$Type;
    Signature: #215                         // <E:Ljava/lang/Object;>(Lorg/sireum/Z;TE;ZLorg/sireum/CircularQueue$Policy$Type;)Lorg/sireum/CircularQueue<TE;>;
    MethodParameters:
      Name                           Flags
      max                            final
      default                        final
      scrub                          final
      policy                         final

  public static final boolean $anonfun$inv$1(org.sireum.MS, org.sireum.Z, java.lang.Object, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getstatic     #273                // Field org/sireum/ContractUtil$.MODULE$:Lorg/sireum/ContractUtil$;
         4: aload_1
         5: aload_3
         6: invokeinterface #90,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        11: aload_0
        12: invokevirtual #96                 // Method org/sireum/MS.size:()Lorg/sireum/Z;
        15: invokevirtual #277                // Method org/sireum/ContractUtil$.modPos:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
        18: invokevirtual #279                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        21: aload_2
        22: invokestatic  #204                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        25: ifeq          32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 32 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0 queue$1   Lorg/sireum/MS;
            0      34     1 rear$1   Lorg/sireum/Z;
            0      34     2 default$1   Ljava/lang/Object;
            0      34     3     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      queue$1                        final
      rear$1                         final
      default$1                      final
      i                              final

  public static final boolean $anonfun$refinement$1(org.sireum.MS, org.sireum.MS, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: invokevirtual #279                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         5: aload_1
         6: getstatic     #273                // Field org/sireum/ContractUtil$.MODULE$:Lorg/sireum/ContractUtil$;
         9: aload_2
        10: aload_3
        11: invokeinterface #90,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        16: aload_1
        17: invokevirtual #96                 // Method org/sireum/MS.size:()Lorg/sireum/Z;
        20: invokevirtual #277                // Method org/sireum/ContractUtil$.modPos:(Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
        23: invokevirtual #279                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        26: invokestatic  #204                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        29: ifeq          36
        32: iconst_1
        33: goto          37
        36: iconst_0
        37: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 36 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0 rep$1   Lorg/sireum/MS;
            0      38     1 queue$2   Lorg/sireum/MS;
            0      38     2 front$1   Lorg/sireum/Z;
            0      38     3     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      rep$1                          final
      queue$2                        final
      front$1                        final
      i                              final

  private org.sireum.CircularQueue$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #284                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 99: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/CircularQueue$;

  public static final java.lang.Object $anonfun$inv$1$adapted(org.sireum.MS, org.sireum.Z, java.lang.Object, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #286                // Method $anonfun$inv$1:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Z
         7: invokestatic  #290                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 queue$1   Lorg/sireum/MS;
            0      11     1 rear$1   Lorg/sireum/Z;
            0      11     2 default$1   Ljava/lang/Object;
            0      11     3     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      queue$1                        final
      rear$1                         final
      default$1                      final
      i                              final

  public static final java.lang.Object $anonfun$refinement$1$adapted(org.sireum.MS, org.sireum.MS, org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #292                // Method $anonfun$refinement$1:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Z
         7: invokestatic  #290                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 rep$1   Lorg/sireum/MS;
            0      11     1 queue$2   Lorg/sireum/MS;
            0      11     2 front$1   Lorg/sireum/Z;
            0      11     3     i   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      rep$1                          final
      queue$2                        final
      front$1                        final
      i                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #304,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #15= #12 of #14;    // DropFront=class org/sireum/CircularQueue$DropFront of class org/sireum/CircularQueue
  public static #18= #17 of #14;          // DropFront$=class org/sireum/CircularQueue$DropFront$ of class org/sireum/CircularQueue
  public static final #21= #20 of #14;    // DropRear=class org/sireum/CircularQueue$DropRear of class org/sireum/CircularQueue
  public static #24= #23 of #14;          // DropRear$=class org/sireum/CircularQueue$DropRear$ of class org/sireum/CircularQueue
  public static final #27= #26 of #14;    // NoDrop=class org/sireum/CircularQueue$NoDrop of class org/sireum/CircularQueue
  public static #30= #29 of #14;          // NoDrop$=class org/sireum/CircularQueue$NoDrop$ of class org/sireum/CircularQueue
  public static #33= #32 of #14;          // Policy$=class org/sireum/CircularQueue$Policy$ of class org/sireum/CircularQueue
  public static final #18= #35 of #32;    // DropFront$=class org/sireum/CircularQueue$Policy$DropFront$ of class org/sireum/CircularQueue$Policy$
  public static final #24= #37 of #32;    // DropRear$=class org/sireum/CircularQueue$Policy$DropRear$ of class org/sireum/CircularQueue$Policy$
  public static final #30= #39 of #32;    // NoDrop$=class org/sireum/CircularQueue$Policy$NoDrop$ of class org/sireum/CircularQueue$Policy$
  public static #42= #41 of #32;          // Type=class org/sireum/CircularQueue$Policy$Type of class org/sireum/CircularQueue$Policy$
  public #47= #44 of #46;                 // All$=class org/sireum/contract$All$ of class org/sireum/contract
SourceFile: "CircularQueue.scala"
BootstrapMethods:
  0: #156 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #140 (Ljava/lang/Object;)Ljava/lang/Object;
      #145 REF_invokeStatic org/sireum/CircularQueue$.$anonfun$inv$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
      #147 (Lorg/sireum/Z;)Ljava/lang/Object;
      #148 5
      #149 1
      #147 (Lorg/sireum/Z;)Ljava/lang/Object;
  1: #156 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #140 (Ljava/lang/Object;)Ljava/lang/Object;
      #183 REF_invokeStatic org/sireum/CircularQueue$.$anonfun$refinement$1$adapted:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
      #147 (Lorg/sireum/Z;)Ljava/lang/Object;
      #148 5
      #149 1
      #147 (Lorg/sireum/Z;)Ljava/lang/Object;
  2: #301 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #145 REF_invokeStatic org/sireum/CircularQueue$.$anonfun$inv$1$adapted:(Lorg/sireum/MS;Lorg/sireum/Z;Ljava/lang/Object;Lorg/sireum/Z;)Ljava/lang/Object;
      #183 REF_invokeStatic org/sireum/CircularQueue$.$anonfun$refinement$1$adapted:(Lorg/sireum/MS;Lorg/sireum/MS;Lorg/sireum/Z;Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 01 07 01 08 01 00 8D 00 8E 01 01 18
   00 AC 01 00 B3 00 B4 01 00 34 00 33 01 00 D5 00
   D6 01 00 BE 00 BF 01 00 39 00 3A 01 00 AB 00 AC
   01
  Scala: length = 0x0 (unknown attribute)

