Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/params/rule/Strict.class
  Last modified May 29, 2022; size 18572 bytes
  SHA-256 checksum 301d53c25d4eb5776001a0409eed17925ffb5cd97a50f91083c6488b053a0319
  Compiled from "Strict.scala"
public final class coursier.params.rule.Strict extends coursier.params.rule.Rule
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/params/rule/Strict
  super_class: #4                         // coursier/params/rule/Rule
  interfaces: 0, fields: 5, methods: 47, attributes: 6
Constant pool:
    #1 = Utf8               coursier/params/rule/Strict
    #2 = Class              #1            // coursier/params/rule/Strict
    #3 = Utf8               coursier/params/rule/Rule
    #4 = Class              #3            // coursier/params/rule/Rule
    #5 = Utf8               Strict.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\t=d\u0001\u0002\u001d:\u0005\u0001C\u0001b\u0016\u0001\u0003\u0006\u0004%\t\u0001\u0017\u0005\tO\u0002\u0011\t\u0011)A\u00053\"A\u0001\u000e\u0001BC\u0002\u0013\u0005\u0001\f\u0003\u0005j\u0001\t\u0005\t\u0015!\u0003Z\u0011!Q\u0007A!b\u0001\n\u0003Y\u0007\u0002C8\u0001\u0005\u0003\u0005\u000b\u0011\u00027\t\u0011A\u0004!Q1A\u0005\u0002-D\u0001\"\u001d\u0001\u0003\u0002\u0003\u0006I\u0001\u001c\u0005\te\u0002\u0011)\u0019!C\u0001W\"A1\u000f\u0001B\u0001B\u0003%A\u000eC\u0003u\u0001\u0011\u0005Q\u000fC\u0003u\u0001\u0011\u0005A\u0010\u0003\u0004u\u0001\u0011\u0005\u0011\u0011\u0001\u0005\u0007i\u0002!\t!a\u0002\t\rQ\u0004A\u0011AA\u0006\u000b\u0019\ti\u0001\u0001\u0001\u0002\u0010!9\u00111\u001d\u0001\u0005\u0002\u0005\u0015\bbBAy\u0001\u0011\u0005\u00111\u001f\u0005\b\u0005\u0003\u0001A\u0011\tB\u0002\u0011\u001d\u0011Y\u0001\u0001C\u0001\u0005\u001bAqA!\u0005\u0001\t\u0003\u0011\u0019\u0002C\u0004\u0003\u0018\u0001!\tA!\u0007\t\u000f\tu\u0001\u0001\"\u0001\u0003 !9!1\u0005\u0001\u0005\u0002\t\u0015\u0002b\u0002B\u0015\u0001\u0011\u0005#1\u0006\u0005\b\u0005c\u0001A\u0011\tB\u001a\u0011\u001d\u0011y\u0004\u0001C!\u0005\u0003BqA!\u0012\u0001\t\u0003\u00129\u0005C\u0004\u0003P\u0001!IA!\u0015\t\u000f\te\u0003\u0001\"\u0011\u0003\\!9!Q\f\u0001\u0005B\t}\u0003b\u0002B1\u0001\u0011\u0005#1\r\u0005\b\u0005S\u0002A\u0011\tB6\u000f\u001d\t\u0019\"\u000fE\u0001\u0003+1a\u0001O\u001d\t\u0002\u0005]\u0001B\u0002;$\t\u0003\tiC\u0002\u0004\u00020\r\u0012\u0011\u0011\u0007\u0005\nu\u0015\u0012)\u0019!C!\u0003\u0007B1\"!\u0012&\u0005\u0003\u0005\u000b\u0011\u0002<\u0002H!Q\u0011\u0011J\u0013\u0003\u0006\u0004%\t!a\u0013\t\u0015\u00055TE!A!\u0002\u0013\ti\u0005\u0003\u0004uK\u0011\u0005\u0011q\u000e\u0004\u0007\u0003s\u001a#!a\u001f\t\u0019\u000555F!A!\u0002\u0013\ty)a\'\t\u0013iZ#Q1A\u0005B\u0005\r\u0003bCA#W\t\u0005\t\u0015!\u0003w\u0003CC!\"!\u000f,\u0005\u000b\u0007I\u0011IAR\u00111\t)k\u000bB\u0001B\u0003%\u0011\u0011OAT\u0011\u0019!8\u0006\"\u0001\u0002*\"9\u00111W\u0012\u0005\u0002\u0005-\u0001bBAZG\u0011\u0005\u0011Q\u0017\u0005\b\u0003g\u001bC\u0011AA]\u0011\u001d\t\u0019l\tC\u0001\u0003\u007fCq!a-$\t\u0003\t9\rC\u0005\u0002T\u000e\n\t\u0011\"\u0003\u0002V\n11\u000b\u001e:jGRT!AO\u001e\u0002\tI,H.\u001a\u0006\u0003yu\na\u0001]1sC6\u001c(\"\u0001 \u0002\u0011\r|WO]:jKJ\u001c\u0001a\u0005\u0003\u0001\u0003\u0016[\u0005C\u0001\"D\u001b\u0005I\u0014B\u0001#:\u0005\u0011\u0011V\u000f\\3\u0011\u0005\u0019KU\"A$\u000b\u0003!\u000bQa]2bY\u0006L!AS$\u0003\u000fA\u0013x\u000eZ;diB\u0011A\n\u0016\b\u0003\u001bJs!AT)\u000e\u0003=S!\u0001U \u0002\rq\u0012xn\u001c;?\u0013\u0005A\u0015BA*H\u0003\u001d\u0001\u0018mY6bO\u0016L!!\u0016,\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005M;\u0015aB5oG2,H-Z\u000b\u00023B\u0019!LX1\u000f\u0005mc\u0006C\u0001(H\u0013\tiv)\u0001\u0004Qe\u0016$WMZ\u0005\u0003?\u0002\u00141aU3u\u0015\tiv\t\u0005\u0002cK6\t1M\u0003\u0002e{\u0005!Q\u000f^5m\u0013\t17MA\u0007N_\u0012,H.Z\'bi\u000eDWM]\u0001\tS:\u001cG.\u001e3fA\u00059Q\r_2mk\u0012,\u0017\u0001C3yG2,H-\u001a\u0011\u0002!%t7\r\\;eK\nKH)\u001a4bk2$X#\u00017\u0011\u0005\u0019k\u0017B\u00018H\u0005\u001d\u0011un\u001c7fC:\f\u0011#\u001b8dYV$WMQ=EK\u001a\fW\u000f\u001c;!\u0003UIwM\\8sK&3gi\u001c:dK\u00124VM]:j_:\fa#[4o_J,\u0017J\u001a$pe\u000e,GMV3sg&|g\u000eI\u0001\u0007g\u0016lg+\u001a:\u0002\u000fM,WNV3sA\u00051A(\u001b8jiz\"bA^<ysj\\\bC\u0001\"\u0001\u0011\u001596\u00021\u0001Z\u0011\u0015A7\u00021\u0001Z\u0011\u0015Q7\u00021\u0001m\u0011\u0015\u00018\u00021\u0001m\u0011\u0015\u00118\u00021\u0001m)\u00111XP`@\t\u000b]c\u0001\u0019A-\t\u000b!d\u0001\u0019A-\t\u000b)d\u0001\u0019\u00017\u0015\u000bY\f\u0019!!\u0002\t\u000b]k\u0001\u0019A-\t\u000b!l\u0001\u0019A-\u0015\u0007Y\fI\u0001C\u0003X\u001d\u0001\u0007\u0011\fF\u0001w\u0005\u0005\u0019\u0005cAA\tK9\u0011!II\u0001\u0007\'R\u0014\u0018n\u0019;\u0011\u0005\t\u001b3#B\u0012\u0002\u001a\u0005}\u0001c\u0001$\u0002\u001c%\u0019\u0011QD$\u0003\r\u0005s\u0017PU3g!\u0011\t\t#a\u000b\u000e\u0005\u0005\r\"\u0002BA\u0013\u0003O\t!![8\u000b\u0005\u0005%\u0012\u0001\u00026bm\u0006L1!VA\u0012)\t\t)BA\nFm&\u001cG/\u001a3EKB,g\u000eZ3oG&,7oE\u0002&\u0003g\u0001B!!\u000e\u0002@5\u0011\u0011q\u0007\u0006\u0005\u0003s\tY$\u0001\u0005d_:4G.[2u\u0015\r\ti$P\u0001\u0006KJ\u0014xN]\u0005\u0005\u0003\u0003\n9DA\bV]N\fG/[:gS\u0016$\'+\u001e7f+\u00051\u0018!\u0002:vY\u0016\u0004\u0013b\u0001\u001e\u0002@\u00059QM^5di\u0016$WCAA\'!\u0015a\u0015qJA*\u0013\r\t\tF\u0016\u0002\u0004\'\u0016\f\b\u0003BA+\u0003OrA!a\u0016\u0002b9!\u0011\u0011LA/\u001d\rq\u00151L\u0005\u0002}%\u0019\u0011qL\u001f\u0002\u000b\u001d\u0014\u0018\r\u001d5\n\t\u0005\r\u0014QM\u0001\t\u0007>tg\r\\5di*\u0019\u0011qL\u001f\n\t\u0005%\u00141\u000e\u0002\u000b\u0007>tg\r\\5di\u0016$\'\u0002BA2\u0003K\n\u0001\"\u001a<jGR,G\r\t\u000b\u0007\u0003c\n)(a\u001e\u0011\u0007\u0005MT%D\u0001$\u0011\u0015Q$\u00061\u0001w\u0011\u001d\tIE\u000ba\u0001\u0003\u001b\u0012\u0011#\u00168tCRL7OZ5bE2,\'+\u001e7f\'\rY\u0013Q\u0010\t\u0005\u0003\u007f\nII\u0004\u0003\u0002\u0002\u0006\u0015e\u0002BA-\u0003\u0007K1!!\u0010>\u0013\u0011\t9)a\u000f\u0002\u001fI+7o\u001c7vi&|g.\u0012:s_JLA!!\u001f\u0002\f*!\u0011qQA\u001e\u0003)\u0011Xm]8mkRLwN\u001c\t\u0005\u0003#\u000b9*\u0004\u0002\u0002\u0014*\u0019\u0011QS\u001f\u0002\t\r|\'/Z\u0005\u0005\u00033\u000b\u0019J\u0001\u0006SKN|G.\u001e;j_:LA!!$\u0002\u001e&!\u0011qTA\u001e\u0005=\u0011Vm]8mkRLwN\\#se>\u0014\u0018b\u0001\u001e\u0002\nV\u0011\u0011\u0011O\u0001\nG>tg\r\\5di\u0002JA!!\u000f\u0002\nRA\u00111VAW\u0003_\u000b\t\fE\u0002\u0002t-Bq!!$2\u0001\u0004\ty\tC\u0003;c\u0001\u0007a\u000fC\u0004\u0002:E\u0002\r!!\u001d\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0007Y\f9\fC\u0003Xg\u0001\u0007\u0011\fF\u0003w\u0003w\u000bi\fC\u0003Xi\u0001\u0007\u0011\fC\u0003ii\u0001\u0007\u0011\fF\u0004w\u0003\u0003\f\u0019-!2\t\u000b]+\u0004\u0019A-\t\u000b!,\u0004\u0019A-\t\u000b),\u0004\u0019\u00017\u0015\u0017Y\fI-a3\u0002N\u0006=\u0017\u0011\u001b\u0005\u0006/Z\u0002\r!\u0017\u0005\u0006QZ\u0002\r!\u0017\u0005\u0006UZ\u0002\r\u0001\u001c\u0005\u0006aZ\u0002\r\u0001\u001c\u0005\u0006eZ\u0002\r\u0001\\\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003/\u0004B!!7\u0002`6\u0011\u00111\u001c\u0006\u0005\u0003;\f9#\u0001\u0003mC:<\u0017\u0002BAq\u00037\u0014aa\u00142kK\u000e$\u0018!B2iK\u000e\\G\u0003BAt\u0003[\u0004RARAu\u0003\u001fI1!a;H\u0005\u0019y\u0005\u000f^5p]\"9\u0011q^\tA\u0002\u0005=\u0015a\u0001:fg\u0006QAO]=SKN|GN^3\u0015\r\u0005U\u0018Q`A\u0000!\u001da\u0015q_A~\u0003\u001fK1!!?W\u0005\u0019)\u0015\u000e\u001e5feB\u0019\u0011\u0011C\u0016\t\u000f\u0005=(\u00031\u0001\u0002\u0010\"9\u0011\u0011\b\nA\u0002\u0005=\u0011\u0001\u0002:faJ,\"A!\u0002\u0011\u0007i\u00139!C\u0002\u0003\n\u0001\u0014aa\u0015;sS:<\u0017aC<ji\"Len\u00197vI\u0016$2A\u001eB\b\u0011\u00159F\u00031\u0001Z\u0003-9\u0018\u000e\u001e5Fq\u000edW\u000fZ3\u0015\u0007Y\u0014)\u0002C\u0003i+\u0001\u0007\u0011,\u0001\u000bxSRD\u0017J\\2mk\u0012,\')\u001f#fM\u0006,H\u000e\u001e\u000b\u0004m\nm\u0001\"\u00026\u0017\u0001\u0004a\u0017!G<ji\"LuM\\8sK&3gi\u001c:dK\u00124VM]:j_:$2A\u001eB\u0011\u0011\u0015\u0001x\u00031\u0001m\u0003)9\u0018\u000e\u001e5TK64VM\u001d\u000b\u0004m\n\u001d\u0002\"\u0002:\u0019\u0001\u0004a\u0017\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\t5\u0002\u0003BAm\u0005_IAA!\u0003\u0002\\\u0006A1-\u00198FcV\fG\u000eF\u0002m\u0005kAqAa\u000e\u001b\u0001\u0004\u0011I$A\u0002pE*\u00042A\u0012B\u001e\u0013\r\u0011id\u0012\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000fF\u0002m\u0005\u0007BqAa\u000e\u001c\u0001\u0004\u0011I$\u0001\u0005iCND7i\u001c3f)\t\u0011I\u0005E\u0002G\u0005\u0017J1A!\u0014H\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0005\'\u0002\u0002B\u0012B+3fcG\u000e\\\u0005\u0004\u0005/:%A\u0002+va2,W\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0003\u0005[\tA\u0002\u001d:pIV\u001cG/\u0011:jif,\"A!\u0013\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!!\u0011\bB3\u0011\u001d\u00119\u0007\ta\u0001\u0005\u0013\n\u0011A\\\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0003.\t5\u0004b\u0002B4C\u0001\u0007!\u0011\n
    #9 = Utf8               coursier/graph/Conflict$Conflicted
   #10 = Class              #9            // coursier/graph/Conflict$Conflicted
   #11 = Utf8               coursier/graph/Conflict
   #12 = Class              #11           // coursier/graph/Conflict
   #13 = Utf8               Conflicted
   #14 = Utf8               coursier/params/rule/Strict$EvictedDependencies
   #15 = Class              #14           // coursier/params/rule/Strict$EvictedDependencies
   #16 = Utf8               EvictedDependencies
   #17 = Utf8               coursier/params/rule/Strict$UnsatisfiableRule
   #18 = Class              #17           // coursier/params/rule/Strict$UnsatisfiableRule
   #19 = Utf8               UnsatisfiableRule
   #20 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #21 = Class              #20           // java/lang/invoke/MethodHandles$Lookup
   #22 = Utf8               java/lang/invoke/MethodHandles
   #23 = Class              #22           // java/lang/invoke/MethodHandles
   #24 = Utf8               Lookup
   #25 = Utf8               scala/math/Ordering$String$
   #26 = Class              #25           // scala/math/Ordering$String$
   #27 = Utf8               scala/math/Ordering
   #28 = Class              #27           // scala/math/Ordering
   #29 = Utf8
   #30 = Utf8               include
   #31 = Utf8               Lscala/collection/immutable/Set;
   #32 = Utf8               Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;
   #33 = Utf8               exclude
   #34 = Utf8               includeByDefault
   #35 = Utf8               Z
   #36 = Utf8               ignoreIfForcedVersion
   #37 = Utf8               semVer
   #38 = Utf8               apply
   #39 = Utf8               (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)Lcoursier/params/rule/Strict;
   #40 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;ZZZ)Lcoursier/params/rule/Strict;
   #41 = Utf8               coursier/params/rule/Strict$
   #42 = Class              #41           // coursier/params/rule/Strict$
   #43 = Utf8               MODULE$
   #44 = Utf8               Lcoursier/params/rule/Strict$;
   #45 = NameAndType        #43:#44       // MODULE$:Lcoursier/params/rule/Strict$;
   #46 = Fieldref           #42.#45       // coursier/params/rule/Strict$.MODULE$:Lcoursier/params/rule/Strict$;
   #47 = NameAndType        #38:#39       // apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)Lcoursier/params/rule/Strict;
   #48 = Methodref          #42.#47       // coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)Lcoursier/params/rule/Strict;
   #49 = Utf8               (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)Lcoursier/params/rule/Strict;
   #50 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Z)Lcoursier/params/rule/Strict;
   #51 = NameAndType        #38:#49       // apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)Lcoursier/params/rule/Strict;
   #52 = Methodref          #42.#51       // coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)Lcoursier/params/rule/Strict;
   #53 = Utf8               (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
   #54 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/Strict;
   #55 = NameAndType        #38:#53       // apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
   #56 = Methodref          #42.#55       // coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
   #57 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
   #58 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/Strict;
   #59 = NameAndType        #38:#57       // apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
   #60 = Methodref          #42.#59       // coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
   #61 = Utf8               ()Lcoursier/params/rule/Strict;
   #62 = NameAndType        #38:#61       // apply:()Lcoursier/params/rule/Strict;
   #63 = Methodref          #42.#62       // coursier/params/rule/Strict$.apply:()Lcoursier/params/rule/Strict;
   #64 = Utf8               ()Lscala/collection/immutable/Set;
   #65 = Utf8               ()Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;
   #66 = NameAndType        #30:#31       // include:Lscala/collection/immutable/Set;
   #67 = Fieldref           #2.#66        // coursier/params/rule/Strict.include:Lscala/collection/immutable/Set;
   #68 = Utf8               this
   #69 = Utf8               Lcoursier/params/rule/Strict;
   #70 = NameAndType        #33:#31       // exclude:Lscala/collection/immutable/Set;
   #71 = Fieldref           #2.#70        // coursier/params/rule/Strict.exclude:Lscala/collection/immutable/Set;
   #72 = Utf8               ()Z
   #73 = NameAndType        #34:#35       // includeByDefault:Z
   #74 = Fieldref           #2.#73        // coursier/params/rule/Strict.includeByDefault:Z
   #75 = NameAndType        #36:#35       // ignoreIfForcedVersion:Z
   #76 = Fieldref           #2.#75        // coursier/params/rule/Strict.ignoreIfForcedVersion:Z
   #77 = NameAndType        #37:#35       // semVer:Z
   #78 = Fieldref           #2.#77        // coursier/params/rule/Strict.semVer:Z
   #79 = Utf8               check
   #80 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option;
   #81 = Utf8               (Lcoursier/core/Resolution;)Lscala/Option<Lcoursier/params/rule/Strict$EvictedDependencies;>;
   #82 = Utf8               res
   #83 = NameAndType        #37:#72       // semVer:()Z
   #84 = Methodref          #2.#83        // coursier/params/rule/Strict.semVer:()Z
   #85 = Utf8               coursier/graph/Conflict$
   #86 = Class              #85           // coursier/graph/Conflict$
   #87 = Utf8               Lcoursier/graph/Conflict$;
   #88 = NameAndType        #43:#87       // MODULE$:Lcoursier/graph/Conflict$;
   #89 = Fieldref           #86.#88       // coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
   #90 = Utf8               conflicted$default$2
   #91 = NameAndType        #90:#72       // conflicted$default$2:()Z
   #92 = Methodref          #86.#91       // coursier/graph/Conflict$.conflicted$default$2:()Z
   #93 = Utf8               conflicted
   #94 = Utf8               (Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #95 = NameAndType        #93:#94       // conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #96 = Methodref          #86.#95       // coursier/graph/Conflict$.conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
   #97 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #98 = MethodType         #97           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #99 = Utf8               $anonfun$check$1$adapted
  #100 = Utf8               (Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  #101 = NameAndType        #99:#100      // $anonfun$check$1$adapted:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  #102 = Methodref          #2.#101       // coursier/params/rule/Strict.$anonfun$check$1$adapted:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  #103 = MethodHandle       6:#102        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$1$adapted:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  #104 = Utf8               (Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  #105 = MethodType         #104          //  (Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  #106 = Integer            5
  #107 = Integer            1
  #108 = Utf8               java/lang/invoke/LambdaMetafactory
  #109 = Class              #108          // java/lang/invoke/LambdaMetafactory
  #110 = Utf8               altMetafactory
  #111 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #112 = NameAndType        #110:#111     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #113 = Methodref          #109.#112     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #114 = MethodHandle       6:#113        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #115 = Utf8               (Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;)Lscala/Function1;
  #116 = NameAndType        #38:#115      // apply:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;)Lscala/Function1;
  #117 = InvokeDynamic      #0:#116       // #0:apply:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;)Lscala/Function1;
  #118 = Utf8               scala/collection/immutable/Seq
  #119 = Class              #118          // scala/collection/immutable/Seq
  #120 = Utf8               filter
  #121 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #122 = NameAndType        #120:#121     // filter:(Lscala/Function1;)Ljava/lang/Object;
  #123 = InterfaceMethodref #119.#122     // scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
  #124 = Utf8               isEmpty
  #125 = NameAndType        #124:#72      // isEmpty:()Z
  #126 = InterfaceMethodref #119.#125     // scala/collection/immutable/Seq.isEmpty:()Z
  #127 = Utf8               scala/None$
  #128 = Class              #127          // scala/None$
  #129 = Utf8               Lscala/None$;
  #130 = NameAndType        #43:#129      // MODULE$:Lscala/None$;
  #131 = Fieldref           #128.#130     // scala/None$.MODULE$:Lscala/None$;
  #132 = Utf8               coursier/core/Resolution
  #133 = Class              #132          // coursier/core/Resolution
  #134 = Utf8               scala/Some
  #135 = Class              #134          // scala/Some
  #136 = Utf8               <init>
  #137 = Utf8               (Lcoursier/params/rule/Strict;Lscala/collection/immutable/Seq;)V
  #138 = NameAndType        #136:#137     // "<init>":(Lcoursier/params/rule/Strict;Lscala/collection/immutable/Seq;)V
  #139 = Methodref          #15.#138      // coursier/params/rule/Strict$EvictedDependencies."<init>":(Lcoursier/params/rule/Strict;Lscala/collection/immutable/Seq;)V
  #140 = Utf8               (Ljava/lang/Object;)V
  #141 = NameAndType        #136:#140     // "<init>":(Ljava/lang/Object;)V
  #142 = Methodref          #135.#141     // scala/Some."<init>":(Ljava/lang/Object;)V
  #143 = Utf8               scala/Option
  #144 = Class              #143          // scala/Option
  #145 = Utf8               x$1
  #146 = Utf8               Lcoursier/core/Resolution;
  #147 = Utf8               x$2
  #148 = Utf8               x$3
  #149 = Utf8               conflicts
  #150 = Utf8               Lscala/collection/immutable/Seq;
  #151 = Utf8               tryResolve
  #152 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either;
  #153 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either<Lcoursier/params/rule/Strict$UnsatisfiableRule;Lcoursier/core/Resolution;>;
  #154 = Utf8               conflict
  #155 = Utf8               scala/package$
  #156 = Class              #155          // scala/package$
  #157 = Utf8               Lscala/package$;
  #158 = NameAndType        #43:#157      // MODULE$:Lscala/package$;
  #159 = Fieldref           #156.#158     // scala/package$.MODULE$:Lscala/package$;
  #160 = Utf8               Left
  #161 = Utf8               ()Lscala/util/Left$;
  #162 = NameAndType        #160:#161     // Left:()Lscala/util/Left$;
  #163 = Methodref          #156.#162     // scala/package$.Left:()Lscala/util/Left$;
  #164 = Utf8               (Lcoursier/core/Resolution;Lcoursier/params/rule/Strict;Lcoursier/params/rule/Strict$EvictedDependencies;)V
  #165 = NameAndType        #136:#164     // "<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Strict;Lcoursier/params/rule/Strict$EvictedDependencies;)V
  #166 = Methodref          #18.#165      // coursier/params/rule/Strict$UnsatisfiableRule."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Strict;Lcoursier/params/rule/Strict$EvictedDependencies;)V
  #167 = Utf8               scala/util/Left$
  #168 = Class              #167          // scala/util/Left$
  #169 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #170 = NameAndType        #38:#169      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #171 = Methodref          #168.#170     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #172 = Utf8               Lcoursier/params/rule/Strict$EvictedDependencies;
  #173 = Utf8               repr
  #174 = Utf8               ()Ljava/lang/String;
  #175 = Utf8               scala/collection/mutable/StringBuilder
  #176 = Class              #175          // scala/collection/mutable/StringBuilder
  #177 = Utf8               Strict(
  #178 = String             #177          // Strict(
  #179 = Utf8               (Ljava/lang/String;)V
  #180 = NameAndType        #136:#179     // "<init>":(Ljava/lang/String;)V
  #181 = Methodref          #176.#180     // scala/collection/mutable/StringBuilder."<init>":(Ljava/lang/String;)V
  #182 = NameAndType        #30:#64       // include:()Lscala/collection/immutable/Set;
  #183 = Methodref          #2.#182       // coursier/params/rule/Strict.include:()Lscala/collection/immutable/Set;
  #184 = Utf8               scala/collection/immutable/Set
  #185 = Class              #184          // scala/collection/immutable/Set
  #186 = Utf8               nonEmpty
  #187 = NameAndType        #186:#72      // nonEmpty:()Z
  #188 = InterfaceMethodref #185.#187     // scala/collection/immutable/Set.nonEmpty:()Z
  #189 = Utf8               toVector
  #190 = Utf8               ()Lscala/collection/immutable/Vector;
  #191 = NameAndType        #189:#190     // toVector:()Lscala/collection/immutable/Vector;
  #192 = InterfaceMethodref #185.#191     // scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
  #193 = Utf8               $anonfun$repr$1
  #194 = Utf8               (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #195 = NameAndType        #193:#194     // $anonfun$repr$1:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #196 = Methodref          #2.#195       // coursier/params/rule/Strict.$anonfun$repr$1:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #197 = MethodHandle       6:#196        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$repr$1:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #198 = MethodType         #194          //  (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #199 = Utf8               ()Lscala/Function1;
  #200 = NameAndType        #38:#199      // apply:()Lscala/Function1;
  #201 = InvokeDynamic      #1:#200       // #1:apply:()Lscala/Function1;
  #202 = Utf8               scala/collection/immutable/Vector
  #203 = Class              #202          // scala/collection/immutable/Vector
  #204 = Utf8               map
  #205 = NameAndType        #204:#121     // map:(Lscala/Function1;)Ljava/lang/Object;
  #206 = Methodref          #203.#205     // scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
  #207 = Utf8               scala/collection/immutable/StrictOptimizedSeqOps
  #208 = Class              #207          // scala/collection/immutable/StrictOptimizedSeqOps
  #209 = Utf8               Lscala/math/Ordering$String$;
  #210 = NameAndType        #43:#209      // MODULE$:Lscala/math/Ordering$String$;
  #211 = Fieldref           #26.#210      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #212 = Utf8               sorted
  #213 = Utf8               (Lscala/math/Ordering;)Ljava/lang/Object;
  #214 = NameAndType        #212:#213     // sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #215 = InterfaceMethodref #208.#214     // scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
  #216 = Utf8               scala/collection/IterableOnceOps
  #217 = Class              #216          // scala/collection/IterableOnceOps
  #218 = Utf8                |
  #219 = String             #218          //  |
  #220 = Utf8               mkString
  #221 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #222 = NameAndType        #220:#221     // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #223 = InterfaceMethodref #217.#222     // scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #224 = Utf8               $plus$plus$eq
  #225 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #226 = NameAndType        #224:#225     // $plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #227 = Methodref          #176.#226     // scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #228 = Utf8               scala/runtime/BoxedUnit
  #229 = Class              #228          // scala/runtime/BoxedUnit
  #230 = Utf8               UNIT
  #231 = Utf8               Lscala/runtime/BoxedUnit;
  #232 = NameAndType        #230:#231     // UNIT:Lscala/runtime/BoxedUnit;
  #233 = Fieldref           #229.#232     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #234 = Utf8               java/lang/Object
  #235 = Class              #234          // java/lang/Object
  #236 = NameAndType        #33:#64       // exclude:()Lscala/collection/immutable/Set;
  #237 = Methodref          #2.#236       // coursier/params/rule/Strict.exclude:()Lscala/collection/immutable/Set;
  #238 = Utf8               ,
  #239 = String             #238          // ,
  #240 = Utf8               exclude=
  #241 = String             #240          // exclude=
  #242 = Utf8               $anonfun$repr$2
  #243 = NameAndType        #242:#194     // $anonfun$repr$2:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #244 = Methodref          #2.#243       // coursier/params/rule/Strict.$anonfun$repr$2:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #245 = MethodHandle       6:#244        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$repr$2:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  #246 = InvokeDynamic      #2:#200       // #2:apply:()Lscala/Function1;
  #247 = NameAndType        #34:#72       // includeByDefault:()Z
  #248 = Methodref          #2.#247       // coursier/params/rule/Strict.includeByDefault:()Z
  #249 = Utf8               ignoreIfForcedVersion=true
  #250 = String             #249          // ignoreIfForcedVersion=true
  #251 = NameAndType        #36:#72       // ignoreIfForcedVersion:()Z
  #252 = Methodref          #2.#251       // coursier/params/rule/Strict.ignoreIfForcedVersion:()Z
  #253 = Utf8               ignoreIfForcedVersion=false
  #254 = String             #253          // ignoreIfForcedVersion=false
  #255 = Utf8               scala/runtime/BoxesRunTime
  #256 = Class              #255          // scala/runtime/BoxesRunTime
  #257 = Utf8               boxToCharacter
  #258 = Utf8               (C)Ljava/lang/Character;
  #259 = NameAndType        #257:#258     // boxToCharacter:(C)Ljava/lang/Character;
  #260 = Methodref          #256.#259     // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #261 = Utf8               $plus$eq
  #262 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #263 = NameAndType        #261:#262     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #264 = Methodref          #176.#263     // scala/collection/mutable/StringBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #265 = Utf8               result
  #266 = NameAndType        #265:#174     // result:()Ljava/lang/String;
  #267 = Methodref          #176.#266     // scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
  #268 = Utf8               b
  #269 = Utf8               Lscala/collection/mutable/StringBuilder;
  #270 = Utf8               anyElem
  #271 = Utf8               withInclude
  #272 = Utf8               (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
  #273 = NameAndType        #136:#272     // "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
  #274 = Methodref          #2.#273       // coursier/params/rule/Strict."<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
  #275 = Utf8               withExclude
  #276 = Utf8               withIncludeByDefault
  #277 = Utf8               (Z)Lcoursier/params/rule/Strict;
  #278 = Utf8               withIgnoreIfForcedVersion
  #279 = Utf8               withSemVer
  #280 = Utf8               toString
  #281 = Utf8               java/lang/StringBuilder
  #282 = Class              #281          // java/lang/StringBuilder
  #283 = Methodref          #282.#180     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #284 = Utf8               java/lang/String
  #285 = Class              #284          // java/lang/String
  #286 = Utf8               valueOf
  #287 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #288 = NameAndType        #286:#287     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #289 = Methodref          #285.#288     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #290 = Utf8               append
  #291 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #292 = NameAndType        #290:#291     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #293 = Methodref          #282.#292     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #294 = Utf8               (Z)Ljava/lang/String;
  #295 = NameAndType        #286:#294     // valueOf:(Z)Ljava/lang/String;
  #296 = Methodref          #285.#295     // java/lang/String.valueOf:(Z)Ljava/lang/String;
  #297 = Utf8               )
  #298 = String             #297          // )
  #299 = NameAndType        #280:#174     // toString:()Ljava/lang/String;
  #300 = Methodref          #282.#299     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #301 = Utf8               Ljava/lang/StringBuilder;
  #302 = Utf8               canEqual
  #303 = Utf8               (Ljava/lang/Object;)Z
  #304 = Utf8               obj
  #305 = Utf8               Ljava/lang/Object;
  #306 = Utf8               equals
  #307 = NameAndType        #302:#303     // canEqual:(Ljava/lang/Object;)Z
  #308 = Methodref          #2.#307       // coursier/params/rule/Strict.canEqual:(Ljava/lang/Object;)Z
  #309 = NameAndType        #306:#303     // equals:(Ljava/lang/Object;)Z
  #310 = Methodref          #235.#309     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #311 = Utf8               other
  #312 = Utf8               hashCode
  #313 = Utf8               ()I
  #314 = Utf8               Strict
  #315 = String             #314          // Strict
  #316 = Utf8               scala/runtime/Statics
  #317 = Class              #316          // scala/runtime/Statics
  #318 = Utf8               anyHash
  #319 = Utf8               (Ljava/lang/Object;)I
  #320 = NameAndType        #318:#319     // anyHash:(Ljava/lang/Object;)I
  #321 = Methodref          #317.#320     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #322 = Utf8               code
  #323 = Utf8               I
  #324 = Utf8               tuple
  #325 = Utf8               ()Lscala/Tuple5;
  #326 = Utf8               ()Lscala/Tuple5<Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;
  #327 = Utf8               scala/Tuple5
  #328 = Class              #327          // scala/Tuple5
  #329 = Utf8               boxToBoolean
  #330 = Utf8               (Z)Ljava/lang/Boolean;
  #331 = NameAndType        #329:#330     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #332 = Methodref          #256.#331     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #333 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #334 = NameAndType        #136:#333     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #335 = Methodref          #328.#334     // scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #336 = Utf8               productPrefix
  #337 = Utf8               productArity
  #338 = Utf8               productElement
  #339 = Utf8               (I)Ljava/lang/Object;
  #340 = Utf8               n
  #341 = Utf8               java/lang/IndexOutOfBoundsException
  #342 = Class              #341          // java/lang/IndexOutOfBoundsException
  #343 = Utf8               boxToInteger
  #344 = Utf8               (I)Ljava/lang/Integer;
  #345 = NameAndType        #343:#344     // boxToInteger:(I)Ljava/lang/Integer;
  #346 = Methodref          #256.#345     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #347 = Methodref          #235.#299     // java/lang/Object.toString:()Ljava/lang/String;
  #348 = Methodref          #342.#180     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #349 = Utf8               productElementName
  #350 = Utf8               (I)Ljava/lang/String;
  #351 = String             #30           // include
  #352 = String             #33           // exclude
  #353 = String             #34           // includeByDefault
  #354 = String             #36           // ignoreIfForcedVersion
  #355 = String             #37           // semVer
  #356 = Utf8               (Lcoursier/core/Resolution;Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/util/Either;
  #357 = NameAndType        #151:#152     // tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either;
  #358 = Methodref          #2.#357       // coursier/params/rule/Strict.tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either;
  #359 = Utf8               Lcoursier/error/conflict/UnsatisfiedRule;
  #360 = Utf8               $anonfun$check$2
  #361 = Utf8               (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #362 = Utf8               conflict$1
  #363 = Utf8               module
  #364 = Utf8               ()Lcoursier/core/Module;
  #365 = NameAndType        #363:#364     // module:()Lcoursier/core/Module;
  #366 = Methodref          #12.#365      // coursier/graph/Conflict.module:()Lcoursier/core/Module;
  #367 = Utf8               coursier/util/ModuleMatcher
  #368 = Class              #367          // coursier/util/ModuleMatcher
  #369 = Utf8               matches
  #370 = Utf8               (Lcoursier/core/Module;)Z
  #371 = NameAndType        #369:#370     // matches:(Lcoursier/core/Module;)Z
  #372 = Methodref          #368.#371     // coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
  #373 = Utf8               Lcoursier/graph/Conflict;
  #374 = Utf8               Lcoursier/util/ModuleMatcher;
  #375 = Utf8               $anonfun$check$3
  #376 = Utf8               $anonfun$check$4
  #377 = Utf8               $anonfun$check$5
  #378 = Utf8               x$4
  #379 = Utf8               matches$1
  #380 = Utf8               (Lcoursier/graph/Conflict;)Z
  #381 = Utf8               $anonfun$check$2$adapted
  #382 = Utf8               (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #383 = NameAndType        #381:#382     // $anonfun$check$2$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #384 = Methodref          #2.#383       // coursier/params/rule/Strict.$anonfun$check$2$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #385 = MethodHandle       6:#384        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$2$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #386 = Utf8               (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #387 = MethodType         #386          //  (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #388 = Utf8               (Lcoursier/graph/Conflict;)Lscala/Function1;
  #389 = NameAndType        #38:#388      // apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
  #390 = InvokeDynamic      #3:#389       // #3:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
  #391 = Utf8               exists
  #392 = Utf8               (Lscala/Function1;)Z
  #393 = NameAndType        #391:#392     // exists:(Lscala/Function1;)Z
  #394 = InterfaceMethodref #185.#393     // scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
  #395 = Utf8               $anonfun$check$3$adapted
  #396 = NameAndType        #395:#382     // $anonfun$check$3$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #397 = Methodref          #2.#396       // coursier/params/rule/Strict.$anonfun$check$3$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #398 = MethodHandle       6:#397        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$3$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #399 = InvokeDynamic      #4:#389       // #4:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
  #400 = Utf8               $anonfun$check$4$adapted
  #401 = NameAndType        #400:#382     // $anonfun$check$4$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #402 = Methodref          #2.#401       // coursier/params/rule/Strict.$anonfun$check$4$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #403 = MethodHandle       6:#402        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$4$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #404 = InvokeDynamic      #5:#389       // #5:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
  #405 = Utf8               $anonfun$check$5$adapted
  #406 = NameAndType        #405:#382     // $anonfun$check$5$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #407 = Methodref          #2.#406       // coursier/params/rule/Strict.$anonfun$check$5$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #408 = MethodHandle       6:#407        // REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$5$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  #409 = InvokeDynamic      #6:#389       // #6:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
  #410 = Utf8               $anonfun$check$1
  #411 = Utf8               (Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Z
  #412 = Utf8               $this
  #413 = Utf8               res$1
  #414 = Utf8               c
  #415 = Utf8               ()Lcoursier/graph/Conflict;
  #416 = NameAndType        #154:#415     // conflict:()Lcoursier/graph/Conflict;
  #417 = Methodref          #10.#416      // coursier/graph/Conflict$Conflicted.conflict:()Lcoursier/graph/Conflict;
  #418 = Utf8               forceVersions
  #419 = Utf8               ()Lscala/collection/immutable/Map;
  #420 = NameAndType        #418:#419     // forceVersions:()Lscala/collection/immutable/Map;
  #421 = Methodref          #133.#420     // coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
  #422 = Utf8               scala/collection/immutable/Map
  #423 = Class              #422          // scala/collection/immutable/Map
  #424 = Utf8               get
  #425 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #426 = NameAndType        #424:#425     // get:(Ljava/lang/Object;)Lscala/Option;
  #427 = InterfaceMethodref #423.#426     // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #428 = Utf8               version
  #429 = NameAndType        #428:#174     // version:()Ljava/lang/String;
  #430 = Methodref          #12.#429      // coursier/graph/Conflict.version:()Ljava/lang/String;
  #431 = Utf8               contains
  #432 = NameAndType        #431:#303     // contains:(Ljava/lang/Object;)Z
  #433 = Methodref          #144.#432     // scala/Option.contains:(Ljava/lang/Object;)Z
  #434 = NameAndType        #379:#380     // matches$1:(Lcoursier/graph/Conflict;)Z
  #435 = Methodref          #2.#434       // coursier/params/rule/Strict.matches$1:(Lcoursier/graph/Conflict;)Z
  #436 = Utf8               ignore
  #437 = Utf8               Lcoursier/graph/Conflict$Conflicted;
  #438 = Utf8               x$5
  #439 = Utf8               matcher
  #440 = NameAndType        #439:#364     // matcher:()Lcoursier/core/Module;
  #441 = Methodref          #368.#440     // coursier/util/ModuleMatcher.matcher:()Lcoursier/core/Module;
  #442 = Utf8               coursier/core/Module
  #443 = Class              #442          // coursier/core/Module
  #444 = NameAndType        #173:#174     // repr:()Ljava/lang/String;
  #445 = Methodref          #443.#444     // coursier/core/Module.repr:()Ljava/lang/String;
  #446 = Utf8               x$6
  #447 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;ZZZ)V
  #448 = Utf8               ()V
  #449 = NameAndType        #136:#448     // "<init>":()V
  #450 = Methodref          #4.#449       // coursier/params/rule/Rule."<init>":()V
  #451 = Utf8               (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)V
  #452 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Z)V
  #453 = Utf8               (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)V
  #454 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)V
  #455 = Utf8               (Lscala/collection/immutable/Set;)V
  #456 = Utf8               (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)V
  #457 = Utf8               scala/Predef$
  #458 = Class              #457          // scala/Predef$
  #459 = Utf8               Lscala/Predef$;
  #460 = NameAndType        #43:#459      // MODULE$:Lscala/Predef$;
  #461 = Fieldref           #458.#460     // scala/Predef$.MODULE$:Lscala/Predef$;
  #462 = Utf8               Set
  #463 = Utf8               ()Lscala/collection/immutable/Set$;
  #464 = NameAndType        #462:#463     // Set:()Lscala/collection/immutable/Set$;
  #465 = Methodref          #458.#464     // scala/Predef$.Set:()Lscala/collection/immutable/Set$;
  #466 = Utf8               scala/collection/immutable/Set$
  #467 = Class              #466          // scala/collection/immutable/Set$
  #468 = Utf8               empty
  #469 = NameAndType        #468:#64      // empty:()Lscala/collection/immutable/Set;
  #470 = Methodref          #467.#469     // scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
  #471 = Utf8               scala/runtime/ScalaRunTime$
  #472 = Class              #471          // scala/runtime/ScalaRunTime$
  #473 = Utf8               Lscala/runtime/ScalaRunTime$;
  #474 = NameAndType        #43:#473      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #475 = Fieldref           #472.#474     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #476 = Utf8               coursier/util/ModuleMatcher$
  #477 = Class              #476          // coursier/util/ModuleMatcher$
  #478 = Utf8               Lcoursier/util/ModuleMatcher$;
  #479 = NameAndType        #43:#478      // MODULE$:Lcoursier/util/ModuleMatcher$;
  #480 = Fieldref           #477.#479     // coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
  #481 = Utf8               all
  #482 = Utf8               ()Lcoursier/util/ModuleMatcher;
  #483 = NameAndType        #481:#482     // all:()Lcoursier/util/ModuleMatcher;
  #484 = Methodref          #477.#483     // coursier/util/ModuleMatcher$.all:()Lcoursier/util/ModuleMatcher;
  #485 = Utf8               [Ljava/lang/Object;
  #486 = Class              #485          // "[Ljava/lang/Object;"
  #487 = Utf8               wrapRefArray
  #488 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #489 = NameAndType        #487:#488     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #490 = Methodref          #472.#489     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #491 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #492 = NameAndType        #38:#491      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #493 = Methodref          #467.#492     // scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #494 = NameAndType        #410:#411     // $anonfun$check$1:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Z
  #495 = Methodref          #2.#494       // coursier/params/rule/Strict.$anonfun$check$1:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Z
  #496 = NameAndType        #360:#361     // $anonfun$check$2:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #497 = Methodref          #2.#496       // coursier/params/rule/Strict.$anonfun$check$2:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #498 = NameAndType        #375:#361     // $anonfun$check$3:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #499 = Methodref          #2.#498       // coursier/params/rule/Strict.$anonfun$check$3:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #500 = NameAndType        #376:#361     // $anonfun$check$4:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #501 = Methodref          #2.#500       // coursier/params/rule/Strict.$anonfun$check$4:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #502 = NameAndType        #377:#361     // $anonfun$check$5:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #503 = Methodref          #2.#502       // coursier/params/rule/Strict.$anonfun$check$5:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
  #504 = Utf8               $deserializeLambda$
  #505 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #506 = Utf8               scala/runtime/LambdaDeserialize
  #507 = Class              #506          // scala/runtime/LambdaDeserialize
  #508 = Utf8               bootstrap
  #509 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #510 = NameAndType        #508:#509     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #511 = Methodref          #507.#510     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #512 = MethodHandle       6:#511        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #513 = Utf8               lambdaDeserialize
  #514 = NameAndType        #513:#505     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #515 = InvokeDynamic      #7:#514       // #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #516 = Utf8               Signature
  #517 = Utf8               Code
  #518 = Utf8               MethodParameters
  #519 = Utf8               LineNumberTable
  #520 = Utf8               LocalVariableTable
  #521 = Utf8               StackMapTable
  #522 = Utf8               InnerClasses
  #523 = Utf8               SourceFile
  #524 = Utf8               RuntimeVisibleAnnotations
  #525 = Utf8               BootstrapMethods
  #526 = Utf8               ScalaInlineInfo
  #527 = Utf8               ScalaSig
{
  private final scala.collection.immutable.Set<coursier.util.ModuleMatcher> include;
    descriptor: Lscala/collection/immutable/Set;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #32                          // Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;

  private final scala.collection.immutable.Set<coursier.util.ModuleMatcher> exclude;
    descriptor: Lscala/collection/immutable/Set;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #32                          // Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;

  private final boolean includeByDefault;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean ignoreIfForcedVersion;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean semVer;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static coursier.params.rule.Strict apply(scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>, boolean, boolean, boolean);
    descriptor: (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)Lcoursier/params/rule/Strict;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #46                 // Field coursier/params/rule/Strict$.MODULE$:Lcoursier/params/rule/Strict$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: iload_3
         7: iload         4
         9: invokevirtual #48                 // Method coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)Lcoursier/params/rule/Strict;
        12: areturn
    Signature: #40                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;ZZZ)Lcoursier/params/rule/Strict;
    MethodParameters:
      Name                           Flags
      include                        final
      exclude                        final
      includeByDefault               final
      ignoreIfForcedVersion          final
      semVer                         final

  public static coursier.params.rule.Strict apply(scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>, boolean);
    descriptor: (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)Lcoursier/params/rule/Strict;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #46                 // Field coursier/params/rule/Strict$.MODULE$:Lcoursier/params/rule/Strict$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: invokevirtual #52                 // Method coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)Lcoursier/params/rule/Strict;
         9: areturn
    Signature: #50                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Z)Lcoursier/params/rule/Strict;
    MethodParameters:
      Name                           Flags
      include                        final
      exclude                        final
      includeByDefault               final

  public static coursier.params.rule.Strict apply(scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #46                 // Field coursier/params/rule/Strict$.MODULE$:Lcoursier/params/rule/Strict$;
         3: aload_0
         4: aload_1
         5: invokevirtual #56                 // Method coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
         8: areturn
    Signature: #54                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/Strict;
    MethodParameters:
      Name                           Flags
      include                        final
      exclude                        final

  public static coursier.params.rule.Strict apply(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #46                 // Field coursier/params/rule/Strict$.MODULE$:Lcoursier/params/rule/Strict$;
         3: aload_0
         4: invokevirtual #60                 // Method coursier/params/rule/Strict$.apply:(Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
         7: areturn
    Signature: #58                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/Strict;
    MethodParameters:
      Name                           Flags
      include                        final

  public static coursier.params.rule.Strict apply();
    descriptor: ()Lcoursier/params/rule/Strict;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #46                 // Field coursier/params/rule/Strict$.MODULE$:Lcoursier/params/rule/Strict$;
         3: invokevirtual #63                 // Method coursier/params/rule/Strict$.apply:()Lcoursier/params/rule/Strict;
         6: areturn

  public scala.collection.immutable.Set<coursier.util.ModuleMatcher> include();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #67                 // Field include:Lscala/collection/immutable/Set;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/Strict;
    Signature: #65                          // ()Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;

  public scala.collection.immutable.Set<coursier.util.ModuleMatcher> exclude();
    descriptor: ()Lscala/collection/immutable/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #71                 // Field exclude:Lscala/collection/immutable/Set;
         4: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/Strict;
    Signature: #65                          // ()Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;

  public boolean includeByDefault();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field includeByDefault:Z
         4: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/Strict;

  public boolean ignoreIfForcedVersion();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #76                 // Field ignoreIfForcedVersion:Z
         4: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/Strict;

  public boolean semVer();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #78                 // Field semVer:Z
         4: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/params/rule/Strict;

  public scala.Option<coursier.params.rule.Strict$EvictedDependencies> check(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_0
         3: invokevirtual #84                 // Method semVer:()Z
         6: istore        4
         8: getstatic     #89                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
        11: invokevirtual #92                 // Method coursier/graph/Conflict$.conflicted$default$2:()Z
        14: istore        5
        16: getstatic     #89                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
        19: aload_3
        20: iload         5
        22: iload         4
        24: invokevirtual #96                 // Method coursier/graph/Conflict$.conflicted:(Lcoursier/core/Resolution;ZZ)Lscala/collection/immutable/Seq;
        27: aload_0
        28: aload_1
        29: invokedynamic #117,  0            // InvokeDynamic #0:apply:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;)Lscala/Function1;
        34: invokeinterface #123,  2          // InterfaceMethod scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
        39: checkcast     #119                // class scala/collection/immutable/Seq
        42: astore_2
        43: aload_2
        44: invokeinterface #126,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
        49: ifeq          58
        52: getstatic     #131                // Field scala/None$.MODULE$:Lscala/None$;
        55: goto          74
        58: new           #135                // class scala/Some
        61: dup
        62: new           #15                 // class coursier/params/rule/Strict$EvictedDependencies
        65: dup
        66: aload_0
        67: aload_2
        68: invokespecial #139                // Method coursier/params/rule/Strict$EvictedDependencies."<init>":(Lcoursier/params/rule/Strict;Lscala/collection/immutable/Seq;)V
        71: invokespecial #142                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        74: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [ class coursier/params/rule/Strict, class coursier/core/Resolution, class scala/collection/immutable/Seq, class coursier/core/Resolution, int, int ]
          stack = []
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 26: 0
        line 39: 43
        line 40: 52
        line 42: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      25     3   x$1   Lcoursier/core/Resolution;
            8      19     4   x$2   Z
           16      11     5   x$3   Z
           43      31     2 conflicts   Lscala/collection/immutable/Seq;
            0      75     0  this   Lcoursier/params/rule/Strict;
            0      75     1   res   Lcoursier/core/Resolution;
    Signature: #81                          // (Lcoursier/core/Resolution;)Lscala/Option<Lcoursier/params/rule/Strict$EvictedDependencies;>;
    MethodParameters:
      Name                           Flags
      res                            final

  public scala.util.Either<coursier.params.rule.Strict$UnsatisfiableRule, coursier.core.Resolution> tryResolve(coursier.core.Resolution, coursier.params.rule.Strict$EvictedDependencies);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: getstatic     #159                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #163                // Method scala/package$.Left:()Lscala/util/Left$;
         6: new           #18                 // class coursier/params/rule/Strict$UnsatisfiableRule
         9: dup
        10: aload_1
        11: aload_0
        12: aload_2
        13: invokespecial #166                // Method coursier/params/rule/Strict$UnsatisfiableRule."<init>":(Lcoursier/core/Resolution;Lcoursier/params/rule/Strict;Lcoursier/params/rule/Strict$EvictedDependencies;)V
        16: invokevirtual #171                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        19: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/params/rule/Strict;
            0      20     1   res   Lcoursier/core/Resolution;
            0      20     2 conflict   Lcoursier/params/rule/Strict$EvictedDependencies;
    Signature: #153                         // (Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either<Lcoursier/params/rule/Strict$UnsatisfiableRule;Lcoursier/core/Resolution;>;
    MethodParameters:
      Name                           Flags
      res                            final
      conflict                       final

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: new           #176                // class scala/collection/mutable/StringBuilder
         3: dup
         4: ldc           #178                // String Strict(
         6: invokespecial #181                // Method scala/collection/mutable/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: iconst_0
        11: istore_2
        12: aload_0
        13: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        16: invokeinterface #188,  1          // InterfaceMethod scala/collection/immutable/Set.nonEmpty:()Z
        21: ifeq          71
        24: iconst_1
        25: istore_2
        26: aload_1
        27: aload_0
        28: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        31: invokeinterface #192,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
        36: invokedynamic #201,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        41: invokevirtual #206                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
        44: checkcast     #208                // class scala/collection/immutable/StrictOptimizedSeqOps
        47: getstatic     #211                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        50: invokeinterface #215,  2          // InterfaceMethod scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
        55: checkcast     #217                // class scala/collection/IterableOnceOps
        58: ldc           #219                // String  |
        60: invokeinterface #223,  2          // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
        65: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
        68: goto          74
        71: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        74: pop
        75: aload_0
        76: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        79: invokeinterface #188,  1          // InterfaceMethod scala/collection/immutable/Set.nonEmpty:()Z
        84: ifeq          158
        87: iload_2
        88: ifeq          100
        91: aload_1
        92: ldc           #239                // String ,
        94: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
        97: goto          105
       100: iconst_1
       101: istore_2
       102: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       105: pop
       106: aload_1
       107: ldc           #241                // String exclude=
       109: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       112: pop
       113: aload_1
       114: aload_0
       115: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
       118: invokeinterface #192,  1          // InterfaceMethod scala/collection/immutable/Set.toVector:()Lscala/collection/immutable/Vector;
       123: invokedynamic #246,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       128: invokevirtual #206                // Method scala/collection/immutable/Vector.map:(Lscala/Function1;)Ljava/lang/Object;
       131: checkcast     #208                // class scala/collection/immutable/StrictOptimizedSeqOps
       134: getstatic     #211                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       137: invokeinterface #215,  2          // InterfaceMethod scala/collection/immutable/StrictOptimizedSeqOps.sorted:(Lscala/math/Ordering;)Ljava/lang/Object;
       142: checkcast     #217                // class scala/collection/IterableOnceOps
       145: ldc           #219                // String  |
       147: invokeinterface #223,  2          // InterfaceMethod scala/collection/IterableOnceOps.mkString:(Ljava/lang/String;)Ljava/lang/String;
       152: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       155: goto          161
       158: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       161: pop
       162: aload_0
       163: invokevirtual #248                // Method includeByDefault:()Z
       166: ifeq          197
       169: iload_2
       170: ifeq          182
       173: aload_1
       174: ldc           #239                // String ,
       176: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       179: goto          187
       182: iconst_1
       183: istore_2
       184: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       187: pop
       188: aload_1
       189: ldc           #250                // String ignoreIfForcedVersion=true
       191: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       194: goto          200
       197: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       200: pop
       201: aload_0
       202: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
       205: ifne          236
       208: iload_2
       209: ifeq          221
       212: aload_1
       213: ldc           #239                // String ,
       215: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       218: goto          226
       221: iconst_1
       222: istore_2
       223: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       226: pop
       227: aload_1
       228: ldc           #254                // String ignoreIfForcedVersion=false
       230: invokevirtual #227                // Method scala/collection/mutable/StringBuilder.$plus$plus$eq:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       233: goto          239
       236: getstatic     #233                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       239: pop
       240: aload_1
       241: bipush        41
       243: invokestatic  #260                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       246: invokevirtual #264                // Method scala/collection/mutable/StringBuilder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       249: pop
       250: aload_1
       251: invokevirtual #267                // Method scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
       254: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 253 /* append */
          offset_delta = 71
          locals = [ class scala/collection/mutable/StringBuilder, int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 25 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 52 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 20 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 9 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 20 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 9 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 49: 0
        line 50: 10
        line 51: 12
        line 52: 24
        line 53: 26
        line 51: 71
        line 55: 75
        line 56: 87
        line 57: 91
        line 59: 100
        line 60: 106
        line 61: 113
        line 55: 158
        line 63: 162
        line 64: 169
        line 65: 173
        line 67: 182
        line 68: 188
        line 63: 197
        line 70: 201
        line 71: 208
        line 72: 212
        line 74: 221
        line 75: 227
        line 70: 236
        line 77: 240
        line 78: 250
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     244     1     b   Lscala/collection/mutable/StringBuilder;
           12     242     2 anyElem   Z
            0     255     0  this   Lcoursier/params/rule/Strict;

  public coursier.params.rule.Strict withInclude(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/Strict
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
         9: aload_0
        10: invokevirtual #248                // Method includeByDefault:()Z
        13: aload_0
        14: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        17: aload_0
        18: invokevirtual #84                 // Method semVer:()Z
        21: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        24: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/params/rule/Strict;
            0      25     1 include   Lscala/collection/immutable/Set;
    Signature: #58                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/Strict;
    MethodParameters:
      Name                           Flags
      include                        final

  public coursier.params.rule.Strict withExclude(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)Lcoursier/params/rule/Strict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/Strict
         3: dup
         4: aload_0
         5: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
         8: aload_1
         9: aload_0
        10: invokevirtual #248                // Method includeByDefault:()Z
        13: aload_0
        14: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        17: aload_0
        18: invokevirtual #84                 // Method semVer:()Z
        21: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        24: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/params/rule/Strict;
            0      25     1 exclude   Lscala/collection/immutable/Set;
    Signature: #58                          // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)Lcoursier/params/rule/Strict;
    MethodParameters:
      Name                           Flags
      exclude                        final

  public coursier.params.rule.Strict withIncludeByDefault(boolean);
    descriptor: (Z)Lcoursier/params/rule/Strict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/Strict
         3: dup
         4: aload_0
         5: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
         8: aload_0
         9: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        12: iload_1
        13: aload_0
        14: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        17: aload_0
        18: invokevirtual #84                 // Method semVer:()Z
        21: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        24: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/params/rule/Strict;
            0      25     1 includeByDefault   Z
    MethodParameters:
      Name                           Flags
      includeByDefault               final

  public coursier.params.rule.Strict withIgnoreIfForcedVersion(boolean);
    descriptor: (Z)Lcoursier/params/rule/Strict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/Strict
         3: dup
         4: aload_0
         5: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
         8: aload_0
         9: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        12: aload_0
        13: invokevirtual #248                // Method includeByDefault:()Z
        16: iload_1
        17: aload_0
        18: invokevirtual #84                 // Method semVer:()Z
        21: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        24: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/params/rule/Strict;
            0      25     1 ignoreIfForcedVersion   Z
    MethodParameters:
      Name                           Flags
      ignoreIfForcedVersion          final

  public coursier.params.rule.Strict withSemVer(boolean);
    descriptor: (Z)Lcoursier/params/rule/Strict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: new           #2                  // class coursier/params/rule/Strict
         3: dup
         4: aload_0
         5: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
         8: aload_0
         9: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        12: aload_0
        13: invokevirtual #248                // Method includeByDefault:()Z
        16: aload_0
        17: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        20: iload_1
        21: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        24: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/params/rule/Strict;
            0      25     1 semVer   Z
    MethodParameters:
      Name                           Flags
      semVer                         final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #282                // class java/lang/StringBuilder
         3: dup
         4: ldc           #178                // String Strict(
         6: invokespecial #283                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        15: invokestatic  #289                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc           #239                // String ,
        25: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: aload_0
        31: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        34: invokestatic  #289                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        37: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: pop
        41: aload_1
        42: ldc           #239                // String ,
        44: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: pop
        48: aload_1
        49: aload_0
        50: invokevirtual #248                // Method includeByDefault:()Z
        53: invokestatic  #296                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        56: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: pop
        60: aload_1
        61: ldc           #239                // String ,
        63: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        66: pop
        67: aload_1
        68: aload_0
        69: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        72: invokestatic  #296                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        75: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        78: pop
        79: aload_1
        80: ldc           #239                // String ,
        82: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: pop
        86: aload_1
        87: aload_0
        88: invokevirtual #84                 // Method semVer:()Z
        91: invokestatic  #296                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
        94: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        97: pop
        98: aload_1
        99: ldc_w         #298                // String )
       102: invokevirtual #293                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       105: pop
       106: aload_1
       107: invokevirtual #300                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       110: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     100     1     b   Ljava/lang/StringBuilder;
            0     111     0  this   Lcoursier/params/rule/Strict;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/params/rule/Strict
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/params/rule/Strict;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     122
         5: aload_0
         6: aload_1
         7: invokevirtual #308                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          126
        13: aload_1
        14: checkcast     #2                  // class coursier/params/rule/Strict
        17: astore_2
        18: iconst_1
        19: ifeq          118
        22: aload_0
        23: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        26: aload_2
        27: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          118
        43: aload_3
        44: invokevirtual #310                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          118
        50: aload_0
        51: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        54: aload_2
        55: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          118
        73: aload         4
        75: invokevirtual #310                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          118
        81: aload_0
        82: invokevirtual #248                // Method includeByDefault:()Z
        85: aload_2
        86: invokevirtual #248                // Method includeByDefault:()Z
        89: if_icmpne     118
        92: aload_0
        93: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        96: aload_2
        97: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
       100: if_icmpne     118
       103: aload_0
       104: invokevirtual #84                 // Method semVer:()Z
       107: aload_2
       108: invokevirtual #84                 // Method semVer:()Z
       111: if_icmpne     118
       114: iconst_1
       115: goto          119
       118: iconst_0
       119: ifeq          126
       122: iconst_1
       123: goto          127
       126: iconst_0
       127: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/params/rule/Strict, class java/lang/Object, class coursier/params/rule/Strict, class scala/collection/immutable/Set ]
          stack = [ class scala/collection/immutable/Set ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/params/rule/Strict, class java/lang/Object, class coursier/params/rule/Strict, class scala/collection/immutable/Set, class scala/collection/immutable/Set ]
          stack = [ class scala/collection/immutable/Set ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 36
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     101     2 other   Lcoursier/params/rule/Strict;
            0     128     0  this   Lcoursier/params/rule/Strict;
            0     128     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #315                // String Strict
         5: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        18: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        31: invokestatic  #321                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #248                // Method includeByDefault:()Z
        44: ifeq          53
        47: sipush        1231
        50: goto          56
        53: sipush        1237
        56: iadd
        57: istore_1
        58: bipush        37
        60: iload_1
        61: imul
        62: aload_0
        63: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        66: ifeq          75
        69: sipush        1231
        72: goto          78
        75: sipush        1237
        78: iadd
        79: istore_1
        80: bipush        37
        82: iload_1
        83: imul
        84: aload_0
        85: invokevirtual #84                 // Method semVer:()Z
        88: ifeq          97
        91: sipush        1231
        94: goto          100
        97: sipush        1237
       100: iadd
       101: istore_1
       102: bipush        37
       104: iload_1
       105: imul
       106: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class coursier/params/rule/Strict, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/params/rule/Strict, int ]
          stack = [ int, int ]
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/params/rule/Strict, int ]
          stack = [ int, int ]
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/params/rule/Strict, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      96     1  code   I
            0     107     0  this   Lcoursier/params/rule/Strict;

  private scala.Tuple5<scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>, java.lang.Object, java.lang.Object, java.lang.Object> tuple();
    descriptor: ()Lscala/Tuple5;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=1, args_size=1
         0: new           #328                // class scala/Tuple5
         3: dup
         4: aload_0
         5: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
         8: aload_0
         9: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        12: aload_0
        13: invokevirtual #248                // Method includeByDefault:()Z
        16: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        19: aload_0
        20: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        23: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        26: aload_0
        27: invokevirtual #84                 // Method semVer:()Z
        30: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        33: invokespecial #335                // Method scala/Tuple5."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        36: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lcoursier/params/rule/Strict;
    Signature: #326                         // ()Lscala/Tuple5<Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #315                // String Strict
         3: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/params/rule/Strict;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_5
         1: ireturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/params/rule/Strict;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 4
                       0: 36
                       1: 43
                       2: 50
                       3: 60
                       4: 70
                 default: 80
            }
        36: aload_0
        37: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        40: goto          95
        43: aload_0
        44: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        47: goto          95
        50: aload_0
        51: invokevirtual #248                // Method includeByDefault:()Z
        54: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        57: goto          95
        60: aload_0
        61: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
        64: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        67: goto          95
        70: aload_0
        71: invokevirtual #84                 // Method semVer:()Z
        74: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        77: goto          95
        80: new           #342                // class java/lang/IndexOutOfBoundsException
        83: dup
        84: iload_2
        85: invokestatic  #346                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        88: invokevirtual #347                // Method java/lang/Object.toString:()Ljava/lang/String;
        91: invokespecial #348                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        94: athrow
        95: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      96     0  this   Lcoursier/params/rule/Strict;
            0      96     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 4
                       0: 36
                       1: 42
                       2: 48
                       3: 54
                       4: 60
                 default: 66
            }
        36: ldc_w         #351                // String include
        39: goto          81
        42: ldc_w         #352                // String exclude
        45: goto          81
        48: ldc_w         #353                // String includeByDefault
        51: goto          81
        54: ldc_w         #354                // String ignoreIfForcedVersion
        57: goto          81
        60: ldc_w         #355                // String semVer
        63: goto          81
        66: new           #342                // class java/lang/IndexOutOfBoundsException
        69: dup
        70: iload_2
        71: invokestatic  #346                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        74: invokevirtual #347                // Method java/lang/Object.toString:()Ljava/lang/String;
        77: invokespecial #348                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        80: athrow
        81: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      82     0  this   Lcoursier/params/rule/Strict;
            0      82     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.util.Either tryResolve(coursier.core.Resolution, coursier.error.conflict.UnsatisfiedRule);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/error/conflict/UnsatisfiedRule;)Lscala/util/Either;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: checkcast     #15                 // class coursier/params/rule/Strict$EvictedDependencies
         6: invokevirtual #358                // Method tryResolve:(Lcoursier/core/Resolution;Lcoursier/params/rule/Strict$EvictedDependencies;)Lscala/util/Either;
         9: areturn
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/Strict;
            0      10     1   res   Lcoursier/core/Resolution;
            0      10     2 conflict   Lcoursier/error/conflict/UnsatisfiedRule;
    MethodParameters:
      Name                           Flags
      res                            final
      conflict                       final

  public static final boolean $anonfun$check$2(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #366                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
         5: invokevirtual #372                // Method coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
         8: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$1   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$1                            final

  public static final boolean $anonfun$check$3(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #366                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
         5: invokevirtual #372                // Method coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
         8: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$2   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$2                            final

  public static final boolean $anonfun$check$4(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #366                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
         5: invokevirtual #372                // Method coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
         8: ireturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$3   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$3                            final

  public static final boolean $anonfun$check$5(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #366                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
         5: invokevirtual #372                // Method coursier/util/ModuleMatcher.matches:(Lcoursier/core/Module;)Z
         8: ireturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$4   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$4                            final

  private final boolean matches$1(coursier.graph.Conflict);
    descriptor: (Lcoursier/graph/Conflict;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #248                // Method includeByDefault:()Z
         4: ifeq          51
         7: aload_0
         8: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        11: aload_1
        12: invokedynamic #390,  0            // InvokeDynamic #3:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
        17: invokeinterface #394,  2          // InterfaceMethod scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
        22: ifne          43
        25: aload_0
        26: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        29: aload_1
        30: invokedynamic #399,  0            // InvokeDynamic #4:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
        35: invokeinterface #394,  2          // InterfaceMethod scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
        40: ifne          47
        43: iconst_1
        44: goto          48
        47: iconst_0
        48: goto          92
        51: aload_0
        52: invokevirtual #183                // Method include:()Lscala/collection/immutable/Set;
        55: aload_1
        56: invokedynamic #404,  0            // InvokeDynamic #5:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
        61: invokeinterface #394,  2          // InterfaceMethod scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
        66: ifeq          91
        69: aload_0
        70: invokevirtual #237                // Method exclude:()Lscala/collection/immutable/Set;
        73: aload_1
        74: invokedynamic #409,  0            // InvokeDynamic #6:apply:(Lcoursier/graph/Conflict;)Lscala/Function1;
        79: invokeinterface #394,  2          // InterfaceMethod scala/collection/immutable/Set.exists:(Lscala/Function1;)Z
        84: ifne          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 43 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 2 /* same */
        frame_type = 39 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 30: 0
        line 31: 7
        line 32: 25
        line 34: 51
        line 35: 69
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      93     0  this   Lcoursier/params/rule/Strict;
            0      93     1 conflict$1   Lcoursier/graph/Conflict;
    MethodParameters:
      Name                           Flags
      conflict$1                     final

  public static final boolean $anonfun$check$1(coursier.params.rule.Strict, coursier.core.Resolution, coursier.graph.Conflict$Conflicted);
    descriptor: (Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=5, args_size=3
         0: aload_2
         1: invokevirtual #417                // Method coursier/graph/Conflict$Conflicted.conflict:()Lcoursier/graph/Conflict;
         4: astore_3
         5: aload_0
         6: invokevirtual #252                // Method ignoreIfForcedVersion:()Z
         9: ifeq          39
        12: aload_1
        13: invokevirtual #421                // Method coursier/core/Resolution.forceVersions:()Lscala/collection/immutable/Map;
        16: aload_3
        17: invokevirtual #366                // Method coursier/graph/Conflict.module:()Lcoursier/core/Module;
        20: invokeinterface #427,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        25: aload_3
        26: invokevirtual #430                // Method coursier/graph/Conflict.version:()Ljava/lang/String;
        29: invokevirtual #433                // Method scala/Option.contains:(Ljava/lang/Object;)Z
        32: ifeq          39
        35: iconst_1
        36: goto          40
        39: iconst_0
        40: istore        4
        42: iload         4
        44: ifne          59
        47: aload_0
        48: aload_3
        49: invokespecial #435                // Method matches$1:(Lcoursier/graph/Conflict;)Z
        52: ifeq          59
        55: iconst_1
        56: goto          60
        59: iconst_0
        60: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ class coursier/graph/Conflict ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 27: 0
        line 28: 5
        line 36: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      55     3 conflict   Lcoursier/graph/Conflict;
           42      18     4 ignore   Z
            0      61     0 $this   Lcoursier/params/rule/Strict;
            0      61     1 res$1   Lcoursier/core/Resolution;
            0      61     2     c   Lcoursier/graph/Conflict$Conflicted;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      res$1                          final
      c                              final

  public static final java.lang.String $anonfun$repr$1(coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #441                // Method coursier/util/ModuleMatcher.matcher:()Lcoursier/core/Module;
         4: invokevirtual #445                // Method coursier/core/Module.repr:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.String $anonfun$repr$2(coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #441                // Method coursier/util/ModuleMatcher.matcher:()Lcoursier/core/Module;
         4: invokevirtual #445                // Method coursier/core/Module.repr:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public coursier.params.rule.Strict(scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>, boolean, boolean, boolean);
    descriptor: (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: putfield      #67                 // Field include:Lscala/collection/immutable/Set;
         5: aload_0
         6: aload_2
         7: putfield      #71                 // Field exclude:Lscala/collection/immutable/Set;
        10: aload_0
        11: iload_3
        12: putfield      #74                 // Field includeByDefault:Z
        15: aload_0
        16: iload         4
        18: putfield      #76                 // Field ignoreIfForcedVersion:Z
        21: aload_0
        22: iload         5
        24: putfield      #78                 // Field semVer:Z
        27: aload_0
        28: invokespecial #450                // Method coursier/params/rule/Rule."<init>":()V
        31: return
      LineNumberTable:
        line 9: 0
        line 18: 27
        line 9: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Lcoursier/params/rule/Strict;
            0      32     1 include   Lscala/collection/immutable/Set;
            0      32     2 exclude   Lscala/collection/immutable/Set;
            0      32     3 includeByDefault   Z
            0      32     4 ignoreIfForcedVersion   Z
            0      32     5 semVer   Z
    Signature: #447                         // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;ZZZ)V
    MethodParameters:
      Name                           Flags
      include                        final
      exclude                        final
      includeByDefault               final
      ignoreIfForcedVersion          final
      semVer                         final

  public coursier.params.rule.Strict(scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>, boolean);
    descriptor: (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: iconst_1
         5: iconst_0
         6: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
         9: return
      LineNumberTable:
        line 9: 0
        line 16: 4
        line 17: 5
        line 9: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/Strict;
            0      10     1 include   Lscala/collection/immutable/Set;
            0      10     2 exclude   Lscala/collection/immutable/Set;
            0      10     3 includeByDefault   Z
    Signature: #452                         // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Z)V
    MethodParameters:
      Name                           Flags
      include                        final
      exclude                        final
      includeByDefault               final

  public coursier.params.rule.Strict(scala.collection.immutable.Set<coursier.util.ModuleMatcher>, scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: iconst_1
         5: iconst_0
         6: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
         9: return
      LineNumberTable:
        line 9: 0
        line 14: 3
        line 16: 4
        line 17: 5
        line 9: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/params/rule/Strict;
            0      10     1 include   Lscala/collection/immutable/Set;
            0      10     2 exclude   Lscala/collection/immutable/Set;
    Signature: #454                         // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)V
    MethodParameters:
      Name                           Flags
      include                        final
      exclude                        final

  public coursier.params.rule.Strict(scala.collection.immutable.Set<coursier.util.ModuleMatcher>);
    descriptor: (Lscala/collection/immutable/Set;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #461                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         5: invokevirtual #465                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
         8: invokevirtual #470                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
        11: iconst_0
        12: iconst_1
        13: iconst_0
        14: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        17: return
      LineNumberTable:
        line 9: 0
        line 12: 2
        line 14: 11
        line 16: 12
        line 17: 13
        line 9: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/params/rule/Strict;
            0      18     1 include   Lscala/collection/immutable/Set;
    Signature: #456                         // (Lscala/collection/immutable/Set<Lcoursier/util/ModuleMatcher;>;)V
    MethodParameters:
      Name                           Flags
      include                        final

  public coursier.params.rule.Strict();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: aload_0
         1: getstatic     #461                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         4: invokevirtual #465                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
         7: getstatic     #475                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        10: iconst_1
        11: anewarray     #368                // class coursier/util/ModuleMatcher
        14: dup
        15: iconst_0
        16: getstatic     #480                // Field coursier/util/ModuleMatcher$.MODULE$:Lcoursier/util/ModuleMatcher$;
        19: invokevirtual #484                // Method coursier/util/ModuleMatcher$.all:()Lcoursier/util/ModuleMatcher;
        22: aastore
        23: checkcast     #486                // class "[Ljava/lang/Object;"
        26: invokevirtual #490                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        29: invokevirtual #493                // Method scala/collection/immutable/Set$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        32: checkcast     #185                // class scala/collection/immutable/Set
        35: getstatic     #461                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        38: invokevirtual #465                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
        41: invokevirtual #470                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
        44: iconst_0
        45: iconst_1
        46: iconst_0
        47: invokespecial #274                // Method "<init>":(Lscala/collection/immutable/Set;Lscala/collection/immutable/Set;ZZZ)V
        50: return
      LineNumberTable:
        line 9: 0
        line 10: 1
        line 12: 35
        line 14: 44
        line 16: 45
        line 17: 46
        line 9: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lcoursier/params/rule/Strict;

  public static final java.lang.Object $anonfun$check$1$adapted(coursier.params.rule.Strict, coursier.core.Resolution, coursier.graph.Conflict$Conflicted);
    descriptor: (Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #495                // Method $anonfun$check$1:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Z
         6: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 26: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/params/rule/Strict;
            0      10     1 res$1   Lcoursier/core/Resolution;
            0      10     2     c   Lcoursier/graph/Conflict$Conflicted;
    MethodParameters:
      Name                           Flags
      $this                          final
      res$1                          final
      c                              final

  public static final java.lang.Object $anonfun$check$2$adapted(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #497                // Method $anonfun$check$2:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
         5: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$1   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$1                            final

  public static final java.lang.Object $anonfun$check$3$adapted(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #499                // Method $anonfun$check$3:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
         5: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$2   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$2                            final

  public static final java.lang.Object $anonfun$check$4$adapted(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #501                // Method $anonfun$check$4:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
         5: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$3   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$3                            final

  public static final java.lang.Object $anonfun$check$5$adapted(coursier.graph.Conflict, coursier.util.ModuleMatcher);
    descriptor: (Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #503                // Method $anonfun$check$5:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Z
         5: invokestatic  #332                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 conflict$1   Lcoursier/graph/Conflict;
            0       9     1   x$4   Lcoursier/util/ModuleMatcher;
    MethodParameters:
      Name                           Flags
      conflict$1                     final
      x$4                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #515,  0            // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Conflicted=class coursier/graph/Conflict$Conflicted of class coursier/graph/Conflict
  public static final #16= #15 of #2;     // EvictedDependencies=class coursier/params/rule/Strict$EvictedDependencies of class coursier/params/rule/Strict
  public static final #19= #18 of #2;     // UnsatisfiableRule=class coursier/params/rule/Strict$UnsatisfiableRule of class coursier/params/rule/Strict
  public static final #24= #21 of #23;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #29= #26 of #28;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "Strict.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t=d\u0001\u0002\u001d:\u0005\u0001C\u0001b\u0016\u0001\u0003\u0006\u0004%\t\u0001\u0017\u0005\tO\u0002\u0011\t\u0011)A\u00053\"A\u0001\u000e\u0001BC\u0002\u0013\u0005\u0001\f\u0003\u0005j\u0001\t\u0005\t\u0015!\u0003Z\u0011!Q\u0007A!b\u0001\n\u0003Y\u0007\u0002C8\u0001\u0005\u0003\u0005\u000b\u0011\u00027\t\u0011A\u0004!Q1A\u0005\u0002-D\u0001\"\u001d\u0001\u0003\u0002\u0003\u0006I\u0001\u001c\u0005\te\u0002\u0011)\u0019!C\u0001W\"A1\u000f\u0001B\u0001B\u0003%A\u000eC\u0003u\u0001\u0011\u0005Q\u000fC\u0003u\u0001\u0011\u0005A\u0010\u0003\u0004u\u0001\u0011\u0005\u0011\u0011\u0001\u0005\u0007i\u0002!\t!a\u0002\t\rQ\u0004A\u0011AA\u0006\u000b\u0019\ti\u0001\u0001\u0001\u0002\u0010!9\u00111\u001d\u0001\u0005\u0002\u0005\u0015\bbBAy\u0001\u0011\u0005\u00111\u001f\u0005\b\u0005\u0003\u0001A\u0011\tB\u0002\u0011\u001d\u0011Y\u0001\u0001C\u0001\u0005\u001bAqA!\u0005\u0001\t\u0003\u0011\u0019\u0002C\u0004\u0003\u0018\u0001!\tA!\u0007\t\u000f\tu\u0001\u0001\"\u0001\u0003 !9!1\u0005\u0001\u0005\u0002\t\u0015\u0002b\u0002B\u0015\u0001\u0011\u0005#1\u0006\u0005\b\u0005c\u0001A\u0011\tB\u001a\u0011\u001d\u0011y\u0004\u0001C!\u0005\u0003BqA!\u0012\u0001\t\u0003\u00129\u0005C\u0004\u0003P\u0001!IA!\u0015\t\u000f\te\u0003\u0001\"\u0011\u0003\\!9!Q\f\u0001\u0005B\t}\u0003b\u0002B1\u0001\u0011\u0005#1\r\u0005\b\u0005S\u0002A\u0011\tB6\u000f\u001d\t\u0019\"\u000fE\u0001\u0003+1a\u0001O\u001d\t\u0002\u0005]\u0001B\u0002;$\t\u0003\tiC\u0002\u0004\u00020\r\u0012\u0011\u0011\u0007\u0005\nu\u0015\u0012)\u0019!C!\u0003\u0007B1\"!\u0012&\u0005\u0003\u0005\u000b\u0011\u0002<\u0002H!Q\u0011\u0011J\u0013\u0003\u0006\u0004%\t!a\u0013\t\u0015\u00055TE!A!\u0002\u0013\ti\u0005\u0003\u0004uK\u0011\u0005\u0011q\u000e\u0004\u0007\u0003s\u001a#!a\u001f\t\u0019\u000555F!A!\u0002\u0013\ty)a\'\t\u0013iZ#Q1A\u0005B\u0005\r\u0003bCA#W\t\u0005\t\u0015!\u0003w\u0003CC!\"!\u000f,\u0005\u000b\u0007I\u0011IAR\u00111\t)k\u000bB\u0001B\u0003%\u0011\u0011OAT\u0011\u0019!8\u0006\"\u0001\u0002*\"9\u00111W\u0012\u0005\u0002\u0005-\u0001bBAZG\u0011\u0005\u0011Q\u0017\u0005\b\u0003g\u001bC\u0011AA]\u0011\u001d\t\u0019l\tC\u0001\u0003\u007fCq!a-$\t\u0003\t9\rC\u0005\u0002T\u000e\n\t\u0011\"\u0003\u0002V\n11\u000b\u001e:jGRT!AO\u001e\u0002\tI,H.\u001a\u0006\u0003yu\na\u0001]1sC6\u001c(\"\u0001 \u0002\u0011\r|WO]:jKJ\u001c\u0001a\u0005\u0003\u0001\u0003\u0016[\u0005C\u0001\"D\u001b\u0005I\u0014B\u0001#:\u0005\u0011\u0011V\u000f\\3\u0011\u0005\u0019KU\"A$\u000b\u0003!\u000bQa]2bY\u0006L!AS$\u0003\u000fA\u0013x\u000eZ;diB\u0011A\n\u0016\b\u0003\u001bJs!AT)\u000e\u0003=S!\u0001U \u0002\rq\u0012xn\u001c;?\u0013\u0005A\u0015BA*H\u0003\u001d\u0001\u0018mY6bO\u0016L!!\u0016,\u0003\u0019M+\'/[1mSj\f\'\r\\3\u000b\u0005M;\u0015aB5oG2,H-Z\u000b\u00023B\u0019!LX1\u000f\u0005mc\u0006C\u0001(H\u0013\tiv)\u0001\u0004Qe\u0016$WMZ\u0005\u0003?\u0002\u00141aU3u\u0015\tiv\t\u0005\u0002cK6\t1M\u0003\u0002e{\u0005!Q\u000f^5m\u0013\t17MA\u0007N_\u0012,H.Z\'bi\u000eDWM]\u0001\tS:\u001cG.\u001e3fA\u00059Q\r_2mk\u0012,\u0017\u0001C3yG2,H-\u001a\u0011\u0002!%t7\r\\;eK\nKH)\u001a4bk2$X#\u00017\u0011\u0005\u0019k\u0017B\u00018H\u0005\u001d\u0011un\u001c7fC:\f\u0011#\u001b8dYV$WMQ=EK\u001a\fW\u000f\u001c;!\u0003UIwM\\8sK&3gi\u001c:dK\u00124VM]:j_:\fa#[4o_J,\u0017J\u001a$pe\u000e,GMV3sg&|g\u000eI\u0001\u0007g\u0016lg+\u001a:\u0002\u000fM,WNV3sA\u00051A(\u001b8jiz\"bA^<ysj\\\bC\u0001\"\u0001\u0011\u001596\u00021\u0001Z\u0011\u0015A7\u00021\u0001Z\u0011\u0015Q7\u00021\u0001m\u0011\u0015\u00018\u00021\u0001m\u0011\u0015\u00118\u00021\u0001m)\u00111XP`@\t\u000b]c\u0001\u0019A-\t\u000b!d\u0001\u0019A-\t\u000b)d\u0001\u0019\u00017\u0015\u000bY\f\u0019!!\u0002\t\u000b]k\u0001\u0019A-\t\u000b!l\u0001\u0019A-\u0015\u0007Y\fI\u0001C\u0003X\u001d\u0001\u0007\u0011\fF\u0001w\u0005\u0005\u0019\u0005cAA\tK9\u0011!II\u0001\u0007\'R\u0014\u0018n\u0019;\u0011\u0005\t\u001b3#B\u0012\u0002\u001a\u0005}\u0001c\u0001$\u0002\u001c%\u0019\u0011QD$\u0003\r\u0005s\u0017PU3g!\u0011\t\t#a\u000b\u000e\u0005\u0005\r\"\u0002BA\u0013\u0003O\t!![8\u000b\u0005\u0005%\u0012\u0001\u00026bm\u0006L1!VA\u0012)\t\t)BA\nFm&\u001cG/\u001a3EKB,g\u000eZ3oG&,7oE\u0002&\u0003g\u0001B!!\u000e\u0002@5\u0011\u0011q\u0007\u0006\u0005\u0003s\tY$\u0001\u0005d_:4G.[2u\u0015\r\ti$P\u0001\u0006KJ\u0014xN]\u0005\u0005\u0003\u0003\n9DA\bV]N\fG/[:gS\u0016$\'+\u001e7f+\u00051\u0018!\u0002:vY\u0016\u0004\u0013b\u0001\u001e\u0002@\u00059QM^5di\u0016$WCAA\'!\u0015a\u0015qJA*\u0013\r\t\tF\u0016\u0002\u0004\'\u0016\f\b\u0003BA+\u0003OrA!a\u0016\u0002b9!\u0011\u0011LA/\u001d\rq\u00151L\u0005\u0002}%\u0019\u0011qL\u001f\u0002\u000b\u001d\u0014\u0018\r\u001d5\n\t\u0005\r\u0014QM\u0001\t\u0007>tg\r\\5di*\u0019\u0011qL\u001f\n\t\u0005%\u00141\u000e\u0002\u000b\u0007>tg\r\\5di\u0016$\'\u0002BA2\u0003K\n\u0001\"\u001a<jGR,G\r\t\u000b\u0007\u0003c\n)(a\u001e\u0011\u0007\u0005MT%D\u0001$\u0011\u0015Q$\u00061\u0001w\u0011\u001d\tIE\u000ba\u0001\u0003\u001b\u0012\u0011#\u00168tCRL7OZ5bE2,\'+\u001e7f\'\rY\u0013Q\u0010\t\u0005\u0003\u007f\nII\u0004\u0003\u0002\u0002\u0006\u0015e\u0002BA-\u0003\u0007K1!!\u0010>\u0013\u0011\t9)a\u000f\u0002\u001fI+7o\u001c7vi&|g.\u0012:s_JLA!!\u001f\u0002\f*!\u0011qQA\u001e\u0003)\u0011Xm]8mkRLwN\u001c\t\u0005\u0003#\u000b9*\u0004\u0002\u0002\u0014*\u0019\u0011QS\u001f\u0002\t\r|\'/Z\u0005\u0005\u00033\u000b\u0019J\u0001\u0006SKN|G.\u001e;j_:LA!!$\u0002\u001e&!\u0011qTA\u001e\u0005=\u0011Vm]8mkRLwN\\#se>\u0014\u0018b\u0001\u001e\u0002\nV\u0011\u0011\u0011O\u0001\nG>tg\r\\5di\u0002JA!!\u000f\u0002\nRA\u00111VAW\u0003_\u000b\t\fE\u0002\u0002t-Bq!!$2\u0001\u0004\ty\tC\u0003;c\u0001\u0007a\u000fC\u0004\u0002:E\u0002\r!!\u001d\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u0007Y\f9\fC\u0003Xg\u0001\u0007\u0011\fF\u0003w\u0003w\u000bi\fC\u0003Xi\u0001\u0007\u0011\fC\u0003ii\u0001\u0007\u0011\fF\u0004w\u0003\u0003\f\u0019-!2\t\u000b]+\u0004\u0019A-\t\u000b!,\u0004\u0019A-\t\u000b),\u0004\u0019\u00017\u0015\u0017Y\fI-a3\u0002N\u0006=\u0017\u0011\u001b\u0005\u0006/Z\u0002\r!\u0017\u0005\u0006QZ\u0002\r!\u0017\u0005\u0006UZ\u0002\r\u0001\u001c\u0005\u0006aZ\u0002\r\u0001\u001c\u0005\u0006eZ\u0002\r\u0001\\\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003/\u0004B!!7\u0002`6\u0011\u00111\u001c\u0006\u0005\u0003;\f9#\u0001\u0003mC:<\u0017\u0002BAq\u00037\u0014aa\u00142kK\u000e$\u0018!B2iK\u000e\\G\u0003BAt\u0003[\u0004RARAu\u0003\u001fI1!a;H\u0005\u0019y\u0005\u000f^5p]\"9\u0011q^\tA\u0002\u0005=\u0015a\u0001:fg\u0006QAO]=SKN|GN^3\u0015\r\u0005U\u0018Q`A\u0000!\u001da\u0015q_A~\u0003\u001fK1!!?W\u0005\u0019)\u0015\u000e\u001e5feB\u0019\u0011\u0011C\u0016\t\u000f\u0005=(\u00031\u0001\u0002\u0010\"9\u0011\u0011\b\nA\u0002\u0005=\u0011\u0001\u0002:faJ,\"A!\u0002\u0011\u0007i\u00139!C\u0002\u0003\n\u0001\u0014aa\u0015;sS:<\u0017aC<ji\"Len\u00197vI\u0016$2A\u001eB\b\u0011\u00159F\u00031\u0001Z\u0003-9\u0018\u000e\u001e5Fq\u000edW\u000fZ3\u0015\u0007Y\u0014)\u0002C\u0003i+\u0001\u0007\u0011,\u0001\u000bxSRD\u0017J\\2mk\u0012,\')\u001f#fM\u0006,H\u000e\u001e\u000b\u0004m\nm\u0001\"\u00026\u0017\u0001\u0004a\u0017!G<ji\"LuM\\8sK&3gi\u001c:dK\u00124VM]:j_:$2A\u001eB\u0011\u0011\u0015\u0001x\u00031\u0001m\u0003)9\u0018\u000e\u001e5TK64VM\u001d\u000b\u0004m\n\u001d\u0002\"\u0002:\u0019\u0001\u0004a\u0017\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\t5\u0002\u0003BAm\u0005_IAA!\u0003\u0002\\\u0006A1-\u00198FcV\fG\u000eF\u0002m\u0005kAqAa\u000e\u001b\u0001\u0004\u0011I$A\u0002pE*\u00042A\u0012B\u001e\u0013\r\u0011id\u0012\u0002\u0004\u0003:L\u0018AB3rk\u0006d7\u000fF\u0002m\u0005\u0007BqAa\u000e\u001c\u0001\u0004\u0011I$\u0001\u0005iCND7i\u001c3f)\t\u0011I\u0005E\u0002G\u0005\u0017J1A!\u0014H\u0005\rIe\u000e^\u0001\u0006iV\u0004H.Z\u000b\u0003\u0005\'\u0002\u0002B\u0012B+3fcG\u000e\\\u0005\u0004\u0005/:%A\u0002+va2,W\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0003\u0005[\tA\u0002\u001d:pIV\u001cG/\u0011:jif,\"A!\u0013\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!!\u0011\bB3\u0011\u001d\u00119\u0007\ta\u0001\u0005\u0013\n\u0011A\\\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0003.\t5\u0004b\u0002B4C\u0001\u0007!\u0011\n"
    )
BootstrapMethods:
  0: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #103 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$1$adapted:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
      #105 (Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
      #106 5
      #107 1
      #105 (Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
  1: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #197 REF_invokeStatic coursier/params/rule/Strict.$anonfun$repr$1:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
      #198 (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
      #106 5
      #107 1
      #198 (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  2: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #245 REF_invokeStatic coursier/params/rule/Strict.$anonfun$repr$2:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
      #198 (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
      #106 5
      #107 1
      #198 (Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  3: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #385 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$2$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #106 5
      #107 1
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  4: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #398 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$3$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #106 5
      #107 1
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  5: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #403 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$4$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #106 5
      #107 1
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  6: #114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #408 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$5$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #106 5
      #107 1
      #387 (Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
  7: #512 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$1$adapted:(Lcoursier/params/rule/Strict;Lcoursier/core/Resolution;Lcoursier/graph/Conflict$Conflicted;)Ljava/lang/Object;
      #385 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$2$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #398 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$3$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #403 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$4$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #408 REF_invokeStatic coursier/params/rule/Strict.$anonfun$check$5$adapted:(Lcoursier/graph/Conflict;Lcoursier/util/ModuleMatcher;)Ljava/lang/Object;
      #197 REF_invokeStatic coursier/params/rule/Strict.$anonfun$repr$1:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
      #245 REF_invokeStatic coursier/params/rule/Strict.$anonfun$repr$2:(Lcoursier/util/ModuleMatcher;)Ljava/lang/String;
  ScalaInlineInfo: length = 0xD1 (unknown attribute)
   01 01 00 29 01 9A 01 9B 01 00 63 00 64 01 01 68
   01 69 01 01 7D 01 7E 01 01 77 01 69 01 01 8B 01
   7E 01 01 78 01 69 01 01 90 01 7E 01 01 79 01 69
   01 01 95 01 7E 01 00 C1 00 C2 01 00 F0 00 C2 01
   00 86 01 C0 01 00 86 01 C7 01 00 86 01 C5 01 00
   86 01 C3 01 00 86 01 10 01 01 2E 01 2F 01 00 4F
   00 50 01 01 32 01 2F 01 00 21 00 40 01 01 38 01
   39 01 00 24 00 48 01 00 1E 00 40 01 00 22 00 48
   01 01 7B 01 7C 01 01 51 01 39 01 01 52 01 53 01
   01 5D 01 5E 01 01 50 00 AE 01 00 AD 00 AE 01 00
   25 00 48 01 01 18 00 AE 01 00 97 01 64 01 00 97
   00 98 01 01 44 01 45 01 01 13 00 39 01 01 16 01
   15 01 01 0F 00 39 01 01 14 01 15 01 01 17 01 15
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
