Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/util/Traverse$TraverseOps.class
  Last modified May 29, 2022; size 7222 bytes
  SHA-256 checksum dbd30f377c80ff25d5bf7d75be7653c9307e9e35afc7eac8473d746e17f53c10
  Compiled from "Traverse.scala"
public class coursier.util.Traverse$TraverseOps<T extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/util/Traverse$TraverseOps
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 10, attributes: 6
Constant pool:
    #1 = Utf8               coursier/util/Traverse$TraverseOps
    #2 = Class              #1            // coursier/util/Traverse$TraverseOps
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               Traverse.scala
    #7 = Utf8               coursier/util/Traverse
    #8 = Class              #7            // coursier/util/Traverse
    #9 = Utf8               TraverseOps
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               scala/util/Either$LeftProjection
   #16 = Class              #15           // scala/util/Either$LeftProjection
   #17 = Utf8               scala/util/Either
   #18 = Class              #17           // scala/util/Either
   #19 = Utf8               LeftProjection
   #20 = Utf8               seq
   #21 = Utf8               Lscala/collection/immutable/Seq;
   #22 = Utf8               Lscala/collection/immutable/Seq<TT;>;
   #23 = Utf8               ()Lscala/collection/immutable/Seq;
   #24 = Utf8               ()Lscala/collection/immutable/Seq<TT;>;
   #25 = NameAndType        #20:#21       // seq:Lscala/collection/immutable/Seq;
   #26 = Fieldref           #2.#25        // coursier/util/Traverse$TraverseOps.seq:Lscala/collection/immutable/Seq;
   #27 = Utf8               this
   #28 = Utf8               Lcoursier/util/Traverse$TraverseOps;
   #29 = Utf8               eitherTraverse
   #30 = Utf8               (Lscala/Function1;)Lscala/util/Either;
   #31 = Utf8               <L:Ljava/lang/Object;R:Ljava/lang/Object;>(Lscala/Function1<TT;Lscala/util/Either<TL;TR;>;>;)Lscala/util/Either<TL;Lscala/collection/immutable/Seq<TR;>;>;
   #32 = Utf8               f
   #33 = NameAndType        #20:#23       // seq:()Lscala/collection/immutable/Seq;
   #34 = Methodref          #2.#33        // coursier/util/Traverse$TraverseOps.seq:()Lscala/collection/immutable/Seq;
   #35 = Utf8               scala/package$
   #36 = Class              #35           // scala/package$
   #37 = Utf8               MODULE$
   #38 = Utf8               Lscala/package$;
   #39 = NameAndType        #37:#38       // MODULE$:Lscala/package$;
   #40 = Fieldref           #36.#39       // scala/package$.MODULE$:Lscala/package$;
   #41 = Utf8               Right
   #42 = Utf8               ()Lscala/util/Right$;
   #43 = NameAndType        #41:#42       // Right:()Lscala/util/Right$;
   #44 = Methodref          #36.#43       // scala/package$.Right:()Lscala/util/Right$;
   #45 = Utf8               scala/collection/mutable/ListBuffer
   #46 = Class              #45           // scala/collection/mutable/ListBuffer
   #47 = Utf8               <init>
   #48 = Utf8               ()V
   #49 = NameAndType        #47:#48       // "<init>":()V
   #50 = Methodref          #46.#49       // scala/collection/mutable/ListBuffer."<init>":()V
   #51 = Utf8               scala/util/Right$
   #52 = Class              #51           // scala/util/Right$
   #53 = Utf8               apply
   #54 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
   #55 = NameAndType        #53:#54       // apply:(Ljava/lang/Object;)Lscala/util/Right;
   #56 = Methodref          #52.#55       // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
   #57 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #58 = MethodType         #57           //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #59 = Utf8               $anonfun$eitherTraverse$1
   #60 = Utf8               (Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
   #61 = NameAndType        #59:#60       // $anonfun$eitherTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
   #62 = Methodref          #2.#61        // coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
   #63 = MethodHandle       6:#62         // REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
   #64 = Utf8               (Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
   #65 = MethodType         #64           //  (Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
   #66 = Integer            5
   #67 = Integer            1
   #68 = Utf8               java/lang/invoke/LambdaMetafactory
   #69 = Class              #68           // java/lang/invoke/LambdaMetafactory
   #70 = Utf8               altMetafactory
   #71 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #72 = NameAndType        #70:#71       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #73 = Methodref          #69.#72       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #74 = MethodHandle       6:#73         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #75 = Utf8               (Lscala/Function1;)Lscala/Function2;
   #76 = NameAndType        #53:#75       // apply:(Lscala/Function1;)Lscala/Function2;
   #77 = InvokeDynamic      #0:#76        // #0:apply:(Lscala/Function1;)Lscala/Function2;
   #78 = Utf8               scala/collection/immutable/Seq
   #79 = Class              #78           // scala/collection/immutable/Seq
   #80 = Utf8               foldLeft
   #81 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #82 = NameAndType        #80:#81       // foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #83 = InterfaceMethodref #79.#82       // scala/collection/immutable/Seq.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #84 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #85 = MethodType         #84           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #86 = Utf8               $anonfun$eitherTraverse$2
   #87 = Utf8               (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
   #88 = NameAndType        #86:#87       // $anonfun$eitherTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
   #89 = Methodref          #2.#88        // coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
   #90 = MethodHandle       6:#89         // REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
   #91 = MethodType         #87           //  (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
   #92 = Utf8               ()Lscala/Function1;
   #93 = NameAndType        #53:#92       // apply:()Lscala/Function1;
   #94 = InvokeDynamic      #1:#93        // #1:apply:()Lscala/Function1;
   #95 = Utf8               map
   #96 = NameAndType        #95:#30       // map:(Lscala/Function1;)Lscala/util/Either;
   #97 = Methodref          #18.#96       // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
   #98 = Utf8               Lscala/Function1;
   #99 = Utf8               validationNelTraverse
  #100 = Utf8               (Lscala/Function1;)Lcoursier/util/ValidationNel;
  #101 = Utf8               <L:Ljava/lang/Object;R:Ljava/lang/Object;>(Lscala/Function1<TT;Lcoursier/util/ValidationNel<TL;TR;>;>;)Lcoursier/util/ValidationNel<TL;Lscala/collection/immutable/Seq<TR;>;>;
  #102 = Utf8               $anonfun$validationNelTraverse$1
  #103 = NameAndType        #102:#60      // $anonfun$validationNelTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
  #104 = Methodref          #2.#103       // coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
  #105 = MethodHandle       6:#104        // REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
  #106 = InvokeDynamic      #2:#76        // #2:apply:(Lscala/Function1;)Lscala/Function2;
  #107 = Utf8               left
  #108 = Utf8               ()Lscala/util/Either$LeftProjection;
  #109 = NameAndType        #107:#108     // left:()Lscala/util/Either$LeftProjection;
  #110 = Methodref          #18.#109      // scala/util/Either.left:()Lscala/util/Either$LeftProjection;
  #111 = Utf8               $anonfun$validationNelTraverse$2
  #112 = Utf8               (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
  #113 = NameAndType        #111:#112     // $anonfun$validationNelTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
  #114 = Methodref          #2.#113       // coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
  #115 = MethodHandle       6:#114        // REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
  #116 = MethodType         #112          //  (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
  #117 = InvokeDynamic      #3:#93        // #3:apply:()Lscala/Function1;
  #118 = Methodref          #16.#96       // scala/util/Either$LeftProjection.map:(Lscala/Function1;)Lscala/util/Either;
  #119 = Utf8               $anonfun$validationNelTraverse$3
  #120 = NameAndType        #119:#87      // $anonfun$validationNelTraverse$3:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
  #121 = Methodref          #2.#120       // coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$3:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
  #122 = MethodHandle       6:#121        // REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$3:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
  #123 = InvokeDynamic      #4:#93        // #4:apply:()Lscala/Function1;
  #124 = Utf8               coursier/util/ValidationNel
  #125 = Class              #124          // coursier/util/ValidationNel
  #126 = Utf8               (Lscala/util/Either;)V
  #127 = NameAndType        #47:#126      // "<init>":(Lscala/util/Either;)V
  #128 = Methodref          #125.#127     // coursier/util/ValidationNel."<init>":(Lscala/util/Either;)V
  #129 = Utf8               e
  #130 = Utf8               Lscala/util/Either;
  #131 = Utf8               f$1
  #132 = Utf8               x0$1
  #133 = Utf8               x1$1
  #134 = Utf8               scala/Tuple2
  #135 = Class              #134          // scala/Tuple2
  #136 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #137 = NameAndType        #47:#136      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #138 = Methodref          #135.#137     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #139 = Utf8               _1
  #140 = Utf8               ()Ljava/lang/Object;
  #141 = NameAndType        #139:#140     // _1:()Ljava/lang/Object;
  #142 = Methodref          #135.#141     // scala/Tuple2._1:()Ljava/lang/Object;
  #143 = Utf8               scala/util/Left
  #144 = Class              #143          // scala/util/Left
  #145 = Utf8               scala/Function1
  #146 = Class              #145          // scala/Function1
  #147 = Utf8               _2
  #148 = NameAndType        #147:#140     // _2:()Ljava/lang/Object;
  #149 = Methodref          #135.#148     // scala/Tuple2._2:()Ljava/lang/Object;
  #150 = Utf8               scala/util/Right
  #151 = Class              #150          // scala/util/Right
  #152 = Utf8               value
  #153 = NameAndType        #152:#140     // value:()Ljava/lang/Object;
  #154 = Methodref          #151.#153     // scala/util/Right.value:()Ljava/lang/Object;
  #155 = NameAndType        #53:#84       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #156 = InterfaceMethodref #146.#155     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #157 = Methodref          #144.#153     // scala/util/Left.value:()Ljava/lang/Object;
  #158 = Utf8               Left
  #159 = Utf8               ()Lscala/util/Left$;
  #160 = NameAndType        #158:#159     // Left:()Lscala/util/Left$;
  #161 = Methodref          #36.#160      // scala/package$.Left:()Lscala/util/Left$;
  #162 = Utf8               scala/util/Left$
  #163 = Class              #162          // scala/util/Left$
  #164 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #165 = NameAndType        #53:#164      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #166 = Methodref          #163.#165     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #167 = Utf8               $plus$eq
  #168 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #169 = NameAndType        #167:#168     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #170 = Methodref          #46.#169      // scala/collection/mutable/ListBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #171 = Utf8               scala/MatchError
  #172 = Class              #171          // scala/MatchError
  #173 = Utf8               (Ljava/lang/Object;)V
  #174 = NameAndType        #47:#173      // "<init>":(Ljava/lang/Object;)V
  #175 = Methodref          #172.#174     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #176 = Utf8               l
  #177 = Utf8               Ljava/lang/Object;
  #178 = Utf8               r
  #179 = Utf8               b
  #180 = Utf8               Lscala/collection/mutable/ListBuffer;
  #181 = Utf8               elem
  #182 = Utf8               x$1
  #183 = Utf8               result
  #184 = Utf8               ()Lscala/collection/immutable/List;
  #185 = NameAndType        #183:#184     // result:()Lscala/collection/immutable/List;
  #186 = Methodref          #46.#185      // scala/collection/mutable/ListBuffer.result:()Lscala/collection/immutable/List;
  #187 = Utf8               f$2
  #188 = Utf8               either
  #189 = Utf8               ()Lscala/util/Either;
  #190 = NameAndType        #188:#189     // either:()Lscala/util/Either;
  #191 = Methodref          #125.#190     // coursier/util/ValidationNel.either:()Lscala/util/Either;
  #192 = Utf8               scala/collection/immutable/$colon$colon
  #193 = Class              #192          // scala/collection/immutable/$colon$colon
  #194 = Utf8               $plus$plus$eq
  #195 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #196 = NameAndType        #194:#195     // $plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #197 = Methodref          #46.#196      // scala/collection/mutable/ListBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
  #198 = Utf8               l0
  #199 = Utf8               Lscala/collection/immutable/$colon$colon;
  #200 = Utf8               scala/collection/immutable/Nil$
  #201 = Class              #200          // scala/collection/immutable/Nil$
  #202 = Utf8               Lscala/collection/immutable/Nil$;
  #203 = NameAndType        #37:#202      // MODULE$:Lscala/collection/immutable/Nil$;
  #204 = Fieldref           #201.#203     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #205 = Utf8               equals
  #206 = Utf8               (Ljava/lang/Object;)Z
  #207 = NameAndType        #205:#206     // equals:(Ljava/lang/Object;)Z
  #208 = Methodref          #5.#207       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #209 = Utf8               scala/sys/package$
  #210 = Class              #209          // scala/sys/package$
  #211 = Utf8               Lscala/sys/package$;
  #212 = NameAndType        #37:#211      // MODULE$:Lscala/sys/package$;
  #213 = Fieldref           #210.#212     // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #214 = Utf8               Can\'t happen
  #215 = String             #214          // Can\'t happen
  #216 = Utf8               error
  #217 = Utf8               (Ljava/lang/String;)Lscala/runtime/Nothing$;
  #218 = NameAndType        #216:#217     // error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #219 = Methodref          #210.#218     // scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
  #220 = Utf8               scala/collection/immutable/List
  #221 = Class              #220          // scala/collection/immutable/List
  #222 = Utf8               head
  #223 = NameAndType        #222:#140     // head:()Ljava/lang/Object;
  #224 = Methodref          #193.#223     // scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
  #225 = Utf8               next$access$1
  #226 = NameAndType        #225:#184     // next$access$1:()Lscala/collection/immutable/List;
  #227 = Methodref          #193.#226     // scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
  #228 = Utf8               $colon$colon
  #229 = Utf8               ()Lscala/collection/immutable/$colon$colon$;
  #230 = NameAndType        #228:#229     // $colon$colon:()Lscala/collection/immutable/$colon$colon$;
  #231 = Methodref          #36.#230      // scala/package$.$colon$colon:()Lscala/collection/immutable/$colon$colon$;
  #232 = Utf8               scala/collection/immutable/$colon$colon$
  #233 = Class              #232          // scala/collection/immutable/$colon$colon$
  #234 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)Lscala/collection/immutable/$colon$colon;
  #235 = NameAndType        #53:#234      // apply:(Ljava/lang/Object;Lscala/collection/immutable/List;)Lscala/collection/immutable/$colon$colon;
  #236 = Methodref          #233.#235     // scala/collection/immutable/$colon$colon$.apply:(Ljava/lang/Object;Lscala/collection/immutable/List;)Lscala/collection/immutable/$colon$colon;
  #237 = Utf8               h
  #238 = Utf8               t
  #239 = Utf8               Lscala/collection/immutable/List;
  #240 = Utf8               x$2
  #241 = Utf8               (Lscala/collection/immutable/Seq;)V
  #242 = Utf8               (Lscala/collection/immutable/Seq<TT;>;)V
  #243 = Methodref          #5.#49        // java/lang/Object."<init>":()V
  #244 = Utf8               $deserializeLambda$
  #245 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #246 = Utf8               scala/runtime/LambdaDeserialize
  #247 = Class              #246          // scala/runtime/LambdaDeserialize
  #248 = Utf8               bootstrap
  #249 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #250 = NameAndType        #248:#249     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #251 = Methodref          #247.#250     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #252 = MethodHandle       6:#251        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #253 = Utf8               lambdaDeserialize
  #254 = NameAndType        #253:#245     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #255 = InvokeDynamic      #5:#254       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #256 = Utf8               Signature
  #257 = Utf8               Code
  #258 = Utf8               LineNumberTable
  #259 = Utf8               LocalVariableTable
  #260 = Utf8               MethodParameters
  #261 = Utf8               StackMapTable
  #262 = Utf8               InnerClasses
  #263 = Utf8               SourceFile
  #264 = Utf8               BootstrapMethods
  #265 = Utf8               ScalaInlineInfo
  #266 = Utf8               Scala
{
  private final scala.collection.immutable.Seq<T> seq;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #22                          // Lscala/collection/immutable/Seq<TT;>;

  public scala.collection.immutable.Seq<T> seq();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #26                 // Field seq:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/Traverse$TraverseOps;
    Signature: #24                          // ()Lscala/collection/immutable/Seq<TT;>;

  public <L extends java.lang.Object, R extends java.lang.Object> scala.util.Either<L, scala.collection.immutable.Seq<R>> eitherTraverse(scala.Function1<T, scala.util.Either<L, R>>);
    descriptor: (Lscala/Function1;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #34                 // Method seq:()Lscala/collection/immutable/Seq;
         4: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
         7: invokevirtual #44                 // Method scala/package$.Right:()Lscala/util/Right$;
        10: new           #46                 // class scala/collection/mutable/ListBuffer
        13: dup
        14: invokespecial #50                 // Method scala/collection/mutable/ListBuffer."<init>":()V
        17: invokevirtual #56                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        20: aload_1
        21: invokedynamic #77,  0             // InvokeDynamic #0:apply:(Lscala/Function1;)Lscala/Function2;
        26: invokeinterface #83,  3           // InterfaceMethod scala/collection/immutable/Seq.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        31: checkcast     #18                 // class scala/util/Either
        34: invokedynamic #94,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
        39: invokevirtual #97                 // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        42: areturn
      LineNumberTable:
        line 11: 0
        line 12: 4
        line 20: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/util/Traverse$TraverseOps;
            0      43     1     f   Lscala/Function1;
    Signature: #31                          // <L:Ljava/lang/Object;R:Ljava/lang/Object;>(Lscala/Function1<TT;Lscala/util/Either<TL;TR;>;>;)Lscala/util/Either<TL;Lscala/collection/immutable/Seq<TR;>;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public <L extends java.lang.Object, R extends java.lang.Object> coursier.util.ValidationNel<L, scala.collection.immutable.Seq<R>> validationNelTraverse(scala.Function1<T, coursier.util.ValidationNel<L, R>>);
    descriptor: (Lscala/Function1;)Lcoursier/util/ValidationNel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #34                 // Method seq:()Lscala/collection/immutable/Seq;
         4: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
         7: invokevirtual #44                 // Method scala/package$.Right:()Lscala/util/Right$;
        10: new           #46                 // class scala/collection/mutable/ListBuffer
        13: dup
        14: invokespecial #50                 // Method scala/collection/mutable/ListBuffer."<init>":()V
        17: invokevirtual #56                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        20: aload_1
        21: invokedynamic #106,  0            // InvokeDynamic #2:apply:(Lscala/Function1;)Lscala/Function2;
        26: invokeinterface #83,  3           // InterfaceMethod scala/collection/immutable/Seq.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        31: checkcast     #18                 // class scala/util/Either
        34: invokevirtual #110                // Method scala/util/Either.left:()Lscala/util/Either$LeftProjection;
        37: invokedynamic #117,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        42: invokevirtual #118                // Method scala/util/Either$LeftProjection.map:(Lscala/Function1;)Lscala/util/Either;
        45: invokedynamic #123,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        50: invokevirtual #97                 // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        53: astore_2
        54: new           #125                // class coursier/util/ValidationNel
        57: dup
        58: aload_2
        59: invokespecial #128                // Method coursier/util/ValidationNel."<init>":(Lscala/util/Either;)V
        62: areturn
      LineNumberTable:
        line 24: 0
        line 25: 4
        line 38: 37
        line 44: 45
        line 46: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           54       8     2     e   Lscala/util/Either;
            0      63     0  this   Lcoursier/util/Traverse$TraverseOps;
            0      63     1     f   Lscala/Function1;
    Signature: #101                         // <L:Ljava/lang/Object;R:Ljava/lang/Object;>(Lscala/Function1<TT;Lcoursier/util/ValidationNel<TL;TR;>;>;)Lcoursier/util/ValidationNel<TL;Lscala/collection/immutable/Seq<TR;>;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static final scala.util.Either $anonfun$eitherTraverse$1(scala.Function1, scala.util.Either, java.lang.Object);
    descriptor: (Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=17, args_size=3
         0: new           #135                // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #138                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore        5
        11: aload         5
        13: ifnull        50
        16: aload         5
        18: invokevirtual #142                // Method scala/Tuple2._1:()Ljava/lang/Object;
        21: checkcast     #18                 // class scala/util/Either
        24: astore        6
        26: aload         6
        28: instanceof    #144                // class scala/util/Left
        31: ifeq          47
        34: aload         6
        36: checkcast     #144                // class scala/util/Left
        39: astore        7
        41: aload         7
        43: astore_3
        44: goto          232
        47: goto          53
        50: goto          53
        53: aload         5
        55: ifnull        219
        58: aload         5
        60: invokevirtual #142                // Method scala/Tuple2._1:()Ljava/lang/Object;
        63: checkcast     #18                 // class scala/util/Either
        66: astore        8
        68: aload         5
        70: invokevirtual #149                // Method scala/Tuple2._2:()Ljava/lang/Object;
        73: astore        9
        75: aload         8
        77: instanceof    #151                // class scala/util/Right
        80: ifeq          216
        83: aload         8
        85: checkcast     #151                // class scala/util/Right
        88: astore        10
        90: aload         10
        92: invokevirtual #154                // Method scala/util/Right.value:()Ljava/lang/Object;
        95: checkcast     #46                 // class scala/collection/mutable/ListBuffer
        98: astore        11
       100: aload_0
       101: aload         9
       103: invokeinterface #156,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       108: checkcast     #18                 // class scala/util/Either
       111: astore        12
       113: aload         12
       115: instanceof    #144                // class scala/util/Left
       118: ifeq          151
       121: aload         12
       123: checkcast     #144                // class scala/util/Left
       126: astore        13
       128: aload         13
       130: invokevirtual #157                // Method scala/util/Left.value:()Ljava/lang/Object;
       133: astore        14
       135: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       138: invokevirtual #161                // Method scala/package$.Left:()Lscala/util/Left$;
       141: aload         14
       143: invokevirtual #166                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       146: astore        4
       148: goto          210
       151: goto          154
       154: aload         12
       156: instanceof    #151                // class scala/util/Right
       159: ifeq          197
       162: aload         12
       164: checkcast     #151                // class scala/util/Right
       167: astore        15
       169: aload         15
       171: invokevirtual #154                // Method scala/util/Right.value:()Ljava/lang/Object;
       174: astore        16
       176: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       179: invokevirtual #44                 // Method scala/package$.Right:()Lscala/util/Right$;
       182: aload         11
       184: aload         16
       186: invokevirtual #170                // Method scala/collection/mutable/ListBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       189: invokevirtual #56                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       192: astore        4
       194: goto          210
       197: goto          200
       200: new           #172                // class scala/MatchError
       203: dup
       204: aload         12
       206: invokespecial #175                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       209: athrow
       210: aload         4
       212: astore_3
       213: goto          232
       216: goto          222
       219: goto          222
       222: new           #172                // class scala/MatchError
       225: dup
       226: aload         5
       228: invokespecial #175                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       231: athrow
       232: aload_3
       233: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, class scala/Tuple2, class scala/util/Either ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 97
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, class scala/Tuple2, top, top, class scala/util/Either, class java/lang/Object, class scala/util/Right, class scala/collection/mutable/ListBuffer, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 42 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, class scala/util/Either, class scala/Tuple2, top, top, class scala/util/Either, class java/lang/Object, class scala/util/Right, class scala/collection/mutable/ListBuffer, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, class scala/Tuple2, top, top, class scala/util/Either, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, class scala/util/Either, top, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 12: 0
        line 13: 11
        line 14: 53
        line 15: 100
        line 16: 113
        line 17: 154
        line 15: 200
        line 14: 216
        line 12: 222
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      24     6     l   Lscala/util/Either;
          135      16    14     l   Ljava/lang/Object;
          176      21    16     r   Ljava/lang/Object;
          100     116    11     b   Lscala/collection/mutable/ListBuffer;
           75     144     9  elem   Ljava/lang/Object;
            0     234     0   f$1   Lscala/Function1;
            0     234     1  x0$1   Lscala/util/Either;
            0     234     2  x1$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x0$1                           final
      x1$1                           final

  public static final scala.collection.immutable.List $anonfun$eitherTraverse$2(scala.collection.mutable.ListBuffer);
    descriptor: (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method scala/collection/mutable/ListBuffer.result:()Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 20: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lscala/collection/mutable/ListBuffer;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.util.Either $anonfun$validationNelTraverse$1(scala.Function1, scala.util.Either, java.lang.Object);
    descriptor: (Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=23, args_size=3
         0: new           #135                // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #138                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore        6
        11: aload         6
        13: ifnull        160
        16: aload         6
        18: invokevirtual #142                // Method scala/Tuple2._1:()Ljava/lang/Object;
        21: checkcast     #18                 // class scala/util/Either
        24: astore        7
        26: aload         6
        28: invokevirtual #149                // Method scala/Tuple2._2:()Ljava/lang/Object;
        31: astore        8
        33: aload         7
        35: instanceof    #144                // class scala/util/Left
        38: ifeq          157
        41: aload         7
        43: checkcast     #144                // class scala/util/Left
        46: astore        9
        48: aload         9
        50: invokevirtual #157                // Method scala/util/Left.value:()Ljava/lang/Object;
        53: checkcast     #46                 // class scala/collection/mutable/ListBuffer
        56: astore        10
        58: aload_0
        59: aload         8
        61: invokeinterface #156,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        66: checkcast     #125                // class coursier/util/ValidationNel
        69: invokevirtual #191                // Method coursier/util/ValidationNel.either:()Lscala/util/Either;
        72: astore        11
        74: aload         11
        76: instanceof    #144                // class scala/util/Left
        79: ifeq          120
        82: aload         11
        84: checkcast     #144                // class scala/util/Left
        87: astore        12
        89: aload         12
        91: invokevirtual #157                // Method scala/util/Left.value:()Ljava/lang/Object;
        94: checkcast     #193                // class scala/collection/immutable/$colon$colon
        97: astore        13
        99: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       102: invokevirtual #161                // Method scala/package$.Left:()Lscala/util/Left$;
       105: aload         10
       107: aload         13
       109: invokevirtual #197                // Method scala/collection/mutable/ListBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
       112: invokevirtual #166                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       115: astore        5
       117: goto          151
       120: goto          123
       123: aload         11
       125: instanceof    #151                // class scala/util/Right
       128: ifeq          138
       131: aload         9
       133: astore        5
       135: goto          151
       138: goto          141
       141: new           #172                // class scala/MatchError
       144: dup
       145: aload         11
       147: invokespecial #175                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       150: athrow
       151: aload         5
       153: astore_3
       154: goto          358
       157: goto          163
       160: goto          163
       163: aload         6
       165: ifnull        345
       168: aload         6
       170: invokevirtual #142                // Method scala/Tuple2._1:()Ljava/lang/Object;
       173: checkcast     #18                 // class scala/util/Either
       176: astore        14
       178: aload         6
       180: invokevirtual #149                // Method scala/Tuple2._2:()Ljava/lang/Object;
       183: astore        15
       185: aload         14
       187: instanceof    #151                // class scala/util/Right
       190: ifeq          342
       193: aload         14
       195: checkcast     #151                // class scala/util/Right
       198: astore        16
       200: aload         16
       202: invokevirtual #154                // Method scala/util/Right.value:()Ljava/lang/Object;
       205: checkcast     #46                 // class scala/collection/mutable/ListBuffer
       208: astore        17
       210: aload_0
       211: aload         15
       213: invokeinterface #156,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       218: checkcast     #125                // class coursier/util/ValidationNel
       221: invokevirtual #191                // Method coursier/util/ValidationNel.either:()Lscala/util/Either;
       224: astore        18
       226: aload         18
       228: instanceof    #144                // class scala/util/Left
       231: ifeq          277
       234: aload         18
       236: checkcast     #144                // class scala/util/Left
       239: astore        19
       241: aload         19
       243: invokevirtual #157                // Method scala/util/Left.value:()Ljava/lang/Object;
       246: checkcast     #193                // class scala/collection/immutable/$colon$colon
       249: astore        20
       251: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       254: invokevirtual #161                // Method scala/package$.Left:()Lscala/util/Left$;
       257: new           #46                 // class scala/collection/mutable/ListBuffer
       260: dup
       261: invokespecial #50                 // Method scala/collection/mutable/ListBuffer."<init>":()V
       264: aload         20
       266: invokevirtual #197                // Method scala/collection/mutable/ListBuffer.$plus$plus$eq:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
       269: invokevirtual #166                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       272: astore        4
       274: goto          336
       277: goto          280
       280: aload         18
       282: instanceof    #151                // class scala/util/Right
       285: ifeq          323
       288: aload         18
       290: checkcast     #151                // class scala/util/Right
       293: astore        21
       295: aload         21
       297: invokevirtual #154                // Method scala/util/Right.value:()Ljava/lang/Object;
       300: astore        22
       302: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       305: invokevirtual #44                 // Method scala/package$.Right:()Lscala/util/Right$;
       308: aload         17
       310: aload         22
       312: invokevirtual #170                // Method scala/collection/mutable/ListBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       315: invokevirtual #56                 // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       318: astore        4
       320: goto          336
       323: goto          326
       326: new           #172                // class scala/MatchError
       329: dup
       330: aload         18
       332: invokespecial #175                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       335: athrow
       336: aload         4
       338: astore_3
       339: goto          358
       342: goto          348
       345: goto          348
       348: new           #172                // class scala/MatchError
       351: dup
       352: aload         6
       354: invokespecial #175                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       357: athrow
       358: aload_3
       359: areturn
      StackMapTable: number_of_entries = 17
        frame_type = 255 /* full_frame */
          offset_delta = 120
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, top, class scala/Tuple2, class scala/util/Either, class java/lang/Object, class scala/util/Left, class scala/collection/mutable/ListBuffer, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 14 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, class scala/util/Left, class scala/Tuple2, class scala/util/Either, class java/lang/Object, class scala/util/Left, class scala/collection/mutable/ListBuffer, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, top, class scala/Tuple2, class scala/util/Either, class java/lang/Object ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 113
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, class scala/util/Either, class java/lang/Object, class scala/util/Right, class scala/collection/mutable/ListBuffer, class scala/util/Either ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 42 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, class scala/util/Either, top, class scala/Tuple2, top, top, top, top, top, top, top, class scala/util/Either, class java/lang/Object, class scala/util/Right, class scala/collection/mutable/ListBuffer, class scala/util/Either ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, top, class scala/Tuple2, top, top, top, top, top, top, top, class scala/util/Either, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Function1, class scala/util/Either, class java/lang/Object, class scala/util/Either, top, top, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 25: 0
        line 26: 11
        line 27: 58
        line 28: 74
        line 29: 123
        line 27: 141
        line 26: 157
        line 31: 163
        line 32: 210
        line 33: 226
        line 34: 280
        line 32: 326
        line 31: 342
        line 25: 348
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           99      21    13    l0   Lscala/collection/immutable/$colon$colon;
           58      99    10     b   Lscala/collection/mutable/ListBuffer;
           26     134     7     l   Lscala/util/Either;
           33     127     8  elem   Ljava/lang/Object;
          251      26    20     l   Lscala/collection/immutable/$colon$colon;
          302      21    22     r   Ljava/lang/Object;
          210     132    17     b   Lscala/collection/mutable/ListBuffer;
          185     160    15  elem   Ljava/lang/Object;
            0     360     0   f$2   Lscala/Function1;
            0     360     1  x0$1   Lscala/util/Either;
            0     360     2  x1$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      f$2                            final
      x0$1                           final
      x1$1                           final

  public static final scala.collection.immutable.$colon$colon $anonfun$validationNelTraverse$2(scala.collection.mutable.ListBuffer);
    descriptor: (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=6, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method scala/collection/mutable/ListBuffer.result:()Lscala/collection/immutable/List;
         4: astore_2
         5: getstatic     #204                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         8: aload_2
         9: invokevirtual #208                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: ifeq          24
        15: getstatic     #213                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        18: ldc           #215                // String Can\'t happen
        20: invokevirtual #219                // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
        23: athrow
        24: goto          27
        27: aload_2
        28: instanceof    #193                // class scala/collection/immutable/$colon$colon
        31: ifeq          68
        34: aload_2
        35: checkcast     #193                // class scala/collection/immutable/$colon$colon
        38: astore_3
        39: aload_3
        40: invokevirtual #224                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
        43: astore        4
        45: aload_3
        46: invokevirtual #227                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
        49: astore        5
        51: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        54: invokevirtual #231                // Method scala/package$.$colon$colon:()Lscala/collection/immutable/$colon$colon$;
        57: aload         4
        59: aload         5
        61: invokevirtual #236                // Method scala/collection/immutable/$colon$colon$.apply:(Ljava/lang/Object;Lscala/collection/immutable/List;)Lscala/collection/immutable/$colon$colon;
        64: astore_1
        65: goto          80
        68: goto          71
        71: new           #172                // class scala/MatchError
        74: dup
        75: aload_2
        76: invokespecial #175                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        79: athrow
        80: aload_1
        81: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 24
          locals = [ top, class scala/collection/immutable/List ]
        frame_type = 2 /* same */
        frame_type = 40 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/mutable/ListBuffer, class scala/collection/immutable/$colon$colon, class scala/collection/immutable/List, class scala/collection/immutable/$colon$colon, class java/lang/Object, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 39: 0
        line 40: 5
        line 41: 27
        line 39: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           45      23     4     h   Ljava/lang/Object;
           51      17     5     t   Lscala/collection/immutable/List;
            0      82     0     b   Lscala/collection/mutable/ListBuffer;
    MethodParameters:
      Name                           Flags
      b                              final

  public static final scala.collection.immutable.List $anonfun$validationNelTraverse$3(scala.collection.mutable.ListBuffer);
    descriptor: (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #186                // Method scala/collection/mutable/ListBuffer.result:()Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$2   Lscala/collection/mutable/ListBuffer;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public coursier.util.Traverse$TraverseOps(scala.collection.immutable.Seq<T>);
    descriptor: (Lscala/collection/immutable/Seq;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #26                 // Field seq:Lscala/collection/immutable/Seq;
         5: aload_0
         6: invokespecial #243                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 7: 0
        line 51: 5
        line 7: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/util/Traverse$TraverseOps;
            0      10     1   seq   Lscala/collection/immutable/Seq;
    Signature: #242                         // (Lscala/collection/immutable/Seq<TT;>;)V
    MethodParameters:
      Name                           Flags
      seq                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #255,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #9= #2 of #8;             // TraverseOps=class coursier/util/Traverse$TraverseOps of class coursier/util/Traverse
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #19= #16 of #18;    // LeftProjection=class scala/util/Either$LeftProjection of class scala/util/Either
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "Traverse.scala"
BootstrapMethods:
  0: #74 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #58 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #63 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
      #65 (Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
      #66 5
      #67 1
      #65 (Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
  1: #74 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #85 (Ljava/lang/Object;)Ljava/lang/Object;
      #90 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
      #91 (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
      #66 5
      #67 1
      #91 (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
  2: #74 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #58 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #105 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
      #65 (Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
      #66 5
      #67 1
      #65 (Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
  3: #74 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #85 (Ljava/lang/Object;)Ljava/lang/Object;
      #115 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
      #116 (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
      #66 5
      #67 1
      #116 (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
  4: #74 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #85 (Ljava/lang/Object;)Ljava/lang/Object;
      #122 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$3:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
      #91 (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
      #66 5
      #67 1
      #91 (Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
  5: #252 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #63 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
      #90 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$eitherTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
      #105 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$1:(Lscala/Function1;Lscala/util/Either;Ljava/lang/Object;)Lscala/util/Either;
      #115 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$2:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/$colon$colon;
      #122 REF_invokeStatic coursier/util/Traverse$TraverseOps.$anonfun$validationNelTraverse$3:(Lscala/collection/mutable/ListBuffer;)Lscala/collection/immutable/List;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 3B 00 3C 01 00 56 00 57 01 00 66
   00 3C 01 00 6F 00 70 01 00 77 00 57 01 00 2F 00
   F1 00 00 1D 00 1E 00 00 14 00 17 00 00 63 00 64
   00
  Scala: length = 0x0 (unknown attribute)

