Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/cache/FileCache$.class
  Last modified May 29, 2022; size 12519 bytes
  SHA-256 checksum f801df30521ec62d95a1ae270a0219704d020f3bf2363c592a9c7ec1e39757cf
  Compiled from "FileCache.scala"
public final class coursier.cache.FileCache$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/FileCache$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 19, attributes: 5
Constant pool:
    #1 = Utf8               coursier/cache/FileCache$
    #2 = Class              #1            // coursier/cache/FileCache$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               FileCache.scala
    #8 = Utf8               coursier/cache/FileCache$$anon$1
    #9 = Class              #8            // coursier/cache/FileCache$$anon$1
   #10 = Utf8               coursier/cache/internal/FileUtil$UpdateDigest
   #11 = Class              #10           // coursier/cache/internal/FileUtil$UpdateDigest
   #12 = Utf8               coursier/cache/internal/FileUtil
   #13 = Class              #12           // coursier/cache/internal/FileUtil
   #14 = Utf8               UpdateDigest
   #15 = Utf8               coursier/cache/internal/FileUtil$WithContent
   #16 = Class              #15           // coursier/cache/internal/FileUtil$WithContent
   #17 = Utf8               WithContent
   #18 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #19 = Class              #18           // java/lang/invoke/MethodHandles$Lookup
   #20 = Utf8               java/lang/invoke/MethodHandles
   #21 = Class              #20           // java/lang/invoke/MethodHandles
   #22 = Utf8               Lookup
   #23 = Utf8               MODULE$
   #24 = Utf8               Lcoursier/cache/FileCache$;
   #25 = Utf8               <clinit>
   #26 = Utf8               ()V
   #27 = Utf8               <init>
   #28 = NameAndType        #27:#26       // "<init>":()V
   #29 = Methodref          #2.#28        // coursier/cache/FileCache$."<init>":()V
   #30 = NameAndType        #23:#24       // MODULE$:Lcoursier/cache/FileCache$;
   #31 = Fieldref           #2.#30        // coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
   #32 = Utf8               localFile0
   #33 = Utf8               (Ljava/lang/String;Ljava/io/File;Lscala/Option;Z)Ljava/io/File;
   #34 = Utf8               (Ljava/lang/String;Ljava/io/File;Lscala/Option<Ljava/lang/String;>;Z)Ljava/io/File;
   #35 = Utf8               url
   #36 = Utf8               cache
   #37 = Utf8               user
   #38 = Utf8               localArtifactsShouldBeCached
   #39 = Utf8               scala/$less$colon$less$
   #40 = Class              #39           // scala/$less$colon$less$
   #41 = Utf8               Lscala/$less$colon$less$;
   #42 = NameAndType        #23:#41       // MODULE$:Lscala/$less$colon$less$;
   #43 = Fieldref           #40.#42       // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
   #44 = Utf8               refl
   #45 = Utf8               ()Lscala/$eq$colon$eq;
   #46 = NameAndType        #44:#45       // refl:()Lscala/$eq$colon$eq;
   #47 = Methodref          #40.#46       // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
   #48 = Utf8               scala/Option
   #49 = Class              #48           // scala/Option
   #50 = Utf8               orNull
   #51 = Utf8               (Lscala/$less$colon$less;)Ljava/lang/Object;
   #52 = NameAndType        #50:#51       // orNull:(Lscala/$less$colon$less;)Ljava/lang/Object;
   #53 = Methodref          #49.#52       // scala/Option.orNull:(Lscala/$less$colon$less;)Ljava/lang/Object;
   #54 = Utf8               java/lang/String
   #55 = Class              #54           // java/lang/String
   #56 = Utf8               coursier/paths/CachePath
   #57 = Class              #56           // coursier/paths/CachePath
   #58 = Utf8               localFile
   #59 = Utf8               (Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Z)Ljava/io/File;
   #60 = NameAndType        #58:#59       // localFile:(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Z)Ljava/io/File;
   #61 = Methodref          #57.#60       // coursier/paths/CachePath.localFile:(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Z)Ljava/io/File;
   #62 = Utf8               this
   #63 = Utf8               Ljava/lang/String;
   #64 = Utf8               Ljava/io/File;
   #65 = Utf8               Lscala/Option;
   #66 = Utf8               Z
   #67 = Utf8               auxiliaryFilePrefix
   #68 = Utf8               (Ljava/io/File;)Ljava/lang/String;
   #69 = Utf8               file
   #70 = Utf8               java/lang/StringBuilder
   #71 = Class              #70           // java/lang/StringBuilder
   #72 = Integer            3
   #73 = Utf8               (I)V
   #74 = NameAndType        #27:#73       // "<init>":(I)V
   #75 = Methodref          #71.#74       // java/lang/StringBuilder."<init>":(I)V
   #76 = Utf8               .
   #77 = String             #76           // .
   #78 = Utf8               append
   #79 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #80 = NameAndType        #78:#79       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #81 = Methodref          #71.#80       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #82 = Utf8               java/io/File
   #83 = Class              #82           // java/io/File
   #84 = Utf8               getName
   #85 = Utf8               ()Ljava/lang/String;
   #86 = NameAndType        #84:#85       // getName:()Ljava/lang/String;
   #87 = Methodref          #83.#86       // java/io/File.getName:()Ljava/lang/String;
   #88 = Utf8               __
   #89 = String             #88           // __
   #90 = Utf8               toString
   #91 = NameAndType        #90:#85       // toString:()Ljava/lang/String;
   #92 = Methodref          #71.#91       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #93 = Utf8               clearAuxiliaryFiles
   #94 = Utf8               (Ljava/io/File;)V
   #95 = NameAndType        #67:#68       // auxiliaryFilePrefix:(Ljava/io/File;)Ljava/lang/String;
   #96 = Methodref          #2.#95        // coursier/cache/FileCache$.auxiliaryFilePrefix:(Ljava/io/File;)Ljava/lang/String;
   #97 = Utf8               (Ljava/lang/String;)V
   #98 = NameAndType        #27:#97       // "<init>":(Ljava/lang/String;)V
   #99 = Methodref          #9.#98        // coursier/cache/FileCache$$anon$1."<init>":(Ljava/lang/String;)V
  #100 = Utf8               scala/collection/ArrayOps$
  #101 = Class              #100          // scala/collection/ArrayOps$
  #102 = Utf8               Lscala/collection/ArrayOps$;
  #103 = NameAndType        #23:#102      // MODULE$:Lscala/collection/ArrayOps$;
  #104 = Fieldref           #101.#103     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #105 = Utf8               scala/Predef$
  #106 = Class              #105          // scala/Predef$
  #107 = Utf8               Lscala/Predef$;
  #108 = NameAndType        #23:#107      // MODULE$:Lscala/Predef$;
  #109 = Fieldref           #106.#108     // scala/Predef$.MODULE$:Lscala/Predef$;
  #110 = Utf8               getParentFile
  #111 = Utf8               ()Ljava/io/File;
  #112 = NameAndType        #110:#111     // getParentFile:()Ljava/io/File;
  #113 = Methodref          #83.#112      // java/io/File.getParentFile:()Ljava/io/File;
  #114 = Utf8               listFiles
  #115 = Utf8               (Ljava/io/FilenameFilter;)[Ljava/io/File;
  #116 = NameAndType        #114:#115     // listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;
  #117 = Methodref          #83.#116      // java/io/File.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;
  #118 = Utf8               [Ljava/lang/Object;
  #119 = Class              #118          // "[Ljava/lang/Object;"
  #120 = Utf8               refArrayOps
  #121 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #122 = NameAndType        #120:#121     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #123 = Methodref          #106.#122     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #124 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #125 = MethodType         #124          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #126 = Utf8               $anonfun$clearAuxiliaryFiles$1$adapted
  #127 = Utf8               (Ljava/io/File;)Ljava/lang/Object;
  #128 = NameAndType        #126:#127     // $anonfun$clearAuxiliaryFiles$1$adapted:(Ljava/io/File;)Ljava/lang/Object;
  #129 = Methodref          #2.#128       // coursier/cache/FileCache$.$anonfun$clearAuxiliaryFiles$1$adapted:(Ljava/io/File;)Ljava/lang/Object;
  #130 = MethodHandle       6:#129        // REF_invokeStatic coursier/cache/FileCache$.$anonfun$clearAuxiliaryFiles$1$adapted:(Ljava/io/File;)Ljava/lang/Object;
  #131 = MethodType         #127          //  (Ljava/io/File;)Ljava/lang/Object;
  #132 = Integer            5
  #133 = Integer            1
  #134 = Utf8               java/lang/invoke/LambdaMetafactory
  #135 = Class              #134          // java/lang/invoke/LambdaMetafactory
  #136 = Utf8               altMetafactory
  #137 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = NameAndType        #136:#137     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #139 = Methodref          #135.#138     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #140 = MethodHandle       6:#139        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #141 = Utf8               apply
  #142 = Utf8               ()Lscala/Function1;
  #143 = NameAndType        #141:#142     // apply:()Lscala/Function1;
  #144 = InvokeDynamic      #0:#143       // #0:apply:()Lscala/Function1;
  #145 = Utf8               foreach$extension
  #146 = Utf8               (Ljava/lang/Object;Lscala/Function1;)V
  #147 = NameAndType        #145:#146     // foreach$extension:(Ljava/lang/Object;Lscala/Function1;)V
  #148 = Methodref          #101.#147     // scala/collection/ArrayOps$.foreach$extension:(Ljava/lang/Object;Lscala/Function1;)V
  #149 = Utf8               prefix
  #150 = Utf8               filter
  #151 = Utf8               Ljava/io/FilenameFilter;
  #152 = Utf8               auxiliaryFile
  #153 = Utf8               (Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
  #154 = Utf8               key
  #155 = Utf8               scala/collection/StringOps$
  #156 = Class              #155          // scala/collection/StringOps$
  #157 = Utf8               Lscala/collection/StringOps$;
  #158 = NameAndType        #23:#157      // MODULE$:Lscala/collection/StringOps$;
  #159 = Fieldref           #156.#158     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #160 = Utf8               java/util/Locale
  #161 = Class              #160          // java/util/Locale
  #162 = Utf8               ROOT
  #163 = Utf8               Ljava/util/Locale;
  #164 = NameAndType        #162:#163     // ROOT:Ljava/util/Locale;
  #165 = Fieldref           #161.#164     // java/util/Locale.ROOT:Ljava/util/Locale;
  #166 = Utf8               toLowerCase
  #167 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #168 = NameAndType        #166:#167     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #169 = Methodref          #55.#168      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #170 = Utf8               augmentString
  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #172 = NameAndType        #170:#171     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #173 = Methodref          #106.#172     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #174 = Utf8               $anonfun$auxiliaryFile$1$adapted
  #175 = NameAndType        #174:#124     // $anonfun$auxiliaryFile$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #176 = Methodref          #2.#175       // coursier/cache/FileCache$.$anonfun$auxiliaryFile$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #177 = MethodHandle       6:#176        // REF_invokeStatic coursier/cache/FileCache$.$anonfun$auxiliaryFile$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #178 = InvokeDynamic      #1:#143       // #1:apply:()Lscala/Function1;
  #179 = Utf8               filter$extension
  #180 = Utf8               (Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #181 = NameAndType        #179:#180     // filter$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #182 = Methodref          #156.#181     // scala/collection/StringOps$.filter$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #183 = Integer            0
  #184 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
  #185 = NameAndType        #27:#184      // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #186 = Methodref          #83.#185      // java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
  #187 = Utf8               key0
  #188 = Utf8               (Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #189 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
  #190 = Utf8               S
  #191 = Utf8               coursier/cache/CacheDefaults$
  #192 = Class              #191          // coursier/cache/CacheDefaults$
  #193 = Utf8               Lcoursier/cache/CacheDefaults$;
  #194 = NameAndType        #23:#193      // MODULE$:Lcoursier/cache/CacheDefaults$;
  #195 = Fieldref           #192.#194     // coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
  #196 = Utf8               location
  #197 = NameAndType        #196:#111     // location:()Ljava/io/File;
  #198 = Methodref          #192.#197     // coursier/cache/CacheDefaults$.location:()Ljava/io/File;
  #199 = Utf8               (Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #200 = NameAndType        #141:#199     // apply:(Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #201 = Methodref          #2.#200       // coursier/cache/FileCache$.apply:(Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #202 = Utf8               Lcoursier/util/Sync;
  #203 = Utf8               coursier$cache$FileCache$$persistedDigest
  #204 = Utf8               (Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Ljava/math/BigInteger;
  #205 = Utf8               sumType
  #206 = Utf8               java/nio/file/FileAlreadyExistsException
  #207 = Class              #206          // java/nio/file/FileAlreadyExistsException
  #208 = Utf8               java/nio/file/NoSuchFileException
  #209 = Class              #208          // java/nio/file/NoSuchFileException
  #210 = Utf8               getCanonicalPath
  #211 = NameAndType        #210:#85      // getCanonicalPath:()Ljava/lang/String;
  #212 = Methodref          #83.#211      // java/io/File.getCanonicalPath:()Ljava/lang/String;
  #213 = Utf8               /
  #214 = String             #213          // /
  #215 = Utf8               stripSuffix$extension
  #216 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #217 = NameAndType        #215:#216     // stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #218 = Methodref          #156.#217     // scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #219 = Utf8               startsWith
  #220 = Utf8               (Ljava/lang/String;)Z
  #221 = NameAndType        #219:#220     // startsWith:(Ljava/lang/String;)Z
  #222 = Methodref          #55.#221      // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #223 = Utf8               computeDigest
  #224 = Utf8               (Ljava/lang/String;Ljava/io/File;)[B
  #225 = NameAndType        #223:#224     // computeDigest:(Ljava/lang/String;Ljava/io/File;)[B
  #226 = Methodref          #2.#225       // coursier/cache/FileCache$.computeDigest:(Ljava/lang/String;Ljava/io/File;)[B
  #227 = Integer            9
  #228 = Utf8               .computed
  #229 = String             #228          // .computed
  #230 = NameAndType        #152:#153     // auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
  #231 = Methodref          #2.#230       // coursier/cache/FileCache$.auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
  #232 = Utf8               toPath
  #233 = Utf8               ()Ljava/nio/file/Path;
  #234 = NameAndType        #232:#233     // toPath:()Ljava/nio/file/Path;
  #235 = Methodref          #83.#234      // java/io/File.toPath:()Ljava/nio/file/Path;
  #236 = Utf8               java/nio/file/Files
  #237 = Class              #236          // java/nio/file/Files
  #238 = Utf8               readAllBytes
  #239 = Utf8               (Ljava/nio/file/Path;)[B
  #240 = NameAndType        #238:#239     // readAllBytes:(Ljava/nio/file/Path;)[B
  #241 = Methodref          #237.#240     // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
  #242 = Utf8               java/nio/file/Path
  #243 = Class              #242          // java/nio/file/Path
  #244 = Utf8               .tmp
  #245 = String             #244          // .tmp
  #246 = Utf8               createTempFile
  #247 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
  #248 = NameAndType        #246:#247     // createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
  #249 = Methodref          #83.#248      // java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
  #250 = Utf8               java/nio/file/OpenOption
  #251 = Class              #250          // java/nio/file/OpenOption
  #252 = Utf8               write
  #253 = Utf8               (Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
  #254 = NameAndType        #252:#253     // write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
  #255 = Methodref          #237.#254     // java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
  #256 = Utf8               java/nio/file/CopyOption
  #257 = Class              #256          // java/nio/file/CopyOption
  #258 = Utf8               java/nio/file/StandardCopyOption
  #259 = Class              #258          // java/nio/file/StandardCopyOption
  #260 = Utf8               ATOMIC_MOVE
  #261 = Utf8               Ljava/nio/file/StandardCopyOption;
  #262 = NameAndType        #260:#261     // ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
  #263 = Fieldref           #259.#262     // java/nio/file/StandardCopyOption.ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
  #264 = Utf8               move
  #265 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #266 = NameAndType        #264:#265     // move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #267 = Methodref          #237.#266     // java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #268 = Utf8               [B
  #269 = Class              #268          // "[B"
  #270 = Utf8               scala/runtime/BoxedUnit
  #271 = Class              #270          // scala/runtime/BoxedUnit
  #272 = Utf8               UNIT
  #273 = Utf8               Lscala/runtime/BoxedUnit;
  #274 = NameAndType        #272:#273     // UNIT:Lscala/runtime/BoxedUnit;
  #275 = Fieldref           #271.#274     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #276 = Utf8               java/lang/Throwable
  #277 = Class              #276          // java/lang/Throwable
  #278 = Utf8               deleteIfExists
  #279 = Utf8               (Ljava/nio/file/Path;)Z
  #280 = NameAndType        #278:#279     // deleteIfExists:(Ljava/nio/file/Path;)Z
  #281 = Methodref          #237.#280     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
  #282 = Utf8               java/math/BigInteger
  #283 = Class              #282          // java/math/BigInteger
  #284 = Utf8               (I[B)V
  #285 = NameAndType        #27:#284      // "<init>":(I[B)V
  #286 = Methodref          #283.#285     // java/math/BigInteger."<init>":(I[B)V
  #287 = Utf8               location0
  #288 = Utf8               bytes
  #289 = Utf8               tmpFile
  #290 = Utf8               Ljava/nio/file/Path;
  #291 = Utf8               cacheFile
  #292 = Utf8               cacheFilePath
  #293 = Utf8               isInCache
  #294 = Utf8               digested
  #295 = Utf8               java/security/MessageDigest
  #296 = Class              #295          // java/security/MessageDigest
  #297 = Utf8               getInstance
  #298 = Utf8               (Ljava/lang/String;)Ljava/security/MessageDigest;
  #299 = NameAndType        #297:#298     // getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
  #300 = Methodref          #296.#299     // java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
  #301 = Utf8               java/io/FileInputStream
  #302 = Class              #301          // java/io/FileInputStream
  #303 = NameAndType        #27:#94       // "<init>":(Ljava/io/File;)V
  #304 = Methodref          #302.#303     // java/io/FileInputStream."<init>":(Ljava/io/File;)V
  #305 = Utf8               coursier/cache/internal/FileUtil$
  #306 = Class              #305          // coursier/cache/internal/FileUtil$
  #307 = Utf8               Lcoursier/cache/internal/FileUtil$;
  #308 = NameAndType        #23:#307      // MODULE$:Lcoursier/cache/internal/FileUtil$;
  #309 = Fieldref           #306.#308     // coursier/cache/internal/FileUtil$.MODULE$:Lcoursier/cache/internal/FileUtil$;
  #310 = Utf8               (Ljava/security/MessageDigest;)V
  #311 = NameAndType        #27:#310      // "<init>":(Ljava/security/MessageDigest;)V
  #312 = Methodref          #11.#311      // coursier/cache/internal/FileUtil$UpdateDigest."<init>":(Ljava/security/MessageDigest;)V
  #313 = Utf8               withContent$default$3
  #314 = Utf8               ()I
  #315 = NameAndType        #313:#314     // withContent$default$3:()I
  #316 = Methodref          #306.#315     // coursier/cache/internal/FileUtil$.withContent$default$3:()I
  #317 = Utf8               withContent
  #318 = Utf8               (Ljava/io/InputStream;Lcoursier/cache/internal/FileUtil$WithContent;I)V
  #319 = NameAndType        #317:#318     // withContent:(Ljava/io/InputStream;Lcoursier/cache/internal/FileUtil$WithContent;I)V
  #320 = Methodref          #306.#319     // coursier/cache/internal/FileUtil$.withContent:(Ljava/io/InputStream;Lcoursier/cache/internal/FileUtil$WithContent;I)V
  #321 = Utf8               close
  #322 = NameAndType        #321:#26      // close:()V
  #323 = Methodref          #302.#322     // java/io/FileInputStream.close:()V
  #324 = Utf8               digest
  #325 = Utf8               ()[B
  #326 = NameAndType        #324:#325     // digest:()[B
  #327 = Methodref          #296.#326     // java/security/MessageDigest.digest:()[B
  #328 = Utf8               md
  #329 = Utf8               Ljava/security/MessageDigest;
  #330 = Utf8               is
  #331 = Utf8               Ljava/io/FileInputStream;
  #332 = Utf8               <F:Ljava/lang/Object;>(Ljava/io/File;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
  #333 = Utf8               sync
  #334 = Utf8               coursier/cache/FileCache
  #335 = Class              #334          // coursier/cache/FileCache
  #336 = Utf8               cachePolicies
  #337 = Utf8               ()Lscala/collection/immutable/Seq;
  #338 = NameAndType        #336:#337     // cachePolicies:()Lscala/collection/immutable/Seq;
  #339 = Methodref          #192.#338     // coursier/cache/CacheDefaults$.cachePolicies:()Lscala/collection/immutable/Seq;
  #340 = Utf8               checksums
  #341 = NameAndType        #340:#337     // checksums:()Lscala/collection/immutable/Seq;
  #342 = Methodref          #192.#341     // coursier/cache/CacheDefaults$.checksums:()Lscala/collection/immutable/Seq;
  #343 = Utf8               credentials
  #344 = NameAndType        #343:#337     // credentials:()Lscala/collection/immutable/Seq;
  #345 = Methodref          #192.#344     // coursier/cache/CacheDefaults$.credentials:()Lscala/collection/immutable/Seq;
  #346 = Utf8               coursier/cache/CacheLogger$
  #347 = Class              #346          // coursier/cache/CacheLogger$
  #348 = Utf8               Lcoursier/cache/CacheLogger$;
  #349 = NameAndType        #23:#348      // MODULE$:Lcoursier/cache/CacheLogger$;
  #350 = Fieldref           #347.#349     // coursier/cache/CacheLogger$.MODULE$:Lcoursier/cache/CacheLogger$;
  #351 = Utf8               nop
  #352 = Utf8               ()Lcoursier/cache/CacheLogger;
  #353 = NameAndType        #351:#352     // nop:()Lcoursier/cache/CacheLogger;
  #354 = Methodref          #347.#353     // coursier/cache/CacheLogger$.nop:()Lcoursier/cache/CacheLogger;
  #355 = Utf8               pool
  #356 = Utf8               ()Ljava/util/concurrent/ExecutorService;
  #357 = NameAndType        #355:#356     // pool:()Ljava/util/concurrent/ExecutorService;
  #358 = Methodref          #192.#357     // coursier/cache/CacheDefaults$.pool:()Ljava/util/concurrent/ExecutorService;
  #359 = Utf8               ttl
  #360 = Utf8               ()Lscala/Option;
  #361 = NameAndType        #359:#360     // ttl:()Lscala/Option;
  #362 = Methodref          #192.#361     // coursier/cache/CacheDefaults$.ttl:()Lscala/Option;
  #363 = Utf8               maxRedirections
  #364 = NameAndType        #363:#360     // maxRedirections:()Lscala/Option;
  #365 = Methodref          #192.#364     // coursier/cache/CacheDefaults$.maxRedirections:()Lscala/Option;
  #366 = Utf8               sslRetryCount
  #367 = NameAndType        #366:#314     // sslRetryCount:()I
  #368 = Methodref          #192.#367     // coursier/cache/CacheDefaults$.sslRetryCount:()I
  #369 = Utf8               scala/None$
  #370 = Class              #369          // scala/None$
  #371 = Utf8               Lscala/None$;
  #372 = NameAndType        #23:#371      // MODULE$:Lscala/None$;
  #373 = Fieldref           #370.#372     // scala/None$.MODULE$:Lscala/None$;
  #374 = Utf8               defaultRetryCount
  #375 = NameAndType        #374:#314     // defaultRetryCount:()I
  #376 = Methodref          #192.#375     // coursier/cache/CacheDefaults$.defaultRetryCount:()I
  #377 = Utf8               bufferSize
  #378 = NameAndType        #377:#314     // bufferSize:()I
  #379 = Methodref          #192.#378     // coursier/cache/CacheDefaults$.bufferSize:()I
  #380 = Utf8               scala/collection/immutable/Nil$
  #381 = Class              #380          // scala/collection/immutable/Nil$
  #382 = Utf8               Lscala/collection/immutable/Nil$;
  #383 = NameAndType        #23:#382      // MODULE$:Lscala/collection/immutable/Nil$;
  #384 = Fieldref           #381.#383     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #385 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
  #386 = NameAndType        #27:#385      // "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
  #387 = Methodref          #335.#386     // coursier/cache/FileCache."<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
  #388 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #389 = Utf8               <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
  #390 = Utf8               logger
  #391 = Utf8               followHttpToHttpsRedirections
  #392 = Utf8               followHttpsToHttpRedirections
  #393 = Utf8               sslRetry
  #394 = Utf8               sslSocketFactoryOpt
  #395 = Utf8               hostnameVerifierOpt
  #396 = Utf8               retry
  #397 = Utf8               Lscala/collection/immutable/Seq;
  #398 = Utf8               Lcoursier/cache/CacheLogger;
  #399 = Utf8               Ljava/util/concurrent/ExecutorService;
  #400 = Utf8               I
  #401 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
  #402 = Utf8               <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
  #403 = Utf8               classLoaders
  #404 = Utf8               apply$default$1
  #405 = Utf8               ()Lcoursier/util/Sync;
  #406 = Utf8               <F:Ljava/lang/Object;>()Lcoursier/util/Sync<Lcoursier/util/Task;>;
  #407 = Utf8               coursier/util/Task$
  #408 = Class              #407          // coursier/util/Task$
  #409 = Utf8               Lcoursier/util/Task$;
  #410 = NameAndType        #23:#409      // MODULE$:Lcoursier/util/Task$;
  #411 = Fieldref           #408.#410     // coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
  #412 = NameAndType        #333:#405     // sync:()Lcoursier/util/Sync;
  #413 = Methodref          #408.#412     // coursier/util/Task$.sync:()Lcoursier/util/Sync;
  #414 = Utf8               writeReplace
  #415 = Utf8               ()Ljava/lang/Object;
  #416 = Utf8               scala/runtime/ModuleSerializationProxy
  #417 = Class              #416          // scala/runtime/ModuleSerializationProxy
  #418 = Utf8               (Ljava/lang/Class;)V
  #419 = NameAndType        #27:#418      // "<init>":(Ljava/lang/Class;)V
  #420 = Methodref          #417.#419     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #421 = Utf8               $anonfun$clearAuxiliaryFiles$1
  #422 = Utf8               (Ljava/io/File;)Z
  #423 = Utf8               f
  #424 = Utf8               delete
  #425 = Utf8               ()Z
  #426 = NameAndType        #424:#425     // delete:()Z
  #427 = Methodref          #83.#426      // java/io/File.delete:()Z
  #428 = Utf8               $anonfun$auxiliaryFile$1
  #429 = Utf8               (C)Z
  #430 = Utf8               x$21
  #431 = Utf8               C
  #432 = Methodref          #4.#28        // java/lang/Object."<init>":()V
  #433 = NameAndType        #421:#422     // $anonfun$clearAuxiliaryFiles$1:(Ljava/io/File;)Z
  #434 = Methodref          #2.#433       // coursier/cache/FileCache$.$anonfun$clearAuxiliaryFiles$1:(Ljava/io/File;)Z
  #435 = Utf8               scala/runtime/BoxesRunTime
  #436 = Class              #435          // scala/runtime/BoxesRunTime
  #437 = Utf8               boxToBoolean
  #438 = Utf8               (Z)Ljava/lang/Boolean;
  #439 = NameAndType        #437:#438     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #440 = Methodref          #436.#439     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #441 = Utf8               unboxToChar
  #442 = Utf8               (Ljava/lang/Object;)C
  #443 = NameAndType        #441:#442     // unboxToChar:(Ljava/lang/Object;)C
  #444 = Methodref          #436.#443     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #445 = NameAndType        #428:#429     // $anonfun$auxiliaryFile$1:(C)Z
  #446 = Methodref          #2.#445       // coursier/cache/FileCache$.$anonfun$auxiliaryFile$1:(C)Z
  #447 = Utf8               Ljava/lang/Object;
  #448 = Utf8               $deserializeLambda$
  #449 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #450 = Utf8               scala/runtime/LambdaDeserialize
  #451 = Class              #450          // scala/runtime/LambdaDeserialize
  #452 = Utf8               bootstrap
  #453 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #454 = NameAndType        #452:#453     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #455 = Methodref          #451.#454     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #456 = MethodHandle       6:#455        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #457 = Utf8               lambdaDeserialize
  #458 = NameAndType        #457:#449     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #459 = InvokeDynamic      #2:#458       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #460 = Utf8               Code
  #461 = Utf8               LineNumberTable
  #462 = Utf8               LocalVariableTable
  #463 = Utf8               Signature
  #464 = Utf8               MethodParameters
  #465 = Utf8               StackMapTable
  #466 = Utf8               InnerClasses
  #467 = Utf8               SourceFile
  #468 = Utf8               BootstrapMethods
  #469 = Utf8               ScalaInlineInfo
  #470 = Utf8               Scala
{
  public static final coursier.cache.FileCache$ MODULE$;
    descriptor: Lcoursier/cache/FileCache$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/cache/FileCache$
         3: dup
         4: invokespecial #29                 // Method "<init>":()V
         7: putstatic     #31                 // Field MODULE$:Lcoursier/cache/FileCache$;
        10: return
      LineNumberTable:
        line 23: 0

  public java.io.File localFile0(java.lang.String, java.io.File, scala.Option<java.lang.String>, boolean);
    descriptor: (Ljava/lang/String;Ljava/io/File;Lscala/Option;Z)Ljava/io/File;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=5
         0: aload_1
         1: aload_2
         2: aload_3
         3: getstatic     #43                 // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
         6: invokevirtual #47                 // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
         9: invokevirtual #53                 // Method scala/Option.orNull:(Lscala/$less$colon$less;)Ljava/lang/Object;
        12: checkcast     #55                 // class java/lang/String
        15: iload         4
        17: invokestatic  #61                 // Method coursier/paths/CachePath.localFile:(Ljava/lang/String;Ljava/io/File;Ljava/lang/String;Z)Ljava/io/File;
        20: areturn
      LineNumberTable:
        line 370: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lcoursier/cache/FileCache$;
            0      21     1   url   Ljava/lang/String;
            0      21     2 cache   Ljava/io/File;
            0      21     3  user   Lscala/Option;
            0      21     4 localArtifactsShouldBeCached   Z
    Signature: #34                          // (Ljava/lang/String;Ljava/io/File;Lscala/Option<Ljava/lang/String;>;Z)Ljava/io/File;
    MethodParameters:
      Name                           Flags
      url                            final
      cache                          final
      user                           final
      localArtifactsShouldBeCached   final

  private java.lang.String auxiliaryFilePrefix(java.io.File);
    descriptor: (Ljava/io/File;)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=2
         0: new           #71                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #72                 // int 3
         6: invokespecial #75                 // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #77                 // String .
        11: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_1
        15: invokevirtual #87                 // Method java/io/File.getName:()Ljava/lang/String;
        18: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: ldc           #89                 // String __
        23: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 373: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lcoursier/cache/FileCache$;
            0      30     1  file   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      file                           final

  public void clearAuxiliaryFiles(java.io.File);
    descriptor: (Ljava/io/File;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #96                 // Method auxiliaryFilePrefix:(Ljava/io/File;)Ljava/lang/String;
         5: astore_2
         6: new           #9                  // class coursier/cache/FileCache$$anon$1
         9: dup
        10: aload_2
        11: invokespecial #99                 // Method coursier/cache/FileCache$$anon$1."<init>":(Ljava/lang/String;)V
        14: astore_3
        15: getstatic     #104                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        18: getstatic     #109                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        21: aload_1
        22: invokevirtual #113                // Method java/io/File.getParentFile:()Ljava/io/File;
        25: aload_3
        26: invokevirtual #117                // Method java/io/File.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;
        29: checkcast     #119                // class "[Ljava/lang/Object;"
        32: invokevirtual #123                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        35: invokedynamic #144,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        40: invokevirtual #148                // Method scala/collection/ArrayOps$.foreach$extension:(Ljava/lang/Object;Lscala/Function1;)V
        43: return
      LineNumberTable:
        line 376: 0
        line 377: 6
        line 381: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      37     2 prefix   Ljava/lang/String;
           15      28     3 filter   Ljava/io/FilenameFilter;
            0      44     0  this   Lcoursier/cache/FileCache$;
            0      44     1  file   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      file                           final

  public java.io.File auxiliaryFile(java.io.File, java.lang.String);
    descriptor: (Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=3
         0: getstatic     #159                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #109                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_2
         7: getstatic     #165                // Field java/util/Locale.ROOT:Ljava/util/Locale;
        10: invokevirtual #169                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
        13: invokevirtual #173                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        16: invokedynamic #178,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        21: invokevirtual #182                // Method scala/collection/StringOps$.filter$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
        24: astore_3
        25: new           #83                 // class java/io/File
        28: dup
        29: aload_1
        30: invokevirtual #113                // Method java/io/File.getParentFile:()Ljava/io/File;
        33: new           #71                 // class java/lang/StringBuilder
        36: dup
        37: ldc           #183                // int 0
        39: invokespecial #75                 // Method java/lang/StringBuilder."<init>":(I)V
        42: aload_0
        43: aload_1
        44: invokespecial #96                 // Method auxiliaryFilePrefix:(Ljava/io/File;)Ljava/lang/String;
        47: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: aload_3
        51: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        57: invokespecial #186                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
        60: areturn
      LineNumberTable:
        line 386: 0
        line 387: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      35     3  key0   Ljava/lang/String;
            0      61     0  this   Lcoursier/cache/FileCache$;
            0      61     1  file   Ljava/io/File;
            0      61     2   key   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      file                           final
      key                            final

  public <F extends java.lang.Object> coursier.cache.FileCache<F> apply(coursier.util.Sync<F>);
    descriptor: (Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
         4: invokevirtual #198                // Method coursier/cache/CacheDefaults$.location:()Ljava/io/File;
         7: aload_1
         8: invokevirtual #201                // Method apply:(Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
        11: areturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/cache/FileCache$;
            0      12     1     S   Lcoursier/util/Sync;
    Signature: #189                         // <F:Ljava/lang/Object;>(Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      S                              final

  public java.math.BigInteger coursier$cache$FileCache$$persistedDigest(java.io.File, java.lang.String, java.io.File);
    descriptor: (Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Ljava/math/BigInteger;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=12, args_size=4
         0: new           #71                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #133                // int 1
         6: invokespecial #75                 // Method java/lang/StringBuilder."<init>":(I)V
         9: getstatic     #159                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        12: getstatic     #109                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: aload_1
        16: invokevirtual #212                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
        19: invokevirtual #173                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        22: ldc           #214                // String /
        24: invokevirtual #218                // Method scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        27: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: ldc           #214                // String /
        32: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        38: astore        5
        40: aload_3
        41: invokevirtual #212                // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
        44: aload         5
        46: invokevirtual #222                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        49: istore        4
        51: iload         4
        53: ifne          65
        56: aload_0
        57: aload_2
        58: aload_3
        59: invokespecial #226                // Method computeDigest:(Ljava/lang/String;Ljava/io/File;)[B
        62: goto          202
        65: aload_0
        66: aload_3
        67: new           #71                 // class java/lang/StringBuilder
        70: dup
        71: ldc           #227                // int 9
        73: invokespecial #75                 // Method java/lang/StringBuilder."<init>":(I)V
        76: aload_2
        77: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        80: ldc           #229                // String .computed
        82: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        85: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        88: invokevirtual #231                // Method auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
        91: astore        7
        93: aload         7
        95: invokevirtual #235                // Method java/io/File.toPath:()Ljava/nio/file/Path;
        98: astore        8
       100: aload         8
       102: invokestatic  #241                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
       105: goto          202
       108: pop
       109: aload_0
       110: aload_2
       111: aload_3
       112: invokespecial #226                // Method computeDigest:(Ljava/lang/String;Ljava/io/File;)[B
       115: astore        9
       117: aload         7
       119: invokevirtual #87                 // Method java/io/File.getName:()Ljava/lang/String;
       122: ldc           #245                // String .tmp
       124: aload         7
       126: invokevirtual #113                // Method java/io/File.getParentFile:()Ljava/io/File;
       129: invokestatic  #249                // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;
       132: invokevirtual #235                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       135: astore        10
       137: aload         10
       139: aload         9
       141: iconst_0
       142: anewarray     #251                // class java/nio/file/OpenOption
       145: invokestatic  #255                // Method java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;
       148: pop
       149: aload         10
       151: aload         8
       153: iconst_1
       154: anewarray     #257                // class java/nio/file/CopyOption
       157: dup
       158: iconst_0
       159: getstatic     #263                // Field java/nio/file/StandardCopyOption.ATOMIC_MOVE:Ljava/nio/file/StandardCopyOption;
       162: aastore
       163: invokestatic  #267                // Method java/nio/file/Files.move:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
       166: goto          176
       169: pop
       170: getstatic     #275                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       173: goto          176
       176: goto          190
       179: astore        11
       181: aload         10
       183: invokestatic  #281                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
       186: pop
       187: aload         11
       189: athrow
       190: aload         10
       192: invokestatic  #281                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
       195: pop
       196: pop
       197: aload         9
       199: goto          202
       202: astore        6
       204: new           #283                // class java/math/BigInteger
       207: dup
       208: iconst_1
       209: aload         6
       211: invokespecial #286                // Method java/math/BigInteger."<init>":(I[B)V
       214: areturn
      Exception table:
         from    to  target type
           149   166   169   Class java/nio/file/FileAlreadyExistsException
           137   179   179   any
           100   105   108   Class java/nio/file/NoSuchFileException
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 65
          locals = [ int, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 42
          locals = [ class coursier/cache/FileCache$, class java/io/File, class java/lang/String, class java/io/File, int, class java/lang/String, top, class java/io/File, class java/nio/file/Path ]
          stack = [ class java/nio/file/NoSuchFileException ]
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class coursier/cache/FileCache$, class java/io/File, class java/lang/String, class java/io/File, int, class java/lang/String, top, class java/io/File, class java/nio/file/Path, class "[B", class java/nio/file/Path ]
          stack = [ class java/nio/file/FileAlreadyExistsException ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class coursier/cache/FileCache$, class java/io/File, class java/lang/String, class java/io/File, int, class java/lang/String ]
          stack = [ class "[B" ]
      LineNumberTable:
        line 402: 0
        line 403: 40
        line 407: 51
        line 409: 65
        line 410: 93
        line 412: 100
        line 414: 109
        line 417: 117
        line 419: 137
        line 420: 149
        line 423: 170
        line 425: 181
        line 427: 197
        line 431: 204
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40       9     5 location0   Ljava/lang/String;
          117      82     9 bytes   [B
          137      62    10 tmpFile   Ljava/nio/file/Path;
           93     109     7 cacheFile   Ljava/io/File;
          100     102     8 cacheFilePath   Ljava/nio/file/Path;
           51     163     4 isInCache   Z
          204      10     6 digested   [B
            0     215     0  this   Lcoursier/cache/FileCache$;
            0     215     1 location   Ljava/io/File;
            0     215     2 sumType   Ljava/lang/String;
            0     215     3 localFile   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      location                       final
      sumType                        final
      localFile                      final

  private byte[] computeDigest(java.lang.String, java.io.File);
    descriptor: (Ljava/lang/String;Ljava/io/File;)[B
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=6, args_size=3
         0: aload_1
         1: invokestatic  #300                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
         4: astore_3
         5: aconst_null
         6: astore        4
         8: new           #302                // class java/io/FileInputStream
        11: dup
        12: aload_2
        13: invokespecial #304                // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
        16: astore        4
        18: getstatic     #309                // Field coursier/cache/internal/FileUtil$.MODULE$:Lcoursier/cache/internal/FileUtil$;
        21: aload         4
        23: new           #11                 // class coursier/cache/internal/FileUtil$UpdateDigest
        26: dup
        27: aload_3
        28: invokespecial #312                // Method coursier/cache/internal/FileUtil$UpdateDigest."<init>":(Ljava/security/MessageDigest;)V
        31: getstatic     #309                // Field coursier/cache/internal/FileUtil$.MODULE$:Lcoursier/cache/internal/FileUtil$;
        34: invokevirtual #316                // Method coursier/cache/internal/FileUtil$.withContent$default$3:()I
        37: invokevirtual #320                // Method coursier/cache/internal/FileUtil$.withContent:(Ljava/io/InputStream;Lcoursier/cache/internal/FileUtil$WithContent;I)V
        40: goto          53
        43: astore        5
        45: aload         4
        47: invokevirtual #323                // Method java/io/FileInputStream.close:()V
        50: aload         5
        52: athrow
        53: aload         4
        55: invokevirtual #323                // Method java/io/FileInputStream.close:()V
        58: aload_3
        59: invokevirtual #327                // Method java/security/MessageDigest.digest:()[B
        62: areturn
      Exception table:
         from    to  target type
             8    43    43   any
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/cache/FileCache$, class java/lang/String, class java/io/File, class java/security/MessageDigest, class java/io/FileInputStream ]
          stack = [ class java/lang/Throwable ]
        frame_type = 9 /* same */
      LineNumberTable:
        line 435: 0
        line 437: 5
        line 439: 8
        line 440: 18
        line 441: 45
        line 443: 58
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      57     3    md   Ljava/security/MessageDigest;
            8      54     4    is   Ljava/io/FileInputStream;
            0      63     0  this   Lcoursier/cache/FileCache$;
            0      63     1 sumType   Ljava/lang/String;
            0      63     2 localFile   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      sumType                        final
      localFile                      final

  public <F extends java.lang.Object> coursier.cache.FileCache<F> apply(java.io.File, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=3, args_size=3
         0: new           #335                // class coursier/cache/FileCache
         3: dup
         4: aload_1
         5: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
         8: invokevirtual #339                // Method coursier/cache/CacheDefaults$.cachePolicies:()Lscala/collection/immutable/Seq;
        11: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        14: invokevirtual #342                // Method coursier/cache/CacheDefaults$.checksums:()Lscala/collection/immutable/Seq;
        17: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        20: invokevirtual #345                // Method coursier/cache/CacheDefaults$.credentials:()Lscala/collection/immutable/Seq;
        23: getstatic     #350                // Field coursier/cache/CacheLogger$.MODULE$:Lcoursier/cache/CacheLogger$;
        26: invokevirtual #354                // Method coursier/cache/CacheLogger$.nop:()Lcoursier/cache/CacheLogger;
        29: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        32: invokevirtual #358                // Method coursier/cache/CacheDefaults$.pool:()Ljava/util/concurrent/ExecutorService;
        35: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        38: invokevirtual #362                // Method coursier/cache/CacheDefaults$.ttl:()Lscala/Option;
        41: iconst_0
        42: iconst_1
        43: iconst_0
        44: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        47: invokevirtual #365                // Method coursier/cache/CacheDefaults$.maxRedirections:()Lscala/Option;
        50: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        53: invokevirtual #368                // Method coursier/cache/CacheDefaults$.sslRetryCount:()I
        56: getstatic     #373                // Field scala/None$.MODULE$:Lscala/None$;
        59: getstatic     #373                // Field scala/None$.MODULE$:Lscala/None$;
        62: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        65: invokevirtual #376                // Method coursier/cache/CacheDefaults$.defaultRetryCount:()I
        68: getstatic     #195                // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        71: invokevirtual #379                // Method coursier/cache/CacheDefaults$.bufferSize:()I
        74: getstatic     #384                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        77: aload_2
        78: invokespecial #387                // Method coursier/cache/FileCache."<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        81: areturn
      LineNumberTable:
        line 23: 0
        line 25: 5
        line 26: 11
        line 27: 17
        line 28: 23
        line 29: 29
        line 30: 35
        line 31: 41
        line 32: 42
        line 33: 43
        line 34: 44
        line 35: 50
        line 36: 56
        line 37: 59
        line 38: 62
        line 39: 68
        line 41: 74
        line 23: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      82     0  this   Lcoursier/cache/FileCache$;
            0      82     1 location   Ljava/io/File;
            0      82     2  sync   Lcoursier/util/Sync;
    Signature: #332                         // <F:Ljava/lang/Object;>(Ljava/io/File;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final
      sync                           final

  public <F extends java.lang.Object> coursier.cache.FileCache<F> apply(java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, boolean, boolean, boolean, scala.Option<java.lang.Object>, int, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, int, int, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=18, args_size=18
         0: new           #335                // class coursier/cache/FileCache
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: iload         8
        17: iload         9
        19: iload         10
        21: aload         11
        23: iload         12
        25: aload         13
        27: aload         14
        29: iload         15
        31: iload         16
        33: getstatic     #384                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        36: aload         17
        38: invokespecial #387                // Method coursier/cache/FileCache."<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        41: areturn
      LineNumberTable:
        line 23: 0
        line 41: 33
        line 23: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/cache/FileCache$;
            0      42     1 location   Ljava/io/File;
            0      42     2 cachePolicies   Lscala/collection/immutable/Seq;
            0      42     3 checksums   Lscala/collection/immutable/Seq;
            0      42     4 credentials   Lscala/collection/immutable/Seq;
            0      42     5 logger   Lcoursier/cache/CacheLogger;
            0      42     6  pool   Ljava/util/concurrent/ExecutorService;
            0      42     7   ttl   Lscala/Option;
            0      42     8 localArtifactsShouldBeCached   Z
            0      42     9 followHttpToHttpsRedirections   Z
            0      42    10 followHttpsToHttpRedirections   Z
            0      42    11 maxRedirections   Lscala/Option;
            0      42    12 sslRetry   I
            0      42    13 sslSocketFactoryOpt   Lscala/Option;
            0      42    14 hostnameVerifierOpt   Lscala/Option;
            0      42    15 retry   I
            0      42    16 bufferSize   I
            0      42    17  sync   Lcoursier/util/Sync;
    Signature: #389                         // <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final
      cachePolicies                  final
      checksums                      final
      credentials                    final
      logger                         final
      pool                           final
      ttl                            final
      localArtifactsShouldBeCached   final
      followHttpToHttpsRedirections  final
      followHttpsToHttpRedirections  final
      maxRedirections                final
      sslRetry                       final
      sslSocketFactoryOpt            final
      hostnameVerifierOpt            final
      retry                          final
      bufferSize                     final
      sync                           final

  public <F extends java.lang.Object> coursier.cache.FileCache<F> apply(java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, boolean, boolean, boolean, scala.Option<java.lang.Object>, int, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, int, int, scala.collection.immutable.Seq<java.lang.ClassLoader>, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=19, args_size=19
         0: new           #335                // class coursier/cache/FileCache
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: iload         8
        17: iload         9
        19: iload         10
        21: aload         11
        23: iload         12
        25: aload         13
        27: aload         14
        29: iload         15
        31: iload         16
        33: aload         17
        35: aload         18
        37: invokespecial #387                // Method coursier/cache/FileCache."<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        40: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lcoursier/cache/FileCache$;
            0      41     1 location   Ljava/io/File;
            0      41     2 cachePolicies   Lscala/collection/immutable/Seq;
            0      41     3 checksums   Lscala/collection/immutable/Seq;
            0      41     4 credentials   Lscala/collection/immutable/Seq;
            0      41     5 logger   Lcoursier/cache/CacheLogger;
            0      41     6  pool   Ljava/util/concurrent/ExecutorService;
            0      41     7   ttl   Lscala/Option;
            0      41     8 localArtifactsShouldBeCached   Z
            0      41     9 followHttpToHttpsRedirections   Z
            0      41    10 followHttpsToHttpRedirections   Z
            0      41    11 maxRedirections   Lscala/Option;
            0      41    12 sslRetry   I
            0      41    13 sslSocketFactoryOpt   Lscala/Option;
            0      41    14 hostnameVerifierOpt   Lscala/Option;
            0      41    15 retry   I
            0      41    16 bufferSize   I
            0      41    17 classLoaders   Lscala/collection/immutable/Seq;
            0      41    18  sync   Lcoursier/util/Sync;
    Signature: #402                         // <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final
      cachePolicies                  final
      checksums                      final
      credentials                    final
      logger                         final
      pool                           final
      ttl                            final
      localArtifactsShouldBeCached   final
      followHttpToHttpsRedirections  final
      followHttpsToHttpRedirections  final
      maxRedirections                final
      sslRetry                       final
      sslSocketFactoryOpt            final
      hostnameVerifierOpt            final
      retry                          final
      bufferSize                     final
      classLoaders                   final
      sync                           final

  public <F extends java.lang.Object> coursier.util.Sync<coursier.util.Task> apply$default$1();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #411                // Field coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
         3: invokevirtual #413                // Method coursier/util/Task$.sync:()Lcoursier/util/Sync;
         6: areturn
      LineNumberTable:
        line 392: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/cache/FileCache$;
    Signature: #406                         // <F:Ljava/lang/Object;>()Lcoursier/util/Sync<Lcoursier/util/Task;>;

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #417                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/cache/FileCache$
         6: invokespecial #420                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/FileCache$;

  public static final boolean $anonfun$clearAuxiliaryFiles$1(java.io.File);
    descriptor: (Ljava/io/File;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #427                // Method java/io/File.delete:()Z
         4: ireturn
      LineNumberTable:
        line 382: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      f                              final

  public static final boolean $anonfun$auxiliaryFile$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        45
         3: if_icmpeq     10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  x$21   C
    MethodParameters:
      Name                           Flags
      x$21                           final

  private coursier.cache.FileCache$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #432                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 445: 0
        line 23: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache$;

  public static final java.lang.Object $anonfun$clearAuxiliaryFiles$1$adapted(java.io.File);
    descriptor: (Ljava/io/File;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #434                // Method $anonfun$clearAuxiliaryFiles$1:(Ljava/io/File;)Z
         4: invokestatic  #440                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 381: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      f                              final

  public static final java.lang.Object $anonfun$auxiliaryFile$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #444                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #446                // Method $anonfun$auxiliaryFile$1:(C)Z
         7: invokestatic  #440                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 386: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  x$21   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$21                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #459,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public final #9;                        // class coursier/cache/FileCache$$anon$1
  public static #14= #11 of #13;          // UpdateDigest=class coursier/cache/internal/FileUtil$UpdateDigest of class coursier/cache/internal/FileUtil
  public static #17= #16 of #13;          // WithContent=class coursier/cache/internal/FileUtil$WithContent of class coursier/cache/internal/FileUtil
  public static final #22= #19 of #21;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "FileCache.scala"
BootstrapMethods:
  0: #140 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #125 (Ljava/lang/Object;)Ljava/lang/Object;
      #130 REF_invokeStatic coursier/cache/FileCache$.$anonfun$clearAuxiliaryFiles$1$adapted:(Ljava/io/File;)Ljava/lang/Object;
      #131 (Ljava/io/File;)Ljava/lang/Object;
      #132 5
      #133 1
      #131 (Ljava/io/File;)Ljava/lang/Object;
  1: #140 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #125 (Ljava/lang/Object;)Ljava/lang/Object;
      #177 REF_invokeStatic coursier/cache/FileCache$.$anonfun$auxiliaryFile$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #125 (Ljava/lang/Object;)Ljava/lang/Object;
      #133 1
  2: #456 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #177 REF_invokeStatic coursier/cache/FileCache$.$anonfun$auxiliaryFile$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #130 REF_invokeStatic coursier/cache/FileCache$.$anonfun$clearAuxiliaryFiles$1$adapted:(Ljava/io/File;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 01 00 11 01 AC 01 AD 01 00 AE 00 7C 01 01 A5
   01 A6 01 00 7E 00 7F 01 00 1B 00 1A 01 00 8D 00
   BC 01 00 8D 00 C7 01 00 8D 01 84 01 00 8D 01 91
   01 01 94 01 95 01 00 98 00 99 01 00 43 00 44 01
   00 5D 00 5E 01 00 DF 00 E0 01 00 CB 00 CC 01 00
   20 00 21 01 01 9E 01 9F 01
  Scala: length = 0x0 (unknown attribute)

