Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/matchers/dsl/MatcherFactory8Macro.class
  Last modified May 29, 2022; size 8891 bytes
  SHA-256 checksum 7b690a6247104712ec5c4e90245d99b3969012efb1d9285ba4cc4a67a87f6777
  Compiled from "MatcherFactory8.scala"
public class org.scalatest.matchers.dsl.MatcherFactory8Macro<SC extends java.lang.Object, TC1 extends java.lang.Object, TC2 extends java.lang.Object, TC3 extends java.lang.Object, TC4 extends java.lang.Object, TC5 extends java.lang.Object, TC6 extends java.lang.Object, TC7 extends java.lang.Object, TC8 extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/matchers/dsl/MatcherFactory8Macro
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               org/scalatest/matchers/dsl/MatcherFactory8Macro
    #2 = Class              #1            // org/scalatest/matchers/dsl/MatcherFactory8Macro
    #3 = Utf8               <SC:Ljava/lang/Object;TC1:Ljava/lang/Object;TC2:Ljava/lang/Object;TC3:Ljava/lang/Object;TC4:Ljava/lang/Object;TC5:Ljava/lang/Object;TC6:Ljava/lang/Object;TC7:Ljava/lang/Object;TC8:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               MatcherFactory8.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\u0005\u0015d!\u0002\u0004\b\u0001-y\u0001\"B\f\u0001\t\u0003I\u0002\"\u0002)\u0001\t\u0003\t\u0006BB@\u0001\t\u0003\t\t\u0001C\u0004\u0002 \u0001!\t!!\t\t\u000f\u0005\u0015\u0003\u0001\"\u0001\u0002H\t!R*\u0019;dQ\u0016\u0014h)Y2u_JL\b(T1de>T!\u0001C\u0005\u0002\u0007\u0011\u001cHN\u0003\u0002\u000b\u0017\u0005AQ.\u0019;dQ\u0016\u00148O\u0003\u0002\r\u001b\u0005I1oY1mCR,7\u000f\u001e\u0006\u0002\u001d\u0005\u0019qN]4\u0016\u0015Aq\u0002FL\u001a9{\t;Ej\u0005\u0002\u0001#A\u0011!#F\u0007\u0002\')\tA#A\u0003tG\u0006d\u0017-\u0003\u0002\u0017\'\t1\u0011I\\=SK\u001a\fa\u0001P5oSRt4\u0001\u0001\u000b\u00025AY1\u0004\u0001\u000f([I:D(\u0011$L\u001b\u00059\u0001CA\u000f\u001f\u0019\u0001!aa\b\u0001\t\u0006\u0004\u0001#AA*D#\t\tC\u0005\u0005\u0002\u0013E%\u00111e\u0005\u0002\b\u001d>$\b.\u001b8h!\t\u0011R%\u0003\u0002\'\'\t\u0019\u0011I\\=\u0011\u0005uAC!B\u0015\u0001\u0005\u0004Q#a\u0001+DcU\u0011\u0001e\u000b\u0003\u0006Y!\u0012\r\u0001\t\u0002\u0002?B\u0011QD\f\u0003\u0006_\u0001\u0011\r\u0001\r\u0002\u0004)\u000e\u0013TC\u0001\u00112\t\u0015acF1\u0001!!\ti2\u0007B\u00035\u0001\t\u0007QGA\u0002U\u0007N*\"\u0001\t\u001c\u0005\u000b1\u001a$\u0019\u0001\u0011\u0011\u0005uAD!B\u001d\u0001\u0005\u0004Q$a\u0001+DiU\u0011\u0001e\u000f\u0003\u0006Ya\u0012\r\u0001\t\t\u0003;u\"QA\u0010\u0001C\u0002}\u00121\u0001V\"6+\t\u0001\u0003\tB\u0003-{\t\u0007\u0001\u0005\u0005\u0002\u001e\u0005\u0012)1\t\u0001b\u0001\t\n\u0019Ak\u0011\u001c\u0016\u0005\u0001*E!\u0002\u0017C\u0005\u0004\u0001\u0003CA\u000fH\t\u0015A\u0005A1\u0001J\u0005\r!6iN\u000b\u0003A)#Q\u0001L$C\u0002\u0001\u0002\"!\b\'\u0005\u000b5\u0003!\u0019\u0001(\u0003\u0007Q\u001b\u0005(\u0006\u0002!\u001f\u0012)A\u0006\u0014b\u0001A\u0005Q\u0012M\u001c3O_R\fE+\u001f9f\u001b\u0006$8\r[3s\r\u0006\u001cGo\u001c:zqQ\u0011!+\u0016\u000b\u0003\'V\u00042\u0001V6p\u001d\tiR\u000bC\u0003W\u0005\u0001\u0007q+A\u0004d_:$X\r\u001f;\u0011\u0005aCgBA-f\u001d\tQ&M\u0004\u0002\\A:\u0011AlX\u0007\u0002;*\u0011a\fG\u0001\u0007yI|w\u000e\u001e \n\u0003QI!!Y\n\u0002\u000fI,g\r\\3di&\u00111\rZ\u0001\u0007[\u0006\u001c\'o\\:\u000b\u0005\u0005\u001c\u0012B\u00014h\u0003\u001d\u0001\u0018mY6bO\u0016T!a\u00193\n\u0005%T\'aB\"p]R,\u0007\u0010\u001e\u0006\u0003M\u001eL!\u0001\\7\u0003\t\u0015C\bO]\u0005\u0003]\u001e\u0014q!\u00117jCN,7\u000fE\u0006\u001caJ<SFM\u001c=\u0003\u001a[\u0015BA9\b\u0005=i\u0015\r^2iKJ4\u0015m\u0019;pefD$cA:\u001d#\u0019!A\u000f\u0001\u0001s\u00051a$/\u001a4j]\u0016lWM\u001c;?\u0011\u00151(\u00011\u0001x\u0003\u0015\tG+\u001f9f!\r!6\u000e\u001f\u0019\u0003sv\u00042a\u0007>}\u0013\tYxAA\fSKN,H\u000e^(g\u0003RK\b/Z%om>\u001c\u0017\r^5p]B\u0011Q$ \u0003\n}V\f\t\u0011!A\u0003\u0002\u0001\u0012Aa\u0018\u00133k\u0005IrN\u001d(pi\u0006#\u0016\u0010]3NCR\u001c\u0007.\u001a:GC\u000e$xN]=9)\u0011\t\u0019!!\u0003\u0015\t\u0005\u0015\u0011\u0011\u0003\t\u0006\u0003\u000fY\u00171\u0002\b\u0004;\u0005%\u0001\"\u0002,\u0004\u0001\u00049\u0006\u0003D\u000eq\u0003\u001b9SFM\u001c=\u0003\u001a[%\u0003BA\b9E1Q\u0001\u001e\u0001\u0001\u0003\u001bAaA^\u0002A\u0002\u0005M\u0001#BA\u0004W\u0006U\u0001\u0007BA\f\u00037\u0001Ba\u0007>\u0002\u001aA\u0019Q$a\u0007\u0005\u0017\u0005u\u0011\u0011CA\u0001\u0002\u0003\u0015\t\u0001\t\u0002\u0005?\u0012\u0012d\'A\u000eb]\u0012tu\u000e^!o)f\u0004X-T1uG\",\'OR1di>\u0014\u0018\u0010\u000f\u000b\u0005\u0003G\tI\u0003\u0006\u0003\u0002&\u0005E\u0002#BA\u0014W\u0006-bbA\u000f\u0002*!)a\u000b\u0002a\u0001/Ba1\u0004]A\u0017O5\u0012t\u0007P!G\u0017J!\u0011q\u0006\u000f\u0012\r\u0015!\b\u0001AA\u0017\u0011\u001d\t\u0019\u0004\u0002a\u0001\u0003k\ta!\u00198UsB,\u0007#BA\u0014W\u0006]\u0002\u0007BA\u001d\u0003\u0003\u0002RaGA\u001e\u0003\u007fI1!!\u0010\b\u0005a\u0011Vm];mi>3\u0017I\u001c+za\u0016LeN^8dCRLwN\u001c\t\u0004;\u0005\u0005CaCA\"\u0003c\t\t\u0011!A\u0003\u0002\u0001\u0012Aa\u0018\u00133o\u0005QrN\u001d(pi\u0006sG+\u001f9f\u001b\u0006$8\r[3s\r\u0006\u001cGo\u001c:zqQ!\u0011\u0011JA()\u0011\tY%a\u0016\u0011\u000b\u000553.!\u0015\u000f\u0007u\ty\u0005C\u0003W\u000b\u0001\u0007q\u000b\u0005\u0007\u001ca\u0006Ms%\f\u001a8y\u000535J\u0005\u0003\u0002Vq\tb!\u0002;\u0001\u0001\u0005M\u0003bBA\u001a\u000b\u0001\u0007\u0011\u0011\f\t\u0006\u0003\u001bZ\u00171\f\u0019\u0005\u0003;\n\t\u0007E\u0003\u001c\u0003w\ty\u0006E\u0002\u001e\u0003C\"1\"a\u0019\u0002X\u0005\u0005\t\u0011!B\u0001A\t!q\f\n\u001a9\u0001
   #10 = Utf8               scala/reflect/api/Exprs$Expr
   #11 = Class              #10           // scala/reflect/api/Exprs$Expr
   #12 = Utf8               scala/reflect/api/Exprs
   #13 = Class              #12           // scala/reflect/api/Exprs
   #14 = Utf8               Expr
   #15 = Utf8               scala/reflect/api/Names$NameApi
   #16 = Class              #15           // scala/reflect/api/Names$NameApi
   #17 = Utf8               scala/reflect/api/Names
   #18 = Class              #17           // scala/reflect/api/Names
   #19 = Utf8               NameApi
   #20 = Utf8               scala/reflect/api/Names$TermNameApi
   #21 = Class              #20           // scala/reflect/api/Names$TermNameApi
   #22 = Utf8               TermNameApi
   #23 = Utf8               scala/reflect/api/Trees$ApplyApi
   #24 = Class              #23           // scala/reflect/api/Trees$ApplyApi
   #25 = Utf8               scala/reflect/api/Trees
   #26 = Class              #25           // scala/reflect/api/Trees
   #27 = Utf8               ApplyApi
   #28 = Utf8               scala/reflect/api/Trees$ApplyExtractor
   #29 = Class              #28           // scala/reflect/api/Trees$ApplyExtractor
   #30 = Utf8               ApplyExtractor
   #31 = Utf8               scala/reflect/api/Trees$SelectApi
   #32 = Class              #31           // scala/reflect/api/Trees$SelectApi
   #33 = Utf8               SelectApi
   #34 = Utf8               scala/reflect/api/Trees$SelectExtractor
   #35 = Class              #34           // scala/reflect/api/Trees$SelectExtractor
   #36 = Utf8               SelectExtractor
   #37 = Utf8               scala/reflect/api/Trees$TreeApi
   #38 = Class              #37           // scala/reflect/api/Trees$TreeApi
   #39 = Utf8               TreeApi
   #40 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag
   #41 = Class              #40           // scala/reflect/api/TypeTags$WeakTypeTag
   #42 = Utf8               scala/reflect/api/TypeTags
   #43 = Class              #42           // scala/reflect/api/TypeTags
   #44 = Utf8               WeakTypeTag
   #45 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag$
   #46 = Class              #45           // scala/reflect/api/TypeTags$WeakTypeTag$
   #47 = Utf8               WeakTypeTag$
   #48 = Utf8               andNotATypeMatcherFactory8
   #49 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #50 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/MatcherFactory8<Ljava/lang/Object;TTC1;TTC2;TTC3;TTC4;TTC5;TTC6;TTC7;TTC8;>;>;
   #51 = Utf8               context
   #52 = Utf8               aType
   #53 = Utf8               org/scalatest/matchers/TypeMatcherMacro$
   #54 = Class              #53           // org/scalatest/matchers/TypeMatcherMacro$
   #55 = Utf8               MODULE$
   #56 = Utf8               Lorg/scalatest/matchers/TypeMatcherMacro$;
   #57 = NameAndType        #55:#56       // MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
   #58 = Fieldref           #54.#57       // org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
   #59 = Utf8               notATypeMatcher
   #60 = NameAndType        #59:#49       // notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #61 = Methodref          #54.#60       // org/scalatest/matchers/TypeMatcherMacro$.notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #62 = Utf8               scala/reflect/macros/whitebox/Context
   #63 = Class              #62           // scala/reflect/macros/whitebox/Context
   #64 = Utf8               macroApplication
   #65 = Utf8               ()Lscala/reflect/api/Trees$TreeApi;
   #66 = NameAndType        #64:#65       // macroApplication:()Lscala/reflect/api/Trees$TreeApi;
   #67 = InterfaceMethodref #63.#66       // scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
   #68 = Utf8               universe
   #69 = Utf8               ()Lscala/reflect/macros/Universe;
   #70 = NameAndType        #68:#69       // universe:()Lscala/reflect/macros/Universe;
   #71 = InterfaceMethodref #63.#70       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #72 = Utf8               scala/reflect/macros/Universe
   #73 = Class              #72           // scala/reflect/macros/Universe
   #74 = Utf8               ApplyTag
   #75 = Utf8               ()Lscala/reflect/ClassTag;
   #76 = NameAndType        #74:#75       // ApplyTag:()Lscala/reflect/ClassTag;
   #77 = Methodref          #73.#76       // scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
   #78 = Utf8               scala/reflect/ClassTag
   #79 = Class              #78           // scala/reflect/ClassTag
   #80 = Utf8               unapply
   #81 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #82 = NameAndType        #80:#81       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #83 = InterfaceMethodref #79.#82       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #84 = Utf8               scala/Option
   #85 = Class              #84           // scala/Option
   #86 = Utf8               isEmpty
   #87 = Utf8               ()Z
   #88 = NameAndType        #86:#87       // isEmpty:()Z
   #89 = Methodref          #85.#88       // scala/Option.isEmpty:()Z
   #90 = Utf8               get
   #91 = Utf8               ()Ljava/lang/Object;
   #92 = NameAndType        #90:#91       // get:()Ljava/lang/Object;
   #93 = Methodref          #85.#92       // scala/Option.get:()Ljava/lang/Object;
   #94 = Utf8               Apply
   #95 = Utf8               ()Lscala/reflect/api/Trees$ApplyExtractor;
   #96 = NameAndType        #94:#95       // Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
   #97 = Methodref          #73.#96       // scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
   #98 = Utf8               (Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
   #99 = NameAndType        #80:#98       // unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
  #100 = Methodref          #29.#99       // scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
  #101 = Utf8               scala/Tuple2
  #102 = Class              #101          // scala/Tuple2
  #103 = Utf8               _1
  #104 = NameAndType        #103:#91      // _1:()Ljava/lang/Object;
  #105 = Methodref          #102.#104     // scala/Tuple2._1:()Ljava/lang/Object;
  #106 = Utf8               SelectTag
  #107 = NameAndType        #106:#75      // SelectTag:()Lscala/reflect/ClassTag;
  #108 = Methodref          #73.#107      // scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
  #109 = Utf8               Select
  #110 = Utf8               ()Lscala/reflect/api/Trees$SelectExtractor;
  #111 = NameAndType        #109:#110     // Select:()Lscala/reflect/api/Trees$SelectExtractor;
  #112 = Methodref          #73.#111      // scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
  #113 = Utf8               (Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
  #114 = NameAndType        #80:#113      // unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
  #115 = Methodref          #35.#114      // scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
  #116 = Utf8               owner
  #117 = String             #116          // owner
  #118 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
  #119 = NameAndType        #109:#118     // Select:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
  #120 = Methodref          #73.#119      // scala/reflect/macros/Universe.Select:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
  #121 = Utf8               and
  #122 = String             #121          // and
  #123 = Utf8               newTermName
  #124 = Utf8               (Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #125 = NameAndType        #123:#124     // newTermName:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #126 = Methodref          #73.#125      // scala/reflect/macros/Universe.newTermName:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #127 = Utf8               apply
  #128 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
  #129 = NameAndType        #127:#128     // apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
  #130 = Methodref          #35.#129      // scala/reflect/api/Trees$SelectExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
  #131 = Utf8               scala/package$
  #132 = Class              #131          // scala/package$
  #133 = Utf8               Lscala/package$;
  #134 = NameAndType        #55:#133      // MODULE$:Lscala/package$;
  #135 = Fieldref           #132.#134     // scala/package$.MODULE$:Lscala/package$;
  #136 = Utf8               List
  #137 = Utf8               ()Lscala/collection/immutable/List$;
  #138 = NameAndType        #136:#137     // List:()Lscala/collection/immutable/List$;
  #139 = Methodref          #132.#138     // scala/package$.List:()Lscala/collection/immutable/List$;
  #140 = Utf8               scala/runtime/ScalaRunTime$
  #141 = Class              #140          // scala/runtime/ScalaRunTime$
  #142 = Utf8               Lscala/runtime/ScalaRunTime$;
  #143 = NameAndType        #55:#142      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #144 = Fieldref           #141.#143     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #145 = Utf8               tree
  #146 = NameAndType        #145:#65      // tree:()Lscala/reflect/api/Trees$TreeApi;
  #147 = InterfaceMethodref #11.#146      // scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
  #148 = Utf8               [Ljava/lang/Object;
  #149 = Class              #148          // "[Ljava/lang/Object;"
  #150 = Utf8               wrapRefArray
  #151 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #152 = NameAndType        #150:#151     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #153 = Methodref          #141.#152     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #154 = Utf8               scala/collection/immutable/List$
  #155 = Class              #154          // scala/collection/immutable/List$
  #156 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #157 = NameAndType        #127:#156     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #158 = Methodref          #155.#157     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #159 = Utf8               scala/collection/immutable/List
  #160 = Class              #159          // scala/collection/immutable/List
  #161 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
  #162 = NameAndType        #127:#161     // apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
  #163 = Methodref          #29.#162      // scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
  #164 = Utf8               ()Lscala/reflect/api/TypeTags$WeakTypeTag$;
  #165 = NameAndType        #44:#164      // WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
  #166 = Methodref          #73.#165      // scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
  #167 = Utf8               Nothing
  #168 = Utf8               ()Lscala/reflect/api/TypeTags$WeakTypeTag;
  #169 = NameAndType        #167:#168     // Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
  #170 = Methodref          #46.#169      // scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
  #171 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #172 = NameAndType        #14:#171      // Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #173 = InterfaceMethodref #63.#172      // scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
  #174 = Utf8               pos
  #175 = Utf8               ()Lscala/reflect/api/Position;
  #176 = NameAndType        #174:#175     // pos:()Lscala/reflect/api/Position;
  #177 = InterfaceMethodref #38.#176      // scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
  #178 = Utf8               This macro should be used with \'and not\' syntax only.
  #179 = String             #178          // This macro should be used with \'and not\' syntax only.
  #180 = Utf8               abort
  #181 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #182 = NameAndType        #180:#181     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #183 = InterfaceMethodref #63.#182      // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #184 = Utf8               qualifier
  #185 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #186 = Utf8               rhs
  #187 = Utf8               Lscala/reflect/api/Exprs$Expr;
  #188 = Utf8               this
  #189 = Utf8               Lorg/scalatest/matchers/dsl/MatcherFactory8Macro;
  #190 = Utf8               Lscala/reflect/macros/whitebox/Context;
  #191 = Utf8               orNotATypeMatcherFactory8
  #192 = Utf8               or
  #193 = String             #192          // or
  #194 = Utf8               This macro should be used with \'or not\' syntax only.
  #195 = String             #194          // This macro should be used with \'or not\' syntax only.
  #196 = Utf8               andNotAnTypeMatcherFactory8
  #197 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/MatcherFactory8<Ljava/lang/Object;TTC1;TTC2;TTC3;TTC4;TTC5;TTC6;TTC7;TTC8;>;>;
  #198 = Utf8               anType
  #199 = Utf8               notAnTypeMatcher
  #200 = NameAndType        #199:#49      // notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #201 = Methodref          #54.#200      // org/scalatest/matchers/TypeMatcherMacro$.notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #202 = Utf8               orNotAnTypeMatcherFactory8
  #203 = Utf8               <init>
  #204 = Utf8               ()V
  #205 = NameAndType        #203:#204     // "<init>":()V
  #206 = Methodref          #5.#205       // java/lang/Object."<init>":()V
  #207 = Utf8               Code
  #208 = Utf8               StackMapTable
  #209 = Utf8               LineNumberTable
  #210 = Utf8               LocalVariableTable
  #211 = Utf8               Signature
  #212 = Utf8               MethodParameters
  #213 = Utf8               InnerClasses
  #214 = Utf8               SourceFile
  #215 = Utf8               RuntimeVisibleAnnotations
  #216 = Utf8               ScalaInlineInfo
  #217 = Utf8               ScalaSig
{
  public scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.MatcherFactory8<java.lang.Object, TC1, TC2, TC3, TC4, TC5, TC6, TC7, TC8>> andNotATypeMatcherFactory8(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=15, args_size=3
         0: aload_2
         1: astore        4
         3: getstatic     #58                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         6: aload_1
         7: aload         4
         9: invokevirtual #61                 // Method org/scalatest/matchers/TypeMatcherMacro$.notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        12: astore        5
        14: aload_1
        15: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
        20: astore        6
        22: aload         6
        24: ifnull        323
        27: aload_1
        28: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        33: invokevirtual #77                 // Method scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
        36: aload         6
        38: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        43: astore        7
        45: aload         7
        47: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        50: ifne          320
        53: aload         7
        55: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        58: checkcast     #24                 // class scala/reflect/api/Trees$ApplyApi
        61: astore        8
        63: aload         8
        65: ifnull        317
        68: aload_1
        69: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        74: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
        77: aload         8
        79: invokevirtual #100                // Method scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
        82: astore        9
        84: aload         9
        86: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        89: ifne          314
        92: aload         9
        94: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        97: checkcast     #102                // class scala/Tuple2
       100: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       103: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       106: astore        10
       108: aload         10
       110: ifnull        311
       113: aload_1
       114: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       119: invokevirtual #108                // Method scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
       122: aload         10
       124: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       129: astore        11
       131: aload         11
       133: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       136: ifne          308
       139: aload         11
       141: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       144: checkcast     #32                 // class scala/reflect/api/Trees$SelectApi
       147: astore        12
       149: aload         12
       151: ifnull        305
       154: aload_1
       155: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       160: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       163: aload         12
       165: invokevirtual #115                // Method scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
       168: astore        13
       170: aload         13
       172: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       175: ifne          302
       178: aload         13
       180: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       183: checkcast     #102                // class scala/Tuple2
       186: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       189: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       192: astore        14
       194: aload_1
       195: aload_1
       196: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       201: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       204: aload_1
       205: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       210: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       213: aload_1
       214: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       219: aload         14
       221: ldc           #117                // String owner
       223: invokevirtual #120                // Method scala/reflect/macros/Universe.Select:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
       226: aload_1
       227: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       232: ldc           #122                // String and
       234: invokevirtual #126                // Method scala/reflect/macros/Universe.newTermName:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       237: checkcast     #16                 // class scala/reflect/api/Names$NameApi
       240: invokevirtual #130                // Method scala/reflect/api/Trees$SelectExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
       243: getstatic     #135                // Field scala/package$.MODULE$:Lscala/package$;
       246: invokevirtual #139                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       249: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       252: iconst_1
       253: anewarray     #38                 // class scala/reflect/api/Trees$TreeApi
       256: dup
       257: iconst_0
       258: aload         5
       260: invokeinterface #147,  1          // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
       265: aastore
       266: checkcast     #149                // class "[Ljava/lang/Object;"
       269: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       272: invokevirtual #158                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       275: checkcast     #160                // class scala/collection/immutable/List
       278: invokevirtual #163                // Method scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
       281: aload_1
       282: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       287: invokevirtual #166                // Method scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
       290: invokevirtual #170                // Method scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
       293: invokeinterface #173,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
       298: astore_3
       299: goto          346
       302: goto          326
       305: goto          326
       308: goto          326
       311: goto          326
       314: goto          326
       317: goto          326
       320: goto          326
       323: goto          326
       326: aload_1
       327: aload_1
       328: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
       333: invokeinterface #177,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
       338: ldc           #179                // String This macro should be used with \'and not\' syntax only.
       340: invokeinterface #183,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       345: athrow
       346: aload_3
       347: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 302
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 2843: 0
        line 2846: 3
        line 2848: 14
        line 2849: 22
        line 2848: 53
        line 2849: 63
        line 2848: 92
        line 2849: 108
        line 2848: 139
        line 2849: 149
        line 2848: 178
        line 2850: 194
        line 2851: 195
        line 2852: 204
        line 2853: 213
        line 2854: 219
        line 2855: 221
        line 2857: 226
        line 2859: 243
        line 2850: 281
        line 2849: 302
        line 2862: 326
        line 2848: 346
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          194     108    14 qualifier   Lscala/reflect/api/Trees$TreeApi;
           14     333     5   rhs   Lscala/reflect/api/Exprs$Expr;
            0     348     0  this   Lorg/scalatest/matchers/dsl/MatcherFactory8Macro;
            0     348     1 context   Lscala/reflect/macros/whitebox/Context;
            0     348     2 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #50                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/MatcherFactory8<Ljava/lang/Object;TTC1;TTC2;TTC3;TTC4;TTC5;TTC6;TTC7;TTC8;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.MatcherFactory8<java.lang.Object, TC1, TC2, TC3, TC4, TC5, TC6, TC7, TC8>> orNotATypeMatcherFactory8(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfATypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=15, args_size=3
         0: aload_2
         1: astore        4
         3: getstatic     #58                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         6: aload_1
         7: aload         4
         9: invokevirtual #61                 // Method org/scalatest/matchers/TypeMatcherMacro$.notATypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        12: astore        5
        14: aload_1
        15: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
        20: astore        6
        22: aload         6
        24: ifnull        323
        27: aload_1
        28: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        33: invokevirtual #77                 // Method scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
        36: aload         6
        38: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        43: astore        7
        45: aload         7
        47: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        50: ifne          320
        53: aload         7
        55: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        58: checkcast     #24                 // class scala/reflect/api/Trees$ApplyApi
        61: astore        8
        63: aload         8
        65: ifnull        317
        68: aload_1
        69: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        74: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
        77: aload         8
        79: invokevirtual #100                // Method scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
        82: astore        9
        84: aload         9
        86: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        89: ifne          314
        92: aload         9
        94: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        97: checkcast     #102                // class scala/Tuple2
       100: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       103: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       106: astore        10
       108: aload         10
       110: ifnull        311
       113: aload_1
       114: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       119: invokevirtual #108                // Method scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
       122: aload         10
       124: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       129: astore        11
       131: aload         11
       133: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       136: ifne          308
       139: aload         11
       141: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       144: checkcast     #32                 // class scala/reflect/api/Trees$SelectApi
       147: astore        12
       149: aload         12
       151: ifnull        305
       154: aload_1
       155: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       160: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       163: aload         12
       165: invokevirtual #115                // Method scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
       168: astore        13
       170: aload         13
       172: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       175: ifne          302
       178: aload         13
       180: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       183: checkcast     #102                // class scala/Tuple2
       186: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       189: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       192: astore        14
       194: aload_1
       195: aload_1
       196: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       201: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       204: aload_1
       205: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       210: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       213: aload_1
       214: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       219: aload         14
       221: ldc           #117                // String owner
       223: invokevirtual #120                // Method scala/reflect/macros/Universe.Select:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
       226: aload_1
       227: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       232: ldc           #193                // String or
       234: invokevirtual #126                // Method scala/reflect/macros/Universe.newTermName:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       237: checkcast     #16                 // class scala/reflect/api/Names$NameApi
       240: invokevirtual #130                // Method scala/reflect/api/Trees$SelectExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
       243: getstatic     #135                // Field scala/package$.MODULE$:Lscala/package$;
       246: invokevirtual #139                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       249: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       252: iconst_1
       253: anewarray     #38                 // class scala/reflect/api/Trees$TreeApi
       256: dup
       257: iconst_0
       258: aload         5
       260: invokeinterface #147,  1          // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
       265: aastore
       266: checkcast     #149                // class "[Ljava/lang/Object;"
       269: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       272: invokevirtual #158                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       275: checkcast     #160                // class scala/collection/immutable/List
       278: invokevirtual #163                // Method scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
       281: aload_1
       282: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       287: invokevirtual #166                // Method scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
       290: invokevirtual #170                // Method scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
       293: invokeinterface #173,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
       298: astore_3
       299: goto          346
       302: goto          326
       305: goto          326
       308: goto          326
       311: goto          326
       314: goto          326
       317: goto          326
       320: goto          326
       323: goto          326
       326: aload_1
       327: aload_1
       328: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
       333: invokeinterface #177,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
       338: ldc           #195                // String This macro should be used with \'or not\' syntax only.
       340: invokeinterface #183,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       345: athrow
       346: aload_3
       347: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 302
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 2866: 0
        line 2869: 3
        line 2871: 14
        line 2872: 22
        line 2871: 53
        line 2872: 63
        line 2871: 92
        line 2872: 108
        line 2871: 139
        line 2872: 149
        line 2871: 178
        line 2873: 194
        line 2874: 195
        line 2875: 204
        line 2876: 213
        line 2877: 219
        line 2878: 221
        line 2880: 226
        line 2882: 243
        line 2873: 281
        line 2872: 302
        line 2885: 326
        line 2871: 346
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          194     108    14 qualifier   Lscala/reflect/api/Trees$TreeApi;
           14     333     5   rhs   Lscala/reflect/api/Exprs$Expr;
            0     348     0  this   Lorg/scalatest/matchers/dsl/MatcherFactory8Macro;
            0     348     1 context   Lscala/reflect/macros/whitebox/Context;
            0     348     2 aType   Lscala/reflect/api/Exprs$Expr;
    Signature: #50                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfATypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/MatcherFactory8<Ljava/lang/Object;TTC1;TTC2;TTC3;TTC4;TTC5;TTC6;TTC7;TTC8;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      aType                          final

  public scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.MatcherFactory8<java.lang.Object, TC1, TC2, TC3, TC4, TC5, TC6, TC7, TC8>> andNotAnTypeMatcherFactory8(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=15, args_size=3
         0: aload_2
         1: astore        4
         3: getstatic     #58                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         6: aload_1
         7: aload         4
         9: invokevirtual #201                // Method org/scalatest/matchers/TypeMatcherMacro$.notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        12: astore        5
        14: aload_1
        15: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
        20: astore        6
        22: aload         6
        24: ifnull        323
        27: aload_1
        28: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        33: invokevirtual #77                 // Method scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
        36: aload         6
        38: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        43: astore        7
        45: aload         7
        47: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        50: ifne          320
        53: aload         7
        55: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        58: checkcast     #24                 // class scala/reflect/api/Trees$ApplyApi
        61: astore        8
        63: aload         8
        65: ifnull        317
        68: aload_1
        69: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        74: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
        77: aload         8
        79: invokevirtual #100                // Method scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
        82: astore        9
        84: aload         9
        86: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        89: ifne          314
        92: aload         9
        94: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        97: checkcast     #102                // class scala/Tuple2
       100: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       103: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       106: astore        10
       108: aload         10
       110: ifnull        311
       113: aload_1
       114: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       119: invokevirtual #108                // Method scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
       122: aload         10
       124: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       129: astore        11
       131: aload         11
       133: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       136: ifne          308
       139: aload         11
       141: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       144: checkcast     #32                 // class scala/reflect/api/Trees$SelectApi
       147: astore        12
       149: aload         12
       151: ifnull        305
       154: aload_1
       155: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       160: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       163: aload         12
       165: invokevirtual #115                // Method scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
       168: astore        13
       170: aload         13
       172: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       175: ifne          302
       178: aload         13
       180: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       183: checkcast     #102                // class scala/Tuple2
       186: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       189: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       192: astore        14
       194: aload_1
       195: aload_1
       196: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       201: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       204: aload_1
       205: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       210: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       213: aload_1
       214: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       219: aload         14
       221: ldc           #117                // String owner
       223: invokevirtual #120                // Method scala/reflect/macros/Universe.Select:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
       226: aload_1
       227: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       232: ldc           #122                // String and
       234: invokevirtual #126                // Method scala/reflect/macros/Universe.newTermName:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       237: checkcast     #16                 // class scala/reflect/api/Names$NameApi
       240: invokevirtual #130                // Method scala/reflect/api/Trees$SelectExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
       243: getstatic     #135                // Field scala/package$.MODULE$:Lscala/package$;
       246: invokevirtual #139                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       249: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       252: iconst_1
       253: anewarray     #38                 // class scala/reflect/api/Trees$TreeApi
       256: dup
       257: iconst_0
       258: aload         5
       260: invokeinterface #147,  1          // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
       265: aastore
       266: checkcast     #149                // class "[Ljava/lang/Object;"
       269: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       272: invokevirtual #158                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       275: checkcast     #160                // class scala/collection/immutable/List
       278: invokevirtual #163                // Method scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
       281: aload_1
       282: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       287: invokevirtual #166                // Method scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
       290: invokevirtual #170                // Method scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
       293: invokeinterface #173,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
       298: astore_3
       299: goto          346
       302: goto          326
       305: goto          326
       308: goto          326
       311: goto          326
       314: goto          326
       317: goto          326
       320: goto          326
       323: goto          326
       326: aload_1
       327: aload_1
       328: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
       333: invokeinterface #177,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
       338: ldc           #179                // String This macro should be used with \'and not\' syntax only.
       340: invokeinterface #183,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       345: athrow
       346: aload_3
       347: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 302
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 2889: 0
        line 2892: 3
        line 2894: 14
        line 2895: 22
        line 2894: 53
        line 2895: 63
        line 2894: 92
        line 2895: 108
        line 2894: 139
        line 2895: 149
        line 2894: 178
        line 2896: 194
        line 2897: 195
        line 2898: 204
        line 2899: 213
        line 2900: 219
        line 2901: 221
        line 2903: 226
        line 2905: 243
        line 2896: 281
        line 2895: 302
        line 2908: 326
        line 2894: 346
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          194     108    14 qualifier   Lscala/reflect/api/Trees$TreeApi;
           14     333     5   rhs   Lscala/reflect/api/Exprs$Expr;
            0     348     0  this   Lorg/scalatest/matchers/dsl/MatcherFactory8Macro;
            0     348     1 context   Lscala/reflect/macros/whitebox/Context;
            0     348     2 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #197                         // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/MatcherFactory8<Ljava/lang/Object;TTC1;TTC2;TTC3;TTC4;TTC5;TTC6;TTC7;TTC8;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.MatcherFactory8<java.lang.Object, TC1, TC2, TC3, TC4, TC5, TC6, TC7, TC8>> orNotAnTypeMatcherFactory8(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<?>>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=15, args_size=3
         0: aload_2
         1: astore        4
         3: getstatic     #58                 // Field org/scalatest/matchers/TypeMatcherMacro$.MODULE$:Lorg/scalatest/matchers/TypeMatcherMacro$;
         6: aload_1
         7: aload         4
         9: invokevirtual #201                // Method org/scalatest/matchers/TypeMatcherMacro$.notAnTypeMatcher:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        12: astore        5
        14: aload_1
        15: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
        20: astore        6
        22: aload         6
        24: ifnull        323
        27: aload_1
        28: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        33: invokevirtual #77                 // Method scala/reflect/macros/Universe.ApplyTag:()Lscala/reflect/ClassTag;
        36: aload         6
        38: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        43: astore        7
        45: aload         7
        47: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        50: ifne          320
        53: aload         7
        55: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        58: checkcast     #24                 // class scala/reflect/api/Trees$ApplyApi
        61: astore        8
        63: aload         8
        65: ifnull        317
        68: aload_1
        69: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        74: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
        77: aload         8
        79: invokevirtual #100                // Method scala/reflect/api/Trees$ApplyExtractor.unapply:(Lscala/reflect/api/Trees$ApplyApi;)Lscala/Option;
        82: astore        9
        84: aload         9
        86: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
        89: ifne          314
        92: aload         9
        94: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
        97: checkcast     #102                // class scala/Tuple2
       100: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       103: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       106: astore        10
       108: aload         10
       110: ifnull        311
       113: aload_1
       114: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       119: invokevirtual #108                // Method scala/reflect/macros/Universe.SelectTag:()Lscala/reflect/ClassTag;
       122: aload         10
       124: invokeinterface #83,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
       129: astore        11
       131: aload         11
       133: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       136: ifne          308
       139: aload         11
       141: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       144: checkcast     #32                 // class scala/reflect/api/Trees$SelectApi
       147: astore        12
       149: aload         12
       151: ifnull        305
       154: aload_1
       155: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       160: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       163: aload         12
       165: invokevirtual #115                // Method scala/reflect/api/Trees$SelectExtractor.unapply:(Lscala/reflect/api/Trees$SelectApi;)Lscala/Option;
       168: astore        13
       170: aload         13
       172: invokevirtual #89                 // Method scala/Option.isEmpty:()Z
       175: ifne          302
       178: aload         13
       180: invokevirtual #93                 // Method scala/Option.get:()Ljava/lang/Object;
       183: checkcast     #102                // class scala/Tuple2
       186: invokevirtual #105                // Method scala/Tuple2._1:()Ljava/lang/Object;
       189: checkcast     #38                 // class scala/reflect/api/Trees$TreeApi
       192: astore        14
       194: aload_1
       195: aload_1
       196: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       201: invokevirtual #97                 // Method scala/reflect/macros/Universe.Apply:()Lscala/reflect/api/Trees$ApplyExtractor;
       204: aload_1
       205: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       210: invokevirtual #112                // Method scala/reflect/macros/Universe.Select:()Lscala/reflect/api/Trees$SelectExtractor;
       213: aload_1
       214: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       219: aload         14
       221: ldc           #117                // String owner
       223: invokevirtual #120                // Method scala/reflect/macros/Universe.Select:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/String;)Lscala/reflect/api/Trees$SelectApi;
       226: aload_1
       227: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       232: ldc           #193                // String or
       234: invokevirtual #126                // Method scala/reflect/macros/Universe.newTermName:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       237: checkcast     #16                 // class scala/reflect/api/Names$NameApi
       240: invokevirtual #130                // Method scala/reflect/api/Trees$SelectExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$NameApi;)Lscala/reflect/api/Trees$SelectApi;
       243: getstatic     #135                // Field scala/package$.MODULE$:Lscala/package$;
       246: invokevirtual #139                // Method scala/package$.List:()Lscala/collection/immutable/List$;
       249: getstatic     #144                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       252: iconst_1
       253: anewarray     #38                 // class scala/reflect/api/Trees$TreeApi
       256: dup
       257: iconst_0
       258: aload         5
       260: invokeinterface #147,  1          // InterfaceMethod scala/reflect/api/Exprs$Expr.tree:()Lscala/reflect/api/Trees$TreeApi;
       265: aastore
       266: checkcast     #149                // class "[Ljava/lang/Object;"
       269: invokevirtual #153                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       272: invokevirtual #158                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       275: checkcast     #160                // class scala/collection/immutable/List
       278: invokevirtual #163                // Method scala/reflect/api/Trees$ApplyExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$ApplyApi;
       281: aload_1
       282: invokeinterface #71,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       287: invokevirtual #166                // Method scala/reflect/macros/Universe.WeakTypeTag:()Lscala/reflect/api/TypeTags$WeakTypeTag$;
       290: invokevirtual #170                // Method scala/reflect/api/TypeTags$WeakTypeTag$.Nothing:()Lscala/reflect/api/TypeTags$WeakTypeTag;
       293: invokeinterface #173,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.Expr:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Exprs$Expr;
       298: astore_3
       299: goto          346
       302: goto          326
       305: goto          326
       308: goto          326
       311: goto          326
       314: goto          326
       317: goto          326
       320: goto          326
       323: goto          326
       326: aload_1
       327: aload_1
       328: invokeinterface #67,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.macroApplication:()Lscala/reflect/api/Trees$TreeApi;
       333: invokeinterface #177,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.pos:()Lscala/reflect/api/Position;
       338: ldc           #195                // String This macro should be used with \'or not\' syntax only.
       340: invokeinterface #183,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       345: athrow
       346: aload_3
       347: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 302
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, top, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class org/scalatest/matchers/dsl/MatcherFactory8Macro, class scala/reflect/macros/whitebox/Context, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Exprs$Expr, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$ApplyApi, class scala/Option, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Trees$SelectApi, class scala/Option, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 2912: 0
        line 2915: 3
        line 2917: 14
        line 2918: 22
        line 2917: 53
        line 2918: 63
        line 2917: 92
        line 2918: 108
        line 2917: 139
        line 2918: 149
        line 2917: 178
        line 2919: 194
        line 2920: 195
        line 2921: 204
        line 2922: 213
        line 2923: 219
        line 2924: 221
        line 2926: 226
        line 2928: 243
        line 2919: 281
        line 2918: 302
        line 2931: 326
        line 2917: 346
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          194     108    14 qualifier   Lscala/reflect/api/Trees$TreeApi;
           14     333     5   rhs   Lscala/reflect/api/Exprs$Expr;
            0     348     0  this   Lorg/scalatest/matchers/dsl/MatcherFactory8Macro;
            0     348     1 context   Lscala/reflect/macros/whitebox/Context;
            0     348     2 anType   Lscala/reflect/api/Exprs$Expr;
    Signature: #197                         // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation<*>;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/matchers/dsl/MatcherFactory8<Ljava/lang/Object;TTC1;TTC2;TTC3;TTC4;TTC5;TTC6;TTC7;TTC8;>;>;
    MethodParameters:
      Name                           Flags
      context                        final
      anType                         final

  public org.scalatest.matchers.dsl.MatcherFactory8Macro();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #206                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 2937: 0
        line 2839: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/matchers/dsl/MatcherFactory8Macro;
}
InnerClasses:
  public #14= #11 of #13;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public abstract #19= #16 of #18;        // NameApi=class scala/reflect/api/Names$NameApi of class scala/reflect/api/Names
  public #22= #21 of #18;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public #27= #24 of #26;                 // ApplyApi=class scala/reflect/api/Trees$ApplyApi of class scala/reflect/api/Trees
  public abstract #30= #29 of #26;        // ApplyExtractor=class scala/reflect/api/Trees$ApplyExtractor of class scala/reflect/api/Trees
  public #33= #32 of #26;                 // SelectApi=class scala/reflect/api/Trees$SelectApi of class scala/reflect/api/Trees
  public abstract #36= #35 of #26;        // SelectExtractor=class scala/reflect/api/Trees$SelectExtractor of class scala/reflect/api/Trees
  public #39= #38 of #26;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #44= #41 of #43;                 // WeakTypeTag=class scala/reflect/api/TypeTags$WeakTypeTag of class scala/reflect/api/TypeTags
  public #47= #46 of #43;                 // WeakTypeTag$=class scala/reflect/api/TypeTags$WeakTypeTag$ of class scala/reflect/api/TypeTags
Signature: #3                           // <SC:Ljava/lang/Object;TC1:Ljava/lang/Object;TC2:Ljava/lang/Object;TC3:Ljava/lang/Object;TC4:Ljava/lang/Object;TC5:Ljava/lang/Object;TC6:Ljava/lang/Object;TC7:Ljava/lang/Object;TC8:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "MatcherFactory8.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u0015d!\u0002\u0004\b\u0001-y\u0001\"B\f\u0001\t\u0003I\u0002\"\u0002)\u0001\t\u0003\t\u0006BB@\u0001\t\u0003\t\t\u0001C\u0004\u0002 \u0001!\t!!\t\t\u000f\u0005\u0015\u0003\u0001\"\u0001\u0002H\t!R*\u0019;dQ\u0016\u0014h)Y2u_JL\b(T1de>T!\u0001C\u0005\u0002\u0007\u0011\u001cHN\u0003\u0002\u000b\u0017\u0005AQ.\u0019;dQ\u0016\u00148O\u0003\u0002\r\u001b\u0005I1oY1mCR,7\u000f\u001e\u0006\u0002\u001d\u0005\u0019qN]4\u0016\u0015Aq\u0002FL\u001a9{\t;Ej\u0005\u0002\u0001#A\u0011!#F\u0007\u0002\')\tA#A\u0003tG\u0006d\u0017-\u0003\u0002\u0017\'\t1\u0011I\\=SK\u001a\fa\u0001P5oSRt4\u0001\u0001\u000b\u00025AY1\u0004\u0001\u000f([I:D(\u0011$L\u001b\u00059\u0001CA\u000f\u001f\u0019\u0001!aa\b\u0001\t\u0006\u0004\u0001#AA*D#\t\tC\u0005\u0005\u0002\u0013E%\u00111e\u0005\u0002\b\u001d>$\b.\u001b8h!\t\u0011R%\u0003\u0002\'\'\t\u0019\u0011I\\=\u0011\u0005uAC!B\u0015\u0001\u0005\u0004Q#a\u0001+DcU\u0011\u0001e\u000b\u0003\u0006Y!\u0012\r\u0001\t\u0002\u0002?B\u0011QD\f\u0003\u0006_\u0001\u0011\r\u0001\r\u0002\u0004)\u000e\u0013TC\u0001\u00112\t\u0015acF1\u0001!!\ti2\u0007B\u00035\u0001\t\u0007QGA\u0002U\u0007N*\"\u0001\t\u001c\u0005\u000b1\u001a$\u0019\u0001\u0011\u0011\u0005uAD!B\u001d\u0001\u0005\u0004Q$a\u0001+DiU\u0011\u0001e\u000f\u0003\u0006Ya\u0012\r\u0001\t\t\u0003;u\"QA\u0010\u0001C\u0002}\u00121\u0001V\"6+\t\u0001\u0003\tB\u0003-{\t\u0007\u0001\u0005\u0005\u0002\u001e\u0005\u0012)1\t\u0001b\u0001\t\n\u0019Ak\u0011\u001c\u0016\u0005\u0001*E!\u0002\u0017C\u0005\u0004\u0001\u0003CA\u000fH\t\u0015A\u0005A1\u0001J\u0005\r!6iN\u000b\u0003A)#Q\u0001L$C\u0002\u0001\u0002\"!\b\'\u0005\u000b5\u0003!\u0019\u0001(\u0003\u0007Q\u001b\u0005(\u0006\u0002!\u001f\u0012)A\u0006\u0014b\u0001A\u0005Q\u0012M\u001c3O_R\fE+\u001f9f\u001b\u0006$8\r[3s\r\u0006\u001cGo\u001c:zqQ\u0011!+\u0016\u000b\u0003\'V\u00042\u0001V6p\u001d\tiR\u000bC\u0003W\u0005\u0001\u0007q+A\u0004d_:$X\r\u001f;\u0011\u0005aCgBA-f\u001d\tQ&M\u0004\u0002\\A:\u0011AlX\u0007\u0002;*\u0011a\fG\u0001\u0007yI|w\u000e\u001e \n\u0003QI!!Y\n\u0002\u000fI,g\r\\3di&\u00111\rZ\u0001\u0007[\u0006\u001c\'o\\:\u000b\u0005\u0005\u001c\u0012B\u00014h\u0003\u001d\u0001\u0018mY6bO\u0016T!a\u00193\n\u0005%T\'aB\"p]R,\u0007\u0010\u001e\u0006\u0003M\u001eL!\u0001\\7\u0003\t\u0015C\bO]\u0005\u0003]\u001e\u0014q!\u00117jCN,7\u000fE\u0006\u001caJ<SFM\u001c=\u0003\u001a[\u0015BA9\b\u0005=i\u0015\r^2iKJ4\u0015m\u0019;pefD$cA:\u001d#\u0019!A\u000f\u0001\u0001s\u00051a$/\u001a4j]\u0016lWM\u001c;?\u0011\u00151(\u00011\u0001x\u0003\u0015\tG+\u001f9f!\r!6\u000e\u001f\u0019\u0003sv\u00042a\u0007>}\u0013\tYxAA\fSKN,H\u000e^(g\u0003RK\b/Z%om>\u001c\u0017\r^5p]B\u0011Q$ \u0003\n}V\f\t\u0011!A\u0003\u0002\u0001\u0012Aa\u0018\u00133k\u0005IrN\u001d(pi\u0006#\u0016\u0010]3NCR\u001c\u0007.\u001a:GC\u000e$xN]=9)\u0011\t\u0019!!\u0003\u0015\t\u0005\u0015\u0011\u0011\u0003\t\u0006\u0003\u000fY\u00171\u0002\b\u0004;\u0005%\u0001\"\u0002,\u0004\u0001\u00049\u0006\u0003D\u000eq\u0003\u001b9SFM\u001c=\u0003\u001a[%\u0003BA\b9E1Q\u0001\u001e\u0001\u0001\u0003\u001bAaA^\u0002A\u0002\u0005M\u0001#BA\u0004W\u0006U\u0001\u0007BA\f\u00037\u0001Ba\u0007>\u0002\u001aA\u0019Q$a\u0007\u0005\u0017\u0005u\u0011\u0011CA\u0001\u0002\u0003\u0015\t\u0001\t\u0002\u0005?\u0012\u0012d\'A\u000eb]\u0012tu\u000e^!o)f\u0004X-T1uG\",\'OR1di>\u0014\u0018\u0010\u000f\u000b\u0005\u0003G\tI\u0003\u0006\u0003\u0002&\u0005E\u0002#BA\u0014W\u0006-bbA\u000f\u0002*!)a\u000b\u0002a\u0001/Ba1\u0004]A\u0017O5\u0012t\u0007P!G\u0017J!\u0011q\u0006\u000f\u0012\r\u0015!\b\u0001AA\u0017\u0011\u001d\t\u0019\u0004\u0002a\u0001\u0003k\ta!\u00198UsB,\u0007#BA\u0014W\u0006]\u0002\u0007BA\u001d\u0003\u0003\u0002RaGA\u001e\u0003\u007fI1!!\u0010\b\u0005a\u0011Vm];mi>3\u0017I\u001c+za\u0016LeN^8dCRLwN\u001c\t\u0004;\u0005\u0005CaCA\"\u0003c\t\t\u0011!A\u0003\u0002\u0001\u0012Aa\u0018\u00133o\u0005QrN\u001d(pi\u0006sG+\u001f9f\u001b\u0006$8\r[3s\r\u0006\u001cGo\u001c:zqQ!\u0011\u0011JA()\u0011\tY%a\u0016\u0011\u000b\u000553.!\u0015\u000f\u0007u\ty\u0005C\u0003W\u000b\u0001\u0007q\u000b\u0005\u0007\u001ca\u0006Ms%\f\u001a8y\u000535J\u0005\u0003\u0002Vq\tb!\u0002;\u0001\u0001\u0005M\u0003bBA\u001a\u000b\u0001\u0007\u0011\u0011\f\t\u0006\u0003\u001bZ\u00171\f\u0019\u0005\u0003;\n\t\u0007E\u0003\u001c\u0003w\ty\u0006E\u0002\u001e\u0003C\"1\"a\u0019\u0002X\u0005\u0005\t\u0011!B\u0001A\t!q\f\n\u001a9\u0001"
    )
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 CB 00 CC 00 00 30 00 31 00 00 C4
   00 31 00 00 BF 00 31 00 00 CA 00 31 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
