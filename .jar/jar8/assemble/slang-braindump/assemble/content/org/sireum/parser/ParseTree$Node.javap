Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/parser/ParseTree$Node.class
  Last modified May 29, 2022; size 8451 bytes
  SHA-256 checksum f0a76d2a553a2d7bed4256183037b3794c543e94f0927d538d7ecd8097ec7b90
  Compiled from "ParseTree.scala"
public final class org.sireum.parser.ParseTree$Node implements org.sireum.parser.ParseTree
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/ParseTree$Node
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 6, methods: 27, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/ParseTree$Node
    #2 = Class              #1            // org/sireum/parser/ParseTree$Node
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/parser/ParseTree
    #6 = Class              #5            // org/sireum/parser/ParseTree
    #7 = Utf8               ParseTree.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/ST$Any
   #14 = Class              #13           // org/sireum/ST$Any
   #15 = Utf8               org/sireum/ST
   #16 = Class              #15           // org/sireum/ST
   #17 = Utf8               Any
   #18 = Utf8               org/sireum/ST$Any$
   #19 = Class              #18           // org/sireum/ST$Any$
   #20 = Utf8               Any$
   #21 = Utf8               org/sireum/ST$Arg
   #22 = Class              #21           // org/sireum/ST$Arg
   #23 = Utf8               Arg
   #24 = Utf8               org/sireum/ST$Templ
   #25 = Class              #24           // org/sireum/ST$Templ
   #26 = Utf8               Templ
   #27 = Utf8               org/sireum/ST$Templ$
   #28 = Class              #27           // org/sireum/ST$Templ$
   #29 = Utf8               Templ$
   #30 = Utf8               Node
   #31 = Utf8               hashCode
   #32 = Utf8               I
   #33 = Utf8               $content
   #34 = Utf8               Lscala/collection/immutable/Seq;
   #35 = Utf8               Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #36 = Utf8               _children
   #37 = Utf8               Lorg/sireum/IS;
   #38 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;
   #39 = Utf8               _ruleName
   #40 = Utf8               Ljava/lang/String;
   #41 = Utf8               _tipe
   #42 = Utf8               bitmap$0
   #43 = Utf8               B
   #44 = Utf8               hash
   #45 = Utf8               ()Lorg/sireum/Z;
   #46 = Utf8               org/sireum/DatatypeSig
   #47 = Class              #46           // org/sireum/DatatypeSig
   #48 = Utf8               hash$
   #49 = Utf8               (Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #50 = NameAndType        #48:#49       // hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #51 = InterfaceMethodref #47.#50       // org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
   #52 = Utf8               this
   #53 = Utf8               Lorg/sireum/parser/ParseTree$Node;
   #54 = Utf8               $cannotMixImmutableAndMutable
   #55 = Utf8               ()Lscala/runtime/Nothing$;
   #56 = Utf8               org/sireum/Immutable
   #57 = Class              #56           // org/sireum/Immutable
   #58 = Utf8               $cannotMixImmutableAndMutable$
   #59 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #60 = NameAndType        #58:#59       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #61 = InterfaceMethodref #57.#60       // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
   #62 = Utf8               $hasEquals
   #63 = Utf8               ()Z
   #64 = Utf8               $hasEquals$
   #65 = Utf8               (Lorg/sireum/Immutable;)Z
   #66 = NameAndType        #64:#65       // $hasEquals$:(Lorg/sireum/Immutable;)Z
   #67 = InterfaceMethodref #57.#66       // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
   #68 = Utf8               $hasString
   #69 = Utf8               $hasString$
   #70 = NameAndType        #69:#65       // $hasString$:(Lorg/sireum/Immutable;)Z
   #71 = InterfaceMethodref #57.#70       // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
   #72 = Utf8               $clone
   #73 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
   #74 = Utf8               org/sireum/$internal/ImmutableMarker
   #75 = Class              #74           // org/sireum/$internal/ImmutableMarker
   #76 = Utf8               $clone$
   #77 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #78 = NameAndType        #76:#77       // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #79 = InterfaceMethodref #75.#78       // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
   #80 = Utf8               children
   #81 = Utf8               ()Lorg/sireum/IS;
   #82 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;
   #83 = NameAndType        #36:#37       // _children:Lorg/sireum/IS;
   #84 = Fieldref           #2.#83        // org/sireum/parser/ParseTree$Node._children:Lorg/sireum/IS;
   #85 = Utf8               getChildren
   #86 = Utf8               ruleName
   #87 = Utf8               ()Ljava/lang/String;
   #88 = NameAndType        #39:#40       // _ruleName:Ljava/lang/String;
   #89 = Fieldref           #2.#88        // org/sireum/parser/ParseTree$Node._ruleName:Ljava/lang/String;
   #90 = Utf8               getRuleName
   #91 = Utf8               tipe
   #92 = Utf8               ()I
   #93 = NameAndType        #41:#32       // _tipe:I
   #94 = Fieldref           #2.#93        // org/sireum/parser/ParseTree$Node._tipe:I
   #95 = Utf8               getTipe
   #96 = Utf8               toString
   #97 = Utf8               string$
   #98 = Utf8               (Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
   #99 = NameAndType        #97:#98       // string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
  #100 = InterfaceMethodref #6.#99        // org/sireum/parser/ParseTree.string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
  #101 = Utf8               string
  #102 = Utf8               hashCode$lzycompute
  #103 = NameAndType        #42:#43       // bitmap$0:B
  #104 = Fieldref           #2.#103       // org/sireum/parser/ParseTree$Node.bitmap$0:B
  #105 = NameAndType        #62:#63       // $hasEquals:()Z
  #106 = Methodref          #2.#105       // org/sireum/parser/ParseTree$Node.$hasEquals:()Z
  #107 = NameAndType        #31:#92       // hashCode:()I
  #108 = Methodref          #4.#107       // java/lang/Object.hashCode:()I
  #109 = Utf8               scala/package$
  #110 = Class              #109          // scala/package$
  #111 = Utf8               MODULE$
  #112 = Utf8               Lscala/package$;
  #113 = NameAndType        #111:#112     // MODULE$:Lscala/package$;
  #114 = Fieldref           #110.#113     // scala/package$.MODULE$:Lscala/package$;
  #115 = Utf8               Seq
  #116 = Utf8               ()Lscala/collection/immutable/Seq$;
  #117 = NameAndType        #115:#116     // Seq:()Lscala/collection/immutable/Seq$;
  #118 = Methodref          #110.#117     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #119 = Utf8               scala/runtime/ScalaRunTime$
  #120 = Class              #119          // scala/runtime/ScalaRunTime$
  #121 = Utf8               Lscala/runtime/ScalaRunTime$;
  #122 = NameAndType        #111:#121     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #123 = Fieldref           #120.#122     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #124 = Utf8               getClass
  #125 = Utf8               ()Ljava/lang/Class;
  #126 = NameAndType        #124:#125     // getClass:()Ljava/lang/Class;
  #127 = Methodref          #2.#126       // org/sireum/parser/ParseTree$Node.getClass:()Ljava/lang/Class;
  #128 = Utf8               java/lang/Class
  #129 = Class              #128          // java/lang/Class
  #130 = Utf8               getName
  #131 = NameAndType        #130:#87      // getName:()Ljava/lang/String;
  #132 = Methodref          #129.#131     // java/lang/Class.getName:()Ljava/lang/String;
  #133 = NameAndType        #80:#81       // children:()Lorg/sireum/IS;
  #134 = Methodref          #2.#133       // org/sireum/parser/ParseTree$Node.children:()Lorg/sireum/IS;
  #135 = Utf8               wrapRefArray
  #136 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #137 = NameAndType        #135:#136     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #138 = Methodref          #120.#137     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #139 = Utf8               scala/collection/immutable/Seq$
  #140 = Class              #139          // scala/collection/immutable/Seq$
  #141 = Utf8               apply
  #142 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #143 = NameAndType        #141:#142     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #144 = Methodref          #140.#143     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #145 = Utf8               scala/collection/Seq
  #146 = Class              #145          // scala/collection/Seq
  #147 = InterfaceMethodref #146.#107     // scala/collection/Seq.hashCode:()I
  #148 = NameAndType        #31:#32       // hashCode:I
  #149 = Fieldref           #2.#148       // org/sireum/parser/ParseTree$Node.hashCode:I
  #150 = Utf8               java/lang/Throwable
  #151 = Class              #150          // java/lang/Throwable
  #152 = NameAndType        #102:#92      // hashCode$lzycompute:()I
  #153 = Methodref          #2.#152       // org/sireum/parser/ParseTree$Node.hashCode$lzycompute:()I
  #154 = Utf8               equals
  #155 = Utf8               (Ljava/lang/Object;)Z
  #156 = Utf8               o
  #157 = NameAndType        #154:#155     // equals:(Ljava/lang/Object;)Z
  #158 = Methodref          #4.#157       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #159 = Methodref          #2.#107       // org/sireum/parser/ParseTree$Node.hashCode:()I
  #160 = Utf8               Ljava/lang/Object;
  #161 = Utf8               org/sireum/IS
  #162 = Class              #161          // org/sireum/IS
  #163 = Utf8               (Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #164 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
  #165 = Utf8               <init>
  #166 = Utf8               (Lorg/sireum/IS;Ljava/lang/String;I)V
  #167 = NameAndType        #165:#166     // "<init>":(Lorg/sireum/IS;Ljava/lang/String;I)V
  #168 = Methodref          #2.#167       // org/sireum/parser/ParseTree$Node."<init>":(Lorg/sireum/IS;Ljava/lang/String;I)V
  #169 = Utf8               apply$default$1
  #170 = Utf8               apply$default$2
  #171 = NameAndType        #86:#87       // ruleName:()Ljava/lang/String;
  #172 = Methodref          #2.#171       // org/sireum/parser/ParseTree$Node.ruleName:()Ljava/lang/String;
  #173 = Utf8               apply$default$3
  #174 = NameAndType        #91:#92       // tipe:()I
  #175 = Methodref          #2.#174       // org/sireum/parser/ParseTree$Node.tipe:()I
  #176 = Utf8               $content$lzycompute
  #177 = Utf8               ()Lscala/collection/immutable/Seq;
  #178 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #179 = Utf8               scala/Tuple2
  #180 = Class              #179          // scala/Tuple2
  #181 = Utf8               type
  #182 = String             #181          // type
  #183 = Utf8               List
  #184 = Utf8               ()Lscala/collection/immutable/List$;
  #185 = NameAndType        #183:#184     // List:()Lscala/collection/immutable/List$;
  #186 = Methodref          #110.#185     // scala/package$.List:()Lscala/collection/immutable/List$;
  #187 = Utf8               java/lang/String
  #188 = Class              #187          // java/lang/String
  #189 = Utf8               org
  #190 = String             #189          // org
  #191 = Utf8               sireum
  #192 = String             #191          // sireum
  #193 = Utf8               parser
  #194 = String             #193          // parser
  #195 = String             #30           // Node
  #196 = Utf8               [Ljava/lang/Object;
  #197 = Class              #196          // "[Ljava/lang/Object;"
  #198 = Utf8               scala/collection/immutable/List$
  #199 = Class              #198          // scala/collection/immutable/List$
  #200 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #201 = NameAndType        #141:#200     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #202 = Methodref          #199.#201     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #203 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #204 = NameAndType        #165:#203     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #205 = Methodref          #180.#204     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #206 = String             #80           // children
  #207 = String             #86           // ruleName
  #208 = Utf8               org/sireum/String
  #209 = Class              #208          // org/sireum/String
  #210 = Utf8               (Ljava/lang/String;)V
  #211 = NameAndType        #165:#210     // "<init>":(Ljava/lang/String;)V
  #212 = Methodref          #209.#211     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #213 = String             #91           // tipe
  #214 = Utf8               org/sireum/U32
  #215 = Class              #214          // org/sireum/U32
  #216 = Utf8               (I)V
  #217 = NameAndType        #165:#216     // "<init>":(I)V
  #218 = Methodref          #215.#217     // org/sireum/U32."<init>":(I)V
  #219 = Utf8               scala/collection/immutable/Seq
  #220 = Class              #219          // scala/collection/immutable/Seq
  #221 = NameAndType        #33:#34       // $content:Lscala/collection/immutable/Seq;
  #222 = Fieldref           #2.#221       // org/sireum/parser/ParseTree$Node.$content:Lscala/collection/immutable/Seq;
  #223 = NameAndType        #176:#177     // $content$lzycompute:()Lscala/collection/immutable/Seq;
  #224 = Methodref          #2.#223       // org/sireum/parser/ParseTree$Node.$content$lzycompute:()Lscala/collection/immutable/Seq;
  #225 = Utf8               toST
  #226 = Utf8               ()Lorg/sireum/ST;
  #227 = Utf8               org/sireum/ST$
  #228 = Class              #227          // org/sireum/ST$
  #229 = Utf8               Lorg/sireum/ST$;
  #230 = NameAndType        #111:#229     // MODULE$:Lorg/sireum/ST$;
  #231 = Fieldref           #228.#230     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #232 = Utf8
  #233 = String             #232          //
  #234 = Utf8               (
  #235 = String             #234          // (
  #236 = Utf8               )
  #237 = String             #236          // )
  #238 = Utf8               Lorg/sireum/ST$Any$;
  #239 = NameAndType        #111:#238     // MODULE$:Lorg/sireum/ST$Any$;
  #240 = Fieldref           #19.#239      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #241 = Utf8               org/sireum/$internal/Option$
  #242 = Class              #241          // org/sireum/$internal/Option$
  #243 = Utf8               Lorg/sireum/$internal/Option$;
  #244 = NameAndType        #111:#243     // MODULE$:Lorg/sireum/$internal/Option$;
  #245 = Fieldref           #242.#244     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #246 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #247 = NameAndType        #141:#246     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #248 = Methodref          #242.#247     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #249 = Utf8               genericWrapArray
  #250 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #251 = NameAndType        #249:#250     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #252 = Methodref          #120.#251     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #253 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #254 = NameAndType        #141:#253     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #255 = Methodref          #19.#254      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #256 = Utf8               Lorg/sireum/ST$Templ$;
  #257 = NameAndType        #111:#256     // MODULE$:Lorg/sireum/ST$Templ$;
  #258 = Fieldref           #28.#257      // org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
  #259 = MethodType         #246          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #260 = Utf8               $anonfun$toST$1
  #261 = Utf8               (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #262 = NameAndType        #260:#261     // $anonfun$toST$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #263 = Methodref          #2.#262       // org/sireum/parser/ParseTree$Node.$anonfun$toST$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #264 = MethodHandle       6:#263        // REF_invokeStatic org/sireum/parser/ParseTree$Node.$anonfun$toST$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #265 = MethodType         #261          //  (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #266 = Integer            5
  #267 = Integer            1
  #268 = Utf8               java/lang/invoke/LambdaMetafactory
  #269 = Class              #268          // java/lang/invoke/LambdaMetafactory
  #270 = Utf8               altMetafactory
  #271 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #272 = NameAndType        #270:#271     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #273 = Methodref          #269.#272     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #274 = MethodHandle       6:#273        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #275 = Utf8               ()Lscala/Function1;
  #276 = NameAndType        #141:#275     // apply:()Lscala/Function1;
  #277 = InvokeDynamic      #0:#276       // #0:apply:()Lscala/Function1;
  #278 = Utf8               map
  #279 = Utf8               (Lscala/Function1;)Lorg/sireum/IS;
  #280 = NameAndType        #278:#279     // map:(Lscala/Function1;)Lorg/sireum/IS;
  #281 = Methodref          #162.#280     // org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
  #282 = Utf8               elements
  #283 = NameAndType        #282:#177     // elements:()Lscala/collection/immutable/Seq;
  #284 = Methodref          #162.#283     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #285 = Utf8               org/sireum/String$
  #286 = Class              #285          // org/sireum/String$
  #287 = Utf8               Lorg/sireum/String$;
  #288 = NameAndType        #111:#287     // MODULE$:Lorg/sireum/String$;
  #289 = Fieldref           #286.#288     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #290 = Utf8               ,
  #291 = String             #290          // ,
  #292 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #293 = NameAndType        #141:#292     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #294 = Methodref          #286.#293     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #295 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #296 = NameAndType        #141:#295     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #297 = Methodref          #28.#296      // org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #298 = Utf8                                                       st\"\"\"$ruleName(${(for (child <- children) yield child.toST, \", \")})\"\"\"
  #299 = String             #298          //                                         st\"\"\"$ruleName(${(for (child <- children) yield child.toST, \", \")})\"\"\"
  #300 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #301 = NameAndType        #141:#300     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #302 = Methodref          #228.#301     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #303 = Utf8               ()Ljava/lang/Object;
  #304 = NameAndType        #72:#73       // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #305 = Methodref          #2.#304       // org/sireum/parser/ParseTree$Node.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #306 = Utf8               child
  #307 = NameAndType        #225:#226     // toST:()Lorg/sireum/ST;
  #308 = InterfaceMethodref #6.#307       // org/sireum/parser/ParseTree.toST:()Lorg/sireum/ST;
  #309 = Utf8               Lorg/sireum/parser/ParseTree;
  #310 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;Ljava/lang/String;I)V
  #311 = Utf8               __children
  #312 = Utf8               __ruleName
  #313 = Utf8               __tipe
  #314 = Utf8               ()V
  #315 = NameAndType        #165:#314     // "<init>":()V
  #316 = Methodref          #4.#315       // java/lang/Object."<init>":()V
  #317 = Utf8               $init$
  #318 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
  #319 = NameAndType        #317:#318     // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #320 = InterfaceMethodref #75.#319      // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
  #321 = Utf8               (Lorg/sireum/Immutable;)V
  #322 = NameAndType        #317:#321     // $init$:(Lorg/sireum/Immutable;)V
  #323 = InterfaceMethodref #57.#322      // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
  #324 = Utf8               (Lorg/sireum/DatatypeSig;)V
  #325 = NameAndType        #317:#324     // $init$:(Lorg/sireum/DatatypeSig;)V
  #326 = InterfaceMethodref #47.#325      // org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
  #327 = Utf8               (Lorg/sireum/parser/ParseTree;)V
  #328 = NameAndType        #317:#327     // $init$:(Lorg/sireum/parser/ParseTree;)V
  #329 = InterfaceMethodref #6.#328       // org/sireum/parser/ParseTree.$init$:(Lorg/sireum/parser/ParseTree;)V
  #330 = Utf8               $deserializeLambda$
  #331 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #332 = Utf8               scala/runtime/LambdaDeserialize
  #333 = Class              #332          // scala/runtime/LambdaDeserialize
  #334 = Utf8               bootstrap
  #335 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #336 = NameAndType        #334:#335     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #337 = Methodref          #333.#336     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #338 = MethodHandle       6:#337        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #339 = Utf8               lambdaDeserialize
  #340 = NameAndType        #339:#331     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #341 = InvokeDynamic      #1:#340       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #342 = Utf8               Signature
  #343 = Utf8               Code
  #344 = Utf8               LineNumberTable
  #345 = Utf8               LocalVariableTable
  #346 = Utf8               StackMapTable
  #347 = Utf8               MethodParameters
  #348 = Utf8               InnerClasses
  #349 = Utf8               SourceFile
  #350 = Utf8               BootstrapMethods
  #351 = Utf8               ScalaInlineInfo
  #352 = Utf8               Scala
{
  private int hashCode;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #35                          // Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  private final org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> _children;
    descriptor: Lorg/sireum/IS;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #38                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  private final java.lang.String _ruleName;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int _tipe;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #51                 // InterfaceMethod org/sireum/DatatypeSig.hash$:(Lorg/sireum/DatatypeSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #61                 // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #67                 // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> children();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field _children:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;
    Signature: #82                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> getChildren();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #84                 // Field _children:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;
    Signature: #82                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  public java.lang.String ruleName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field _ruleName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public java.lang.String getRuleName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field _ruleName:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public int tipe();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #94                 // Field _tipe:I
         4: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public int getTipe();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #94                 // Field _tipe:I
         4: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod org/sireum/parser/ParseTree.string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // InterfaceMethod org/sireum/parser/ParseTree.string$:(Lorg/sireum/parser/ParseTree;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  private int hashCode$lzycompute();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #104                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     88
        15: aload_0
        16: aload_0
        17: invokevirtual #106                // Method $hasEquals:()Z
        20: ifeq          30
        23: aload_0
        24: invokespecial #108                // Method java/lang/Object.hashCode:()I
        27: goto          74
        30: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        33: invokevirtual #118                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        36: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        39: iconst_2
        40: anewarray     #4                  // class java/lang/Object
        43: dup
        44: iconst_0
        45: aload_0
        46: invokevirtual #127                // Method getClass:()Ljava/lang/Class;
        49: invokevirtual #132                // Method java/lang/Class.getName:()Ljava/lang/String;
        52: aastore
        53: dup
        54: iconst_1
        55: aload_0
        56: invokevirtual #134                // Method children:()Lorg/sireum/IS;
        59: aastore
        60: invokevirtual #138                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        63: invokevirtual #144                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        66: checkcast     #146                // class scala/collection/Seq
        69: invokeinterface #147,  1          // InterfaceMethod scala/collection/Seq.hashCode:()I
        74: putfield      #149                // Field hashCode:I
        77: aload_0
        78: aload_0
        79: getfield      #104                // Field bitmap$0:B
        82: iconst_1
        83: ior
        84: i2b
        85: putfield      #104                // Field bitmap$0:B
        88: aload_1
        89: monitorexit
        90: goto          96
        93: aload_1
        94: monitorexit
        95: athrow
        96: aload_0
        97: getfield      #149                // Field hashCode:I
       100: ireturn
      Exception table:
         from    to  target type
             4    88    93   any
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class org/sireum/parser/ParseTree$Node, class org/sireum/parser/ParseTree$Node ]
          stack = [ class org/sireum/parser/ParseTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/sireum/parser/ParseTree$Node, class org/sireum/parser/ParseTree$Node ]
          stack = [ class org/sireum/parser/ParseTree$Node, int ]
        frame_type = 13 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     101     0  this   Lorg/sireum/parser/ParseTree$Node;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #153                // Method hashCode$lzycompute:()I
        15: goto          22
        18: aload_0
        19: getfield      #149                // Field hashCode:I
        22: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/ParseTree$Node;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #106                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #158                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          105
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          105
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/parser/ParseTree$Node
        30: ifeq          96
        33: aload_3
        34: checkcast     #2                  // class org/sireum/parser/ParseTree$Node
        37: astore        4
        39: aload_0
        40: invokevirtual #159                // Method hashCode:()I
        43: aload         4
        45: invokevirtual #159                // Method hashCode:()I
        48: if_icmpeq     55
        51: iconst_0
        52: goto          92
        55: aload_0
        56: invokevirtual #134                // Method children:()Lorg/sireum/IS;
        59: aload         4
        61: invokevirtual #134                // Method children:()Lorg/sireum/IS;
        64: astore        5
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         5
        73: ifnull        87
        76: goto          91
        79: aload         5
        81: invokevirtual #158                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: istore_2
        93: goto          104
        96: goto          99
        99: iconst_0
       100: istore_2
       101: goto          104
       104: iload_2
       105: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ top, class java/lang/Object, class org/sireum/parser/ParseTree$Node ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class org/sireum/parser/ParseTree$Node, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/ParseTree$Node, class org/sireum/IS ]
          stack = [ class org/sireum/IS ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/ParseTree$Node, class java/lang/Object, top, class java/lang/Object, class org/sireum/parser/ParseTree$Node ]
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/sireum/parser/ParseTree$Node, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/ParseTree$Node, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     106     0  this   Lorg/sireum/parser/ParseTree$Node;
            0     106     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public org.sireum.parser.ParseTree$Node apply(org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>, java.lang.String, int);
    descriptor: (Lorg/sireum/IS;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #2                  // class org/sireum/parser/ParseTree$Node
         3: dup
         4: aload_1
         5: aload_2
         6: iload_3
         7: invokespecial #168                // Method "<init>":(Lorg/sireum/IS;Ljava/lang/String;I)V
        10: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/parser/ParseTree$Node;
            0      11     1 children   Lorg/sireum/IS;
            0      11     2 ruleName   Ljava/lang/String;
            0      11     3  tipe   I
    Signature: #164                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;Ljava/lang/String;I)Lorg/sireum/parser/ParseTree$Node;
    MethodParameters:
      Name                           Flags
      children                       final
      ruleName                       final
      tipe                           final

  public org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree> apply$default$1();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #134                // Method children:()Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;
    Signature: #82                          // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;

  public java.lang.String apply$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #172                // Method ruleName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public int apply$default$3();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #175                // Method tipe:()I
         4: ireturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  private scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=15, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #104                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     171
        15: aload_0
        16: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        19: invokevirtual #118                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        22: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        25: iconst_4
        26: anewarray     #180                // class scala/Tuple2
        29: dup
        30: iconst_0
        31: new           #180                // class scala/Tuple2
        34: dup
        35: ldc           #182                // String type
        37: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        40: invokevirtual #186                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        43: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        46: iconst_4
        47: anewarray     #188                // class java/lang/String
        50: dup
        51: iconst_0
        52: ldc           #190                // String org
        54: aastore
        55: dup
        56: iconst_1
        57: ldc           #192                // String sireum
        59: aastore
        60: dup
        61: iconst_2
        62: ldc           #194                // String parser
        64: aastore
        65: dup
        66: iconst_3
        67: ldc           #195                // String Node
        69: aastore
        70: checkcast     #197                // class "[Ljava/lang/Object;"
        73: invokevirtual #138                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        76: invokevirtual #202                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        79: invokespecial #205                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        82: aastore
        83: dup
        84: iconst_1
        85: new           #180                // class scala/Tuple2
        88: dup
        89: ldc           #206                // String children
        91: aload_0
        92: invokevirtual #134                // Method children:()Lorg/sireum/IS;
        95: invokespecial #205                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        98: aastore
        99: dup
       100: iconst_2
       101: new           #180                // class scala/Tuple2
       104: dup
       105: ldc           #207                // String ruleName
       107: new           #209                // class org/sireum/String
       110: dup
       111: aload_0
       112: invokevirtual #172                // Method ruleName:()Ljava/lang/String;
       115: invokespecial #212                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       118: invokespecial #205                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       121: aastore
       122: dup
       123: iconst_3
       124: new           #180                // class scala/Tuple2
       127: dup
       128: ldc           #213                // String tipe
       130: new           #215                // class org/sireum/U32
       133: dup
       134: aload_0
       135: invokevirtual #175                // Method tipe:()I
       138: invokespecial #218                // Method org/sireum/U32."<init>":(I)V
       141: invokespecial #205                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       144: aastore
       145: checkcast     #197                // class "[Ljava/lang/Object;"
       148: invokevirtual #138                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       151: invokevirtual #144                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       154: checkcast     #220                // class scala/collection/immutable/Seq
       157: putfield      #222                // Field $content:Lscala/collection/immutable/Seq;
       160: aload_0
       161: aload_0
       162: getfield      #104                // Field bitmap$0:B
       165: iconst_2
       166: ior
       167: i2b
       168: putfield      #104                // Field bitmap$0:B
       171: aload_1
       172: monitorexit
       173: goto          179
       176: aload_1
       177: monitorexit
       178: athrow
       179: aload_0
       180: getfield      #222                // Field $content:Lscala/collection/immutable/Seq;
       183: areturn
      Exception table:
         from    to  target type
             4   171   176   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 171
          locals = [ class org/sireum/parser/ParseTree$Node ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     184     0  this   Lorg/sireum/parser/ParseTree$Node;
    Signature: #178                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #104                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #224                // Method $content$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #222                // Field $content:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/parser/ParseTree$Node;
    Signature: #178                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.ST toST();
    descriptor: ()Lorg/sireum/ST;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=17, locals=1, args_size=1
         0: getstatic     #231                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         3: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
         6: invokevirtual #118                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         9: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        12: iconst_3
        13: anewarray     #188                // class java/lang/String
        16: dup
        17: iconst_0
        18: ldc           #233                // String
        20: aastore
        21: dup
        22: iconst_1
        23: ldc           #235                // String (
        25: aastore
        26: dup
        27: iconst_2
        28: ldc           #237                // String )
        30: aastore
        31: checkcast     #197                // class "[Ljava/lang/Object;"
        34: invokevirtual #138                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        37: invokevirtual #144                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        40: checkcast     #220                // class scala/collection/immutable/Seq
        43: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        46: invokevirtual #118                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        49: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        52: iconst_2
        53: anewarray     #22                 // class org/sireum/ST$Arg
        56: dup
        57: iconst_0
        58: getstatic     #240                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
        61: getstatic     #114                // Field scala/package$.MODULE$:Lscala/package$;
        64: invokevirtual #118                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        67: getstatic     #123                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        70: iconst_1
        71: anewarray     #4                  // class java/lang/Object
        74: dup
        75: iconst_0
        76: getstatic     #245                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
        79: new           #209                // class org/sireum/String
        82: dup
        83: aload_0
        84: invokevirtual #172                // Method ruleName:()Ljava/lang/String;
        87: invokespecial #212                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        90: invokevirtual #248                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        93: aastore
        94: invokevirtual #252                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        97: invokevirtual #144                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       100: checkcast     #220                // class scala/collection/immutable/Seq
       103: ldc           #233                // String
       105: invokevirtual #255                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       108: aastore
       109: dup
       110: iconst_1
       111: getstatic     #258                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
       114: aload_0
       115: invokevirtual #134                // Method children:()Lorg/sireum/IS;
       118: invokedynamic #277,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       123: invokevirtual #281                // Method org/sireum/IS.map:(Lscala/Function1;)Lorg/sireum/IS;
       126: invokevirtual #284                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
       129: getstatic     #289                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       132: ldc_w         #291                // String ,
       135: invokevirtual #294                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       138: invokevirtual #297                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       141: aastore
       142: checkcast     #197                // class "[Ljava/lang/Object;"
       145: invokevirtual #138                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       148: invokevirtual #144                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       151: checkcast     #220                // class scala/collection/immutable/Seq
       154: ldc_w         #299                // String                                         st\"\"\"$ruleName(${(for (child <- children) yield child.toST, \", \")})\"\"\"
       157: invokevirtual #302                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       160: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     161     0  this   Lorg/sireum/parser/ParseTree$Node;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #305                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$Node;

  public static final org.sireum.ST $anonfun$toST$1(org.sireum.parser.ParseTree);
    descriptor: (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #308,  1          // InterfaceMethod org/sireum/parser/ParseTree.toST:()Lorg/sireum/ST;
         6: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 child   Lorg/sireum/parser/ParseTree;
    MethodParameters:
      Name                           Flags
      child                          final

  public org.sireum.parser.ParseTree$Node(org.sireum.IS<org.sireum.Z, org.sireum.parser.ParseTree>, java.lang.String, int);
    descriptor: (Lorg/sireum/IS;Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #316                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #320                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
         8: aload_0
         9: invokestatic  #323                // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        12: aload_0
        13: invokestatic  #326                // InterfaceMethod org/sireum/DatatypeSig.$init$:(Lorg/sireum/DatatypeSig;)V
        16: aload_0
        17: invokestatic  #329                // InterfaceMethod org/sireum/parser/ParseTree.$init$:(Lorg/sireum/parser/ParseTree;)V
        20: aload_0
        21: aload_1
        22: putfield      #84                 // Field _children:Lorg/sireum/IS;
        25: aload_0
        26: aload_2
        27: putfield      #89                 // Field _ruleName:Ljava/lang/String;
        30: aload_0
        31: iload_3
        32: putfield      #94                 // Field _tipe:I
        35: return
      LineNumberTable:
        line 60: 0
        line 58: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lorg/sireum/parser/ParseTree$Node;
            0      36     1 __children   Lorg/sireum/IS;
            0      36     2 __ruleName   Ljava/lang/String;
            0      36     3 __tipe   I
    Signature: #310                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/parser/ParseTree;>;Ljava/lang/String;I)V
    MethodParameters:
      Name                           Flags
      __children                     final
      __ruleName                     final
      __tipe                         final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #341,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #17= #14 of #16;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #20= #19 of #16;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #23= #22 of #16;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #26= #25 of #16;    // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #29= #28 of #16;          // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
  public static final #30= #2 of #6;      // Node=class org/sireum/parser/ParseTree$Node of class org/sireum/parser/ParseTree
SourceFile: "ParseTree.scala"
BootstrapMethods:
  0: #274 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #259 (Ljava/lang/Object;)Ljava/lang/Object;
      #264 REF_invokeStatic org/sireum/parser/ParseTree$Node.$anonfun$toST$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
      #265 (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
      #266 5
      #267 1
      #265 (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  1: #338 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #264 REF_invokeStatic org/sireum/parser/ParseTree$Node.$anonfun$toST$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 01 04 01 05 01 00 36 00 37 01 00 48
   01 2F 01 00 48 00 49 01 00 21 00 B1 01 00 B0 00
   B1 01 00 3E 00 3F 01 00 44 00 3F 01 00 A5 00 A6
   01 00 8D 00 A3 01 00 A9 00 51 01 00 AA 00 57 01
   00 AD 00 5C 01 00 50 00 51 01 00 9A 00 9B 01 00
   55 00 51 01 00 5A 00 57 01 00 5F 00 5C 01 00 2C
   00 2D 01 00 1F 00 5C 01 00 66 00 5C 01 00 56 00
   57 01 00 65 00 57 01 00 5B 00 5C 01 00 E1 00 E2
   01 00 60 00 57 01
  Scala: length = 0x0 (unknown attribute)

