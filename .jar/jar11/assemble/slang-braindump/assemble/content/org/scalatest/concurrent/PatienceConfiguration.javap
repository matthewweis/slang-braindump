Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/concurrent/PatienceConfiguration.class
  Last modified May 29, 2022; size 5507 bytes
  SHA-256 checksum 5bdb5900ad6db1c7fb5e056bc4b5ce20931fd5502091e69862a3b302e68fba81
  Compiled from "PatienceConfiguration.scala"
public interface org.scalatest.concurrent.PatienceConfiguration extends org.scalatest.concurrent.AbstractPatienceConfiguration
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // org/scalatest/concurrent/PatienceConfiguration
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 9, attributes: 5
Constant pool:
   #1 = Utf8               org/scalatest/concurrent/PatienceConfiguration
   #2 = Class              #1             // org/scalatest/concurrent/PatienceConfiguration
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               org/scalatest/concurrent/AbstractPatienceConfiguration
   #6 = Class              #5             // org/scalatest/concurrent/AbstractPatienceConfiguration
   #7 = Utf8               PatienceConfiguration.scala
   #8 = Utf8               Lscala/reflect/ScalaSignature;
   #9 = Utf8               bytes
  #10 = Utf8               \u0006\u0005\u0005UhaB\u001c9!\u0003\r\ta\u0010\u0005\u0006\u0015\u0002!\ta\u0013\u0005\b\u001f\u0002\u0011\r\u0011\"\u0003Q\u0011\u0015)\u0006\u0001b\u0001Q\u0011\u00151\u0006\u0001\"\u0001X\u0011\u001d\ti\u000f\u0001C\u0001\u0003_<QA\u0017\u001d\t\u0002m3Qa\u000e\u001d\t\u0002qCQ!X\u0004\u0005\u0002y3QaX\u0004\u0002\"\u0001DQ!X\u0005\u0005\u0002A4a!a \b\u0005\u0006\u0005\u0005\u0002\u0003<\f\u0005+\u0007I\u0011A<\t\u0011y\\!\u0011#Q\u0001\naDa!X\u0006\u0005\u0002\u0005\r\u0005\"CA\u0003\u0017\u0005\u0005I\u0011AAE\u0011%\tYaCI\u0001\n\u0003\ti\u0001C\u0005\u0002$-\t\t\u0011\"\u0011\u0002&!I\u0011qG\u0006\u0002\u0002\u0013\u0005\u0011\u0011\b\u0005\n\u0003\u0003Z\u0011\u0011!C\u0001\u0003\u001bC\u0011\"a\u0014\f\u0003\u0003%\t%!\u0015\t\u0013\u0005}3\"!A\u0005\u0002\u0005E\u0005\"CA6\u0017\u0005\u0005I\u0011IAK\u0011%\t\thCA\u0001\n\u0003\n\u0019\bC\u0005\u0002v-\t\t\u0011\"\u0011\u0002x!I\u0011\u0011P\u0006\u0002\u0002\u0013\u0005\u0013\u0011T\u0004\n\u0003;;\u0011\u0011!E\u0001\u0003?3\u0011\"a \b\u0003\u0003E\t!!)\t\ru[B\u0011AA]\u0011%\t)hGA\u0001\n\u000b\n9\bC\u0005\u0002<n\t\t\u0011\"!\u0002>\"I\u0011\u0011Y\u000e\u0002\u0002\u0013\u0005\u00151\u0019\u0005\n\u0003\u001f\\\u0012\u0011!C\u0005\u0003#4A\u0001^\u0004Ck\"Aa/\tBK\u0002\u0013\u0005q\u000f\u0003\u0005\u007fC\tE\t\u0015!\u0003y\u0011\u0015i\u0016\u0005\"\u0001\u0000\u0011%\t)!IA\u0001\n\u0003\t9\u0001C\u0005\u0002\f\u0005\n\n\u0011\"\u0001\u0002\u000e!I\u00111E\u0011\u0002\u0002\u0013\u0005\u0013Q\u0005\u0005\n\u0003o\t\u0013\u0011!C\u0001\u0003sA\u0011\"!\u0011\"\u0003\u0003%\t!a\u0011\t\u0013\u0005=\u0013%!A\u0005B\u0005E\u0003\"CA0C\u0005\u0005I\u0011AA1\u0011%\tY\'IA\u0001\n\u0003\ni\u0007C\u0005\u0002r\u0005\n\t\u0011\"\u0011\u0002t!I\u0011QO\u0011\u0002\u0002\u0013\u0005\u0013q\u000f\u0005\n\u0003s\n\u0013\u0011!C!\u0003w:\u0011\"!7\b\u0003\u0003E\t!a7\u0007\u0011Q<\u0011\u0011!E\u0001\u0003;Da!X\u0019\u0005\u0002\u0005\u0005\b\"CA;c\u0005\u0005IQIA<\u0011%\tY,MA\u0001\n\u0003\u000b\u0019\u000fC\u0005\u0002BF\n\t\u0011\"!\u0002h\"I\u0011qZ\u0019\u0002\u0002\u0013%\u0011\u0011\u001b\u0002\u0016!\u0006$\u0018.\u001a8dK\u000e{gNZ5hkJ\fG/[8o\u0015\tI$(\u0001\u0006d_:\u001cWO\u001d:f]RT!a\u000f\u001f\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\u001f\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0007\u0001\u0001e\t\u0005\u0002B\t6\t!IC\u0001D\u0003\u0015\u00198-\u00197b\u0013\t)%I\u0001\u0004B]f\u0014VM\u001a\t\u0003\u000f\"k\u0011\u0001O\u0005\u0003\u0013b\u0012Q$\u00112tiJ\f7\r\u001e)bi&,gnY3D_:4\u0017nZ;sCRLwN\\\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u00031\u0003\"!Q\'\n\u00059\u0013%\u0001B+oSR\fQ\u0003Z3gCVdG\u000fU1uS\u0016t7-Z\"p]\u001aLw-F\u0001R!\t\u00116+D\u0001\u0001\u0013\t!\u0006J\u0001\bQCRLWM\\2f\u0007>tg-[4\u0002\u001dA\fG/[3oG\u0016\u001cuN\u001c4jO\u00069A/[7f_V$Hc\u0001-\u0002lB\u0011\u0011l\u0003\b\u0003\u000f\u001a\tQ\u0003U1uS\u0016t7-Z\"p]\u001aLw-\u001e:bi&|g\u000e\u0005\u0002H\u000fM\u0011q\u0001Q\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003m\u00131\u0003U1uS\u0016t7-Z\"p]\u001aLw\rU1sC6\u001cB!\u0003!bIB\u0011\u0011IY\u0005\u0003G\n\u0013q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002f[:\u0011am\u001b\b\u0003O*l\u0011\u0001\u001b\u0006\u0003Sz\na\u0001\u0010:p_Rt\u0014\"A\"\n\u00051\u0014\u0015a\u00029bG.\fw-Z\u0005\u0003]>\u0014AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001\u001c\"\u0015\u0003E\u0004\"A]\u0005\u000e\u0003\u001dI3!C\u0011\f\u0005!Ie\u000e^3sm\u0006d7\u0003B\u0011rC\u0012\fQA^1mk\u0016,\u0012\u0001\u001f\t\u0003srl\u0011A\u001f\u0006\u0003wj\nA\u0001^5nK&\u0011QP\u001f\u0002\u0005\'B\fg.\u0001\u0004wC2,X\r\t\u000b\u0005\u0003\u0003\t\u0019\u0001\u0005\u0002sC!)a\u000f\na\u0001q\u0006!1m\u001c9z)\u0011\t\t!!\u0003\t\u000fY,\u0003\u0013!a\u0001q\u0006q1m\u001c9zI\u0011,g-Y;mi\u0012\nTCAA\bU\rA\u0018\u0011C\u0016\u0003\u0003\'\u0001B!!\u0006\u0002 5\u0011\u0011q\u0003\u0006\u0005\u00033\tY\"A\u0005v]\u000eDWmY6fI*\u0019\u0011Q\u0004\"\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0003\u0002\"\u0005]!!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u0006i\u0001O]8ek\u000e$\bK]3gSb,\"!a\n\u0011\t\u0005%\u00121G\u0007\u0003\u0003WQA!!\f\u00020\u0005!A.\u00198h\u0015\t\t\t$\u0001\u0003kCZ\f\u0017\u0002BA\u001b\u0003W\u0011aa\u0015;sS:<\u0017\u0001\u00049s_\u0012,8\r^!sSRLXCAA\u001e!\r\t\u0015QH\u0005\u0004\u0003\u007f\u0011%aA%oi\u0006q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BA#\u0003\u0017\u00022!QA$\u0013\r\tIE\u0011\u0002\u0004\u0003:L\b\"CA\'S\u0005\u0005\t\u0019AA\u001e\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\u0011\u00111\u000b\t\u0007\u0003+\nY&!\u0012\u000e\u0005\u0005]#bAA-\u0005\u0006Q1m\u001c7mK\u000e$\u0018n\u001c8\n\t\u0005u\u0013q\u000b\u0002\t\u0013R,\'/\u0019;pe\u0006A1-\u00198FcV\fG\u000e\u0006\u0003\u0002d\u0005%\u0004cA!\u0002f%\u0019\u0011q\r\"\u0003\u000f\t{w\u000e\\3b]\"I\u0011QJ\u0016\u0002\u0002\u0003\u0007\u0011QI\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0002(\u0005=\u0004\"CA\'Y\u0005\u0005\t\u0019AA\u001e\u0003!A\u0017m\u001d5D_\u0012,GCAA\u001e\u0003!!xn\u0015;sS:<GCAA\u0014\u0003\u0019)\u0017/^1mgR!\u00111MA?\u0011%\tieLA\u0001\u0002\u0004\t)EA\u0004US6,w.\u001e;\u0014\t-\t\u0018\r\u001a\u000b\u0005\u0003\u000b\u000b9\t\u0005\u0002s\u0017!)aO\u0004a\u0001qR!\u0011QQAF\u0011\u001d1x\u0002%AA\u0002a$B!!\u0012\u0002\u0010\"I\u0011QJ\n\u0002\u0002\u0003\u0007\u00111\b\u000b\u0005\u0003G\n\u0019\nC\u0005\u0002NU\t\t\u00111\u0001\u0002FQ!\u0011qEAL\u0011%\tiEFA\u0001\u0002\u0004\tY\u0004\u0006\u0003\u0002d\u0005m\u0005\"CA\'3\u0005\u0005\t\u0019AA#\u0003\u001d!\u0016.\\3pkR\u0004\"A]\u000e\u0014\u000bm\t\u0019+a,\u0011\u000f\u0005\u0015\u00161\u0016=\u0002\u00066\u0011\u0011q\u0015\u0006\u0004\u0003S\u0013\u0015a\u0002:v]RLW.Z\u0005\u0005\u0003[\u000b9KA\tBEN$(/Y2u\rVt7\r^5p]F\u0002B!!-\u000286\u0011\u00111\u0017\u0006\u0005\u0003k\u000by#\u0001\u0002j_&\u0019a.a-\u0015\u0005\u0005}\u0015!B1qa2LH\u0003BAC\u0003\u007fCQA\u001e\u0010A\u0002a\fq!\u001e8baBd\u0017\u0010\u0006\u0003\u0002F\u0006-\u0007\u0003B!\u0002HbL1!!3C\u0005\u0019y\u0005\u000f^5p]\"I\u0011QZ\u0010\u0002\u0002\u0003\u0007\u0011QQ\u0001\u0004q\u0012\u0002\u0014\u0001D<sSR,\'+\u001a9mC\u000e,GCAAj!\u0011\tI#!6\n\t\u0005]\u00171\u0006\u0002\u0007\u001f\nTWm\u0019;\u0002\u0011%sG/\u001a:wC2\u0004\"A]\u0019\u0014\u000bE\ny.a,\u0011\u000f\u0005\u0015\u00161\u0016=\u0002\u0002Q\u0011\u00111\u001c\u000b\u0005\u0003\u0003\t)\u000fC\u0003wi\u0001\u0007\u0001\u0010\u0006\u0003\u0002F\u0006%\b\"CAgk\u0005\u0005\t\u0019AA\u0001\u0011\u00151H\u00011\u0001y\u0003!Ig\u000e^3sm\u0006dG\u0003BAy\u0003g\u0004\"!W\u0011\t\u000bY,\u0001\u0019\u0001=
  #11 = Utf8               org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig
  #12 = Class              #11            // org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig
  #13 = Utf8               PatienceConfig
  #14 = Utf8               org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$
  #15 = Class              #14            // org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$
  #16 = Utf8               PatienceConfig$
  #17 = Utf8               org/scalatest/concurrent/PatienceConfiguration$Interval
  #18 = Class              #17            // org/scalatest/concurrent/PatienceConfiguration$Interval
  #19 = Utf8               Interval
  #20 = Utf8               org/scalatest/concurrent/PatienceConfiguration$Interval$
  #21 = Class              #20            // org/scalatest/concurrent/PatienceConfiguration$Interval$
  #22 = Utf8               Interval$
  #23 = Utf8               org/scalatest/concurrent/PatienceConfiguration$PatienceConfigParam
  #24 = Class              #23            // org/scalatest/concurrent/PatienceConfiguration$PatienceConfigParam
  #25 = Utf8               PatienceConfigParam
  #26 = Utf8               org/scalatest/concurrent/PatienceConfiguration$Timeout
  #27 = Class              #26            // org/scalatest/concurrent/PatienceConfiguration$Timeout
  #28 = Utf8               Timeout
  #29 = Utf8               org/scalatest/concurrent/PatienceConfiguration$Timeout$
  #30 = Class              #29            // org/scalatest/concurrent/PatienceConfiguration$Timeout$
  #31 = Utf8               Timeout$
  #32 = Utf8               org$scalatest$concurrent$PatienceConfiguration$_setter_$org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig_$eq
  #33 = Utf8               (Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;)V
  #34 = Utf8               x$1
  #35 = Utf8               org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig
  #36 = Utf8               ()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #37 = Utf8               patienceConfig$
  #38 = Utf8               (Lorg/scalatest/concurrent/PatienceConfiguration;)Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #39 = Utf8               $this
  #40 = Utf8               patienceConfig
  #41 = NameAndType        #40:#36        // patienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #42 = InterfaceMethodref #2.#41         // org/scalatest/concurrent/PatienceConfiguration.patienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #43 = Utf8               Lorg/scalatest/concurrent/PatienceConfiguration;
  #44 = NameAndType        #35:#36        // org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #45 = InterfaceMethodref #2.#44         // org/scalatest/concurrent/PatienceConfiguration.org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
  #46 = Utf8               this
  #47 = Utf8               timeout$
  #48 = Utf8               (Lorg/scalatest/concurrent/PatienceConfiguration;Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
  #49 = Utf8               value
  #50 = Utf8               timeout
  #51 = Utf8               (Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
  #52 = NameAndType        #50:#51        // timeout:(Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
  #53 = InterfaceMethodref #2.#52         // org/scalatest/concurrent/PatienceConfiguration.timeout:(Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
  #54 = Utf8               Lorg/scalatest/time/Span;
  #55 = Utf8               <init>
  #56 = Utf8               (Lorg/scalatest/time/Span;)V
  #57 = NameAndType        #55:#56        // "<init>":(Lorg/scalatest/time/Span;)V
  #58 = Methodref          #27.#57        // org/scalatest/concurrent/PatienceConfiguration$Timeout."<init>":(Lorg/scalatest/time/Span;)V
  #59 = Utf8               interval$
  #60 = Utf8               (Lorg/scalatest/concurrent/PatienceConfiguration;Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
  #61 = Utf8               interval
  #62 = Utf8               (Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
  #63 = NameAndType        #61:#62        // interval:(Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
  #64 = InterfaceMethodref #2.#63         // org/scalatest/concurrent/PatienceConfiguration.interval:(Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
  #65 = Methodref          #18.#57        // org/scalatest/concurrent/PatienceConfiguration$Interval."<init>":(Lorg/scalatest/time/Span;)V
  #66 = Utf8               $init$
  #67 = Utf8               (Lorg/scalatest/concurrent/PatienceConfiguration;)V
  #68 = Utf8               ()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$;
  #69 = NameAndType        #13:#68        // PatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$;
  #70 = InterfaceMethodref #2.#69         // org/scalatest/concurrent/PatienceConfiguration.PatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$;
  #71 = Utf8               apply$default$1
  #72 = Utf8               ()Lorg/scalatest/time/Span;
  #73 = NameAndType        #71:#72        // apply$default$1:()Lorg/scalatest/time/Span;
  #74 = Methodref          #15.#73        // org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$.apply$default$1:()Lorg/scalatest/time/Span;
  #75 = Utf8               apply$default$2
  #76 = NameAndType        #75:#72        // apply$default$2:()Lorg/scalatest/time/Span;
  #77 = Methodref          #15.#76        // org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$.apply$default$2:()Lorg/scalatest/time/Span;
  #78 = Utf8               (Lorg/scalatest/concurrent/AbstractPatienceConfiguration;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
  #79 = NameAndType        #55:#78        // "<init>":(Lorg/scalatest/concurrent/AbstractPatienceConfiguration;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
  #80 = Methodref          #12.#79        // org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig."<init>":(Lorg/scalatest/concurrent/AbstractPatienceConfiguration;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
  #81 = NameAndType        #32:#33        // org$scalatest$concurrent$PatienceConfiguration$_setter_$org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig_$eq:(Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;)V
  #82 = InterfaceMethodref #2.#81         // org/scalatest/concurrent/PatienceConfiguration.org$scalatest$concurrent$PatienceConfiguration$_setter_$org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig_$eq:(Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;)V
  #83 = Utf8               MethodParameters
  #84 = Utf8               Code
  #85 = Utf8               LineNumberTable
  #86 = Utf8               LocalVariableTable
  #87 = Utf8               InnerClasses
  #88 = Utf8               SourceFile
  #89 = Utf8               RuntimeVisibleAnnotations
  #90 = Utf8               ScalaInlineInfo
  #91 = Utf8               ScalaSig
{
  public abstract void org$scalatest$concurrent$PatienceConfiguration$_setter_$org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig_$eq(org.scalatest.concurrent.AbstractPatienceConfiguration$PatienceConfig);
    descriptor: (Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract org.scalatest.concurrent.AbstractPatienceConfiguration$PatienceConfig org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig();
    descriptor: ()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static org.scalatest.concurrent.AbstractPatienceConfiguration$PatienceConfig patienceConfig$(org.scalatest.concurrent.PatienceConfiguration);
    descriptor: (Lorg/scalatest/concurrent/PatienceConfiguration;)Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #42                 // InterfaceMethod patienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
         4: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lorg/scalatest/concurrent/PatienceConfiguration;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default org.scalatest.concurrent.AbstractPatienceConfiguration$PatienceConfig patienceConfig();
    descriptor: ()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #45,  1           // InterfaceMethod org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;
         6: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/scalatest/concurrent/PatienceConfiguration;

  public static org.scalatest.concurrent.PatienceConfiguration$Timeout timeout$(org.scalatest.concurrent.PatienceConfiguration, org.scalatest.time.Span);
    descriptor: (Lorg/scalatest/concurrent/PatienceConfiguration;Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #53                 // InterfaceMethod timeout:(Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
         5: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/PatienceConfiguration;
            0       6     1 value   Lorg/scalatest/time/Span;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      value                          final

  public default org.scalatest.concurrent.PatienceConfiguration$Timeout timeout(org.scalatest.time.Span);
    descriptor: (Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Timeout;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #27                 // class org/scalatest/concurrent/PatienceConfiguration$Timeout
         3: dup
         4: aload_1
         5: invokespecial #58                 // Method org/scalatest/concurrent/PatienceConfiguration$Timeout."<init>":(Lorg/scalatest/time/Span;)V
         8: areturn
      LineNumberTable:
        line 101: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalatest/concurrent/PatienceConfiguration;
            0       9     1 value   Lorg/scalatest/time/Span;
    MethodParameters:
      Name                           Flags
      value                          final

  public static org.scalatest.concurrent.PatienceConfiguration$Interval interval$(org.scalatest.concurrent.PatienceConfiguration, org.scalatest.time.Span);
    descriptor: (Lorg/scalatest/concurrent/PatienceConfiguration;Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #64                 // InterfaceMethod interval:(Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
         5: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lorg/scalatest/concurrent/PatienceConfiguration;
            0       6     1 value   Lorg/scalatest/time/Span;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      value                          final

  public default org.scalatest.concurrent.PatienceConfiguration$Interval interval(org.scalatest.time.Span);
    descriptor: (Lorg/scalatest/time/Span;)Lorg/scalatest/concurrent/PatienceConfiguration$Interval;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #18                 // class org/scalatest/concurrent/PatienceConfiguration$Interval
         3: dup
         4: aload_1
         5: invokespecial #65                 // Method org/scalatest/concurrent/PatienceConfiguration$Interval."<init>":(Lorg/scalatest/time/Span;)V
         8: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/scalatest/concurrent/PatienceConfiguration;
            0       9     1 value   Lorg/scalatest/time/Span;
    MethodParameters:
      Name                           Flags
      value                          final

  public static void $init$(org.scalatest.concurrent.PatienceConfiguration);
    descriptor: (Lorg/scalatest/concurrent/PatienceConfiguration;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=1, args_size=1
         0: aload_0
         1: new           #12                 // class org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig
         4: dup
         5: aload_0
         6: aload_0
         7: invokeinterface #70,  1           // InterfaceMethod PatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$;
        12: invokevirtual #74                 // Method org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$.apply$default$1:()Lorg/scalatest/time/Span;
        15: aload_0
        16: invokeinterface #70,  1           // InterfaceMethod PatienceConfig:()Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$;
        21: invokevirtual #77                 // Method org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$.apply$default$2:()Lorg/scalatest/time/Span;
        24: invokespecial #80                 // Method org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig."<init>":(Lorg/scalatest/concurrent/AbstractPatienceConfiguration;Lorg/scalatest/time/Span;Lorg/scalatest/time/Span;)V
        27: invokeinterface #82,  2           // InterfaceMethod org$scalatest$concurrent$PatienceConfiguration$_setter_$org$scalatest$concurrent$PatienceConfiguration$$defaultPatienceConfig_$eq:(Lorg/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig;)V
        32: return
      LineNumberTable:
        line 85: 0
        line 83: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 $this   Lorg/scalatest/concurrent/PatienceConfiguration;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
}
InnerClasses:
  public final #13= #12 of #6;            // PatienceConfig=class org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig of class org/scalatest/concurrent/AbstractPatienceConfiguration
  public #16= #15 of #6;                  // PatienceConfig$=class org/scalatest/concurrent/AbstractPatienceConfiguration$PatienceConfig$ of class org/scalatest/concurrent/AbstractPatienceConfiguration
  public static final #19= #18 of #2;     // Interval=class org/scalatest/concurrent/PatienceConfiguration$Interval of class org/scalatest/concurrent/PatienceConfiguration
  public static #22= #21 of #2;           // Interval$=class org/scalatest/concurrent/PatienceConfiguration$Interval$ of class org/scalatest/concurrent/PatienceConfiguration
  public static abstract #25= #24 of #2;  // PatienceConfigParam=class org/scalatest/concurrent/PatienceConfiguration$PatienceConfigParam of class org/scalatest/concurrent/PatienceConfiguration
  public static final #28= #27 of #2;     // Timeout=class org/scalatest/concurrent/PatienceConfiguration$Timeout of class org/scalatest/concurrent/PatienceConfiguration
  public static #31= #30 of #2;           // Timeout$=class org/scalatest/concurrent/PatienceConfiguration$Timeout$ of class org/scalatest/concurrent/PatienceConfiguration
SourceFile: "PatienceConfiguration.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005UhaB\u001c9!\u0003\r\ta\u0010\u0005\u0006\u0015\u0002!\ta\u0013\u0005\b\u001f\u0002\u0011\r\u0011\"\u0003Q\u0011\u0015)\u0006\u0001b\u0001Q\u0011\u00151\u0006\u0001\"\u0001X\u0011\u001d\ti\u000f\u0001C\u0001\u0003_<QA\u0017\u001d\t\u0002m3Qa\u000e\u001d\t\u0002qCQ!X\u0004\u0005\u0002y3QaX\u0004\u0002\"\u0001DQ!X\u0005\u0005\u0002A4a!a \b\u0005\u0006\u0005\u0005\u0002\u0003<\f\u0005+\u0007I\u0011A<\t\u0011y\\!\u0011#Q\u0001\naDa!X\u0006\u0005\u0002\u0005\r\u0005\"CA\u0003\u0017\u0005\u0005I\u0011AAE\u0011%\tYaCI\u0001\n\u0003\ti\u0001C\u0005\u0002$-\t\t\u0011\"\u0011\u0002&!I\u0011qG\u0006\u0002\u0002\u0013\u0005\u0011\u0011\b\u0005\n\u0003\u0003Z\u0011\u0011!C\u0001\u0003\u001bC\u0011\"a\u0014\f\u0003\u0003%\t%!\u0015\t\u0013\u0005}3\"!A\u0005\u0002\u0005E\u0005\"CA6\u0017\u0005\u0005I\u0011IAK\u0011%\t\thCA\u0001\n\u0003\n\u0019\bC\u0005\u0002v-\t\t\u0011\"\u0011\u0002x!I\u0011\u0011P\u0006\u0002\u0002\u0013\u0005\u0013\u0011T\u0004\n\u0003;;\u0011\u0011!E\u0001\u0003?3\u0011\"a \b\u0003\u0003E\t!!)\t\ru[B\u0011AA]\u0011%\t)hGA\u0001\n\u000b\n9\bC\u0005\u0002<n\t\t\u0011\"!\u0002>\"I\u0011\u0011Y\u000e\u0002\u0002\u0013\u0005\u00151\u0019\u0005\n\u0003\u001f\\\u0012\u0011!C\u0005\u0003#4A\u0001^\u0004Ck\"Aa/\tBK\u0002\u0013\u0005q\u000f\u0003\u0005\u007fC\tE\t\u0015!\u0003y\u0011\u0015i\u0016\u0005\"\u0001\u0000\u0011%\t)!IA\u0001\n\u0003\t9\u0001C\u0005\u0002\f\u0005\n\n\u0011\"\u0001\u0002\u000e!I\u00111E\u0011\u0002\u0002\u0013\u0005\u0013Q\u0005\u0005\n\u0003o\t\u0013\u0011!C\u0001\u0003sA\u0011\"!\u0011\"\u0003\u0003%\t!a\u0011\t\u0013\u0005=\u0013%!A\u0005B\u0005E\u0003\"CA0C\u0005\u0005I\u0011AA1\u0011%\tY\'IA\u0001\n\u0003\ni\u0007C\u0005\u0002r\u0005\n\t\u0011\"\u0011\u0002t!I\u0011QO\u0011\u0002\u0002\u0013\u0005\u0013q\u000f\u0005\n\u0003s\n\u0013\u0011!C!\u0003w:\u0011\"!7\b\u0003\u0003E\t!a7\u0007\u0011Q<\u0011\u0011!E\u0001\u0003;Da!X\u0019\u0005\u0002\u0005\u0005\b\"CA;c\u0005\u0005IQIA<\u0011%\tY,MA\u0001\n\u0003\u000b\u0019\u000fC\u0005\u0002BF\n\t\u0011\"!\u0002h\"I\u0011qZ\u0019\u0002\u0002\u0013%\u0011\u0011\u001b\u0002\u0016!\u0006$\u0018.\u001a8dK\u000e{gNZ5hkJ\fG/[8o\u0015\tI$(\u0001\u0006d_:\u001cWO\u001d:f]RT!a\u000f\u001f\u0002\u0013M\u001c\u0017\r\\1uKN$(\"A\u001f\u0002\u0007=\u0014xm\u0001\u0001\u0014\u0007\u0001\u0001e\t\u0005\u0002B\t6\t!IC\u0001D\u0003\u0015\u00198-\u00197b\u0013\t)%I\u0001\u0004B]f\u0014VM\u001a\t\u0003\u000f\"k\u0011\u0001O\u0005\u0003\u0013b\u0012Q$\u00112tiJ\f7\r\u001e)bi&,gnY3D_:4\u0017nZ;sCRLwN\\\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u00031\u0003\"!Q\'\n\u00059\u0013%\u0001B+oSR\fQ\u0003Z3gCVdG\u000fU1uS\u0016t7-Z\"p]\u001aLw-F\u0001R!\t\u00116+D\u0001\u0001\u0013\t!\u0006J\u0001\bQCRLWM\\2f\u0007>tg-[4\u0002\u001dA\fG/[3oG\u0016\u001cuN\u001c4jO\u00069A/[7f_V$Hc\u0001-\u0002lB\u0011\u0011l\u0003\b\u0003\u000f\u001a\tQ\u0003U1uS\u0016t7-Z\"p]\u001aLw-\u001e:bi&|g\u000e\u0005\u0002H\u000fM\u0011q\u0001Q\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003m\u00131\u0003U1uS\u0016t7-Z\"p]\u001aLw\rU1sC6\u001cB!\u0003!bIB\u0011\u0011IY\u0005\u0003G\n\u0013q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002f[:\u0011am\u001b\b\u0003O*l\u0011\u0001\u001b\u0006\u0003Sz\na\u0001\u0010:p_Rt\u0014\"A\"\n\u00051\u0014\u0015a\u00029bG.\fw-Z\u0005\u0003]>\u0014AbU3sS\u0006d\u0017N_1cY\u0016T!\u0001\u001c\"\u0015\u0003E\u0004\"A]\u0005\u000e\u0003\u001dI3!C\u0011\f\u0005!Ie\u000e^3sm\u0006d7\u0003B\u0011rC\u0012\fQA^1mk\u0016,\u0012\u0001\u001f\t\u0003srl\u0011A\u001f\u0006\u0003wj\nA\u0001^5nK&\u0011QP\u001f\u0002\u0005\'B\fg.\u0001\u0004wC2,X\r\t\u000b\u0005\u0003\u0003\t\u0019\u0001\u0005\u0002sC!)a\u000f\na\u0001q\u0006!1m\u001c9z)\u0011\t\t!!\u0003\t\u000fY,\u0003\u0013!a\u0001q\u0006q1m\u001c9zI\u0011,g-Y;mi\u0012\nTCAA\bU\rA\u0018\u0011C\u0016\u0003\u0003\'\u0001B!!\u0006\u0002 5\u0011\u0011q\u0003\u0006\u0005\u00033\tY\"A\u0005v]\u000eDWmY6fI*\u0019\u0011Q\u0004\"\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0003\u0002\"\u0005]!!E;oG\",7m[3e-\u0006\u0014\u0018.\u00198dK\u0006i\u0001O]8ek\u000e$\bK]3gSb,\"!a\n\u0011\t\u0005%\u00121G\u0007\u0003\u0003WQA!!\f\u00020\u0005!A.\u00198h\u0015\t\t\t$\u0001\u0003kCZ\f\u0017\u0002BA\u001b\u0003W\u0011aa\u0015;sS:<\u0017\u0001\u00049s_\u0012,8\r^!sSRLXCAA\u001e!\r\t\u0015QH\u0005\u0004\u0003\u007f\u0011%aA%oi\u0006q\u0001O]8ek\u000e$X\t\\3nK:$H\u0003BA#\u0003\u0017\u00022!QA$\u0013\r\tIE\u0011\u0002\u0004\u0003:L\b\"CA\'S\u0005\u0005\t\u0019AA\u001e\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\u0011\u00111\u000b\t\u0007\u0003+\nY&!\u0012\u000e\u0005\u0005]#bAA-\u0005\u0006Q1m\u001c7mK\u000e$\u0018n\u001c8\n\t\u0005u\u0013q\u000b\u0002\t\u0013R,\'/\u0019;pe\u0006A1-\u00198FcV\fG\u000e\u0006\u0003\u0002d\u0005%\u0004cA!\u0002f%\u0019\u0011q\r\"\u0003\u000f\t{w\u000e\\3b]\"I\u0011QJ\u0016\u0002\u0002\u0003\u0007\u0011QI\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0002(\u0005=\u0004\"CA\'Y\u0005\u0005\t\u0019AA\u001e\u0003!A\u0017m\u001d5D_\u0012,GCAA\u001e\u0003!!xn\u0015;sS:<GCAA\u0014\u0003\u0019)\u0017/^1mgR!\u00111MA?\u0011%\tieLA\u0001\u0002\u0004\t)EA\u0004US6,w.\u001e;\u0014\t-\t\u0018\r\u001a\u000b\u0005\u0003\u000b\u000b9\t\u0005\u0002s\u0017!)aO\u0004a\u0001qR!\u0011QQAF\u0011\u001d1x\u0002%AA\u0002a$B!!\u0012\u0002\u0010\"I\u0011QJ\n\u0002\u0002\u0003\u0007\u00111\b\u000b\u0005\u0003G\n\u0019\nC\u0005\u0002NU\t\t\u00111\u0001\u0002FQ!\u0011qEAL\u0011%\tiEFA\u0001\u0002\u0004\tY\u0004\u0006\u0003\u0002d\u0005m\u0005\"CA\'3\u0005\u0005\t\u0019AA#\u0003\u001d!\u0016.\\3pkR\u0004\"A]\u000e\u0014\u000bm\t\u0019+a,\u0011\u000f\u0005\u0015\u00161\u0016=\u0002\u00066\u0011\u0011q\u0015\u0006\u0004\u0003S\u0013\u0015a\u0002:v]RLW.Z\u0005\u0005\u0003[\u000b9KA\tBEN$(/Y2u\rVt7\r^5p]F\u0002B!!-\u000286\u0011\u00111\u0017\u0006\u0005\u0003k\u000by#\u0001\u0002j_&\u0019a.a-\u0015\u0005\u0005}\u0015!B1qa2LH\u0003BAC\u0003\u007fCQA\u001e\u0010A\u0002a\fq!\u001e8baBd\u0017\u0010\u0006\u0003\u0002F\u0006-\u0007\u0003B!\u0002HbL1!!3C\u0005\u0019y\u0005\u000f^5p]\"I\u0011QZ\u0010\u0002\u0002\u0003\u0007\u0011QQ\u0001\u0004q\u0012\u0002\u0014\u0001D<sSR,\'+\u001a9mC\u000e,GCAAj!\u0011\tI#!6\n\t\u0005]\u00171\u0006\u0002\u0007\u001f\nTWm\u0019;\u0002\u0011%sG/\u001a:wC2\u0004\"A]\u0019\u0014\u000bE\ny.a,\u0011\u000f\u0005\u0015\u00161\u0016=\u0002\u0002Q\u0011\u00111\u001c\u000b\u0005\u0003\u0003\t)\u000fC\u0003wi\u0001\u0007\u0001\u0010\u0006\u0003\u0002F\u0006%\b\"CAgk\u0005\u0005\t\u0019AA\u0001\u0011\u00151H\u00011\u0001y\u0003!Ig\u000e^3sm\u0006dG\u0003BAy\u0003g\u0004\"!W\u0011\t\u000bY,\u0001\u0019\u0001="
    )
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 42 00 43 01 00 3D 00 3E 00 00 3B
   00 3C 01 00 23 00 24 00 00 20 00 21 00 00 28 00
   24 00 00 25 00 26 01 00 32 00 33 00 00 2F 00 30
   01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
