Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1.class
  Last modified May 29, 2022; size 4386 bytes
  SHA-256 checksum 8041ba12f890c13cbb53d0ad56abc5258bb88f61b2f9a3bc6b58ae90006ceef0
  Compiled from "MacroImpls.scala"
public final class coursier.core.shaded.fastparse.internal.MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1 extends scala.runtime.AbstractPartialFunction<scala.util.Either<java.lang.Object, scala.Tuple2<java.lang.Object, java.lang.Object>>, scala.reflect.api.Trees$CaseDefApi> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 2, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1
    #2 = Class              #1            // coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1
    #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Lscala/util/Either<Ljava/lang/Object;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;Lscala/reflect/api/Trees$CaseDefApi;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractPartialFunction
    #5 = Class              #4            // scala/runtime/AbstractPartialFunction
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               MacroImpls.scala
    #9 = Utf8               coursier/core/shaded/fastparse/internal/MacroImpls$
   #10 = Class              #9            // coursier/core/shaded/fastparse/internal/MacroImpls$
   #11 = Utf8               parseCharCls
   #12 = Utf8               (Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/collection/immutable/Seq;)Lscala/reflect/api/Exprs$Expr;
   #13 = NameAndType        #11:#12       // parseCharCls:(Lscala/reflect/macros/blackbox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/collection/immutable/Seq;)Lscala/reflect/api/Exprs$Expr;
   #14 = Utf8               scala/reflect/api/Constants$ConstantApi
   #15 = Class              #14           // scala/reflect/api/Constants$ConstantApi
   #16 = Utf8               scala/reflect/api/Constants
   #17 = Class              #16           // scala/reflect/api/Constants
   #18 = Utf8               ConstantApi
   #19 = Utf8               scala/reflect/api/Constants$ConstantExtractor
   #20 = Class              #19           // scala/reflect/api/Constants$ConstantExtractor
   #21 = Utf8               ConstantExtractor
   #22 = Utf8               scala/reflect/api/Liftables$Liftable
   #23 = Class              #22           // scala/reflect/api/Liftables$Liftable
   #24 = Utf8               scala/reflect/api/Liftables
   #25 = Class              #24           // scala/reflect/api/Liftables
   #26 = Utf8               Liftable
   #27 = Utf8               scala/reflect/api/Liftables$Liftable$
   #28 = Class              #27           // scala/reflect/api/Liftables$Liftable$
   #29 = Utf8
   #30 = Utf8               scala/reflect/api/Trees$CaseDefApi
   #31 = Class              #30           // scala/reflect/api/Trees$CaseDefApi
   #32 = Utf8               scala/reflect/api/Trees
   #33 = Class              #32           // scala/reflect/api/Trees
   #34 = Utf8               CaseDefApi
   #35 = Utf8               scala/reflect/api/Trees$CaseDefExtractor
   #36 = Class              #35           // scala/reflect/api/Trees$CaseDefExtractor
   #37 = Utf8               CaseDefExtractor
   #38 = Utf8               scala/reflect/api/Trees$LiteralApi
   #39 = Class              #38           // scala/reflect/api/Trees$LiteralApi
   #40 = Utf8               LiteralApi
   #41 = Utf8               scala/reflect/api/Trees$LiteralExtractor
   #42 = Class              #41           // scala/reflect/api/Trees$LiteralExtractor
   #43 = Utf8               LiteralExtractor
   #44 = Utf8               scala/reflect/api/Trees$TreeApi
   #45 = Class              #44           // scala/reflect/api/Trees$TreeApi
   #46 = Utf8               TreeApi
   #47 = Utf8               serialVersionUID
   #48 = Utf8               J
   #49 = Long               0l
   #51 = Utf8               c$3
   #52 = Utf8               Lscala/reflect/macros/blackbox/Context;
   #53 = Utf8               applyOrElse
   #54 = Utf8               (Lscala/util/Either;Lscala/Function1;)Ljava/lang/Object;
   #55 = Utf8               <A1:Lscala/util/Either<Ljava/lang/Object;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #56 = Utf8               x1
   #57 = Utf8               default
   #58 = Utf8               scala/util/Left
   #59 = Class              #58           // scala/util/Left
   #60 = Utf8               value
   #61 = Utf8               ()Ljava/lang/Object;
   #62 = NameAndType        #60:#61       // value:()Ljava/lang/Object;
   #63 = Methodref          #59.#62       // scala/util/Left.value:()Ljava/lang/Object;
   #64 = Utf8               scala/runtime/BoxesRunTime
   #65 = Class              #64           // scala/runtime/BoxesRunTime
   #66 = Utf8               unboxToChar
   #67 = Utf8               (Ljava/lang/Object;)C
   #68 = NameAndType        #66:#67       // unboxToChar:(Ljava/lang/Object;)C
   #69 = Methodref          #65.#68       // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
   #70 = NameAndType        #51:#52       // c$3:Lscala/reflect/macros/blackbox/Context;
   #71 = Fieldref           #2.#70        // coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1.c$3:Lscala/reflect/macros/blackbox/Context;
   #72 = Utf8               scala/reflect/macros/blackbox/Context
   #73 = Class              #72           // scala/reflect/macros/blackbox/Context
   #74 = Utf8               universe
   #75 = Utf8               ()Lscala/reflect/macros/Universe;
   #76 = NameAndType        #74:#75       // universe:()Lscala/reflect/macros/Universe;
   #77 = InterfaceMethodref #73.#76       // scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
   #78 = Utf8               scala/reflect/macros/Universe
   #79 = Class              #78           // scala/reflect/macros/Universe
   #80 = Utf8               CaseDef
   #81 = Utf8               ()Lscala/reflect/api/Trees$CaseDefExtractor;
   #82 = NameAndType        #80:#81       // CaseDef:()Lscala/reflect/api/Trees$CaseDefExtractor;
   #83 = Methodref          #79.#82       // scala/reflect/macros/Universe.CaseDef:()Lscala/reflect/api/Trees$CaseDefExtractor;
   #84 = Utf8               ()Lscala/reflect/api/Liftables$Liftable$;
   #85 = NameAndType        #26:#84       // Liftable:()Lscala/reflect/api/Liftables$Liftable$;
   #86 = Methodref          #79.#85       // scala/reflect/macros/Universe.Liftable:()Lscala/reflect/api/Liftables$Liftable$;
   #87 = Utf8               liftChar
   #88 = Utf8               ()Lscala/reflect/api/Liftables$Liftable;
   #89 = NameAndType        #87:#88       // liftChar:()Lscala/reflect/api/Liftables$Liftable;
   #90 = Methodref          #28.#89       // scala/reflect/api/Liftables$Liftable$.liftChar:()Lscala/reflect/api/Liftables$Liftable;
   #91 = Utf8               boxToCharacter
   #92 = Utf8               (C)Ljava/lang/Character;
   #93 = NameAndType        #91:#92       // boxToCharacter:(C)Ljava/lang/Character;
   #94 = Methodref          #65.#93       // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
   #95 = Utf8               apply
   #96 = Utf8               (Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
   #97 = NameAndType        #95:#96       // apply:(Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
   #98 = InterfaceMethodref #23.#97       // scala/reflect/api/Liftables$Liftable.apply:(Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
   #99 = Utf8               EmptyTree
  #100 = Utf8               ()Lscala/reflect/api/Trees$TreeApi;
  #101 = NameAndType        #99:#100      // EmptyTree:()Lscala/reflect/api/Trees$TreeApi;
  #102 = Methodref          #79.#101      // scala/reflect/macros/Universe.EmptyTree:()Lscala/reflect/api/Trees$TreeApi;
  #103 = Utf8               Literal
  #104 = Utf8               ()Lscala/reflect/api/Trees$LiteralExtractor;
  #105 = NameAndType        #103:#104     // Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #106 = Methodref          #79.#105      // scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #107 = Utf8               Constant
  #108 = Utf8               ()Lscala/reflect/api/Constants$ConstantExtractor;
  #109 = NameAndType        #107:#108     // Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
  #110 = Methodref          #79.#109      // scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
  #111 = Utf8               boxToBoolean
  #112 = Utf8               (Z)Ljava/lang/Boolean;
  #113 = NameAndType        #111:#112     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #114 = Methodref          #65.#113      // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #115 = Utf8               (Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #116 = NameAndType        #95:#115      // apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #117 = Methodref          #20.#116      // scala/reflect/api/Constants$ConstantExtractor.apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #118 = Utf8               (Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #119 = NameAndType        #95:#118      // apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #120 = Methodref          #42.#119      // scala/reflect/api/Trees$LiteralExtractor.apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #121 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$CaseDefApi;
  #122 = NameAndType        #95:#121      // apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$CaseDefApi;
  #123 = Methodref          #36.#122      // scala/reflect/api/Trees$CaseDefExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$CaseDefApi;
  #124 = Utf8               scala/util/Either
  #125 = Class              #124          // scala/util/Either
  #126 = Utf8               scala/Function1
  #127 = Class              #126          // scala/Function1
  #128 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #129 = NameAndType        #95:#128      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #130 = InterfaceMethodref #127.#129     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #131 = Utf8               java/lang/Object
  #132 = Class              #131          // java/lang/Object
  #133 = Utf8               char
  #134 = Utf8               C
  #135 = Utf8               this
  #136 = Utf8               Lcoursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1;
  #137 = Utf8               Lscala/util/Either;
  #138 = Utf8               Lscala/Function1;
  #139 = Utf8               isDefinedAt
  #140 = Utf8               (Lscala/util/Either;)Z
  #141 = Utf8               (Lscala/util/Either<Ljava/lang/Object;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;)Z
  #142 = Utf8               (Ljava/lang/Object;)Z
  #143 = Utf8               x
  #144 = NameAndType        #139:#140     // isDefinedAt:(Lscala/util/Either;)Z
  #145 = Methodref          #2.#144       // coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1.isDefinedAt:(Lscala/util/Either;)Z
  #146 = Utf8               Ljava/lang/Object;
  #147 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #148 = NameAndType        #53:#54       // applyOrElse:(Lscala/util/Either;Lscala/Function1;)Ljava/lang/Object;
  #149 = Methodref          #2.#148       // coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1.applyOrElse:(Lscala/util/Either;Lscala/Function1;)Ljava/lang/Object;
  #150 = Utf8               <init>
  #151 = Utf8               (Lscala/reflect/macros/blackbox/Context;)V
  #152 = Utf8               ()V
  #153 = NameAndType        #150:#152     // "<init>":()V
  #154 = Methodref          #5.#153       // scala/runtime/AbstractPartialFunction."<init>":()V
  #155 = Utf8               ConstantValue
  #156 = Utf8               Code
  #157 = Utf8               StackMapTable
  #158 = Utf8               LineNumberTable
  #159 = Utf8               LocalVariableTable
  #160 = Utf8               Signature
  #161 = Utf8               MethodParameters
  #162 = Utf8               InnerClasses
  #163 = Utf8               EnclosingMethod
  #164 = Utf8               SourceFile
  #165 = Utf8               ScalaInlineInfo
  #166 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final scala.reflect.macros.blackbox.Context c$3;
    descriptor: Lscala/reflect/macros/blackbox/Context;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final <A1 extends scala.util.Either<java.lang.Object, scala.Tuple2<java.lang.Object, java.lang.Object>>, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Lscala/util/Either;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=6, locals=7, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #59                 // class scala/util/Left
         8: ifeq          118
        11: aload         4
        13: checkcast     #59                 // class scala/util/Left
        16: astore        5
        18: aload         5
        20: invokevirtual #63                 // Method scala/util/Left.value:()Ljava/lang/Object;
        23: invokestatic  #69                 // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        26: istore        6
        28: aload_0
        29: getfield      #71                 // Field c$3:Lscala/reflect/macros/blackbox/Context;
        32: invokeinterface #77,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        37: invokevirtual #83                 // Method scala/reflect/macros/Universe.CaseDef:()Lscala/reflect/api/Trees$CaseDefExtractor;
        40: aload_0
        41: getfield      #71                 // Field c$3:Lscala/reflect/macros/blackbox/Context;
        44: invokeinterface #77,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        49: invokevirtual #86                 // Method scala/reflect/macros/Universe.Liftable:()Lscala/reflect/api/Liftables$Liftable$;
        52: invokevirtual #90                 // Method scala/reflect/api/Liftables$Liftable$.liftChar:()Lscala/reflect/api/Liftables$Liftable;
        55: iload         6
        57: invokestatic  #94                 // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        60: invokeinterface #98,  2           // InterfaceMethod scala/reflect/api/Liftables$Liftable.apply:(Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
        65: aload_0
        66: getfield      #71                 // Field c$3:Lscala/reflect/macros/blackbox/Context;
        69: invokeinterface #77,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        74: invokevirtual #102                // Method scala/reflect/macros/Universe.EmptyTree:()Lscala/reflect/api/Trees$TreeApi;
        77: aload_0
        78: getfield      #71                 // Field c$3:Lscala/reflect/macros/blackbox/Context;
        81: invokeinterface #77,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        86: invokevirtual #106                // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
        89: aload_0
        90: getfield      #71                 // Field c$3:Lscala/reflect/macros/blackbox/Context;
        93: invokeinterface #77,  1           // InterfaceMethod scala/reflect/macros/blackbox/Context.universe:()Lscala/reflect/macros/Universe;
        98: invokevirtual #110                // Method scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
       101: iconst_1
       102: invokestatic  #114                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       105: invokevirtual #117                // Method scala/reflect/api/Constants$ConstantExtractor.apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
       108: invokevirtual #120                // Method scala/reflect/api/Trees$LiteralExtractor.apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
       111: invokevirtual #123                // Method scala/reflect/api/Trees$CaseDefExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$CaseDefApi;
       114: astore_3
       115: goto          132
       118: goto          121
       121: aload_2
       122: aload_1
       123: invokeinterface #130,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       128: astore_3
       129: goto          132
       132: aload_3
       133: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 118
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1, class scala/util/Either, class scala/Function1, class java/lang/Object, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 377: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      92     6  char   C
            0     134     0  this   Lcoursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1;
            0     134     1    x1   Lscala/util/Either;
            0     134     2 default   Lscala/Function1;
    Signature: #55                          // <A1:Lscala/util/Either<Ljava/lang/Object;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(scala.util.Either<java.lang.Object, scala.Tuple2<java.lang.Object, java.lang.Object>>);
    descriptor: (Lscala/util/Either;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=4, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #59                 // class scala/util/Left
         6: ifeq          14
         9: iconst_1
        10: istore_2
        11: goto          22
        14: goto          17
        17: iconst_0
        18: istore_2
        19: goto          22
        22: iload_2
        23: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 14
          locals = [ top, class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1, class scala/util/Either, int, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 377: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcoursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1;
            0      24     1    x1   Lscala/util/Either;
    Signature: #141                         // (Lscala/util/Either<Ljava/lang/Object;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;)Z
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #125                // class scala/util/Either
         5: invokevirtual #145                // Method isDefinedAt:(Lscala/util/Either;)Z
         8: ireturn
      LineNumberTable:
        line 377: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #125                // class scala/util/Either
         5: aload_2
         6: invokevirtual #149                // Method applyOrElse:(Lscala/util/Either;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 377: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public coursier.core.shaded.fastparse.internal.MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1(scala.reflect.macros.blackbox.Context);
    descriptor: (Lscala/reflect/macros/blackbox/Context;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #71                 // Field c$3:Lscala/reflect/macros/blackbox/Context;
         5: aload_0
         6: invokespecial #154                // Method scala/runtime/AbstractPartialFunction."<init>":()V
         9: return
      LineNumberTable:
        line 356: 0
        line 377: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1;
            0      10     1   c$3   Lscala/reflect/macros/blackbox/Context;
    MethodParameters:
      Name                           Flags
      c$3                            final
}
InnerClasses:
  public final #2;                        // class coursier/core/shaded/fastparse/internal/MacroImpls$$anonfun$$nestedInanonfun$parseCharCls$1$1
  public abstract #18= #15 of #17;        // ConstantApi=class scala/reflect/api/Constants$ConstantApi of class scala/reflect/api/Constants
  public abstract #21= #20 of #17;        // ConstantExtractor=class scala/reflect/api/Constants$ConstantExtractor of class scala/reflect/api/Constants
  public #26= #23 of #25;                 // Liftable=class scala/reflect/api/Liftables$Liftable of class scala/reflect/api/Liftables
  public #29= #28 of #25;                 // =class scala/reflect/api/Liftables$Liftable$ of class scala/reflect/api/Liftables
  public #34= #31 of #33;                 // CaseDefApi=class scala/reflect/api/Trees$CaseDefApi of class scala/reflect/api/Trees
  public abstract #37= #36 of #33;        // CaseDefExtractor=class scala/reflect/api/Trees$CaseDefExtractor of class scala/reflect/api/Trees
  public #40= #39 of #33;                 // LiteralApi=class scala/reflect/api/Trees$LiteralApi of class scala/reflect/api/Trees
  public abstract #43= #42 of #33;        // LiteralExtractor=class scala/reflect/api/Trees$LiteralExtractor of class scala/reflect/api/Trees
  public #46= #45 of #33;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
EnclosingMethod: #10.#13                // coursier.core.shaded.fastparse.internal.MacroImpls$.parseCharCls
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Lscala/util/Either<Ljava/lang/Object;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;Lscala/reflect/api/Trees$CaseDefApi;>;Ljava/io/Serializable;
SourceFile: "MacroImpls.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 96 00 97 01 00 35 00 93 01 00 35
   00 36 01 00 8B 00 8E 01 00 8B 00 8C 01
  Scala: length = 0x0 (unknown attribute)

