Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/paths/Jep.class
  Last modified May 29, 2022; size 7650 bytes
  SHA-256 checksum 8359f0a5d806ff1a21b55f749caabdce01fe885a1a3e3817c8bf81aaf05a170f
  Compiled from "Jep.java"
public class coursier.paths.Jep
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/paths/Jep
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 12, attributes: 3
Constant pool:
    #1 = Utf8               coursier/paths/Jep
    #2 = Class              #1            // coursier/paths/Jep
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Jep.java
    #6 = Utf8               coursier/paths/Jep$JepException
    #7 = Class              #6            // coursier/paths/Jep$JepException
    #8 = Utf8               JepException
    #9 = Utf8               java/util/Map$Entry
   #10 = Class              #9            // java/util/Map$Entry
   #11 = Utf8               java/util/Map
   #12 = Class              #11           // java/util/Map
   #13 = Utf8               Entry
   #14 = Utf8               java/util/AbstractMap$SimpleEntry
   #15 = Class              #14           // java/util/AbstractMap$SimpleEntry
   #16 = Utf8               java/util/AbstractMap
   #17 = Class              #16           // java/util/AbstractMap
   #18 = Utf8               SimpleEntry
   #19 = Utf8               java/lang/ProcessBuilder$Redirect
   #20 = Class              #19           // java/lang/ProcessBuilder$Redirect
   #21 = Utf8               java/lang/ProcessBuilder
   #22 = Class              #21           // java/lang/ProcessBuilder
   #23 = Utf8               Redirect
   #24 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #25 = Class              #24           // java/lang/invoke/MethodHandles$Lookup
   #26 = Utf8               java/lang/invoke/MethodHandles
   #27 = Class              #26           // java/lang/invoke/MethodHandles
   #28 = Utf8               Lookup
   #29 = Utf8               locationLinePrefix
   #30 = Utf8               Ljava/lang/String;
   #31 = Utf8               Location:
   #32 = String             #31           // Location:
   #33 = Utf8               prefix
   #34 = Utf8               jep-
   #35 = String             #34           // jep-
   #36 = Utf8               suffix
   #37 = Utf8               .jar
   #38 = String             #37           // .jar
   #39 = Utf8               <init>
   #40 = Utf8               ()V
   #41 = NameAndType        #39:#40       // "<init>":()V
   #42 = Methodref          #4.#41        // java/lang/Object."<init>":()V
   #43 = Utf8               existsInPath
   #44 = Utf8               (Ljava/lang/String;)Z
   #45 = Utf8               PATH
   #46 = String             #45           // PATH
   #47 = Utf8               java/lang/System
   #48 = Class              #47           // java/lang/System
   #49 = Utf8               getenv
   #50 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #51 = NameAndType        #49:#50       // getenv:(Ljava/lang/String;)Ljava/lang/String;
   #52 = Methodref          #48.#51       // java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
   #53 = Utf8               java/io/File
   #54 = Class              #53           // java/io/File
   #55 = Utf8               pathSeparator
   #56 = NameAndType        #55:#30       // pathSeparator:Ljava/lang/String;
   #57 = Fieldref           #54.#56       // java/io/File.pathSeparator:Ljava/lang/String;
   #58 = Utf8               java/util/regex/Pattern
   #59 = Class              #58           // java/util/regex/Pattern
   #60 = Utf8               quote
   #61 = NameAndType        #60:#50       // quote:(Ljava/lang/String;)Ljava/lang/String;
   #62 = Methodref          #59.#61       // java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
   #63 = Utf8               java/lang/String
   #64 = Class              #63           // java/lang/String
   #65 = Utf8               split
   #66 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;
   #67 = NameAndType        #65:#66       // split:(Ljava/lang/String;)[Ljava/lang/String;
   #68 = Methodref          #64.#67       // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
   #69 = Utf8               java/util/stream/Stream
   #70 = Class              #69           // java/util/stream/Stream
   #71 = Utf8               of
   #72 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;
   #73 = NameAndType        #71:#72       // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
   #74 = InterfaceMethodref #70.#73       // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
   #75 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #76 = MethodType         #75           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #77 = Utf8               lambda$existsInPath$0
   #78 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;
   #79 = NameAndType        #77:#78       // lambda$existsInPath$0:(Ljava/lang/String;)Ljava/nio/file/Path;
   #80 = Methodref          #2.#79        // coursier/paths/Jep.lambda$existsInPath$0:(Ljava/lang/String;)Ljava/nio/file/Path;
   #81 = MethodHandle       6:#80         // REF_invokeStatic coursier/paths/Jep.lambda$existsInPath$0:(Ljava/lang/String;)Ljava/nio/file/Path;
   #82 = MethodType         #78           //  (Ljava/lang/String;)Ljava/nio/file/Path;
   #83 = Utf8               java/lang/invoke/LambdaMetafactory
   #84 = Class              #83           // java/lang/invoke/LambdaMetafactory
   #85 = Utf8               metafactory
   #86 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #87 = NameAndType        #85:#86       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #88 = Methodref          #84.#87       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #89 = MethodHandle       6:#88         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #90 = Utf8               apply
   #91 = Utf8               ()Ljava/util/function/Function;
   #92 = NameAndType        #90:#91       // apply:()Ljava/util/function/Function;
   #93 = InvokeDynamic      #0:#92        // #0:apply:()Ljava/util/function/Function;
   #94 = Utf8               map
   #95 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;
   #96 = NameAndType        #94:#95       // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
   #97 = InterfaceMethodref #70.#96       // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
   #98 = Utf8               (Ljava/lang/Object;)Z
   #99 = MethodType         #98           //  (Ljava/lang/Object;)Z
  #100 = Utf8               lambda$existsInPath$1
  #101 = Utf8               (Ljava/lang/String;Ljava/nio/file/Path;)Z
  #102 = NameAndType        #100:#101     // lambda$existsInPath$1:(Ljava/lang/String;Ljava/nio/file/Path;)Z
  #103 = Methodref          #2.#102       // coursier/paths/Jep.lambda$existsInPath$1:(Ljava/lang/String;Ljava/nio/file/Path;)Z
  #104 = MethodHandle       6:#103        // REF_invokeStatic coursier/paths/Jep.lambda$existsInPath$1:(Ljava/lang/String;Ljava/nio/file/Path;)Z
  #105 = Utf8               (Ljava/nio/file/Path;)Z
  #106 = MethodType         #105          //  (Ljava/nio/file/Path;)Z
  #107 = Utf8               test
  #108 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;
  #109 = NameAndType        #107:#108     // test:(Ljava/lang/String;)Ljava/util/function/Predicate;
  #110 = InvokeDynamic      #1:#109       // #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
  #111 = Utf8               anyMatch
  #112 = Utf8               (Ljava/util/function/Predicate;)Z
  #113 = NameAndType        #111:#112     // anyMatch:(Ljava/util/function/Predicate;)Z
  #114 = InterfaceMethodref #70.#113      // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
  #115 = Utf8               readFully
  #116 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Ljava/lang/String;
  #117 = Utf8               java/io/IOException
  #118 = Class              #117          // java/io/IOException
  #119 = Utf8               java/lang/Throwable
  #120 = Class              #119          // java/lang/Throwable
  #121 = Utf8               java/lang/StringBuilder
  #122 = Class              #121          // java/lang/StringBuilder
  #123 = Methodref          #122.#41      // java/lang/StringBuilder."<init>":()V
  #124 = Utf8               java/io/InputStreamReader
  #125 = Class              #124          // java/io/InputStreamReader
  #126 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #127 = NameAndType        #39:#126      // "<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #128 = Methodref          #125.#127     // java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
  #129 = Utf8               java/io/InputStream
  #130 = Class              #129          // java/io/InputStream
  #131 = Utf8               java/nio/charset/Charset
  #132 = Class              #131          // java/nio/charset/Charset
  #133 = Utf8               [C
  #134 = Class              #133          // "[C"
  #135 = Utf8               java/io/Reader
  #136 = Class              #135          // java/io/Reader
  #137 = Utf8               read
  #138 = Utf8               ([CII)I
  #139 = NameAndType        #137:#138     // read:([CII)I
  #140 = Methodref          #136.#139     // java/io/Reader.read:([CII)I
  #141 = Utf8               append
  #142 = Utf8               ([CII)Ljava/lang/StringBuilder;
  #143 = NameAndType        #141:#142     // append:([CII)Ljava/lang/StringBuilder;
  #144 = Methodref          #122.#143     // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
  #145 = Utf8               close
  #146 = NameAndType        #145:#40      // close:()V
  #147 = Methodref          #136.#146     // java/io/Reader.close:()V
  #148 = Utf8               addSuppressed
  #149 = Utf8               (Ljava/lang/Throwable;)V
  #150 = NameAndType        #148:#149     // addSuppressed:(Ljava/lang/Throwable;)V
  #151 = Methodref          #120.#150     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
  #152 = Utf8               toString
  #153 = Utf8               ()Ljava/lang/String;
  #154 = NameAndType        #152:#153     // toString:()Ljava/lang/String;
  #155 = Methodref          #122.#154     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #156 = Utf8               location
  #157 = Utf8               ()Ljava/io/File;
  #158 = Utf8               java/lang/Exception
  #159 = Class              #158          // java/lang/Exception
  #160 = Utf8               JEP_LOCATION
  #161 = String             #160          // JEP_LOCATION
  #162 = Utf8               isEmpty
  #163 = Utf8               ()Z
  #164 = NameAndType        #162:#163     // isEmpty:()Z
  #165 = Methodref          #64.#164      // java/lang/String.isEmpty:()Z
  #166 = Utf8               (Ljava/lang/String;)V
  #167 = NameAndType        #39:#166      // "<init>":(Ljava/lang/String;)V
  #168 = Methodref          #54.#167      // java/io/File."<init>":(Ljava/lang/String;)V
  #169 = Utf8               jep.location
  #170 = String             #169          // jep.location
  #171 = Utf8               getProperty
  #172 = NameAndType        #171:#50      // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #173 = Methodref          #48.#172      // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #174 = Utf8               pip
  #175 = String             #174          // pip
  #176 = Utf8               pip3
  #177 = String             #176          // pip3
  #178 = NameAndType        #43:#44       // existsInPath:(Ljava/lang/String;)Z
  #179 = Methodref          #2.#178       // coursier/paths/Jep.existsInPath:(Ljava/lang/String;)Z
  #180 = Utf8               show
  #181 = String             #180          // show
  #182 = Utf8               jep
  #183 = String             #182          // jep
  #184 = Utf8               ([Ljava/lang/String;)V
  #185 = NameAndType        #39:#184      // "<init>":([Ljava/lang/String;)V
  #186 = Methodref          #22.#185      // java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
  #187 = Utf8               PIPE
  #188 = Utf8               Ljava/lang/ProcessBuilder$Redirect;
  #189 = NameAndType        #187:#188     // PIPE:Ljava/lang/ProcessBuilder$Redirect;
  #190 = Fieldref           #20.#189      // java/lang/ProcessBuilder$Redirect.PIPE:Ljava/lang/ProcessBuilder$Redirect;
  #191 = Utf8               redirectInput
  #192 = Utf8               (Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #193 = NameAndType        #191:#192     // redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #194 = Methodref          #22.#193      // java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #195 = Utf8               redirectOutput
  #196 = NameAndType        #195:#192     // redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #197 = Methodref          #22.#196      // java/lang/ProcessBuilder.redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #198 = Utf8               INHERIT
  #199 = NameAndType        #198:#188     // INHERIT:Ljava/lang/ProcessBuilder$Redirect;
  #200 = Fieldref           #20.#199      // java/lang/ProcessBuilder$Redirect.INHERIT:Ljava/lang/ProcessBuilder$Redirect;
  #201 = Utf8               redirectError
  #202 = NameAndType        #201:#192     // redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #203 = Methodref          #22.#202      // java/lang/ProcessBuilder.redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
  #204 = Utf8               start
  #205 = Utf8               ()Ljava/lang/Process;
  #206 = NameAndType        #204:#205     // start:()Ljava/lang/Process;
  #207 = Methodref          #22.#206      // java/lang/ProcessBuilder.start:()Ljava/lang/Process;
  #208 = Utf8               java/lang/Process
  #209 = Class              #208          // java/lang/Process
  #210 = Utf8               getOutputStream
  #211 = Utf8               ()Ljava/io/OutputStream;
  #212 = NameAndType        #210:#211     // getOutputStream:()Ljava/io/OutputStream;
  #213 = Methodref          #209.#212     // java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
  #214 = Utf8               java/io/OutputStream
  #215 = Class              #214          // java/io/OutputStream
  #216 = Methodref          #215.#146     // java/io/OutputStream.close:()V
  #217 = Utf8               getInputStream
  #218 = Utf8               ()Ljava/io/InputStream;
  #219 = NameAndType        #217:#218     // getInputStream:()Ljava/io/InputStream;
  #220 = Methodref          #209.#219     // java/lang/Process.getInputStream:()Ljava/io/InputStream;
  #221 = Utf8               defaultCharset
  #222 = Utf8               ()Ljava/nio/charset/Charset;
  #223 = NameAndType        #221:#222     // defaultCharset:()Ljava/nio/charset/Charset;
  #224 = Methodref          #132.#223     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
  #225 = NameAndType        #115:#116     // readFully:(Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Ljava/lang/String;
  #226 = Methodref          #2.#225       // coursier/paths/Jep.readFully:(Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Ljava/lang/String;
  #227 = Utf8               waitFor
  #228 = Utf8               ()I
  #229 = NameAndType        #227:#228     // waitFor:()I
  #230 = Methodref          #209.#229     // java/lang/Process.waitFor:()I
  #231 = Utf8               lineSeparator
  #232 = NameAndType        #231:#153     // lineSeparator:()Ljava/lang/String;
  #233 = Methodref          #48.#232      // java/lang/System.lineSeparator:()Ljava/lang/String;
  #234 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #235 = NameAndType        #141:#234     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #236 = Methodref          #122.#235     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #237 = Utf8               Error running
  #238 = String             #237          // Error running
  #239 = Utf8                show jep (return code:
  #240 = String             #239          //  show jep (return code:
  #241 = Utf8               (I)Ljava/lang/StringBuilder;
  #242 = NameAndType        #141:#241     // append:(I)Ljava/lang/StringBuilder;
  #243 = Methodref          #122.#242     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #244 = Utf8               )
  #245 = String             #244          // )
  #246 = Methodref          #7.#167       // coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
  #247 = Utf8               line.separator
  #248 = String             #247          // line.separator
  #249 = Utf8               lambda$location$2
  #250 = NameAndType        #249:#44      // lambda$location$2:(Ljava/lang/String;)Z
  #251 = Methodref          #2.#250       // coursier/paths/Jep.lambda$location$2:(Ljava/lang/String;)Z
  #252 = MethodHandle       6:#251        // REF_invokeStatic coursier/paths/Jep.lambda$location$2:(Ljava/lang/String;)Z
  #253 = MethodType         #44           //  (Ljava/lang/String;)Z
  #254 = Utf8               ()Ljava/util/function/Predicate;
  #255 = NameAndType        #107:#254     // test:()Ljava/util/function/Predicate;
  #256 = InvokeDynamic      #2:#255       // #2:test:()Ljava/util/function/Predicate;
  #257 = Utf8               filter
  #258 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
  #259 = NameAndType        #257:#258     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
  #260 = InterfaceMethodref #70.#259      // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
  #261 = Utf8               findFirst
  #262 = Utf8               ()Ljava/util/Optional;
  #263 = NameAndType        #261:#262     // findFirst:()Ljava/util/Optional;
  #264 = InterfaceMethodref #70.#263      // java/util/stream/Stream.findFirst:()Ljava/util/Optional;
  #265 = Utf8               java/util/Optional
  #266 = Class              #265          // java/util/Optional
  #267 = Utf8               isPresent
  #268 = NameAndType        #267:#163     // isPresent:()Z
  #269 = Methodref          #266.#268     // java/util/Optional.isPresent:()Z
  #270 = Utf8               No location found in
  #271 = String             #270          // No location found in
  #272 = Utf8                show jep output:
  #273 = String             #272          //  show jep output:
  #274 = Utf8               get
  #275 = Utf8               ()Ljava/lang/Object;
  #276 = NameAndType        #274:#275     // get:()Ljava/lang/Object;
  #277 = Methodref          #266.#276     // java/util/Optional.get:()Ljava/lang/Object;
  #278 = Utf8               length
  #279 = NameAndType        #278:#228     // length:()I
  #280 = Methodref          #64.#279      // java/lang/String.length:()I
  #281 = Utf8               substring
  #282 = Utf8               (I)Ljava/lang/String;
  #283 = NameAndType        #281:#282     // substring:(I)Ljava/lang/String;
  #284 = Methodref          #64.#283      // java/lang/String.substring:(I)Ljava/lang/String;
  #285 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
  #286 = NameAndType        #39:#285      // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #287 = Methodref          #54.#286      // java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
  #288 = Utf8               jar
  #289 = Utf8               (Ljava/io/File;)Ljava/io/File;
  #290 = Utf8               (Ljava/io/File;)Z
  #291 = MethodType         #290          //  (Ljava/io/File;)Z
  #292 = Utf8               lambda$jar$3
  #293 = NameAndType        #292:#290     // lambda$jar$3:(Ljava/io/File;)Z
  #294 = Methodref          #2.#293       // coursier/paths/Jep.lambda$jar$3:(Ljava/io/File;)Z
  #295 = MethodHandle       6:#294        // REF_invokeStatic coursier/paths/Jep.lambda$jar$3:(Ljava/io/File;)Z
  #296 = Utf8               accept
  #297 = Utf8               ()Ljava/io/FileFilter;
  #298 = NameAndType        #296:#297     // accept:()Ljava/io/FileFilter;
  #299 = InvokeDynamic      #3:#298       // #3:accept:()Ljava/io/FileFilter;
  #300 = Utf8               listFiles
  #301 = Utf8               (Ljava/io/FileFilter;)[Ljava/io/File;
  #302 = NameAndType        #300:#301     // listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;
  #303 = Methodref          #54.#302      // java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;
  #304 = Utf8               [Ljava/io/File;
  #305 = Class              #304          // "[Ljava/io/File;"
  #306 = Utf8               Found too many jars in
  #307 = String             #306          // Found too many jars in
  #308 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #309 = NameAndType        #141:#308     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #310 = Methodref          #122.#309     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #311 = Utf8               :
  #312 = String             #311          // :
  #313 = Methodref          #122.#167     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #314 = Utf8               ,
  #315 = String             #314          // ,
  #316 = Utf8               getName
  #317 = NameAndType        #316:#153     // getName:()Ljava/lang/String;
  #318 = Methodref          #54.#317      // java/io/File.getName:()Ljava/lang/String;
  #319 = Utf8               version
  #320 = Utf8               (Ljava/io/File;)Ljava/lang/String;
  #321 = Utf8               startsWith
  #322 = NameAndType        #321:#44      // startsWith:(Ljava/lang/String;)Z
  #323 = Methodref          #64.#322      // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #324 = Utf8               Invalid jep jar name:
  #325 = String             #324          // Invalid jep jar name:
  #326 = Utf8               endsWith
  #327 = NameAndType        #326:#44      // endsWith:(Ljava/lang/String;)Z
  #328 = Methodref          #64.#327      // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #329 = Utf8               (II)Ljava/lang/String;
  #330 = NameAndType        #281:#329     // substring:(II)Ljava/lang/String;
  #331 = Methodref          #64.#330      // java/lang/String.substring:(II)Ljava/lang/String;
  #332 = Utf8               pythonHome
  #333 = Utf8               PYTHONHOME
  #334 = String             #333          // PYTHONHOME
  #335 = Utf8               python.home
  #336 = String             #335          // python.home
  #337 = Utf8               python
  #338 = String             #337          // python
  #339 = Utf8               python3
  #340 = String             #339          // python3
  #341 = Utf8               -c
  #342 = String             #341          // -c
  #343 = Utf8               import sys;print(sys.prefix)
  #344 = String             #343          // import sys;print(sys.prefix)
  #345 = Utf8                -c \'import sys; print(sys.prefix)\' (return code:
  #346 = String             #345          //  -c \'import sys; print(sys.prefix)\' (return code:
  #347 = Utf8               trim
  #348 = NameAndType        #347:#153     // trim:()Ljava/lang/String;
  #349 = Methodref          #64.#348      // java/lang/String.trim:()Ljava/lang/String;
  #350 = Utf8               pythonProperties
  #351 = Utf8               ()Ljava/util/List;
  #352 = Utf8               ()Ljava/util/List<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;>;
  #353 = NameAndType        #332:#153     // pythonHome:()Ljava/lang/String;
  #354 = Methodref          #2.#353       // coursier/paths/Jep.pythonHome:()Ljava/lang/String;
  #355 = Utf8               lib
  #356 = String             #355          // lib
  #357 = Utf8               getAbsolutePath
  #358 = NameAndType        #357:#153     // getAbsolutePath:()Ljava/lang/String;
  #359 = Methodref          #54.#358      // java/io/File.getAbsolutePath:()Ljava/lang/String;
  #360 = Utf8               java/util/ArrayList
  #361 = Class              #360          // java/util/ArrayList
  #362 = Methodref          #361.#41      // java/util/ArrayList."<init>":()V
  #363 = Utf8               jna.library.path
  #364 = String             #363          // jna.library.path
  #365 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #366 = NameAndType        #39:#365      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #367 = Methodref          #15.#366      // java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #368 = Utf8               add
  #369 = NameAndType        #368:#98      // add:(Ljava/lang/Object;)Z
  #370 = Methodref          #361.#369     // java/util/ArrayList.add:(Ljava/lang/Object;)Z
  #371 = Utf8               jna.nosys
  #372 = String             #371          // jna.nosys
  #373 = Utf8               false
  #374 = String             #373          // false
  #375 = Utf8               isFile
  #376 = NameAndType        #375:#163     // isFile:()Z
  #377 = Methodref          #54.#376      // java/io/File.isFile:()Z
  #378 = Utf8               java/nio/file/Path
  #379 = Class              #378          // java/nio/file/Path
  #380 = Utf8               resolve
  #381 = NameAndType        #380:#78      // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #382 = InterfaceMethodref #379.#381     // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #383 = Utf8               java/nio/file/LinkOption
  #384 = Class              #383          // java/nio/file/LinkOption
  #385 = Utf8               java/nio/file/Files
  #386 = Class              #385          // java/nio/file/Files
  #387 = Utf8               exists
  #388 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #389 = NameAndType        #387:#388     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #390 = Methodref          #386.#389     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #391 = Utf8               java/nio/file/Paths
  #392 = Class              #391          // java/nio/file/Paths
  #393 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #394 = NameAndType        #274:#393     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #395 = Methodref          #392.#394     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #396 = Utf8               ConstantValue
  #397 = Utf8               Code
  #398 = Utf8               LineNumberTable
  #399 = Utf8               StackMapTable
  #400 = Utf8               Exceptions
  #401 = Utf8               Signature
  #402 = Utf8               InnerClasses
  #403 = Utf8               SourceFile
  #404 = Utf8               BootstrapMethods
{
  private static final java.lang.String locationLinePrefix;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String Location:

  private static final java.lang.String prefix;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String jep-

  private static final java.lang.String suffix;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String .jar

  public coursier.paths.Jep();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #42                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 15: 0

  private static boolean existsInPath(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc           #46                 // String PATH
         2: invokestatic  #52                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         5: getstatic     #57                 // Field java/io/File.pathSeparator:Ljava/lang/String;
         8: invokestatic  #62                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
        11: invokevirtual #68                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
        14: invokestatic  #74                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
        17: invokedynamic #93,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
        22: invokeinterface #97,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
        27: aload_0
        28: invokedynamic #110,  0            // InvokeDynamic #1:test:(Ljava/lang/String;)Ljava/util/function/Predicate;
        33: invokeinterface #114,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
        38: ireturn
      LineNumberTable:
        line 19: 0
        line 20: 22
        line 21: 33
        line 19: 38

  private static java.lang.String readFully(java.io.InputStream, java.nio.charset.Charset, int) throws java.io.IOException;
    descriptor: (Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=10, args_size=3
         0: iload_2
         1: newarray       char
         3: astore_3
         4: new           #122                // class java/lang/StringBuilder
         7: dup
         8: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
        11: astore        4
        13: new           #125                // class java/io/InputStreamReader
        16: dup
        17: aload_0
        18: aload_1
        19: invokespecial #128                // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V
        22: astore        5
        24: aconst_null
        25: astore        6
        27: aload         5
        29: aload_3
        30: iconst_0
        31: aload_3
        32: arraylength
        33: invokevirtual #140                // Method java/io/Reader.read:([CII)I
        36: istore        7
        38: iload         7
        40: ifge          46
        43: goto          59
        46: aload         4
        48: aload_3
        49: iconst_0
        50: iload         7
        52: invokevirtual #144                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
        55: pop
        56: goto          27
        59: aload         5
        61: ifnull        146
        64: aload         6
        66: ifnull        89
        69: aload         5
        71: invokevirtual #147                // Method java/io/Reader.close:()V
        74: goto          146
        77: astore        7
        79: aload         6
        81: aload         7
        83: invokevirtual #151                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        86: goto          146
        89: aload         5
        91: invokevirtual #147                // Method java/io/Reader.close:()V
        94: goto          146
        97: astore        7
        99: aload         7
       101: astore        6
       103: aload         7
       105: athrow
       106: astore        8
       108: aload         5
       110: ifnull        143
       113: aload         6
       115: ifnull        138
       118: aload         5
       120: invokevirtual #147                // Method java/io/Reader.close:()V
       123: goto          143
       126: astore        9
       128: aload         6
       130: aload         9
       132: invokevirtual #151                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       135: goto          143
       138: aload         5
       140: invokevirtual #147                // Method java/io/Reader.close:()V
       143: aload         8
       145: athrow
       146: aload         4
       148: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       151: areturn
      Exception table:
         from    to  target type
            69    74    77   Class java/lang/Throwable
            27    59    97   Class java/lang/Throwable
            27    59   106   any
           118   123   126   Class java/lang/Throwable
            97   108   106   any
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class java/io/InputStream, class java/nio/charset/Charset, int, class "[C", class java/lang/StringBuilder, class java/io/Reader, class java/lang/Throwable ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class java/io/InputStream, class java/nio/charset/Charset, int, class "[C", class java/lang/StringBuilder, class java/io/Reader, class java/lang/Throwable, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 4 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/io/InputStream, class java/nio/charset/Charset, int, class "[C", class java/lang/StringBuilder ]
          stack = []
      LineNumberTable:
        line 26: 0
        line 27: 4
        line 28: 13
        line 30: 27
        line 31: 38
        line 32: 43
        line 33: 46
        line 34: 56
        line 35: 59
        line 28: 97
        line 35: 106
        line 36: 146
    Exceptions:
      throws java.io.IOException

  public static java.io.File location() throws java.lang.Exception;
    descriptor: ()Ljava/io/File;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=9, args_size=0
         0: ldc           #161                // String JEP_LOCATION
         2: invokestatic  #52                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_0
         6: aload_0
         7: ifnull        26
        10: aload_0
        11: invokevirtual #165                // Method java/lang/String.isEmpty:()Z
        14: ifne          26
        17: new           #54                 // class java/io/File
        20: dup
        21: aload_0
        22: invokespecial #168                // Method java/io/File."<init>":(Ljava/lang/String;)V
        25: areturn
        26: ldc           #170                // String jep.location
        28: invokestatic  #173                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        31: astore_1
        32: aload_1
        33: ifnull        52
        36: aload_1
        37: invokevirtual #165                // Method java/lang/String.isEmpty:()Z
        40: ifne          52
        43: new           #54                 // class java/io/File
        46: dup
        47: aload_1
        48: invokespecial #168                // Method java/io/File."<init>":(Ljava/lang/String;)V
        51: areturn
        52: ldc           #175                // String pip
        54: astore_2
        55: ldc           #177                // String pip3
        57: invokestatic  #179                // Method existsInPath:(Ljava/lang/String;)Z
        60: ifeq          66
        63: ldc           #177                // String pip3
        65: astore_2
        66: new           #22                 // class java/lang/ProcessBuilder
        69: dup
        70: iconst_3
        71: anewarray     #64                 // class java/lang/String
        74: dup
        75: iconst_0
        76: aload_2
        77: aastore
        78: dup
        79: iconst_1
        80: ldc           #181                // String show
        82: aastore
        83: dup
        84: iconst_2
        85: ldc           #183                // String jep
        87: aastore
        88: invokespecial #186                // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
        91: getstatic     #190                // Field java/lang/ProcessBuilder$Redirect.PIPE:Ljava/lang/ProcessBuilder$Redirect;
        94: invokevirtual #194                // Method java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        97: getstatic     #190                // Field java/lang/ProcessBuilder$Redirect.PIPE:Ljava/lang/ProcessBuilder$Redirect;
       100: invokevirtual #197                // Method java/lang/ProcessBuilder.redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
       103: getstatic     #200                // Field java/lang/ProcessBuilder$Redirect.INHERIT:Ljava/lang/ProcessBuilder$Redirect;
       106: invokevirtual #203                // Method java/lang/ProcessBuilder.redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
       109: astore_3
       110: aload_3
       111: invokevirtual #207                // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
       114: astore        4
       116: aload         4
       118: invokevirtual #213                // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
       121: invokevirtual #216                // Method java/io/OutputStream.close:()V
       124: aload         4
       126: invokevirtual #220                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
       129: invokestatic  #224                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       132: sipush        1024
       135: invokestatic  #226                // Method readFully:(Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Ljava/lang/String;
       138: astore        5
       140: aload         4
       142: invokevirtual #230                // Method java/lang/Process.waitFor:()I
       145: istore        6
       147: iload         6
       149: ifeq          230
       152: aload         5
       154: invokevirtual #165                // Method java/lang/String.isEmpty:()Z
       157: ifne          183
       160: new           #122                // class java/lang/StringBuilder
       163: dup
       164: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       167: invokestatic  #233                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       170: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       173: aload         5
       175: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       178: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       181: astore        5
       183: new           #7                  // class coursier/paths/Jep$JepException
       186: dup
       187: new           #122                // class java/lang/StringBuilder
       190: dup
       191: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       194: ldc           #238                // String Error running
       196: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       199: aload_2
       200: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       203: ldc           #240                // String  show jep (return code:
       205: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       208: iload         6
       210: invokevirtual #243                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       213: ldc           #245                // String )
       215: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: aload         5
       220: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       223: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       226: invokespecial #246                // Method coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
       229: athrow
       230: aload         5
       232: ldc           #248                // String line.separator
       234: invokestatic  #173                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       237: invokevirtual #68                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       240: invokestatic  #74                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       243: invokedynamic #256,  0            // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
       248: invokeinterface #260,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
       253: invokeinterface #264,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
       258: astore        7
       260: aload         7
       262: invokevirtual #269                // Method java/util/Optional.isPresent:()Z
       265: ifne          307
       268: new           #7                  // class coursier/paths/Jep$JepException
       271: dup
       272: new           #122                // class java/lang/StringBuilder
       275: dup
       276: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       279: ldc_w         #271                // String No location found in
       282: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       285: aload_2
       286: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       289: ldc_w         #273                // String  show jep output:
       292: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       295: aload         5
       297: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       300: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       303: invokespecial #246                // Method coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
       306: athrow
       307: new           #54                 // class java/io/File
       310: dup
       311: aload         7
       313: invokevirtual #277                // Method java/util/Optional.get:()Ljava/lang/Object;
       316: checkcast     #64                 // class java/lang/String
       319: ldc           #32                 // String Location:
       321: invokevirtual #280                // Method java/lang/String.length:()I
       324: invokevirtual #284                // Method java/lang/String.substring:(I)Ljava/lang/String;
       327: invokespecial #168                // Method java/io/File."<init>":(Ljava/lang/String;)V
       330: astore        8
       332: new           #54                 // class java/io/File
       335: dup
       336: aload         8
       338: ldc           #183                // String jep
       340: invokespecial #287                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
       343: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 116
          locals = [ class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/ProcessBuilder, class java/lang/Process, class java/lang/String, int ]
          stack = []
        frame_type = 46 /* same */
        frame_type = 252 /* append */
          offset_delta = 76
          locals = [ class java/util/Optional ]
      LineNumberTable:
        line 49: 0
        line 50: 6
        line 51: 17
        line 53: 26
        line 54: 32
        line 55: 43
        line 57: 52
        line 58: 55
        line 59: 63
        line 61: 66
        line 62: 94
        line 63: 100
        line 64: 106
        line 65: 110
        line 66: 116
        line 68: 124
        line 69: 140
        line 70: 147
        line 71: 152
        line 72: 160
        line 73: 183
        line 76: 230
        line 77: 248
        line 78: 253
        line 79: 260
        line 80: 268
        line 83: 307
        line 85: 332
    Exceptions:
      throws java.lang.Exception

  public static java.io.File jar(java.io.File) throws coursier.paths.Jep$JepException;
    descriptor: (Ljava/io/File;)Ljava/io/File;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=8, args_size=1
         0: aload_0
         1: invokedynamic #299,  0            // InvokeDynamic #3:accept:()Ljava/io/FileFilter;
         6: invokevirtual #303                // Method java/io/File.listFiles:(Ljava/io/FileFilter;)[Ljava/io/File;
         9: astore_1
        10: aload_1
        11: ifnull        19
        14: aload_1
        15: arraylength
        16: ifne          21
        19: aconst_null
        20: areturn
        21: aload_1
        22: arraylength
        23: iconst_1
        24: if_icmpne     31
        27: aload_1
        28: iconst_0
        29: aaload
        30: areturn
        31: new           #122                // class java/lang/StringBuilder
        34: dup
        35: new           #122                // class java/lang/StringBuilder
        38: dup
        39: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
        42: ldc_w         #307                // String Found too many jars in
        45: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        48: aload_0
        49: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        52: ldc_w         #312                // String :
        55: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        61: invokespecial #313                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        64: astore_2
        65: iconst_1
        66: istore_3
        67: aload_1
        68: astore        4
        70: aload         4
        72: arraylength
        73: istore        5
        75: iconst_0
        76: istore        6
        78: iload         6
        80: iload         5
        82: if_icmpge     125
        85: aload         4
        87: iload         6
        89: aaload
        90: astore        7
        92: iload_3
        93: ifeq          101
        96: iconst_0
        97: istore_3
        98: goto          109
       101: aload_2
       102: ldc_w         #315                // String ,
       105: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       108: pop
       109: aload_2
       110: aload         7
       112: invokevirtual #318                // Method java/io/File.getName:()Ljava/lang/String;
       115: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       118: pop
       119: iinc          6, 1
       122: goto          78
       125: new           #7                  // class coursier/paths/Jep$JepException
       128: dup
       129: aload_2
       130: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       133: invokespecial #246                // Method coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
       136: athrow
      StackMapTable: number_of_entries = 7
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class "[Ljava/io/File;" ]
        frame_type = 1 /* same */
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class java/io/File, class "[Ljava/io/File;", class java/lang/StringBuilder, int, class "[Ljava/io/File;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/io/File ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class java/io/File, class "[Ljava/io/File;", class java/lang/StringBuilder, int ]
          stack = []
      LineNumberTable:
        line 92: 0
        line 93: 10
        line 94: 19
        line 95: 21
        line 96: 27
        line 98: 31
        line 99: 65
        line 100: 67
        line 101: 92
        line 102: 96
        line 104: 101
        line 105: 109
        line 100: 119
        line 107: 125
    Exceptions:
      throws coursier.paths.Jep$JepException

  public static java.lang.String version(java.io.File) throws coursier.paths.Jep$JepException;
    descriptor: (Ljava/io/File;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=1
         0: aload_0
         1: invokevirtual #318                // Method java/io/File.getName:()Ljava/lang/String;
         4: astore_1
         5: aload_1
         6: ldc           #35                 // String jep-
         8: invokevirtual #323                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        11: ifne          42
        14: new           #7                  // class coursier/paths/Jep$JepException
        17: dup
        18: new           #122                // class java/lang/StringBuilder
        21: dup
        22: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
        25: ldc_w         #325                // String Invalid jep jar name:
        28: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: aload_0
        32: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        35: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        38: invokespecial #246                // Method coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: aload_1
        43: ldc           #38                 // String .jar
        45: invokevirtual #328                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        48: ifne          79
        51: new           #7                  // class coursier/paths/Jep$JepException
        54: dup
        55: new           #122                // class java/lang/StringBuilder
        58: dup
        59: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
        62: ldc_w         #325                // String Invalid jep jar name:
        65: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        68: aload_0
        69: invokevirtual #310                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        72: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        75: invokespecial #246                // Method coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
        78: athrow
        79: aload_1
        80: ldc           #35                 // String jep-
        82: invokevirtual #280                // Method java/lang/String.length:()I
        85: aload_1
        86: invokevirtual #280                // Method java/lang/String.length:()I
        89: ldc           #38                 // String .jar
        91: invokevirtual #280                // Method java/lang/String.length:()I
        94: isub
        95: invokevirtual #331                // Method java/lang/String.substring:(II)Ljava/lang/String;
        98: astore_2
        99: aload_2
       100: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 42
          locals = [ class java/lang/String ]
        frame_type = 36 /* same */
      LineNumberTable:
        line 112: 0
        line 113: 5
        line 114: 14
        line 115: 42
        line 116: 51
        line 117: 79
        line 118: 99
    Exceptions:
      throws coursier.paths.Jep$JepException

  public static java.lang.String pythonHome() throws java.lang.Exception;
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=7, args_size=0
         0: ldc_w         #334                // String PYTHONHOME
         3: invokestatic  #52                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         6: astore_0
         7: aload_0
         8: ifnull        20
        11: aload_0
        12: invokevirtual #165                // Method java/lang/String.isEmpty:()Z
        15: ifne          20
        18: aload_0
        19: areturn
        20: ldc_w         #336                // String python.home
        23: invokestatic  #173                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        26: astore_1
        27: aload_1
        28: ifnull        40
        31: aload_1
        32: invokevirtual #165                // Method java/lang/String.isEmpty:()Z
        35: ifne          40
        38: aload_1
        39: areturn
        40: ldc_w         #338                // String python
        43: astore_2
        44: ldc_w         #340                // String python3
        47: invokestatic  #179                // Method existsInPath:(Ljava/lang/String;)Z
        50: ifeq          57
        53: ldc_w         #340                // String python3
        56: astore_2
        57: new           #22                 // class java/lang/ProcessBuilder
        60: dup
        61: iconst_3
        62: anewarray     #64                 // class java/lang/String
        65: dup
        66: iconst_0
        67: aload_2
        68: aastore
        69: dup
        70: iconst_1
        71: ldc_w         #342                // String -c
        74: aastore
        75: dup
        76: iconst_2
        77: ldc_w         #344                // String import sys;print(sys.prefix)
        80: aastore
        81: invokespecial #186                // Method java/lang/ProcessBuilder."<init>":([Ljava/lang/String;)V
        84: getstatic     #190                // Field java/lang/ProcessBuilder$Redirect.PIPE:Ljava/lang/ProcessBuilder$Redirect;
        87: invokevirtual #194                // Method java/lang/ProcessBuilder.redirectInput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        90: getstatic     #190                // Field java/lang/ProcessBuilder$Redirect.PIPE:Ljava/lang/ProcessBuilder$Redirect;
        93: invokevirtual #197                // Method java/lang/ProcessBuilder.redirectOutput:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
        96: getstatic     #200                // Field java/lang/ProcessBuilder$Redirect.INHERIT:Ljava/lang/ProcessBuilder$Redirect;
        99: invokevirtual #203                // Method java/lang/ProcessBuilder.redirectError:(Ljava/lang/ProcessBuilder$Redirect;)Ljava/lang/ProcessBuilder;
       102: astore_3
       103: aload_3
       104: invokevirtual #207                // Method java/lang/ProcessBuilder.start:()Ljava/lang/Process;
       107: astore        4
       109: aload         4
       111: invokevirtual #213                // Method java/lang/Process.getOutputStream:()Ljava/io/OutputStream;
       114: invokevirtual #216                // Method java/io/OutputStream.close:()V
       117: aload         4
       119: invokevirtual #220                // Method java/lang/Process.getInputStream:()Ljava/io/InputStream;
       122: invokestatic  #224                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       125: sipush        1024
       128: invokestatic  #226                // Method readFully:(Ljava/io/InputStream;Ljava/nio/charset/Charset;I)Ljava/lang/String;
       131: astore        5
       133: aload         4
       135: invokevirtual #230                // Method java/lang/Process.waitFor:()I
       138: istore        6
       140: iload         6
       142: ifeq          224
       145: aload         5
       147: invokevirtual #165                // Method java/lang/String.isEmpty:()Z
       150: ifne          176
       153: new           #122                // class java/lang/StringBuilder
       156: dup
       157: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       160: invokestatic  #233                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       163: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       166: aload         5
       168: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       171: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       174: astore        5
       176: new           #7                  // class coursier/paths/Jep$JepException
       179: dup
       180: new           #122                // class java/lang/StringBuilder
       183: dup
       184: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       187: ldc           #238                // String Error running
       189: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       192: aload_2
       193: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       196: ldc_w         #346                // String  -c \'import sys; print(sys.prefix)\' (return code:
       199: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       202: iload         6
       204: invokevirtual #243                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       207: ldc           #245                // String )
       209: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       212: aload         5
       214: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       217: invokevirtual #155                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       220: invokespecial #246                // Method coursier/paths/Jep$JepException."<init>":(Ljava/lang/String;)V
       223: athrow
       224: aload         5
       226: invokevirtual #349                // Method java/lang/String.trim:()Ljava/lang/String;
       229: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 118
          locals = [ class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/ProcessBuilder, class java/lang/Process, class java/lang/String, int ]
          stack = []
        frame_type = 47 /* same */
      LineNumberTable:
        line 123: 0
        line 124: 7
        line 125: 18
        line 127: 20
        line 128: 27
        line 129: 38
        line 131: 40
        line 132: 44
        line 133: 53
        line 135: 57
        line 136: 87
        line 137: 93
        line 138: 99
        line 139: 103
        line 140: 109
        line 142: 117
        line 143: 133
        line 144: 140
        line 145: 145
        line 146: 153
        line 147: 176
        line 150: 224
    Exceptions:
      throws java.lang.Exception

  public static java.util.List<java.util.Map$Entry<java.lang.String, java.lang.String>> pythonProperties() throws java.lang.Exception;
    descriptor: ()Ljava/util/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=2, args_size=0
         0: new           #54                 // class java/io/File
         3: dup
         4: new           #54                 // class java/io/File
         7: dup
         8: invokestatic  #354                // Method pythonHome:()Ljava/lang/String;
        11: invokespecial #168                // Method java/io/File."<init>":(Ljava/lang/String;)V
        14: ldc_w         #356                // String lib
        17: invokespecial #287                // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
        20: invokevirtual #359                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        23: astore_0
        24: new           #361                // class java/util/ArrayList
        27: dup
        28: invokespecial #362                // Method java/util/ArrayList."<init>":()V
        31: astore_1
        32: aload_1
        33: new           #15                 // class java/util/AbstractMap$SimpleEntry
        36: dup
        37: ldc_w         #364                // String jna.library.path
        40: aload_0
        41: invokespecial #367                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        44: invokevirtual #370                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
        47: pop
        48: aload_1
        49: new           #15                 // class java/util/AbstractMap$SimpleEntry
        52: dup
        53: ldc_w         #372                // String jna.nosys
        56: ldc_w         #374                // String false
        59: invokespecial #367                // Method java/util/AbstractMap$SimpleEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        62: invokevirtual #370                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
        65: pop
        66: aload_1
        67: areturn
      LineNumberTable:
        line 154: 0
        line 156: 24
        line 158: 32
        line 159: 48
        line 161: 66
    Exceptions:
      throws java.lang.Exception
    Signature: #352                         // ()Ljava/util/List<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;>;

  private static boolean lambda$jar$3(java.io.File);
    descriptor: (Ljava/io/File;)Z
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #377                // Method java/io/File.isFile:()Z
         4: ifeq          35
         7: aload_0
         8: invokevirtual #318                // Method java/io/File.getName:()Ljava/lang/String;
        11: ldc           #35                 // String jep-
        13: invokevirtual #323                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        16: ifeq          35
        19: aload_0
        20: invokevirtual #318                // Method java/io/File.getName:()Ljava/lang/String;
        23: ldc           #38                 // String .jar
        25: invokevirtual #328                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        28: ifeq          35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 35 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 92: 0

  private static boolean lambda$location$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #32                 // String Location:
         3: invokevirtual #323                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         6: ireturn
      LineNumberTable:
        line 77: 0

  private static boolean lambda$existsInPath$1(java.lang.String, java.nio.file.Path);
    descriptor: (Ljava/lang/String;Ljava/nio/file/Path;)Z
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #382,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
         7: iconst_0
         8: anewarray     #384                // class java/nio/file/LinkOption
        11: invokestatic  #390                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        14: ireturn
      LineNumberTable:
        line 21: 0

  private static java.nio.file.Path lambda$existsInPath$0(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/nio/file/Path;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: anewarray     #64                 // class java/lang/String
         5: invokestatic  #395                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
         8: areturn
      LineNumberTable:
        line 20: 0
}
InnerClasses:
  public static #8= #7 of #2;             // JepException=class coursier/paths/Jep$JepException of class coursier/paths/Jep
  public static #13= #10 of #12;          // Entry=class java/util/Map$Entry of class java/util/Map
  public static #18= #15 of #17;          // SimpleEntry=class java/util/AbstractMap$SimpleEntry of class java/util/AbstractMap
  public static abstract #23= #20 of #22; // Redirect=class java/lang/ProcessBuilder$Redirect of class java/lang/ProcessBuilder
  public static final #28= #25 of #27;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Jep.java"
BootstrapMethods:
  0: #89 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #76 (Ljava/lang/Object;)Ljava/lang/Object;
      #81 REF_invokeStatic coursier/paths/Jep.lambda$existsInPath$0:(Ljava/lang/String;)Ljava/nio/file/Path;
      #82 (Ljava/lang/String;)Ljava/nio/file/Path;
  1: #89 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #99 (Ljava/lang/Object;)Z
      #104 REF_invokeStatic coursier/paths/Jep.lambda$existsInPath$1:(Ljava/lang/String;Ljava/nio/file/Path;)Z
      #106 (Ljava/nio/file/Path;)Z
  2: #89 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #99 (Ljava/lang/Object;)Z
      #252 REF_invokeStatic coursier/paths/Jep.lambda$location$2:(Ljava/lang/String;)Z
      #253 (Ljava/lang/String;)Z
  3: #89 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #291 (Ljava/io/File;)Z
      #295 REF_invokeStatic coursier/paths/Jep.lambda$jar$3:(Ljava/io/File;)Z
      #291 (Ljava/io/File;)Z
