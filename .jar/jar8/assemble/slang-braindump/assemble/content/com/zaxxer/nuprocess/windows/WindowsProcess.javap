Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/zaxxer/nuprocess/windows/WindowsProcess.class
  Last modified May 29, 2022; size 20531 bytes
  SHA-256 checksum a204940207dd64df2e2402369d90b32bbedf88c026793d9cd71c4b8609b6bb92
  Compiled from "WindowsProcess.java"
public final class com.zaxxer.nuprocess.windows.WindowsProcess implements com.zaxxer.nuprocess.NuProcess
  minor version: 0
  major version: 51
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #156                        // com/zaxxer/nuprocess/windows/WindowsProcess
  super_class: #231                       // java/lang/Object
  interfaces: 1, fields: 28, methods: 35, attributes: 2
Constant pool:
    #1 = Fieldref           #156.#426     // com/zaxxer/nuprocess/windows/WindowsProcess.processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
    #2 = Methodref          #231.#427     // java/lang/Object."<init>":()V
    #3 = Fieldref           #156.#428     // com/zaxxer/nuprocess/windows/WindowsProcess.processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
    #4 = Class              #429          // java/util/concurrent/atomic/AtomicBoolean
    #5 = Methodref          #4.#427       // java/util/concurrent/atomic/AtomicBoolean."<init>":()V
    #6 = Fieldref           #156.#430     // com/zaxxer/nuprocess/windows/WindowsProcess.userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
    #7 = Class              #431          // java/util/concurrent/atomic/AtomicInteger
    #8 = Methodref          #7.#427       // java/util/concurrent/atomic/AtomicInteger."<init>":()V
    #9 = Fieldref           #156.#432     // com/zaxxer/nuprocess/windows/WindowsProcess.exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
   #10 = Class              #433          // java/util/concurrent/CountDownLatch
   #11 = Methodref          #10.#434      // java/util/concurrent/CountDownLatch."<init>":(I)V
   #12 = Fieldref           #156.#435     // com/zaxxer/nuprocess/windows/WindowsProcess.exitPending:Ljava/util/concurrent/CountDownLatch;
   #13 = Fieldref           #156.#436     // com/zaxxer/nuprocess/windows/WindowsProcess.outClosed:Z
   #14 = Fieldref           #156.#437     // com/zaxxer/nuprocess/windows/WindowsProcess.errClosed:Z
   #15 = Fieldref           #156.#438     // com/zaxxer/nuprocess/windows/WindowsProcess.inClosed:Z
   #16 = Fieldref           #156.#439     // com/zaxxer/nuprocess/windows/WindowsProcess.stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
   #17 = Methodref          #123.#440     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
   #18 = Fieldref           #156.#441     // com/zaxxer/nuprocess/windows/WindowsProcess.pendingWriteStdinClosedTombstone:Ljava/nio/ByteBuffer;
   #19 = Methodref          #10.#442      // java/util/concurrent/CountDownLatch.await:()V
   #20 = Methodref          #10.#443      // java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
   #21 = Class              #444          // java/lang/Integer
   #22 = Integer            -2147483648
   #23 = Methodref          #7.#445       // java/util/concurrent/atomic/AtomicInteger.get:()I
   #24 = Fieldref           #156.#446     // com/zaxxer/nuprocess/windows/WindowsProcess.hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #25 = Fieldref           #80.#447      // com/zaxxer/nuprocess/windows/NuWinNT.INVALID_HANDLE_VALUE:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #26 = Methodref          #270.#448     // com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
   #27 = Methodref          #449.#450     // com/sun/jna/Pointer.equals:(Ljava/lang/Object;)Z
   #28 = Methodref          #4.#451       // java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
   #29 = Fieldref           #156.#452     // com/zaxxer/nuprocess/windows/WindowsProcess.myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
   #30 = Methodref          #62.#453      // com/zaxxer/nuprocess/windows/ProcessCompletions.wantWrite:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
   #31 = Fieldref           #156.#454     // com/zaxxer/nuprocess/windows/WindowsProcess.pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
   #32 = Methodref          #166.#455     // java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
   #33 = Fieldref           #156.#456     // com/zaxxer/nuprocess/windows/WindowsProcess.writePending:Z
   #34 = Class              #457          // java/lang/IllegalStateException
   #35 = String             #458          // closeStdin() method has already been called.
   #36 = Methodref          #34.#459      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #37 = Methodref          #156.#460     // com/zaxxer/nuprocess/windows/WindowsProcess.stdinClose:()V
   #38 = Methodref          #4.#461       // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
   #39 = Methodref          #166.#462     // java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
   #40 = Fieldref           #156.#463     // com/zaxxer/nuprocess/windows/WindowsProcess.processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
   #41 = Fieldref           #82.#464      // com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #42 = Integer            2147483647
   #43 = Methodref          #155.#465     // com/zaxxer/nuprocess/windows/NuKernel32.TerminateProcess:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;I)Z
   #44 = Methodref          #156.#466     // com/zaxxer/nuprocess/windows/WindowsProcess.getPidHandle:()Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #45 = Methodref          #155.#467     // com/zaxxer/nuprocess/windows/NuKernel32.GetProcessId:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)I
   #46 = Fieldref           #156.#468     // com/zaxxer/nuprocess/windows/WindowsProcess.isRunning:Z
   #47 = Methodref          #156.#469     // com/zaxxer/nuprocess/windows/WindowsProcess.callPreStart:()V
   #48 = Methodref          #156.#470     // com/zaxxer/nuprocess/windows/WindowsProcess.prepareProcess:(Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
   #49 = Methodref          #156.#471     // com/zaxxer/nuprocess/windows/WindowsProcess.registerProcess:()V
   #50 = Methodref          #156.#472     // com/zaxxer/nuprocess/windows/WindowsProcess.callStart:()V
   #51 = Fieldref           #82.#473      // com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #52 = Methodref          #155.#474     // com/zaxxer/nuprocess/windows/NuKernel32.ResumeThread:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
   #53 = Methodref          #155.#475     // com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
   #54 = Fieldref           #156.#476     // com/zaxxer/nuprocess/windows/WindowsProcess.hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #55 = Fieldref           #156.#477     // com/zaxxer/nuprocess/windows/WindowsProcess.hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #56 = Class              #478          // java/lang/Throwable
   #57 = Fieldref           #156.#479     // com/zaxxer/nuprocess/windows/WindowsProcess.LOGGER:Ljava/util/logging/Logger;
   #58 = Fieldref           #480.#481     // java/util/logging/Level.WARNING:Ljava/util/logging/Level;
   #59 = String             #482          // Failed to start process
   #60 = Methodref          #483.#484     // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #61 = Methodref          #156.#485     // com/zaxxer/nuprocess/windows/WindowsProcess.onExit:(I)V
   #62 = Class              #486          // com/zaxxer/nuprocess/windows/ProcessCompletions
   #63 = Methodref          #62.#487      // com/zaxxer/nuprocess/windows/ProcessCompletions."<init>":(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
   #64 = Methodref          #62.#488      // com/zaxxer/nuprocess/windows/ProcessCompletions.run:()V
   #65 = Methodref          #156.#489     // com/zaxxer/nuprocess/windows/WindowsProcess.createPipes:()V
   #66 = Methodref          #156.#490     // com/zaxxer/nuprocess/windows/WindowsProcess.getEnvironment:([Ljava/lang/String;)[C
   #67 = Class              #491          // com/sun/jna/Memory
   #68 = Methodref          #67.#492      // com/sun/jna/Memory."<init>":(J)V
   #69 = Methodref          #67.#493      // com/sun/jna/Memory.write:(J[CII)V
   #70 = Class              #494          // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO
   #71 = Methodref          #70.#427      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO."<init>":()V
   #72 = Methodref          #70.#495      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.clear:()V
   #73 = Class              #496          // com/zaxxer/nuprocess/windows/NuWinNT$DWORD
   #74 = Methodref          #70.#497      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.size:()I
   #75 = Methodref          #73.#492      // com/zaxxer/nuprocess/windows/NuWinNT$DWORD."<init>":(J)V
   #76 = Fieldref           #70.#498      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.cb:Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
   #77 = Fieldref           #70.#499      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.hStdInput:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #78 = Fieldref           #70.#500      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.hStdError:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #79 = Fieldref           #70.#501      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.hStdOutput:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
   #80 = Class              #502          // com/zaxxer/nuprocess/windows/NuWinNT
   #81 = Fieldref           #70.#503      // com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.dwFlags:I
   #82 = Class              #504          // com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION
   #83 = Methodref          #82.#427      // com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION."<init>":()V
   #84 = Long               134218756l
   #86 = InterfaceMethodref #349.#505     // java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
   #87 = InterfaceMethodref #349.#506     // java/nio/file/Path.toString:()Ljava/lang/String;
   #88 = Methodref          #507.#508     // com/sun/jna/Native.toCharArray:(Ljava/lang/String;)[C
   #89 = Methodref          #156.#509     // com/zaxxer/nuprocess/windows/WindowsProcess.getCommandLine:(Ljava/util/List;)[C
   #90 = Methodref          #155.#510     // com/zaxxer/nuprocess/windows/NuKernel32.CreateProcessW:(Lcom/sun/jna/WString;[CLcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;Lcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;ZLcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;Lcom/sun/jna/Pointer;[CLcom/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO;Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;)Z
   #91 = Methodref          #507.#511     // com/sun/jna/Native.getLastError:()I
   #92 = Class              #512          // java/lang/RuntimeException
   #93 = Class              #513          // java/lang/StringBuilder
   #94 = Methodref          #93.#427      // java/lang/StringBuilder."<init>":()V
   #95 = String             #514          // CreateProcessW() failed, error:
   #96 = Methodref          #93.#515      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #97 = Methodref          #93.#516      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #98 = Methodref          #93.#506      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #99 = Methodref          #92.#459      // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
  #100 = Methodref          #156.#517     // com/zaxxer/nuprocess/windows/WindowsProcess.afterStart:()V
  #101 = Fieldref           #156.#518     // com/zaxxer/nuprocess/windows/WindowsProcess.stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #102 = Fieldref           #156.#519     // com/zaxxer/nuprocess/windows/WindowsProcess.stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #103 = Fieldref           #156.#520     // com/zaxxer/nuprocess/windows/WindowsProcess.stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #104 = Fieldref           #161.#521     // com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
  #105 = Methodref          #123.#522     // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
  #106 = InterfaceMethodref #523.#524     // com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
  #107 = Methodref          #123.#525     // java/nio/ByteBuffer.position:()I
  #108 = Methodref          #123.#526     // java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
  #109 = Methodref          #123.#527     // java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
  #110 = Methodref          #123.#528     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
  #111 = Class              #529          // java/lang/Exception
  #112 = String             #530          // Exception thrown from handler
  #113 = Methodref          #123.#531     // java/nio/ByteBuffer.hasRemaining:()Z
  #114 = String             #532          // stdout buffer has no bytes remaining
  #115 = InterfaceMethodref #523.#533     // com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
  #116 = String             #534          // stderr buffer has no bytes remaining
  #117 = Fieldref           #161.#535     // com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #118 = Methodref          #123.#536     // java/nio/ByteBuffer.remaining:()I
  #119 = Fieldref           #161.#537     // com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.overlapped:Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;
  #120 = Methodref          #155.#538     // com/zaxxer/nuprocess/windows/NuKernel32.WriteFile:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Ljava/nio/ByteBuffer;ILcom/sun/jna/ptr/IntByReference;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
  #121 = Methodref          #123.#539     // java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
  #122 = Methodref          #166.#540     // java/util/concurrent/ConcurrentLinkedQueue.peek:()Ljava/lang/Object;
  #123 = Class              #541          // java/nio/ByteBuffer
  #124 = Methodref          #156.#542     // com/zaxxer/nuprocess/windows/WindowsProcess.closeStdin:(Z)V
  #125 = Methodref          #166.#495     // java/util/concurrent/ConcurrentLinkedQueue.clear:()V
  #126 = Class              #543          // com/zaxxer/nuprocess/NuProcess
  #127 = Integer            65536
  #128 = Methodref          #123.#544     // java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
  #129 = Methodref          #123.#545     // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #130 = Methodref          #166.#546     // java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
  #131 = InterfaceMethodref #523.#547     // com/zaxxer/nuprocess/NuProcessHandler.onStdinReady:(Ljava/nio/ByteBuffer;)Z
  #132 = Fieldref           #480.#548     // java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
  #133 = String             #549          // Exception thrown handling writes to stdin
  #134 = Methodref          #93.#550      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #135 = Methodref          #10.#551      // java/util/concurrent/CountDownLatch.getCount:()J
  #136 = Methodref          #7.#552       // java/util/concurrent/atomic/AtomicInteger.set:(I)V
  #137 = Integer            2147483646
  #138 = InterfaceMethodref #523.#485     // com/zaxxer/nuprocess/NuProcessHandler.onExit:(I)V
  #139 = Methodref          #10.#553      // java/util/concurrent/CountDownLatch.countDown:()V
  #140 = Fieldref           #156.#554     // com/zaxxer/nuprocess/windows/WindowsProcess.IS_SOFTEXIT_DETECTION:Z
  #141 = InterfaceMethodref #523.#555     // com/zaxxer/nuprocess/NuProcessHandler.onPreStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #142 = InterfaceMethodref #523.#556     // com/zaxxer/nuprocess/NuProcessHandler.onStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #143 = Class              #557          // com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES
  #144 = Methodref          #143.#427     // com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES."<init>":()V
  #145 = Methodref          #143.#497     // com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.size:()I
  #146 = Fieldref           #143.#558     // com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.dwLength:Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
  #147 = Fieldref           #143.#559     // com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.bInheritHandle:Z
  #148 = Fieldref           #143.#560     // com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.lpSecurityDescriptor:Lcom/sun/jna/Pointer;
  #149 = Fieldref           #156.#561     // com/zaxxer/nuprocess/windows/WindowsProcess.namedPipeCounter:Ljava/util/concurrent/atomic/AtomicInteger;
  #150 = Methodref          #7.#562       // java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
  #151 = Class              #563          // com/sun/jna/WString
  #152 = Fieldref           #156.#564     // com/zaxxer/nuprocess/windows/WindowsProcess.namedPipePathPrefix:Ljava/lang/String;
  #153 = Methodref          #93.#565      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
  #154 = Methodref          #151.#459     // com/sun/jna/WString."<init>":(Ljava/lang/String;)V
  #155 = Class              #566          // com/zaxxer/nuprocess/windows/NuKernel32
  #156 = Class              #567          // com/zaxxer/nuprocess/windows/WindowsProcess
  #157 = Methodref          #155.#568     // com/zaxxer/nuprocess/windows/NuKernel32.CreateNamedPipeW:(Lcom/sun/jna/WString;IIIIIILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #158 = Methodref          #156.#569     // com/zaxxer/nuprocess/windows/WindowsProcess.checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
  #159 = Integer            1073741952
  #160 = Methodref          #155.#570     // com/zaxxer/nuprocess/windows/NuKernel32.CreateFile:(Lcom/sun/jna/WString;IILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;IILcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #161 = Class              #571          // com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle
  #162 = Methodref          #161.#572     // com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle."<init>":(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;J)V
  #163 = Methodref          #155.#573     // com/zaxxer/nuprocess/windows/NuKernel32.ConnectNamedPipe:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
  #164 = Methodref          #156.#574     // com/zaxxer/nuprocess/windows/WindowsProcess.checkPipeConnected:(I)V
  #165 = Integer            1073741824
  #166 = Class              #575          // java/util/concurrent/ConcurrentLinkedQueue
  #167 = Methodref          #166.#427     // java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
  #168 = Methodref          #123.#576     // java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
  #169 = Fieldref           #156.#577     // com/zaxxer/nuprocess/windows/WindowsProcess.processorRoundRobin:I
  #170 = Methodref          #62.#578      // com/zaxxer/nuprocess/windows/ProcessCompletions.registerProcess:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
  #171 = Methodref          #62.#579      // com/zaxxer/nuprocess/windows/ProcessCompletions.checkAndSetRunning:()Z
  #172 = Methodref          #62.#580      // com/zaxxer/nuprocess/windows/ProcessCompletions.getSpawnBarrier:()Ljava/util/concurrent/CyclicBarrier;
  #173 = Class              #581          // java/lang/Thread
  #174 = String             #582          // ProcessIoCompletion
  #175 = Methodref          #173.#583     // java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
  #176 = Methodref          #173.#584     // java/lang/Thread.setDaemon:(Z)V
  #177 = Methodref          #173.#585     // java/lang/Thread.start:()V
  #178 = Methodref          #388.#586     // java/util/concurrent/CyclicBarrier.await:()I
  #179 = Methodref          #92.#587      // java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
  #180 = InterfaceMethodref #347.#588     // java/util/List.iterator:()Ljava/util/Iterator;
  #181 = InterfaceMethodref #395.#589     // java/util/Iterator.hasNext:()Z
  #182 = InterfaceMethodref #395.#590     // java/util/Iterator.next:()Ljava/lang/Object;
  #183 = Class              #591          // java/lang/String
  #184 = Methodref          #93.#592      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
  #185 = Methodref          #593.#594     // com/zaxxer/nuprocess/windows/WindowsCreateProcessEscape.quote:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
  #186 = Class              #595          // java/util/HashMap
  #187 = Methodref          #186.#427     // java/util/HashMap."<init>":()V
  #188 = Methodref          #183.#596     // java/lang/String.indexOf:(I)I
  #189 = Methodref          #183.#597     // java/lang/String.substring:(II)Ljava/lang/String;
  #190 = Methodref          #183.#598     // java/lang/String.length:()I
  #191 = Methodref          #183.#599     // java/lang/String.substring:(I)Ljava/lang/String;
  #192 = String             #600          //
  #193 = InterfaceMethodref #406.#601     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #194 = String             #602          // SystemRoot
  #195 = Methodref          #183.#603     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
  #196 = Methodref          #604.#605     // java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
  #197 = Methodref          #156.#606     // com/zaxxer/nuprocess/windows/WindowsProcess.getEnvironmentBlock:(Ljava/util/Map;)Ljava/lang/String;
  #198 = Methodref          #183.#607     // java/lang/String.toCharArray:()[C
  #199 = Class              #608          // java/util/ArrayList
  #200 = InterfaceMethodref #406.#609     // java/util/Map.entrySet:()Ljava/util/Set;
  #201 = Methodref          #199.#610     // java/util/ArrayList."<init>":(Ljava/util/Collection;)V
  #202 = Class              #611          // com/zaxxer/nuprocess/windows/WindowsProcess$EntryComparator
  #203 = Methodref          #202.#612     // com/zaxxer/nuprocess/windows/WindowsProcess$EntryComparator."<init>":(Lcom/zaxxer/nuprocess/windows/WindowsProcess$1;)V
  #204 = Methodref          #613.#614     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
  #205 = InterfaceMethodref #406.#497     // java/util/Map.size:()I
  #206 = Methodref          #93.#434      // java/lang/StringBuilder."<init>":(I)V
  #207 = Class              #615          // java/util/Map$Entry
  #208 = InterfaceMethodref #207.#616     // java/util/Map$Entry.getKey:()Ljava/lang/Object;
  #209 = InterfaceMethodref #207.#617     // java/util/Map$Entry.getValue:()Ljava/lang/Object;
  #210 = String             #618          // Unable to create pipe, error
  #211 = String             #619          // Unable to connect pipe, error:
  #212 = Methodref          #620.#621     // java/lang/Class.getCanonicalName:()Ljava/lang/String;
  #213 = Methodref          #483.#622     // java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
  #214 = String             #623          // \\\\.\\pipe\\NuProcess-
  #215 = Methodref          #624.#625     // java/util/UUID.randomUUID:()Ljava/util/UUID;
  #216 = Methodref          #624.#506     // java/util/UUID.toString:()Ljava/lang/String;
  #217 = String             #626          // -
  #218 = Methodref          #7.#434       // java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
  #219 = String             #627          // com.zaxxer.nuprocess.softExitDetection
  #220 = String             #628          // true
  #221 = Methodref          #604.#629     // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #222 = Methodref          #630.#631     // java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
  #223 = Fieldref           #632.#633     // com/zaxxer/nuprocess/internal/Constants.NUMBER_OF_THREADS:I
  #224 = Methodref          #62.#427      // com/zaxxer/nuprocess/windows/ProcessCompletions."<init>":()V
  #225 = String             #634          // com.zaxxer.nuprocess.enableShutdownHook
  #226 = Methodref          #635.#636     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
  #227 = Class              #637          // com/zaxxer/nuprocess/windows/WindowsProcess$1
  #228 = Methodref          #227.#427     // com/zaxxer/nuprocess/windows/WindowsProcess$1."<init>":()V
  #229 = Methodref          #173.#638     // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
  #230 = Methodref          #635.#639     // java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
  #231 = Class              #640          // java/lang/Object
  #232 = Utf8               PipeBundle
  #233 = Utf8               InnerClasses
  #234 = Utf8               EntryComparator
  #235 = Class              #641          // com/zaxxer/nuprocess/windows/WindowsProcess$NameComparator
  #236 = Utf8               NameComparator
  #237 = Utf8               IS_SOFTEXIT_DETECTION
  #238 = Utf8               Z
  #239 = Utf8               BUFFER_SIZE
  #240 = Utf8               I
  #241 = Utf8               ConstantValue
  #242 = Integer            4120
  #243 = Utf8               ENV_SYSTEMROOT
  #244 = Utf8               Ljava/lang/String;
  #245 = Utf8               LOGGER
  #246 = Utf8               Ljava/util/logging/Logger;
  #247 = Utf8               processors
  #248 = Utf8               [Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
  #249 = Utf8               processorRoundRobin
  #250 = Utf8               namedPipePathPrefix
  #251 = Utf8               namedPipeCounter
  #252 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;
  #253 = Utf8               myProcessor
  #254 = Utf8               Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
  #255 = Utf8               processHandler
  #256 = Utf8               Lcom/zaxxer/nuprocess/NuProcessHandler;
  #257 = Utf8               isRunning
  #258 = Utf8               exitCode
  #259 = Utf8               exitPending
  #260 = Utf8               Ljava/util/concurrent/CountDownLatch;
  #261 = Utf8               userWantsWrite
  #262 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;
  #263 = Utf8               writePending
  #264 = Utf8               stdinClosing
  #265 = Utf8               stdinPipe
  #266 = Utf8               Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #267 = Utf8               stdoutPipe
  #268 = Utf8               stderrPipe
  #269 = Utf8               hStdinWidow
  #270 = Class              #642          // com/zaxxer/nuprocess/windows/NuWinNT$HANDLE
  #271 = Utf8               HANDLE
  #272 = Utf8               Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #273 = Utf8               hStdoutWidow
  #274 = Utf8               hStderrWidow
  #275 = Utf8               pendingWrites
  #276 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue;
  #277 = Utf8               Signature
  #278 = Utf8               Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/nio/ByteBuffer;>;
  #279 = Utf8               pendingWriteStdinClosedTombstone
  #280 = Utf8               Ljava/nio/ByteBuffer;
  #281 = Utf8               inClosed
  #282 = Utf8               outClosed
  #283 = Utf8               errClosed
  #284 = Utf8               processInfo
  #285 = Utf8               PROCESS_INFORMATION
  #286 = Utf8               Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
  #287 = Utf8               <init>
  #288 = Utf8               (Lcom/zaxxer/nuprocess/NuProcessHandler;)V
  #289 = Utf8               Code
  #290 = Utf8               LineNumberTable
  #291 = Utf8               LocalVariableTable
  #292 = Utf8               this
  #293 = Utf8               Lcom/zaxxer/nuprocess/windows/WindowsProcess;
  #294 = Utf8               processListener
  #295 = Utf8               waitFor
  #296 = Utf8               (JLjava/util/concurrent/TimeUnit;)I
  #297 = Utf8               timeout
  #298 = Utf8               J
  #299 = Utf8               unit
  #300 = Utf8               Ljava/util/concurrent/TimeUnit;
  #301 = Utf8               StackMapTable
  #302 = Utf8               Exceptions
  #303 = Class              #643          // java/lang/InterruptedException
  #304 = Utf8               wantWrite
  #305 = Utf8               ()V
  #306 = Utf8               writeStdin
  #307 = Utf8               (Ljava/nio/ByteBuffer;)V
  #308 = Utf8               buffer
  #309 = Utf8               closeStdin
  #310 = Utf8               (Z)V
  #311 = Utf8               force
  #312 = Utf8               hasPendingWrites
  #313 = Utf8               ()Z
  #314 = Utf8               destroy
  #315 = Utf8               getPID
  #316 = Utf8               ()I
  #317 = Utf8               setProcessHandler
  #318 = Utf8               start
  #319 = Utf8               (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;
  #320 = Utf8               e
  #321 = Utf8               Ljava/lang/Throwable;
  #322 = Utf8               commands
  #323 = Utf8               Ljava/util/List;
  #324 = Utf8               environment
  #325 = Utf8               [Ljava/lang/String;
  #326 = Utf8               cwd
  #327 = Utf8               Ljava/nio/file/Path;
  #328 = Utf8               LocalVariableTypeTable
  #329 = Utf8               Ljava/util/List<Ljava/lang/String;>;
  #330 = Utf8               (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;
  #331 = Utf8               run
  #332 = Utf8               (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
  #333 = Utf8               (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)V
  #334 = Utf8               prepareProcess
  #335 = Utf8               lastError
  #336 = Utf8               block
  #337 = Utf8               [C
  #338 = Utf8               env
  #339 = Utf8               Lcom/sun/jna/Memory;
  #340 = Utf8               startupInfo
  #341 = Utf8               STARTUPINFO
  #342 = Utf8               Lcom/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO;
  #343 = Utf8               dwCreationFlags
  #344 = Utf8               DWORD
  #345 = Utf8               Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
  #346 = Utf8               cwdChars
  #347 = Class              #644          // java/util/List
  #348 = Class              #325          // "[Ljava/lang/String;"
  #349 = Class              #645          // java/nio/file/Path
  #350 = Class              #337          // "[C"
  #351 = Utf8               getPidHandle
  #352 = Utf8               ()Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #353 = Utf8               getStdinPipe
  #354 = Utf8               ()Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #355 = Utf8               getStdoutPipe
  #356 = Utf8               getStderrPipe
  #357 = Utf8               readStdout
  #358 = Utf8               (I)V
  #359 = Utf8               Ljava/lang/Exception;
  #360 = Utf8               transferred
  #361 = Utf8               readStderr
  #362 = Utf8               (I)Z
  #363 = Utf8               slice
  #364 = Utf8               byteBuffer
  #365 = Utf8               onExit
  #366 = Utf8               statusCode
  #367 = Utf8               isSoftExit
  #368 = Utf8               stdinClose
  #369 = Utf8               callPreStart
  #370 = Utf8               callStart
  #371 = Utf8               createPipes
  #372 = Utf8               sattr
  #373 = Utf8               SECURITY_ATTRIBUTES
  #374 = Utf8               Lcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;
  #375 = Utf8               ioCompletionKey
  #376 = Utf8               pipeName
  #377 = Utf8               Lcom/sun/jna/WString;
  #378 = Utf8               stdoutHandle
  #379 = Utf8               stderrHandle
  #380 = Utf8               stdinHandle
  #381 = Utf8               afterStart
  #382 = Utf8               registerProcess
  #383 = Utf8               spawnBarrier
  #384 = Utf8               Ljava/util/concurrent/CyclicBarrier;
  #385 = Utf8               t
  #386 = Utf8               Ljava/lang/Thread;
  #387 = Utf8               mySlot
  #388 = Class              #646          // java/util/concurrent/CyclicBarrier
  #389 = Utf8               getCommandLine
  #390 = Utf8               (Ljava/util/List;)[C
  #391 = Utf8               command
  #392 = Utf8               sb
  #393 = Utf8               Ljava/lang/StringBuilder;
  #394 = Utf8               isFirstCommand
  #395 = Class              #647          // java/util/Iterator
  #396 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)[C
  #397 = Utf8               getEnvironment
  #398 = Utf8               ([Ljava/lang/String;)[C
  #399 = Utf8               key
  #400 = Utf8               ndx
  #401 = Utf8               entry
  #402 = Utf8               systemRoot
  #403 = Utf8               Ljava/util/Map;
  #404 = Utf8               addSystemRoot
  #405 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #406 = Class              #648          // java/util/Map
  #407 = Utf8               getEnvironmentBlock
  #408 = Utf8               (Ljava/util/Map;)Ljava/lang/String;
  #409 = Utf8               Entry
  #410 = Utf8               Ljava/util/Map$Entry;
  #411 = Utf8               list
  #412 = Utf8               Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;
  #413 = Utf8               Ljava/util/List<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;>;
  #414 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/lang/String;
  #415 = Utf8               checkHandleValidity
  #416 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
  #417 = Utf8               handle
  #418 = Utf8               checkPipeConnected
  #419 = Utf8               status
  #420 = Utf8               access$000
  #421 = Utf8               ()[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
  #422 = Utf8               <clinit>
  #423 = Utf8               i
  #424 = Utf8               SourceFile
  #425 = Utf8               WindowsProcess.java
  #426 = NameAndType        #247:#248     // processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
  #427 = NameAndType        #287:#305     // "<init>":()V
  #428 = NameAndType        #255:#256     // processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
  #429 = Utf8               java/util/concurrent/atomic/AtomicBoolean
  #430 = NameAndType        #261:#262     // userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
  #431 = Utf8               java/util/concurrent/atomic/AtomicInteger
  #432 = NameAndType        #258:#252     // exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
  #433 = Utf8               java/util/concurrent/CountDownLatch
  #434 = NameAndType        #287:#358     // "<init>":(I)V
  #435 = NameAndType        #259:#260     // exitPending:Ljava/util/concurrent/CountDownLatch;
  #436 = NameAndType        #282:#238     // outClosed:Z
  #437 = NameAndType        #283:#238     // errClosed:Z
  #438 = NameAndType        #281:#238     // inClosed:Z
  #439 = NameAndType        #264:#262     // stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
  #440 = NameAndType        #649:#650     // allocate:(I)Ljava/nio/ByteBuffer;
  #441 = NameAndType        #279:#280     // pendingWriteStdinClosedTombstone:Ljava/nio/ByteBuffer;
  #442 = NameAndType        #651:#305     // await:()V
  #443 = NameAndType        #651:#652     // await:(JLjava/util/concurrent/TimeUnit;)Z
  #444 = Utf8               java/lang/Integer
  #445 = NameAndType        #653:#316     // get:()I
  #446 = NameAndType        #269:#272     // hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #447 = NameAndType        #654:#272     // INVALID_HANDLE_VALUE:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #448 = NameAndType        #655:#656     // getPointer:()Lcom/sun/jna/Pointer;
  #449 = Class              #657          // com/sun/jna/Pointer
  #450 = NameAndType        #658:#659     // equals:(Ljava/lang/Object;)Z
  #451 = NameAndType        #660:#310     // set:(Z)V
  #452 = NameAndType        #253:#254     // myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
  #453 = NameAndType        #304:#661     // wantWrite:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
  #454 = NameAndType        #275:#276     // pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
  #455 = NameAndType        #662:#659     // add:(Ljava/lang/Object;)Z
  #456 = NameAndType        #263:#238     // writePending:Z
  #457 = Utf8               java/lang/IllegalStateException
  #458 = Utf8               closeStdin() method has already been called.
  #459 = NameAndType        #287:#663     // "<init>":(Ljava/lang/String;)V
  #460 = NameAndType        #368:#305     // stdinClose:()V
  #461 = NameAndType        #664:#665     // compareAndSet:(ZZ)Z
  #462 = NameAndType        #666:#313     // isEmpty:()Z
  #463 = NameAndType        #284:#286     // processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
  #464 = NameAndType        #667:#272     // hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #465 = NameAndType        #668:#669     // TerminateProcess:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;I)Z
  #466 = NameAndType        #351:#352     // getPidHandle:()Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #467 = NameAndType        #670:#671     // GetProcessId:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)I
  #468 = NameAndType        #257:#238     // isRunning:Z
  #469 = NameAndType        #369:#305     // callPreStart:()V
  #470 = NameAndType        #334:#332     // prepareProcess:(Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
  #471 = NameAndType        #382:#305     // registerProcess:()V
  #472 = NameAndType        #370:#305     // callStart:()V
  #473 = NameAndType        #672:#272     // hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #474 = NameAndType        #673:#674     // ResumeThread:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
  #475 = NameAndType        #675:#676     // CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
  #476 = NameAndType        #273:#272     // hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #477 = NameAndType        #274:#272     // hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #478 = Utf8               java/lang/Throwable
  #479 = NameAndType        #245:#246     // LOGGER:Ljava/util/logging/Logger;
  #480 = Class              #677          // java/util/logging/Level
  #481 = NameAndType        #678:#679     // WARNING:Ljava/util/logging/Level;
  #482 = Utf8               Failed to start process
  #483 = Class              #680          // java/util/logging/Logger
  #484 = NameAndType        #681:#682     // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #485 = NameAndType        #365:#358     // onExit:(I)V
  #486 = Utf8               com/zaxxer/nuprocess/windows/ProcessCompletions
  #487 = NameAndType        #287:#661     // "<init>":(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
  #488 = NameAndType        #331:#305     // run:()V
  #489 = NameAndType        #371:#305     // createPipes:()V
  #490 = NameAndType        #397:#398     // getEnvironment:([Ljava/lang/String;)[C
  #491 = Utf8               com/sun/jna/Memory
  #492 = NameAndType        #287:#683     // "<init>":(J)V
  #493 = NameAndType        #684:#685     // write:(J[CII)V
  #494 = Utf8               com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO
  #495 = NameAndType        #686:#305     // clear:()V
  #496 = Utf8               com/zaxxer/nuprocess/windows/NuWinNT$DWORD
  #497 = NameAndType        #687:#316     // size:()I
  #498 = NameAndType        #688:#345     // cb:Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
  #499 = NameAndType        #689:#272     // hStdInput:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #500 = NameAndType        #690:#272     // hStdError:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #501 = NameAndType        #691:#272     // hStdOutput:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #502 = Utf8               com/zaxxer/nuprocess/windows/NuWinNT
  #503 = NameAndType        #692:#240     // dwFlags:I
  #504 = Utf8               com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION
  #505 = NameAndType        #693:#694     // toAbsolutePath:()Ljava/nio/file/Path;
  #506 = NameAndType        #695:#696     // toString:()Ljava/lang/String;
  #507 = Class              #697          // com/sun/jna/Native
  #508 = NameAndType        #698:#699     // toCharArray:(Ljava/lang/String;)[C
  #509 = NameAndType        #389:#390     // getCommandLine:(Ljava/util/List;)[C
  #510 = NameAndType        #700:#701     // CreateProcessW:(Lcom/sun/jna/WString;[CLcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;Lcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;ZLcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;Lcom/sun/jna/Pointer;[CLcom/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO;Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;)Z
  #511 = NameAndType        #702:#316     // getLastError:()I
  #512 = Utf8               java/lang/RuntimeException
  #513 = Utf8               java/lang/StringBuilder
  #514 = Utf8               CreateProcessW() failed, error:
  #515 = NameAndType        #703:#704     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #516 = NameAndType        #703:#705     // append:(I)Ljava/lang/StringBuilder;
  #517 = NameAndType        #381:#305     // afterStart:()V
  #518 = NameAndType        #265:#266     // stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #519 = NameAndType        #267:#266     // stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #520 = NameAndType        #268:#266     // stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
  #521 = NameAndType        #308:#280     // buffer:Ljava/nio/ByteBuffer;
  #522 = NameAndType        #706:#707     // flip:()Ljava/nio/ByteBuffer;
  #523 = Class              #708          // com/zaxxer/nuprocess/NuProcessHandler
  #524 = NameAndType        #709:#710     // onStdout:(Ljava/nio/ByteBuffer;Z)V
  #525 = NameAndType        #711:#316     // position:()I
  #526 = NameAndType        #712:#650     // limit:(I)Ljava/nio/ByteBuffer;
  #527 = NameAndType        #711:#650     // position:(I)Ljava/nio/ByteBuffer;
  #528 = NameAndType        #713:#707     // compact:()Ljava/nio/ByteBuffer;
  #529 = Utf8               java/lang/Exception
  #530 = Utf8               Exception thrown from handler
  #531 = NameAndType        #714:#313     // hasRemaining:()Z
  #532 = Utf8               stdout buffer has no bytes remaining
  #533 = NameAndType        #715:#710     // onStderr:(Ljava/nio/ByteBuffer;Z)V
  #534 = Utf8               stderr buffer has no bytes remaining
  #535 = NameAndType        #716:#272     // pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #536 = NameAndType        #717:#316     // remaining:()I
  #537 = NameAndType        #718:#721     // overlapped:Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;
  #538 = NameAndType        #722:#723     // WriteFile:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Ljava/nio/ByteBuffer;ILcom/sun/jna/ptr/IntByReference;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
  #539 = NameAndType        #686:#707     // clear:()Ljava/nio/ByteBuffer;
  #540 = NameAndType        #724:#725     // peek:()Ljava/lang/Object;
  #541 = Utf8               java/nio/ByteBuffer
  #542 = NameAndType        #309:#310     // closeStdin:(Z)V
  #543 = Utf8               com/zaxxer/nuprocess/NuProcess
  #544 = NameAndType        #363:#707     // slice:()Ljava/nio/ByteBuffer;
  #545 = NameAndType        #726:#727     // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #546 = NameAndType        #728:#725     // poll:()Ljava/lang/Object;
  #547 = NameAndType        #729:#730     // onStdinReady:(Ljava/nio/ByteBuffer;)Z
  #548 = NameAndType        #731:#679     // SEVERE:Ljava/util/logging/Level;
  #549 = Utf8               Exception thrown handling writes to stdin
  #550 = NameAndType        #703:#732     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #551 = NameAndType        #733:#734     // getCount:()J
  #552 = NameAndType        #660:#358     // set:(I)V
  #553 = NameAndType        #735:#305     // countDown:()V
  #554 = NameAndType        #237:#238     // IS_SOFTEXIT_DETECTION:Z
  #555 = NameAndType        #736:#737     // onPreStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #556 = NameAndType        #738:#737     // onStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
  #557 = Utf8               com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES
  #558 = NameAndType        #739:#345     // dwLength:Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
  #559 = NameAndType        #740:#238     // bInheritHandle:Z
  #560 = NameAndType        #741:#742     // lpSecurityDescriptor:Lcom/sun/jna/Pointer;
  #561 = NameAndType        #251:#252     // namedPipeCounter:Ljava/util/concurrent/atomic/AtomicInteger;
  #562 = NameAndType        #743:#316     // getAndIncrement:()I
  #563 = Utf8               com/sun/jna/WString
  #564 = NameAndType        #250:#244     // namedPipePathPrefix:Ljava/lang/String;
  #565 = NameAndType        #703:#744     // append:(J)Ljava/lang/StringBuilder;
  #566 = Utf8               com/zaxxer/nuprocess/windows/NuKernel32
  #567 = Utf8               com/zaxxer/nuprocess/windows/WindowsProcess
  #568 = NameAndType        #745:#746     // CreateNamedPipeW:(Lcom/sun/jna/WString;IIIIIILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #569 = NameAndType        #415:#416     // checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
  #570 = NameAndType        #747:#748     // CreateFile:(Lcom/sun/jna/WString;IILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;IILcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #571 = Utf8               com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle
  #572 = NameAndType        #287:#749     // "<init>":(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;J)V
  #573 = NameAndType        #750:#751     // ConnectNamedPipe:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
  #574 = NameAndType        #418:#358     // checkPipeConnected:(I)V
  #575 = Utf8               java/util/concurrent/ConcurrentLinkedQueue
  #576 = NameAndType        #752:#650     // allocateDirect:(I)Ljava/nio/ByteBuffer;
  #577 = NameAndType        #249:#240     // processorRoundRobin:I
  #578 = NameAndType        #382:#661     // registerProcess:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
  #579 = NameAndType        #753:#313     // checkAndSetRunning:()Z
  #580 = NameAndType        #754:#755     // getSpawnBarrier:()Ljava/util/concurrent/CyclicBarrier;
  #581 = Utf8               java/lang/Thread
  #582 = Utf8               ProcessIoCompletion
  #583 = NameAndType        #287:#756     // "<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
  #584 = NameAndType        #757:#310     // setDaemon:(Z)V
  #585 = NameAndType        #318:#305     // start:()V
  #586 = NameAndType        #651:#316     // await:()I
  #587 = NameAndType        #287:#758     // "<init>":(Ljava/lang/Throwable;)V
  #588 = NameAndType        #759:#760     // iterator:()Ljava/util/Iterator;
  #589 = NameAndType        #761:#313     // hasNext:()Z
  #590 = NameAndType        #762:#725     // next:()Ljava/lang/Object;
  #591 = Utf8               java/lang/String
  #592 = NameAndType        #703:#763     // append:(C)Ljava/lang/StringBuilder;
  #593 = Class              #764          // com/zaxxer/nuprocess/windows/WindowsCreateProcessEscape
  #594 = NameAndType        #765:#766     // quote:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
  #595 = Utf8               java/util/HashMap
  #596 = NameAndType        #767:#768     // indexOf:(I)I
  #597 = NameAndType        #769:#770     // substring:(II)Ljava/lang/String;
  #598 = NameAndType        #771:#316     // length:()I
  #599 = NameAndType        #769:#772     // substring:(I)Ljava/lang/String;
  #600 = Utf8
  #601 = NameAndType        #726:#773     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #602 = Utf8               SystemRoot
  #603 = NameAndType        #774:#775     // equalsIgnoreCase:(Ljava/lang/String;)Z
  #604 = Class              #776          // java/lang/System
  #605 = NameAndType        #777:#778     // getenv:(Ljava/lang/String;)Ljava/lang/String;
  #606 = NameAndType        #407:#408     // getEnvironmentBlock:(Ljava/util/Map;)Ljava/lang/String;
  #607 = NameAndType        #698:#779     // toCharArray:()[C
  #608 = Utf8               java/util/ArrayList
  #609 = NameAndType        #780:#781     // entrySet:()Ljava/util/Set;
  #610 = NameAndType        #287:#782     // "<init>":(Ljava/util/Collection;)V
  #611 = Utf8               com/zaxxer/nuprocess/windows/WindowsProcess$EntryComparator
  #612 = NameAndType        #287:#783     // "<init>":(Lcom/zaxxer/nuprocess/windows/WindowsProcess$1;)V
  #613 = Class              #784          // java/util/Collections
  #614 = NameAndType        #785:#786     // sort:(Ljava/util/List;Ljava/util/Comparator;)V
  #615 = Utf8               java/util/Map$Entry
  #616 = NameAndType        #787:#725     // getKey:()Ljava/lang/Object;
  #617 = NameAndType        #788:#725     // getValue:()Ljava/lang/Object;
  #618 = Utf8               Unable to create pipe, error
  #619 = Utf8               Unable to connect pipe, error:
  #620 = Class              #789          // java/lang/Class
  #621 = NameAndType        #790:#696     // getCanonicalName:()Ljava/lang/String;
  #622 = NameAndType        #791:#792     // getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
  #623 = Utf8               \\\\.\\pipe\\NuProcess-
  #624 = Class              #793          // java/util/UUID
  #625 = NameAndType        #794:#795     // randomUUID:()Ljava/util/UUID;
  #626 = Utf8               -
  #627 = Utf8               com.zaxxer.nuprocess.softExitDetection
  #628 = Utf8               true
  #629 = NameAndType        #796:#797     // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #630 = Class              #798          // java/lang/Boolean
  #631 = NameAndType        #799:#775     // parseBoolean:(Ljava/lang/String;)Z
  #632 = Class              #800          // com/zaxxer/nuprocess/internal/Constants
  #633 = NameAndType        #801:#240     // NUMBER_OF_THREADS:I
  #634 = Utf8               com.zaxxer.nuprocess.enableShutdownHook
  #635 = Class              #802          // java/lang/Runtime
  #636 = NameAndType        #803:#804     // getRuntime:()Ljava/lang/Runtime;
  #637 = Utf8               com/zaxxer/nuprocess/windows/WindowsProcess$1
  #638 = NameAndType        #287:#805     // "<init>":(Ljava/lang/Runnable;)V
  #639 = NameAndType        #806:#807     // addShutdownHook:(Ljava/lang/Thread;)V
  #640 = Utf8               java/lang/Object
  #641 = Utf8               com/zaxxer/nuprocess/windows/WindowsProcess$NameComparator
  #642 = Utf8               com/zaxxer/nuprocess/windows/NuWinNT$HANDLE
  #643 = Utf8               java/lang/InterruptedException
  #644 = Utf8               java/util/List
  #645 = Utf8               java/nio/file/Path
  #646 = Utf8               java/util/concurrent/CyclicBarrier
  #647 = Utf8               java/util/Iterator
  #648 = Utf8               java/util/Map
  #649 = Utf8               allocate
  #650 = Utf8               (I)Ljava/nio/ByteBuffer;
  #651 = Utf8               await
  #652 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z
  #653 = Utf8               get
  #654 = Utf8               INVALID_HANDLE_VALUE
  #655 = Utf8               getPointer
  #656 = Utf8               ()Lcom/sun/jna/Pointer;
  #657 = Utf8               com/sun/jna/Pointer
  #658 = Utf8               equals
  #659 = Utf8               (Ljava/lang/Object;)Z
  #660 = Utf8               set
  #661 = Utf8               (Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
  #662 = Utf8               add
  #663 = Utf8               (Ljava/lang/String;)V
  #664 = Utf8               compareAndSet
  #665 = Utf8               (ZZ)Z
  #666 = Utf8               isEmpty
  #667 = Utf8               hProcess
  #668 = Utf8               TerminateProcess
  #669 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;I)Z
  #670 = Utf8               GetProcessId
  #671 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)I
  #672 = Utf8               hThread
  #673 = Utf8               ResumeThread
  #674 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
  #675 = Utf8               CloseHandle
  #676 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
  #677 = Utf8               java/util/logging/Level
  #678 = Utf8               WARNING
  #679 = Utf8               Ljava/util/logging/Level;
  #680 = Utf8               java/util/logging/Logger
  #681 = Utf8               log
  #682 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
  #683 = Utf8               (J)V
  #684 = Utf8               write
  #685 = Utf8               (J[CII)V
  #686 = Utf8               clear
  #687 = Utf8               size
  #688 = Utf8               cb
  #689 = Utf8               hStdInput
  #690 = Utf8               hStdError
  #691 = Utf8               hStdOutput
  #692 = Utf8               dwFlags
  #693 = Utf8               toAbsolutePath
  #694 = Utf8               ()Ljava/nio/file/Path;
  #695 = Utf8               toString
  #696 = Utf8               ()Ljava/lang/String;
  #697 = Utf8               com/sun/jna/Native
  #698 = Utf8               toCharArray
  #699 = Utf8               (Ljava/lang/String;)[C
  #700 = Utf8               CreateProcessW
  #701 = Utf8               (Lcom/sun/jna/WString;[CLcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;Lcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;ZLcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;Lcom/sun/jna/Pointer;[CLcom/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO;Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;)Z
  #702 = Utf8               getLastError
  #703 = Utf8               append
  #704 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #705 = Utf8               (I)Ljava/lang/StringBuilder;
  #706 = Utf8               flip
  #707 = Utf8               ()Ljava/nio/ByteBuffer;
  #708 = Utf8               com/zaxxer/nuprocess/NuProcessHandler
  #709 = Utf8               onStdout
  #710 = Utf8               (Ljava/nio/ByteBuffer;Z)V
  #711 = Utf8               position
  #712 = Utf8               limit
  #713 = Utf8               compact
  #714 = Utf8               hasRemaining
  #715 = Utf8               onStderr
  #716 = Utf8               pipeHandle
  #717 = Utf8               remaining
  #718 = Utf8               overlapped
  #719 = Class              #808          // com/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED
  #720 = Utf8               OVERLAPPED
  #721 = Utf8               Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;
  #722 = Utf8               WriteFile
  #723 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Ljava/nio/ByteBuffer;ILcom/sun/jna/ptr/IntByReference;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
  #724 = Utf8               peek
  #725 = Utf8               ()Ljava/lang/Object;
  #726 = Utf8               put
  #727 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
  #728 = Utf8               poll
  #729 = Utf8               onStdinReady
  #730 = Utf8               (Ljava/nio/ByteBuffer;)Z
  #731 = Utf8               SEVERE
  #732 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #733 = Utf8               getCount
  #734 = Utf8               ()J
  #735 = Utf8               countDown
  #736 = Utf8               onPreStart
  #737 = Utf8               (Lcom/zaxxer/nuprocess/NuProcess;)V
  #738 = Utf8               onStart
  #739 = Utf8               dwLength
  #740 = Utf8               bInheritHandle
  #741 = Utf8               lpSecurityDescriptor
  #742 = Utf8               Lcom/sun/jna/Pointer;
  #743 = Utf8               getAndIncrement
  #744 = Utf8               (J)Ljava/lang/StringBuilder;
  #745 = Utf8               CreateNamedPipeW
  #746 = Utf8               (Lcom/sun/jna/WString;IIIIIILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #747 = Utf8               CreateFile
  #748 = Utf8               (Lcom/sun/jna/WString;IILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;IILcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
  #749 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;J)V
  #750 = Utf8               ConnectNamedPipe
  #751 = Utf8               (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
  #752 = Utf8               allocateDirect
  #753 = Utf8               checkAndSetRunning
  #754 = Utf8               getSpawnBarrier
  #755 = Utf8               ()Ljava/util/concurrent/CyclicBarrier;
  #756 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V
  #757 = Utf8               setDaemon
  #758 = Utf8               (Ljava/lang/Throwable;)V
  #759 = Utf8               iterator
  #760 = Utf8               ()Ljava/util/Iterator;
  #761 = Utf8               hasNext
  #762 = Utf8               next
  #763 = Utf8               (C)Ljava/lang/StringBuilder;
  #764 = Utf8               com/zaxxer/nuprocess/windows/WindowsCreateProcessEscape
  #765 = Utf8               quote
  #766 = Utf8               (Ljava/lang/StringBuilder;Ljava/lang/String;)V
  #767 = Utf8               indexOf
  #768 = Utf8               (I)I
  #769 = Utf8               substring
  #770 = Utf8               (II)Ljava/lang/String;
  #771 = Utf8               length
  #772 = Utf8               (I)Ljava/lang/String;
  #773 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #774 = Utf8               equalsIgnoreCase
  #775 = Utf8               (Ljava/lang/String;)Z
  #776 = Utf8               java/lang/System
  #777 = Utf8               getenv
  #778 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #779 = Utf8               ()[C
  #780 = Utf8               entrySet
  #781 = Utf8               ()Ljava/util/Set;
  #782 = Utf8               (Ljava/util/Collection;)V
  #783 = Utf8               (Lcom/zaxxer/nuprocess/windows/WindowsProcess$1;)V
  #784 = Utf8               java/util/Collections
  #785 = Utf8               sort
  #786 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V
  #787 = Utf8               getKey
  #788 = Utf8               getValue
  #789 = Utf8               java/lang/Class
  #790 = Utf8               getCanonicalName
  #791 = Utf8               getLogger
  #792 = Utf8               (Ljava/lang/String;)Ljava/util/logging/Logger;
  #793 = Utf8               java/util/UUID
  #794 = Utf8               randomUUID
  #795 = Utf8               ()Ljava/util/UUID;
  #796 = Utf8               getProperty
  #797 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #798 = Utf8               java/lang/Boolean
  #799 = Utf8               parseBoolean
  #800 = Utf8               com/zaxxer/nuprocess/internal/Constants
  #801 = Utf8               NUMBER_OF_THREADS
  #802 = Utf8               java/lang/Runtime
  #803 = Utf8               getRuntime
  #804 = Utf8               ()Ljava/lang/Runtime;
  #805 = Utf8               (Ljava/lang/Runnable;)V
  #806 = Utf8               addShutdownHook
  #807 = Utf8               (Ljava/lang/Thread;)V
  #808 = Utf8               com/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED
{
  private static final boolean IS_SOFTEXIT_DETECTION;
    descriptor: Z
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final int BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 4120

  private static final java.lang.String ENV_SYSTEMROOT;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: String SystemRoot

  private static final java.util.logging.Logger LOGGER;
    descriptor: Ljava/util/logging/Logger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final com.zaxxer.nuprocess.windows.ProcessCompletions[] processors;
    descriptor: [Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static int processorRoundRobin;
    descriptor: I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static final java.lang.String namedPipePathPrefix;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final java.util.concurrent.atomic.AtomicInteger namedPipeCounter;
    descriptor: Ljava/util/concurrent/atomic/AtomicInteger;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private volatile com.zaxxer.nuprocess.windows.ProcessCompletions myProcessor;
    descriptor: Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile com.zaxxer.nuprocess.NuProcessHandler processHandler;
    descriptor: Lcom/zaxxer/nuprocess/NuProcessHandler;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  protected volatile boolean isRunning;
    descriptor: Z
    flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE

  private java.util.concurrent.atomic.AtomicInteger exitCode;
    descriptor: Ljava/util/concurrent/atomic/AtomicInteger;
    flags: (0x0002) ACC_PRIVATE

  private java.util.concurrent.CountDownLatch exitPending;
    descriptor: Ljava/util/concurrent/CountDownLatch;
    flags: (0x0002) ACC_PRIVATE

  java.util.concurrent.atomic.AtomicBoolean userWantsWrite;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0000)

  private volatile boolean writePending;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private java.util.concurrent.atomic.AtomicBoolean stdinClosing;
    descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;
    flags: (0x0002) ACC_PRIVATE

  private volatile com.zaxxer.nuprocess.windows.WindowsProcess$PipeBundle stdinPipe;
    descriptor: Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile com.zaxxer.nuprocess.windows.WindowsProcess$PipeBundle stdoutPipe;
    descriptor: Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile com.zaxxer.nuprocess.windows.WindowsProcess$PipeBundle stderrPipe;
    descriptor: Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private com.zaxxer.nuprocess.windows.NuWinNT$HANDLE hStdinWidow;
    descriptor: Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
    flags: (0x0002) ACC_PRIVATE

  private com.zaxxer.nuprocess.windows.NuWinNT$HANDLE hStdoutWidow;
    descriptor: Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
    flags: (0x0002) ACC_PRIVATE

  private com.zaxxer.nuprocess.windows.NuWinNT$HANDLE hStderrWidow;
    descriptor: Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
    flags: (0x0002) ACC_PRIVATE

  private java.util.concurrent.ConcurrentLinkedQueue<java.nio.ByteBuffer> pendingWrites;
    descriptor: Ljava/util/concurrent/ConcurrentLinkedQueue;
    flags: (0x0002) ACC_PRIVATE
    Signature: #278                         // Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/nio/ByteBuffer;>;

  private final java.nio.ByteBuffer pendingWriteStdinClosedTombstone;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile boolean inClosed;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile boolean outClosed;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private volatile boolean errClosed;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  private com.zaxxer.nuprocess.windows.NuWinNT$PROCESS_INFORMATION processInfo;
    descriptor: Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
    flags: (0x0002) ACC_PRIVATE

  com.zaxxer.nuprocess.windows.WindowsProcess(com.zaxxer.nuprocess.NuProcessHandler);
    descriptor: (Lcom/zaxxer/nuprocess/NuProcessHandler;)V
    flags: (0x0000)
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         9: aload_0
        10: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
        13: dup
        14: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
        17: putfield      #6                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
        20: aload_0
        21: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
        24: dup
        25: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
        28: putfield      #9                  // Field exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
        31: aload_0
        32: new           #10                 // class java/util/concurrent/CountDownLatch
        35: dup
        36: iconst_1
        37: invokespecial #11                 // Method java/util/concurrent/CountDownLatch."<init>":(I)V
        40: putfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
        43: aload_0
        44: iconst_1
        45: putfield      #13                 // Field outClosed:Z
        48: aload_0
        49: iconst_1
        50: putfield      #14                 // Field errClosed:Z
        53: aload_0
        54: iconst_1
        55: putfield      #15                 // Field inClosed:Z
        58: aload_0
        59: new           #4                  // class java/util/concurrent/atomic/AtomicBoolean
        62: dup
        63: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
        66: putfield      #16                 // Field stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
        69: aload_0
        70: iconst_1
        71: invokestatic  #17                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        74: putfield      #18                 // Field pendingWriteStdinClosedTombstone:Ljava/nio/ByteBuffer;
        77: return
      LineNumberTable:
        line 114: 0
        line 115: 4
        line 117: 9
        line 118: 20
        line 119: 31
        line 120: 43
        line 121: 48
        line 122: 53
        line 123: 58
        line 124: 69
        line 125: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      78     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      78     1 processListener   Lcom/zaxxer/nuprocess/NuProcessHandler;

  public int waitFor(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    descriptor: (JLjava/util/concurrent/TimeUnit;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: lload_1
         1: lconst_0
         2: lcmp
         3: ifne          16
         6: aload_0
         7: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
        10: invokevirtual #19                 // Method java/util/concurrent/CountDownLatch.await:()V
        13: goto          31
        16: aload_0
        17: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
        20: lload_1
        21: aload_3
        22: invokevirtual #20                 // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
        25: ifne          31
        28: ldc           #22                 // int -2147483648
        30: ireturn
        31: aload_0
        32: getfield      #9                  // Field exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
        35: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
        38: ireturn
      LineNumberTable:
        line 135: 0
        line 136: 6
        line 138: 16
        line 139: 28
        line 142: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      39     1 timeout   J
            0      39     3  unit   Ljava/util/concurrent/TimeUnit;
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 14 /* same */
    Exceptions:
      throws java.lang.InterruptedException

  public void wantWrite();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
         4: ifnull        42
         7: getstatic     #25                 // Field com/zaxxer/nuprocess/windows/NuWinNT.INVALID_HANDLE_VALUE:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        10: invokevirtual #26                 // Method com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
        13: aload_0
        14: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        17: invokevirtual #26                 // Method com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
        20: invokevirtual #27                 // Method com/sun/jna/Pointer.equals:(Ljava/lang/Object;)Z
        23: ifne          42
        26: aload_0
        27: getfield      #6                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
        30: iconst_1
        31: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
        34: aload_0
        35: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        38: aload_0
        39: invokevirtual #30                 // Method com/zaxxer/nuprocess/windows/ProcessCompletions.wantWrite:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
        42: return
      LineNumberTable:
        line 149: 0
        line 150: 26
        line 151: 34
        line 153: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
      StackMapTable: number_of_entries = 1
        frame_type = 42 /* same */

  public synchronized void writeStdin(java.nio.ByteBuffer);
    descriptor: (Ljava/nio/ByteBuffer;)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
         4: ifnull        53
         7: getstatic     #25                 // Field com/zaxxer/nuprocess/windows/NuWinNT.INVALID_HANDLE_VALUE:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        10: invokevirtual #26                 // Method com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
        13: aload_0
        14: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        17: invokevirtual #26                 // Method com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
        20: invokevirtual #27                 // Method com/sun/jna/Pointer.equals:(Ljava/lang/Object;)Z
        23: ifne          53
        26: aload_0
        27: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
        30: aload_1
        31: invokevirtual #32                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
        34: pop
        35: aload_0
        36: getfield      #33                 // Field writePending:Z
        39: ifne          63
        42: aload_0
        43: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        46: aload_0
        47: invokevirtual #30                 // Method com/zaxxer/nuprocess/windows/ProcessCompletions.wantWrite:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
        50: goto          63
        53: new           #34                 // class java/lang/IllegalStateException
        56: dup
        57: ldc           #35                 // String closeStdin() method has already been called.
        59: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        62: athrow
        63: return
      LineNumberTable:
        line 159: 0
        line 160: 26
        line 161: 35
        line 162: 42
        line 166: 53
        line 168: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      64     1 buffer   Ljava/nio/ByteBuffer;
      StackMapTable: number_of_entries = 2
        frame_type = 53 /* same */
        frame_type = 9 /* same */

  public void closeStdin(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: iload_1
         1: ifeq          11
         4: aload_0
         5: invokevirtual #37                 // Method stdinClose:()V
         8: goto          63
        11: aload_0
        12: getfield      #16                 // Field stdinClosing:Ljava/util/concurrent/atomic/AtomicBoolean;
        15: iconst_0
        16: iconst_1
        17: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
        20: ifeq          53
        23: aload_0
        24: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
        27: aload_0
        28: getfield      #18                 // Field pendingWriteStdinClosedTombstone:Ljava/nio/ByteBuffer;
        31: invokevirtual #32                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
        34: pop
        35: aload_0
        36: getfield      #33                 // Field writePending:Z
        39: ifne          63
        42: aload_0
        43: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        46: aload_0
        47: invokevirtual #30                 // Method com/zaxxer/nuprocess/windows/ProcessCompletions.wantWrite:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
        50: goto          63
        53: new           #34                 // class java/lang/IllegalStateException
        56: dup
        57: ldc           #35                 // String closeStdin() method has already been called.
        59: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        62: athrow
        63: return
      LineNumberTable:
        line 174: 0
        line 175: 4
        line 177: 11
        line 178: 23
        line 179: 35
        line 180: 42
        line 183: 53
        line 186: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      64     1 force   Z
      StackMapTable: number_of_entries = 3
        frame_type = 11 /* same */
        frame_type = 41 /* same */
        frame_type = 9 /* same */

  public boolean hasPendingWrites();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
         4: invokevirtual #39                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
         7: ifne          14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public void destroy(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
         4: getfield      #41                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
         7: ldc           #42                 // int 2147483647
         9: invokestatic  #43                 // Method com/zaxxer/nuprocess/windows/NuKernel32.TerminateProcess:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;I)Z
        12: pop
        13: return
      LineNumberTable:
        line 199: 0
        line 200: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      14     1 force   Z

  public int getPID();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #44                 // Method getPidHandle:()Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
         4: invokestatic  #45                 // Method com/zaxxer/nuprocess/windows/NuKernel32.GetProcessId:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)I
         7: ireturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  public boolean isRunning();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field isRunning:Z
         4: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  public void setProcessHandler(com.zaxxer.nuprocess.NuProcessHandler);
    descriptor: (Lcom/zaxxer/nuprocess/NuProcessHandler;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         5: return
      LineNumberTable:
        line 220: 0
        line 221: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0       6     1 processHandler   Lcom/zaxxer/nuprocess/NuProcessHandler;

  com.zaxxer.nuprocess.NuProcess start(java.util.List<java.lang.String>, java.lang.String[], java.nio.file.Path);
    descriptor: (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;
    flags: (0x0000)
    Code:
      stack=4, locals=6, args_size=4
         0: aload_0
         1: invokespecial #47                 // Method callPreStart:()V
         4: aload_0
         5: aload_1
         6: aload_2
         7: aload_3
         8: invokespecial #48                 // Method prepareProcess:(Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
        11: aload_0
        12: invokespecial #49                 // Method registerProcess:()V
        15: aload_0
        16: invokespecial #50                 // Method callStart:()V
        19: aload_0
        20: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
        23: getfield      #51                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        26: invokestatic  #52                 // Method com/zaxxer/nuprocess/windows/NuKernel32.ResumeThread:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
        29: pop
        30: aload_0
        31: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        34: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        37: pop
        38: aload_0
        39: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        42: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        45: pop
        46: aload_0
        47: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        50: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        53: pop
        54: goto          134
        57: astore        4
        59: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        62: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
        65: ldc           #59                 // String Failed to start process
        67: aload         4
        69: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        72: aload_0
        73: ldc           #22                 // int -2147483648
        75: invokevirtual #61                 // Method onExit:(I)V
        78: aload_0
        79: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        82: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        85: pop
        86: aload_0
        87: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        90: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        93: pop
        94: aload_0
        95: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        98: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       101: pop
       102: goto          134
       105: astore        5
       107: aload_0
       108: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       111: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       114: pop
       115: aload_0
       116: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       119: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       122: pop
       123: aload_0
       124: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       127: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       130: pop
       131: aload         5
       133: athrow
       134: aload_0
       135: areturn
      Exception table:
         from    to  target type
             4    30    57   Class java/lang/Throwable
             4    30   105   any
            57    78   105   any
           105   107   105   any
      LineNumberTable:
        line 229: 0
        line 232: 4
        line 234: 11
        line 236: 15
        line 238: 19
        line 245: 30
        line 246: 38
        line 247: 46
        line 248: 54
        line 240: 57
        line 241: 59
        line 242: 72
        line 245: 78
        line 246: 86
        line 247: 94
        line 248: 102
        line 245: 105
        line 246: 115
        line 247: 123
        line 248: 131
        line 250: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           59      19     4     e   Ljava/lang/Throwable;
            0     136     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     136     1 commands   Ljava/util/List;
            0     136     2 environment   [Ljava/lang/String;
            0     136     3   cwd   Ljava/nio/file/Path;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0     136     1 commands   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 3
        frame_type = 121 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 111 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 28 /* same */
    Signature: #330                         // (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)Lcom/zaxxer/nuprocess/NuProcess;

  void run(java.util.List<java.lang.String>, java.lang.String[], java.nio.file.Path);
    descriptor: (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
    flags: (0x0000)
    Code:
      stack=4, locals=6, args_size=4
         0: aload_0
         1: invokespecial #47                 // Method callPreStart:()V
         4: aload_0
         5: aload_1
         6: aload_2
         7: aload_3
         8: invokespecial #48                 // Method prepareProcess:(Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
        11: aload_0
        12: new           #62                 // class com/zaxxer/nuprocess/windows/ProcessCompletions
        15: dup
        16: aload_0
        17: invokespecial #63                 // Method com/zaxxer/nuprocess/windows/ProcessCompletions."<init>":(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
        20: putfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        23: aload_0
        24: invokespecial #50                 // Method callStart:()V
        27: aload_0
        28: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
        31: getfield      #51                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        34: invokestatic  #52                 // Method com/zaxxer/nuprocess/windows/NuKernel32.ResumeThread:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
        37: pop
        38: aload_0
        39: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        42: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        45: pop
        46: aload_0
        47: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        50: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        53: pop
        54: aload_0
        55: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        58: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        61: pop
        62: goto          140
        65: astore        4
        67: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        70: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
        73: ldc           #59                 // String Failed to start process
        75: aload         4
        77: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        80: aload_0
        81: ldc           #22                 // int -2147483648
        83: invokevirtual #61                 // Method onExit:(I)V
        86: aload_0
        87: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        90: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        93: pop
        94: aload_0
        95: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        98: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       101: pop
       102: aload_0
       103: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       106: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       109: pop
       110: return
       111: astore        5
       113: aload_0
       114: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       117: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       120: pop
       121: aload_0
       122: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       125: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       128: pop
       129: aload_0
       130: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       133: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       136: pop
       137: aload         5
       139: athrow
       140: aload_0
       141: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
       144: invokevirtual #64                 // Method com/zaxxer/nuprocess/windows/ProcessCompletions.run:()V
       147: return
      Exception table:
         from    to  target type
             4    38    65   Class java/lang/Throwable
             4    38   111   any
            65    86   111   any
           111   113   111   any
      LineNumberTable:
        line 255: 0
        line 258: 4
        line 260: 11
        line 262: 23
        line 264: 27
        line 272: 38
        line 273: 46
        line 274: 54
        line 275: 62
        line 266: 65
        line 267: 67
        line 268: 80
        line 272: 86
        line 273: 94
        line 274: 102
        line 269: 110
        line 272: 111
        line 273: 121
        line 274: 129
        line 275: 137
        line 279: 140
        line 280: 147
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           67      44     4     e   Ljava/lang/Throwable;
            0     148     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     148     1 commands   Ljava/util/List;
            0     148     2 environment   [Ljava/lang/String;
            0     148     3   cwd   Ljava/nio/file/Path;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0     148     1 commands   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 3
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 65
          stack = [ class java/lang/Throwable ]
        frame_type = 109 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 28 /* same */
    Signature: #333                         // (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)V

  private void prepareProcess(java.util.List<java.lang.String>, java.lang.String[], java.nio.file.Path);
    descriptor: (Ljava/util/List;[Ljava/lang/String;Ljava/nio/file/Path;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=10, locals=10, args_size=4
         0: aload_0
         1: invokespecial #65                 // Method createPipes:()V
         4: aload_0
         5: aload_2
         6: invokespecial #66                 // Method getEnvironment:([Ljava/lang/String;)[C
         9: astore        4
        11: new           #67                 // class com/sun/jna/Memory
        14: dup
        15: aload         4
        17: arraylength
        18: iconst_3
        19: imul
        20: i2l
        21: invokespecial #68                 // Method com/sun/jna/Memory."<init>":(J)V
        24: astore        5
        26: aload         5
        28: lconst_0
        29: aload         4
        31: iconst_0
        32: aload         4
        34: arraylength
        35: invokevirtual #69                 // Method com/sun/jna/Memory.write:(J[CII)V
        38: new           #70                 // class com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO
        41: dup
        42: invokespecial #71                 // Method com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO."<init>":()V
        45: astore        6
        47: aload         6
        49: invokevirtual #72                 // Method com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.clear:()V
        52: aload         6
        54: new           #73                 // class com/zaxxer/nuprocess/windows/NuWinNT$DWORD
        57: dup
        58: aload         6
        60: invokevirtual #74                 // Method com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.size:()I
        63: i2l
        64: invokespecial #75                 // Method com/zaxxer/nuprocess/windows/NuWinNT$DWORD."<init>":(J)V
        67: putfield      #76                 // Field com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.cb:Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
        70: aload         6
        72: aload_0
        73: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        76: putfield      #77                 // Field com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.hStdInput:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        79: aload         6
        81: aload_0
        82: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        85: putfield      #78                 // Field com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.hStdError:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        88: aload         6
        90: aload_0
        91: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        94: putfield      #79                 // Field com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.hStdOutput:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        97: aload         6
        99: sipush        256
       102: putfield      #81                 // Field com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO.dwFlags:I
       105: aload_0
       106: new           #82                 // class com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION
       109: dup
       110: invokespecial #83                 // Method com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION."<init>":()V
       113: putfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       116: new           #73                 // class com/zaxxer/nuprocess/windows/NuWinNT$DWORD
       119: dup
       120: ldc2_w        #84                 // long 134218756l
       123: invokespecial #75                 // Method com/zaxxer/nuprocess/windows/NuWinNT$DWORD."<init>":(J)V
       126: astore        7
       128: aload_3
       129: ifnull        149
       132: aload_3
       133: invokeinterface #86,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;
       138: invokeinterface #87,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
       143: invokestatic  #88                 // Method com/sun/jna/Native.toCharArray:(Ljava/lang/String;)[C
       146: goto          150
       149: aconst_null
       150: astore        8
       152: aconst_null
       153: aload_0
       154: aload_1
       155: invokespecial #89                 // Method getCommandLine:(Ljava/util/List;)[C
       158: aconst_null
       159: aconst_null
       160: iconst_1
       161: aload         7
       163: aload         5
       165: aload         8
       167: aload         6
       169: aload_0
       170: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       173: invokestatic  #90                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateProcessW:(Lcom/sun/jna/WString;[CLcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;Lcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;ZLcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;Lcom/sun/jna/Pointer;[CLcom/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO;Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;)Z
       176: ifne          212
       179: invokestatic  #91                 // Method com/sun/jna/Native.getLastError:()I
       182: istore        9
       184: new           #92                 // class java/lang/RuntimeException
       187: dup
       188: new           #93                 // class java/lang/StringBuilder
       191: dup
       192: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
       195: ldc           #95                 // String CreateProcessW() failed, error:
       197: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       200: iload         9
       202: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       205: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       208: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       211: athrow
       212: aload_0
       213: invokespecial #100                // Method afterStart:()V
       216: return
      LineNumberTable:
        line 284: 0
        line 286: 4
        line 287: 11
        line 288: 26
        line 290: 38
        line 291: 47
        line 292: 52
        line 293: 70
        line 294: 79
        line 295: 88
        line 296: 97
        line 298: 105
        line 300: 116
        line 301: 128
        line 302: 152
        line 304: 179
        line 305: 184
        line 308: 212
        line 309: 216
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          184      28     9 lastError   I
            0     217     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     217     1 commands   Ljava/util/List;
            0     217     2 environment   [Ljava/lang/String;
            0     217     3   cwd   Ljava/nio/file/Path;
           11     206     4 block   [C
           26     191     5   env   Lcom/sun/jna/Memory;
           47     170     6 startupInfo   Lcom/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO;
          128      89     7 dwCreationFlags   Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
          152      65     8 cwdChars   [C
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0     217     1 commands   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 149
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, class java/util/List, class "[Ljava/lang/String;", class java/nio/file/Path, class "[C", class com/sun/jna/Memory, class com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO, class com/zaxxer/nuprocess/windows/NuWinNT$DWORD ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class "[C" ]
        frame_type = 252 /* append */
          offset_delta = 61
          locals = [ class "[C" ]
    Signature: #333                         // (Ljava/util/List<Ljava/lang/String;>;[Ljava/lang/String;Ljava/nio/file/Path;)V

  com.zaxxer.nuprocess.windows.NuWinNT$HANDLE getPidHandle();
    descriptor: ()Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
         4: getfield      #41                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
         7: areturn
      LineNumberTable:
        line 313: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  com.zaxxer.nuprocess.windows.WindowsProcess$PipeBundle getStdinPipe();
    descriptor: ()Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
         4: areturn
      LineNumberTable:
        line 318: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  com.zaxxer.nuprocess.windows.WindowsProcess$PipeBundle getStdoutPipe();
    descriptor: ()Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
         4: areturn
      LineNumberTable:
        line 323: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  com.zaxxer.nuprocess.windows.WindowsProcess$PipeBundle getStderrPipe();
    descriptor: ()Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
         4: areturn
      LineNumberTable:
        line 328: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  void readStdout(int);
    descriptor: (I)V
    flags: (0x0000)
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: getfield      #13                 // Field outClosed:Z
         4: ifeq          8
         7: return
         8: iload_1
         9: ifge          46
        12: aload_0
        13: iconst_1
        14: putfield      #13                 // Field outClosed:Z
        17: aload_0
        18: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        21: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        24: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
        27: pop
        28: aload_0
        29: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        32: aload_0
        33: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        36: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        39: iconst_1
        40: invokeinterface #106,  3          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
        45: return
        46: iload_1
        47: ifne          51
        50: return
        51: aload_0
        52: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        55: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        58: astore_2
        59: aload_2
        60: aload_2
        61: invokevirtual #107                // Method java/nio/ByteBuffer.position:()I
        64: iload_1
        65: iadd
        66: invokevirtual #108                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
        69: pop
        70: aload_2
        71: iconst_0
        72: invokevirtual #109                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
        75: pop
        76: aload_0
        77: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        80: aload_2
        81: iconst_0
        82: invokeinterface #106,  3          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
        87: aload_2
        88: invokevirtual #110                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
        91: pop
        92: goto          108
        95: astore_2
        96: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        99: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       102: ldc           #112                // String Exception thrown from handler
       104: aload_2
       105: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       108: aload_0
       109: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       112: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       115: invokevirtual #113                // Method java/nio/ByteBuffer.hasRemaining:()Z
       118: ifne          131
       121: new           #92                 // class java/lang/RuntimeException
       124: dup
       125: ldc           #114                // String stdout buffer has no bytes remaining
       127: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       130: athrow
       131: return
      Exception table:
         from    to  target type
             8    45    95   Class java/lang/Exception
            46    50    95   Class java/lang/Exception
            51    92    95   Class java/lang/Exception
      LineNumberTable:
        line 333: 0
        line 334: 7
        line 338: 8
        line 339: 12
        line 340: 17
        line 341: 28
        line 342: 45
        line 344: 46
        line 345: 50
        line 348: 51
        line 349: 59
        line 350: 70
        line 351: 76
        line 352: 87
        line 357: 92
        line 354: 95
        line 356: 96
        line 358: 108
        line 362: 121
        line 364: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           59      33     2 buffer   Ljava/nio/ByteBuffer;
           96      12     2     e   Ljava/lang/Exception;
            0     132     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     132     1 transferred   I
      StackMapTable: number_of_entries = 6
        frame_type = 8 /* same */
        frame_type = 37 /* same */
        frame_type = 4 /* same */
        frame_type = 107 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */
        frame_type = 22 /* same */

  void readStderr(int);
    descriptor: (I)V
    flags: (0x0000)
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: getfield      #14                 // Field errClosed:Z
         4: ifeq          8
         7: return
         8: iload_1
         9: ifge          46
        12: aload_0
        13: iconst_1
        14: putfield      #14                 // Field errClosed:Z
        17: aload_0
        18: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        21: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        24: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
        27: pop
        28: aload_0
        29: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        32: aload_0
        33: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        36: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        39: iconst_1
        40: invokeinterface #115,  3          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
        45: return
        46: iload_1
        47: ifne          51
        50: return
        51: aload_0
        52: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        55: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        58: astore_2
        59: aload_2
        60: aload_2
        61: invokevirtual #107                // Method java/nio/ByteBuffer.position:()I
        64: iload_1
        65: iadd
        66: invokevirtual #108                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
        69: pop
        70: aload_2
        71: iconst_0
        72: invokevirtual #109                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
        75: pop
        76: aload_0
        77: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        80: aload_2
        81: iconst_0
        82: invokeinterface #115,  3          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
        87: aload_2
        88: invokevirtual #110                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
        91: pop
        92: goto          108
        95: astore_2
        96: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        99: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       102: ldc           #112                // String Exception thrown from handler
       104: aload_2
       105: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       108: aload_0
       109: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       112: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       115: invokevirtual #113                // Method java/nio/ByteBuffer.hasRemaining:()Z
       118: ifne          131
       121: new           #92                 // class java/lang/RuntimeException
       124: dup
       125: ldc           #116                // String stderr buffer has no bytes remaining
       127: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       130: athrow
       131: return
      Exception table:
         from    to  target type
             8    45    95   Class java/lang/Exception
            46    50    95   Class java/lang/Exception
            51    92    95   Class java/lang/Exception
      LineNumberTable:
        line 368: 0
        line 369: 7
        line 373: 8
        line 374: 12
        line 375: 17
        line 376: 28
        line 377: 45
        line 379: 46
        line 380: 50
        line 383: 51
        line 384: 59
        line 385: 70
        line 386: 76
        line 387: 87
        line 392: 92
        line 389: 95
        line 391: 96
        line 393: 108
        line 397: 121
        line 399: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           59      33     2 buffer   Ljava/nio/ByteBuffer;
           96      12     2     e   Ljava/lang/Exception;
            0     132     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     132     1 transferred   I
      StackMapTable: number_of_entries = 6
        frame_type = 8 /* same */
        frame_type = 37 /* same */
        frame_type = 4 /* same */
        frame_type = 107 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */
        frame_type = 22 /* same */

  boolean writeStdin(int);
    descriptor: (I)Z
    flags: (0x0000)
    Code:
      stack=5, locals=4, args_size=2
         0: aload_0
         1: getfield      #33                 // Field writePending:Z
         4: ifeq          13
         7: iload_1
         8: ifne          13
        11: iconst_0
        12: ireturn
        13: aload_0
        14: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        17: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        20: aload_0
        21: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        24: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        27: invokevirtual #107                // Method java/nio/ByteBuffer.position:()I
        30: iload_1
        31: iadd
        32: invokevirtual #109                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
        35: pop
        36: aload_0
        37: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        40: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        43: invokevirtual #113                // Method java/nio/ByteBuffer.hasRemaining:()Z
        46: ifeq          92
        49: aload_0
        50: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        53: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        56: aload_0
        57: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        60: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        63: aload_0
        64: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        67: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        70: invokevirtual #118                // Method java/nio/ByteBuffer.remaining:()I
        73: aconst_null
        74: aload_0
        75: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        78: getfield      #119                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.overlapped:Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;
        81: invokestatic  #120                // Method com/zaxxer/nuprocess/windows/NuKernel32.WriteFile:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Ljava/nio/ByteBuffer;ILcom/sun/jna/ptr/IntByReference;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
        84: pop
        85: aload_0
        86: iconst_1
        87: putfield      #33                 // Field writePending:Z
        90: iconst_0
        91: ireturn
        92: aload_0
        93: iconst_0
        94: putfield      #33                 // Field writePending:Z
        97: aload_0
        98: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       101: invokevirtual #39                 // Method java/util/concurrent/ConcurrentLinkedQueue.isEmpty:()Z
       104: ifne          253
       107: aload_0
       108: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       111: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       114: invokevirtual #121                // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
       117: pop
       118: aload_0
       119: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       122: invokevirtual #122                // Method java/util/concurrent/ConcurrentLinkedQueue.peek:()Ljava/lang/Object;
       125: checkcast     #123                // class java/nio/ByteBuffer
       128: astore_2
       129: aload_2
       130: aload_0
       131: getfield      #18                 // Field pendingWriteStdinClosedTombstone:Ljava/nio/ByteBuffer;
       134: if_acmpne     159
       137: aload_0
       138: iconst_1
       139: invokevirtual #124                // Method closeStdin:(Z)V
       142: aload_0
       143: getfield      #6                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       146: iconst_0
       147: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       150: aload_0
       151: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       154: invokevirtual #125                // Method java/util/concurrent/ConcurrentLinkedQueue.clear:()V
       157: iconst_0
       158: ireturn
       159: aload_2
       160: invokevirtual #118                // Method java/nio/ByteBuffer.remaining:()I
       163: ldc           #127                // int 65536
       165: if_icmple     207
       168: aload_2
       169: invokevirtual #128                // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
       172: astore_3
       173: aload_3
       174: ldc           #127                // int 65536
       176: invokevirtual #108                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
       179: pop
       180: aload_0
       181: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       184: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       187: aload_3
       188: invokevirtual #129                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
       191: pop
       192: aload_2
       193: aload_2
       194: invokevirtual #107                // Method java/nio/ByteBuffer.position:()I
       197: ldc           #127                // int 65536
       199: iadd
       200: invokevirtual #109                // Method java/nio/ByteBuffer.position:(I)Ljava/nio/ByteBuffer;
       203: pop
       204: goto          227
       207: aload_0
       208: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       211: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       214: aload_2
       215: invokevirtual #129                // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
       218: pop
       219: aload_0
       220: getfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
       223: invokevirtual #130                // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       226: pop
       227: aload_0
       228: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       231: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       234: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
       237: pop
       238: aload_0
       239: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       242: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       245: invokevirtual #113                // Method java/nio/ByteBuffer.hasRemaining:()Z
       248: ifeq          253
       251: iconst_1
       252: ireturn
       253: aload_0
       254: getfield      #6                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       257: iconst_1
       258: iconst_0
       259: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       262: ifne          267
       265: iconst_0
       266: ireturn
       267: aload_0
       268: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       271: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       274: astore_2
       275: aload_2
       276: invokevirtual #121                // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;
       279: pop
       280: aload_0
       281: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       284: aload_2
       285: invokeinterface #131,  2          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdinReady:(Ljava/nio/ByteBuffer;)Z
       290: ifeq          301
       293: aload_0
       294: getfield      #6                  // Field userWantsWrite:Ljava/util/concurrent/atomic/AtomicBoolean;
       297: iconst_1
       298: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       301: iconst_1
       302: ireturn
       303: astore_2
       304: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
       307: getstatic     #132                // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       310: new           #93                 // class java/lang/StringBuilder
       313: dup
       314: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
       317: ldc           #133                // String Exception thrown handling writes to stdin
       319: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       322: aload_0
       323: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       326: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       329: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       332: aload_2
       333: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       336: iconst_0
       337: ireturn
      Exception table:
         from    to  target type
           267   302   303   Class java/lang/Exception
      LineNumberTable:
        line 403: 0
        line 404: 11
        line 407: 13
        line 408: 36
        line 409: 49
        line 411: 85
        line 412: 90
        line 415: 92
        line 417: 97
        line 418: 107
        line 420: 118
        line 421: 129
        line 422: 137
        line 423: 142
        line 424: 150
        line 425: 157
        line 426: 159
        line 427: 168
        line 428: 173
        line 429: 180
        line 430: 192
        line 431: 204
        line 433: 207
        line 434: 219
        line 437: 227
        line 439: 238
        line 440: 251
        line 446: 253
        line 447: 265
        line 451: 267
        line 452: 275
        line 453: 280
        line 454: 293
        line 457: 301
        line 459: 303
        line 460: 304
        line 463: 336
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          173      31     3 slice   Ljava/nio/ByteBuffer;
          129     124     2 byteBuffer   Ljava/nio/ByteBuffer;
          275      28     2 buffer   Ljava/nio/ByteBuffer;
          304      34     2     e   Ljava/lang/Exception;
            0     338     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     338     1 transferred   I
      StackMapTable: number_of_entries = 9
        frame_type = 13 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 78
        frame_type = 252 /* append */
          offset_delta = 66
          locals = [ class java/nio/ByteBuffer ]
        frame_type = 47 /* same */
        frame_type = 19 /* same */
        frame_type = 250 /* chop */
          offset_delta = 25
        frame_type = 13 /* same */
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ class java/nio/ByteBuffer ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, int ]
          stack = [ class java/lang/Exception ]

  void onExit(int);
    descriptor: (I)V
    flags: (0x0000)
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
         4: invokevirtual #135                // Method java/util/concurrent/CountDownLatch.getCount:()J
         7: lconst_0
         8: lcmp
         9: ifne          13
        12: return
        13: aload_0
        14: iconst_0
        15: putfield      #46                 // Field isRunning:Z
        18: aload_0
        19: getfield      #9                  // Field exitCode:Ljava/util/concurrent/atomic/AtomicInteger;
        22: iload_1
        23: invokevirtual #136                // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
        26: aload_0
        27: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        30: ifnull        78
        33: aload_0
        34: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        37: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        40: ifnull        78
        43: aload_0
        44: getfield      #13                 // Field outClosed:Z
        47: ifne          78
        50: aload_0
        51: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        54: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        57: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
        60: pop
        61: aload_0
        62: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
        65: aload_0
        66: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        69: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        72: iconst_1
        73: invokeinterface #106,  3          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStdout:(Ljava/nio/ByteBuffer;Z)V
        78: aload_0
        79: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        82: ifnull        130
        85: aload_0
        86: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        89: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        92: ifnull        130
        95: aload_0
        96: getfield      #14                 // Field errClosed:Z
        99: ifne          130
       102: aload_0
       103: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       106: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       109: invokevirtual #105                // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
       112: pop
       113: aload_0
       114: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       117: aload_0
       118: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       121: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       124: iconst_1
       125: invokeinterface #115,  3          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStderr:(Ljava/nio/ByteBuffer;Z)V
       130: iload_1
       131: ldc           #137                // int 2147483646
       133: if_icmpeq     146
       136: aload_0
       137: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       140: iload_1
       141: invokeinterface #138,  2          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onExit:(I)V
       146: aload_0
       147: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
       150: invokevirtual #139                // Method java/util/concurrent/CountDownLatch.countDown:()V
       153: aload_0
       154: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       157: ifnull        186
       160: aload_0
       161: getfield      #15                 // Field inClosed:Z
       164: ifne          178
       167: aload_0
       168: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       171: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       174: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       177: pop
       178: aload_0
       179: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       182: aconst_null
       183: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       186: aload_0
       187: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       190: ifnull        212
       193: aload_0
       194: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       197: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       200: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       203: pop
       204: aload_0
       205: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       208: aconst_null
       209: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       212: aload_0
       213: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       216: ifnull        238
       219: aload_0
       220: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       223: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       226: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       229: pop
       230: aload_0
       231: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       234: aconst_null
       235: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       238: aload_0
       239: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       242: ifnull        267
       245: aload_0
       246: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       249: getfield      #51                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       252: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       255: pop
       256: aload_0
       257: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       260: getfield      #41                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       263: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       266: pop
       267: aload_0
       268: aconst_null
       269: putfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       272: aload_0
       273: aconst_null
       274: putfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       277: aload_0
       278: aconst_null
       279: putfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       282: aload_0
       283: aconst_null
       284: putfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       287: goto          591
       290: astore_2
       291: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
       294: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       297: ldc           #112                // String Exception thrown from handler
       299: aload_2
       300: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
       303: aload_0
       304: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
       307: invokevirtual #139                // Method java/util/concurrent/CountDownLatch.countDown:()V
       310: aload_0
       311: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       314: ifnull        343
       317: aload_0
       318: getfield      #15                 // Field inClosed:Z
       321: ifne          335
       324: aload_0
       325: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       328: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       331: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       334: pop
       335: aload_0
       336: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       339: aconst_null
       340: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       343: aload_0
       344: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       347: ifnull        369
       350: aload_0
       351: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       354: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       357: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       360: pop
       361: aload_0
       362: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       365: aconst_null
       366: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       369: aload_0
       370: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       373: ifnull        395
       376: aload_0
       377: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       380: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       383: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       386: pop
       387: aload_0
       388: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       391: aconst_null
       392: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       395: aload_0
       396: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       399: ifnull        424
       402: aload_0
       403: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       406: getfield      #51                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       409: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       412: pop
       413: aload_0
       414: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       417: getfield      #41                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       420: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       423: pop
       424: aload_0
       425: aconst_null
       426: putfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       429: aload_0
       430: aconst_null
       431: putfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       434: aload_0
       435: aconst_null
       436: putfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       439: aload_0
       440: aconst_null
       441: putfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       444: goto          591
       447: astore_3
       448: aload_0
       449: getfield      #12                 // Field exitPending:Ljava/util/concurrent/CountDownLatch;
       452: invokevirtual #139                // Method java/util/concurrent/CountDownLatch.countDown:()V
       455: aload_0
       456: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       459: ifnull        488
       462: aload_0
       463: getfield      #15                 // Field inClosed:Z
       466: ifne          480
       469: aload_0
       470: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       473: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       476: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       479: pop
       480: aload_0
       481: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       484: aconst_null
       485: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       488: aload_0
       489: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       492: ifnull        514
       495: aload_0
       496: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       499: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       502: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       505: pop
       506: aload_0
       507: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       510: aconst_null
       511: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       514: aload_0
       515: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       518: ifnull        540
       521: aload_0
       522: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       525: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       528: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       531: pop
       532: aload_0
       533: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       536: aconst_null
       537: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
       540: aload_0
       541: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       544: ifnull        569
       547: aload_0
       548: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       551: getfield      #51                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hThread:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       554: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       557: pop
       558: aload_0
       559: getfield      #40                 // Field processInfo:Lcom/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION;
       562: getfield      #41                 // Field com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION.hProcess:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       565: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
       568: pop
       569: aload_0
       570: aconst_null
       571: putfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       574: aload_0
       575: aconst_null
       576: putfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       579: aload_0
       580: aconst_null
       581: putfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       584: aload_0
       585: aconst_null
       586: putfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
       589: aload_3
       590: athrow
       591: return
      Exception table:
         from    to  target type
            13   146   290   Class java/lang/Exception
            13   146   447   any
           290   303   447   any
      LineNumberTable:
        line 469: 0
        line 470: 12
        line 474: 13
        line 475: 18
        line 476: 26
        line 477: 50
        line 478: 61
        line 480: 78
        line 481: 102
        line 482: 113
        line 484: 130
        line 485: 136
        line 493: 146
        line 495: 153
        line 496: 160
        line 497: 167
        line 501: 178
        line 504: 186
        line 505: 193
        line 506: 204
        line 508: 212
        line 509: 219
        line 510: 230
        line 513: 238
        line 514: 245
        line 515: 256
        line 518: 267
        line 519: 272
        line 520: 277
        line 521: 282
        line 522: 287
        line 488: 290
        line 490: 291
        line 493: 303
        line 495: 310
        line 496: 317
        line 497: 324
        line 501: 335
        line 504: 343
        line 505: 350
        line 506: 361
        line 508: 369
        line 509: 376
        line 510: 387
        line 513: 395
        line 514: 402
        line 515: 413
        line 518: 424
        line 519: 429
        line 520: 434
        line 521: 439
        line 522: 444
        line 493: 447
        line 495: 455
        line 496: 462
        line 497: 469
        line 501: 480
        line 504: 488
        line 505: 495
        line 506: 506
        line 508: 514
        line 509: 521
        line 510: 532
        line 513: 540
        line 514: 547
        line 515: 558
        line 518: 569
        line 519: 574
        line 520: 579
        line 521: 584
        line 522: 589
        line 523: 591
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          291      12     2     e   Ljava/lang/Exception;
            0     592     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     592     1 statusCode   I
      StackMapTable: number_of_entries = 22
        frame_type = 13 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 64
        frame_type = 51 /* same */
        frame_type = 15 /* same */
        frame_type = 31 /* same */
        frame_type = 7 /* same */
        frame_type = 25 /* same */
        frame_type = 25 /* same */
        frame_type = 28 /* same */
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 44 /* same */
        frame_type = 7 /* same */
        frame_type = 25 /* same */
        frame_type = 25 /* same */
        frame_type = 28 /* same */
        frame_type = 86 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 253 /* append */
          offset_delta = 32
          locals = [ top, class java/lang/Throwable ]
        frame_type = 7 /* same */
        frame_type = 25 /* same */
        frame_type = 25 /* same */
        frame_type = 28 /* same */
        frame_type = 249 /* chop */
          offset_delta = 21

  boolean isSoftExit();
    descriptor: ()Z
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #13                 // Field outClosed:Z
         4: ifeq          24
         7: aload_0
         8: getfield      #14                 // Field errClosed:Z
        11: ifeq          24
        14: getstatic     #140                // Field IS_SOFTEXIT_DETECTION:Z
        17: ifeq          24
        20: iconst_1
        21: goto          25
        24: iconst_0
        25: ireturn
      LineNumberTable:
        line 527: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 24 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  void stdinClose();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #15                 // Field inClosed:Z
         4: ifne          25
         7: aload_0
         8: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        11: ifnull        25
        14: aload_0
        15: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        18: getfield      #117                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.pipeHandle:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        21: invokestatic  #53                 // Method com/zaxxer/nuprocess/windows/NuKernel32.CloseHandle:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Z
        24: pop
        25: aload_0
        26: iconst_1
        27: putfield      #15                 // Field inClosed:Z
        30: return
      LineNumberTable:
        line 532: 0
        line 533: 14
        line 535: 25
        line 536: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
      StackMapTable: number_of_entries = 1
        frame_type = 25 /* same */

  private void callPreStart();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         4: aload_0
         5: invokeinterface #141,  2          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onPreStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
        10: goto          26
        13: astore_1
        14: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        17: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
        20: ldc           #112                // String Exception thrown from handler
        22: aload_1
        23: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        26: return
      Exception table:
         from    to  target type
             0    10    13   Class java/lang/Exception
      LineNumberTable:
        line 541: 0
        line 546: 10
        line 543: 13
        line 545: 14
        line 547: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      12     1     e   Ljava/lang/Exception;
            0      27     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */

  private void callStart();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #3                  // Field processHandler:Lcom/zaxxer/nuprocess/NuProcessHandler;
         4: aload_0
         5: invokeinterface #142,  2          // InterfaceMethod com/zaxxer/nuprocess/NuProcessHandler.onStart:(Lcom/zaxxer/nuprocess/NuProcess;)V
        10: goto          26
        13: astore_1
        14: getstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        17: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
        20: ldc           #112                // String Exception thrown from handler
        22: aload_1
        23: invokevirtual #60                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        26: return
      Exception table:
         from    to  target type
             0    10    13   Class java/lang/Exception
      LineNumberTable:
        line 552: 0
        line 557: 10
        line 554: 13
        line 556: 14
        line 558: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      12     1     e   Ljava/lang/Exception;
            0      27     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
      StackMapTable: number_of_entries = 2
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 12 /* same */

  private void createPipes();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=8, args_size=1
         0: new           #143                // class com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES
         3: dup
         4: invokespecial #144                // Method com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES."<init>":()V
         7: astore_1
         8: aload_1
         9: new           #73                 // class com/zaxxer/nuprocess/windows/NuWinNT$DWORD
        12: dup
        13: aload_1
        14: invokevirtual #145                // Method com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.size:()I
        17: i2l
        18: invokespecial #75                 // Method com/zaxxer/nuprocess/windows/NuWinNT$DWORD."<init>":(J)V
        21: putfield      #146                // Field com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.dwLength:Lcom/zaxxer/nuprocess/windows/NuWinNT$DWORD;
        24: aload_1
        25: iconst_1
        26: putfield      #147                // Field com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.bInheritHandle:Z
        29: aload_1
        30: aconst_null
        31: putfield      #148                // Field com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES.lpSecurityDescriptor:Lcom/sun/jna/Pointer;
        34: getstatic     #149                // Field namedPipeCounter:Ljava/util/concurrent/atomic/AtomicInteger;
        37: invokevirtual #150                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
        40: i2l
        41: lstore_2
        42: new           #151                // class com/sun/jna/WString
        45: dup
        46: new           #93                 // class java/lang/StringBuilder
        49: dup
        50: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
        53: getstatic     #152                // Field namedPipePathPrefix:Ljava/lang/String;
        56: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: lload_2
        60: invokevirtual #153                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
        63: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        66: invokespecial #154                // Method com/sun/jna/WString."<init>":(Ljava/lang/String;)V
        69: astore        4
        71: aload_0
        72: aload         4
        74: iconst_2
        75: iconst_0
        76: iconst_1
        77: sipush        4120
        80: sipush        4120
        83: iconst_0
        84: aload_1
        85: invokestatic  #157                // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateNamedPipeW:(Lcom/sun/jna/WString;IIIIIILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        88: putfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        91: aload_0
        92: aload_0
        93: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
        96: invokespecial #158                // Method checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
        99: aload         4
       101: ldc           #22                 // int -2147483648
       103: iconst_1
       104: aconst_null
       105: iconst_3
       106: ldc           #159                // int 1073741952
       108: aconst_null
       109: invokestatic  #160                // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateFile:(Lcom/sun/jna/WString;IILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;IILcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       112: astore        5
       114: aload_0
       115: aload         5
       117: invokespecial #158                // Method checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
       120: aload_0
       121: new           #161                // class com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle
       124: dup
       125: aload         5
       127: lload_2
       128: invokespecial #162                // Method com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle."<init>":(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;J)V
       131: putfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       134: aload_0
       135: aload_0
       136: getfield      #54                 // Field hStdoutWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       139: aconst_null
       140: invokestatic  #163                // Method com/zaxxer/nuprocess/windows/NuKernel32.ConnectNamedPipe:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
       143: invokespecial #164                // Method checkPipeConnected:(I)V
       146: getstatic     #149                // Field namedPipeCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       149: invokevirtual #150                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       152: i2l
       153: lstore_2
       154: new           #151                // class com/sun/jna/WString
       157: dup
       158: new           #93                 // class java/lang/StringBuilder
       161: dup
       162: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
       165: getstatic     #152                // Field namedPipePathPrefix:Ljava/lang/String;
       168: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       171: lload_2
       172: invokevirtual #153                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
       175: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       178: invokespecial #154                // Method com/sun/jna/WString."<init>":(Ljava/lang/String;)V
       181: astore        4
       183: aload_0
       184: aload         4
       186: iconst_2
       187: iconst_0
       188: iconst_1
       189: sipush        4120
       192: sipush        4120
       195: iconst_0
       196: aload_1
       197: invokestatic  #157                // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateNamedPipeW:(Lcom/sun/jna/WString;IIIIIILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       200: putfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       203: aload_0
       204: aload_0
       205: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       208: invokespecial #158                // Method checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
       211: aload         4
       213: ldc           #22                 // int -2147483648
       215: iconst_1
       216: aconst_null
       217: iconst_3
       218: ldc           #159                // int 1073741952
       220: aconst_null
       221: invokestatic  #160                // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateFile:(Lcom/sun/jna/WString;IILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;IILcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       224: astore        6
       226: aload_0
       227: aload         6
       229: invokespecial #158                // Method checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
       232: aload_0
       233: new           #161                // class com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle
       236: dup
       237: aload         6
       239: lload_2
       240: invokespecial #162                // Method com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle."<init>":(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;J)V
       243: putfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       246: aload_0
       247: aload_0
       248: getfield      #55                 // Field hStderrWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       251: aconst_null
       252: invokestatic  #163                // Method com/zaxxer/nuprocess/windows/NuKernel32.ConnectNamedPipe:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
       255: invokespecial #164                // Method checkPipeConnected:(I)V
       258: getstatic     #149                // Field namedPipeCounter:Ljava/util/concurrent/atomic/AtomicInteger;
       261: invokevirtual #150                // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       264: i2l
       265: lstore_2
       266: new           #151                // class com/sun/jna/WString
       269: dup
       270: new           #93                 // class java/lang/StringBuilder
       273: dup
       274: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
       277: getstatic     #152                // Field namedPipePathPrefix:Ljava/lang/String;
       280: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       283: lload_2
       284: invokevirtual #153                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
       287: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       290: invokespecial #154                // Method com/sun/jna/WString."<init>":(Ljava/lang/String;)V
       293: astore        4
       295: aload_0
       296: aload         4
       298: iconst_1
       299: iconst_0
       300: iconst_1
       301: sipush        4120
       304: sipush        4120
       307: iconst_0
       308: aload_1
       309: invokestatic  #157                // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateNamedPipeW:(Lcom/sun/jna/WString;IIIIIILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       312: putfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       315: aload_0
       316: aload_0
       317: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       320: invokespecial #158                // Method checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
       323: aload         4
       325: ldc           #165                // int 1073741824
       327: iconst_2
       328: aconst_null
       329: iconst_3
       330: ldc           #159                // int 1073741952
       332: aconst_null
       333: invokestatic  #160                // Method com/zaxxer/nuprocess/windows/NuKernel32.CreateFile:(Lcom/sun/jna/WString;IILcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;IILcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       336: astore        7
       338: aload_0
       339: aload         7
       341: invokespecial #158                // Method checkHandleValidity:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
       344: aload_0
       345: new           #161                // class com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle
       348: dup
       349: aload         7
       351: lload_2
       352: invokespecial #162                // Method com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle."<init>":(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;J)V
       355: putfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
       358: aload_0
       359: aload_0
       360: getfield      #24                 // Field hStdinWidow:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
       363: aconst_null
       364: invokestatic  #163                // Method com/zaxxer/nuprocess/windows/NuKernel32.ConnectNamedPipe:(Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;Lcom/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED;)I
       367: invokespecial #164                // Method checkPipeConnected:(I)V
       370: return
      LineNumberTable:
        line 562: 0
        line 563: 8
        line 564: 24
        line 565: 29
        line 568: 34
        line 569: 42
        line 570: 71
        line 572: 91
        line 574: 99
        line 576: 114
        line 577: 120
        line 578: 134
        line 581: 146
        line 582: 154
        line 583: 183
        line 585: 203
        line 587: 211
        line 589: 226
        line 590: 232
        line 591: 246
        line 594: 258
        line 595: 266
        line 596: 295
        line 598: 315
        line 600: 323
        line 602: 338
        line 603: 344
        line 604: 358
        line 605: 370
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     371     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            8     363     1 sattr   Lcom/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES;
           42     329     2 ioCompletionKey   J
           71     300     4 pipeName   Lcom/sun/jna/WString;
          114     257     5 stdoutHandle   Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
          226     145     6 stderrHandle   Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
          338      33     7 stdinHandle   Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;

  private void afterStart();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: new           #166                // class java/util/concurrent/ConcurrentLinkedQueue
         4: dup
         5: invokespecial #167                // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
         8: putfield      #31                 // Field pendingWrites:Ljava/util/concurrent/ConcurrentLinkedQueue;
        11: aload_0
        12: iconst_0
        13: putfield      #13                 // Field outClosed:Z
        16: aload_0
        17: iconst_0
        18: putfield      #14                 // Field errClosed:Z
        21: aload_0
        22: iconst_0
        23: putfield      #15                 // Field inClosed:Z
        26: aload_0
        27: iconst_1
        28: putfield      #46                 // Field isRunning:Z
        31: aload_0
        32: getfield      #102                // Field stdoutPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        35: ldc           #127                // int 65536
        37: invokestatic  #168                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
        40: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        43: aload_0
        44: getfield      #103                // Field stderrPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        47: ldc           #127                // int 65536
        49: invokestatic  #168                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
        52: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        55: aload_0
        56: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        59: ldc           #127                // int 65536
        61: invokestatic  #168                // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
        64: putfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        67: aload_0
        68: getfield      #101                // Field stdinPipe:Lcom/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle;
        71: getfield      #104                // Field com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle.buffer:Ljava/nio/ByteBuffer;
        74: iconst_0
        75: invokevirtual #108                // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/ByteBuffer;
        78: pop
        79: return
      LineNumberTable:
        line 609: 0
        line 611: 11
        line 612: 16
        line 613: 21
        line 614: 26
        line 616: 31
        line 617: 43
        line 618: 55
        line 622: 67
        line 623: 79
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      80     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;

  private void registerProcess();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=5, args_size=1
         0: iconst_0
         1: istore_1
         2: getstatic     #1                  // Field processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
         5: dup
         6: astore_2
         7: monitorenter
         8: getstatic     #169                // Field processorRoundRobin:I
        11: istore_1
        12: getstatic     #169                // Field processorRoundRobin:I
        15: iconst_1
        16: iadd
        17: getstatic     #1                  // Field processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        20: arraylength
        21: irem
        22: putstatic     #169                // Field processorRoundRobin:I
        25: aload_2
        26: monitorexit
        27: goto          35
        30: astore_3
        31: aload_2
        32: monitorexit
        33: aload_3
        34: athrow
        35: aload_0
        36: getstatic     #1                  // Field processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        39: iload_1
        40: aaload
        41: putfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        44: aload_0
        45: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        48: aload_0
        49: invokevirtual #170                // Method com/zaxxer/nuprocess/windows/ProcessCompletions.registerProcess:(Lcom/zaxxer/nuprocess/windows/WindowsProcess;)V
        52: aload_0
        53: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        56: invokevirtual #171                // Method com/zaxxer/nuprocess/windows/ProcessCompletions.checkAndSetRunning:()Z
        59: ifeq          130
        62: aload_0
        63: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        66: invokevirtual #172                // Method com/zaxxer/nuprocess/windows/ProcessCompletions.getSpawnBarrier:()Ljava/util/concurrent/CyclicBarrier;
        69: astore_2
        70: new           #173                // class java/lang/Thread
        73: dup
        74: aload_0
        75: getfield      #29                 // Field myProcessor:Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        78: new           #93                 // class java/lang/StringBuilder
        81: dup
        82: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
        85: ldc           #174                // String ProcessIoCompletion
        87: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: iload_1
        91: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        94: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        97: invokespecial #175                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
       100: astore_3
       101: aload_3
       102: iconst_1
       103: invokevirtual #176                // Method java/lang/Thread.setDaemon:(Z)V
       106: aload_3
       107: invokevirtual #177                // Method java/lang/Thread.start:()V
       110: aload_2
       111: invokevirtual #178                // Method java/util/concurrent/CyclicBarrier.await:()I
       114: pop
       115: goto          130
       118: astore        4
       120: new           #92                 // class java/lang/RuntimeException
       123: dup
       124: aload         4
       126: invokespecial #179                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
       129: athrow
       130: return
      Exception table:
         from    to  target type
             8    27    30   any
            30    33    30   any
           110   115   118   Class java/lang/Exception
      LineNumberTable:
        line 627: 0
        line 628: 2
        line 629: 8
        line 630: 12
        line 631: 25
        line 633: 35
        line 634: 44
        line 636: 52
        line 637: 62
        line 639: 70
        line 640: 101
        line 641: 106
        line 644: 110
        line 648: 115
        line 646: 118
        line 647: 120
        line 650: 130
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          120      10     4     e   Ljava/lang/Exception;
           70      60     2 spawnBarrier   Ljava/util/concurrent/CyclicBarrier;
          101      29     3     t   Ljava/lang/Thread;
            0     131     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            2     129     1 mySlot   I
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, int, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4
        frame_type = 255 /* full_frame */
          offset_delta = 82
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, int, class java/util/concurrent/CyclicBarrier, class java/lang/Thread ]
          stack = [ class java/lang/Exception ]
        frame_type = 249 /* chop */
          offset_delta = 11

  private char[] getCommandLine(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)[C
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=6, args_size=2
         0: new           #93                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
         7: astore_2
         8: iconst_1
         9: istore_3
        10: aload_1
        11: invokeinterface #180,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        16: astore        4
        18: aload         4
        20: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        25: ifeq          65
        28: aload         4
        30: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        35: checkcast     #183                // class java/lang/String
        38: astore        5
        40: iload_3
        41: ifeq          49
        44: iconst_0
        45: istore_3
        46: goto          56
        49: aload_2
        50: bipush        32
        52: invokevirtual #184                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        55: pop
        56: aload_2
        57: aload         5
        59: invokestatic  #185                // Method com/zaxxer/nuprocess/windows/WindowsCreateProcessEscape.quote:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
        62: goto          18
        65: aload_2
        66: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        69: invokestatic  #88                 // Method com/sun/jna/Native.toCharArray:(Ljava/lang/String;)[C
        72: areturn
      LineNumberTable:
        line 654: 0
        line 655: 8
        line 656: 10
        line 657: 40
        line 658: 44
        line 661: 49
        line 667: 56
        line 668: 62
        line 669: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      22     5 command   Ljava/lang/String;
            0      73     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      73     1 commands   Ljava/util/List;
            8      65     2    sb   Ljava/lang/StringBuilder;
           10      63     3 isFirstCommand   Z
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      73     1 commands   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 18
          locals = [ class java/lang/StringBuilder, int, class java/util/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 249 /* chop */
          offset_delta = 8
    Signature: #396                         // (Ljava/util/List<Ljava/lang/String;>;)[C

  private char[] getEnvironment(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)[C
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=10, args_size=2
         0: new           #186                // class java/util/HashMap
         3: dup
         4: invokespecial #187                // Method java/util/HashMap."<init>":()V
         7: astore_2
         8: iconst_1
         9: istore_3
        10: aload_1
        11: astore        4
        13: aload         4
        15: arraylength
        16: istore        5
        18: iconst_0
        19: istore        6
        21: iload         6
        23: iload         5
        25: if_icmpge     111
        28: aload         4
        30: iload         6
        32: aaload
        33: astore        7
        35: aload         7
        37: bipush        61
        39: invokevirtual #188                // Method java/lang/String.indexOf:(I)I
        42: istore        8
        44: iload         8
        46: iconst_m1
        47: if_icmpeq     105
        50: aload         7
        52: iconst_0
        53: iload         8
        55: invokevirtual #189                // Method java/lang/String.substring:(II)Ljava/lang/String;
        58: astore        9
        60: aload_2
        61: aload         9
        63: iload         8
        65: aload         7
        67: invokevirtual #190                // Method java/lang/String.length:()I
        70: if_icmpge     85
        73: aload         7
        75: iload         8
        77: iconst_1
        78: iadd
        79: invokevirtual #191                // Method java/lang/String.substring:(I)Ljava/lang/String;
        82: goto          87
        85: ldc           #192                // String
        87: invokeinterface #193,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        92: pop
        93: ldc           #194                // String SystemRoot
        95: aload         9
        97: invokevirtual #195                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       100: ifeq          105
       103: iconst_0
       104: istore_3
       105: iinc          6, 1
       108: goto          21
       111: iload_3
       112: ifeq          138
       115: ldc           #194                // String SystemRoot
       117: invokestatic  #196                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
       120: astore        4
       122: aload         4
       124: ifnull        138
       127: aload_2
       128: ldc           #194                // String SystemRoot
       130: aload         4
       132: invokeinterface #193,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       137: pop
       138: aload_0
       139: aload_2
       140: invokespecial #197                // Method getEnvironmentBlock:(Ljava/util/Map;)Ljava/lang/String;
       143: invokevirtual #198                // Method java/lang/String.toCharArray:()[C
       146: areturn
      LineNumberTable:
        line 674: 0
        line 678: 8
        line 680: 10
        line 681: 35
        line 682: 44
        line 683: 50
        line 684: 60
        line 688: 93
        line 689: 103
        line 680: 105
        line 696: 111
        line 697: 115
        line 698: 122
        line 699: 127
        line 703: 138
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           60      45     9   key   Ljava/lang/String;
           44      61     8   ndx   I
           35      70     7 entry   Ljava/lang/String;
          122      16     4 systemRoot   Ljava/lang/String;
            0     147     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     147     1 environment   [Ljava/lang/String;
            8     139     2   env   Ljava/util/Map;
           10     137     3 addSystemRoot   Z
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            8     139     2   env   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, class "[Ljava/lang/String;", class java/util/Map, int, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 63
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, class "[Ljava/lang/String;", class java/util/Map, int, class "[Ljava/lang/String;", int, int, class java/lang/String, int, class java/lang/String ]
          stack = [ class java/util/Map, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class com/zaxxer/nuprocess/windows/WindowsProcess, class "[Ljava/lang/String;", class java/util/Map, int, class "[Ljava/lang/String;", int, int, class java/lang/String, int, class java/lang/String ]
          stack = [ class java/util/Map, class java/lang/String, class java/lang/String ]
        frame_type = 248 /* chop */
          offset_delta = 17
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 26 /* same */

  private java.lang.String getEnvironmentBlock(java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Map;)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=6, args_size=2
         0: new           #199                // class java/util/ArrayList
         3: dup
         4: aload_1
         5: invokeinterface #200,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
        10: invokespecial #201                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
        13: astore_2
        14: aload_2
        15: new           #202                // class com/zaxxer/nuprocess/windows/WindowsProcess$EntryComparator
        18: dup
        19: aconst_null
        20: invokespecial #203                // Method com/zaxxer/nuprocess/windows/WindowsProcess$EntryComparator."<init>":(Lcom/zaxxer/nuprocess/windows/WindowsProcess$1;)V
        23: invokestatic  #204                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
        26: new           #93                 // class java/lang/StringBuilder
        29: dup
        30: bipush        32
        32: aload_1
        33: invokeinterface #205,  1          // InterfaceMethod java/util/Map.size:()I
        38: imul
        39: invokespecial #206                // Method java/lang/StringBuilder."<init>":(I)V
        42: astore_3
        43: aload_2
        44: invokeinterface #180,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        49: astore        4
        51: aload         4
        53: invokeinterface #181,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        58: ifeq          113
        61: aload         4
        63: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        68: checkcast     #207                // class java/util/Map$Entry
        71: astore        5
        73: aload_3
        74: aload         5
        76: invokeinterface #208,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        81: checkcast     #183                // class java/lang/String
        84: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        87: bipush        61
        89: invokevirtual #184                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        92: aload         5
        94: invokeinterface #209,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        99: checkcast     #183                // class java/lang/String
       102: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       105: iconst_0
       106: invokevirtual #184                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       109: pop
       110: goto          51
       113: aload_3
       114: iconst_0
       115: invokevirtual #184                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       118: iconst_0
       119: invokevirtual #184                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       122: pop
       123: aload_3
       124: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       127: areturn
      LineNumberTable:
        line 709: 0
        line 710: 14
        line 712: 26
        line 713: 43
        line 714: 73
        line 715: 110
        line 718: 113
        line 719: 123
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           73      37     5     e   Ljava/util/Map$Entry;
            0     128     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0     128     1   env   Ljava/util/Map;
           14     114     2  list   Ljava/util/List;
           43      85     3    sb   Ljava/lang/StringBuilder;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           73      37     5     e   Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;
            0     128     1   env   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
           14     114     2  list   Ljava/util/List<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;>;
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 51
          locals = [ class java/util/List, class java/lang/StringBuilder, class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 61
    Signature: #414                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/lang/String;

  private void checkHandleValidity(com.zaxxer.nuprocess.windows.NuWinNT$HANDLE);
    descriptor: (Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #25                 // Field com/zaxxer/nuprocess/windows/NuWinNT.INVALID_HANDLE_VALUE:Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
         3: invokevirtual #26                 // Method com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
         6: aload_1
         7: invokevirtual #26                 // Method com/zaxxer/nuprocess/windows/NuWinNT$HANDLE.getPointer:()Lcom/sun/jna/Pointer;
        10: invokevirtual #27                 // Method com/sun/jna/Pointer.equals:(Ljava/lang/Object;)Z
        13: ifeq          45
        16: new           #92                 // class java/lang/RuntimeException
        19: dup
        20: new           #93                 // class java/lang/StringBuilder
        23: dup
        24: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
        27: ldc           #210                // String Unable to create pipe, error
        29: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: invokestatic  #91                 // Method com/sun/jna/Native.getLastError:()I
        35: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        38: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        44: athrow
        45: return
      LineNumberTable:
        line 724: 0
        line 725: 16
        line 727: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      46     1 handle   Lcom/zaxxer/nuprocess/windows/NuWinNT$HANDLE;
      StackMapTable: number_of_entries = 1
        frame_type = 45 /* same */

  private void checkPipeConnected(int);
    descriptor: (I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=3, args_size=2
         0: iload_1
         1: ifne          42
         4: invokestatic  #91                 // Method com/sun/jna/Native.getLastError:()I
         7: dup
         8: istore_2
         9: sipush        535
        12: if_icmpeq     42
        15: new           #92                 // class java/lang/RuntimeException
        18: dup
        19: new           #93                 // class java/lang/StringBuilder
        22: dup
        23: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
        26: ldc           #211                // String Unable to connect pipe, error:
        28: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: iload_2
        32: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        35: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        38: invokespecial #99                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: return
      LineNumberTable:
        line 732: 0
        line 733: 15
        line 735: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      33     2 lastError   I
            0      43     0  this   Lcom/zaxxer/nuprocess/windows/WindowsProcess;
            0      43     1 status   I
      StackMapTable: number_of_entries = 1
        frame_type = 42 /* same */

  static com.zaxxer.nuprocess.windows.ProcessCompletions[] access$000();
    descriptor: ()[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #1                  // Field processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
         3: areturn
      LineNumberTable:
        line 44: 0

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=5, locals=1, args_size=0
         0: ldc           #156                // class com/zaxxer/nuprocess/windows/WindowsProcess
         2: invokevirtual #212                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
         5: invokestatic  #213                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
         8: putstatic     #57                 // Field LOGGER:Ljava/util/logging/Logger;
        11: new           #93                 // class java/lang/StringBuilder
        14: dup
        15: invokespecial #94                 // Method java/lang/StringBuilder."<init>":()V
        18: ldc           #214                // String \\\\.\\pipe\\NuProcess-
        20: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokestatic  #215                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
        26: invokevirtual #216                // Method java/util/UUID.toString:()Ljava/lang/String;
        29: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        32: ldc           #217                // String -
        34: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        40: putstatic     #152                // Field namedPipePathPrefix:Ljava/lang/String;
        43: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
        46: dup
        47: bipush        100
        49: invokespecial #218                // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
        52: putstatic     #149                // Field namedPipeCounter:Ljava/util/concurrent/atomic/AtomicInteger;
        55: ldc           #219                // String com.zaxxer.nuprocess.softExitDetection
        57: ldc           #220                // String true
        59: invokestatic  #221                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        62: invokestatic  #222                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
        65: putstatic     #140                // Field IS_SOFTEXIT_DETECTION:Z
        68: getstatic     #223                // Field com/zaxxer/nuprocess/internal/Constants.NUMBER_OF_THREADS:I
        71: anewarray     #62                 // class com/zaxxer/nuprocess/windows/ProcessCompletions
        74: putstatic     #1                  // Field processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        77: iconst_0
        78: istore_0
        79: iload_0
        80: getstatic     #223                // Field com/zaxxer/nuprocess/internal/Constants.NUMBER_OF_THREADS:I
        83: if_icmpge     104
        86: getstatic     #1                  // Field processors:[Lcom/zaxxer/nuprocess/windows/ProcessCompletions;
        89: iload_0
        90: new           #62                 // class com/zaxxer/nuprocess/windows/ProcessCompletions
        93: dup
        94: invokespecial #224                // Method com/zaxxer/nuprocess/windows/ProcessCompletions."<init>":()V
        97: aastore
        98: iinc          0, 1
       101: goto          79
       104: ldc           #225                // String com.zaxxer.nuprocess.enableShutdownHook
       106: ldc           #220                // String true
       108: invokestatic  #221                // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       111: invokestatic  #222                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       114: ifeq          137
       117: invokestatic  #226                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
       120: new           #173                // class java/lang/Thread
       123: dup
       124: new           #227                // class com/zaxxer/nuprocess/windows/WindowsProcess$1
       127: dup
       128: invokespecial #228                // Method com/zaxxer/nuprocess/windows/WindowsProcess$1."<init>":()V
       131: invokespecial #229                // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
       134: invokevirtual #230                // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
       137: return
      LineNumberTable:
        line 51: 0
        line 88: 11
        line 89: 43
        line 91: 55
        line 93: 68
        line 94: 77
        line 95: 86
        line 94: 98
        line 98: 104
        line 99: 117
        line 111: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           79      25     0     i   I
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 79
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 24
        frame_type = 32 /* same */
}
SourceFile: "WindowsProcess.java"
InnerClasses:
  static final #232= #161 of #156;        // PipeBundle=class com/zaxxer/nuprocess/windows/WindowsProcess$PipeBundle of class com/zaxxer/nuprocess/windows/WindowsProcess
  private static final #234= #202 of #156; // EntryComparator=class com/zaxxer/nuprocess/windows/WindowsProcess$EntryComparator of class com/zaxxer/nuprocess/windows/WindowsProcess
  private static final #236= #235 of #156; // NameComparator=class com/zaxxer/nuprocess/windows/WindowsProcess$NameComparator of class com/zaxxer/nuprocess/windows/WindowsProcess
  #227;                                   // class com/zaxxer/nuprocess/windows/WindowsProcess$1
  public static #271= #270 of #80;        // HANDLE=class com/zaxxer/nuprocess/windows/NuWinNT$HANDLE of class com/zaxxer/nuprocess/windows/NuWinNT
  public static #285= #82 of #80;         // PROCESS_INFORMATION=class com/zaxxer/nuprocess/windows/NuWinNT$PROCESS_INFORMATION of class com/zaxxer/nuprocess/windows/NuWinNT
  public static #341= #70 of #80;         // STARTUPINFO=class com/zaxxer/nuprocess/windows/NuWinNT$STARTUPINFO of class com/zaxxer/nuprocess/windows/NuWinNT
  public static #344= #73 of #80;         // DWORD=class com/zaxxer/nuprocess/windows/NuWinNT$DWORD of class com/zaxxer/nuprocess/windows/NuWinNT
  public static #373= #143 of #80;        // SECURITY_ATTRIBUTES=class com/zaxxer/nuprocess/windows/NuWinNT$SECURITY_ATTRIBUTES of class com/zaxxer/nuprocess/windows/NuWinNT
  public static #409= #207 of #406;       // Entry=class java/util/Map$Entry of class java/util/Map
  public static #720= #719 of #155;       // OVERLAPPED=class com/zaxxer/nuprocess/windows/NuKernel32$OVERLAPPED of class com/zaxxer/nuprocess/windows/NuKernel32
