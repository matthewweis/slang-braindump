Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/CodecJson$$anon$2.class
  Last modified May 29, 2022; size 1126 bytes
  SHA-256 checksum 2849c399ce02301babecdbe081980b79aac26a4faf909d94d56c548d9f696252
  Compiled from "CodecJson.scala"
public final class argonaut.CodecJson$$anon$2 extends argonaut.CodecJson<A>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/CodecJson$$anon$2
  super_class: #5                         // argonaut/CodecJson
  interfaces: 0, fields: 2, methods: 3, attributes: 6
Constant pool:
   #1 = Utf8               argonaut/CodecJson$$anon$2
   #2 = Class              #1             // argonaut/CodecJson$$anon$2
   #3 = Utf8               Largonaut/CodecJson<TA;>;
   #4 = Utf8               argonaut/CodecJson
   #5 = Class              #4             // argonaut/CodecJson
   #6 = Utf8               CodecJson.scala
   #7 = Utf8               argonaut/CodecJson$
   #8 = Class              #7             // argonaut/CodecJson$
   #9 = Utf8               derived
  #10 = Utf8               (Largonaut/EncodeJson;Largonaut/DecodeJson;)Largonaut/CodecJson;
  #11 = NameAndType        #9:#10         // derived:(Largonaut/EncodeJson;Largonaut/DecodeJson;)Largonaut/CodecJson;
  #12 = Utf8               Encoder
  #13 = Utf8               Largonaut/EncodeJson;
  #14 = Utf8               Largonaut/EncodeJson<TA;>;
  #15 = Utf8               Decoder
  #16 = Utf8               Largonaut/DecodeJson;
  #17 = Utf8               Largonaut/DecodeJson<TA;>;
  #18 = Utf8               ()Largonaut/EncodeJson;
  #19 = Utf8               ()Largonaut/EncodeJson<TA;>;
  #20 = NameAndType        #12:#13        // Encoder:Largonaut/EncodeJson;
  #21 = Fieldref           #2.#20         // argonaut/CodecJson$$anon$2.Encoder:Largonaut/EncodeJson;
  #22 = Utf8               this
  #23 = Utf8               Largonaut/CodecJson$$anon$2;
  #24 = Utf8               ()Largonaut/DecodeJson;
  #25 = Utf8               ()Largonaut/DecodeJson<TA;>;
  #26 = NameAndType        #15:#16        // Decoder:Largonaut/DecodeJson;
  #27 = Fieldref           #2.#26         // argonaut/CodecJson$$anon$2.Decoder:Largonaut/DecodeJson;
  #28 = Utf8               <init>
  #29 = Utf8               (Largonaut/EncodeJson;Largonaut/DecodeJson;)V
  #30 = Utf8               E$1
  #31 = Utf8               D$1
  #32 = Utf8               ()V
  #33 = NameAndType        #28:#32        // "<init>":()V
  #34 = Methodref          #5.#33         // argonaut/CodecJson."<init>":()V
  #35 = Utf8               Signature
  #36 = Utf8               Code
  #37 = Utf8               LineNumberTable
  #38 = Utf8               LocalVariableTable
  #39 = Utf8               MethodParameters
  #40 = Utf8               InnerClasses
  #41 = Utf8               EnclosingMethod
  #42 = Utf8               SourceFile
  #43 = Utf8               ScalaInlineInfo
  #44 = Utf8               Scala
{
  private final argonaut.EncodeJson<A> Encoder;
    descriptor: Largonaut/EncodeJson;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Largonaut/EncodeJson<TA;>;

  private final argonaut.DecodeJson<A> Decoder;
    descriptor: Largonaut/DecodeJson;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // Largonaut/DecodeJson<TA;>;

  public argonaut.EncodeJson<A> Encoder();
    descriptor: ()Largonaut/EncodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #21                 // Field Encoder:Largonaut/EncodeJson;
         4: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/CodecJson$$anon$2;
    Signature: #19                          // ()Largonaut/EncodeJson<TA;>;

  public argonaut.DecodeJson<A> Decoder();
    descriptor: ()Largonaut/DecodeJson;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field Decoder:Largonaut/DecodeJson;
         4: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/CodecJson$$anon$2;
    Signature: #25                          // ()Largonaut/DecodeJson<TA;>;

  public argonaut.CodecJson$$anon$2(argonaut.EncodeJson, argonaut.DecodeJson);
    descriptor: (Largonaut/EncodeJson;Largonaut/DecodeJson;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: invokespecial #34                 // Method argonaut/CodecJson."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #21                 // Field Encoder:Largonaut/EncodeJson;
         9: aload_0
        10: aload_2
        11: putfield      #27                 // Field Decoder:Largonaut/DecodeJson;
        14: return
      LineNumberTable:
        line 33: 0
        line 34: 4
        line 35: 9
        line 33: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Largonaut/CodecJson$$anon$2;
            0      15     1   E$1   Largonaut/EncodeJson;
            0      15     2   D$1   Largonaut/DecodeJson;
    MethodParameters:
      Name                           Flags
      E$1                            final
      D$1                            final
}
InnerClasses:
  public final #2;                        // class argonaut/CodecJson$$anon$2
EnclosingMethod: #8.#11                 // argonaut.CodecJson$.derived
Signature: #3                           // Largonaut/CodecJson<TA;>;
SourceFile: "CodecJson.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 01 00 03 00 1C 00 1D 01 00 0F 00 18 01 00 0C
   00 12 01
  Scala: length = 0x0 (unknown attribute)

