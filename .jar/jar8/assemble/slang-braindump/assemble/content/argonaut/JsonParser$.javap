Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/JsonParser$.class
  Last modified May 29, 2022; size 18789 bytes
  SHA-256 checksum 886ed3f592a7cf828b721a7aa92f9eb7fdef4d662645f469d444095b157999d0
  Compiled from "JsonParser.scala"
public final class argonaut.JsonParser$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/JsonParser$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 43, attributes: 5
Constant pool:
    #1 = Utf8               argonaut/JsonParser$
    #2 = Class              #1            // argonaut/JsonParser$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonParser.scala
    #6 = Utf8               argonaut/JsonParser$JsonObjectBuilder
    #7 = Class              #6            // argonaut/JsonParser$JsonObjectBuilder
    #8 = Utf8               argonaut/JsonParser
    #9 = Class              #8            // argonaut/JsonParser
   #10 = Utf8               JsonObjectBuilder
   #11 = Utf8               argonaut/JsonParser$JsonObjectBuilder$
   #12 = Class              #11           // argonaut/JsonParser$JsonObjectBuilder$
   #13 = Utf8               JsonObjectBuilder$
   #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #15 = Class              #14           // java/lang/invoke/MethodHandles$Lookup
   #16 = Utf8               java/lang/invoke/MethodHandles
   #17 = Class              #16           // java/lang/invoke/MethodHandles
   #18 = Utf8               Lookup
   #19 = Utf8               scala/util/Either$RightProjection
   #20 = Class              #19           // scala/util/Either$RightProjection
   #21 = Utf8               scala/util/Either
   #22 = Class              #21           // scala/util/Either
   #23 = Utf8               RightProjection
   #24 = Utf8               MODULE$
   #25 = Utf8               Largonaut/JsonParser$;
   #26 = Utf8               argonaut$JsonParser$$unexpectedTermination
   #27 = Utf8               Lscala/util/Left;
   #28 = Utf8               Lscala/util/Left<Ljava/lang/String;Lscala/runtime/Nothing$;>;
   #29 = Utf8               <clinit>
   #30 = Utf8               ()V
   #31 = Utf8               <init>
   #32 = NameAndType        #31:#30       // "<init>":()V
   #33 = Methodref          #2.#32        // argonaut/JsonParser$."<init>":()V
   #34 = NameAndType        #24:#25       // MODULE$:Largonaut/JsonParser$;
   #35 = Fieldref           #2.#34        // argonaut/JsonParser$.MODULE$:Largonaut/JsonParser$;
   #36 = Utf8               scala/package$
   #37 = Class              #36           // scala/package$
   #38 = Utf8               Lscala/package$;
   #39 = NameAndType        #24:#38       // MODULE$:Lscala/package$;
   #40 = Fieldref           #37.#39       // scala/package$.MODULE$:Lscala/package$;
   #41 = Utf8               Left
   #42 = Utf8               ()Lscala/util/Left$;
   #43 = NameAndType        #41:#42       // Left:()Lscala/util/Left$;
   #44 = Methodref          #37.#43       // scala/package$.Left:()Lscala/util/Left$;
   #45 = Utf8               JSON terminates unexpectedly.
   #46 = String             #45           // JSON terminates unexpectedly.
   #47 = Utf8               scala/util/Left$
   #48 = Class              #47           // scala/util/Left$
   #49 = Utf8               apply
   #50 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
   #51 = NameAndType        #49:#50       // apply:(Ljava/lang/Object;)Lscala/util/Left;
   #52 = Methodref          #48.#51       // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
   #53 = NameAndType        #26:#27       // argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
   #54 = Fieldref           #2.#53        // argonaut/JsonParser$.argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
   #55 = Utf8               argonaut$JsonParser$$excerpt
   #56 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;
   #57 = Utf8               string
   #58 = Utf8               position
   #59 = Utf8               limit
   #60 = Utf8               scala/collection/StringOps$
   #61 = Class              #60           // scala/collection/StringOps$
   #62 = Utf8               Lscala/collection/StringOps$;
   #63 = NameAndType        #24:#62       // MODULE$:Lscala/collection/StringOps$;
   #64 = Fieldref           #61.#63       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #65 = Utf8               scala/Predef$
   #66 = Class              #65           // scala/Predef$
   #67 = Utf8               Lscala/Predef$;
   #68 = NameAndType        #24:#67       // MODULE$:Lscala/Predef$;
   #69 = Fieldref           #66.#68       // scala/Predef$.MODULE$:Lscala/Predef$;
   #70 = Utf8               augmentString
   #71 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #72 = NameAndType        #70:#71       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #73 = Methodref          #66.#72       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #74 = Utf8               drop$extension
   #75 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
   #76 = NameAndType        #74:#75       // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #77 = Methodref          #61.#76       // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #78 = Utf8               java/lang/String
   #79 = Class              #78           // java/lang/String
   #80 = Utf8               length
   #81 = Utf8               ()I
   #82 = NameAndType        #80:#81       // length:()I
   #83 = Methodref          #79.#82       // java/lang/String.length:()I
   #84 = Utf8               java/lang/StringBuilder
   #85 = Class              #84           // java/lang/StringBuilder
   #86 = Integer            3
   #87 = Utf8               (I)V
   #88 = NameAndType        #31:#87       // "<init>":(I)V
   #89 = Methodref          #85.#88       // java/lang/StringBuilder."<init>":(I)V
   #90 = Utf8               take$extension
   #91 = NameAndType        #90:#75       // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #92 = Methodref          #61.#91       // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
   #93 = Utf8               append
   #94 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #95 = NameAndType        #93:#94       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #96 = Methodref          #85.#95       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #97 = Utf8               ...
   #98 = String             #97           // ...
   #99 = Utf8               toString
  #100 = Utf8               ()Ljava/lang/String;
  #101 = NameAndType        #99:#100      // toString:()Ljava/lang/String;
  #102 = Methodref          #85.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #103 = Utf8               remaining
  #104 = Utf8               Ljava/lang/String;
  #105 = Utf8               this
  #106 = Utf8               I
  #107 = Utf8               argonaut$JsonParser$$excerpt$default$3
  #108 = Utf8               parse
  #109 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
  #110 = Utf8               (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Largonaut/Json;>;
  #111 = Utf8               json
  #112 = Utf8               expectValue
  #113 = Utf8               (Ljava/lang/String;I)Lscala/util/Either;
  #114 = NameAndType        #112:#113     // expectValue:(Ljava/lang/String;I)Lscala/util/Either;
  #115 = Methodref          #2.#114       // argonaut/JsonParser$.expectValue:(Ljava/lang/String;I)Lscala/util/Either;
  #116 = Utf8               right
  #117 = Utf8               ()Lscala/util/Either$RightProjection;
  #118 = NameAndType        #116:#117     // right:()Lscala/util/Either$RightProjection;
  #119 = Methodref          #22.#118      // scala/util/Either.right:()Lscala/util/Either$RightProjection;
  #120 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #121 = MethodType         #120          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #122 = Utf8               $anonfun$parse$1
  #123 = Utf8               (Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #124 = NameAndType        #122:#123     // $anonfun$parse$1:(Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #125 = Methodref          #2.#124       // argonaut/JsonParser$.$anonfun$parse$1:(Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #126 = MethodHandle       6:#125        // REF_invokeStatic argonaut/JsonParser$.$anonfun$parse$1:(Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  #127 = Utf8               (Lscala/Tuple2;)Lscala/util/Either;
  #128 = MethodType         #127          //  (Lscala/Tuple2;)Lscala/util/Either;
  #129 = Integer            5
  #130 = Integer            1
  #131 = Utf8               java/lang/invoke/LambdaMetafactory
  #132 = Class              #131          // java/lang/invoke/LambdaMetafactory
  #133 = Utf8               altMetafactory
  #134 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = NameAndType        #133:#134     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = Methodref          #132.#135     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #137 = MethodHandle       6:#136        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = Utf8               (Largonaut/JsonParser$;ILjava/lang/String;)Lscala/Function1;
  #139 = NameAndType        #49:#138      // apply:(Largonaut/JsonParser$;ILjava/lang/String;)Lscala/Function1;
  #140 = InvokeDynamic      #0:#139       // #0:apply:(Largonaut/JsonParser$;ILjava/lang/String;)Lscala/Function1;
  #141 = Utf8               flatMap
  #142 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #143 = NameAndType        #141:#142     // flatMap:(Lscala/Function1;)Lscala/util/Either;
  #144 = Methodref          #20.#143      // scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
  #145 = Utf8               jsonLength
  #146 = Utf8               argonaut$JsonParser$$expectedSpacerToken
  #147 = Utf8               (Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
  #148 = Utf8               (Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either<Ljava/lang/String;Ljava/lang/Object;>;
  #149 = Utf8               stream
  #150 = Utf8               token
  #151 = Utf8               failMessage
  #152 = Utf8               apply$extension
  #153 = Utf8               (Ljava/lang/String;I)C
  #154 = NameAndType        #152:#153     // apply$extension:(Ljava/lang/String;I)C
  #155 = Methodref          #61.#154      // scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
  #156 = Utf8               Right
  #157 = Utf8               ()Lscala/util/Right$;
  #158 = NameAndType        #156:#157     // Right:()Lscala/util/Right$;
  #159 = Methodref          #37.#158      // scala/package$.Right:()Lscala/util/Right$;
  #160 = Utf8               scala/runtime/BoxesRunTime
  #161 = Class              #160          // scala/runtime/BoxesRunTime
  #162 = Utf8               boxToInteger
  #163 = Utf8               (I)Ljava/lang/Integer;
  #164 = NameAndType        #162:#163     // boxToInteger:(I)Ljava/lang/Integer;
  #165 = Methodref          #161.#164     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #166 = Utf8               scala/util/Right$
  #167 = Class              #166          // scala/util/Right$
  #168 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #169 = NameAndType        #49:#168      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #170 = Methodref          #167.#169     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #171 = Integer            12
  #172 = Utf8                but found:
  #173 = String             #172          //  but found:
  #174 = NameAndType        #107:#81      // argonaut$JsonParser$$excerpt$default$3:()I
  #175 = Methodref          #2.#174       // argonaut/JsonParser$.argonaut$JsonParser$$excerpt$default$3:()I
  #176 = NameAndType        #55:#56       // argonaut$JsonParser$$excerpt:(Ljava/lang/String;II)Ljava/lang/String;
  #177 = Methodref          #2.#176       // argonaut/JsonParser$.argonaut$JsonParser$$excerpt:(Ljava/lang/String;II)Ljava/lang/String;
  #178 = Utf8               C
  #179 = Utf8               argonaut$JsonParser$$expectStringBounds
  #180 = Utf8               (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Ljava/lang/Object;>;
  #181 = Utf8               Expected string bounds
  #182 = String             #181          // Expected string bounds
  #183 = NameAndType        #146:#147     // argonaut$JsonParser$$expectedSpacerToken:(Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
  #184 = Methodref          #2.#183       // argonaut/JsonParser$.argonaut$JsonParser$$expectedSpacerToken:(Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
  #185 = Utf8               expectEntrySeparator
  #186 = Utf8               Expected entry separator token
  #187 = String             #186          // Expected entry separator token
  #188 = Utf8               expectFieldSeparator
  #189 = Utf8               Expected field separator token
  #190 = String             #189          // Expected field separator token
  #191 = Utf8               expectObject
  #192 = Utf8               (Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either;
  #193 = Utf8               (Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Largonaut/Json;>;>;
  #194 = Utf8               first
  #195 = Utf8               fields
  #196 = Utf8               scala/Tuple2
  #197 = Class              #196          // scala/Tuple2
  #198 = Utf8               build
  #199 = Utf8               ()Largonaut/Json;
  #200 = NameAndType        #198:#199     // build:()Largonaut/Json;
  #201 = Methodref          #7.#200       // argonaut/JsonParser$JsonObjectBuilder.build:()Largonaut/Json;
  #202 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #203 = NameAndType        #31:#202      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #204 = Methodref          #197.#203     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #205 = NameAndType        #185:#113     // expectEntrySeparator:(Ljava/lang/String;I)Lscala/util/Either;
  #206 = Methodref          #2.#205       // argonaut/JsonParser$.expectEntrySeparator:(Ljava/lang/String;I)Lscala/util/Either;
  #207 = Utf8               $anonfun$expectObject$1$adapted
  #208 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
  #209 = NameAndType        #207:#208     // $anonfun$expectObject$1$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
  #210 = Methodref          #2.#209       // argonaut/JsonParser$.$anonfun$expectObject$1$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
  #211 = MethodHandle       6:#210        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$1$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
  #212 = Utf8               (Ljava/lang/Object;)Lscala/util/Either;
  #213 = MethodType         #212          //  (Ljava/lang/Object;)Lscala/util/Either;
  #214 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;)Lscala/Function1;
  #215 = NameAndType        #49:#214      // apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;)Lscala/Function1;
  #216 = InvokeDynamic      #1:#215       // #1:apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;)Lscala/Function1;
  #217 = Utf8               scala/util/Right
  #218 = Class              #217          // scala/util/Right
  #219 = Utf8               value
  #220 = Utf8               ()Ljava/lang/Object;
  #221 = NameAndType        #219:#220     // value:()Ljava/lang/Object;
  #222 = Methodref          #218.#221     // scala/util/Right.value:()Ljava/lang/Object;
  #223 = Utf8               _1$mcI$sp
  #224 = NameAndType        #223:#81      // _1$mcI$sp:()I
  #225 = Methodref          #197.#224     // scala/Tuple2._1$mcI$sp:()I
  #226 = Utf8               _2
  #227 = NameAndType        #226:#220     // _2:()Ljava/lang/Object;
  #228 = Methodref          #197.#227     // scala/Tuple2._2:()Ljava/lang/Object;
  #229 = Utf8               scala/util/Left
  #230 = Class              #229          // scala/util/Left
  #231 = Methodref          #230.#221     // scala/util/Left.value:()Ljava/lang/Object;
  #232 = Utf8               scala/MatchError
  #233 = Class              #232          // scala/MatchError
  #234 = Utf8               (Ljava/lang/Object;)V
  #235 = NameAndType        #31:#234      // "<init>":(Ljava/lang/Object;)V
  #236 = Methodref          #233.#235     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #237 = Utf8               newPosition
  #238 = Utf8               newFields
  #239 = Utf8               Largonaut/JsonParser$JsonObjectBuilder;
  #240 = Utf8               failure
  #241 = Utf8               next
  #242 = Utf8               Lscala/util/Either;
  #243 = Utf8               Z
  #244 = Utf8               expectObject$default$3
  #245 = Utf8               ()Z
  #246 = Utf8               expectObject$default$4
  #247 = Utf8               ()Largonaut/JsonParser$JsonObjectBuilder;
  #248 = Utf8               Largonaut/JsonParser$JsonObjectBuilder$;
  #249 = NameAndType        #24:#248      // MODULE$:Largonaut/JsonParser$JsonObjectBuilder$;
  #250 = Fieldref           #12.#249      // argonaut/JsonParser$JsonObjectBuilder$.MODULE$:Largonaut/JsonParser$JsonObjectBuilder$;
  #251 = Utf8               $lessinit$greater$default$1
  #252 = Utf8               ()Lscala/collection/mutable/Builder;
  #253 = NameAndType        #251:#252     // $lessinit$greater$default$1:()Lscala/collection/mutable/Builder;
  #254 = Methodref          #12.#253      // argonaut/JsonParser$JsonObjectBuilder$.$lessinit$greater$default$1:()Lscala/collection/mutable/Builder;
  #255 = Utf8               $lessinit$greater$default$2
  #256 = NameAndType        #255:#252     // $lessinit$greater$default$2:()Lscala/collection/mutable/Builder;
  #257 = Methodref          #12.#256      // argonaut/JsonParser$JsonObjectBuilder$.$lessinit$greater$default$2:()Lscala/collection/mutable/Builder;
  #258 = Utf8               (Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;)V
  #259 = NameAndType        #31:#258      // "<init>":(Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;)V
  #260 = Methodref          #7.#259       // argonaut/JsonParser$JsonObjectBuilder."<init>":(Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;)V
  #261 = Utf8               expectArray
  #262 = Utf8               (Ljava/lang/String;IZLscala/collection/mutable/Builder;)Lscala/util/Either;
  #263 = Utf8               (Ljava/lang/String;IZLscala/collection/mutable/Builder<Largonaut/Json;Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Largonaut/Json;>;>;
  #264 = Utf8               argonaut/Json$
  #265 = Class              #264          // argonaut/Json$
  #266 = Utf8               Largonaut/Json$;
  #267 = NameAndType        #24:#266      // MODULE$:Largonaut/Json$;
  #268 = Fieldref           #265.#267     // argonaut/Json$.MODULE$:Largonaut/Json$;
  #269 = Utf8               jArray
  #270 = Utf8               ()Lscala/Function1;
  #271 = NameAndType        #269:#270     // jArray:()Lscala/Function1;
  #272 = Methodref          #265.#271     // argonaut/Json$.jArray:()Lscala/Function1;
  #273 = Utf8               scala/collection/mutable/Builder
  #274 = Class              #273          // scala/collection/mutable/Builder
  #275 = Utf8               result
  #276 = NameAndType        #275:#220     // result:()Ljava/lang/Object;
  #277 = InterfaceMethodref #274.#276     // scala/collection/mutable/Builder.result:()Ljava/lang/Object;
  #278 = Utf8               scala/Function1
  #279 = Class              #278          // scala/Function1
  #280 = NameAndType        #49:#120      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #281 = InterfaceMethodref #279.#280     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #282 = Utf8               $anonfun$expectArray$1$adapted
  #283 = Utf8               (Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
  #284 = NameAndType        #282:#283     // $anonfun$expectArray$1$adapted:(Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
  #285 = Methodref          #2.#284       // argonaut/JsonParser$.$anonfun$expectArray$1$adapted:(Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
  #286 = MethodHandle       6:#285        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectArray$1$adapted:(Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
  #287 = Utf8               (Ljava/lang/String;Lscala/collection/mutable/Builder;)Lscala/Function1;
  #288 = NameAndType        #49:#287      // apply:(Ljava/lang/String;Lscala/collection/mutable/Builder;)Lscala/Function1;
  #289 = InvokeDynamic      #2:#288       // #2:apply:(Ljava/lang/String;Lscala/collection/mutable/Builder;)Lscala/Function1;
  #290 = Utf8               Lscala/collection/mutable/Builder;
  #291 = Utf8               expectArray$default$3
  #292 = Utf8               expectArray$default$4
  #293 = Utf8               ()Lscala/collection/mutable/Builder<Largonaut/Json;Lscala/collection/immutable/List<Largonaut/Json;>;>;
  #294 = Utf8               scala/collection/immutable/List$
  #295 = Class              #294          // scala/collection/immutable/List$
  #296 = Utf8               Lscala/collection/immutable/List$;
  #297 = NameAndType        #24:#296      // MODULE$:Lscala/collection/immutable/List$;
  #298 = Fieldref           #295.#297     // scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
  #299 = Utf8               newBuilder
  #300 = NameAndType        #299:#252     // newBuilder:()Lscala/collection/mutable/Builder;
  #301 = Methodref          #295.#300     // scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
  #302 = Utf8               (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Largonaut/Json;>;>;
  #303 = NameAndType        #291:#245     // expectArray$default$3:()Z
  #304 = Methodref          #2.#303       // argonaut/JsonParser$.expectArray$default$3:()Z
  #305 = NameAndType        #292:#252     // expectArray$default$4:()Lscala/collection/mutable/Builder;
  #306 = Methodref          #2.#305       // argonaut/JsonParser$.expectArray$default$4:()Lscala/collection/mutable/Builder;
  #307 = NameAndType        #261:#262     // expectArray:(Ljava/lang/String;IZLscala/collection/mutable/Builder;)Lscala/util/Either;
  #308 = Methodref          #2.#307       // argonaut/JsonParser$.expectArray:(Ljava/lang/String;IZLscala/collection/mutable/Builder;)Lscala/util/Either;
  #309 = NameAndType        #244:#245     // expectObject$default$3:()Z
  #310 = Methodref          #2.#309       // argonaut/JsonParser$.expectObject$default$3:()Z
  #311 = NameAndType        #246:#247     // expectObject$default$4:()Largonaut/JsonParser$JsonObjectBuilder;
  #312 = Methodref          #2.#311       // argonaut/JsonParser$.expectObject$default$4:()Largonaut/JsonParser$JsonObjectBuilder;
  #313 = NameAndType        #191:#192     // expectObject:(Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either;
  #314 = Methodref          #2.#313       // argonaut/JsonParser$.expectObject:(Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either;
  #315 = Utf8               argonaut$JsonParser$$expectStringNoStartBounds
  #316 = NameAndType        #315:#113     // argonaut$JsonParser$$expectStringNoStartBounds:(Ljava/lang/String;I)Lscala/util/Either;
  #317 = Methodref          #2.#316       // argonaut/JsonParser$.argonaut$JsonParser$$expectStringNoStartBounds:(Ljava/lang/String;I)Lscala/util/Either;
  #318 = Utf8               $anonfun$expectValue$1
  #319 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #320 = NameAndType        #318:#319     // $anonfun$expectValue$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #321 = Methodref          #2.#320       // argonaut/JsonParser$.$anonfun$expectValue$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #322 = MethodHandle       6:#321        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectValue$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #323 = MethodType         #319          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #324 = NameAndType        #49:#270      // apply:()Lscala/Function1;
  #325 = InvokeDynamic      #3:#324       // #3:apply:()Lscala/Function1;
  #326 = Utf8               map
  #327 = NameAndType        #326:#142     // map:(Lscala/Function1;)Lscala/util/Either;
  #328 = Methodref          #20.#327      // scala/util/Either$RightProjection.map:(Lscala/Function1;)Lscala/util/Either;
  #329 = Utf8               true
  #330 = String             #329          // true
  #331 = Utf8               startsWith
  #332 = Utf8               (Ljava/lang/String;I)Z
  #333 = NameAndType        #331:#332     // startsWith:(Ljava/lang/String;I)Z
  #334 = Methodref          #79.#333      // java/lang/String.startsWith:(Ljava/lang/String;I)Z
  #335 = Utf8               jTrue
  #336 = NameAndType        #335:#199     // jTrue:()Largonaut/Json;
  #337 = Methodref          #265.#336     // argonaut/Json$.jTrue:()Largonaut/Json;
  #338 = Utf8               false
  #339 = String             #338          // false
  #340 = Utf8               jFalse
  #341 = NameAndType        #340:#199     // jFalse:()Largonaut/Json;
  #342 = Methodref          #265.#341     // argonaut/Json$.jFalse:()Largonaut/Json;
  #343 = Utf8               null
  #344 = String             #343          // null
  #345 = Utf8               jNull
  #346 = NameAndType        #345:#199     // jNull:()Largonaut/Json;
  #347 = Methodref          #265.#346     // argonaut/Json$.jNull:()Largonaut/Json;
  #348 = Utf8               safeNumberIndex$1
  #349 = Utf8               (ILjava/lang/String;)I
  #350 = NameAndType        #348:#349     // safeNumberIndex$1:(ILjava/lang/String;)I
  #351 = Methodref          #2.#350       // argonaut/JsonParser$.safeNumberIndex$1:(ILjava/lang/String;)I
  #352 = Utf8               unexpectedContent
  #353 = NameAndType        #352:#113     // unexpectedContent:(Ljava/lang/String;I)Lscala/util/Either;
  #354 = Methodref          #2.#353       // argonaut/JsonParser$.unexpectedContent:(Ljava/lang/String;I)Lscala/util/Either;
  #355 = Utf8               substring
  #356 = Utf8               (II)Ljava/lang/String;
  #357 = NameAndType        #355:#356     // substring:(II)Ljava/lang/String;
  #358 = Methodref          #79.#357      // java/lang/String.substring:(II)Ljava/lang/String;
  #359 = Utf8               argonaut/JsonNumber$
  #360 = Class              #359          // argonaut/JsonNumber$
  #361 = Utf8               Largonaut/JsonNumber$;
  #362 = NameAndType        #24:#361      // MODULE$:Largonaut/JsonNumber$;
  #363 = Fieldref           #360.#362     // argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
  #364 = Utf8               fromString
  #365 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #366 = NameAndType        #364:#365     // fromString:(Ljava/lang/String;)Lscala/Option;
  #367 = Methodref          #360.#366     // argonaut/JsonNumber$.fromString:(Ljava/lang/String;)Lscala/Option;
  #368 = Utf8               scala/Some
  #369 = Class              #368          // scala/Some
  #370 = Methodref          #369.#221     // scala/Some.value:()Ljava/lang/Object;
  #371 = Utf8               argonaut/JsonNumber
  #372 = Class              #371          // argonaut/JsonNumber
  #373 = Utf8               asJson
  #374 = NameAndType        #373:#199     // asJson:()Largonaut/Json;
  #375 = Methodref          #372.#374     // argonaut/JsonNumber.asJson:()Largonaut/Json;
  #376 = Utf8               scala/None$
  #377 = Class              #376          // scala/None$
  #378 = Utf8               Lscala/None$;
  #379 = NameAndType        #24:#378      // MODULE$:Lscala/None$;
  #380 = Fieldref           #377.#379     // scala/None$.MODULE$:Lscala/None$;
  #381 = Utf8               equals
  #382 = Utf8               (Ljava/lang/Object;)Z
  #383 = NameAndType        #381:#382     // equals:(Ljava/lang/Object;)Z
  #384 = Methodref          #4.#383       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #385 = Integer            40
  #386 = Utf8               Value [
  #387 = String             #386          // Value [
  #388 = Utf8               ] cannot be parsed into a number.
  #389 = String             #388          // ] cannot be parsed into a number.
  #390 = Utf8               jn
  #391 = Utf8               Largonaut/JsonNumber;
  #392 = Utf8               numberAsString
  #393 = Utf8               numberEndIndex
  #394 = Utf8               scala/Option
  #395 = Class              #394          // scala/Option
  #396 = Utf8               expectString
  #397 = Utf8               (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/String;>;>;
  #398 = NameAndType        #179:#113     // argonaut$JsonParser$$expectStringBounds:(Ljava/lang/String;I)Lscala/util/Either;
  #399 = Methodref          #2.#398       // argonaut/JsonParser$.argonaut$JsonParser$$expectStringBounds:(Ljava/lang/String;I)Lscala/util/Either;
  #400 = Utf8               $anonfun$expectString$1$adapted
  #401 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
  #402 = NameAndType        #400:#401     // $anonfun$expectString$1$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
  #403 = Methodref          #2.#402       // argonaut/JsonParser$.$anonfun$expectString$1$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
  #404 = MethodHandle       6:#403        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectString$1$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
  #405 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #406 = NameAndType        #49:#405      // apply:(Ljava/lang/String;)Lscala/Function1;
  #407 = InvokeDynamic      #4:#406       // #4:apply:(Ljava/lang/String;)Lscala/Function1;
  #408 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;TT;>;
  #409 = Integer            26
  #410 = Utf8               Unexpected content found:
  #411 = String             #410          // Unexpected content found:
  #412 = Utf8               argonaut$JsonParser$$collectStringParts
  #413 = Utf8               (Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either;
  #414 = Utf8               (Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/StringBuilder;>;>;
  #415 = Utf8               workingString
  #416 = Utf8               checkUnicode$default$2$1
  #417 = NameAndType        #416:#81      // checkUnicode$default$2$1:()I
  #418 = Methodref          #2.#417       // argonaut/JsonParser$.checkUnicode$default$2$1:()I
  #419 = Utf8               checkUnicode$1
  #420 = Utf8               (IILjava/lang/String;)Z
  #421 = NameAndType        #419:#420     // checkUnicode$1:(IILjava/lang/String;)Z
  #422 = Methodref          #2.#421       // argonaut/JsonParser$.checkUnicode$1:(IILjava/lang/String;)Z
  #423 = Utf8               java/lang/Integer
  #424 = Class              #423          // java/lang/Integer
  #425 = Utf8               parseInt
  #426 = Utf8               (Ljava/lang/String;I)I
  #427 = NameAndType        #425:#426     // parseInt:(Ljava/lang/String;I)I
  #428 = Methodref          #424.#427     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I
  #429 = Utf8               appendCodePoint
  #430 = Utf8               (I)Ljava/lang/StringBuilder;
  #431 = NameAndType        #429:#430     // appendCodePoint:(I)Ljava/lang/StringBuilder;
  #432 = Methodref          #85.#431      // java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
  #433 = Utf8               \r
  #434 = String             #433          // \r
  #435 = Utf8               \n
  #436 = String             #435          // \n
  #437 = Utf8               \t
  #438 = String             #437          // \t
  #439 = Utf8               \b
  #440 = String             #439          // \b
  #441 = Utf8               \f
  #442 = String             #441          // \f
  #443 = Utf8               \\
  #444 = String             #443          // \\
  #445 = Utf8               /
  #446 = String             #445          // /
  #447 = Utf8               \"
  #448 = String             #447          // \"
  #449 = Utf8               safeNormalCharIndex$1
  #450 = Utf8               (IILjava/lang/String;)I
  #451 = NameAndType        #449:#450     // safeNormalCharIndex$1:(IILjava/lang/String;)I
  #452 = Methodref          #2.#451       // argonaut/JsonParser$.safeNormalCharIndex$1:(IILjava/lang/String;)I
  #453 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
  #454 = NameAndType        #93:#453      // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
  #455 = Methodref          #85.#454      // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
  #456 = Utf8               normalCharEnd
  #457 = Utf8               streamLength
  #458 = Utf8               Ljava/lang/StringBuilder;
  #459 = Utf8               argonaut$JsonParser$$collectStringParts$default$3
  #460 = Utf8               ()Ljava/lang/StringBuilder;
  #461 = Methodref          #85.#32       // java/lang/StringBuilder."<init>":()V
  #462 = NameAndType        #459:#460     // argonaut$JsonParser$$collectStringParts$default$3:()Ljava/lang/StringBuilder;
  #463 = Methodref          #2.#462       // argonaut/JsonParser$.argonaut$JsonParser$$collectStringParts$default$3:()Ljava/lang/StringBuilder;
  #464 = NameAndType        #412:#413     // argonaut$JsonParser$$collectStringParts:(Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either;
  #465 = Methodref          #2.#464       // argonaut/JsonParser$.argonaut$JsonParser$$collectStringParts:(Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either;
  #466 = Utf8               $anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1
  #467 = NameAndType        #466:#319     // $anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #468 = Methodref          #2.#467       // argonaut/JsonParser$.$anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #469 = MethodHandle       6:#468        // REF_invokeStatic argonaut/JsonParser$.$anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1:(Lscala/Tuple2;)Lscala/Tuple2;
  #470 = InvokeDynamic      #5:#324       // #5:apply:()Lscala/Function1;
  #471 = Utf8               validSuffixContent$1
  #472 = Utf8               from
  #473 = Utf8               jsonLength$1
  #474 = Utf8               json$1
  #475 = Utf8               parseResult$1
  #476 = Utf8               (Lscala/Tuple2;ILjava/lang/String;)Lscala/util/Either;
  #477 = Utf8               argonaut/Json
  #478 = Class              #477          // argonaut/Json
  #479 = NameAndType        #471:#420     // validSuffixContent$1:(IILjava/lang/String;)Z
  #480 = Methodref          #2.#479       // argonaut/JsonParser$.validSuffixContent$1:(IILjava/lang/String;)Z
  #481 = Integer            38
  #482 = Utf8               JSON contains invalid suffix content:
  #483 = String             #482          // JSON contains invalid suffix content:
  #484 = Utf8               jsonInstance
  #485 = Utf8               Largonaut/Json;
  #486 = Utf8               remainder
  #487 = Utf8               Lscala/Tuple2;
  #488 = Utf8               $this
  #489 = NameAndType        #475:#476     // parseResult$1:(Lscala/Tuple2;ILjava/lang/String;)Lscala/util/Either;
  #490 = Methodref          #2.#489       // argonaut/JsonParser$.parseResult$1:(Lscala/Tuple2;ILjava/lang/String;)Lscala/util/Either;
  #491 = Utf8               $anonfun$expectObject$4
  #492 = Utf8               (Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
  #493 = Utf8               fields$1
  #494 = Utf8               streamAndKey$1
  #495 = Utf8               streamAndValue
  #496 = Utf8               add
  #497 = Utf8               (Ljava/lang/String;Largonaut/Json;)Largonaut/JsonParser$JsonObjectBuilder;
  #498 = NameAndType        #496:#497     // add:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonParser$JsonObjectBuilder;
  #499 = Methodref          #7.#498       // argonaut/JsonParser$JsonObjectBuilder.add:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonParser$JsonObjectBuilder;
  #500 = Utf8               $anonfun$expectObject$3
  #501 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;I)Lscala/util/Either;
  #502 = Utf8               stream$1
  #503 = Utf8               afterFieldSeparator
  #504 = NameAndType        #491:#492     // $anonfun$expectObject$4:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
  #505 = Methodref          #2.#504       // argonaut/JsonParser$.$anonfun$expectObject$4:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
  #506 = MethodHandle       6:#505        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$4:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
  #507 = Utf8               (Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
  #508 = NameAndType        #49:#507      // apply:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
  #509 = InvokeDynamic      #6:#508       // #6:apply:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
  #510 = Utf8               $anonfun$expectObject$2
  #511 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
  #512 = Utf8               streamAndKey
  #513 = NameAndType        #188:#113     // expectFieldSeparator:(Ljava/lang/String;I)Lscala/util/Either;
  #514 = Methodref          #2.#513       // argonaut/JsonParser$.expectFieldSeparator:(Ljava/lang/String;I)Lscala/util/Either;
  #515 = Utf8               $anonfun$expectObject$3$adapted
  #516 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
  #517 = NameAndType        #515:#516     // $anonfun$expectObject$3$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
  #518 = Methodref          #2.#517       // argonaut/JsonParser$.$anonfun$expectObject$3$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
  #519 = MethodHandle       6:#518        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$3$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
  #520 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
  #521 = NameAndType        #49:#520      // apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
  #522 = InvokeDynamic      #7:#521       // #7:apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
  #523 = Utf8               $anonfun$expectObject$1
  #524 = Utf8               (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;I)Lscala/util/Either;
  #525 = Utf8               afterEntrySeparator
  #526 = NameAndType        #396:#113     // expectString:(Ljava/lang/String;I)Lscala/util/Either;
  #527 = Methodref          #2.#526       // argonaut/JsonParser$.expectString:(Ljava/lang/String;I)Lscala/util/Either;
  #528 = NameAndType        #510:#511     // $anonfun$expectObject$2:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
  #529 = Methodref          #2.#528       // argonaut/JsonParser$.$anonfun$expectObject$2:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
  #530 = MethodHandle       6:#529        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$2:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
  #531 = InvokeDynamic      #8:#215       // #8:apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;)Lscala/Function1;
  #532 = Utf8               $anonfun$expectArray$2
  #533 = Utf8               (Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
  #534 = Utf8               fields$2
  #535 = Utf8               $plus$eq
  #536 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #537 = NameAndType        #535:#536     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #538 = InterfaceMethodref #274.#537     // scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #539 = Utf8               $anonfun$expectArray$1
  #540 = Utf8               (Ljava/lang/String;Lscala/collection/mutable/Builder;I)Lscala/util/Either;
  #541 = Utf8               stream$2
  #542 = NameAndType        #532:#533     // $anonfun$expectArray$2:(Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
  #543 = Methodref          #2.#542       // argonaut/JsonParser$.$anonfun$expectArray$2:(Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
  #544 = MethodHandle       6:#543        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectArray$2:(Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
  #545 = Utf8               (Lscala/collection/mutable/Builder;)Lscala/Function1;
  #546 = NameAndType        #49:#545      // apply:(Lscala/collection/mutable/Builder;)Lscala/Function1;
  #547 = InvokeDynamic      #9:#546       // #9:apply:(Lscala/collection/mutable/Builder;)Lscala/Function1;
  #548 = Utf8               index
  #549 = Utf8               stream$3
  #550 = Utf8               char
  #551 = Utf8               pair
  #552 = Utf8               jString
  #553 = NameAndType        #552:#270     // jString:()Lscala/Function1;
  #554 = Methodref          #265.#553     // argonaut/Json$.jString:()Lscala/Function1;
  #555 = Utf8               $anonfun$expectString$2
  #556 = Utf8               afterString
  #557 = Utf8               $anonfun$expectString$1
  #558 = Utf8               stream$4
  #559 = Utf8               afterOpen
  #560 = NameAndType        #555:#319     // $anonfun$expectString$2:(Lscala/Tuple2;)Lscala/Tuple2;
  #561 = Methodref          #2.#560       // argonaut/JsonParser$.$anonfun$expectString$2:(Lscala/Tuple2;)Lscala/Tuple2;
  #562 = MethodHandle       6:#561        // REF_invokeStatic argonaut/JsonParser$.$anonfun$expectString$2:(Lscala/Tuple2;)Lscala/Tuple2;
  #563 = InvokeDynamic      #10:#324      // #10:apply:()Lscala/Function1;
  #564 = Utf8               unicodeShift
  #565 = Utf8               stream$5
  #566 = Utf8               streamLength$1
  #567 = Utf8               elements
  #568 = Methodref          #4.#32        // java/lang/Object."<init>":()V
  #569 = Utf8               unboxToInt
  #570 = Utf8               (Ljava/lang/Object;)I
  #571 = NameAndType        #569:#570     // unboxToInt:(Ljava/lang/Object;)I
  #572 = Methodref          #161.#571     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #573 = NameAndType        #523:#524     // $anonfun$expectObject$1:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;I)Lscala/util/Either;
  #574 = Methodref          #2.#573       // argonaut/JsonParser$.$anonfun$expectObject$1:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;I)Lscala/util/Either;
  #575 = Utf8               Ljava/lang/Object;
  #576 = NameAndType        #539:#540     // $anonfun$expectArray$1:(Ljava/lang/String;Lscala/collection/mutable/Builder;I)Lscala/util/Either;
  #577 = Methodref          #2.#576       // argonaut/JsonParser$.$anonfun$expectArray$1:(Ljava/lang/String;Lscala/collection/mutable/Builder;I)Lscala/util/Either;
  #578 = NameAndType        #557:#113     // $anonfun$expectString$1:(Ljava/lang/String;I)Lscala/util/Either;
  #579 = Methodref          #2.#578       // argonaut/JsonParser$.$anonfun$expectString$1:(Ljava/lang/String;I)Lscala/util/Either;
  #580 = NameAndType        #500:#501     // $anonfun$expectObject$3:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;I)Lscala/util/Either;
  #581 = Methodref          #2.#580       // argonaut/JsonParser$.$anonfun$expectObject$3:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;I)Lscala/util/Either;
  #582 = Utf8               $deserializeLambda$
  #583 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #584 = Utf8               scala/runtime/LambdaDeserialize
  #585 = Class              #584          // scala/runtime/LambdaDeserialize
  #586 = Utf8               bootstrap
  #587 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #588 = NameAndType        #586:#587     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #589 = Methodref          #585.#588     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #590 = MethodHandle       6:#589        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #591 = Utf8               lambdaDeserialize
  #592 = NameAndType        #591:#583     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #593 = InvokeDynamic      #11:#592      // #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #594 = Utf8               Signature
  #595 = Utf8               Code
  #596 = Utf8               LineNumberTable
  #597 = Utf8               StackMapTable
  #598 = Utf8               LocalVariableTable
  #599 = Utf8               MethodParameters
  #600 = Utf8               InnerClasses
  #601 = Utf8               SourceFile
  #602 = Utf8               BootstrapMethods
  #603 = Utf8               ScalaInlineInfo
  #604 = Utf8               Scala
{
  public static final argonaut.JsonParser$ MODULE$;
    descriptor: Largonaut/JsonParser$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final scala.util.Left<java.lang.String, scala.runtime.Nothing$> argonaut$JsonParser$$unexpectedTermination;
    descriptor: Lscala/util/Left;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Signature: #28                          // Lscala/util/Left<Ljava/lang/String;Lscala/runtime/Nothing$;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class argonaut/JsonParser$
         3: dup
         4: invokespecial #33                 // Method "<init>":()V
         7: putstatic     #35                 // Field MODULE$:Largonaut/JsonParser$;
        10: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        13: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
        16: ldc           #46                 // String JSON terminates unexpectedly.
        18: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        21: putstatic     #54                 // Field argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
        24: return
      LineNumberTable:
        line 8: 0
        line 11: 10
        line 8: 24

  public final java.lang.String argonaut$JsonParser$$excerpt(java.lang.String, int, int);
    descriptor: (Ljava/lang/String;II)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=5, args_size=4
         0: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: iload_2
        11: invokevirtual #77                 // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        14: astore        4
        16: aload         4
        18: invokevirtual #83                 // Method java/lang/String.length:()I
        21: iload_3
        22: if_icmple     63
        25: new           #85                 // class java/lang/StringBuilder
        28: dup
        29: ldc           #86                 // int 3
        31: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
        34: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        37: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        40: aload         4
        42: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        45: iload_3
        46: invokevirtual #92                 // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        49: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: ldc           #98                 // String ...
        54: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        60: goto          65
        63: aload         4
        65: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 63
          locals = [ class java/lang/String ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 33: 0
        line 34: 16
        line 35: 25
        line 37: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      51     4 remaining   Ljava/lang/String;
            0      66     0  this   Largonaut/JsonParser$;
            0      66     1 string   Ljava/lang/String;
            0      66     2 position   I
            0      66     3 limit   I
    MethodParameters:
      Name                           Flags
      string                         final
      position                       final
      limit                          final

  public final int argonaut$JsonParser$$excerpt$default$3();
    descriptor: ()I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        50
         2: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Largonaut/JsonParser$;

  public final scala.util.Either<java.lang.String, argonaut.Json> parse(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #83                 // Method java/lang/String.length:()I
         4: istore_2
         5: aload_0
         6: aload_1
         7: iconst_0
         8: invokespecial #115                // Method expectValue:(Ljava/lang/String;I)Lscala/util/Either;
        11: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        14: aload_0
        15: iload_2
        16: aload_1
        17: invokedynamic #140,  0            // InvokeDynamic #0:apply:(Largonaut/JsonParser$;ILjava/lang/String;)Lscala/Function1;
        22: invokevirtual #144                // Method scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
        25: areturn
      LineNumberTable:
        line 42: 0
        line 61: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      21     2 jsonLength   I
            0      26     0  this   Largonaut/JsonParser$;
            0      26     1  json   Ljava/lang/String;
    Signature: #110                         // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      json                           final

  public final scala.util.Either<java.lang.String, java.lang.Object> argonaut$JsonParser$$expectedSpacerToken(java.lang.String, int, char, java.lang.String);
    descriptor: (Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=6, locals=9, args_size=5
         0: iload_2
         1: aload_1
         2: invokevirtual #83                 // Method java/lang/String.length:()I
         5: if_icmplt     14
         8: getstatic     #54                 // Field argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
        11: goto          203
        14: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        17: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_1
        21: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: iload_2
        25: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        28: istore        8
        30: iload_3
        31: iload         8
        33: if_icmpne     56
        36: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        39: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
        42: iload_2
        43: iconst_1
        44: iadd
        45: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        48: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        51: astore        6
        53: goto          201
        56: goto          59
        59: bipush        32
        61: iload         8
        63: if_icmpne     72
        66: iconst_1
        67: istore        7
        69: goto          129
        72: goto          75
        75: bipush        13
        77: iload         8
        79: if_icmpne     88
        82: iconst_1
        83: istore        7
        85: goto          129
        88: goto          91
        91: bipush        10
        93: iload         8
        95: if_icmpne     104
        98: iconst_1
        99: istore        7
       101: goto          129
       104: goto          107
       107: bipush        9
       109: iload         8
       111: if_icmpne     120
       114: iconst_1
       115: istore        7
       117: goto          129
       120: goto          123
       123: iconst_0
       124: istore        7
       126: goto          129
       129: iload         7
       131: ifeq          149
       134: aload_1
       135: iload_2
       136: iconst_1
       137: iadd
       138: iload_3
       139: aload         4
       141: astore        4
       143: istore_3
       144: istore_2
       145: astore_1
       146: goto          0
       149: goto          152
       152: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       155: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
       158: new           #85                 // class java/lang/StringBuilder
       161: dup
       162: ldc           #171                // int 12
       164: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
       167: aload         4
       169: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       172: ldc           #173                // String  but found:
       174: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       177: aload_0
       178: aload_1
       179: iload_2
       180: aload_0
       181: invokevirtual #175                // Method argonaut$JsonParser$$excerpt$default$3:()I
       184: invokevirtual #177                // Method argonaut$JsonParser$$excerpt:(Ljava/lang/String;II)Ljava/lang/String;
       187: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       193: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       196: astore        6
       198: goto          201
       201: aload         6
       203: areturn
      StackMapTable: number_of_entries = 17
        frame_type = 0 /* same */
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class java/lang/String, top, top, top, int ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 12 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class java/lang/String, top, top, int, int ]
          stack = []
        frame_type = 19 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class java/lang/String, top, class scala/util/Either, top, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class java/lang/String ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 67: 0
        line 68: 14
        line 69: 30
        line 70: 59
        line 71: 152
        line 68: 201
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     204     0  this   Largonaut/JsonParser$;
            0     204     1 stream   Ljava/lang/String;
            0     204     2 position   I
            0     204     3 token   C
            0     204     4 failMessage   Ljava/lang/String;
    Signature: #148                         // (Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either<Ljava/lang/String;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final
      token                          final
      failMessage                    final

  public final scala.util.Either<java.lang.String, java.lang.Object> argonaut$JsonParser$$expectStringBounds(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: bipush        34
         5: ldc           #182                // String Expected string bounds
         7: invokevirtual #184                // Method argonaut$JsonParser$$expectedSpacerToken:(Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
        10: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/JsonParser$;
            0      11     1 stream   Ljava/lang/String;
            0      11     2 position   I
    Signature: #180                         // (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  private final scala.util.Either<java.lang.String, java.lang.Object> expectEntrySeparator(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: bipush        44
         5: ldc           #187                // String Expected entry separator token
         7: invokevirtual #184                // Method argonaut$JsonParser$$expectedSpacerToken:(Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
        10: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/JsonParser$;
            0      11     1 stream   Ljava/lang/String;
            0      11     2 position   I
    Signature: #180                         // (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  private final scala.util.Either<java.lang.String, java.lang.Object> expectFieldSeparator(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: bipush        58
         5: ldc           #190                // String Expected field separator token
         7: invokevirtual #184                // Method argonaut$JsonParser$$expectedSpacerToken:(Ljava/lang/String;ICLjava/lang/String;)Lscala/util/Either;
        10: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/JsonParser$;
            0      11     1 stream   Ljava/lang/String;
            0      11     2 position   I
    Signature: #180                         // (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  private final scala.util.Either<java.lang.String, scala.Tuple2<java.lang.Object, argonaut.Json>> expectObject(java.lang.String, int, boolean, argonaut.JsonParser$JsonObjectBuilder);
    descriptor: (Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=16, args_size=5
         0: iload_2
         1: aload_1
         2: invokevirtual #83                 // Method java/lang/String.length:()I
         5: if_icmplt     14
         8: getstatic     #54                 // Field argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
        11: goto          301
        14: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        17: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_1
        21: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: iload_2
        25: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        28: istore        7
        30: iload         7
        32: lookupswitch  { // 5
                       9: 114
                      10: 114
                      13: 114
                      32: 114
                     125: 84
                 default: 129
            }
        84: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        87: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
        90: new           #197                // class scala/Tuple2
        93: dup
        94: iload_2
        95: iconst_1
        96: iadd
        97: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       100: aload         4
       102: invokevirtual #201                // Method argonaut/JsonParser$JsonObjectBuilder.build:()Largonaut/Json;
       105: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       108: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       111: goto          301
       114: aload_1
       115: iload_2
       116: iconst_1
       117: iadd
       118: iload_3
       119: aload         4
       121: astore        4
       123: istore_3
       124: istore_2
       125: astore_1
       126: goto          0
       129: iload_3
       130: ifeq          149
       133: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       136: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
       139: iload_2
       140: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       143: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       146: goto          155
       149: aload_0
       150: aload_1
       151: iload_2
       152: invokespecial #206                // Method expectEntrySeparator:(Ljava/lang/String;I)Lscala/util/Either;
       155: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
       158: aload_1
       159: aload         4
       161: invokedynamic #216,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;)Lscala/Function1;
       166: invokevirtual #144                // Method scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
       169: astore        8
       171: aload         8
       173: astore        9
       175: aload         9
       177: instanceof    #218                // class scala/util/Right
       180: ifeq          239
       183: aload         9
       185: checkcast     #218                // class scala/util/Right
       188: astore        10
       190: aload         10
       192: invokevirtual #222                // Method scala/util/Right.value:()Ljava/lang/Object;
       195: checkcast     #197                // class scala/Tuple2
       198: astore        11
       200: aload         11
       202: ifnull        236
       205: aload         11
       207: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
       210: istore        12
       212: aload         11
       214: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
       217: checkcast     #7                  // class argonaut/JsonParser$JsonObjectBuilder
       220: astore        13
       222: aload_1
       223: iload         12
       225: iconst_0
       226: aload         13
       228: astore        4
       230: istore_3
       231: istore_2
       232: astore_1
       233: goto          0
       236: goto          242
       239: goto          242
       242: aload         9
       244: instanceof    #230                // class scala/util/Left
       247: ifeq          283
       250: aload         9
       252: checkcast     #230                // class scala/util/Left
       255: astore        14
       257: aload         14
       259: invokevirtual #231                // Method scala/util/Left.value:()Ljava/lang/Object;
       262: checkcast     #79                 // class java/lang/String
       265: astore        15
       267: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       270: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
       273: aload         15
       275: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       278: astore        6
       280: goto          296
       283: goto          286
       286: new           #233                // class scala/MatchError
       289: dup
       290: aload         9
       292: invokespecial #236                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       295: athrow
       296: aload         6
       298: goto          301
       301: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 0 /* same */
        frame_type = 13 /* same */
        frame_type = 254 /* append */
          offset_delta = 69
          locals = [ top, top, int ]
        frame_type = 29 /* same */
        frame_type = 14 /* same */
        frame_type = 19 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class argonaut/JsonParser$JsonObjectBuilder, top, top, int, class scala/util/Either, class scala/util/Either, class scala/util/Right, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 40 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class argonaut/JsonParser$JsonObjectBuilder, top, class scala/util/Left, int, class scala/util/Either, class scala/util/Either, top, top, top, top, class scala/util/Left, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class argonaut/JsonParser$JsonObjectBuilder ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 86: 0
        line 87: 14
        line 88: 84
        line 89: 114
        line 92: 129
        line 97: 171
        line 98: 175
        line 99: 242
        line 97: 286
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          210      26    12 newPosition   I
          220      16    13 newFields   Largonaut/JsonParser$JsonObjectBuilder;
          265      18    15 failure   Ljava/lang/String;
          169     129     8  next   Lscala/util/Either;
            0     302     0  this   Largonaut/JsonParser$;
            0     302     1 stream   Ljava/lang/String;
            0     302     2 position   I
            0     302     3 first   Z
            0     302     4 fields   Largonaut/JsonParser$JsonObjectBuilder;
    Signature: #193                         // (Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Largonaut/Json;>;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final
      first                          final
      fields                         final

  private final boolean expectObject$default$3();
    descriptor: ()Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Largonaut/JsonParser$;

  private final argonaut.JsonParser$JsonObjectBuilder expectObject$default$4();
    descriptor: ()Largonaut/JsonParser$JsonObjectBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=1, args_size=1
         0: new           #7                  // class argonaut/JsonParser$JsonObjectBuilder
         3: dup
         4: getstatic     #250                // Field argonaut/JsonParser$JsonObjectBuilder$.MODULE$:Largonaut/JsonParser$JsonObjectBuilder$;
         7: invokevirtual #254                // Method argonaut/JsonParser$JsonObjectBuilder$.$lessinit$greater$default$1:()Lscala/collection/mutable/Builder;
        10: getstatic     #250                // Field argonaut/JsonParser$JsonObjectBuilder$.MODULE$:Largonaut/JsonParser$JsonObjectBuilder$;
        13: invokevirtual #257                // Method argonaut/JsonParser$JsonObjectBuilder$.$lessinit$greater$default$2:()Lscala/collection/mutable/Builder;
        16: invokespecial #260                // Method argonaut/JsonParser$JsonObjectBuilder."<init>":(Lscala/collection/mutable/Builder;Lscala/collection/mutable/Builder;)V
        19: areturn
      LineNumberTable:
        line 85: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Largonaut/JsonParser$;

  private final scala.util.Either<java.lang.String, scala.Tuple2<java.lang.Object, argonaut.Json>> expectArray(java.lang.String, int, boolean, scala.collection.mutable.Builder<argonaut.Json, scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Ljava/lang/String;IZLscala/collection/mutable/Builder;)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=6, locals=16, args_size=5
         0: iload_2
         1: aload_1
         2: invokevirtual #83                 // Method java/lang/String.length:()I
         5: if_icmplt     14
         8: getstatic     #54                 // Field argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
        11: goto          314
        14: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        17: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_1
        21: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: iload_2
        25: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        28: istore        7
        30: iload         7
        32: lookupswitch  { // 5
                       9: 127
                      10: 127
                      13: 127
                      32: 127
                      93: 84
                 default: 142
            }
        84: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        87: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
        90: new           #197                // class scala/Tuple2
        93: dup
        94: iload_2
        95: iconst_1
        96: iadd
        97: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       100: getstatic     #268                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
       103: invokevirtual #272                // Method argonaut/Json$.jArray:()Lscala/Function1;
       106: aload         4
       108: invokeinterface #277,  1          // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
       113: invokeinterface #281,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       118: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       121: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       124: goto          314
       127: aload_1
       128: iload_2
       129: iconst_1
       130: iadd
       131: iload_3
       132: aload         4
       134: astore        4
       136: istore_3
       137: istore_2
       138: astore_1
       139: goto          0
       142: iload_3
       143: ifeq          162
       146: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       149: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
       152: iload_2
       153: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       156: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       159: goto          168
       162: aload_0
       163: aload_1
       164: iload_2
       165: invokespecial #206                // Method expectEntrySeparator:(Ljava/lang/String;I)Lscala/util/Either;
       168: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
       171: aload_1
       172: aload         4
       174: invokedynamic #289,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;Lscala/collection/mutable/Builder;)Lscala/Function1;
       179: invokevirtual #144                // Method scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
       182: astore        8
       184: aload         8
       186: astore        9
       188: aload         9
       190: instanceof    #218                // class scala/util/Right
       193: ifeq          252
       196: aload         9
       198: checkcast     #218                // class scala/util/Right
       201: astore        10
       203: aload         10
       205: invokevirtual #222                // Method scala/util/Right.value:()Ljava/lang/Object;
       208: checkcast     #197                // class scala/Tuple2
       211: astore        11
       213: aload         11
       215: ifnull        249
       218: aload         11
       220: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
       223: istore        12
       225: aload         11
       227: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
       230: checkcast     #274                // class scala/collection/mutable/Builder
       233: astore        13
       235: aload_1
       236: iload         12
       238: iconst_0
       239: aload         13
       241: astore        4
       243: istore_3
       244: istore_2
       245: astore_1
       246: goto          0
       249: goto          255
       252: goto          255
       255: aload         9
       257: instanceof    #230                // class scala/util/Left
       260: ifeq          296
       263: aload         9
       265: checkcast     #230                // class scala/util/Left
       268: astore        14
       270: aload         14
       272: invokevirtual #231                // Method scala/util/Left.value:()Ljava/lang/Object;
       275: checkcast     #79                 // class java/lang/String
       278: astore        15
       280: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       283: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
       286: aload         15
       288: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       291: astore        6
       293: goto          309
       296: goto          299
       299: new           #233                // class scala/MatchError
       302: dup
       303: aload         9
       305: invokespecial #236                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       308: athrow
       309: aload         6
       311: goto          314
       314: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 0 /* same */
        frame_type = 13 /* same */
        frame_type = 254 /* append */
          offset_delta = 69
          locals = [ top, top, int ]
        frame_type = 42 /* same */
        frame_type = 14 /* same */
        frame_type = 19 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class scala/collection/mutable/Builder, top, top, int, class scala/util/Either, class scala/util/Either, class scala/util/Right, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 40 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class scala/collection/mutable/Builder, top, class scala/util/Left, int, class scala/util/Either, class scala/util/Either, top, top, top, top, class scala/util/Left, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, int, class scala/collection/mutable/Builder ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 108: 0
        line 109: 14
        line 110: 84
        line 111: 127
        line 114: 142
        line 117: 184
        line 118: 188
        line 119: 255
        line 117: 299
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          223      26    12 newPosition   I
          233      16    13 newFields   Lscala/collection/mutable/Builder;
          278      18    15 failure   Ljava/lang/String;
          182     129     8  next   Lscala/util/Either;
            0     315     0  this   Largonaut/JsonParser$;
            0     315     1 stream   Ljava/lang/String;
            0     315     2 position   I
            0     315     3 first   Z
            0     315     4 fields   Lscala/collection/mutable/Builder;
    Signature: #263                         // (Ljava/lang/String;IZLscala/collection/mutable/Builder<Largonaut/Json;Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Largonaut/Json;>;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final
      first                          final
      fields                         final

  private final boolean expectArray$default$3();
    descriptor: ()Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Largonaut/JsonParser$;

  private final scala.collection.mutable.Builder<argonaut.Json, scala.collection.immutable.List<argonaut.Json>> expectArray$default$4();
    descriptor: ()Lscala/collection/mutable/Builder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #298                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
         3: invokevirtual #301                // Method scala/collection/immutable/List$.newBuilder:()Lscala/collection/mutable/Builder;
         6: areturn
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Largonaut/JsonParser$;
    Signature: #293                         // ()Lscala/collection/mutable/Builder<Largonaut/Json;Lscala/collection/immutable/List<Largonaut/Json;>;>;

  private final scala.util.Either<java.lang.String, scala.Tuple2<java.lang.Object, argonaut.Json>> expectValue(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=5, locals=11, args_size=3
         0: iload_2
         1: aload_1
         2: invokevirtual #83                 // Method java/lang/String.length:()I
         5: if_icmplt     14
         8: getstatic     #54                 // Field argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
        11: goto          511
        14: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        17: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_1
        21: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: iload_2
        25: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        28: istore        5
        30: iload         5
        32: lookupswitch  { // 10
                       9: 328
                      10: 328
                      13: 328
                      32: 328
                      34: 162
                      91: 124
                     102: 232
                     110: 280
                     116: 184
                     123: 143
                 default: 337
            }
       124: aload_0
       125: aload_1
       126: iload_2
       127: iconst_1
       128: iadd
       129: aload_0
       130: invokespecial #304                // Method expectArray$default$3:()Z
       133: aload_0
       134: invokespecial #306                // Method expectArray$default$4:()Lscala/collection/mutable/Builder;
       137: invokespecial #308                // Method expectArray:(Ljava/lang/String;IZLscala/collection/mutable/Builder;)Lscala/util/Either;
       140: goto          511
       143: aload_0
       144: aload_1
       145: iload_2
       146: iconst_1
       147: iadd
       148: aload_0
       149: invokespecial #310                // Method expectObject$default$3:()Z
       152: aload_0
       153: invokespecial #312                // Method expectObject$default$4:()Largonaut/JsonParser$JsonObjectBuilder;
       156: invokespecial #314                // Method expectObject:(Ljava/lang/String;IZLargonaut/JsonParser$JsonObjectBuilder;)Lscala/util/Either;
       159: goto          511
       162: aload_0
       163: aload_1
       164: iload_2
       165: iconst_1
       166: iadd
       167: invokevirtual #317                // Method argonaut$JsonParser$$expectStringNoStartBounds:(Ljava/lang/String;I)Lscala/util/Either;
       170: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
       173: invokedynamic #325,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       178: invokevirtual #328                // Method scala/util/Either$RightProjection.map:(Lscala/Function1;)Lscala/util/Either;
       181: goto          511
       184: aload_1
       185: ldc_w         #330                // String true
       188: iload_2
       189: invokevirtual #334                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
       192: ifeq          226
       195: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       198: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
       201: new           #197                // class scala/Tuple2
       204: dup
       205: iload_2
       206: iconst_4
       207: iadd
       208: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       211: getstatic     #268                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
       214: invokevirtual #337                // Method argonaut/Json$.jTrue:()Largonaut/Json;
       217: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       220: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       223: goto          229
       226: goto          337
       229: goto          511
       232: aload_1
       233: ldc_w         #339                // String false
       236: iload_2
       237: invokevirtual #334                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
       240: ifeq          274
       243: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       246: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
       249: new           #197                // class scala/Tuple2
       252: dup
       253: iload_2
       254: iconst_5
       255: iadd
       256: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       259: getstatic     #268                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
       262: invokevirtual #342                // Method argonaut/Json$.jFalse:()Largonaut/Json;
       265: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       268: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       271: goto          277
       274: goto          337
       277: goto          511
       280: aload_1
       281: ldc_w         #344                // String null
       284: iload_2
       285: invokevirtual #334                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
       288: ifeq          322
       291: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       294: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
       297: new           #197                // class scala/Tuple2
       300: dup
       301: iload_2
       302: iconst_4
       303: iadd
       304: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       307: getstatic     #268                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
       310: invokevirtual #347                // Method argonaut/Json$.jNull:()Largonaut/Json;
       313: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       316: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       319: goto          325
       322: goto          337
       325: goto          511
       328: aload_1
       329: iload_2
       330: iconst_1
       331: iadd
       332: istore_2
       333: astore_1
       334: goto          0
       337: aload_0
       338: iload_2
       339: aload_1
       340: invokespecial #351                // Method safeNumberIndex$1:(ILjava/lang/String;)I
       343: istore        6
       345: iload         6
       347: iload_2
       348: if_icmpne     360
       351: aload_0
       352: aload_1
       353: iload_2
       354: invokespecial #354                // Method unexpectedContent:(Ljava/lang/String;I)Lscala/util/Either;
       357: goto          508
       360: aload_1
       361: iload_2
       362: iload         6
       364: invokevirtual #358                // Method java/lang/String.substring:(II)Ljava/lang/String;
       367: astore        7
       369: getstatic     #363                // Field argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
       372: aload         7
       374: invokevirtual #367                // Method argonaut/JsonNumber$.fromString:(Ljava/lang/String;)Lscala/Option;
       377: astore        8
       379: aload         8
       381: instanceof    #369                // class scala/Some
       384: ifeq          435
       387: aload         8
       389: checkcast     #369                // class scala/Some
       392: astore        9
       394: aload         9
       396: invokevirtual #370                // Method scala/Some.value:()Ljava/lang/Object;
       399: checkcast     #372                // class argonaut/JsonNumber
       402: astore        10
       404: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       407: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
       410: new           #197                // class scala/Tuple2
       413: dup
       414: iload         6
       416: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       419: aload         10
       421: invokevirtual #375                // Method argonaut/JsonNumber.asJson:()Largonaut/Json;
       424: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       427: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       430: astore        4
       432: goto          506
       435: goto          438
       438: getstatic     #380                // Field scala/None$.MODULE$:Lscala/None$;
       441: aload         8
       443: invokevirtual #384                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       446: ifeq          493
       449: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       452: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
       455: new           #85                 // class java/lang/StringBuilder
       458: dup
       459: ldc_w         #385                // int 40
       462: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
       465: ldc_w         #387                // String Value [
       468: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       471: aload         7
       473: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       476: ldc_w         #389                // String ] cannot be parsed into a number.
       479: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       482: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       485: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       488: astore        4
       490: goto          506
       493: goto          496
       496: new           #233                // class scala/MatchError
       499: dup
       500: aload         8
       502: invokespecial #236                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       505: athrow
       506: aload         4
       508: goto          511
       511: areturn
      StackMapTable: number_of_entries = 24
        frame_type = 0 /* same */
        frame_type = 13 /* same */
        frame_type = 254 /* append */
          offset_delta = 109
          locals = [ top, top, int ]
        frame_type = 18 /* same */
        frame_type = 18 /* same */
        frame_type = 21 /* same */
        frame_type = 41 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/util/Right ]
        frame_type = 2 /* same */
        frame_type = 41 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/util/Right ]
        frame_type = 2 /* same */
        frame_type = 41 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/util/Right ]
        frame_type = 2 /* same */
        frame_type = 8 /* same */
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
        frame_type = 253 /* append */
          offset_delta = 74
          locals = [ class java/lang/String, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 54 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, top, class scala/util/Either, int, int, class java/lang/String, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, top, top, int, int ]
          stack = [ class scala/util/Either ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonParser$, class java/lang/String, int ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 138: 0
        line 139: 14
        line 140: 124
        line 141: 143
        line 142: 162
        line 143: 184
        line 139: 226
        line 144: 232
        line 139: 274
        line 145: 280
        line 139: 322
        line 146: 328
        line 148: 337
        line 149: 345
        line 151: 360
        line 152: 369
        line 153: 379
        line 154: 438
        line 152: 496
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          402      33    10    jn   Largonaut/JsonNumber;
          367     141     7 numberAsString   Ljava/lang/String;
          343     165     6 numberEndIndex   I
            0     512     0  this   Largonaut/JsonParser$;
            0     512     1 stream   Ljava/lang/String;
            0     512     2 position   I
    Signature: #302                         // (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Largonaut/Json;>;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  private final scala.util.Either<java.lang.String, scala.Tuple2<java.lang.Object, java.lang.String>> expectString(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokevirtual #399                // Method argonaut$JsonParser$$expectStringBounds:(Ljava/lang/String;I)Lscala/util/Either;
         6: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
         9: aload_1
        10: invokedynamic #407,  0            // InvokeDynamic #4:apply:(Ljava/lang/String;)Lscala/Function1;
        15: invokevirtual #144                // Method scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
        18: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Largonaut/JsonParser$;
            0      19     1 stream   Ljava/lang/String;
            0      19     2 position   I
    Signature: #397                         // (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  private final <T extends java.lang.Object> scala.util.Either<java.lang.String, T> unexpectedContent(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=6, locals=3, args_size=3
         0: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
         6: new           #85                 // class java/lang/StringBuilder
         9: dup
        10: ldc_w         #409                // int 26
        13: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
        16: ldc_w         #411                // String Unexpected content found:
        19: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: aload_0
        23: aload_1
        24: iload_2
        25: aload_0
        26: invokevirtual #175                // Method argonaut$JsonParser$$excerpt$default$3:()I
        29: invokevirtual #177                // Method argonaut$JsonParser$$excerpt:(Ljava/lang/String;II)Ljava/lang/String;
        32: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        38: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        41: areturn
      LineNumberTable:
        line 171: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Largonaut/JsonParser$;
            0      42     1 stream   Ljava/lang/String;
            0      42     2 position   I
    Signature: #408                         // <T:Ljava/lang/Object;>(Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;TT;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  public final scala.util.Either<java.lang.String, scala.Tuple2<java.lang.Object, java.lang.StringBuilder>> argonaut$JsonParser$$collectStringParts(java.lang.String, int, java.lang.StringBuilder);
    descriptor: (Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=7, locals=9, args_size=4
         0: aload_1
         1: invokevirtual #83                 // Method java/lang/String.length:()I
         4: istore        5
         6: iload_2
         7: iload         5
         9: if_icmplt     18
        12: getstatic     #54                 // Field argonaut$JsonParser$$unexpectedTermination:Lscala/util/Left;
        15: goto          447
        18: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        21: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        24: aload_1
        25: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        28: iload_2
        29: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        32: istore        6
        34: iload         6
        36: lookupswitch  { // 2
                      34: 64
                      92: 90
                 default: 420
            }
        64: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        67: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
        70: new           #197                // class scala/Tuple2
        73: dup
        74: iload_2
        75: iconst_1
        76: iadd
        77: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        80: aload_3
        81: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        84: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        87: goto          447
        90: iload_2
        91: iconst_2
        92: iadd
        93: iload         5
        95: if_icmpge     411
        98: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       101: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       104: aload_1
       105: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       108: iload_2
       109: iconst_1
       110: iadd
       111: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
       114: istore        7
       116: iload         7
       118: lookupswitch  { // 9
                      34: 382
                      47: 365
                      92: 348
                      98: 314
                     102: 331
                     110: 280
                     114: 263
                     116: 297
                     117: 200
                 default: 399
            }
       200: iload_2
       201: bipush        6
       203: iadd
       204: iload         5
       206: if_icmpge     254
       209: aload_0
       210: iload_2
       211: iconst_2
       212: iadd
       213: invokestatic  #418                // Method checkUnicode$default$2$1:()I
       216: aload_1
       217: invokespecial #422                // Method checkUnicode$1:(IILjava/lang/String;)Z
       220: ifeq          254
       223: aload_1
       224: iload_2
       225: bipush        6
       227: iadd
       228: aload_3
       229: aload_1
       230: iload_2
       231: iconst_2
       232: iadd
       233: iload_2
       234: bipush        6
       236: iadd
       237: invokevirtual #358                // Method java/lang/String.substring:(II)Ljava/lang/String;
       240: bipush        16
       242: invokestatic  #428                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I
       245: invokevirtual #432                // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
       248: astore_3
       249: istore_2
       250: astore_1
       251: goto          0
       254: aload_0
       255: aload_1
       256: iload_2
       257: invokespecial #354                // Method unexpectedContent:(Ljava/lang/String;I)Lscala/util/Either;
       260: goto          408
       263: aload_1
       264: iload_2
       265: iconst_2
       266: iadd
       267: aload_3
       268: ldc_w         #434                // String \r
       271: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       274: astore_3
       275: istore_2
       276: astore_1
       277: goto          0
       280: aload_1
       281: iload_2
       282: iconst_2
       283: iadd
       284: aload_3
       285: ldc_w         #436                // String \n
       288: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       291: astore_3
       292: istore_2
       293: astore_1
       294: goto          0
       297: aload_1
       298: iload_2
       299: iconst_2
       300: iadd
       301: aload_3
       302: ldc_w         #438                // String \t
       305: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       308: astore_3
       309: istore_2
       310: astore_1
       311: goto          0
       314: aload_1
       315: iload_2
       316: iconst_2
       317: iadd
       318: aload_3
       319: ldc_w         #440                // String \b
       322: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       325: astore_3
       326: istore_2
       327: astore_1
       328: goto          0
       331: aload_1
       332: iload_2
       333: iconst_2
       334: iadd
       335: aload_3
       336: ldc_w         #442                // String \f
       339: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       342: astore_3
       343: istore_2
       344: astore_1
       345: goto          0
       348: aload_1
       349: iload_2
       350: iconst_2
       351: iadd
       352: aload_3
       353: ldc_w         #444                // String \\
       356: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       359: astore_3
       360: istore_2
       361: astore_1
       362: goto          0
       365: aload_1
       366: iload_2
       367: iconst_2
       368: iadd
       369: aload_3
       370: ldc_w         #446                // String /
       373: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       376: astore_3
       377: istore_2
       378: astore_1
       379: goto          0
       382: aload_1
       383: iload_2
       384: iconst_2
       385: iadd
       386: aload_3
       387: ldc_w         #448                // String \"
       390: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       393: astore_3
       394: istore_2
       395: astore_1
       396: goto          0
       399: aload_0
       400: aload_1
       401: iload_2
       402: invokespecial #354                // Method unexpectedContent:(Ljava/lang/String;I)Lscala/util/Either;
       405: goto          408
       408: goto          417
       411: aload_0
       412: aload_1
       413: iload_2
       414: invokespecial #354                // Method unexpectedContent:(Ljava/lang/String;I)Lscala/util/Either;
       417: goto          447
       420: aload_0
       421: iload_2
       422: iload         5
       424: aload_1
       425: invokespecial #452                // Method safeNormalCharIndex$1:(IILjava/lang/String;)I
       428: istore        8
       430: aload_1
       431: iload         8
       433: aload_3
       434: aload_1
       435: iload_2
       436: iload         8
       438: invokevirtual #455                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
       441: astore_3
       442: istore_2
       443: astore_1
       444: goto          0
       447: areturn
      StackMapTable: number_of_entries = 20
        frame_type = 0 /* same */
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ top, int ]
        frame_type = 252 /* append */
          offset_delta = 45
          locals = [ int ]
        frame_type = 25 /* same */
        frame_type = 252 /* append */
          offset_delta = 109
          locals = [ int ]
        frame_type = 53 /* same */
        frame_type = 8 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 16 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class argonaut/JsonParser$, class java/lang/String, int, class java/lang/StringBuilder, top, int ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 177: 0
        line 201: 6
        line 202: 18
        line 203: 64
        line 205: 90
        line 206: 98
        line 207: 200
        line 208: 223
        line 210: 254
        line 211: 263
        line 212: 280
        line 213: 297
        line 214: 314
        line 215: 331
        line 216: 348
        line 217: 365
        line 218: 382
        line 219: 399
        line 221: 411
        line 224: 420
        line 225: 430
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          428      19     8 normalCharEnd   I
            4     443     5 streamLength   I
            0     448     0  this   Largonaut/JsonParser$;
            0     448     1 stream   Ljava/lang/String;
            0     448     2 position   I
            0     448     3 workingString   Ljava/lang/StringBuilder;
    Signature: #414                         // (Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/StringBuilder;>;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final
      workingString                  final

  public final java.lang.StringBuilder argonaut$JsonParser$$collectStringParts$default$3();
    descriptor: ()Ljava/lang/StringBuilder;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=1, args_size=1
         0: new           #85                 // class java/lang/StringBuilder
         3: dup
         4: invokespecial #461                // Method java/lang/StringBuilder."<init>":()V
         7: areturn
      LineNumberTable:
        line 176: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonParser$;

  public final scala.util.Either<java.lang.String, scala.Tuple2<java.lang.Object, java.lang.String>> argonaut$JsonParser$$expectStringNoStartBounds(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: aload_0
         4: invokevirtual #463                // Method argonaut$JsonParser$$collectStringParts$default$3:()Ljava/lang/StringBuilder;
         7: invokevirtual #465                // Method argonaut$JsonParser$$collectStringParts:(Ljava/lang/String;ILjava/lang/StringBuilder;)Lscala/util/Either;
        10: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        13: invokedynamic #470,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        18: invokevirtual #328                // Method scala/util/Either$RightProjection.map:(Lscala/Function1;)Lscala/util/Either;
        21: areturn
      LineNumberTable:
        line 233: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Largonaut/JsonParser$;
            0      22     1 stream   Ljava/lang/String;
            0      22     2 position   I
    Signature: #397                         // (Ljava/lang/String;I)Lscala/util/Either<Ljava/lang/String;Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      stream                         final
      position                       final

  private final boolean validSuffixContent$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=4
         0: iload_1
         1: iload_2
         2: if_icmplt     9
         5: iconst_1
         6: goto          79
         9: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        12: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: aload_3
        16: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: iload_1
        20: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        23: istore        5
        25: iload         5
        27: lookupswitch  { // 4
                       9: 68
                      10: 68
                      13: 68
                      32: 68
                 default: 75
            }
        68: iload_1
        69: iconst_1
        70: iadd
        71: istore_1
        72: goto          0
        75: iconst_0
        76: goto          79
        79: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 0 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 58
          locals = [ top, int ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class argonaut/JsonParser$, int, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 46: 0
        line 47: 9
        line 48: 68
        line 49: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      80     0  this   Largonaut/JsonParser$;
            0      80     1  from   I
            0      80     2 jsonLength$1   I
            0      80     3 json$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      from                           final
      jsonLength$1                   final
      json$1                         final

  private final scala.util.Either parseResult$1(scala.Tuple2, int, java.lang.String);
    descriptor: (Lscala/Tuple2;ILjava/lang/String;)Lscala/util/Either;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=6, locals=11, args_size=4
         0: aload_1
         1: astore        5
         3: aload         5
         5: ifnull        50
         8: aload         5
        10: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
        13: istore        6
        15: aload         5
        17: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        20: checkcast     #478                // class argonaut/Json
        23: astore        7
        25: iload_2
        26: iload         6
        28: if_icmpne     47
        31: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        34: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
        37: aload         7
        39: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        42: astore        4
        44: goto          180
        47: goto          53
        50: goto          53
        53: aload         5
        55: ifnull        105
        58: aload         5
        60: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
        63: istore        8
        65: aload         5
        67: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        70: checkcast     #478                // class argonaut/Json
        73: astore        9
        75: aload_0
        76: iload         8
        78: iload_2
        79: aload_3
        80: invokespecial #480                // Method validSuffixContent$1:(IILjava/lang/String;)Z
        83: ifeq          102
        86: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
        89: invokevirtual #159                // Method scala/package$.Right:()Lscala/util/Right$;
        92: aload         9
        94: invokevirtual #170                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        97: astore        4
        99: goto          180
       102: goto          108
       105: goto          108
       108: aload         5
       110: ifnull        167
       113: aload         5
       115: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
       118: istore        10
       120: getstatic     #40                 // Field scala/package$.MODULE$:Lscala/package$;
       123: invokevirtual #44                 // Method scala/package$.Left:()Lscala/util/Left$;
       126: new           #85                 // class java/lang/StringBuilder
       129: dup
       130: ldc_w         #481                // int 38
       133: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
       136: ldc_w         #483                // String JSON contains invalid suffix content:
       139: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: aload_0
       143: aload_3
       144: iload         10
       146: aload_0
       147: invokevirtual #175                // Method argonaut$JsonParser$$excerpt$default$3:()I
       150: invokevirtual #177                // Method argonaut$JsonParser$$excerpt:(Ljava/lang/String;II)Ljava/lang/String;
       153: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       156: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       159: invokevirtual #52                 // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       162: astore        4
       164: goto          180
       167: goto          170
       170: new           #233                // class scala/MatchError
       173: dup
       174: aload         5
       176: invokespecial #236                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       179: athrow
       180: aload         4
       182: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class argonaut/JsonParser$, class scala/Tuple2, int, class java/lang/String, top, class scala/Tuple2, int, class argonaut/Json ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class argonaut/JsonParser$, class scala/Tuple2, int, class java/lang/String, top, class scala/Tuple2, top, top, int, class argonaut/Json ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonParser$, class scala/Tuple2, int, class java/lang/String, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 58 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonParser$, class scala/Tuple2, int, class java/lang/String, class scala/util/Either, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 54: 0
        line 55: 3
        line 56: 53
        line 57: 108
        line 54: 170
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      27     7 jsonInstance   Largonaut/Json;
           63      42     8 remainder   I
           73      32     9 jsonInstance   Largonaut/Json;
          118      49    10 remainder   I
            0     183     0  this   Largonaut/JsonParser$;
            0     183     1 result   Lscala/Tuple2;
            0     183     2 jsonLength$1   I
            0     183     3 json$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      result                         final
      jsonLength$1                   final
      json$1                         final

  public static final scala.util.Either $anonfun$parse$1(argonaut.JsonParser$, int, java.lang.String, scala.Tuple2);
    descriptor: (Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: iload_1
         3: aload_2
         4: invokespecial #490                // Method parseResult$1:(Lscala/Tuple2;ILjava/lang/String;)Lscala/util/Either;
         7: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Largonaut/JsonParser$;
            0       8     1 jsonLength$1   I
            0       8     2 json$1   Ljava/lang/String;
            0       8     3 result   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      jsonLength$1                   final
      json$1                         final
      result                         final

  public static final scala.Tuple2 $anonfun$expectObject$4(argonaut.JsonParser$JsonObjectBuilder, scala.Tuple2, scala.Tuple2);
    descriptor: (Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=3, args_size=3
         0: new           #197                // class scala/Tuple2
         3: dup
         4: aload_2
         5: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: aload_1
        13: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: checkcast     #79                 // class java/lang/String
        19: aload_2
        20: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #478                // class argonaut/Json
        26: invokevirtual #499                // Method argonaut/JsonParser$JsonObjectBuilder.add:(Ljava/lang/String;Largonaut/Json;)Largonaut/JsonParser$JsonObjectBuilder;
        29: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        32: areturn
      LineNumberTable:
        line 96: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 fields$1   Largonaut/JsonParser$JsonObjectBuilder;
            0      33     1 streamAndKey$1   Lscala/Tuple2;
            0      33     2 streamAndValue   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      fields$1                       final
      streamAndKey$1                 final
      streamAndValue                 final

  public static final scala.util.Either $anonfun$expectObject$3(java.lang.String, argonaut.JsonParser$JsonObjectBuilder, scala.Tuple2, int);
    descriptor: (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;I)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=4
         0: getstatic     #35                 // Field MODULE$:Largonaut/JsonParser$;
         3: aload_0
         4: iload_3
         5: invokespecial #115                // Method expectValue:(Ljava/lang/String;I)Lscala/util/Either;
         8: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        11: aload_1
        12: aload_2
        13: invokedynamic #509,  0            // InvokeDynamic #6:apply:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
        18: invokevirtual #328                // Method scala/util/Either$RightProjection.map:(Lscala/Function1;)Lscala/util/Either;
        21: areturn
      LineNumberTable:
        line 95: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 stream$1   Ljava/lang/String;
            0      22     1 fields$1   Largonaut/JsonParser$JsonObjectBuilder;
            0      22     2 streamAndKey$1   Lscala/Tuple2;
            0      22     3 afterFieldSeparator   I
    MethodParameters:
      Name                           Flags
      stream$1                       final
      fields$1                       final
      streamAndKey$1                 final
      afterFieldSeparator            final

  public static final scala.util.Either $anonfun$expectObject$2(java.lang.String, argonaut.JsonParser$JsonObjectBuilder, scala.Tuple2);
    descriptor: (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #35                 // Field MODULE$:Largonaut/JsonParser$;
         3: aload_0
         4: aload_2
         5: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokespecial #514                // Method expectFieldSeparator:(Ljava/lang/String;I)Lscala/util/Either;
        11: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        14: aload_0
        15: aload_1
        16: aload_2
        17: invokedynamic #522,  0            // InvokeDynamic #7:apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/Function1;
        22: invokevirtual #144                // Method scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
        25: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0 stream$1   Ljava/lang/String;
            0      26     1 fields$1   Largonaut/JsonParser$JsonObjectBuilder;
            0      26     2 streamAndKey   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      stream$1                       final
      fields$1                       final
      streamAndKey                   final

  public static final scala.util.Either $anonfun$expectObject$1(java.lang.String, argonaut.JsonParser$JsonObjectBuilder, int);
    descriptor: (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;I)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #35                 // Field MODULE$:Largonaut/JsonParser$;
         3: aload_0
         4: iload_2
         5: invokespecial #527                // Method expectString:(Ljava/lang/String;I)Lscala/util/Either;
         8: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        11: aload_0
        12: aload_1
        13: invokedynamic #531,  0            // InvokeDynamic #8:apply:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;)Lscala/Function1;
        18: invokevirtual #144                // Method scala/util/Either$RightProjection.flatMap:(Lscala/Function1;)Lscala/util/Either;
        21: areturn
      LineNumberTable:
        line 93: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 stream$1   Ljava/lang/String;
            0      22     1 fields$1   Largonaut/JsonParser$JsonObjectBuilder;
            0      22     2 afterEntrySeparator   I
    MethodParameters:
      Name                           Flags
      stream$1                       final
      fields$1                       final
      afterEntrySeparator            final

  public static final scala.Tuple2 $anonfun$expectArray$2(scala.collection.mutable.Builder, scala.Tuple2);
    descriptor: (Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #197                // class scala/Tuple2
         3: dup
         4: aload_1
         5: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: aload_1
        13: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        16: invokeinterface #538,  2          // InterfaceMethod scala/collection/mutable/Builder.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        21: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 fields$2   Lscala/collection/mutable/Builder;
            0      25     1 streamAndValue   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      fields$2                       final
      streamAndValue                 final

  public static final scala.util.Either $anonfun$expectArray$1(java.lang.String, scala.collection.mutable.Builder, int);
    descriptor: (Ljava/lang/String;Lscala/collection/mutable/Builder;I)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #35                 // Field MODULE$:Largonaut/JsonParser$;
         3: aload_0
         4: iload_2
         5: invokespecial #115                // Method expectValue:(Ljava/lang/String;I)Lscala/util/Either;
         8: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        11: aload_1
        12: invokedynamic #547,  0            // InvokeDynamic #9:apply:(Lscala/collection/mutable/Builder;)Lscala/Function1;
        17: invokevirtual #328                // Method scala/util/Either$RightProjection.map:(Lscala/Function1;)Lscala/util/Either;
        20: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 stream$2   Ljava/lang/String;
            0      21     1 fields$2   Lscala/collection/mutable/Builder;
            0      21     2 afterEntrySeparator   I
    MethodParameters:
      Name                           Flags
      stream$2                       final
      fields$2                       final
      afterEntrySeparator            final

  private final int safeNumberIndex$1(int, java.lang.String);
    descriptor: (ILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=3
         0: iload_1
         1: aload_2
         2: invokevirtual #83                 // Method java/lang/String.length:()I
         5: if_icmplt     15
         8: aload_2
         9: invokevirtual #83                 // Method java/lang/String.length:()I
        12: goto          88
        15: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        18: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        21: aload_2
        22: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        25: iload_1
        26: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        29: istore        4
        31: iload         4
        33: bipush        48
        35: if_icmplt     45
        38: iload         4
        40: bipush        57
        42: if_icmple     80
        45: iload         4
        47: bipush        43
        49: if_icmpeq     80
        52: iload         4
        54: bipush        45
        56: if_icmpeq     80
        59: iload         4
        61: bipush        101
        63: if_icmpeq     80
        66: iload         4
        68: bipush        69
        70: if_icmpeq     80
        73: iload         4
        75: bipush        46
        77: if_icmpne     87
        80: iload_1
        81: iconst_1
        82: iadd
        83: istore_1
        84: goto          0
        87: iload_1
        88: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 0 /* same */
        frame_type = 14 /* same */
        frame_type = 253 /* append */
          offset_delta = 29
          locals = [ top, int ]
        frame_type = 34 /* same */
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class argonaut/JsonParser$, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 130: 0
        line 132: 15
        line 133: 31
        line 134: 87
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      59     4  char   C
            0      89     0  this   Largonaut/JsonParser$;
            0      89     1 index   I
            0      89     2 stream$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      stream$3                       final

  public static final scala.Tuple2 $anonfun$expectValue$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #197                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: getstatic     #268                // Field argonaut/Json$.MODULE$:Largonaut/Json$;
        14: invokevirtual #554                // Method argonaut/Json$.jString:()Lscala/Function1;
        17: aload_0
        18: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        21: invokeinterface #281,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        26: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        29: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  pair   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      pair                           final

  public static final scala.Tuple2 $anonfun$expectString$2(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 afterString   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      afterString                    final

  public static final scala.util.Either $anonfun$expectString$1(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #35                 // Field MODULE$:Largonaut/JsonParser$;
         3: aload_0
         4: iload_1
         5: invokevirtual #317                // Method argonaut$JsonParser$$expectStringNoStartBounds:(Ljava/lang/String;I)Lscala/util/Either;
         8: invokevirtual #119                // Method scala/util/Either.right:()Lscala/util/Either$RightProjection;
        11: invokedynamic #563,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
        16: invokevirtual #328                // Method scala/util/Either$RightProjection.map:(Lscala/Function1;)Lscala/util/Either;
        19: areturn
      LineNumberTable:
        line 165: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 stream$4   Ljava/lang/String;
            0      20     1 afterOpen   I
    MethodParameters:
      Name                           Flags
      stream$4                       final
      afterOpen                      final

  private final boolean checkUnicode$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=6, args_size=4
         0: iload_2
         1: iconst_4
         2: if_icmplt     9
         5: iconst_1
         6: goto          79
         9: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        12: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: aload_3
        16: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: iload_1
        20: iload_2
        21: iadd
        22: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        25: istore        5
        27: iload         5
        29: bipush        97
        31: if_icmplt     41
        34: iload         5
        36: bipush        102
        38: if_icmple     69
        41: iload         5
        43: bipush        65
        45: if_icmplt     55
        48: iload         5
        50: bipush        70
        52: if_icmple     69
        55: iload         5
        57: bipush        48
        59: if_icmplt     78
        62: iload         5
        64: bipush        57
        66: if_icmpgt     78
        69: iload_1
        70: iload_2
        71: iconst_1
        72: iadd
        73: istore_2
        74: istore_1
        75: goto          0
        78: iconst_0
        79: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 0 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, int ]
        frame_type = 13 /* same */
        frame_type = 13 /* same */
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class argonaut/JsonParser$, int, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 182: 0
        line 184: 9
        line 185: 27
        line 186: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      54     5  char   C
            0      80     0  this   Largonaut/JsonParser$;
            0      80     1  from   I
            0      80     2 unicodeShift   I
            0      80     3 stream$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      from                           final
      unicodeShift                   final
      stream$5                       final

  private static final int checkUnicode$default$2$1();
    descriptor: ()I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 181: 0

  private final int safeNormalCharIndex$1(int, int, java.lang.String);
    descriptor: (IILjava/lang/String;)I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=3, locals=6, args_size=4
         0: iload_1
         1: iload_2
         2: if_icmplt     9
         5: iload_2
         6: goto          50
         9: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        12: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: aload_3
        16: invokevirtual #73                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: iload_1
        20: invokevirtual #155                // Method scala/collection/StringOps$.apply$extension:(Ljava/lang/String;I)C
        23: istore        5
        25: iload         5
        27: bipush        34
        29: if_icmpeq     39
        32: iload         5
        34: bipush        92
        36: if_icmpne     43
        39: iload_1
        40: goto          50
        43: iload_1
        44: iconst_1
        45: iadd
        46: istore_1
        47: goto          0
        50: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 0 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 29
          locals = [ top, int ]
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class argonaut/JsonParser$, int, int, class java/lang/String ]
          stack = [ int ]
      LineNumberTable:
        line 193: 0
        line 195: 9
        line 196: 25
        line 197: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      27     5  char   C
            0      51     0  this   Largonaut/JsonParser$;
            0      51     1 index   I
            0      51     2 streamLength$1   I
            0      51     3 stream$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      index                          final
      streamLength$1                 final
      stream$5                       final

  public static final scala.Tuple2 $anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #197                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #225                // Method scala/Tuple2._1$mcI$sp:()I
         8: invokestatic  #165                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: invokevirtual #228                // Method scala/Tuple2._2:()Ljava/lang/Object;
        15: checkcast     #85                 // class java/lang/StringBuilder
        18: invokevirtual #102                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        21: invokespecial #204                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        24: areturn
      LineNumberTable:
        line 234: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 elements   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      elements                       final

  private argonaut.JsonParser$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #568                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 236: 0
        line 8: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonParser$;

  public static final scala.util.Either $anonfun$expectObject$1$adapted(java.lang.String, argonaut.JsonParser$JsonObjectBuilder, java.lang.Object);
    descriptor: (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #572                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokestatic  #574                // Method $anonfun$expectObject$1:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;I)Lscala/util/Either;
         9: areturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 stream$1   Ljava/lang/String;
            0      10     1 fields$1   Largonaut/JsonParser$JsonObjectBuilder;
            0      10     2 afterEntrySeparator   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      stream$1                       final
      fields$1                       final
      afterEntrySeparator            final

  public static final scala.util.Either $anonfun$expectArray$1$adapted(java.lang.String, scala.collection.mutable.Builder, java.lang.Object);
    descriptor: (Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #572                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokestatic  #577                // Method $anonfun$expectArray$1:(Ljava/lang/String;Lscala/collection/mutable/Builder;I)Lscala/util/Either;
         9: areturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 stream$2   Ljava/lang/String;
            0      10     1 fields$2   Lscala/collection/mutable/Builder;
            0      10     2 afterEntrySeparator   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      stream$2                       final
      fields$2                       final
      afterEntrySeparator            final

  public static final scala.util.Either $anonfun$expectString$1$adapted(java.lang.String, java.lang.Object);
    descriptor: (Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #572                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         5: invokestatic  #579                // Method $anonfun$expectString$1:(Ljava/lang/String;I)Lscala/util/Either;
         8: areturn
      LineNumberTable:
        line 164: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 stream$4   Ljava/lang/String;
            0       9     1 afterOpen   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      stream$4                       final
      afterOpen                      final

  public static final scala.util.Either $anonfun$expectObject$3$adapted(java.lang.String, argonaut.JsonParser$JsonObjectBuilder, scala.Tuple2, java.lang.Object);
    descriptor: (Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #572                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         7: invokestatic  #581                // Method $anonfun$expectObject$3:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;I)Lscala/util/Either;
        10: areturn
      LineNumberTable:
        line 94: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 stream$1   Ljava/lang/String;
            0      11     1 fields$1   Largonaut/JsonParser$JsonObjectBuilder;
            0      11     2 streamAndKey$1   Lscala/Tuple2;
            0      11     3 afterFieldSeparator   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      stream$1                       final
      fields$1                       final
      streamAndKey$1                 final
      afterFieldSeparator            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #593,  0            // InvokeDynamic #11:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #7 of #9;            // JsonObjectBuilder=class argonaut/JsonParser$JsonObjectBuilder of class argonaut/JsonParser
  public static #13= #12 of #9;           // JsonObjectBuilder$=class argonaut/JsonParser$JsonObjectBuilder$ of class argonaut/JsonParser
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #23= #20 of #22;    // RightProjection=class scala/util/Either$RightProjection of class scala/util/Either
SourceFile: "JsonParser.scala"
BootstrapMethods:
  0: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #126 REF_invokeStatic argonaut/JsonParser$.$anonfun$parse$1:(Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
      #128 (Lscala/Tuple2;)Lscala/util/Either;
      #129 5
      #130 1
      #128 (Lscala/Tuple2;)Lscala/util/Either;
  1: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #211 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$1$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
      #213 (Ljava/lang/Object;)Lscala/util/Either;
      #129 5
      #130 1
      #213 (Ljava/lang/Object;)Lscala/util/Either;
  2: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #286 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectArray$1$adapted:(Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
      #213 (Ljava/lang/Object;)Lscala/util/Either;
      #129 5
      #130 1
      #213 (Ljava/lang/Object;)Lscala/util/Either;
  3: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #322 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectValue$1:(Lscala/Tuple2;)Lscala/Tuple2;
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
      #129 5
      #130 1
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
  4: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #404 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectString$1$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
      #213 (Ljava/lang/Object;)Lscala/util/Either;
      #129 5
      #130 1
      #213 (Ljava/lang/Object;)Lscala/util/Either;
  5: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #469 REF_invokeStatic argonaut/JsonParser$.$anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1:(Lscala/Tuple2;)Lscala/Tuple2;
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
      #129 5
      #130 1
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
  6: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #506 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$4:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
      #129 5
      #130 1
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
  7: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #519 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$3$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
      #213 (Ljava/lang/Object;)Lscala/util/Either;
      #129 5
      #130 1
      #213 (Ljava/lang/Object;)Lscala/util/Either;
  8: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #530 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$2:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
      #128 (Lscala/Tuple2;)Lscala/util/Either;
      #129 5
      #130 1
      #128 (Lscala/Tuple2;)Lscala/util/Either;
  9: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #544 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectArray$2:(Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
      #129 5
      #130 1
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
  10: #137 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #121 (Ljava/lang/Object;)Ljava/lang/Object;
      #562 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectString$2:(Lscala/Tuple2;)Lscala/Tuple2;
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
      #129 5
      #130 1
      #323 (Lscala/Tuple2;)Lscala/Tuple2;
  11: #590 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #469 REF_invokeStatic argonaut/JsonParser$.$anonfun$argonaut$JsonParser$$expectStringNoStartBounds$1:(Lscala/Tuple2;)Lscala/Tuple2;
      #286 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectArray$1$adapted:(Ljava/lang/String;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/util/Either;
      #544 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectArray$2:(Lscala/collection/mutable/Builder;Lscala/Tuple2;)Lscala/Tuple2;
      #211 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$1$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Ljava/lang/Object;)Lscala/util/Either;
      #530 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$2:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;)Lscala/util/Either;
      #519 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$3$adapted:(Ljava/lang/String;Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Ljava/lang/Object;)Lscala/util/Either;
      #506 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectObject$4:(Largonaut/JsonParser$JsonObjectBuilder;Lscala/Tuple2;Lscala/Tuple2;)Lscala/Tuple2;
      #404 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectString$1$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/util/Either;
      #562 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectString$2:(Lscala/Tuple2;)Lscala/Tuple2;
      #322 REF_invokeStatic argonaut/JsonParser$.$anonfun$expectValue$1:(Lscala/Tuple2;)Lscala/Tuple2;
      #126 REF_invokeStatic argonaut/JsonParser$.$anonfun$parse$1:(Largonaut/JsonParser$;ILjava/lang/String;Lscala/Tuple2;)Lscala/util/Either;
  ScalaInlineInfo: length = 0xD1 (unknown attribute)
   01 01 00 29 01 D2 01 3F 01 02 1B 02 1C 01 01 1A
   01 1B 01 02 14 02 15 01 02 0B 02 0C 01 00 CF 00
   D0 01 01 FE 01 FF 01 01 F4 01 F5 01 02 03 02 04
   01 01 EB 01 EC 01 02 2D 00 71 01 01 90 01 91 01
   02 2B 01 3F 01 01 3E 01 3F 01 00 7A 00 7B 01 00
   1F 00 1E 01 01 9C 01 9D 01 01 CB 01 CC 01 00 37
   00 38 05 00 6B 00 51 01 00 B3 00 71 05 01 3B 00
   71 05 00 92 00 93 05 01 A3 01 A4 05 01 A0 00 51
   01 01 05 01 06 01 01 23 00 F5 01 01 24 00 FC 01
   00 B9 00 71 05 00 BC 00 71 05 00 BF 00 C0 01 00
   F4 00 F5 01 00 F6 00 F7 01 01 8C 00 71 05 00 70
   00 71 01 00 6C 00 6D 01 01 DB 01 DC 01 01 C1 01
   C2 05 01 5C 01 5D 01 01 60 00 71 05 01 D7 01 A4
   01
  Scala: length = 0x0 (unknown attribute)

