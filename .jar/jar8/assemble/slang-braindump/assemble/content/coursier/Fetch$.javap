Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/Fetch$.class
  Last modified May 29, 2022; size 2503 bytes
  SHA-256 checksum 8701e2efb2c0c366d81fe8c97122ee1694d069e93a3f15a7d23392cc08643187
  Compiled from "Fetch.scala"
public final class coursier.Fetch$ implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/Fetch$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 7, attributes: 3
Constant pool:
    #1 = Utf8               coursier/Fetch$
    #2 = Class              #1            // coursier/Fetch$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Fetch.scala
    #8 = Utf8               MODULE$
    #9 = Utf8               Lcoursier/Fetch$;
   #10 = Utf8               <clinit>
   #11 = Utf8               ()V
   #12 = Utf8               <init>
   #13 = NameAndType        #12:#11       // "<init>":()V
   #14 = Methodref          #2.#13        // coursier/Fetch$."<init>":()V
   #15 = NameAndType        #8:#9         // MODULE$:Lcoursier/Fetch$;
   #16 = Fieldref           #2.#15        // coursier/Fetch$.MODULE$:Lcoursier/Fetch$;
   #17 = Utf8               apply
   #18 = Utf8               ()Lcoursier/Fetch;
   #19 = Utf8               ()Lcoursier/Fetch<Lcoursier/util/Task;>;
   #20 = Utf8               coursier/Fetch
   #21 = Class              #20           // coursier/Fetch
   #22 = Utf8               coursier/Resolve$
   #23 = Class              #22           // coursier/Resolve$
   #24 = Utf8               Lcoursier/Resolve$;
   #25 = NameAndType        #8:#24        // MODULE$:Lcoursier/Resolve$;
   #26 = Fieldref           #23.#25       // coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
   #27 = Utf8               coursier/cache/Cache$
   #28 = Class              #27           // coursier/cache/Cache$
   #29 = Utf8               Lcoursier/cache/Cache$;
   #30 = NameAndType        #8:#29        // MODULE$:Lcoursier/cache/Cache$;
   #31 = Fieldref           #28.#30       // coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
   #32 = Utf8               default
   #33 = Utf8               ()Lcoursier/cache/Cache;
   #34 = NameAndType        #32:#33       // default:()Lcoursier/cache/Cache;
   #35 = Methodref          #28.#34       // coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
   #36 = Utf8               coursier/util/Task$
   #37 = Class              #36           // coursier/util/Task$
   #38 = Utf8               Lcoursier/util/Task$;
   #39 = NameAndType        #8:#38        // MODULE$:Lcoursier/util/Task$;
   #40 = Fieldref           #37.#39       // coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
   #41 = Utf8               sync
   #42 = Utf8               ()Lcoursier/util/Sync;
   #43 = NameAndType        #41:#42       // sync:()Lcoursier/util/Sync;
   #44 = Methodref          #37.#43       // coursier/util/Task$.sync:()Lcoursier/util/Sync;
   #45 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
   #46 = NameAndType        #17:#45       // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
   #47 = Methodref          #23.#46       // coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
   #48 = Utf8               coursier/Artifacts$
   #49 = Class              #48           // coursier/Artifacts$
   #50 = Utf8               Lcoursier/Artifacts$;
   #51 = NameAndType        #8:#50        // MODULE$:Lcoursier/Artifacts$;
   #52 = Fieldref           #49.#51       // coursier/Artifacts$.MODULE$:Lcoursier/Artifacts$;
   #53 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Artifacts;
   #54 = NameAndType        #17:#53       // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Artifacts;
   #55 = Methodref          #49.#54       // coursier/Artifacts$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Artifacts;
   #56 = Utf8               scala/None$
   #57 = Class              #56           // scala/None$
   #58 = Utf8               Lscala/None$;
   #59 = NameAndType        #8:#58        // MODULE$:Lscala/None$;
   #60 = Fieldref           #57.#59       // scala/None$.MODULE$:Lscala/None$;
   #61 = Utf8               (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
   #62 = NameAndType        #12:#61       // "<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
   #63 = Methodref          #21.#62       // coursier/Fetch."<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
   #64 = Utf8               this
   #65 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
   #66 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Fetch<TF;>;
   #67 = Utf8               cache
   #68 = Utf8               S
   #69 = Utf8               Lcoursier/cache/Cache;
   #70 = Utf8               Lcoursier/util/Sync;
   #71 = Utf8               FetchTaskOps
   #72 = Utf8               (Lcoursier/Fetch;)Lcoursier/Fetch;
   #73 = Utf8               (Lcoursier/Fetch<Lcoursier/util/Task;>;)Lcoursier/Fetch<Lcoursier/util/Task;>;
   #74 = Utf8               fetch
   #75 = Utf8               Lcoursier/Fetch;
   #76 = Utf8               (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
   #77 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
   #78 = Utf8               resolve
   #79 = Utf8               artifacts
   #80 = Utf8               fetchCacheOpt
   #81 = Utf8               Lcoursier/Resolve;
   #82 = Utf8               Lcoursier/Artifacts;
   #83 = Utf8               Lscala/Option;
   #84 = Utf8               writeReplace
   #85 = Utf8               ()Ljava/lang/Object;
   #86 = Utf8               scala/runtime/ModuleSerializationProxy
   #87 = Class              #86           // scala/runtime/ModuleSerializationProxy
   #88 = Utf8               (Ljava/lang/Class;)V
   #89 = NameAndType        #12:#88       // "<init>":(Ljava/lang/Class;)V
   #90 = Methodref          #87.#89       // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
   #91 = Methodref          #4.#13        // java/lang/Object."<init>":()V
   #92 = Utf8               Code
   #93 = Utf8               LineNumberTable
   #94 = Utf8               LocalVariableTable
   #95 = Utf8               Signature
   #96 = Utf8               MethodParameters
   #97 = Utf8               SourceFile
   #98 = Utf8               ScalaInlineInfo
   #99 = Utf8               Scala
{
  public static final coursier.Fetch$ MODULE$;
    descriptor: Lcoursier/Fetch$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/Fetch$
         3: dup
         4: invokespecial #14                 // Method "<init>":()V
         7: putstatic     #16                 // Field MODULE$:Lcoursier/Fetch$;
        10: return
      LineNumberTable:
        line 18: 0

  public coursier.Fetch<coursier.util.Task> apply();
    descriptor: ()Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=1, args_size=1
         0: new           #21                 // class coursier/Fetch
         3: dup
         4: getstatic     #26                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         7: getstatic     #31                 // Field coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
        10: invokevirtual #35                 // Method coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
        13: getstatic     #40                 // Field coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
        16: invokevirtual #44                 // Method coursier/util/Task$.sync:()Lcoursier/util/Sync;
        19: invokevirtual #47                 // Method coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
        22: getstatic     #52                 // Field coursier/Artifacts$.MODULE$:Lcoursier/Artifacts$;
        25: getstatic     #31                 // Field coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
        28: invokevirtual #35                 // Method coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
        31: getstatic     #40                 // Field coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
        34: invokevirtual #44                 // Method coursier/util/Task$.sync:()Lcoursier/util/Sync;
        37: invokevirtual #55                 // Method coursier/Artifacts$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Artifacts;
        40: getstatic     #60                 // Field scala/None$.MODULE$:Lscala/None$;
        43: invokespecial #63                 // Method coursier/Fetch."<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
        46: areturn
      LineNumberTable:
        line 282: 0
        line 283: 4
        line 284: 22
        line 285: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0  this   Lcoursier/Fetch$;
    Signature: #19                          // ()Lcoursier/Fetch<Lcoursier/util/Task;>;

  public <F extends java.lang.Object> coursier.Fetch<F> apply(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: new           #21                 // class coursier/Fetch
         3: dup
         4: getstatic     #26                 // Field coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
         7: aload_1
         8: aload_2
         9: invokevirtual #47                 // Method coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
        12: getstatic     #52                 // Field coursier/Artifacts$.MODULE$:Lcoursier/Artifacts$;
        15: aload_1
        16: aload_2
        17: invokevirtual #55                 // Method coursier/Artifacts$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Artifacts;
        20: getstatic     #60                 // Field scala/None$.MODULE$:Lscala/None$;
        23: invokespecial #63                 // Method coursier/Fetch."<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
        26: areturn
      LineNumberTable:
        line 289: 0
        line 290: 4
        line 291: 12
        line 292: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lcoursier/Fetch$;
            0      27     1 cache   Lcoursier/cache/Cache;
            0      27     2     S   Lcoursier/util/Sync;
    Signature: #66                          // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      S                              final

  public coursier.Fetch<coursier.util.Task> FetchTaskOps(coursier.Fetch<coursier.util.Task>);
    descriptor: (Lcoursier/Fetch;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/Fetch$;
            0       2     1 fetch   Lcoursier/Fetch;
    Signature: #73                          // (Lcoursier/Fetch<Lcoursier/util/Task;>;)Lcoursier/Fetch<Lcoursier/util/Task;>;
    MethodParameters:
      Name                           Flags
      fetch                          final

  public <F extends java.lang.Object> coursier.Fetch<F> apply(coursier.Resolve<F>, coursier.Artifacts<F>, scala.Option<java.io.File>);
    descriptor: (Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)Lcoursier/Fetch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #21                 // class coursier/Fetch
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokespecial #63                 // Method coursier/Fetch."<init>":(Lcoursier/Resolve;Lcoursier/Artifacts;Lscala/Option;)V
        10: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcoursier/Fetch$;
            0      11     1 resolve   Lcoursier/Resolve;
            0      11     2 artifacts   Lcoursier/Artifacts;
            0      11     3 fetchCacheOpt   Lscala/Option;
    Signature: #77                          // <F:Ljava/lang/Object;>(Lcoursier/Resolve<TF;>;Lcoursier/Artifacts<TF;>;Lscala/Option<Ljava/io/File;>;)Lcoursier/Fetch<TF;>;
    MethodParameters:
      Name                           Flags
      resolve                        final
      artifacts                      final
      fetchCacheOpt                  final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #87                 // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/Fetch$
         6: invokespecial #90                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/Fetch$;

  private coursier.Fetch$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #91                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 337: 0
        line 18: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Fetch$;
}
SourceFile: "Fetch.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 0C 00 0B 01 00 47 00 48 01 00 11
   00 12 01 00 11 00 4C 01 00 11 00 41 01 00 54 00
   55 01
  Scala: length = 0x0 (unknown attribute)

