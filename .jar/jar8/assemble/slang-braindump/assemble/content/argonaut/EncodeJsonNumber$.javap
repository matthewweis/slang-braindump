Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/EncodeJsonNumber$.class
  Last modified May 29, 2022; size 4360 bytes
  SHA-256 checksum 768755a617a78b9cce8380a21f09c1dbcac2918a1f0f8ab988ce39e44c1ff781
  Compiled from "JsonNumber.scala"
public final class argonaut.EncodeJsonNumber$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/EncodeJsonNumber$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 15, methods: 16, attributes: 4
Constant pool:
    #1 = Utf8               argonaut/EncodeJsonNumber$
    #2 = Class              #1            // argonaut/EncodeJsonNumber$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonNumber.scala
    #6 = Utf8               argonaut/EncodeJsonNumber$$anon$1
    #7 = Class              #6            // argonaut/EncodeJsonNumber$$anon$1
    #8 = Utf8               argonaut/EncodeJsonNumber$$anon$10
    #9 = Class              #8            // argonaut/EncodeJsonNumber$$anon$10
   #10 = Utf8               argonaut/EncodeJsonNumber$$anon$11
   #11 = Class              #10           // argonaut/EncodeJsonNumber$$anon$11
   #12 = Utf8               argonaut/EncodeJsonNumber$$anon$12
   #13 = Class              #12           // argonaut/EncodeJsonNumber$$anon$12
   #14 = Utf8               argonaut/EncodeJsonNumber$$anon$13
   #15 = Class              #14           // argonaut/EncodeJsonNumber$$anon$13
   #16 = Utf8               argonaut/EncodeJsonNumber$$anon$14
   #17 = Class              #16           // argonaut/EncodeJsonNumber$$anon$14
   #18 = Utf8               argonaut/EncodeJsonNumber$$anon$2
   #19 = Class              #18           // argonaut/EncodeJsonNumber$$anon$2
   #20 = Utf8               argonaut/EncodeJsonNumber$$anon$3
   #21 = Class              #20           // argonaut/EncodeJsonNumber$$anon$3
   #22 = Utf8               argonaut/EncodeJsonNumber$$anon$4
   #23 = Class              #22           // argonaut/EncodeJsonNumber$$anon$4
   #24 = Utf8               argonaut/EncodeJsonNumber$$anon$5
   #25 = Class              #24           // argonaut/EncodeJsonNumber$$anon$5
   #26 = Utf8               argonaut/EncodeJsonNumber$$anon$6
   #27 = Class              #26           // argonaut/EncodeJsonNumber$$anon$6
   #28 = Utf8               argonaut/EncodeJsonNumber$$anon$7
   #29 = Class              #28           // argonaut/EncodeJsonNumber$$anon$7
   #30 = Utf8               argonaut/EncodeJsonNumber$$anon$8
   #31 = Class              #30           // argonaut/EncodeJsonNumber$$anon$8
   #32 = Utf8               argonaut/EncodeJsonNumber$$anon$9
   #33 = Class              #32           // argonaut/EncodeJsonNumber$$anon$9
   #34 = Utf8               MODULE$
   #35 = Utf8               Largonaut/EncodeJsonNumber$;
   #36 = Utf8               encodeJsonNumberJavaByte
   #37 = Utf8               Largonaut/EncodeJsonNumber;
   #38 = Utf8               Largonaut/EncodeJsonNumber<Ljava/lang/Byte;>;
   #39 = Utf8               encodeJsonNumberJavaShort
   #40 = Utf8               Largonaut/EncodeJsonNumber<Ljava/lang/Short;>;
   #41 = Utf8               encodeJsonNumberJavaInteger
   #42 = Utf8               Largonaut/EncodeJsonNumber<Ljava/lang/Integer;>;
   #43 = Utf8               encodeJsonNumberJavaLong
   #44 = Utf8               Largonaut/EncodeJsonNumber<Ljava/lang/Long;>;
   #45 = Utf8               encodeJsonNumberJavaFloat
   #46 = Utf8               Largonaut/EncodePossibleJsonNumber;
   #47 = Utf8               Largonaut/EncodePossibleJsonNumber<Ljava/lang/Float;>;
   #48 = Utf8               encodeJsonNumberJavaDouble
   #49 = Utf8               Largonaut/EncodePossibleJsonNumber<Ljava/lang/Double;>;
   #50 = Utf8               encodeJsonNumberByte
   #51 = Utf8               Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;
   #52 = Utf8               encodeJsonNumberShort
   #53 = Utf8               encodeJsonNumberInt
   #54 = Utf8               encodeJsonNumberLong
   #55 = Utf8               encodeJsonNumberFloat
   #56 = Utf8               Largonaut/EncodePossibleJsonNumber<Ljava/lang/Object;>;
   #57 = Utf8               encodeJsonNumberDouble
   #58 = Utf8               encodeJsonNumberBigInt
   #59 = Utf8               Largonaut/EncodeJsonNumber<Lscala/math/BigInt;>;
   #60 = Utf8               encodeJsonNumberBigDecimal
   #61 = Utf8               Largonaut/EncodeJsonNumber<Lscala/math/BigDecimal;>;
   #62 = Utf8               <clinit>
   #63 = Utf8               ()V
   #64 = Utf8               <init>
   #65 = NameAndType        #64:#63       // "<init>":()V
   #66 = Methodref          #2.#65        // argonaut/EncodeJsonNumber$."<init>":()V
   #67 = NameAndType        #34:#35       // MODULE$:Largonaut/EncodeJsonNumber$;
   #68 = Fieldref           #2.#67        // argonaut/EncodeJsonNumber$.MODULE$:Largonaut/EncodeJsonNumber$;
   #69 = Methodref          #7.#65        // argonaut/EncodeJsonNumber$$anon$1."<init>":()V
   #70 = NameAndType        #36:#37       // encodeJsonNumberJavaByte:Largonaut/EncodeJsonNumber;
   #71 = Fieldref           #2.#70        // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaByte:Largonaut/EncodeJsonNumber;
   #72 = Methodref          #19.#65       // argonaut/EncodeJsonNumber$$anon$2."<init>":()V
   #73 = NameAndType        #39:#37       // encodeJsonNumberJavaShort:Largonaut/EncodeJsonNumber;
   #74 = Fieldref           #2.#73        // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaShort:Largonaut/EncodeJsonNumber;
   #75 = Methodref          #21.#65       // argonaut/EncodeJsonNumber$$anon$3."<init>":()V
   #76 = NameAndType        #41:#37       // encodeJsonNumberJavaInteger:Largonaut/EncodeJsonNumber;
   #77 = Fieldref           #2.#76        // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaInteger:Largonaut/EncodeJsonNumber;
   #78 = Methodref          #23.#65       // argonaut/EncodeJsonNumber$$anon$4."<init>":()V
   #79 = NameAndType        #43:#37       // encodeJsonNumberJavaLong:Largonaut/EncodeJsonNumber;
   #80 = Fieldref           #2.#79        // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaLong:Largonaut/EncodeJsonNumber;
   #81 = Methodref          #25.#65       // argonaut/EncodeJsonNumber$$anon$5."<init>":()V
   #82 = NameAndType        #45:#46       // encodeJsonNumberJavaFloat:Largonaut/EncodePossibleJsonNumber;
   #83 = Fieldref           #2.#82        // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaFloat:Largonaut/EncodePossibleJsonNumber;
   #84 = Methodref          #27.#65       // argonaut/EncodeJsonNumber$$anon$6."<init>":()V
   #85 = NameAndType        #48:#46       // encodeJsonNumberJavaDouble:Largonaut/EncodePossibleJsonNumber;
   #86 = Fieldref           #2.#85        // argonaut/EncodeJsonNumber$.encodeJsonNumberJavaDouble:Largonaut/EncodePossibleJsonNumber;
   #87 = Methodref          #29.#65       // argonaut/EncodeJsonNumber$$anon$7."<init>":()V
   #88 = NameAndType        #50:#37       // encodeJsonNumberByte:Largonaut/EncodeJsonNumber;
   #89 = Fieldref           #2.#88        // argonaut/EncodeJsonNumber$.encodeJsonNumberByte:Largonaut/EncodeJsonNumber;
   #90 = Methodref          #31.#65       // argonaut/EncodeJsonNumber$$anon$8."<init>":()V
   #91 = NameAndType        #52:#37       // encodeJsonNumberShort:Largonaut/EncodeJsonNumber;
   #92 = Fieldref           #2.#91        // argonaut/EncodeJsonNumber$.encodeJsonNumberShort:Largonaut/EncodeJsonNumber;
   #93 = Methodref          #33.#65       // argonaut/EncodeJsonNumber$$anon$9."<init>":()V
   #94 = NameAndType        #53:#37       // encodeJsonNumberInt:Largonaut/EncodeJsonNumber;
   #95 = Fieldref           #2.#94        // argonaut/EncodeJsonNumber$.encodeJsonNumberInt:Largonaut/EncodeJsonNumber;
   #96 = Methodref          #9.#65        // argonaut/EncodeJsonNumber$$anon$10."<init>":()V
   #97 = NameAndType        #54:#37       // encodeJsonNumberLong:Largonaut/EncodeJsonNumber;
   #98 = Fieldref           #2.#97        // argonaut/EncodeJsonNumber$.encodeJsonNumberLong:Largonaut/EncodeJsonNumber;
   #99 = Methodref          #11.#65       // argonaut/EncodeJsonNumber$$anon$11."<init>":()V
  #100 = NameAndType        #55:#46       // encodeJsonNumberFloat:Largonaut/EncodePossibleJsonNumber;
  #101 = Fieldref           #2.#100       // argonaut/EncodeJsonNumber$.encodeJsonNumberFloat:Largonaut/EncodePossibleJsonNumber;
  #102 = Methodref          #13.#65       // argonaut/EncodeJsonNumber$$anon$12."<init>":()V
  #103 = NameAndType        #57:#46       // encodeJsonNumberDouble:Largonaut/EncodePossibleJsonNumber;
  #104 = Fieldref           #2.#103       // argonaut/EncodeJsonNumber$.encodeJsonNumberDouble:Largonaut/EncodePossibleJsonNumber;
  #105 = Methodref          #15.#65       // argonaut/EncodeJsonNumber$$anon$13."<init>":()V
  #106 = NameAndType        #58:#37       // encodeJsonNumberBigInt:Largonaut/EncodeJsonNumber;
  #107 = Fieldref           #2.#106       // argonaut/EncodeJsonNumber$.encodeJsonNumberBigInt:Largonaut/EncodeJsonNumber;
  #108 = Methodref          #17.#65       // argonaut/EncodeJsonNumber$$anon$14."<init>":()V
  #109 = NameAndType        #60:#37       // encodeJsonNumberBigDecimal:Largonaut/EncodeJsonNumber;
  #110 = Fieldref           #2.#109       // argonaut/EncodeJsonNumber$.encodeJsonNumberBigDecimal:Largonaut/EncodeJsonNumber;
  #111 = Utf8               ()Largonaut/EncodeJsonNumber;
  #112 = Utf8               ()Largonaut/EncodeJsonNumber<Ljava/lang/Byte;>;
  #113 = Utf8               this
  #114 = Utf8               ()Largonaut/EncodeJsonNumber<Ljava/lang/Short;>;
  #115 = Utf8               ()Largonaut/EncodeJsonNumber<Ljava/lang/Integer;>;
  #116 = Utf8               ()Largonaut/EncodeJsonNumber<Ljava/lang/Long;>;
  #117 = Utf8               ()Largonaut/EncodePossibleJsonNumber;
  #118 = Utf8               ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Float;>;
  #119 = Utf8               ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Double;>;
  #120 = Utf8               ()Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;
  #121 = Utf8               ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Object;>;
  #122 = Utf8               ()Largonaut/EncodeJsonNumber<Lscala/math/BigInt;>;
  #123 = Utf8               ()Largonaut/EncodeJsonNumber<Lscala/math/BigDecimal;>;
  #124 = Methodref          #4.#65        // java/lang/Object."<init>":()V
  #125 = Utf8               Signature
  #126 = Utf8               Code
  #127 = Utf8               LineNumberTable
  #128 = Utf8               LocalVariableTable
  #129 = Utf8               InnerClasses
  #130 = Utf8               SourceFile
  #131 = Utf8               ScalaInlineInfo
  #132 = Utf8               Scala
{
  public static final argonaut.EncodeJsonNumber$ MODULE$;
    descriptor: Largonaut/EncodeJsonNumber$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final argonaut.EncodeJsonNumber<java.lang.Byte> encodeJsonNumberJavaByte;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #38                          // Largonaut/EncodeJsonNumber<Ljava/lang/Byte;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Short> encodeJsonNumberJavaShort;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #40                          // Largonaut/EncodeJsonNumber<Ljava/lang/Short;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Integer> encodeJsonNumberJavaInteger;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #42                          // Largonaut/EncodeJsonNumber<Ljava/lang/Integer;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Long> encodeJsonNumberJavaLong;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #44                          // Largonaut/EncodeJsonNumber<Ljava/lang/Long;>;

  private static final argonaut.EncodePossibleJsonNumber<java.lang.Float> encodeJsonNumberJavaFloat;
    descriptor: Largonaut/EncodePossibleJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #47                          // Largonaut/EncodePossibleJsonNumber<Ljava/lang/Float;>;

  private static final argonaut.EncodePossibleJsonNumber<java.lang.Double> encodeJsonNumberJavaDouble;
    descriptor: Largonaut/EncodePossibleJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #49                          // Largonaut/EncodePossibleJsonNumber<Ljava/lang/Double;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberByte;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #51                          // Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberShort;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #51                          // Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberInt;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #51                          // Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  private static final argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberLong;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #51                          // Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  private static final argonaut.EncodePossibleJsonNumber<java.lang.Object> encodeJsonNumberFloat;
    descriptor: Largonaut/EncodePossibleJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #56                          // Largonaut/EncodePossibleJsonNumber<Ljava/lang/Object;>;

  private static final argonaut.EncodePossibleJsonNumber<java.lang.Object> encodeJsonNumberDouble;
    descriptor: Largonaut/EncodePossibleJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #56                          // Largonaut/EncodePossibleJsonNumber<Ljava/lang/Object;>;

  private static final argonaut.EncodeJsonNumber<scala.math.BigInt> encodeJsonNumberBigInt;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #59                          // Largonaut/EncodeJsonNumber<Lscala/math/BigInt;>;

  private static final argonaut.EncodeJsonNumber<scala.math.BigDecimal> encodeJsonNumberBigDecimal;
    descriptor: Largonaut/EncodeJsonNumber;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #61                          // Largonaut/EncodeJsonNumber<Lscala/math/BigDecimal;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class argonaut/EncodeJsonNumber$
         3: dup
         4: invokespecial #66                 // Method "<init>":()V
         7: putstatic     #68                 // Field MODULE$:Largonaut/EncodeJsonNumber$;
        10: new           #7                  // class argonaut/EncodeJsonNumber$$anon$1
        13: dup
        14: invokespecial #69                 // Method argonaut/EncodeJsonNumber$$anon$1."<init>":()V
        17: putstatic     #71                 // Field encodeJsonNumberJavaByte:Largonaut/EncodeJsonNumber;
        20: new           #19                 // class argonaut/EncodeJsonNumber$$anon$2
        23: dup
        24: invokespecial #72                 // Method argonaut/EncodeJsonNumber$$anon$2."<init>":()V
        27: putstatic     #74                 // Field encodeJsonNumberJavaShort:Largonaut/EncodeJsonNumber;
        30: new           #21                 // class argonaut/EncodeJsonNumber$$anon$3
        33: dup
        34: invokespecial #75                 // Method argonaut/EncodeJsonNumber$$anon$3."<init>":()V
        37: putstatic     #77                 // Field encodeJsonNumberJavaInteger:Largonaut/EncodeJsonNumber;
        40: new           #23                 // class argonaut/EncodeJsonNumber$$anon$4
        43: dup
        44: invokespecial #78                 // Method argonaut/EncodeJsonNumber$$anon$4."<init>":()V
        47: putstatic     #80                 // Field encodeJsonNumberJavaLong:Largonaut/EncodeJsonNumber;
        50: new           #25                 // class argonaut/EncodeJsonNumber$$anon$5
        53: dup
        54: invokespecial #81                 // Method argonaut/EncodeJsonNumber$$anon$5."<init>":()V
        57: putstatic     #83                 // Field encodeJsonNumberJavaFloat:Largonaut/EncodePossibleJsonNumber;
        60: new           #27                 // class argonaut/EncodeJsonNumber$$anon$6
        63: dup
        64: invokespecial #84                 // Method argonaut/EncodeJsonNumber$$anon$6."<init>":()V
        67: putstatic     #86                 // Field encodeJsonNumberJavaDouble:Largonaut/EncodePossibleJsonNumber;
        70: new           #29                 // class argonaut/EncodeJsonNumber$$anon$7
        73: dup
        74: invokespecial #87                 // Method argonaut/EncodeJsonNumber$$anon$7."<init>":()V
        77: putstatic     #89                 // Field encodeJsonNumberByte:Largonaut/EncodeJsonNumber;
        80: new           #31                 // class argonaut/EncodeJsonNumber$$anon$8
        83: dup
        84: invokespecial #90                 // Method argonaut/EncodeJsonNumber$$anon$8."<init>":()V
        87: putstatic     #92                 // Field encodeJsonNumberShort:Largonaut/EncodeJsonNumber;
        90: new           #33                 // class argonaut/EncodeJsonNumber$$anon$9
        93: dup
        94: invokespecial #93                 // Method argonaut/EncodeJsonNumber$$anon$9."<init>":()V
        97: putstatic     #95                 // Field encodeJsonNumberInt:Largonaut/EncodeJsonNumber;
       100: new           #9                  // class argonaut/EncodeJsonNumber$$anon$10
       103: dup
       104: invokespecial #96                 // Method argonaut/EncodeJsonNumber$$anon$10."<init>":()V
       107: putstatic     #98                 // Field encodeJsonNumberLong:Largonaut/EncodeJsonNumber;
       110: new           #11                 // class argonaut/EncodeJsonNumber$$anon$11
       113: dup
       114: invokespecial #99                 // Method argonaut/EncodeJsonNumber$$anon$11."<init>":()V
       117: putstatic     #101                // Field encodeJsonNumberFloat:Largonaut/EncodePossibleJsonNumber;
       120: new           #13                 // class argonaut/EncodeJsonNumber$$anon$12
       123: dup
       124: invokespecial #102                // Method argonaut/EncodeJsonNumber$$anon$12."<init>":()V
       127: putstatic     #104                // Field encodeJsonNumberDouble:Largonaut/EncodePossibleJsonNumber;
       130: new           #15                 // class argonaut/EncodeJsonNumber$$anon$13
       133: dup
       134: invokespecial #105                // Method argonaut/EncodeJsonNumber$$anon$13."<init>":()V
       137: putstatic     #107                // Field encodeJsonNumberBigInt:Largonaut/EncodeJsonNumber;
       140: new           #17                 // class argonaut/EncodeJsonNumber$$anon$14
       143: dup
       144: invokespecial #108                // Method argonaut/EncodeJsonNumber$$anon$14."<init>":()V
       147: putstatic     #110                // Field encodeJsonNumberBigDecimal:Largonaut/EncodeJsonNumber;
       150: return
      LineNumberTable:
        line 388: 0
        line 389: 10
        line 392: 20
        line 395: 30
        line 398: 40
        line 401: 50
        line 404: 60
        line 407: 70
        line 410: 80
        line 413: 90
        line 416: 100
        line 419: 110
        line 428: 120
        line 437: 130
        line 440: 140
        line 388: 150

  public argonaut.EncodeJsonNumber<java.lang.Byte> encodeJsonNumberJavaByte();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #71                 // Field encodeJsonNumberJavaByte:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 389: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #112                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Byte;>;

  public argonaut.EncodeJsonNumber<java.lang.Short> encodeJsonNumberJavaShort();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #74                 // Field encodeJsonNumberJavaShort:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 392: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #114                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Short;>;

  public argonaut.EncodeJsonNumber<java.lang.Integer> encodeJsonNumberJavaInteger();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #77                 // Field encodeJsonNumberJavaInteger:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 395: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #115                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Integer;>;

  public argonaut.EncodeJsonNumber<java.lang.Long> encodeJsonNumberJavaLong();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #80                 // Field encodeJsonNumberJavaLong:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 398: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #116                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Long;>;

  public argonaut.EncodePossibleJsonNumber<java.lang.Float> encodeJsonNumberJavaFloat();
    descriptor: ()Largonaut/EncodePossibleJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #83                 // Field encodeJsonNumberJavaFloat:Largonaut/EncodePossibleJsonNumber;
         3: areturn
      LineNumberTable:
        line 401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #118                         // ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Float;>;

  public argonaut.EncodePossibleJsonNumber<java.lang.Double> encodeJsonNumberJavaDouble();
    descriptor: ()Largonaut/EncodePossibleJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #86                 // Field encodeJsonNumberJavaDouble:Largonaut/EncodePossibleJsonNumber;
         3: areturn
      LineNumberTable:
        line 404: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #119                         // ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Double;>;

  public argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberByte();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #89                 // Field encodeJsonNumberByte:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 407: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #120                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  public argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberShort();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #92                 // Field encodeJsonNumberShort:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 410: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #120                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  public argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberInt();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #95                 // Field encodeJsonNumberInt:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 413: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #120                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  public argonaut.EncodeJsonNumber<java.lang.Object> encodeJsonNumberLong();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #98                 // Field encodeJsonNumberLong:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 416: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #120                         // ()Largonaut/EncodeJsonNumber<Ljava/lang/Object;>;

  public argonaut.EncodePossibleJsonNumber<java.lang.Object> encodeJsonNumberFloat();
    descriptor: ()Largonaut/EncodePossibleJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #101                // Field encodeJsonNumberFloat:Largonaut/EncodePossibleJsonNumber;
         3: areturn
      LineNumberTable:
        line 419: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #121                         // ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Object;>;

  public argonaut.EncodePossibleJsonNumber<java.lang.Object> encodeJsonNumberDouble();
    descriptor: ()Largonaut/EncodePossibleJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #104                // Field encodeJsonNumberDouble:Largonaut/EncodePossibleJsonNumber;
         3: areturn
      LineNumberTable:
        line 428: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #121                         // ()Largonaut/EncodePossibleJsonNumber<Ljava/lang/Object;>;

  public argonaut.EncodeJsonNumber<scala.math.BigInt> encodeJsonNumberBigInt();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #107                // Field encodeJsonNumberBigInt:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 437: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #122                         // ()Largonaut/EncodeJsonNumber<Lscala/math/BigInt;>;

  public argonaut.EncodeJsonNumber<scala.math.BigDecimal> encodeJsonNumberBigDecimal();
    descriptor: ()Largonaut/EncodeJsonNumber;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #110                // Field encodeJsonNumberBigDecimal:Largonaut/EncodeJsonNumber;
         3: areturn
      LineNumberTable:
        line 440: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/EncodeJsonNumber$;
    Signature: #123                         // ()Largonaut/EncodeJsonNumber<Lscala/math/BigDecimal;>;

  private argonaut.EncodeJsonNumber$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #124                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 443: 0
        line 388: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/EncodeJsonNumber$;
}
InnerClasses:
  public final #7;                        // class argonaut/EncodeJsonNumber$$anon$1
  public final #9;                        // class argonaut/EncodeJsonNumber$$anon$10
  public final #11;                       // class argonaut/EncodeJsonNumber$$anon$11
  public final #13;                       // class argonaut/EncodeJsonNumber$$anon$12
  public final #15;                       // class argonaut/EncodeJsonNumber$$anon$13
  public final #17;                       // class argonaut/EncodeJsonNumber$$anon$14
  public final #19;                       // class argonaut/EncodeJsonNumber$$anon$2
  public final #21;                       // class argonaut/EncodeJsonNumber$$anon$3
  public final #23;                       // class argonaut/EncodeJsonNumber$$anon$4
  public final #25;                       // class argonaut/EncodeJsonNumber$$anon$5
  public final #27;                       // class argonaut/EncodeJsonNumber$$anon$6
  public final #29;                       // class argonaut/EncodeJsonNumber$$anon$7
  public final #31;                       // class argonaut/EncodeJsonNumber$$anon$8
  public final #33;                       // class argonaut/EncodeJsonNumber$$anon$9
SourceFile: "JsonNumber.scala"
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 01 00 0F 00 40 00 3F 01 00 3C 00 6F 01 00 3A
   00 6F 01 00 32 00 6F 01 00 39 00 75 01 00 37 00
   75 01 00 35 00 6F 01 00 24 00 6F 01 00 30 00 75
   01 00 2D 00 75 01 00 29 00 6F 01 00 2B 00 6F 01
   00 27 00 6F 01 00 36 00 6F 01 00 34 00 6F 01
  Scala: length = 0x0 (unknown attribute)

