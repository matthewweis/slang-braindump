Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$Accessor.class
  Last modified May 29, 2022; size 4934 bytes
  SHA-256 checksum b79758e38741699fa290855cc1d5d6cf1f0456ab242a20b6b62e54cbce7f4ef7
  Compiled from "ParIterableLike.scala"
public interface scala.collection.parallel.ParIterableLike$Accessor<R extends java.lang.Object, Tp extends java.lang.Object> extends scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.StrictSplitterCheckTask<R, Tp>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/ParIterableLike$Accessor
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 15, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$Accessor
    #3 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.StrictSplitterCheckTask<TR;TTp;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike
   #16 = Utf8               Accessor
   #17 = Utf8               StrictSplitterCheckTask
   #18 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #19 = Utf8               ()Ljava/lang/String;
   #20 = Utf8               pit
   #21 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
   #22 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
   #23 = Utf8               newSubtask
   #24 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
   #25 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<TR;TTp;>;
   #26 = Utf8               p
   #27 = Utf8               shouldSplitFurther$
   #28 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #29 = Utf8               $this
   #30 = Utf8               shouldSplitFurther
   #31 = Utf8               ()Z
   #32 = NameAndType        #30:#31       // shouldSplitFurther:()Z
   #33 = InterfaceMethodref #2.#32        // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther:()Z
   #34 = Utf8               Lscala/collection/parallel/ParIterableLike$Accessor;
   #35 = NameAndType        #20:#21       // pit:()Lscala/collection/parallel/IterableSplitter;
   #36 = InterfaceMethodref #2.#35        // scala/collection/parallel/ParIterableLike$Accessor.pit:()Lscala/collection/parallel/IterableSplitter;
   #37 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
   #38 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
   #39 = NameAndType        #37:#38       // scala$collection$parallel$ParIterableLike$Accessor$$$outer:()Lscala/collection/parallel/ParIterableLike;
   #40 = InterfaceMethodref #2.#39        // scala/collection/parallel/ParIterableLike$Accessor.scala$collection$parallel$ParIterableLike$Accessor$$$outer:()Lscala/collection/parallel/ParIterableLike;
   #41 = Utf8               repr
   #42 = Utf8               ()Lscala/collection/parallel/ParIterable;
   #43 = NameAndType        #41:#42       // repr:()Lscala/collection/parallel/ParIterable;
   #44 = InterfaceMethodref #15.#43       // scala/collection/parallel/ParIterableLike.repr:()Lscala/collection/parallel/ParIterable;
   #45 = Utf8               tasksupport
   #46 = Utf8               ()Lscala/collection/parallel/TaskSupport;
   #47 = NameAndType        #45:#46       // tasksupport:()Lscala/collection/parallel/TaskSupport;
   #48 = InterfaceMethodref #15.#47       // scala/collection/parallel/ParIterableLike.tasksupport:()Lscala/collection/parallel/TaskSupport;
   #49 = Utf8               scala/collection/parallel/TaskSupport
   #50 = Class              #49           // scala/collection/parallel/TaskSupport
   #51 = Utf8               parallelismLevel
   #52 = Utf8               ()I
   #53 = NameAndType        #51:#52       // parallelismLevel:()I
   #54 = InterfaceMethodref #50.#53       // scala/collection/parallel/TaskSupport.parallelismLevel:()I
   #55 = Utf8               scala/collection/parallel/IterableSplitter
   #56 = Class              #55           // scala/collection/parallel/IterableSplitter
   #57 = Utf8               (Lscala/collection/parallel/ParIterable;I)Z
   #58 = NameAndType        #30:#57       // shouldSplitFurther:(Lscala/collection/parallel/ParIterable;I)Z
   #59 = InterfaceMethodref #56.#58       // scala/collection/parallel/IterableSplitter.shouldSplitFurther:(Lscala/collection/parallel/ParIterable;I)Z
   #60 = Utf8               this
   #61 = Utf8               split$
   #62 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/immutable/Seq;
   #63 = Utf8               split
   #64 = Utf8               ()Lscala/collection/immutable/Seq;
   #65 = NameAndType        #63:#64       // split:()Lscala/collection/immutable/Seq;
   #66 = InterfaceMethodref #2.#65        // scala/collection/parallel/ParIterableLike$Accessor.split:()Lscala/collection/immutable/Seq;
   #67 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<TR;TTp;>;>;
   #68 = Utf8               splitWithSignalling
   #69 = NameAndType        #68:#64       // splitWithSignalling:()Lscala/collection/immutable/Seq;
   #70 = InterfaceMethodref #56.#69       // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
   #71 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #72 = MethodType         #71           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #73 = Utf8               $anonfun$split$1
   #74 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
   #75 = NameAndType        #73:#74       // $anonfun$split$1:(Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
   #76 = InterfaceMethodref #2.#75        // scala/collection/parallel/ParIterableLike$Accessor.$anonfun$split$1:(Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
   #77 = MethodHandle       6:#76         // REF_invokeStatic scala/collection/parallel/ParIterableLike$Accessor.$anonfun$split$1:(Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
   #78 = MethodType         #24           //  (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
   #79 = Integer            5
   #80 = Integer            1
   #81 = Utf8               java/lang/invoke/LambdaMetafactory
   #82 = Class              #81           // java/lang/invoke/LambdaMetafactory
   #83 = Utf8               altMetafactory
   #84 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #85 = NameAndType        #83:#84       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #86 = Methodref          #82.#85       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #87 = MethodHandle       6:#86         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #88 = Utf8               apply
   #89 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/Function1;
   #90 = NameAndType        #88:#89       // apply:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/Function1;
   #91 = InvokeDynamic      #0:#90        // #0:apply:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/Function1;
   #92 = Utf8               scala/collection/immutable/Seq
   #93 = Class              #92           // scala/collection/immutable/Seq
   #94 = Utf8               map
   #95 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #96 = NameAndType        #94:#95       // map:(Lscala/Function1;)Ljava/lang/Object;
   #97 = InterfaceMethodref #93.#96       // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
   #98 = Utf8               signalAbort$
   #99 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #100 = Utf8               signalAbort
  #101 = Utf8               ()V
  #102 = NameAndType        #100:#101     // signalAbort:()V
  #103 = InterfaceMethodref #2.#102       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort:()V
  #104 = Utf8               abort
  #105 = NameAndType        #104:#101     // abort:()V
  #106 = InterfaceMethodref #56.#105      // scala/collection/parallel/IterableSplitter.abort:()V
  #107 = Utf8               toString$
  #108 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
  #109 = Utf8               toString
  #110 = NameAndType        #109:#19      // toString:()Ljava/lang/String;
  #111 = InterfaceMethodref #2.#110       // scala/collection/parallel/ParIterableLike$Accessor.toString:()Ljava/lang/String;
  #112 = Utf8               java/lang/StringBuilder
  #113 = Class              #112          // java/lang/StringBuilder
  #114 = Integer            17
  #115 = Utf8               <init>
  #116 = Utf8               (I)V
  #117 = NameAndType        #115:#116     // "<init>":(I)V
  #118 = Methodref          #113.#117     // java/lang/StringBuilder."<init>":(I)V
  #119 = Utf8               getClass
  #120 = Utf8               ()Ljava/lang/Class;
  #121 = NameAndType        #119:#120     // getClass:()Ljava/lang/Class;
  #122 = Methodref          #5.#121       // java/lang/Object.getClass:()Ljava/lang/Class;
  #123 = Utf8               java/lang/Class
  #124 = Class              #123          // java/lang/Class
  #125 = Utf8               getSimpleName
  #126 = NameAndType        #125:#19      // getSimpleName:()Ljava/lang/String;
  #127 = Methodref          #124.#126     // java/lang/Class.getSimpleName:()Ljava/lang/String;
  #128 = Utf8               append
  #129 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #130 = NameAndType        #128:#129     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #131 = Methodref          #113.#130     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #132 = Utf8               (
  #133 = String             #132          // (
  #134 = Utf8               scala/collection/Iterator
  #135 = Class              #134          // scala/collection/Iterator
  #136 = InterfaceMethodref #135.#110     // scala/collection/Iterator.toString:()Ljava/lang/String;
  #137 = Utf8               )(
  #138 = String             #137          // )(
  #139 = Utf8               result
  #140 = Utf8               ()Ljava/lang/Object;
  #141 = NameAndType        #139:#140     // result:()Ljava/lang/Object;
  #142 = InterfaceMethodref #2.#141       // scala/collection/parallel/ParIterableLike$Accessor.result:()Ljava/lang/Object;
  #143 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #144 = NameAndType        #128:#143     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #145 = Methodref          #113.#144     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #146 = Utf8               )(supername:
  #147 = String             #146          // )(supername:
  #148 = NameAndType        #18:#19       // scala$collection$parallel$ParIterableLike$Accessor$$super$toString:()Ljava/lang/String;
  #149 = InterfaceMethodref #2.#148       // scala/collection/parallel/ParIterableLike$Accessor.scala$collection$parallel$ParIterableLike$Accessor$$super$toString:()Ljava/lang/String;
  #150 = Utf8               )
  #151 = String             #150          // )
  #152 = Methodref          #113.#110     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #153 = Utf8               x$6
  #154 = NameAndType        #23:#24       // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #155 = InterfaceMethodref #2.#154       // scala/collection/parallel/ParIterableLike$Accessor.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #156 = Utf8               Lscala/collection/parallel/IterableSplitter;
  #157 = Utf8               $init$
  #158 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor;)V
  #159 = Utf8               $deserializeLambda$
  #160 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #161 = Utf8               scala/runtime/LambdaDeserialize
  #162 = Class              #161          // scala/runtime/LambdaDeserialize
  #163 = Utf8               bootstrap
  #164 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #165 = NameAndType        #163:#164     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #166 = Methodref          #162.#165     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #167 = MethodHandle       6:#166        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #168 = Utf8               lambdaDeserialize
  #169 = NameAndType        #168:#160     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #170 = InvokeDynamic      #1:#169       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #171 = Utf8               Signature
  #172 = Utf8               MethodParameters
  #173 = Utf8               Code
  #174 = Utf8               LineNumberTable
  #175 = Utf8               LocalVariableTable
  #176 = Utf8               InnerClasses
  #177 = Utf8               SourceFile
  #178 = Utf8               BootstrapMethods
  #179 = Utf8               ScalaInlineInfo
  #180 = Utf8               Scala
{
  public abstract java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC

  public abstract scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #22                          // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public abstract scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<R, Tp> newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #25                          // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<TR;TTp;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public static boolean shouldSplitFurther$(scala.collection.parallel.ParIterableLike$Accessor);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #33                 // InterfaceMethod shouldSplitFurther:()Z
         4: ireturn
      LineNumberTable:
        line 867: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/ParIterableLike$Accessor;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #36,  1           // InterfaceMethod pit:()Lscala/collection/parallel/IterableSplitter;
         6: aload_0
         7: invokeinterface #40,  1           // InterfaceMethod scala$collection$parallel$ParIterableLike$Accessor$$$outer:()Lscala/collection/parallel/ParIterableLike;
        12: invokeinterface #44,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike.repr:()Lscala/collection/parallel/ParIterable;
        17: aload_0
        18: invokeinterface #40,  1           // InterfaceMethod scala$collection$parallel$ParIterableLike$Accessor$$$outer:()Lscala/collection/parallel/ParIterableLike;
        23: invokeinterface #48,  1           // InterfaceMethod scala/collection/parallel/ParIterableLike.tasksupport:()Lscala/collection/parallel/TaskSupport;
        28: invokeinterface #54,  1           // InterfaceMethod scala/collection/parallel/TaskSupport.parallelismLevel:()I
        33: invokeinterface #59,  3           // InterfaceMethod scala/collection/parallel/IterableSplitter.shouldSplitFurther:(Lscala/collection/parallel/ParIterable;I)Z
        38: ireturn
      LineNumberTable:
        line 867: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lscala/collection/parallel/ParIterableLike$Accessor;

  public static scala.collection.immutable.Seq split$(scala.collection.parallel.ParIterableLike$Accessor);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/collection/immutable/Seq;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #66                 // InterfaceMethod split:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 868: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/ParIterableLike$Accessor;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<R, Tp>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #36,  1           // InterfaceMethod pit:()Lscala/collection/parallel/IterableSplitter;
         6: invokeinterface #70,  1           // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
        11: aload_0
        12: invokedynamic #91,  0             // InvokeDynamic #0:apply:(Lscala/collection/parallel/ParIterableLike$Accessor;)Lscala/Function1;
        17: invokeinterface #97,  2           // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        22: checkcast     #93                 // class scala/collection/immutable/Seq
        25: areturn
      LineNumberTable:
        line 868: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/collection/parallel/ParIterableLike$Accessor;
    Signature: #67                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<TR;TTp;>;>;

  public static void signalAbort$(scala.collection.parallel.ParIterableLike$Accessor);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Accessor;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #103                // InterfaceMethod signalAbort:()V
         4: return
      LineNumberTable:
        line 869: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/ParIterableLike$Accessor;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #36,  1           // InterfaceMethod pit:()Lscala/collection/parallel/IterableSplitter;
         6: invokeinterface #106,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.abort:()V
        11: return
      LineNumberTable:
        line 869: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/parallel/ParIterableLike$Accessor;

  public static java.lang.String toString$(scala.collection.parallel.ParIterableLike$Accessor);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #111                // InterfaceMethod toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 870: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/ParIterableLike$Accessor;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #113                // class java/lang/StringBuilder
         3: dup
         4: ldc           #114                // int 17
         6: invokespecial #118                // Method java/lang/StringBuilder."<init>":(I)V
         9: aload_0
        10: invokevirtual #122                // Method java/lang/Object.getClass:()Ljava/lang/Class;
        13: invokevirtual #127                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
        16: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: ldc           #133                // String (
        21: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: aload_0
        25: invokeinterface #36,  1           // InterfaceMethod pit:()Lscala/collection/parallel/IterableSplitter;
        30: invokeinterface #136,  1          // InterfaceMethod scala/collection/Iterator.toString:()Ljava/lang/String;
        35: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: ldc           #138                // String )(
        40: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        43: aload_0
        44: invokeinterface #142,  1          // InterfaceMethod result:()Ljava/lang/Object;
        49: invokevirtual #145                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        52: ldc           #147                // String )(supername:
        54: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: aload_0
        58: invokeinterface #149,  1          // InterfaceMethod scala$collection$parallel$ParIterableLike$Accessor$$super$toString:()Ljava/lang/String;
        63: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        66: ldc           #151                // String )
        68: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        71: invokevirtual #152                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        74: areturn
      LineNumberTable:
        line 870: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      75     0  this   Lscala/collection/parallel/ParIterableLike$Accessor;

  public abstract scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC

  public static scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$1(scala.collection.parallel.ParIterableLike$Accessor, scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #155,  2          // InterfaceMethod newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
         7: areturn
      LineNumberTable:
        line 868: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/collection/parallel/ParIterableLike$Accessor;
            0       8     1   x$6   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$6                            final

  public static void $init$(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor);
    descriptor: (Lscala/collection/parallel/ParIterableLike$Accessor;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 864: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/collection/parallel/ParIterableLike$Accessor;
    Signature: #158                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor;)V
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #170,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #16= #2 of #15;                  // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #17= #7 of #15;                  // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.StrictSplitterCheckTask<TR;TTp;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #87 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #72 (Ljava/lang/Object;)Ljava/lang/Object;
      #77 REF_invokeStatic scala/collection/parallel/ParIterableLike$Accessor.$anonfun$split$1:(Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #78 (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #79 5
      #80 1
      #78 (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  1: #167 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #77 REF_invokeStatic scala/collection/parallel/ParIterableLike$Accessor.$anonfun$split$1:(Lscala/collection/parallel/ParIterableLike$Accessor;Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0x4A (unknown attribute)
   01 00 00 0E 00 49 00 4A 01 00 9D 00 63 01 00 17
   00 18 00 00 14 00 15 00 00 25 00 26 00 00 12 00
   13 01 00 1E 00 1F 00 00 1B 00 1C 01 00 64 00 65
   00 00 62 00 63 01 00 3F 00 40 00 00 3D 00 3E 01
   00 6D 00 13 00 00 6B 00 6C 01
  Scala: length = 0x0 (unknown attribute)

