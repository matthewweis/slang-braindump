Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/project/Target$.class
  Last modified May 29, 2022; size 6324 bytes
  SHA-256 checksum 8a1a0c462b44009e7d94aa282eb2d4486bd4c46683877aa51d86f72b622ac754
  Compiled from "Project.scala"
public final class org.sireum.project.Target$ implements org.sireum.EnumSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/project/Target$
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 3, methods: 17, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/project/Target$
    #2 = Class              #1            // org/sireum/project/Target$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/EnumSig
    #6 = Class              #5            // org/sireum/EnumSig
    #7 = Utf8               Project.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #14 = Class              #13           // org/sireum/$internal/PackageTrait$ISZ$
   #15 = Utf8               org/sireum/$internal/PackageTrait
   #16 = Class              #15           // org/sireum/$internal/PackageTrait
   #17 = Utf8               ISZ$
   #18 = Utf8               org/sireum/project/Target$Js$
   #19 = Class              #18           // org/sireum/project/Target$Js$
   #20 = Utf8               org/sireum/project/Target
   #21 = Class              #20           // org/sireum/project/Target
   #22 = Utf8               Js$
   #23 = Utf8               org/sireum/project/Target$Jvm$
   #24 = Class              #23           // org/sireum/project/Target$Jvm$
   #25 = Utf8               Jvm$
   #26 = Utf8               org/sireum/project/Target$Type
   #27 = Class              #26           // org/sireum/project/Target$Type
   #28 = Utf8               Type
   #29 = Utf8               MODULE$
   #30 = Utf8               Lorg/sireum/project/Target$;
   #31 = Utf8               numOfElements
   #32 = Utf8               Lorg/sireum/Z;
   #33 = Utf8               elements
   #34 = Utf8               Lorg/sireum/IS;
   #35 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;
   #36 = Utf8               <clinit>
   #37 = Utf8               ()V
   #38 = Utf8               <init>
   #39 = NameAndType        #38:#37       // "<init>":()V
   #40 = Methodref          #2.#39        // org/sireum/project/Target$."<init>":()V
   #41 = NameAndType        #29:#30       // MODULE$:Lorg/sireum/project/Target$;
   #42 = Fieldref           #2.#41        // org/sireum/project/Target$.MODULE$:Lorg/sireum/project/Target$;
   #43 = Utf8               org/sireum/$internal/ImmutableMarker
   #44 = Class              #43           // org/sireum/$internal/ImmutableMarker
   #45 = Utf8               $init$
   #46 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)V
   #47 = NameAndType        #45:#46       // $init$:(Lorg/sireum/$internal/ImmutableMarker;)V
   #48 = InterfaceMethodref #44.#47       // org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
   #49 = Utf8               org/sireum/Immutable
   #50 = Class              #49           // org/sireum/Immutable
   #51 = Utf8               (Lorg/sireum/Immutable;)V
   #52 = NameAndType        #45:#51       // $init$:(Lorg/sireum/Immutable;)V
   #53 = InterfaceMethodref #50.#52       // org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
   #54 = Utf8               (Lorg/sireum/EnumSig;)V
   #55 = NameAndType        #45:#54       // $init$:(Lorg/sireum/EnumSig;)V
   #56 = InterfaceMethodref #6.#55        // org/sireum/EnumSig.$init$:(Lorg/sireum/EnumSig;)V
   #57 = Utf8               org/sireum/String$
   #58 = Class              #57           // org/sireum/String$
   #59 = Utf8               Lorg/sireum/String$;
   #60 = NameAndType        #29:#59       // MODULE$:Lorg/sireum/String$;
   #61 = Fieldref           #58.#60       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #62 = Utf8               Jvm
   #63 = String             #62           // Jvm
   #64 = Utf8               apply
   #65 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #66 = NameAndType        #64:#65       // apply:(Ljava/lang/String;)Ljava/lang/String;
   #67 = Methodref          #58.#66       // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
   #68 = Utf8               Js
   #69 = String             #68           // Js
   #70 = Utf8               org/sireum/Z$
   #71 = Class              #70           // org/sireum/Z$
   #72 = Utf8               Lorg/sireum/Z$;
   #73 = NameAndType        #29:#72       // MODULE$:Lorg/sireum/Z$;
   #74 = Fieldref           #71.#73       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #75 = Utf8               (I)Lorg/sireum/Z;
   #76 = NameAndType        #64:#75       // apply:(I)Lorg/sireum/Z;
   #77 = Methodref          #71.#76       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #78 = NameAndType        #31:#32       // numOfElements:Lorg/sireum/Z;
   #79 = Fieldref           #2.#78        // org/sireum/project/Target$.numOfElements:Lorg/sireum/Z;
   #80 = Utf8               org/sireum/package$
   #81 = Class              #80           // org/sireum/package$
   #82 = Utf8               Lorg/sireum/package$;
   #83 = NameAndType        #29:#82       // MODULE$:Lorg/sireum/package$;
   #84 = Fieldref           #81.#83       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #85 = Utf8               ISZ
   #86 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #87 = NameAndType        #85:#86       // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #88 = Methodref          #81.#87       // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #89 = Utf8               scala/runtime/ScalaRunTime$
   #90 = Class              #89           // scala/runtime/ScalaRunTime$
   #91 = Utf8               Lscala/runtime/ScalaRunTime$;
   #92 = NameAndType        #29:#91       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #93 = Fieldref           #90.#92       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #94 = Utf8               Lorg/sireum/project/Target$Jvm$;
   #95 = NameAndType        #29:#94       // MODULE$:Lorg/sireum/project/Target$Jvm$;
   #96 = Fieldref           #24.#95       // org/sireum/project/Target$Jvm$.MODULE$:Lorg/sireum/project/Target$Jvm$;
   #97 = Utf8               Lorg/sireum/project/Target$Js$;
   #98 = NameAndType        #29:#97       // MODULE$:Lorg/sireum/project/Target$Js$;
   #99 = Fieldref           #19.#98       // org/sireum/project/Target$Js$.MODULE$:Lorg/sireum/project/Target$Js$;
  #100 = Utf8               [Ljava/lang/Object;
  #101 = Class              #100          // "[Ljava/lang/Object;"
  #102 = Utf8               wrapRefArray
  #103 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #104 = NameAndType        #102:#103     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #105 = Methodref          #90.#104      // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #106 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #107 = NameAndType        #64:#106      // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #108 = Methodref          #14.#107      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #109 = NameAndType        #33:#34       // elements:Lorg/sireum/IS;
  #110 = Fieldref           #2.#109       // org/sireum/project/Target$.elements:Lorg/sireum/IS;
  #111 = Utf8               string
  #112 = Utf8               ()Ljava/lang/String;
  #113 = Utf8               string$
  #114 = Utf8               (Lorg/sireum/EnumSig;)Ljava/lang/String;
  #115 = NameAndType        #113:#114     // string$:(Lorg/sireum/EnumSig;)Ljava/lang/String;
  #116 = InterfaceMethodref #6.#115       // org/sireum/EnumSig.string$:(Lorg/sireum/EnumSig;)Ljava/lang/String;
  #117 = Utf8               this
  #118 = Utf8               $cannotMixImmutableAndMutable
  #119 = Utf8               ()Lscala/runtime/Nothing$;
  #120 = Utf8               $cannotMixImmutableAndMutable$
  #121 = Utf8               (Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #122 = NameAndType        #120:#121     // $cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #123 = InterfaceMethodref #50.#122      // org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
  #124 = Utf8               $hasEquals
  #125 = Utf8               ()Z
  #126 = Utf8               $hasEquals$
  #127 = Utf8               (Lorg/sireum/Immutable;)Z
  #128 = NameAndType        #126:#127     // $hasEquals$:(Lorg/sireum/Immutable;)Z
  #129 = InterfaceMethodref #50.#128      // org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
  #130 = Utf8               $hasString
  #131 = Utf8               $hasString$
  #132 = NameAndType        #131:#127     // $hasString$:(Lorg/sireum/Immutable;)Z
  #133 = InterfaceMethodref #50.#132      // org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
  #134 = Utf8               $clone
  #135 = Utf8               ()Lorg/sireum/$internal/ImmutableMarker;
  #136 = Utf8               $clone$
  #137 = Utf8               (Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #138 = NameAndType        #136:#137     // $clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #139 = InterfaceMethodref #44.#138      // org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
  #140 = Utf8               byName
  #141 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option;
  #142 = Utf8               (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/project/Target$Type;>;
  #143 = Utf8               name
  #144 = Utf8               ()Lorg/sireum/IS;
  #145 = NameAndType        #33:#144      // elements:()Lorg/sireum/IS;
  #146 = Methodref          #2.#145       // org/sireum/project/Target$.elements:()Lorg/sireum/IS;
  #147 = Utf8               org/sireum/IS
  #148 = Class              #147          // org/sireum/IS
  #149 = Utf8               ()Lscala/collection/immutable/Seq;
  #150 = NameAndType        #33:#149      // elements:()Lscala/collection/immutable/Seq;
  #151 = Methodref          #148.#150     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #152 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #153 = MethodType         #152          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #154 = Utf8               $anonfun$byName$1$adapted
  #155 = Utf8               (Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  #156 = NameAndType        #154:#155     // $anonfun$byName$1$adapted:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  #157 = Methodref          #2.#156       // org/sireum/project/Target$.$anonfun$byName$1$adapted:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  #158 = MethodHandle       6:#157        // REF_invokeStatic org/sireum/project/Target$.$anonfun$byName$1$adapted:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  #159 = Utf8               (Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  #160 = MethodType         #159          //  (Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  #161 = Integer            5
  #162 = Integer            1
  #163 = Utf8               java/lang/invoke/LambdaMetafactory
  #164 = Class              #163          // java/lang/invoke/LambdaMetafactory
  #165 = Utf8               altMetafactory
  #166 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = NameAndType        #165:#166     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = Methodref          #164.#167     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = MethodHandle       6:#168        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #170 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #171 = NameAndType        #64:#170      // apply:(Ljava/lang/String;)Lscala/Function1;
  #172 = InvokeDynamic      #0:#171       // #0:apply:(Ljava/lang/String;)Lscala/Function1;
  #173 = Utf8               scala/collection/immutable/Seq
  #174 = Class              #173          // scala/collection/immutable/Seq
  #175 = Utf8               find
  #176 = Utf8               (Lscala/Function1;)Lscala/Option;
  #177 = NameAndType        #175:#176     // find:(Lscala/Function1;)Lscala/Option;
  #178 = InterfaceMethodref #174.#177     // scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
  #179 = Utf8               scala/Some
  #180 = Class              #179          // scala/Some
  #181 = Utf8               value
  #182 = Utf8               ()Ljava/lang/Object;
  #183 = NameAndType        #181:#182     // value:()Ljava/lang/Object;
  #184 = Methodref          #180.#183     // scala/Some.value:()Ljava/lang/Object;
  #185 = Utf8               org/sireum/Some$
  #186 = Class              #185          // org/sireum/Some$
  #187 = Utf8               Lorg/sireum/Some$;
  #188 = NameAndType        #29:#187      // MODULE$:Lorg/sireum/Some$;
  #189 = Fieldref           #186.#188     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #190 = Utf8               (Ljava/lang/Object;)Lorg/sireum/Some;
  #191 = NameAndType        #64:#190      // apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #192 = Methodref          #186.#191     // org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
  #193 = Utf8               org/sireum/None$
  #194 = Class              #193          // org/sireum/None$
  #195 = Utf8               Lorg/sireum/None$;
  #196 = NameAndType        #29:#195      // MODULE$:Lorg/sireum/None$;
  #197 = Fieldref           #194.#196     // org/sireum/None$.MODULE$:Lorg/sireum/None$;
  #198 = Utf8               ()Lorg/sireum/None;
  #199 = NameAndType        #64:#198      // apply:()Lorg/sireum/None;
  #200 = Methodref          #194.#199     // org/sireum/None$.apply:()Lorg/sireum/None;
  #201 = Utf8               v
  #202 = Utf8               Lorg/sireum/project/Target$Type;
  #203 = Utf8               Ljava/lang/String;
  #204 = Utf8               scala/Option
  #205 = Class              #204          // scala/Option
  #206 = Utf8               java/lang/String
  #207 = Class              #206          // java/lang/String
  #208 = Utf8               byOrdinal
  #209 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Option;
  #210 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Option<Lorg/sireum/project/Target$Type;>;
  #211 = Utf8               n
  #212 = Utf8               org/sireum/B$
  #213 = Class              #212          // org/sireum/B$
  #214 = Utf8               Lorg/sireum/B$;
  #215 = NameAndType        #29:#214      // MODULE$:Lorg/sireum/B$;
  #216 = Fieldref           #213.#215     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #217 = Utf8               org/sireum/Z
  #218 = Class              #217          // org/sireum/Z
  #219 = Utf8               $less$eq
  #220 = Utf8               (Lorg/sireum/Z;)Z
  #221 = NameAndType        #219:#220     // $less$eq:(Lorg/sireum/Z;)Z
  #222 = InterfaceMethodref #218.#221     // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
  #223 = MethodType         #182          //  ()Ljava/lang/Object;
  #224 = Utf8               $anonfun$byOrdinal$1$adapted
  #225 = Utf8               (Lorg/sireum/Z;)Ljava/lang/Object;
  #226 = NameAndType        #224:#225     // $anonfun$byOrdinal$1$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
  #227 = Methodref          #2.#226       // org/sireum/project/Target$.$anonfun$byOrdinal$1$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
  #228 = MethodHandle       6:#227        // REF_invokeStatic org/sireum/project/Target$.$anonfun$byOrdinal$1$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
  #229 = Utf8               (Lorg/sireum/Z;)Lscala/Function0;
  #230 = NameAndType        #64:#229      // apply:(Lorg/sireum/Z;)Lscala/Function0;
  #231 = InvokeDynamic      #1:#230       // #1:apply:(Lorg/sireum/Z;)Lscala/Function0;
  #232 = Utf8               $amp$amp$extension
  #233 = Utf8               (ZLscala/Function0;)Z
  #234 = NameAndType        #232:#233     // $amp$amp$extension:(ZLscala/Function0;)Z
  #235 = Methodref          #213.#234     // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #236 = Utf8               $4B
  #237 = Utf8               (Z)Z
  #238 = NameAndType        #236:#237     // $4B:(Z)Z
  #239 = Methodref          #213.#238     // org/sireum/B$.$4B:(Z)Z
  #240 = NameAndType        #64:#152      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #241 = Methodref          #148.#240     // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #242 = Utf8               ()Lorg/sireum/Z;
  #243 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;
  #244 = NameAndType        #134:#135     // $clone:()Lorg/sireum/$internal/ImmutableMarker;
  #245 = Methodref          #2.#244       // org/sireum/project/Target$.$clone:()Lorg/sireum/$internal/ImmutableMarker;
  #246 = Utf8               $anonfun$byName$1
  #247 = Utf8               (Ljava/lang/String;Lorg/sireum/project/Target$Type;)Z
  #248 = Utf8               name$1
  #249 = Utf8               x$1
  #250 = NameAndType        #143:#112     // name:()Ljava/lang/String;
  #251 = InterfaceMethodref #27.#250      // org/sireum/project/Target$Type.name:()Ljava/lang/String;
  #252 = Utf8               equals
  #253 = Utf8               (Ljava/lang/Object;)Z
  #254 = NameAndType        #252:#253     // equals:(Ljava/lang/Object;)Z
  #255 = Methodref          #4.#254       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #256 = Utf8               $anonfun$byOrdinal$1
  #257 = Utf8               n$1
  #258 = Utf8               size
  #259 = NameAndType        #258:#242     // size:()Lorg/sireum/Z;
  #260 = Methodref          #148.#259     // org/sireum/IS.size:()Lorg/sireum/Z;
  #261 = Utf8               $less
  #262 = NameAndType        #261:#220     // $less:(Lorg/sireum/Z;)Z
  #263 = InterfaceMethodref #218.#262     // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
  #264 = Methodref          #4.#39        // java/lang/Object."<init>":()V
  #265 = NameAndType        #246:#247     // $anonfun$byName$1:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Z
  #266 = Methodref          #2.#265       // org/sireum/project/Target$.$anonfun$byName$1:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Z
  #267 = Utf8               scala/runtime/BoxesRunTime
  #268 = Class              #267          // scala/runtime/BoxesRunTime
  #269 = Utf8               boxToBoolean
  #270 = Utf8               (Z)Ljava/lang/Boolean;
  #271 = NameAndType        #269:#270     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #272 = Methodref          #268.#271     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #273 = Utf8               org/sireum/B
  #274 = Class              #273          // org/sireum/B
  #275 = NameAndType        #256:#220     // $anonfun$byOrdinal$1:(Lorg/sireum/Z;)Z
  #276 = Methodref          #2.#275       // org/sireum/project/Target$.$anonfun$byOrdinal$1:(Lorg/sireum/Z;)Z
  #277 = Utf8               (Z)V
  #278 = NameAndType        #38:#277      // "<init>":(Z)V
  #279 = Methodref          #274.#278     // org/sireum/B."<init>":(Z)V
  #280 = Utf8               $deserializeLambda$
  #281 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #282 = Utf8               scala/runtime/LambdaDeserialize
  #283 = Class              #282          // scala/runtime/LambdaDeserialize
  #284 = Utf8               bootstrap
  #285 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #286 = NameAndType        #284:#285     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #287 = Methodref          #283.#286     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #288 = MethodHandle       6:#287        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #289 = Utf8               lambdaDeserialize
  #290 = NameAndType        #289:#281     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #291 = InvokeDynamic      #2:#290       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #292 = Utf8               Signature
  #293 = Utf8               Code
  #294 = Utf8               LineNumberTable
  #295 = Utf8               LocalVariableTable
  #296 = Utf8               StackMapTable
  #297 = Utf8               MethodParameters
  #298 = Utf8               InnerClasses
  #299 = Utf8               SourceFile
  #300 = Utf8               BootstrapMethods
  #301 = Utf8               ScalaInlineInfo
  #302 = Utf8               Scala
{
  public static final org.sireum.project.Target$ MODULE$;
    descriptor: Lorg/sireum/project/Target$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final org.sireum.Z numOfElements;
    descriptor: Lorg/sireum/Z;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> elements;
    descriptor: Lorg/sireum/IS;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #35                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=6, locals=0, args_size=0
         0: new           #2                  // class org/sireum/project/Target$
         3: dup
         4: invokespecial #40                 // Method "<init>":()V
         7: putstatic     #42                 // Field MODULE$:Lorg/sireum/project/Target$;
        10: getstatic     #42                 // Field MODULE$:Lorg/sireum/project/Target$;
        13: invokestatic  #48                 // InterfaceMethod org/sireum/$internal/ImmutableMarker.$init$:(Lorg/sireum/$internal/ImmutableMarker;)V
        16: getstatic     #42                 // Field MODULE$:Lorg/sireum/project/Target$;
        19: invokestatic  #53                 // InterfaceMethod org/sireum/Immutable.$init$:(Lorg/sireum/Immutable;)V
        22: getstatic     #42                 // Field MODULE$:Lorg/sireum/project/Target$;
        25: invokestatic  #56                 // InterfaceMethod org/sireum/EnumSig.$init$:(Lorg/sireum/EnumSig;)V
        28: getstatic     #61                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        31: ldc           #63                 // String Jvm
        33: invokevirtual #67                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        36: pop
        37: getstatic     #61                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        40: ldc           #69                 // String Js
        42: invokevirtual #67                 // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        45: pop
        46: getstatic     #74                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        49: iconst_2
        50: invokevirtual #77                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        53: putstatic     #79                 // Field numOfElements:Lorg/sireum/Z;
        56: getstatic     #84                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        59: invokevirtual #88                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        62: getstatic     #93                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        65: iconst_2
        66: anewarray     #27                 // class org/sireum/project/Target$Type
        69: dup
        70: iconst_0
        71: getstatic     #96                 // Field org/sireum/project/Target$Jvm$.MODULE$:Lorg/sireum/project/Target$Jvm$;
        74: aastore
        75: dup
        76: iconst_1
        77: getstatic     #99                 // Field org/sireum/project/Target$Js$.MODULE$:Lorg/sireum/project/Target$Js$;
        80: aastore
        81: checkcast     #101                // class "[Ljava/lang/Object;"
        84: invokevirtual #105                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        87: invokevirtual #108                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        90: putstatic     #110                // Field elements:Lorg/sireum/IS;
        93: return
      LineNumberTable:
        line 148: 0
        line 149: 28
        line 150: 37
        line 148: 46

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #116                // InterfaceMethod org/sireum/EnumSig.string$:(Lorg/sireum/EnumSig;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #123                // InterfaceMethod org/sireum/Immutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Immutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #129                // InterfaceMethod org/sireum/Immutable.$hasEquals$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #133                // InterfaceMethod org/sireum/Immutable.$hasString$:(Lorg/sireum/Immutable;)Z
         4: ireturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public org.sireum.$internal.ImmutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/ImmutableMarker;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #139                // InterfaceMethod org/sireum/$internal/ImmutableMarker.$clone$:(Lorg/sireum/$internal/ImmutableMarker;)Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public final org.sireum.Option<org.sireum.project.Target$Type> byName(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/sireum/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #146                // Method elements:()Lorg/sireum/IS;
         4: invokevirtual #151                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
         7: aload_1
         8: invokedynamic #172,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function1;
        13: invokeinterface #178,  2          // InterfaceMethod scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
        18: astore_3
        19: aload_3
        20: instanceof    #180                // class scala/Some
        23: ifeq          54
        26: aload_3
        27: checkcast     #180                // class scala/Some
        30: astore        4
        32: aload         4
        34: invokevirtual #184                // Method scala/Some.value:()Ljava/lang/Object;
        37: checkcast     #27                 // class org/sireum/project/Target$Type
        40: astore        5
        42: getstatic     #189                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        45: aload         5
        47: invokevirtual #192                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        50: astore_2
        51: goto          67
        54: goto          57
        57: getstatic     #197                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        60: invokevirtual #200                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        63: astore_2
        64: goto          67
        67: aload_2
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 54
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/project/Target$, class java/lang/String, class java/lang/Object, class scala/Option ]
          stack = []
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           42      12     5     v   Lorg/sireum/project/Target$Type;
            0      69     0  this   Lorg/sireum/project/Target$;
            0      69     1  name   Ljava/lang/String;
    Signature: #142                         // (Ljava/lang/String;)Lorg/sireum/Option<Lorg/sireum/project/Target$Type;>;
    MethodParameters:
      Name                           Flags
      name                           final

  public final org.sireum.Option<org.sireum.project.Target$Type> byOrdinal(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/Option;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=2, args_size=2
         0: getstatic     #216                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #216                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #74                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         9: iconst_0
        10: invokevirtual #77                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        13: aload_1
        14: invokeinterface #222,  2          // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        19: aload_1
        20: invokedynamic #231,  0            // InvokeDynamic #1:apply:(Lorg/sireum/Z;)Lscala/Function0;
        25: invokevirtual #235                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        28: invokevirtual #239                // Method org/sireum/B$.$4B:(Z)Z
        31: ifeq          51
        34: getstatic     #189                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
        37: aload_0
        38: invokevirtual #146                // Method elements:()Lorg/sireum/IS;
        41: aload_1
        42: invokevirtual #241                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        45: invokevirtual #192                // Method org/sireum/Some$.apply:(Ljava/lang/Object;)Lorg/sireum/Some;
        48: goto          57
        51: getstatic     #197                // Field org/sireum/None$.MODULE$:Lorg/sireum/None$;
        54: invokevirtual #200                // Method org/sireum/None$.apply:()Lorg/sireum/None;
        57: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 51 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lorg/sireum/project/Target$;
            0      58     1     n   Lorg/sireum/Z;
    Signature: #210                         // (Lorg/sireum/Z;)Lorg/sireum/Option<Lorg/sireum/project/Target$Type;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z numOfElements();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #79                 // Field numOfElements:Lorg/sireum/Z;
         3: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/project/Target$;

  public org.sireum.IS<org.sireum.Z, org.sireum.project.Target$Type> elements();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #110                // Field elements:Lorg/sireum/IS;
         3: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lorg/sireum/project/Target$;
    Signature: #243                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/project/Target$Type;>;

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #245                // Method $clone:()Lorg/sireum/$internal/ImmutableMarker;
         4: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public static final boolean $anonfun$byName$1(java.lang.String, org.sireum.project.Target$Type);
    descriptor: (Ljava/lang/String;Lorg/sireum/project/Target$Type;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokeinterface #251,  1          // InterfaceMethod org/sireum/project/Target$Type.name:()Ljava/lang/String;
         6: aload_0
         7: astore_2
         8: dup
         9: ifnonnull     20
        12: pop
        13: aload_2
        14: ifnull        27
        17: goto          31
        20: aload_2
        21: invokevirtual #255                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        24: ifeq          31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/String, class org/sireum/project/Target$Type, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 name$1   Ljava/lang/String;
            0      33     1   x$1   Lorg/sireum/project/Target$Type;
    MethodParameters:
      Name                           Flags
      name$1                         final
      x$1                            final

  public static final boolean $anonfun$byOrdinal$1(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #42                 // Field MODULE$:Lorg/sireum/project/Target$;
         4: invokevirtual #146                // Method elements:()Lorg/sireum/IS;
         7: invokevirtual #260                // Method org/sireum/IS.size:()Lorg/sireum/Z;
        10: invokeinterface #263,  2          // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        15: ireturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   n$1   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n$1                            final

  private org.sireum.project.Target$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #264                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/project/Target$;

  public static final java.lang.Object $anonfun$byName$1$adapted(java.lang.String, org.sireum.project.Target$Type);
    descriptor: (Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #266                // Method $anonfun$byName$1:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Z
         5: invokestatic  #272                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 name$1   Ljava/lang/String;
            0       9     1   x$1   Lorg/sireum/project/Target$Type;
    MethodParameters:
      Name                           Flags
      name$1                         final
      x$1                            final

  public static final java.lang.Object $anonfun$byOrdinal$1$adapted(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #274                // class org/sireum/B
         3: dup
         4: aload_0
         5: invokestatic  #276                // Method $anonfun$byOrdinal$1:(Lorg/sireum/Z;)Z
         8: invokespecial #279                // Method org/sireum/B."<init>":(Z)V
        11: areturn
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   n$1   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #291,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #17= #14 of #16;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #22= #19 of #21;    // Js$=class org/sireum/project/Target$Js$ of class org/sireum/project/Target
  public static final #25= #24 of #21;    // Jvm$=class org/sireum/project/Target$Jvm$ of class org/sireum/project/Target
  public static #28= #27 of #21;          // Type=class org/sireum/project/Target$Type of class org/sireum/project/Target
SourceFile: "Project.scala"
BootstrapMethods:
  0: #169 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 (Ljava/lang/Object;)Ljava/lang/Object;
      #158 REF_invokeStatic org/sireum/project/Target$.$anonfun$byName$1$adapted:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
      #160 (Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
      #161 5
      #162 1
      #160 (Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
  1: #169 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #223 ()Ljava/lang/Object;
      #228 REF_invokeStatic org/sireum/project/Target$.$anonfun$byOrdinal$1$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
      #223 ()Ljava/lang/Object;
      #162 1
  2: #288 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #158 REF_invokeStatic org/sireum/project/Target$.$anonfun$byName$1$adapted:(Ljava/lang/String;Lorg/sireum/project/Target$Type;)Ljava/lang/Object;
      #228 REF_invokeStatic org/sireum/project/Target$.$anonfun$byOrdinal$1$adapted:(Lorg/sireum/Z;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x4F (unknown attribute)
   01 01 00 0F 00 F6 00 F7 01 00 9A 00 9B 01 01 00
   00 DC 01 00 E0 00 E1 01 00 76 00 77 01 00 86 00
   B6 01 00 86 00 87 01 00 7C 00 7D 01 00 82 00 7D
   01 00 26 00 25 01 00 8C 00 8D 01 00 D0 00 D1 01
   00 21 00 90 01 00 1F 00 F2 01 00 6F 00 70 01
  Scala: length = 0x0 (unknown attribute)

