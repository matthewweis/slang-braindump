Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/Os$Path$.class
  Last modified May 29, 2022; size 9910 bytes
  SHA-256 checksum 149ab0bfc01d573a15fa24cb68ea74227c303cdcfd035f6305b1fcfce47d15a0
  Compiled from "Os.scala"
public class org.sireum.Os$Path$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/sireum/Os$Path$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 15, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/Os$Path$
    #2 = Class              #1            // org/sireum/Os$Path$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Os.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #12 = Class              #11           // org/sireum/$internal/PackageTrait$ISZ$
   #13 = Utf8               org/sireum/$internal/PackageTrait
   #14 = Class              #13           // org/sireum/$internal/PackageTrait
   #15 = Utf8               ISZ$
   #16 = Utf8               org/sireum/Os$Path
   #17 = Class              #16           // org/sireum/Os$Path
   #18 = Utf8               org/sireum/Os
   #19 = Class              #18           // org/sireum/Os
   #20 = Utf8               Path
   #21 = Utf8               Path$
   #22 = Utf8               org/sireum/Os$Path$Impl
   #23 = Class              #22           // org/sireum/Os$Path$Impl
   #24 = Utf8               Impl
   #25 = Utf8               org/sireum/Os$Path$Impl$
   #26 = Class              #25           // org/sireum/Os$Path$Impl$
   #27 = Utf8               Impl$
   #28 = Utf8               org/sireum/Os$Path$Jen
   #29 = Class              #28           // org/sireum/Os$Path$Jen
   #30 = Utf8               Jen
   #31 = Utf8               org/sireum/Os$Path$Kind$
   #32 = Class              #31           // org/sireum/Os$Path$Kind$
   #33 = Utf8               Kind$
   #34 = Utf8               org/sireum/Os$Path$Kind$Dir$
   #35 = Class              #34           // org/sireum/Os$Path$Kind$Dir$
   #36 = Utf8               Dir$
   #37 = Utf8               org/sireum/Os$Path$Kind$File$
   #38 = Class              #37           // org/sireum/Os$Path$Kind$File$
   #39 = Utf8               File$
   #40 = Utf8               org/sireum/Os$Path$Kind$SymLink$
   #41 = Class              #40           // org/sireum/Os$Path$Kind$SymLink$
   #42 = Utf8               SymLink$
   #43 = Utf8               org/sireum/Os$Path$Kind$Type
   #44 = Class              #43           // org/sireum/Os$Path$Kind$Type
   #45 = Utf8               Type
   #46 = Utf8               org/sireum/Os$Path$MJen
   #47 = Class              #46           // org/sireum/Os$Path$MJen
   #48 = Utf8               MJen
   #49 = Utf8               org/sireum/Os$Path$WriteMode$
   #50 = Class              #49           // org/sireum/Os$Path$WriteMode$
   #51 = Utf8               WriteMode$
   #52 = Utf8               org/sireum/package$$Arrow$
   #53 = Class              #52           // org/sireum/package$$Arrow$
   #54 = Utf8               org/sireum/package
   #55 = Class              #54           // org/sireum/package
   #56 = Utf8               $Arrow$
   #57 = Utf8               MODULE$
   #58 = Utf8               Lorg/sireum/Os$Path$;
   #59 = Utf8               <clinit>
   #60 = Utf8               ()V
   #61 = Utf8               <init>
   #62 = NameAndType        #61:#60       // "<init>":()V
   #63 = Methodref          #2.#62        // org/sireum/Os$Path$."<init>":()V
   #64 = NameAndType        #57:#58       // MODULE$:Lorg/sireum/Os$Path$;
   #65 = Fieldref           #2.#64        // org/sireum/Os$Path$.MODULE$:Lorg/sireum/Os$Path$;
   #66 = Utf8               overlay
   #67 = Utf8               (ZLorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
   #68 = Utf8               (ZLorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;Z)Lorg/sireum/HashSMap<Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;>;
   #69 = Utf8               isMove
   #70 = Utf8               path
   #71 = Utf8               target
   #72 = Utf8               includeDir
   #73 = Utf8               followLink
   #74 = Utf8               pred
   #75 = Utf8               report
   #76 = Utf8               org/sireum/HashSMap$
   #77 = Class              #76           // org/sireum/HashSMap$
   #78 = Utf8               Lorg/sireum/HashSMap$;
   #79 = NameAndType        #57:#78       // MODULE$:Lorg/sireum/HashSMap$;
   #80 = Fieldref           #77.#79       // org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
   #81 = Utf8               empty
   #82 = Utf8               ()Lorg/sireum/HashSMap;
   #83 = NameAndType        #81:#82       // empty:()Lorg/sireum/HashSMap;
   #84 = Methodref          #77.#83       // org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
   #85 = Utf8               scala/runtime/ObjectRef
   #86 = Class              #85           // scala/runtime/ObjectRef
   #87 = Utf8               create
   #88 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #89 = NameAndType        #87:#88       // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #90 = Methodref          #86.#89       // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #91 = Utf8               org/sireum/ops/ISZOps$
   #92 = Class              #91           // org/sireum/ops/ISZOps$
   #93 = Utf8               Lorg/sireum/ops/ISZOps$;
   #94 = NameAndType        #57:#93       // MODULE$:Lorg/sireum/ops/ISZOps$;
   #95 = Fieldref           #92.#94       // org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
   #96 = Utf8               org/sireum/package$
   #97 = Class              #96           // org/sireum/package$
   #98 = Utf8               Lorg/sireum/package$;
   #99 = NameAndType        #57:#98       // MODULE$:Lorg/sireum/package$;
  #100 = Fieldref           #97.#99       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #101 = Utf8               T
  #102 = Utf8               ()Z
  #103 = NameAndType        #101:#102     // T:()Z
  #104 = Methodref          #97.#103      // org/sireum/package$.T:()Z
  #105 = Utf8               walk
  #106 = Utf8               (Lorg/sireum/Os$Path;ZZLscala/Function1;)Lorg/sireum/IS;
  #107 = NameAndType        #105:#106     // walk:(Lorg/sireum/Os$Path;ZZLscala/Function1;)Lorg/sireum/IS;
  #108 = Methodref          #2.#107       // org/sireum/Os$Path$.walk:(Lorg/sireum/Os$Path;ZZLscala/Function1;)Lorg/sireum/IS;
  #109 = Utf8               apply
  #110 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #111 = NameAndType        #109:#110     // apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #112 = Methodref          #92.#111      // org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
  #113 = Utf8               org/sireum/ops/ISZOps
  #114 = Class              #113          // org/sireum/ops/ISZOps
  #115 = Utf8               reverse
  #116 = Utf8               ()Lorg/sireum/IS;
  #117 = NameAndType        #115:#116     // reverse:()Lorg/sireum/IS;
  #118 = Methodref          #114.#117     // org/sireum/ops/ISZOps.reverse:()Lorg/sireum/IS;
  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #120 = MethodType         #119          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #121 = Utf8               $anonfun$overlay$1$adapted
  #122 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #123 = NameAndType        #121:#122     // $anonfun$overlay$1$adapted:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #124 = Methodref          #2.#123       // org/sireum/Os$Path$.$anonfun$overlay$1$adapted:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #125 = MethodHandle       6:#124        // REF_invokeStatic org/sireum/Os$Path$.$anonfun$overlay$1$adapted:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #126 = Utf8               (Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #127 = MethodType         #126          //  (Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #128 = Integer            5
  #129 = Integer            1
  #130 = Utf8               java/lang/invoke/LambdaMetafactory
  #131 = Class              #130          // java/lang/invoke/LambdaMetafactory
  #132 = Utf8               altMetafactory
  #133 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #134 = NameAndType        #132:#133     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #135 = Methodref          #131.#134     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = MethodHandle       6:#135        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #137 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;)Lscala/Function1;
  #138 = NameAndType        #109:#137     // apply:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;)Lscala/Function1;
  #139 = InvokeDynamic      #0:#138       // #0:apply:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;)Lscala/Function1;
  #140 = Utf8               org/sireum/IS
  #141 = Class              #140          // org/sireum/IS
  #142 = Utf8               foreach
  #143 = Utf8               (Lscala/Function1;)V
  #144 = NameAndType        #142:#143     // foreach:(Lscala/Function1;)V
  #145 = Methodref          #141.#144     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #146 = Utf8               elem
  #147 = Utf8               Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // elem:Ljava/lang/Object;
  #149 = Fieldref           #86.#148      // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #150 = Utf8               org/sireum/HashSMap
  #151 = Class              #150          // org/sireum/HashSMap
  #152 = Utf8               r
  #153 = Utf8               Lscala/runtime/ObjectRef;
  #154 = Utf8               files
  #155 = Utf8               Lorg/sireum/IS;
  #156 = Utf8               this
  #157 = Utf8               Z
  #158 = Utf8               Lorg/sireum/Os$Path;
  #159 = Utf8               Lscala/Function1;
  #160 = Utf8               (Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;
  #161 = Utf8               org/sireum/HashSSet$
  #162 = Class              #161          // org/sireum/HashSSet$
  #163 = Utf8               Lorg/sireum/HashSSet$;
  #164 = NameAndType        #57:#163      // MODULE$:Lorg/sireum/HashSSet$;
  #165 = Fieldref           #162.#164     // org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
  #166 = Utf8               ()Lorg/sireum/HashSSet;
  #167 = NameAndType        #81:#166      // empty:()Lorg/sireum/HashSSet;
  #168 = Methodref          #162.#167     // org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
  #169 = Utf8               ISZ
  #170 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #171 = NameAndType        #169:#170     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #172 = Methodref          #97.#171      // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #173 = Utf8               scala/collection/immutable/Nil$
  #174 = Class              #173          // scala/collection/immutable/Nil$
  #175 = Utf8               Lscala/collection/immutable/Nil$;
  #176 = NameAndType        #57:#175      // MODULE$:Lscala/collection/immutable/Nil$;
  #177 = Fieldref           #174.#176     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #178 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #179 = NameAndType        #109:#178     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #180 = Methodref          #12.#179      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #181 = Utf8               rec$1
  #182 = Utf8               (Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)V
  #183 = NameAndType        #181:#182     // rec$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)V
  #184 = Methodref          #2.#183       // org/sireum/Os$Path$.rec$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)V
  #185 = Utf8               org/sireum/B$
  #186 = Class              #185          // org/sireum/B$
  #187 = Utf8               Lorg/sireum/B$;
  #188 = NameAndType        #57:#187      // MODULE$:Lorg/sireum/B$;
  #189 = Fieldref           #186.#188     // org/sireum/B$.MODULE$:Lorg/sireum/B$;
  #190 = Utf8               $4B
  #191 = Utf8               (Z)Z
  #192 = NameAndType        #190:#191     // $4B:(Z)Z
  #193 = Methodref          #186.#192     // org/sireum/B$.$4B:(Z)Z
  #194 = Utf8               org/sireum/HashSSet
  #195 = Class              #194          // org/sireum/HashSSet
  #196 = Utf8               map
  #197 = NameAndType        #196:#82      // map:()Lorg/sireum/HashSMap;
  #198 = Methodref          #195.#197     // org/sireum/HashSSet.map:()Lorg/sireum/HashSMap;
  #199 = Utf8               keys
  #200 = NameAndType        #199:#116     // keys:()Lorg/sireum/IS;
  #201 = Methodref          #151.#200     // org/sireum/HashSMap.keys:()Lorg/sireum/IS;
  #202 = Utf8               rSet
  #203 = Utf8               rIS
  #204 = Utf8               $anonfun$overlay$1
  #205 = Utf8               (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
  #206 = Utf8               target$1
  #207 = Utf8               path$1
  #208 = Utf8               isMove$1
  #209 = Utf8               report$1
  #210 = Utf8               r$1
  #211 = Utf8               p
  #212 = Utf8               relativize
  #213 = Utf8               (Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #214 = NameAndType        #212:#213     // relativize:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #215 = InterfaceMethodref #17.#214      // org/sireum/Os$Path.relativize:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
  #216 = Utf8               string
  #217 = Utf8               ()Ljava/lang/String;
  #218 = NameAndType        #216:#217     // string:()Ljava/lang/String;
  #219 = InterfaceMethodref #17.#218      // org/sireum/Os$Path.string:()Ljava/lang/String;
  #220 = Utf8               $div
  #221 = Utf8               (Ljava/lang/String;)Lorg/sireum/Os$Path;
  #222 = NameAndType        #220:#221     // $div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #223 = InterfaceMethodref #17.#222      // org/sireum/Os$Path.$div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
  #224 = Utf8               kind
  #225 = Utf8               ()Lorg/sireum/Os$Path$Kind$Type;
  #226 = NameAndType        #224:#225     // kind:()Lorg/sireum/Os$Path$Kind$Type;
  #227 = InterfaceMethodref #17.#226      // org/sireum/Os$Path.kind:()Lorg/sireum/Os$Path$Kind$Type;
  #228 = Utf8               Lorg/sireum/Os$Path$Kind$Dir$;
  #229 = NameAndType        #57:#228      // MODULE$:Lorg/sireum/Os$Path$Kind$Dir$;
  #230 = Fieldref           #35.#229      // org/sireum/Os$Path$Kind$Dir$.MODULE$:Lorg/sireum/Os$Path$Kind$Dir$;
  #231 = Utf8               equals
  #232 = Utf8               (Ljava/lang/Object;)Z
  #233 = NameAndType        #231:#232     // equals:(Ljava/lang/Object;)Z
  #234 = Methodref          #4.#233       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #235 = Utf8               mkdirAll
  #236 = NameAndType        #235:#60      // mkdirAll:()V
  #237 = InterfaceMethodref #17.#236      // org/sireum/Os$Path.mkdirAll:()V
  #238 = Utf8               remove
  #239 = NameAndType        #238:#60      // remove:()V
  #240 = InterfaceMethodref #17.#239      // org/sireum/Os$Path.remove:()V
  #241 = Utf8               Lorg/sireum/package$$Arrow$;
  #242 = NameAndType        #57:#241      // MODULE$:Lorg/sireum/package$$Arrow$;
  #243 = Fieldref           #53.#242      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #244 = Utf8               $Arrow
  #245 = NameAndType        #244:#119     // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #246 = Methodref          #97.#245      // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #247 = Utf8               $tilde$greater$extension
  #248 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #249 = NameAndType        #247:#248     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #250 = Methodref          #53.#249      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #251 = Utf8               $plus
  #252 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #253 = NameAndType        #251:#252     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #254 = Methodref          #151.#253     // org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #255 = Utf8               scala/runtime/BoxedUnit
  #256 = Class              #255          // scala/runtime/BoxedUnit
  #257 = Utf8               UNIT
  #258 = Utf8               Lscala/runtime/BoxedUnit;
  #259 = NameAndType        #257:#258     // UNIT:Lscala/runtime/BoxedUnit;
  #260 = Fieldref           #256.#259     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #261 = Utf8               Lorg/sireum/Os$Path$Kind$File$;
  #262 = NameAndType        #57:#261      // MODULE$:Lorg/sireum/Os$Path$Kind$File$;
  #263 = Fieldref           #38.#262      // org/sireum/Os$Path$Kind$File$.MODULE$:Lorg/sireum/Os$Path$Kind$File$;
  #264 = Utf8               up
  #265 = Utf8               ()Lorg/sireum/Os$Path;
  #266 = NameAndType        #264:#265     // up:()Lorg/sireum/Os$Path;
  #267 = InterfaceMethodref #17.#266      // org/sireum/Os$Path.up:()Lorg/sireum/Os$Path;
  #268 = Utf8               moveOverTo
  #269 = Utf8               (Lorg/sireum/Os$Path;)V
  #270 = NameAndType        #268:#269     // moveOverTo:(Lorg/sireum/Os$Path;)V
  #271 = InterfaceMethodref #17.#270      // org/sireum/Os$Path.moveOverTo:(Lorg/sireum/Os$Path;)V
  #272 = Utf8               copyOverTo
  #273 = NameAndType        #272:#269     // copyOverTo:(Lorg/sireum/Os$Path;)V
  #274 = InterfaceMethodref #17.#273      // org/sireum/Os$Path.copyOverTo:(Lorg/sireum/Os$Path;)V
  #275 = Utf8               Lorg/sireum/Os$Path$Kind$SymLink$;
  #276 = NameAndType        #57:#275      // MODULE$:Lorg/sireum/Os$Path$Kind$SymLink$;
  #277 = Fieldref           #41.#276      // org/sireum/Os$Path$Kind$SymLink$.MODULE$:Lorg/sireum/Os$Path$Kind$SymLink$;
  #278 = Utf8               t
  #279 = Utf8               add$1
  #280 = Utf8               (Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
  #281 = Utf8               followLink$1
  #282 = Utf8               rSet$1
  #283 = Utf8               rIS$1
  #284 = Utf8               canon
  #285 = NameAndType        #284:#265     // canon:()Lorg/sireum/Os$Path;
  #286 = InterfaceMethodref #17.#285      // org/sireum/Os$Path.canon:()Lorg/sireum/Os$Path;
  #287 = Utf8               (Ljava/lang/Object;)Lorg/sireum/HashSSet;
  #288 = NameAndType        #251:#287     // $plus:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
  #289 = Methodref          #195.#288     // org/sireum/HashSSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
  #290 = Utf8               $colon$plus
  #291 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #292 = NameAndType        #290:#291     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #293 = Methodref          #141.#292     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #294 = Utf8               pCanon
  #295 = Utf8               $anonfun$walk$1
  #296 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Z
  #297 = Utf8               p$1
  #298 = Utf8               contains
  #299 = NameAndType        #298:#232     // contains:(Ljava/lang/Object;)Z
  #300 = Methodref          #195.#299     // org/sireum/HashSSet.contains:(Ljava/lang/Object;)Z
  #301 = Utf8               $anonfun$walk$2
  #302 = Utf8               (Lscala/Function1;Lorg/sireum/Os$Path;)Z
  #303 = Utf8               pred$1
  #304 = Utf8               scala/Function1
  #305 = Class              #304          // scala/Function1
  #306 = NameAndType        #109:#119     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #307 = InterfaceMethodref #305.#306     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #308 = Utf8               org/sireum/B
  #309 = Class              #308          // org/sireum/B
  #310 = Utf8               value
  #311 = NameAndType        #310:#102     // value:()Z
  #312 = Methodref          #309.#311     // org/sireum/B.value:()Z
  #313 = Utf8               $anonfun$walk$3
  #314 = Utf8               (Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
  #315 = Utf8               $this
  #316 = Utf8               includeDir$1
  #317 = Utf8               p2
  #318 = Utf8               unary_$bang$extension
  #319 = NameAndType        #318:#191     // unary_$bang$extension:(Z)Z
  #320 = Methodref          #186.#319     // org/sireum/B$.unary_$bang$extension:(Z)Z
  #321 = Utf8               ()Ljava/lang/Object;
  #322 = MethodType         #321          //  ()Ljava/lang/Object;
  #323 = Utf8               $anonfun$walk$1$adapted
  #324 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #325 = NameAndType        #323:#324     // $anonfun$walk$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #326 = Methodref          #2.#325       // org/sireum/Os$Path$.$anonfun$walk$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #327 = MethodHandle       6:#326        // REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #328 = Utf8               (Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Lscala/Function0;
  #329 = NameAndType        #109:#328     // apply:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Lscala/Function0;
  #330 = InvokeDynamic      #1:#329       // #1:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Lscala/Function0;
  #331 = Utf8               $amp$amp$extension
  #332 = Utf8               (ZLscala/Function0;)Z
  #333 = NameAndType        #331:#332     // $amp$amp$extension:(ZLscala/Function0;)Z
  #334 = Methodref          #186.#333     // org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
  #335 = Utf8               $anonfun$walk$2$adapted
  #336 = Utf8               (Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #337 = NameAndType        #335:#336     // $anonfun$walk$2$adapted:(Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #338 = Methodref          #2.#337       // org/sireum/Os$Path$.$anonfun$walk$2$adapted:(Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #339 = MethodHandle       6:#338        // REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$2$adapted:(Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #340 = Utf8               (Lscala/Function1;Lorg/sireum/Os$Path;)Lscala/Function0;
  #341 = NameAndType        #109:#340     // apply:(Lscala/Function1;Lorg/sireum/Os$Path;)Lscala/Function0;
  #342 = InvokeDynamic      #2:#341       // #2:apply:(Lscala/Function1;Lorg/sireum/Os$Path;)Lscala/Function0;
  #343 = NameAndType        #279:#280     // add$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
  #344 = Methodref          #2.#343       // org/sireum/Os$Path$.add$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
  #345 = Utf8               list
  #346 = NameAndType        #345:#116     // list:()Lorg/sireum/IS;
  #347 = InterfaceMethodref #17.#346      // org/sireum/Os$Path.list:()Lorg/sireum/IS;
  #348 = Utf8               $anonfun$walk$3$adapted
  #349 = Utf8               (Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #350 = NameAndType        #348:#349     // $anonfun$walk$3$adapted:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #351 = Methodref          #2.#350       // org/sireum/Os$Path$.$anonfun$walk$3$adapted:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #352 = MethodHandle       6:#351        // REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$3$adapted:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  #353 = Utf8               (Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #354 = NameAndType        #109:#353     // apply:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #355 = InvokeDynamic      #3:#354       // #3:apply:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)Lscala/Function1;
  #356 = Utf8               readSymLink
  #357 = Utf8               ()Lorg/sireum/Option;
  #358 = NameAndType        #356:#357     // readSymLink:()Lorg/sireum/Option;
  #359 = InterfaceMethodref #17.#358      // org/sireum/Os$Path.readSymLink:()Lorg/sireum/Option;
  #360 = Utf8               org/sireum/Some
  #361 = Class              #360          // org/sireum/Some
  #362 = Utf8               org/sireum/Some$
  #363 = Class              #362          // org/sireum/Some$
  #364 = Utf8               Lorg/sireum/Some$;
  #365 = NameAndType        #57:#364      // MODULE$:Lorg/sireum/Some$;
  #366 = Fieldref           #363.#365     // org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
  #367 = Utf8               unapply
  #368 = Utf8               (Lorg/sireum/Some;)Lscala/Some;
  #369 = NameAndType        #367:#368     // unapply:(Lorg/sireum/Some;)Lscala/Some;
  #370 = Methodref          #363.#369     // org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
  #371 = Utf8               scala/Some
  #372 = Class              #371          // scala/Some
  #373 = Utf8               isEmpty
  #374 = NameAndType        #373:#102     // isEmpty:()Z
  #375 = Methodref          #372.#374     // scala/Some.isEmpty:()Z
  #376 = Utf8               get
  #377 = NameAndType        #376:#321     // get:()Ljava/lang/Object;
  #378 = Methodref          #372.#377     // scala/Some.get:()Ljava/lang/Object;
  #379 = Utf8               tOpt
  #380 = Utf8               Lorg/sireum/Option;
  #381 = Utf8               org/sireum/Option
  #382 = Class              #381          // org/sireum/Option
  #383 = Methodref          #4.#62        // java/lang/Object."<init>":()V
  #384 = NameAndType        #204:#205     // $anonfun$overlay$1:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
  #385 = Methodref          #2.#384       // org/sireum/Os$Path$.$anonfun$overlay$1:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
  #386 = NameAndType        #295:#296     // $anonfun$walk$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Z
  #387 = Methodref          #2.#386       // org/sireum/Os$Path$.$anonfun$walk$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Z
  #388 = Utf8               (Z)V
  #389 = NameAndType        #61:#388      // "<init>":(Z)V
  #390 = Methodref          #309.#389     // org/sireum/B."<init>":(Z)V
  #391 = NameAndType        #301:#302     // $anonfun$walk$2:(Lscala/Function1;Lorg/sireum/Os$Path;)Z
  #392 = Methodref          #2.#391       // org/sireum/Os$Path$.$anonfun$walk$2:(Lscala/Function1;Lorg/sireum/Os$Path;)Z
  #393 = NameAndType        #313:#314     // $anonfun$walk$3:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
  #394 = Methodref          #2.#393       // org/sireum/Os$Path$.$anonfun$walk$3:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
  #395 = Utf8               $deserializeLambda$
  #396 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #397 = Utf8               scala/runtime/LambdaDeserialize
  #398 = Class              #397          // scala/runtime/LambdaDeserialize
  #399 = Utf8               bootstrap
  #400 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #401 = NameAndType        #399:#400     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #402 = Methodref          #398.#401     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #403 = MethodHandle       6:#402        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #404 = Utf8               lambdaDeserialize
  #405 = NameAndType        #404:#396     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #406 = InvokeDynamic      #4:#405       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #407 = Utf8               Code
  #408 = Utf8               LineNumberTable
  #409 = Utf8               LocalVariableTable
  #410 = Utf8               Signature
  #411 = Utf8               MethodParameters
  #412 = Utf8               StackMapTable
  #413 = Utf8               InnerClasses
  #414 = Utf8               SourceFile
  #415 = Utf8               BootstrapMethods
  #416 = Utf8               ScalaInlineInfo
  #417 = Utf8               Scala
{
  public static final org.sireum.Os$Path$ MODULE$;
    descriptor: Lorg/sireum/Os$Path$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/Os$Path$
         3: dup
         4: invokespecial #63                 // Method "<init>":()V
         7: putstatic     #65                 // Field MODULE$:Lorg/sireum/Os$Path$;
        10: return
      LineNumberTable:
        line 157: 0

  public org.sireum.HashSMap<org.sireum.Os$Path, org.sireum.Os$Path> overlay(boolean, org.sireum.Os$Path, org.sireum.Os$Path, boolean, boolean, scala.Function1<org.sireum.Os$Path, org.sireum.B>, boolean);
    descriptor: (ZLorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1;Z)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=10, args_size=8
         0: getstatic     #80                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: invokevirtual #84                 // Method org/sireum/HashSMap$.empty:()Lorg/sireum/HashSMap;
         6: invokestatic  #90                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore        8
        11: getstatic     #95                 // Field org/sireum/ops/ISZOps$.MODULE$:Lorg/sireum/ops/ISZOps$;
        14: aload_0
        15: aload_2
        16: iload         4
        18: getstatic     #100                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        21: invokevirtual #104                // Method org/sireum/package$.T:()Z
        24: aload         6
        26: invokevirtual #108                // Method walk:(Lorg/sireum/Os$Path;ZZLscala/Function1;)Lorg/sireum/IS;
        29: invokevirtual #112                // Method org/sireum/ops/ISZOps$.apply:(Lorg/sireum/IS;)Lorg/sireum/ops/ISZOps;
        32: invokevirtual #118                // Method org/sireum/ops/ISZOps.reverse:()Lorg/sireum/IS;
        35: astore        9
        37: aload         9
        39: aload_3
        40: aload_2
        41: iload_1
        42: iload         7
        44: aload         8
        46: invokedynamic #139,  0            // InvokeDynamic #0:apply:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;)Lscala/Function1;
        51: invokevirtual #145                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        54: aload         8
        56: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        59: checkcast     #151                // class org/sireum/HashSMap
        62: areturn
      LineNumberTable:
        line 194: 0
        line 195: 11
        line 196: 37
        line 222: 54
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      52     8     r   Lscala/runtime/ObjectRef;
           37      26     9 files   Lorg/sireum/IS;
            0      63     0  this   Lorg/sireum/Os$Path$;
            0      63     1 isMove   Z
            0      63     2  path   Lorg/sireum/Os$Path;
            0      63     3 target   Lorg/sireum/Os$Path;
            0      63     4 includeDir   Z
            0      63     5 followLink   Z
            0      63     6  pred   Lscala/Function1;
            0      63     7 report   Z
    Signature: #68                          // (ZLorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;Z)Lorg/sireum/HashSMap<Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;>;
    MethodParameters:
      Name                           Flags
      isMove                         final
      path                           final
      target                         final
      includeDir                     final
      followLink                     final
      pred                           final
      report                         final

  public org.sireum.IS<org.sireum.Z, org.sireum.Os$Path> walk(org.sireum.Os$Path, boolean, boolean, scala.Function1<org.sireum.Os$Path, org.sireum.B>);
    descriptor: (Lorg/sireum/Os$Path;ZZLscala/Function1;)Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=7, args_size=5
         0: getstatic     #165                // Field org/sireum/HashSSet$.MODULE$:Lorg/sireum/HashSSet$;
         3: invokevirtual #168                // Method org/sireum/HashSSet$.empty:()Lorg/sireum/HashSSet;
         6: invokestatic  #90                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         9: astore        5
        11: getstatic     #100                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        14: invokevirtual #172                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        17: getstatic     #177                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        20: invokevirtual #180                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        23: invokestatic  #90                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        26: astore        6
        28: aload_0
        29: aload_1
        30: iload_3
        31: aload         5
        33: iload_2
        34: aload         4
        36: aload         6
        38: invokespecial #184                // Method rec$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)V
        41: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        44: iload_3
        45: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
        48: ifeq          68
        51: aload         5
        53: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        56: checkcast     #195                // class org/sireum/HashSSet
        59: invokevirtual #198                // Method org/sireum/HashSSet.map:()Lorg/sireum/HashSMap;
        62: invokevirtual #201                // Method org/sireum/HashSMap.keys:()Lorg/sireum/IS;
        65: goto          76
        68: aload         6
        70: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        73: checkcast     #141                // class org/sireum/IS
        76: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 68
          locals = [ class scala/runtime/ObjectRef, class scala/runtime/ObjectRef ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/IS ]
      LineNumberTable:
        line 226: 0
        line 227: 11
        line 261: 28
        line 262: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      66     5  rSet   Lscala/runtime/ObjectRef;
           28      49     6   rIS   Lscala/runtime/ObjectRef;
            0      77     0  this   Lorg/sireum/Os$Path$;
            0      77     1  path   Lorg/sireum/Os$Path;
            0      77     2 includeDir   Z
            0      77     3 followLink   Z
            0      77     4  pred   Lscala/Function1;
    Signature: #160                         // (Lorg/sireum/Os$Path;ZZLscala/Function1<Lorg/sireum/Os$Path;Lorg/sireum/B;>;)Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Os$Path;>;
    MethodParameters:
      Name                           Flags
      path                           final
      includeDir                     final
      followLink                     final
      pred                           final

  public static final void $anonfun$overlay$1(org.sireum.Os$Path, org.sireum.Os$Path, boolean, boolean, scala.runtime.ObjectRef, org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=9, args_size=6
         0: aload_0
         1: aload_1
         2: aload         5
         4: invokeinterface #215,  2          // InterfaceMethod org/sireum/Os$Path.relativize:(Lorg/sireum/Os$Path;)Lorg/sireum/Os$Path;
         9: invokeinterface #219,  1          // InterfaceMethod org/sireum/Os$Path.string:()Ljava/lang/String;
        14: invokeinterface #223,  2          // InterfaceMethod org/sireum/Os$Path.$div:(Ljava/lang/String;)Lorg/sireum/Os$Path;
        19: astore        7
        21: aload         5
        23: invokeinterface #227,  1          // InterfaceMethod org/sireum/Os$Path.kind:()Lorg/sireum/Os$Path$Kind$Type;
        28: astore        8
        30: getstatic     #230                // Field org/sireum/Os$Path$Kind$Dir$.MODULE$:Lorg/sireum/Os$Path$Kind$Dir$;
        33: aload         8
        35: invokevirtual #234                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        38: ifeq          124
        41: aload         7
        43: invokeinterface #237,  1          // InterfaceMethod org/sireum/Os$Path.mkdirAll:()V
        48: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        51: iload_2
        52: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
        55: ifeq          68
        58: aload         5
        60: invokeinterface #240,  1          // InterfaceMethod org/sireum/Os$Path.remove:()V
        65: goto          68
        68: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        71: iload_3
        72: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
        75: ifeq          116
        78: aload         4
        80: aload         4
        82: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        85: checkcast     #151                // class org/sireum/HashSMap
        88: getstatic     #243                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        91: getstatic     #100                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        94: aload         5
        96: invokevirtual #246                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        99: aload         7
       101: invokevirtual #250                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       104: invokevirtual #254                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       107: putfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       110: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       113: goto          119
       116: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       119: astore        6
       121: goto          287
       124: goto          127
       127: getstatic     #263                // Field org/sireum/Os$Path$Kind$File$.MODULE$:Lorg/sireum/Os$Path$Kind$File$;
       130: aload         8
       132: invokevirtual #234                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       135: ifeq          237
       138: aload         7
       140: invokeinterface #267,  1          // InterfaceMethod org/sireum/Os$Path.up:()Lorg/sireum/Os$Path;
       145: invokeinterface #237,  1          // InterfaceMethod org/sireum/Os$Path.mkdirAll:()V
       150: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       153: iload_2
       154: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
       157: ifeq          172
       160: aload         5
       162: aload         7
       164: invokeinterface #271,  2          // InterfaceMethod org/sireum/Os$Path.moveOverTo:(Lorg/sireum/Os$Path;)V
       169: goto          181
       172: aload         5
       174: aload         7
       176: invokeinterface #274,  2          // InterfaceMethod org/sireum/Os$Path.copyOverTo:(Lorg/sireum/Os$Path;)V
       181: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       184: iload_3
       185: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
       188: ifeq          229
       191: aload         4
       193: aload         4
       195: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       198: checkcast     #151                // class org/sireum/HashSMap
       201: getstatic     #243                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
       204: getstatic     #100                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
       207: aload         5
       209: invokevirtual #246                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
       212: aload         7
       214: invokevirtual #250                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       217: invokevirtual #254                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
       220: putfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       223: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       226: goto          232
       229: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       232: astore        6
       234: goto          287
       237: goto          240
       240: getstatic     #277                // Field org/sireum/Os$Path$Kind$SymLink$.MODULE$:Lorg/sireum/Os$Path$Kind$SymLink$;
       243: aload         8
       245: invokevirtual #234                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       248: ifeq          276
       251: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       254: iload_2
       255: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
       258: ifeq          276
       261: aload         5
       263: invokeinterface #240,  1          // InterfaceMethod org/sireum/Os$Path.remove:()V
       268: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       271: astore        6
       273: goto          287
       276: goto          279
       279: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       282: astore        6
       284: goto          287
       287: return
      StackMapTable: number_of_entries = 14
        frame_type = 254 /* append */
          offset_delta = 68
          locals = [ top, class org/sireum/Os$Path, class org/sireum/Os$Path$Kind$Type ]
        frame_type = 47 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 4 /* same */
        frame_type = 2 /* same */
        frame_type = 44 /* same */
        frame_type = 8 /* same */
        frame_type = 47 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 4 /* same */
        frame_type = 2 /* same */
        frame_type = 35 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/Os$Path, class org/sireum/Os$Path, int, int, class scala/runtime/ObjectRef, class org/sireum/Os$Path, class scala/runtime/BoxedUnit, class org/sireum/Os$Path, class org/sireum/Os$Path$Kind$Type ]
          stack = []
      LineNumberTable:
        line 197: 0
        line 198: 21
        line 199: 30
        line 200: 41
        line 201: 48
        line 202: 58
        line 204: 68
        line 205: 78
        line 204: 116
        line 199: 124
        line 207: 127
        line 208: 138
        line 209: 150
        line 210: 160
        line 212: 172
        line 214: 181
        line 215: 191
        line 214: 229
        line 207: 237
        line 217: 240
        line 218: 261
        line 217: 276
        line 219: 279
        line 198: 287
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21     266     7     t   Lorg/sireum/Os$Path;
            0     288     0 target$1   Lorg/sireum/Os$Path;
            0     288     1 path$1   Lorg/sireum/Os$Path;
            0     288     2 isMove$1   Z
            0     288     3 report$1   Z
            0     288     4   r$1   Lscala/runtime/ObjectRef;
            0     288     5     p   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target$1                       final
      path$1                         final
      isMove$1                       final
      report$1                       final
      r$1                            final
      p                              final

  private static final void add$1(org.sireum.Os$Path, boolean, scala.runtime.ObjectRef, scala.runtime.ObjectRef);
    descriptor: (Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=5, args_size=4
         0: aload_0
         1: invokeinterface #286,  1          // InterfaceMethod org/sireum/Os$Path.canon:()Lorg/sireum/Os$Path;
         6: astore        4
         8: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        11: iload_1
        12: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
        15: ifeq          37
        18: aload_2
        19: aload_2
        20: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        23: checkcast     #195                // class org/sireum/HashSSet
        26: aload         4
        28: invokevirtual #289                // Method org/sireum/HashSSet.$plus:(Ljava/lang/Object;)Lorg/sireum/HashSSet;
        31: putfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: goto          53
        37: aload_3
        38: aload_3
        39: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        42: checkcast     #141                // class org/sireum/IS
        45: aload         4
        47: invokevirtual #293                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
        50: putfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        53: return
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class org/sireum/Os$Path ]
        frame_type = 15 /* same */
      LineNumberTable:
        line 229: 0
        line 230: 8
        line 231: 18
        line 233: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      45     4 pCanon   Lorg/sireum/Os$Path;
            0      54     0     p   Lorg/sireum/Os$Path;
            0      54     1 followLink$1   Z
            0      54     2 rSet$1   Lscala/runtime/ObjectRef;
            0      54     3 rIS$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      p                              final
      followLink$1                   final
      rSet$1                         final
      rIS$1                          final

  public static final boolean $anonfun$walk$1(scala.runtime.ObjectRef, org.sireum.Os$Path);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #149                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         4: checkcast     #195                // class org/sireum/HashSSet
         7: aload_1
         8: invokeinterface #286,  1          // InterfaceMethod org/sireum/Os$Path.canon:()Lorg/sireum/Os$Path;
        13: invokevirtual #300                // Method org/sireum/HashSSet.contains:(Ljava/lang/Object;)Z
        16: ireturn
      LineNumberTable:
        line 237: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 rSet$1   Lscala/runtime/ObjectRef;
            0      17     1   p$1   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      rSet$1                         final
      p$1                            final

  public static final boolean $anonfun$walk$2(scala.Function1, org.sireum.Os$Path);
    descriptor: (Lscala/Function1;Lorg/sireum/Os$Path;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #307,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         7: checkcast     #309                // class org/sireum/B
        10: invokevirtual #312                // Method org/sireum/B.value:()Z
        13: ireturn
      LineNumberTable:
        line 242: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 pred$1   Lscala/Function1;
            0      14     1   p$1   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      pred$1                         final
      p$1                            final

  public static final void $anonfun$walk$3(org.sireum.Os$Path$, boolean, scala.runtime.ObjectRef, boolean, scala.Function1, scala.runtime.ObjectRef, org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=7, args_size=7
         0: aload_0
         1: aload         6
         3: iload_1
         4: aload_2
         5: iload_3
         6: aload         4
         8: aload         5
        10: invokespecial #184                // Method rec$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)V
        13: return
      LineNumberTable:
        line 246: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 $this   Lorg/sireum/Os$Path$;
            0      14     1 followLink$1   Z
            0      14     2 rSet$1   Lscala/runtime/ObjectRef;
            0      14     3 includeDir$1   Z
            0      14     4 pred$1   Lscala/Function1;
            0      14     5 rIS$1   Lscala/runtime/ObjectRef;
            0      14     6    p2   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      followLink$1                   final
      rSet$1                         final
      includeDir$1                   final
      pred$1                         final
      rIS$1                          final
      p2                             final

  private final void rec$1(org.sireum.Os$Path, boolean, scala.runtime.ObjectRef, boolean, scala.Function1, scala.runtime.ObjectRef);
    descriptor: (Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=7, locals=16, args_size=7
         0: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         9: iload_2
        10: invokevirtual #320                // Method org/sireum/B$.unary_$bang$extension:(Z)Z
        13: aload_3
        14: aload_1
        15: invokedynamic #330,  0            // InvokeDynamic #1:apply:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Lscala/Function0;
        20: invokevirtual #334                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        23: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
        26: ifeq          30
        29: return
        30: aload_1
        31: invokeinterface #227,  1          // InterfaceMethod org/sireum/Os$Path.kind:()Lorg/sireum/Os$Path$Kind$Type;
        36: astore        10
        38: getstatic     #230                // Field org/sireum/Os$Path$Kind$Dir$.MODULE$:Lorg/sireum/Os$Path$Kind$Dir$;
        41: aload         10
        43: invokevirtual #234                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        46: ifeq          116
        49: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        52: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        55: iload         4
        57: aload         5
        59: aload_1
        60: invokedynamic #342,  0            // InvokeDynamic #2:apply:(Lscala/Function1;Lorg/sireum/Os$Path;)Lscala/Function0;
        65: invokevirtual #334                // Method org/sireum/B$.$amp$amp$extension:(ZLscala/Function0;)Z
        68: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
        71: ifeq          85
        74: aload_1
        75: iload_2
        76: aload_3
        77: aload         6
        79: invokestatic  #344                // Method add$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
        82: goto          85
        85: aload_1
        86: invokeinterface #347,  1          // InterfaceMethod org/sireum/Os$Path.list:()Lorg/sireum/IS;
        91: aload_0
        92: iload_2
        93: aload_3
        94: iload         4
        96: aload         5
        98: aload         6
       100: invokedynamic #355,  0            // InvokeDynamic #3:apply:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;)Lscala/Function1;
       105: invokevirtual #145                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       108: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       111: astore        8
       113: goto          321
       116: goto          119
       119: getstatic     #263                // Field org/sireum/Os$Path$Kind$File$.MODULE$:Lorg/sireum/Os$Path$Kind$File$;
       122: aload         10
       124: invokevirtual #234                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       127: ifeq          169
       130: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       133: aload         5
       135: aload_1
       136: invokeinterface #307,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       141: checkcast     #309                // class org/sireum/B
       144: invokevirtual #312                // Method org/sireum/B.value:()Z
       147: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
       150: ifeq          169
       153: aload_1
       154: iload_2
       155: aload_3
       156: aload         6
       158: invokestatic  #344                // Method add$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
       161: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       164: astore        8
       166: goto          321
       169: goto          172
       172: getstatic     #277                // Field org/sireum/Os$Path$Kind$SymLink$.MODULE$:Lorg/sireum/Os$Path$Kind$SymLink$;
       175: aload         10
       177: invokevirtual #234                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       180: ifeq          310
       183: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       186: iload_2
       187: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
       190: ifeq          310
       193: getstatic     #189                // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
       196: aload         5
       198: aload_1
       199: invokeinterface #307,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       204: checkcast     #309                // class org/sireum/B
       207: invokevirtual #312                // Method org/sireum/B.value:()Z
       210: invokevirtual #193                // Method org/sireum/B$.$4B:(Z)Z
       213: ifeq          227
       216: aload_1
       217: iload_2
       218: aload_3
       219: aload         6
       221: invokestatic  #344                // Method add$1:(Lorg/sireum/Os$Path;ZLscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)V
       224: goto          227
       227: aload_1
       228: invokeinterface #359,  1          // InterfaceMethod org/sireum/Os$Path.readSymLink:()Lorg/sireum/Option;
       233: astore        11
       235: aload         11
       237: astore        12
       239: aload         12
       241: instanceof    #361                // class org/sireum/Some
       244: ifeq          291
       247: aload         12
       249: checkcast     #361                // class org/sireum/Some
       252: astore        13
       254: getstatic     #366                // Field org/sireum/Some$.MODULE$:Lorg/sireum/Some$;
       257: aload         13
       259: invokevirtual #370                // Method org/sireum/Some$.unapply:(Lorg/sireum/Some;)Lscala/Some;
       262: astore        14
       264: aload         14
       266: invokevirtual #375                // Method scala/Some.isEmpty:()Z
       269: ifne          288
       272: aload         14
       274: invokevirtual #378                // Method scala/Some.get:()Ljava/lang/Object;
       277: checkcast     #17                 // class org/sireum/Os$Path
       280: astore        15
       282: aload         15
       284: astore_1
       285: goto          0
       288: goto          294
       291: goto          294
       294: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       297: astore        9
       299: goto          302
       302: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       305: astore        8
       307: goto          321
       310: goto          313
       313: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       316: astore        8
       318: goto          321
       321: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       324: pop
       325: return
      StackMapTable: number_of_entries = 15
        frame_type = 0 /* same */
        frame_type = 29 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ class org/sireum/Os$Path$, class org/sireum/Os$Path, int, class scala/runtime/ObjectRef, int, class scala/Function1, class scala/runtime/ObjectRef, top, top, top, class org/sireum/Os$Path$Kind$Type ]
          stack = []
        frame_type = 30 /* same */
        frame_type = 2 /* same */
        frame_type = 49 /* same */
        frame_type = 2 /* same */
        frame_type = 54 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class org/sireum/Os$Path$, class org/sireum/Os$Path, int, class scala/runtime/ObjectRef, int, class scala/Function1, class scala/runtime/ObjectRef, top, top, top, class org/sireum/Os$Path$Kind$Type, class org/sireum/Option, class org/sireum/Option, class org/sireum/Some, class scala/Some ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/Os$Path$, class org/sireum/Os$Path, int, class scala/runtime/ObjectRef, int, class scala/Function1, class scala/runtime/ObjectRef, top, top, class scala/runtime/BoxedUnit, class org/sireum/Os$Path$Kind$Type, class org/sireum/Option, class org/sireum/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/Os$Path$, class org/sireum/Os$Path, int, class scala/runtime/ObjectRef, int, class scala/Function1, class scala/runtime/ObjectRef, top, top, top, class org/sireum/Os$Path$Kind$Type ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 7
          locals = [ class org/sireum/Os$Path$, class org/sireum/Os$Path, int, class scala/runtime/ObjectRef, int, class scala/Function1, class scala/runtime/ObjectRef, top, class scala/runtime/BoxedUnit, top, class org/sireum/Os$Path$Kind$Type ]
          stack = []
      LineNumberTable:
        line 237: 0
        line 238: 29
        line 240: 30
        line 241: 38
        line 242: 49
        line 243: 74
        line 245: 85
        line 241: 116
        line 248: 119
        line 249: 172
        line 250: 193
        line 251: 216
        line 253: 227
        line 254: 235
        line 255: 239
        line 254: 272
        line 255: 282
        line 256: 294
        line 254: 302
        line 249: 310
        line 258: 313
        line 240: 321
        line 236: 325
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          282       6    15     t   Lorg/sireum/Os$Path;
          235      70    11  tOpt   Lorg/sireum/Option;
            0     326     0  this   Lorg/sireum/Os$Path$;
            0     326     1     p   Lorg/sireum/Os$Path;
            0     326     2 followLink$1   Z
            0     326     3 rSet$1   Lscala/runtime/ObjectRef;
            0     326     4 includeDir$1   Z
            0     326     5 pred$1   Lscala/Function1;
            0     326     6 rIS$1   Lscala/runtime/ObjectRef;
    MethodParameters:
      Name                           Flags
      p                              final
      followLink$1                   final
      rSet$1                         final
      includeDir$1                   final
      pred$1                         final
      rIS$1                          final

  public org.sireum.Os$Path$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #383                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 157: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/Os$Path$;

  public static final java.lang.Object $anonfun$overlay$1$adapted(org.sireum.Os$Path, org.sireum.Os$Path, boolean, boolean, scala.runtime.ObjectRef, org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: aload         4
         6: aload         5
         8: invokestatic  #385                // Method $anonfun$overlay$1:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
        11: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        14: areturn
      LineNumberTable:
        line 196: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 target$1   Lorg/sireum/Os$Path;
            0      15     1 path$1   Lorg/sireum/Os$Path;
            0      15     2 isMove$1   Z
            0      15     3 report$1   Z
            0      15     4   r$1   Lscala/runtime/ObjectRef;
            0      15     5     p   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      target$1                       final
      path$1                         final
      isMove$1                       final
      report$1                       final
      r$1                            final
      p                              final

  public static final java.lang.Object $anonfun$walk$1$adapted(scala.runtime.ObjectRef, org.sireum.Os$Path);
    descriptor: (Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #309                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #387                // Method $anonfun$walk$1:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Z
         9: invokespecial #390                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 237: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 rSet$1   Lscala/runtime/ObjectRef;
            0      13     1   p$1   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      rSet$1                         final
      p$1                            final

  public static final java.lang.Object $anonfun$walk$2$adapted(scala.Function1, org.sireum.Os$Path);
    descriptor: (Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #309                // class org/sireum/B
         3: dup
         4: aload_0
         5: aload_1
         6: invokestatic  #392                // Method $anonfun$walk$2:(Lscala/Function1;Lorg/sireum/Os$Path;)Z
         9: invokespecial #390                // Method org/sireum/B."<init>":(Z)V
        12: areturn
      LineNumberTable:
        line 242: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 pred$1   Lscala/Function1;
            0      13     1   p$1   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      pred$1                         final
      p$1                            final

  public static final java.lang.Object $anonfun$walk$3$adapted(org.sireum.Os$Path$, boolean, scala.runtime.ObjectRef, boolean, scala.Function1, scala.runtime.ObjectRef, org.sireum.Os$Path);
    descriptor: (Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=7, args_size=7
         0: aload_0
         1: iload_1
         2: aload_2
         3: iload_3
         4: aload         4
         6: aload         5
         8: aload         6
        10: invokestatic  #394                // Method $anonfun$walk$3:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)V
        13: getstatic     #260                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        16: areturn
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 $this   Lorg/sireum/Os$Path$;
            0      17     1 followLink$1   Z
            0      17     2 rSet$1   Lscala/runtime/ObjectRef;
            0      17     3 includeDir$1   Z
            0      17     4 pred$1   Lscala/Function1;
            0      17     5 rIS$1   Lscala/runtime/ObjectRef;
            0      17     6    p2   Lorg/sireum/Os$Path;
    MethodParameters:
      Name                           Flags
      $this                          final
      followLink$1                   final
      rSet$1                         final
      includeDir$1                   final
      pred$1                         final
      rIS$1                          final
      p2                             final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #406,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static #20= #17 of #19;          // Path=class org/sireum/Os$Path of class org/sireum/Os
  public static #21= #2 of #19;           // Path$=class org/sireum/Os$Path$ of class org/sireum/Os
  public static final #24= #23 of #2;     // Impl=class org/sireum/Os$Path$Impl of class org/sireum/Os$Path$
  public static #27= #26 of #2;           // Impl$=class org/sireum/Os$Path$Impl$ of class org/sireum/Os$Path$
  public static #30= #29 of #2;           // Jen=class org/sireum/Os$Path$Jen of class org/sireum/Os$Path$
  public static #33= #32 of #2;           // Kind$=class org/sireum/Os$Path$Kind$ of class org/sireum/Os$Path$
  public static final #36= #35 of #32;    // Dir$=class org/sireum/Os$Path$Kind$Dir$ of class org/sireum/Os$Path$Kind$
  public static final #39= #38 of #32;    // File$=class org/sireum/Os$Path$Kind$File$ of class org/sireum/Os$Path$Kind$
  public static final #42= #41 of #32;    // SymLink$=class org/sireum/Os$Path$Kind$SymLink$ of class org/sireum/Os$Path$Kind$
  public static #45= #44 of #32;          // Type=class org/sireum/Os$Path$Kind$Type of class org/sireum/Os$Path$Kind$
  public static #48= #47 of #2;           // MJen=class org/sireum/Os$Path$MJen of class org/sireum/Os$Path$
  public static #51= #50 of #2;           // WriteMode$=class org/sireum/Os$Path$WriteMode$ of class org/sireum/Os$Path$
  public static #56= #53 of #55;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
SourceFile: "Os.scala"
BootstrapMethods:
  0: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #125 REF_invokeStatic org/sireum/Os$Path$.$anonfun$overlay$1$adapted:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #127 (Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #128 5
      #129 1
      #127 (Lorg/sireum/Os$Path;)Ljava/lang/Object;
  1: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #322 ()Ljava/lang/Object;
      #327 REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #322 ()Ljava/lang/Object;
      #129 1
  2: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #322 ()Ljava/lang/Object;
      #339 REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$2$adapted:(Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #322 ()Ljava/lang/Object;
      #129 1
  3: #136 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #120 (Ljava/lang/Object;)Ljava/lang/Object;
      #352 REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$3$adapted:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #127 (Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #128 5
      #129 1
      #127 (Lorg/sireum/Os$Path;)Ljava/lang/Object;
  4: #403 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #125 REF_invokeStatic org/sireum/Os$Path$.$anonfun$overlay$1$adapted:(Lorg/sireum/Os$Path;Lorg/sireum/Os$Path;ZZLscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #327 REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$1$adapted:(Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #339 REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$2$adapted:(Lscala/Function1;Lorg/sireum/Os$Path;)Ljava/lang/Object;
      #352 REF_invokeStatic org/sireum/Os$Path$.$anonfun$walk$3$adapted:(Lorg/sireum/Os$Path$;ZLscala/runtime/ObjectRef;ZLscala/Function1;Lscala/runtime/ObjectRef;Lorg/sireum/Os$Path;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 CC 00 CD 01 00 79 00 7A 01 01 27
   01 28 01 01 43 01 44 01 01 2D 01 2E 01 01 4F 01
   50 01 01 39 01 3A 01 01 5C 01 5D 01 00 3D 00 3C
   01 01 17 01 18 01 00 42 00 43 01 00 B5 00 B6 01
   00 69 00 6A 01
  Scala: length = 0x0 (unknown attribute)

