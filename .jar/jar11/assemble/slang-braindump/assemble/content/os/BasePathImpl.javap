Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/BasePathImpl.class
  Last modified May 29, 2022; size 3587 bytes
  SHA-256 checksum af668293a7e7be1066bec5101b597f1db99c1937a0b0c98d38ead0812a61aa42
  Compiled from "Path.scala"
public interface os.BasePathImpl extends os.BasePath
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // os/BasePathImpl
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 11, attributes: 6
Constant pool:
    #1 = Utf8               os/BasePathImpl
    #2 = Class              #1            // os/BasePathImpl
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               os/BasePath
    #6 = Class              #5            // os/BasePath
    #7 = Utf8               Path.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005i2qa\u0002\u0005\u0011\u0002\u0007\u00051\u0002C\u0003\u0017\u0001\u0011\u0005q\u0003C\u0003\u001c\u0001\u0019\u0005A\u0004C\u0003\'\u0001\u0011\u0005q\u0005C\u00034\u0001\u0011\u0005s\u0005C\u00035\u0001\u0011\u0005q\u0005C\u00036\u0001\u0019\u0005aG\u0001\u0007CCN,\u0007+\u0019;i\u00136\u0004HNC\u0001\n\u0003\ty7o\u0001\u0001\u0014\u0007\u0001a!\u0003\u0005\u0002\u000e!5\taBC\u0001\u0010\u0003\u0015\u00198-\u00197b\u0013\t\tbB\u0001\u0004B]f\u0014VM\u001a\t\u0003\'Qi\u0011\u0001C\u0005\u0003+!\u0011\u0001BQ1tKB\u000bG\u000f[\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003a\u0001\"!D\r\n\u0005iq!\u0001B+oSR\fA\u0001\n3jmR\u0011Q$\t\t\u0003=}i\u0011\u0001A\u0005\u0003AQ\u0011\u0001\u0002\u00165jgRK\b/\u001a\u0005\u0006E\t\u0001\raI\u0001\u0006G\",hn\u001b\t\u0003\'\u0011J!!\n\u0005\u0003\u0013A\u000bG\u000f[\"ik:\\\u0017aA3yiV\t\u0001\u0006\u0005\u0002*a9\u0011!F\f\t\u0003W9i\u0011\u0001\f\u0006\u0003[)\ta\u0001\u0010:p_Rt\u0014BA\u0018\u000f\u0003\u0019\u0001&/\u001a3fM&\u0011\u0011G\r\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005=r\u0011\u0001\u00032bg\u0016t\u0015-\\3\u0002\t1\f7\u000f^\u0001\bY\u0006\u001cHo\u00149u+\u00059\u0004cA\u00079Q%\u0011\u0011H\u0004\u0002\u0007\u001fB$\u0018n\u001c8
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               os/PathError$LastOnEmptyPath
   #17 = Class              #16           // os/PathError$LastOnEmptyPath
   #18 = Utf8               os/PathError
   #19 = Class              #18           // os/PathError
   #20 = Utf8               LastOnEmptyPath
   #21 = Utf8               $div
   #22 = Utf8               (Los/PathChunk;)Los/BasePath;
   #23 = Utf8               chunk
   #24 = Utf8               ext$
   #25 = Utf8               (Los/BasePathImpl;)Ljava/lang/String;
   #26 = Utf8               $this
   #27 = Utf8               ext
   #28 = Utf8               ()Ljava/lang/String;
   #29 = NameAndType        #27:#28       // ext:()Ljava/lang/String;
   #30 = InterfaceMethodref #2.#29        // os/BasePathImpl.ext:()Ljava/lang/String;
   #31 = Utf8               Los/BasePathImpl;
   #32 = Utf8               lastOpt
   #33 = Utf8               ()Lscala/Option;
   #34 = NameAndType        #32:#33       // lastOpt:()Lscala/Option;
   #35 = InterfaceMethodref #2.#34        // os/BasePathImpl.lastOpt:()Lscala/Option;
   #36 = Utf8               scala/None$
   #37 = Class              #36           // scala/None$
   #38 = Utf8               MODULE$
   #39 = Utf8               Lscala/None$;
   #40 = NameAndType        #38:#39       // MODULE$:Lscala/None$;
   #41 = Fieldref           #37.#40       // scala/None$.MODULE$:Lscala/None$;
   #42 = Utf8               equals
   #43 = Utf8               (Ljava/lang/Object;)Z
   #44 = NameAndType        #42:#43       // equals:(Ljava/lang/Object;)Z
   #45 = Methodref          #4.#44        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #46 = Utf8
   #47 = String             #46           //
   #48 = Utf8               scala/Some
   #49 = Class              #48           // scala/Some
   #50 = Utf8               value
   #51 = Utf8               ()Ljava/lang/Object;
   #52 = NameAndType        #50:#51       // value:()Ljava/lang/Object;
   #53 = Methodref          #49.#52       // scala/Some.value:()Ljava/lang/Object;
   #54 = Utf8               java/lang/String
   #55 = Class              #54           // java/lang/String
   #56 = Utf8               lastIndexOf
   #57 = Utf8               (I)I
   #58 = NameAndType        #56:#57       // lastIndexOf:(I)I
   #59 = Methodref          #55.#58       // java/lang/String.lastIndexOf:(I)I
   #60 = Utf8               scala/collection/StringOps$
   #61 = Class              #60           // scala/collection/StringOps$
   #62 = Utf8               Lscala/collection/StringOps$;
   #63 = NameAndType        #38:#62       // MODULE$:Lscala/collection/StringOps$;
   #64 = Fieldref           #61.#63       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #65 = Utf8               scala/Predef$
   #66 = Class              #65           // scala/Predef$
   #67 = Utf8               Lscala/Predef$;
   #68 = NameAndType        #38:#67       // MODULE$:Lscala/Predef$;
   #69 = Fieldref           #66.#68       // scala/Predef$.MODULE$:Lscala/Predef$;
   #70 = Utf8               last
   #71 = NameAndType        #70:#28       // last:()Ljava/lang/String;
   #72 = InterfaceMethodref #2.#71        // os/BasePathImpl.last:()Ljava/lang/String;
   #73 = Utf8               augmentString
   #74 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #75 = NameAndType        #73:#74       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #76 = Methodref          #66.#75       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #77 = Utf8               length
   #78 = Utf8               ()I
   #79 = NameAndType        #77:#78       // length:()I
   #80 = Methodref          #55.#79       // java/lang/String.length:()I
   #81 = Utf8               slice$extension
   #82 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;
   #83 = NameAndType        #81:#82       // slice$extension:(Ljava/lang/String;II)Ljava/lang/String;
   #84 = Methodref          #61.#83       // scala/collection/StringOps$.slice$extension:(Ljava/lang/String;II)Ljava/lang/String;
   #85 = Utf8               scala/MatchError
   #86 = Class              #85           // scala/MatchError
   #87 = Utf8               <init>
   #88 = Utf8               (Ljava/lang/Object;)V
   #89 = NameAndType        #87:#88       // "<init>":(Ljava/lang/Object;)V
   #90 = Methodref          #86.#89       // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #91 = Utf8               li
   #92 = Utf8               I
   #93 = Utf8               lastSegment
   #94 = Utf8               Ljava/lang/String;
   #95 = Utf8               this
   #96 = Utf8               scala/Option
   #97 = Class              #96           // scala/Option
   #98 = Utf8               baseName$
   #99 = Utf8               baseName
  #100 = NameAndType        #99:#28       // baseName:()Ljava/lang/String;
  #101 = InterfaceMethodref #2.#100       // os/BasePathImpl.baseName:()Ljava/lang/String;
  #102 = Utf8               last$
  #103 = MethodType         #51           //  ()Ljava/lang/Object;
  #104 = Utf8               $anonfun$last$1
  #105 = Utf8               ()Lscala/runtime/Nothing$;
  #106 = NameAndType        #104:#105     // $anonfun$last$1:()Lscala/runtime/Nothing$;
  #107 = InterfaceMethodref #2.#106       // os/BasePathImpl.$anonfun$last$1:()Lscala/runtime/Nothing$;
  #108 = MethodHandle       6:#107        // REF_invokeStatic os/BasePathImpl.$anonfun$last$1:()Lscala/runtime/Nothing$;
  #109 = MethodType         #105          //  ()Lscala/runtime/Nothing$;
  #110 = Integer            5
  #111 = Integer            1
  #112 = Utf8               java/lang/invoke/LambdaMetafactory
  #113 = Class              #112          // java/lang/invoke/LambdaMetafactory
  #114 = Utf8               altMetafactory
  #115 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #116 = NameAndType        #114:#115     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #117 = Methodref          #113.#116     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #118 = MethodHandle       6:#117        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #119 = Utf8               apply
  #120 = Utf8               ()Lscala/Function0;
  #121 = NameAndType        #119:#120     // apply:()Lscala/Function0;
  #122 = InvokeDynamic      #0:#121       // #0:apply:()Lscala/Function0;
  #123 = Utf8               getOrElse
  #124 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #125 = NameAndType        #123:#124     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #126 = Methodref          #97.#125      // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #127 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
  #128 = Utf8               ()V
  #129 = NameAndType        #87:#128      // "<init>":()V
  #130 = Methodref          #17.#129      // os/PathError$LastOnEmptyPath."<init>":()V
  #131 = Utf8               $init$
  #132 = Utf8               (Los/BasePathImpl;)V
  #133 = Utf8               $deserializeLambda$
  #134 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #135 = Utf8               scala/runtime/LambdaDeserialize
  #136 = Class              #135          // scala/runtime/LambdaDeserialize
  #137 = Utf8               bootstrap
  #138 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #139 = NameAndType        #137:#138     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #140 = Methodref          #136.#139     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #141 = MethodHandle       6:#140        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #142 = Utf8               lambdaDeserialize
  #143 = NameAndType        #142:#134     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #144 = InvokeDynamic      #1:#143       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #145 = Utf8               MethodParameters
  #146 = Utf8               Code
  #147 = Utf8               LineNumberTable
  #148 = Utf8               LocalVariableTable
  #149 = Utf8               StackMapTable
  #150 = Utf8               Signature
  #151 = Utf8               InnerClasses
  #152 = Utf8               SourceFile
  #153 = Utf8               RuntimeVisibleAnnotations
  #154 = Utf8               BootstrapMethods
  #155 = Utf8               ScalaInlineInfo
  #156 = Utf8               ScalaSig
{
  public abstract os.BasePath $div(os.PathChunk);
    descriptor: (Los/PathChunk;)Los/BasePath;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      chunk                          final

  public static java.lang.String ext$(os.BasePathImpl);
    descriptor: (Los/BasePathImpl;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #30                 // InterfaceMethod ext:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Los/BasePathImpl;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.String ext();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=1
         0: aload_0
         1: invokeinterface #35,  1           // InterfaceMethod lastOpt:()Lscala/Option;
         6: astore_2
         7: getstatic     #41                 // Field scala/None$.MODULE$:Lscala/None$;
        10: aload_2
        11: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        14: ifeq          23
        17: ldc           #47                 // String
        19: astore_1
        20: goto          114
        23: goto          26
        26: aload_2
        27: instanceof    #49                 // class scala/Some
        30: ifeq          102
        33: aload_2
        34: checkcast     #49                 // class scala/Some
        37: astore_3
        38: aload_3
        39: invokevirtual #53                 // Method scala/Some.value:()Ljava/lang/Object;
        42: checkcast     #55                 // class java/lang/String
        45: astore        4
        47: aload         4
        49: bipush        46
        51: invokevirtual #59                 // Method java/lang/String.lastIndexOf:(I)I
        54: istore        5
        56: iload         5
        58: iconst_m1
        59: if_icmpne     67
        62: ldc           #47                 // String
        64: goto          98
        67: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        70: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        73: aload_0
        74: invokeinterface #72,  1           // InterfaceMethod last:()Ljava/lang/String;
        79: invokevirtual #76                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        82: iload         5
        84: iconst_1
        85: iadd
        86: aload_0
        87: invokeinterface #72,  1           // InterfaceMethod last:()Ljava/lang/String;
        92: invokevirtual #80                 // Method java/lang/String.length:()I
        95: invokevirtual #84                 // Method scala/collection/StringOps$.slice$extension:(Ljava/lang/String;II)Ljava/lang/String;
        98: astore_1
        99: goto          114
       102: goto          105
       105: new           #86                 // class scala/MatchError
       108: dup
       109: aload_2
       110: invokespecial #90                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       113: athrow
       114: aload_1
       115: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 40
          locals = [ class scala/Some, class java/lang/String, int ]
        frame_type = 94 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class os/BasePathImpl, class java/lang/String, class scala/Option ]
          stack = []
      LineNumberTable:
        line 185: 0
        line 186: 7
        line 187: 26
        line 188: 47
        line 189: 56
        line 190: 70
        line 187: 102
        line 185: 105
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           56      42     5    li   I
           47      55     4 lastSegment   Ljava/lang/String;
            0     116     0  this   Los/BasePathImpl;

  public static java.lang.String baseName$(os.BasePathImpl);
    descriptor: (Los/BasePathImpl;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #101                // InterfaceMethod baseName:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 195: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Los/BasePathImpl;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.String baseName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #72,  1           // InterfaceMethod last:()Ljava/lang/String;
         6: bipush        46
         8: invokevirtual #59                 // Method java/lang/String.lastIndexOf:(I)I
        11: istore_1
        12: iload_1
        13: iconst_m1
        14: if_icmpne     26
        17: aload_0
        18: invokeinterface #72,  1           // InterfaceMethod last:()Ljava/lang/String;
        23: goto          46
        26: getstatic     #64                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        29: getstatic     #69                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        32: aload_0
        33: invokeinterface #72,  1           // InterfaceMethod last:()Ljava/lang/String;
        38: invokevirtual #76                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        41: iconst_0
        42: iload_1
        43: invokevirtual #84                 // Method scala/collection/StringOps$.slice$extension:(Ljava/lang/String;II)Ljava/lang/String;
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
        frame_type = 83 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 196: 0
        line 197: 12
        line 198: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      34     1    li   I
            0      47     0  this   Los/BasePathImpl;

  public static java.lang.String last$(os.BasePathImpl);
    descriptor: (Los/BasePathImpl;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #72                 // InterfaceMethod last:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Los/BasePathImpl;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.String last();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #35,  1           // InterfaceMethod lastOpt:()Lscala/Option;
         6: invokedynamic #122,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
        11: invokevirtual #126                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        14: checkcast     #55                 // class java/lang/String
        17: areturn
      LineNumberTable:
        line 201: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Los/BasePathImpl;

  public abstract scala.Option<java.lang.String> lastOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #127                         // ()Lscala/Option<Ljava/lang/String;>;

  public static scala.runtime.Nothing$ $anonfun$last$1();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #17                 // class os/PathError$LastOnEmptyPath
         3: dup
         4: invokespecial #130                // Method os/PathError$LastOnEmptyPath."<init>":()V
         7: athrow
      LineNumberTable:
        line 201: 0

  public static void $init$(os.BasePathImpl);
    descriptor: (Los/BasePathImpl;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Los/BasePathImpl;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #144,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #17 of #19;          // LastOnEmptyPath=class os/PathError$LastOnEmptyPath of class os/PathError
SourceFile: "Path.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i2qa\u0002\u0005\u0011\u0002\u0007\u00051\u0002C\u0003\u0017\u0001\u0011\u0005q\u0003C\u0003\u001c\u0001\u0019\u0005A\u0004C\u0003\'\u0001\u0011\u0005q\u0005C\u00034\u0001\u0011\u0005s\u0005C\u00035\u0001\u0011\u0005q\u0005C\u00036\u0001\u0019\u0005aG\u0001\u0007CCN,\u0007+\u0019;i\u00136\u0004HNC\u0001\n\u0003\ty7o\u0001\u0001\u0014\u0007\u0001a!\u0003\u0005\u0002\u000e!5\taBC\u0001\u0010\u0003\u0015\u00198-\u00197b\u0013\t\tbB\u0001\u0004B]f\u0014VM\u001a\t\u0003\'Qi\u0011\u0001C\u0005\u0003+!\u0011\u0001BQ1tKB\u000bG\u000f[\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0003a\u0001\"!D\r\n\u0005iq!\u0001B+oSR\fA\u0001\n3jmR\u0011Q$\t\t\u0003=}i\u0011\u0001A\u0005\u0003AQ\u0011\u0001\u0002\u00165jgRK\b/\u001a\u0005\u0006E\t\u0001\raI\u0001\u0006G\",hn\u001b\t\u0003\'\u0011J!!\n\u0005\u0003\u0013A\u000bG\u000f[\"ik:\\\u0017aA3yiV\t\u0001\u0006\u0005\u0002*a9\u0011!F\f\t\u0003W9i\u0011\u0001\f\u0006\u0003[)\ta\u0001\u0010:p_Rt\u0014BA\u0018\u000f\u0003\u0019\u0001&/\u001a3fM&\u0011\u0011G\r\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0005=r\u0011\u0001\u00032bg\u0016t\u0015-\\3\u0002\t1\f7\u000f^\u0001\bY\u0006\u001cHo\u00149u+\u00059\u0004cA\u00079Q%\u0011\u0011H\u0004\u0002\u0007\u001fB$\u0018n\u001c8"
    )
BootstrapMethods:
  0: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #103 ()Ljava/lang/Object;
      #108 REF_invokeStatic os/BasePathImpl.$anonfun$last$1:()Lscala/runtime/Nothing$;
      #109 ()Lscala/runtime/Nothing$;
      #110 5
      #111 1
      #109 ()Lscala/runtime/Nothing$;
  1: #141 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #108 REF_invokeStatic os/BasePathImpl.$anonfun$last$1:()Lscala/runtime/Nothing$;
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 00 00 0A 00 68 00 69 01 00 15 00 16 00 00 83
   00 84 01 00 63 00 1C 00 00 62 00 19 01 00 1B 00
   1C 00 00 18 00 19 01 00 46 00 1C 00 00 66 00 19
   01 00 20 00 21 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
