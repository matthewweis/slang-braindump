Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/SeqOps$PermutationsItr.class
  Last modified May 29, 2022; size 7346 bytes
  SHA-256 checksum 0dbdb649c675c8d394ebc7df6cf7a7fad0546464676da4411e66cea72f91a182
  Compiled from "Seq.scala"
public class scala.collection.SeqOps$PermutationsItr extends scala.collection.AbstractIterator<C>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/SeqOps$PermutationsItr
  super_class: #5                         // scala/collection/AbstractIterator
  interfaces: 0, fields: 5, methods: 11, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/SeqOps$PermutationsItr
    #2 = Class              #1            // scala/collection/SeqOps$PermutationsItr
    #3 = Utf8               Lscala/collection/AbstractIterator<TC;>;
    #4 = Utf8               scala/collection/AbstractIterator
    #5 = Class              #4            // scala/collection/AbstractIterator
    #6 = Utf8               Seq.scala
    #7 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #8 = Class              #7            // java/lang/invoke/MethodHandles$Lookup
    #9 = Utf8               java/lang/invoke/MethodHandles
   #10 = Class              #9            // java/lang/invoke/MethodHandles
   #11 = Utf8               Lookup
   #12 = Utf8               scala/collection/IterableFactory$ToFactory
   #13 = Class              #12           // scala/collection/IterableFactory$ToFactory
   #14 = Utf8               scala/collection/IterableFactory
   #15 = Class              #14           // scala/collection/IterableFactory
   #16 = Utf8               ToFactory
   #17 = Utf8               scala/collection/SeqOps
   #18 = Class              #17           // scala/collection/SeqOps
   #19 = Utf8               PermutationsItr
   #20 = Utf8               scala/math/Ordering$Int$
   #21 = Class              #20           // scala/math/Ordering$Int$
   #22 = Utf8               scala/math/Ordering
   #23 = Class              #22           // scala/math/Ordering
   #24 = Utf8               Int$
   #25 = Utf8               scala/reflect/ManifestFactory$IntManifest
   #26 = Class              #25           // scala/reflect/ManifestFactory$IntManifest
   #27 = Utf8               scala/reflect/ManifestFactory
   #28 = Class              #27           // scala/reflect/ManifestFactory
   #29 = Utf8               IntManifest
   #30 = Utf8               x$4
   #31 = Utf8               Lscala/Tuple2;
   #32 = Utf8               elms
   #33 = Utf8               Lscala/collection/mutable/ArrayBuffer;
   #34 = Utf8               Lscala/collection/mutable/ArrayBuffer<TA;>;
   #35 = Utf8               idxs
   #36 = Utf8               [I
   #37 = Utf8               _hasNext
   #38 = Utf8               Z
   #39 = Utf8               $outer
   #40 = Utf8               Lscala/collection/SeqOps;
   #41 = Utf8               hasNext
   #42 = Utf8               ()Z
   #43 = NameAndType        #37:#38       // _hasNext:Z
   #44 = Fieldref           #2.#43        // scala/collection/SeqOps$PermutationsItr._hasNext:Z
   #45 = Utf8               this
   #46 = Utf8               Lscala/collection/SeqOps$PermutationsItr;
   #47 = Utf8               next
   #48 = Utf8               ()Ljava/lang/Object;
   #49 = Utf8               ()TC;^Ljava/util/NoSuchElementException;
   #50 = Utf8               java/util/NoSuchElementException
   #51 = Class              #50           // java/util/NoSuchElementException
   #52 = NameAndType        #41:#42       // hasNext:()Z
   #53 = Methodref          #2.#52        // scala/collection/SeqOps$PermutationsItr.hasNext:()Z
   #54 = Utf8               scala/collection/Iterator$
   #55 = Class              #54           // scala/collection/Iterator$
   #56 = Utf8               MODULE$
   #57 = Utf8               Lscala/collection/Iterator$;
   #58 = NameAndType        #56:#57       // MODULE$:Lscala/collection/Iterator$;
   #59 = Fieldref           #55.#58       // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
   #60 = Utf8               scala$collection$Iterator$$_empty
   #61 = Utf8               Lscala/collection/Iterator;
   #62 = NameAndType        #60:#61       // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #63 = Fieldref           #55.#62       // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #64 = Utf8               scala/collection/Iterator
   #65 = Class              #64           // scala/collection/Iterator
   #66 = NameAndType        #47:#48       // next:()Ljava/lang/Object;
   #67 = InterfaceMethodref #65.#66       // scala/collection/Iterator.next:()Ljava/lang/Object;
   #68 = Utf8               scala/collection/mutable/ArrayBuffer
   #69 = Class              #68           // scala/collection/mutable/ArrayBuffer
   #70 = NameAndType        #32:#33       // elms:Lscala/collection/mutable/ArrayBuffer;
   #71 = Fieldref           #2.#70        // scala/collection/SeqOps$PermutationsItr.elms:Lscala/collection/mutable/ArrayBuffer;
   #72 = Utf8               length
   #73 = Utf8               ()I
   #74 = NameAndType        #72:#73       // length:()I
   #75 = InterfaceMethodref #18.#74       // scala/collection/SeqOps.length:()I
   #76 = Utf8               <init>
   #77 = Utf8               (I)V
   #78 = NameAndType        #76:#77       // "<init>":(I)V
   #79 = Methodref          #69.#78       // scala/collection/mutable/ArrayBuffer."<init>":(I)V
   #80 = Utf8               scala/collection/mutable/Growable
   #81 = Class              #80           // scala/collection/mutable/Growable
   #82 = Utf8               addAll
   #83 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #84 = NameAndType        #82:#83       // addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #85 = InterfaceMethodref #81.#84       // scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
   #86 = Utf8               scala$collection$SeqOps$PermutationsItr$$$outer
   #87 = Utf8               ()Lscala/collection/SeqOps;
   #88 = NameAndType        #86:#87       // scala$collection$SeqOps$PermutationsItr$$$outer:()Lscala/collection/SeqOps;
   #89 = Methodref          #2.#88        // scala/collection/SeqOps$PermutationsItr.scala$collection$SeqOps$PermutationsItr$$$outer:()Lscala/collection/SeqOps;
   #90 = Utf8               newSpecificBuilder
   #91 = Utf8               ()Lscala/collection/mutable/Builder;
   #92 = NameAndType        #90:#91       // newSpecificBuilder:()Lscala/collection/mutable/Builder;
   #93 = InterfaceMethodref #18.#92       // scala/collection/SeqOps.newSpecificBuilder:()Lscala/collection/mutable/Builder;
   #94 = Utf8               scala/collection/mutable/Builder
   #95 = Class              #94           // scala/collection/mutable/Builder
   #96 = Utf8               result
   #97 = NameAndType        #96:#48       // result:()Ljava/lang/Object;
   #98 = InterfaceMethodref #95.#97       // scala/collection/mutable/Builder.result:()Ljava/lang/Object;
   #99 = NameAndType        #35:#36       // idxs:[I
  #100 = Fieldref           #2.#99        // scala/collection/SeqOps$PermutationsItr.idxs:[I
  #101 = Utf8               swap
  #102 = Utf8               (II)V
  #103 = NameAndType        #101:#102     // swap:(II)V
  #104 = Methodref          #2.#103       // scala/collection/SeqOps$PermutationsItr.swap:(II)V
  #105 = Utf8               j
  #106 = Utf8               I
  #107 = Utf8               len
  #108 = Utf8               k
  #109 = Utf8               forcedElms
  #110 = Utf8               Ljava/lang/Object;
  #111 = Utf8               i
  #112 = Utf8               java/lang/Object
  #113 = Class              #112          // java/lang/Object
  #114 = Utf8               apply
  #115 = Utf8               (I)Ljava/lang/Object;
  #116 = NameAndType        #114:#115     // apply:(I)Ljava/lang/Object;
  #117 = Methodref          #69.#116      // scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
  #118 = Utf8               update
  #119 = Utf8               (ILjava/lang/Object;)V
  #120 = NameAndType        #118:#119     // update:(ILjava/lang/Object;)V
  #121 = Methodref          #69.#120      // scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
  #122 = Utf8               tmpI
  #123 = Utf8               tmpE
  #124 = Utf8               init
  #125 = Utf8               ()Lscala/Tuple2;
  #126 = Utf8               ()Lscala/Tuple2<Lscala/collection/mutable/ArrayBuffer<TA;>;[I>;
  #127 = Utf8               scala/collection/mutable/HashMap$
  #128 = Class              #127          // scala/collection/mutable/HashMap$
  #129 = Utf8               Lscala/collection/mutable/HashMap$;
  #130 = NameAndType        #56:#129      // MODULE$:Lscala/collection/mutable/HashMap$;
  #131 = Fieldref           #128.#130     // scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
  #132 = Utf8               scala/collection/immutable/Nil$
  #133 = Class              #132          // scala/collection/immutable/Nil$
  #134 = Utf8               Lscala/collection/immutable/Nil$;
  #135 = NameAndType        #56:#134      // MODULE$:Lscala/collection/immutable/Nil$;
  #136 = Fieldref           #133.#135     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #137 = Utf8               from
  #138 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
  #139 = NameAndType        #137:#138     // from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
  #140 = Methodref          #128.#139     // scala/collection/mutable/HashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
  #141 = Utf8               scala/collection/Seq
  #142 = Class              #141          // scala/collection/Seq
  #143 = Utf8               toSeq
  #144 = Utf8               ()Lscala/collection/immutable/Seq;
  #145 = NameAndType        #143:#144     // toSeq:()Lscala/collection/immutable/Seq;
  #146 = InterfaceMethodref #18.#145      // scala/collection/SeqOps.toSeq:()Lscala/collection/immutable/Seq;
  #147 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #148 = MethodType         #147          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #149 = Utf8               $anonfun$init$1
  #150 = Utf8               (Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #151 = NameAndType        #149:#150     // $anonfun$init$1:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #152 = Methodref          #2.#151       // scala/collection/SeqOps$PermutationsItr.$anonfun$init$1:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #153 = MethodHandle       6:#152        // REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$1:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
  #154 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
  #155 = MethodType         #154          //  (Ljava/lang/Object;)Lscala/Tuple2;
  #156 = Integer            5
  #157 = Integer            1
  #158 = Utf8               java/lang/invoke/LambdaMetafactory
  #159 = Class              #158          // java/lang/invoke/LambdaMetafactory
  #160 = Utf8               altMetafactory
  #161 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #162 = NameAndType        #160:#161     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #163 = Methodref          #159.#162     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #164 = MethodHandle       6:#163        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #165 = Utf8               (Lscala/collection/mutable/HashMap;)Lscala/Function1;
  #166 = NameAndType        #114:#165     // apply:(Lscala/collection/mutable/HashMap;)Lscala/Function1;
  #167 = InvokeDynamic      #0:#166       // #0:apply:(Lscala/collection/mutable/HashMap;)Lscala/Function1;
  #168 = Utf8               map
  #169 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #170 = NameAndType        #168:#169     // map:(Lscala/Function1;)Ljava/lang/Object;
  #171 = InterfaceMethodref #142.#170     // scala/collection/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #172 = Utf8               $anonfun$init$3$adapted
  #173 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #174 = NameAndType        #172:#173     // $anonfun$init$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #175 = Methodref          #2.#174       // scala/collection/SeqOps$PermutationsItr.$anonfun$init$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #176 = MethodHandle       6:#175        // REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #177 = MethodType         #173          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #178 = Utf8               ()Lscala/Function1;
  #179 = NameAndType        #114:#178     // apply:()Lscala/Function1;
  #180 = InvokeDynamic      #1:#179       // #1:apply:()Lscala/Function1;
  #181 = Utf8               Lscala/math/Ordering$Int$;
  #182 = NameAndType        #56:#181      // MODULE$:Lscala/math/Ordering$Int$;
  #183 = Fieldref           #21.#182      // scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
  #184 = Utf8               sortBy
  #185 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #186 = NameAndType        #184:#185     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #187 = InterfaceMethodref #18.#186      // scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #188 = Utf8               scala/collection/IterableOps
  #189 = Class              #188          // scala/collection/IterableOps
  #190 = Utf8               scala/$less$colon$less$
  #191 = Class              #190          // scala/$less$colon$less$
  #192 = Utf8               Lscala/$less$colon$less$;
  #193 = NameAndType        #56:#192      // MODULE$:Lscala/$less$colon$less$;
  #194 = Fieldref           #191.#193     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #195 = Utf8               refl
  #196 = Utf8               ()Lscala/$eq$colon$eq;
  #197 = NameAndType        #195:#196     // refl:()Lscala/$eq$colon$eq;
  #198 = Methodref          #191.#197     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #199 = Utf8               unzip
  #200 = Utf8               (Lscala/Function1;)Lscala/Tuple2;
  #201 = NameAndType        #199:#200     // unzip:(Lscala/Function1;)Lscala/Tuple2;
  #202 = InterfaceMethodref #189.#201     // scala/collection/IterableOps.unzip:(Lscala/Function1;)Lscala/Tuple2;
  #203 = Utf8               scala/Tuple2
  #204 = Class              #203          // scala/Tuple2
  #205 = Utf8               _1
  #206 = NameAndType        #205:#48      // _1:()Ljava/lang/Object;
  #207 = Methodref          #204.#206     // scala/Tuple2._1:()Ljava/lang/Object;
  #208 = Utf8               _2
  #209 = NameAndType        #208:#48      // _2:()Ljava/lang/Object;
  #210 = Methodref          #204.#209     // scala/Tuple2._2:()Ljava/lang/Object;
  #211 = Utf8               scala/MatchError
  #212 = Class              #211          // scala/MatchError
  #213 = Utf8               (Ljava/lang/Object;)V
  #214 = NameAndType        #76:#213      // "<init>":(Ljava/lang/Object;)V
  #215 = Methodref          #212.#214     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #216 = Utf8               scala/collection/IterableFactory$
  #217 = Class              #216          // scala/collection/IterableFactory$
  #218 = Utf8               Lscala/collection/IterableFactory$;
  #219 = NameAndType        #56:#218      // MODULE$:Lscala/collection/IterableFactory$;
  #220 = Fieldref           #217.#219     // scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
  #221 = Utf8               scala/collection/mutable/ArrayBuffer$
  #222 = Class              #221          // scala/collection/mutable/ArrayBuffer$
  #223 = Utf8               Lscala/collection/mutable/ArrayBuffer$;
  #224 = NameAndType        #56:#223      // MODULE$:Lscala/collection/mutable/ArrayBuffer$;
  #225 = Fieldref           #222.#224     // scala/collection/mutable/ArrayBuffer$.MODULE$:Lscala/collection/mutable/ArrayBuffer$;
  #226 = Utf8               (Lscala/collection/IterableFactory;)V
  #227 = NameAndType        #76:#226      // "<init>":(Lscala/collection/IterableFactory;)V
  #228 = Methodref          #13.#227      // scala/collection/IterableFactory$ToFactory."<init>":(Lscala/collection/IterableFactory;)V
  #229 = Utf8               to
  #230 = Utf8               (Lscala/collection/Factory;)Ljava/lang/Object;
  #231 = NameAndType        #229:#230     // to:(Lscala/collection/Factory;)Ljava/lang/Object;
  #232 = InterfaceMethodref #142.#231     // scala/collection/Seq.to:(Lscala/collection/Factory;)Ljava/lang/Object;
  #233 = Utf8               scala/reflect/ClassTag$
  #234 = Class              #233          // scala/reflect/ClassTag$
  #235 = Utf8               Lscala/reflect/ClassTag$;
  #236 = NameAndType        #56:#235      // MODULE$:Lscala/reflect/ClassTag$;
  #237 = Fieldref           #234.#236     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #238 = Utf8               Int
  #239 = Utf8               ()Lscala/reflect/ManifestFactory$IntManifest;
  #240 = NameAndType        #238:#239     // Int:()Lscala/reflect/ManifestFactory$IntManifest;
  #241 = Methodref          #234.#240     // scala/reflect/ClassTag$.Int:()Lscala/reflect/ManifestFactory$IntManifest;
  #242 = Utf8               toArray
  #243 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #244 = NameAndType        #242:#243     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #245 = InterfaceMethodref #142.#244     // scala/collection/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #246 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #247 = NameAndType        #76:#246      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #248 = Methodref          #204.#247     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #249 = Utf8               es
  #250 = Utf8               Lscala/collection/Seq;
  #251 = Utf8               is
  #252 = Utf8               m
  #253 = Utf8               Lscala/collection/mutable/HashMap;
  #254 = Utf8               scala$collection$SeqOps$$toGenericSeq_this
  #255 = Utf8               apply_this
  #256 = Utf8               apply_elems
  #257 = Utf8               Lscala/collection/immutable/Seq;
  #258 = Utf8               toFactory_factory
  #259 = Utf8               Lscala/collection/IterableFactory;
  #260 = Utf8               scala/collection/mutable/HashMap
  #261 = Class              #260          // scala/collection/mutable/HashMap
  #262 = NameAndType        #39:#40       // $outer:Lscala/collection/SeqOps;
  #263 = Fieldref           #2.#262       // scala/collection/SeqOps$PermutationsItr.$outer:Lscala/collection/SeqOps;
  #264 = Utf8               $anonfun$init$2
  #265 = Utf8               (Lscala/collection/mutable/HashMap;)I
  #266 = Utf8               m$1
  #267 = Utf8               size
  #268 = NameAndType        #267:#73      // size:()I
  #269 = Methodref          #261.#268     // scala/collection/mutable/HashMap.size:()I
  #270 = Utf8               e
  #271 = MethodType         #73           //  ()I
  #272 = NameAndType        #264:#265     // $anonfun$init$2:(Lscala/collection/mutable/HashMap;)I
  #273 = Methodref          #2.#272       // scala/collection/SeqOps$PermutationsItr.$anonfun$init$2:(Lscala/collection/mutable/HashMap;)I
  #274 = MethodHandle       6:#273        // REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$2:(Lscala/collection/mutable/HashMap;)I
  #275 = Utf8               apply$mcI$sp
  #276 = Utf8               (Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #277 = NameAndType        #275:#276     // apply$mcI$sp:(Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #278 = InvokeDynamic      #2:#277       // #2:apply$mcI$sp:(Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
  #279 = Utf8               getOrElseUpdate
  #280 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #281 = NameAndType        #279:#280     // getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #282 = Methodref          #261.#281     // scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #283 = Utf8               $anonfun$init$3
  #284 = Utf8               (Lscala/Tuple2;)I
  #285 = Utf8               x$5
  #286 = Utf8               _2$mcI$sp
  #287 = NameAndType        #286:#73      // _2$mcI$sp:()I
  #288 = Methodref          #204.#287     // scala/Tuple2._2$mcI$sp:()I
  #289 = Utf8               (Lscala/collection/SeqOps;)V
  #290 = Utf8               ()V
  #291 = NameAndType        #76:#290      // "<init>":()V
  #292 = Methodref          #5.#291       // scala/collection/AbstractIterator."<init>":()V
  #293 = NameAndType        #124:#125     // init:()Lscala/Tuple2;
  #294 = Methodref          #2.#293       // scala/collection/SeqOps$PermutationsItr.init:()Lscala/Tuple2;
  #295 = Class              #36           // "[I"
  #296 = NameAndType        #30:#31       // x$4:Lscala/Tuple2;
  #297 = Fieldref           #2.#296       // scala/collection/SeqOps$PermutationsItr.x$4:Lscala/Tuple2;
  #298 = NameAndType        #283:#284     // $anonfun$init$3:(Lscala/Tuple2;)I
  #299 = Methodref          #2.#298       // scala/collection/SeqOps$PermutationsItr.$anonfun$init$3:(Lscala/Tuple2;)I
  #300 = Utf8               scala/runtime/BoxesRunTime
  #301 = Class              #300          // scala/runtime/BoxesRunTime
  #302 = Utf8               boxToInteger
  #303 = Utf8               (I)Ljava/lang/Integer;
  #304 = NameAndType        #302:#303     // boxToInteger:(I)Ljava/lang/Integer;
  #305 = Methodref          #301.#304     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #306 = Utf8               $deserializeLambda$
  #307 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #308 = Utf8               scala/runtime/LambdaDeserialize
  #309 = Class              #308          // scala/runtime/LambdaDeserialize
  #310 = Utf8               bootstrap
  #311 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #312 = NameAndType        #310:#311     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #313 = Methodref          #309.#312     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #314 = MethodHandle       6:#313        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #315 = Utf8               lambdaDeserialize
  #316 = NameAndType        #315:#307     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #317 = InvokeDynamic      #3:#316       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #318 = Utf8               Signature
  #319 = Utf8               Code
  #320 = Utf8               LineNumberTable
  #321 = Utf8               LocalVariableTable
  #322 = Utf8               StackMapTable
  #323 = Utf8               Exceptions
  #324 = Utf8               MethodParameters
  #325 = Utf8               InnerClasses
  #326 = Utf8               SourceFile
  #327 = Utf8               BootstrapMethods
  #328 = Utf8               ScalaInlineInfo
  #329 = Utf8               Scala
{
  private final scala.Tuple2 x$4;
    descriptor: Lscala/Tuple2;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.collection.mutable.ArrayBuffer<A> elms;
    descriptor: Lscala/collection/mutable/ArrayBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #34                          // Lscala/collection/mutable/ArrayBuffer<TA;>;

  private final int[] idxs;
    descriptor: [I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private boolean _hasNext;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final scala.collection.SeqOps $outer;
    descriptor: Lscala/collection/SeqOps;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #44                 // Field _hasNext:Z
         4: ireturn
      LineNumberTable:
        line 565: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SeqOps$PermutationsItr;

  public C next() throws java/util/NoSuchElementException;
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method hasNext:()Z
         4: ifne          20
         7: getstatic     #59                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #63                 // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: invokeinterface #67,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        19: pop
        20: new           #69                 // class scala/collection/mutable/ArrayBuffer
        23: dup
        24: aload_0
        25: getfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        28: dup
        29: ifnonnull     34
        32: aconst_null
        33: athrow
        34: invokeinterface #75,  1           // InterfaceMethod scala/collection/SeqOps.length:()I
        39: invokespecial #79                 // Method scala/collection/mutable/ArrayBuffer."<init>":(I)V
        42: aload_0
        43: getfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        46: invokeinterface #85,  2           // InterfaceMethod scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        51: checkcast     #69                 // class scala/collection/mutable/ArrayBuffer
        54: astore_1
        55: aload_0
        56: invokevirtual #89                 // Method scala$collection$SeqOps$PermutationsItr$$$outer:()Lscala/collection/SeqOps;
        59: invokeinterface #93,  1           // InterfaceMethod scala/collection/SeqOps.newSpecificBuilder:()Lscala/collection/mutable/Builder;
        64: dup
        65: ifnonnull     70
        68: aconst_null
        69: athrow
        70: aload_1
        71: invokeinterface #85,  2           // InterfaceMethod scala/collection/mutable/Growable.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/Growable;
        76: checkcast     #95                 // class scala/collection/mutable/Builder
        79: invokeinterface #98,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
        84: astore_2
        85: aload_0
        86: getfield      #100                // Field idxs:[I
        89: arraylength
        90: iconst_2
        91: isub
        92: istore_3
        93: iload_3
        94: iconst_0
        95: if_icmplt     121
        98: aload_0
        99: getfield      #100                // Field idxs:[I
       102: iload_3
       103: iaload
       104: aload_0
       105: getfield      #100                // Field idxs:[I
       108: iload_3
       109: iconst_1
       110: iadd
       111: iaload
       112: if_icmplt     121
       115: iinc          3, -1
       118: goto          93
       121: iload_3
       122: iconst_0
       123: if_icmpge     134
       126: aload_0
       127: iconst_0
       128: putfield      #44                 // Field _hasNext:Z
       131: goto          215
       134: aload_0
       135: getfield      #100                // Field idxs:[I
       138: arraylength
       139: iconst_1
       140: isub
       141: istore        4
       143: aload_0
       144: getfield      #100                // Field idxs:[I
       147: iload         4
       149: iaload
       150: aload_0
       151: getfield      #100                // Field idxs:[I
       154: iload_3
       155: iaload
       156: if_icmpgt     165
       159: iinc          4, -1
       162: goto          143
       165: aload_0
       166: iload_3
       167: iload         4
       169: invokespecial #104                // Method swap:(II)V
       172: aload_0
       173: getfield      #100                // Field idxs:[I
       176: arraylength
       177: iload_3
       178: isub
       179: iconst_2
       180: idiv
       181: istore        5
       183: iconst_1
       184: istore        6
       186: iload         6
       188: iload         5
       190: if_icmpgt     215
       193: aload_0
       194: iload_3
       195: iload         6
       197: iadd
       198: aload_0
       199: getfield      #100                // Field idxs:[I
       202: arraylength
       203: iload         6
       205: isub
       206: invokespecial #104                // Method swap:(II)V
       209: iinc          6, 1
       212: goto          186
       215: aload_2
       216: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 20 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/SeqOps$PermutationsItr ]
          stack = [ uninitialized 20, uninitialized 20, class scala/collection/mutable/ArrayBuffer ]
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/mutable/ArrayBuffer ]
          stack = [ class scala/collection/mutable/Builder ]
        frame_type = 253 /* append */
          offset_delta = 22
          locals = [ class java/lang/Object, int ]
        frame_type = 27 /* same */
        frame_type = 12 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ int ]
        frame_type = 21 /* same */
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ int, int ]
        frame_type = 248 /* chop */
          offset_delta = 28
      LineNumberTable:
        line 568: 0
        line 569: 7
        line 571: 20
        line 200: 34
        line 571: 39
        line 572: 55
        line 573: 85
        line 574: 93
        line 575: 115
        line 577: 121
        line 578: 126
        line 580: 134
        line 581: 143
        line 582: 165
        line 584: 172
        line 585: 183
        line 586: 186
        line 587: 193
        line 588: 209
        line 586: 212
        line 591: 215
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          143      72     4     j   I
          183      32     5   len   I
          186      29     6     k   I
           55     161     1 forcedElms   Lscala/collection/mutable/ArrayBuffer;
           85     131     2 result   Ljava/lang/Object;
           93     123     3     i   I
            0     217     0  this   Lscala/collection/SeqOps$PermutationsItr;
    Exceptions:
      throws java.util.NoSuchElementException
    Signature: #49                          // ()TC;^Ljava/util/NoSuchElementException;

  private void swap(int, int);
    descriptor: (II)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=5, args_size=3
         0: aload_0
         1: getfield      #100                // Field idxs:[I
         4: iload_1
         5: iaload
         6: istore_3
         7: aload_0
         8: getfield      #100                // Field idxs:[I
        11: iload_1
        12: aload_0
        13: getfield      #100                // Field idxs:[I
        16: iload_2
        17: iaload
        18: iastore
        19: aload_0
        20: getfield      #100                // Field idxs:[I
        23: iload_2
        24: iload_3
        25: iastore
        26: aload_0
        27: getfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        30: iload_1
        31: invokevirtual #117                // Method scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
        34: astore        4
        36: aload_0
        37: getfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        40: iload_1
        41: aload_0
        42: getfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        45: iload_2
        46: invokevirtual #117                // Method scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
        49: invokevirtual #121                // Method scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
        52: aload_0
        53: getfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        56: iload_2
        57: aload         4
        59: invokevirtual #121                // Method scala/collection/mutable/ArrayBuffer.update:(ILjava/lang/Object;)V
        62: return
      LineNumberTable:
        line 594: 0
        line 595: 7
        line 596: 19
        line 597: 26
        line 598: 36
        line 599: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      55     3  tmpI   I
           36      26     4  tmpE   Ljava/lang/Object;
            0      63     0  this   Lscala/collection/SeqOps$PermutationsItr;
            0      63     1     i   I
            0      63     2     j   I
    MethodParameters:
      Name                           Flags
      i                              final
      j                              final

  private scala.Tuple2<scala.collection.mutable.ArrayBuffer<A>, int[]> init();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=14, args_size=1
         0: getstatic     #131                // Field scala/collection/mutable/HashMap$.MODULE$:Lscala/collection/mutable/HashMap$;
         3: getstatic     #136                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         6: astore        8
         8: astore        7
        10: aload         7
        12: aload         8
        14: invokevirtual #140                // Method scala/collection/mutable/HashMap$.from:(Lscala/collection/IterableOnce;)Lscala/collection/mutable/HashMap;
        17: astore        13
        19: aload         13
        21: aconst_null
        22: astore        13
        24: astore        12
        26: aload         12
        28: aconst_null
        29: astore        12
        31: astore        11
        33: aload         11
        35: aconst_null
        36: astore        11
        38: astore        9
        40: aload         9
        42: aconst_null
        43: astore        7
        45: aconst_null
        46: astore        8
        48: aconst_null
        49: astore        9
        51: astore_1
        52: aload_0
        53: invokevirtual #89                 // Method scala$collection$SeqOps$PermutationsItr$$$outer:()Lscala/collection/SeqOps;
        56: dup
        57: ifnonnull     62
        60: aconst_null
        61: athrow
        62: astore        5
        64: aload         5
        66: instanceof    #142                // class scala/collection/Seq
        69: ifeq          82
        72: aload         5
        74: checkcast     #142                // class scala/collection/Seq
        77: astore        6
        79: goto          91
        82: aload         5
        84: invokeinterface #146,  1          // InterfaceMethod scala/collection/SeqOps.toSeq:()Lscala/collection/immutable/Seq;
        89: astore        6
        91: aload         6
        93: aconst_null
        94: astore        5
        96: aconst_null
        97: astore        6
        99: aload_1
       100: invokedynamic #167,  0            // InvokeDynamic #0:apply:(Lscala/collection/mutable/HashMap;)Lscala/Function1;
       105: invokeinterface #171,  2          // InterfaceMethod scala/collection/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
       110: checkcast     #18                 // class scala/collection/SeqOps
       113: invokedynamic #180,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
       118: getstatic     #183                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
       121: invokeinterface #187,  3          // InterfaceMethod scala/collection/SeqOps.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
       126: checkcast     #189                // class scala/collection/IterableOps
       129: getstatic     #194                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       132: invokevirtual #198                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       135: invokeinterface #202,  2          // InterfaceMethod scala/collection/IterableOps.unzip:(Lscala/Function1;)Lscala/Tuple2;
       140: astore_2
       141: aload_2
       142: ifnull        165
       145: aload_2
       146: invokevirtual #207                // Method scala/Tuple2._1:()Ljava/lang/Object;
       149: checkcast     #142                // class scala/collection/Seq
       152: astore_3
       153: aload_2
       154: invokevirtual #210                // Method scala/Tuple2._2:()Ljava/lang/Object;
       157: checkcast     #142                // class scala/collection/Seq
       160: astore        4
       162: goto          174
       165: new           #212                // class scala/MatchError
       168: dup
       169: aconst_null
       170: invokespecial #215                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       173: athrow
       174: new           #204                // class scala/Tuple2
       177: dup
       178: aload_3
       179: getstatic     #220                // Field scala/collection/IterableFactory$.MODULE$:Lscala/collection/IterableFactory$;
       182: pop
       183: getstatic     #225                // Field scala/collection/mutable/ArrayBuffer$.MODULE$:Lscala/collection/mutable/ArrayBuffer$;
       186: astore        10
       188: new           #13                 // class scala/collection/IterableFactory$ToFactory
       191: dup
       192: aload         10
       194: invokespecial #228                // Method scala/collection/IterableFactory$ToFactory."<init>":(Lscala/collection/IterableFactory;)V
       197: aconst_null
       198: astore        10
       200: invokeinterface #232,  2          // InterfaceMethod scala/collection/Seq.to:(Lscala/collection/Factory;)Ljava/lang/Object;
       205: aload         4
       207: getstatic     #237                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       210: invokevirtual #241                // Method scala/reflect/ClassTag$.Int:()Lscala/reflect/ManifestFactory$IntManifest;
       213: invokeinterface #245,  2          // InterfaceMethod scala/collection/Seq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
       218: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       221: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 62
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/mutable/HashMap, top, top, top, top, top, null, null, null, top, null, null, null ]
          stack = [ class scala/collection/SeqOps ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/mutable/HashMap, top, top, top, class scala/collection/SeqOps, top, null, null, null, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/mutable/HashMap, top, top, top, class scala/collection/SeqOps, class scala/collection/Seq, null, null, null, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 73
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/mutable/HashMap, class scala/Tuple2, top, top, null, null, null, null, null, top, null, null, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/mutable/HashMap, class scala/Tuple2, class scala/collection/Seq, class scala/collection/Seq, null, null, null, null, null, top, null, null, null ]
          stack = []
      LineNumberTable:
        line 603: 0
        line 604: 52
        line 416: 64
        line 417: 82
        line 415: 91
        line 604: 91
        line 606: 174
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          153      12     3    es   Lscala/collection/Seq;
          162       3     4    is   Lscala/collection/Seq;
           52     169     1     m   Lscala/collection/mutable/HashMap;
            0     222     0  this   Lscala/collection/SeqOps$PermutationsItr;
           64      27     5 scala$collection$SeqOps$$toGenericSeq_this   Lscala/collection/SeqOps;
           10      30     7 apply_this   Lscala/collection/mutable/HashMap$;
           10      30     8 apply_elems   Lscala/collection/immutable/Seq;
          188       9    10 toFactory_factory   Lscala/collection/IterableFactory;
    Signature: #126                         // ()Lscala/Tuple2<Lscala/collection/mutable/ArrayBuffer<TA;>;[I>;

  public scala.collection.SeqOps scala$collection$SeqOps$PermutationsItr$$$outer();
    descriptor: ()Lscala/collection/SeqOps;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #263                // Field $outer:Lscala/collection/SeqOps;
         4: areturn
      LineNumberTable:
        line 561: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SeqOps$PermutationsItr;

  public static final int $anonfun$init$2(scala.collection.mutable.HashMap);
    descriptor: (Lscala/collection/mutable/HashMap;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #269                // Method scala/collection/mutable/HashMap.size:()I
         4: ireturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   m$1   Lscala/collection/mutable/HashMap;
    MethodParameters:
      Name                           Flags
      m$1                            final

  public static final scala.Tuple2 $anonfun$init$1(scala.collection.mutable.HashMap, java.lang.Object);
    descriptor: (Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #204                // class scala/Tuple2
         3: dup
         4: aload_1
         5: aload_0
         6: aload_1
         7: aload_0
         8: invokedynamic #278,  0            // InvokeDynamic #2:apply$mcI$sp:(Lscala/collection/mutable/HashMap;)Lscala/runtime/java8/JFunction0$mcI$sp;
        13: invokevirtual #282                // Method scala/collection/mutable/HashMap.getOrElseUpdate:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        16: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        19: areturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0   m$1   Lscala/collection/mutable/HashMap;
            0      20     1     e   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      m$1                            final
      e                              final

  public static final int $anonfun$init$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #288                // Method scala/Tuple2._2$mcI$sp:()I
         4: ireturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public scala.collection.SeqOps$PermutationsItr(scala.collection.SeqOps);
    descriptor: (Lscala/collection/SeqOps;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #263                // Field $outer:Lscala/collection/SeqOps;
        11: aload_0
        12: invokespecial #292                // Method scala/collection/AbstractIterator."<init>":()V
        15: aload_0
        16: aload_0
        17: invokespecial #294                // Method init:()Lscala/Tuple2;
        20: astore_3
        21: aload_3
        22: ifnull        58
        25: aload_3
        26: invokevirtual #207                // Method scala/Tuple2._1:()Ljava/lang/Object;
        29: checkcast     #69                 // class scala/collection/mutable/ArrayBuffer
        32: astore        4
        34: aload_3
        35: invokevirtual #210                // Method scala/Tuple2._2:()Ljava/lang/Object;
        38: checkcast     #295                // class "[I"
        41: astore        5
        43: new           #204                // class scala/Tuple2
        46: dup
        47: aload         4
        49: aload         5
        51: invokespecial #248                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        54: astore_2
        55: goto          67
        58: new           #212                // class scala/MatchError
        61: dup
        62: aconst_null
        63: invokespecial #215                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        66: athrow
        67: aload_2
        68: putfield      #297                // Field x$4:Lscala/Tuple2;
        71: aload_0
        72: aload_0
        73: getfield      #297                // Field x$4:Lscala/Tuple2;
        76: invokevirtual #207                // Method scala/Tuple2._1:()Ljava/lang/Object;
        79: checkcast     #69                 // class scala/collection/mutable/ArrayBuffer
        82: putfield      #71                 // Field elms:Lscala/collection/mutable/ArrayBuffer;
        85: aload_0
        86: aload_0
        87: getfield      #297                // Field x$4:Lscala/Tuple2;
        90: invokevirtual #210                // Method scala/Tuple2._2:()Ljava/lang/Object;
        93: checkcast     #295                // class "[I"
        96: putfield      #100                // Field idxs:[I
        99: aload_0
       100: iconst_1
       101: putfield      #44                 // Field _hasNext:Z
       104: return
      StackMapTable: number_of_entries = 3
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/SeqOps, top, class scala/Tuple2 ]
          stack = [ class scala/collection/SeqOps$PermutationsItr ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/SeqOps$PermutationsItr, class scala/collection/SeqOps, class scala/Tuple2, class scala/Tuple2, class scala/collection/mutable/ArrayBuffer, class "[I" ]
          stack = [ class scala/collection/SeqOps$PermutationsItr ]
      LineNumberTable:
        line 561: 0
        line 562: 15
        line 563: 99
        line 561: 104
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34      24     4  elms   Lscala/collection/mutable/ArrayBuffer;
           43      15     5  idxs   [I
            0     105     0  this   Lscala/collection/SeqOps$PermutationsItr;
            0     105     1 $outer   Lscala/collection/SeqOps;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  public static final java.lang.Object $anonfun$init$3$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #299                // Method $anonfun$init$3:(Lscala/Tuple2;)I
         4: invokestatic  #305                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$5                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #317,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #11= #8 of #10;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  private static #16= #13 of #15;         // ToFactory=class scala/collection/IterableFactory$ToFactory of class scala/collection/IterableFactory
  private #19= #2 of #18;                 // PermutationsItr=class scala/collection/SeqOps$PermutationsItr of class scala/collection/SeqOps
  public static #24= #21 of #23;          // Int$=class scala/math/Ordering$Int$ of class scala/math/Ordering
  public static final #29= #26 of #28;    // IntManifest=class scala/reflect/ManifestFactory$IntManifest of class scala/reflect/ManifestFactory
Signature: #3                           // Lscala/collection/AbstractIterator<TC;>;
SourceFile: "Seq.scala"
BootstrapMethods:
  0: #164 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #148 (Ljava/lang/Object;)Ljava/lang/Object;
      #153 REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$1:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
      #155 (Ljava/lang/Object;)Lscala/Tuple2;
      #156 5
      #157 1
      #155 (Ljava/lang/Object;)Lscala/Tuple2;
  1: #164 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #148 (Ljava/lang/Object;)Ljava/lang/Object;
      #176 REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #177 (Lscala/Tuple2;)Ljava/lang/Object;
      #156 5
      #157 1
      #177 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #164 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #271 ()I
      #274 REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$2:(Lscala/collection/mutable/HashMap;)I
      #271 ()I
      #157 1
  3: #314 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$1:(Lscala/collection/mutable/HashMap;Ljava/lang/Object;)Lscala/Tuple2;
      #274 REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$2:(Lscala/collection/mutable/HashMap;)I
      #176 REF_invokeStatic scala/collection/SeqOps$PermutationsItr.$anonfun$init$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 00 00 0A 00 95 00 96 01 01 08 01 09 01 01 1B
   01 1C 01 00 AC 00 AD 01 00 4C 01 21 00 00 29 00
   2A 00 00 7C 00 7D 01 00 2F 00 30 00 00 56 00 57
   00 00 65 00 66 01
  Scala: length = 0x0 (unknown attribute)

