Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$$anonfun$findField$1.class
  Last modified May 29, 2022; size 3738 bytes
  SHA-256 checksum a4a419840367a901bb0b84c2b50df120e9348b504787c516f57574c197adf2a2
  Compiled from "generic.scala"
public final class shapeless.CaseClassMacros$$anonfun$findField$1 extends scala.runtime.AbstractPartialFunction<scala.Tuple2<scala.reflect.api.Types$TypeApi, java.lang.Object>, scala.Tuple2<scala.reflect.api.Types$TypeApi, java.lang.Object>> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$$anonfun$findField$1
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 3, methods: 5, attributes: 6
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$$anonfun$findField$1
    #2 = Class              #1            // shapeless/CaseClassMacros$$anonfun$findField$1
    #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;>;Ljava/io/Serializable;
    #4 = Utf8               scala/runtime/AbstractPartialFunction
    #5 = Class              #4            // scala/runtime/AbstractPartialFunction
    #6 = Utf8               java/io/Serializable
    #7 = Class              #6            // java/io/Serializable
    #8 = Utf8               generic.scala
    #9 = Utf8               shapeless/CaseClassMacros
   #10 = Class              #9            // shapeless/CaseClassMacros
   #11 = Utf8               findField
   #12 = Utf8               (Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #13 = NameAndType        #11:#12       // findField:(Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #14 = Utf8               scala/reflect/api/Types$TypeApi
   #15 = Class              #14           // scala/reflect/api/Types$TypeApi
   #16 = Utf8               scala/reflect/api/Types
   #17 = Class              #16           // scala/reflect/api/Types
   #18 = Utf8               TypeApi
   #19 = Utf8               shapeless/CaseClassMacros$FieldType$
   #20 = Class              #19           // shapeless/CaseClassMacros$FieldType$
   #21 = Utf8               FieldType$
   #22 = Utf8               serialVersionUID
   #23 = Utf8               J
   #24 = Long               0l
   #26 = Utf8               $outer
   #27 = Utf8               Lshapeless/CaseClassMacros;
   #28 = Utf8               kTpe$1
   #29 = Utf8               Lscala/reflect/api/Types$TypeApi;
   #30 = Utf8               applyOrElse
   #31 = Utf8               (Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
   #32 = Utf8               <A1:Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
   #33 = Utf8               x1
   #34 = Utf8               default
   #35 = Utf8               scala/Tuple2
   #36 = Class              #35           // scala/Tuple2
   #37 = Utf8               _1
   #38 = Utf8               ()Ljava/lang/Object;
   #39 = NameAndType        #37:#38       // _1:()Ljava/lang/Object;
   #40 = Methodref          #36.#39       // scala/Tuple2._1:()Ljava/lang/Object;
   #41 = Utf8               _2$mcI$sp
   #42 = Utf8               ()I
   #43 = NameAndType        #41:#42       // _2$mcI$sp:()I
   #44 = Methodref          #36.#43       // scala/Tuple2._2$mcI$sp:()I
   #45 = NameAndType        #26:#27       // $outer:Lshapeless/CaseClassMacros;
   #46 = Fieldref           #2.#45        // shapeless/CaseClassMacros$$anonfun$findField$1.$outer:Lshapeless/CaseClassMacros;
   #47 = Utf8               c
   #48 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #49 = NameAndType        #47:#48       // c:()Lscala/reflect/macros/whitebox/Context;
   #50 = InterfaceMethodref #10.#49       // shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #51 = Utf8               scala/reflect/macros/whitebox/Context
   #52 = Class              #51           // scala/reflect/macros/whitebox/Context
   #53 = Utf8               universe
   #54 = Utf8               ()Lscala/reflect/macros/Universe;
   #55 = NameAndType        #53:#54       // universe:()Lscala/reflect/macros/Universe;
   #56 = InterfaceMethodref #52.#55       // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
   #57 = Utf8               scala/reflect/macros/Universe
   #58 = Class              #57           // scala/reflect/macros/Universe
   #59 = Utf8               TypeTagg
   #60 = Utf8               ()Lscala/reflect/ClassTag;
   #61 = NameAndType        #59:#60       // TypeTagg:()Lscala/reflect/ClassTag;
   #62 = Methodref          #58.#61       // scala/reflect/macros/Universe.TypeTagg:()Lscala/reflect/ClassTag;
   #63 = Utf8               scala/reflect/ClassTag
   #64 = Class              #63           // scala/reflect/ClassTag
   #65 = Utf8               unapply
   #66 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #67 = NameAndType        #65:#66       // unapply:(Ljava/lang/Object;)Lscala/Option;
   #68 = InterfaceMethodref #64.#67       // scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
   #69 = Utf8               scala/Option
   #70 = Class              #69           // scala/Option
   #71 = Utf8               isEmpty
   #72 = Utf8               ()Z
   #73 = NameAndType        #71:#72       // isEmpty:()Z
   #74 = Methodref          #70.#73       // scala/Option.isEmpty:()Z
   #75 = Utf8               get
   #76 = NameAndType        #75:#38       // get:()Ljava/lang/Object;
   #77 = Methodref          #70.#76       // scala/Option.get:()Ljava/lang/Object;
   #78 = Utf8               FieldType
   #79 = Utf8               ()Lshapeless/CaseClassMacros$FieldType$;
   #80 = NameAndType        #78:#79       // FieldType:()Lshapeless/CaseClassMacros$FieldType$;
   #81 = InterfaceMethodref #10.#80       // shapeless/CaseClassMacros.FieldType:()Lshapeless/CaseClassMacros$FieldType$;
   #82 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #83 = NameAndType        #65:#82       // unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #84 = Methodref          #20.#83       // shapeless/CaseClassMacros$FieldType$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #85 = Utf8               _2
   #86 = NameAndType        #85:#38       // _2:()Ljava/lang/Object;
   #87 = Methodref          #36.#86       // scala/Tuple2._2:()Ljava/lang/Object;
   #88 = NameAndType        #28:#29       // kTpe$1:Lscala/reflect/api/Types$TypeApi;
   #89 = Fieldref           #2.#88        // shapeless/CaseClassMacros$$anonfun$findField$1.kTpe$1:Lscala/reflect/api/Types$TypeApi;
   #90 = Utf8               $eq$colon$eq
   #91 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Z
   #92 = NameAndType        #90:#91       // $eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
   #93 = Methodref          #15.#92       // scala/reflect/api/Types$TypeApi.$eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
   #94 = Utf8               scala/runtime/BoxesRunTime
   #95 = Class              #94           // scala/runtime/BoxesRunTime
   #96 = Utf8               boxToInteger
   #97 = Utf8               (I)Ljava/lang/Integer;
   #98 = NameAndType        #96:#97       // boxToInteger:(I)Ljava/lang/Integer;
   #99 = Methodref          #95.#98       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #100 = Utf8               <init>
  #101 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #102 = NameAndType        #100:#101     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #103 = Methodref          #36.#102      // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #104 = Utf8               scala/Function1
  #105 = Class              #104          // scala/Function1
  #106 = Utf8               apply
  #107 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #108 = NameAndType        #106:#107     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #109 = InterfaceMethodref #105.#108     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #110 = Utf8               k
  #111 = Utf8               v
  #112 = Utf8               i
  #113 = Utf8               I
  #114 = Utf8               this
  #115 = Utf8               Lshapeless/CaseClassMacros$$anonfun$findField$1;
  #116 = Utf8               Lscala/Tuple2;
  #117 = Utf8               Lscala/Function1;
  #118 = Utf8               java/lang/Object
  #119 = Class              #118          // java/lang/Object
  #120 = Utf8               isDefinedAt
  #121 = Utf8               (Lscala/Tuple2;)Z
  #122 = Utf8               (Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;)Z
  #123 = Utf8               (Ljava/lang/Object;)Z
  #124 = Utf8               x
  #125 = NameAndType        #120:#121     // isDefinedAt:(Lscala/Tuple2;)Z
  #126 = Methodref          #2.#125       // shapeless/CaseClassMacros$$anonfun$findField$1.isDefinedAt:(Lscala/Tuple2;)Z
  #127 = Utf8               Ljava/lang/Object;
  #128 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #129 = NameAndType        #30:#31       // applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
  #130 = Methodref          #2.#129       // shapeless/CaseClassMacros$$anonfun$findField$1.applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
  #131 = Utf8               (Lshapeless/CaseClassMacros;Lscala/reflect/api/Types$TypeApi;)V
  #132 = Utf8               ()V
  #133 = NameAndType        #100:#132     // "<init>":()V
  #134 = Methodref          #5.#133       // scala/runtime/AbstractPartialFunction."<init>":()V
  #135 = Utf8               ConstantValue
  #136 = Utf8               Code
  #137 = Utf8               StackMapTable
  #138 = Utf8               LineNumberTable
  #139 = Utf8               LocalVariableTable
  #140 = Utf8               Signature
  #141 = Utf8               MethodParameters
  #142 = Utf8               InnerClasses
  #143 = Utf8               EnclosingMethod
  #144 = Utf8               SourceFile
  #145 = Utf8               ScalaInlineInfo
  #146 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 0l

  private final shapeless.CaseClassMacros $outer;
    descriptor: Lshapeless/CaseClassMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  private final scala.reflect.api.Types$TypeApi kTpe$1;
    descriptor: Lscala/reflect/api/Types$TypeApi;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final <A1 extends scala.Tuple2<scala.reflect.api.Types$TypeApi, java.lang.Object>, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=4, locals=12, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        180
         8: aload         4
        10: invokevirtual #40                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
        16: astore        5
        18: aload         4
        20: invokevirtual #44                 // Method scala/Tuple2._2$mcI$sp:()I
        23: istore        6
        25: aload         5
        27: ifnull        177
        30: aload_0
        31: getfield      #46                 // Field $outer:Lshapeless/CaseClassMacros;
        34: invokeinterface #50,  1           // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        39: invokeinterface #56,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        44: invokevirtual #62                 // Method scala/reflect/macros/Universe.TypeTagg:()Lscala/reflect/ClassTag;
        47: aload         5
        49: invokeinterface #68,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        54: astore        7
        56: aload         7
        58: invokevirtual #74                 // Method scala/Option.isEmpty:()Z
        61: ifne          174
        64: aload         7
        66: invokevirtual #77                 // Method scala/Option.get:()Ljava/lang/Object;
        69: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
        72: astore        8
        74: aload         8
        76: ifnull        171
        79: aload_0
        80: getfield      #46                 // Field $outer:Lshapeless/CaseClassMacros;
        83: invokeinterface #81,  1           // InterfaceMethod shapeless/CaseClassMacros.FieldType:()Lshapeless/CaseClassMacros$FieldType$;
        88: aload         8
        90: invokevirtual #84                 // Method shapeless/CaseClassMacros$FieldType$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
        93: astore        9
        95: aload         9
        97: invokevirtual #74                 // Method scala/Option.isEmpty:()Z
       100: ifne          168
       103: aload         9
       105: invokevirtual #77                 // Method scala/Option.get:()Ljava/lang/Object;
       108: checkcast     #36                 // class scala/Tuple2
       111: invokevirtual #40                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       114: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
       117: astore        10
       119: aload         9
       121: invokevirtual #77                 // Method scala/Option.get:()Ljava/lang/Object;
       124: checkcast     #36                 // class scala/Tuple2
       127: invokevirtual #87                 // Method scala/Tuple2._2:()Ljava/lang/Object;
       130: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
       133: astore        11
       135: aload         10
       137: aload_0
       138: getfield      #89                 // Field kTpe$1:Lscala/reflect/api/Types$TypeApi;
       141: invokevirtual #93                 // Method scala/reflect/api/Types$TypeApi.$eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
       144: ifeq          165
       147: new           #36                 // class scala/Tuple2
       150: dup
       151: aload         11
       153: iload         6
       155: invokestatic  #99                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       158: invokespecial #103                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       161: astore_3
       162: goto          194
       165: goto          183
       168: goto          183
       171: goto          183
       174: goto          183
       177: goto          183
       180: goto          183
       183: aload_2
       184: aload_1
       185: invokeinterface #109,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       190: astore_3
       191: goto          194
       194: aload_3
       195: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 165
          locals = [ class shapeless/CaseClassMacros$$anonfun$findField$1, class scala/Tuple2, class scala/Function1, top, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, int, class scala/Option, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Types$TypeApi ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class shapeless/CaseClassMacros$$anonfun$findField$1, class scala/Tuple2, class scala/Function1, class java/lang/Object, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 540: 0
        line 541: 3
        line 540: 64
        line 541: 74
        line 540: 103
        line 540: 119
        line 541: 135
        line 540: 183
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          117      51    10     k   Lscala/reflect/api/Types$TypeApi;
          133      35    11     v   Lscala/reflect/api/Types$TypeApi;
           23     157     6     i   I
            0     196     0  this   Lshapeless/CaseClassMacros$$anonfun$findField$1;
            0     196     1    x1   Lscala/Tuple2;
            0     196     2 default   Lscala/Function1;
    Signature: #32                          // <A1:Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x1                             final
      default                        final

  public final boolean isDefinedAt(scala.Tuple2<scala.reflect.api.Types$TypeApi, java.lang.Object>);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=9, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        141
         6: aload_3
         7: invokevirtual #40                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
        13: astore        4
        15: aload         4
        17: ifnull        138
        20: aload_0
        21: getfield      #46                 // Field $outer:Lshapeless/CaseClassMacros;
        24: invokeinterface #50,  1           // InterfaceMethod shapeless/CaseClassMacros.c:()Lscala/reflect/macros/whitebox/Context;
        29: invokeinterface #56,  1           // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        34: invokevirtual #62                 // Method scala/reflect/macros/Universe.TypeTagg:()Lscala/reflect/ClassTag;
        37: aload         4
        39: invokeinterface #68,  2           // InterfaceMethod scala/reflect/ClassTag.unapply:(Ljava/lang/Object;)Lscala/Option;
        44: astore        5
        46: aload         5
        48: invokevirtual #74                 // Method scala/Option.isEmpty:()Z
        51: ifne          135
        54: aload         5
        56: invokevirtual #77                 // Method scala/Option.get:()Ljava/lang/Object;
        59: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
        62: astore        6
        64: aload         6
        66: ifnull        132
        69: aload_0
        70: getfield      #46                 // Field $outer:Lshapeless/CaseClassMacros;
        73: invokeinterface #81,  1           // InterfaceMethod shapeless/CaseClassMacros.FieldType:()Lshapeless/CaseClassMacros$FieldType$;
        78: aload         6
        80: invokevirtual #84                 // Method shapeless/CaseClassMacros$FieldType$.unapply:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
        83: astore        7
        85: aload         7
        87: invokevirtual #74                 // Method scala/Option.isEmpty:()Z
        90: ifne          129
        93: aload         7
        95: invokevirtual #77                 // Method scala/Option.get:()Ljava/lang/Object;
        98: checkcast     #36                 // class scala/Tuple2
       101: invokevirtual #40                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       104: checkcast     #15                 // class scala/reflect/api/Types$TypeApi
       107: astore        8
       109: aload         8
       111: aload_0
       112: getfield      #89                 // Field kTpe$1:Lscala/reflect/api/Types$TypeApi;
       115: invokevirtual #93                 // Method scala/reflect/api/Types$TypeApi.$eq$colon$eq:(Lscala/reflect/api/Types$TypeApi;)Z
       118: ifeq          126
       121: iconst_1
       122: istore_2
       123: goto          149
       126: goto          144
       129: goto          144
       132: goto          144
       135: goto          144
       138: goto          144
       141: goto          144
       144: iconst_0
       145: istore_2
       146: goto          149
       149: iload_2
       150: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 126
          locals = [ class shapeless/CaseClassMacros$$anonfun$findField$1, class scala/Tuple2, top, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/reflect/api/Types$TypeApi, class scala/Option, class scala/reflect/api/Types$TypeApi ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class shapeless/CaseClassMacros$$anonfun$findField$1, class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 540: 0
        line 541: 2
        line 540: 54
        line 541: 64
        line 540: 93
        line 541: 109
        line 540: 144
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          107      22     8     k   Lscala/reflect/api/Types$TypeApi;
            0     151     0  this   Lshapeless/CaseClassMacros$$anonfun$findField$1;
            0     151     1    x1   Lscala/Tuple2;
    Signature: #122                         // (Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;)Z
    MethodParameters:
      Name                           Flags
      x1                             final

  public final boolean isDefinedAt(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #36                 // class scala/Tuple2
         5: invokevirtual #126                // Method isDefinedAt:(Lscala/Tuple2;)Z
         8: ireturn
      LineNumberTable:
        line 540: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lshapeless/CaseClassMacros$$anonfun$findField$1;
            0       9     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public final java.lang.Object applyOrElse(java.lang.Object, scala.Function1);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #36                 // class scala/Tuple2
         5: aload_2
         6: invokevirtual #130                // Method applyOrElse:(Lscala/Tuple2;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
      LineNumberTable:
        line 540: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/CaseClassMacros$$anonfun$findField$1;
            0      10     1     x   Ljava/lang/Object;
            0      10     2 default   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public shapeless.CaseClassMacros$$anonfun$findField$1(shapeless.CaseClassMacros, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/CaseClassMacros;Lscala/reflect/api/Types$TypeApi;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #46                 // Field $outer:Lshapeless/CaseClassMacros;
        11: aload_0
        12: aload_2
        13: putfield      #89                 // Field kTpe$1:Lscala/reflect/api/Types$TypeApi;
        16: aload_0
        17: invokespecial #134                // Method scala/runtime/AbstractPartialFunction."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 540: 0
        line 539: 11
        line 540: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lshapeless/CaseClassMacros$$anonfun$findField$1;
            0      21     1 $outer   Lshapeless/CaseClassMacros;
            0      21     2 kTpe$1   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      kTpe$1                         final
}
InnerClasses:
  public abstract #18= #15 of #17;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public final #2;                        // class shapeless/CaseClassMacros$$anonfun$findField$1
  public #21= #20 of #10;                 // FieldType$=class shapeless/CaseClassMacros$FieldType$ of class shapeless/CaseClassMacros
EnclosingMethod: #10.#13                // shapeless.CaseClassMacros.findField
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;Lscala/Tuple2<Lscala/reflect/api/Types$TypeApi;Ljava/lang/Object;>;>;Ljava/io/Serializable;
SourceFile: "generic.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 64 00 83 01 00 1E 00 80 01 00 1E
   00 1F 01 00 78 00 7B 01 00 78 00 79 01
  Scala: length = 0x0 (unknown attribute)

