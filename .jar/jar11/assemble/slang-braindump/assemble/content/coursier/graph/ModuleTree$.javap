Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/graph/ModuleTree$.class
  Last modified May 29, 2022; size 6463 bytes
  SHA-256 checksum 64f2ce276575673b78c6e0b046d290ac6770d639fed4f0dc6911b14b987c27d9
  Compiled from "ModuleTree.scala"
public final class coursier.graph.ModuleTree$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/graph/ModuleTree$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 14, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/ModuleTree$
    #2 = Class              #1            // coursier/graph/ModuleTree$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ModuleTree.scala
    #6 = Utf8               coursier/graph/ModuleTree$Node
    #7 = Class              #6            // coursier/graph/ModuleTree$Node
    #8 = Utf8               coursier/graph/ModuleTree
    #9 = Class              #8            // coursier/graph/ModuleTree
   #10 = Utf8               Node
   #11 = Utf8               coursier/graph/ModuleTree$Node$
   #12 = Class              #11           // coursier/graph/ModuleTree$Node$
   #13 = Utf8
   #14 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #15 = Class              #14           // java/lang/invoke/MethodHandles$Lookup
   #16 = Utf8               java/lang/invoke/MethodHandles
   #17 = Class              #16           // java/lang/invoke/MethodHandles
   #18 = Utf8               Lookup
   #19 = Utf8               scala/math/Ordering$Int$
   #20 = Class              #19           // scala/math/Ordering$Int$
   #21 = Utf8               scala/math/Ordering
   #22 = Class              #21           // scala/math/Ordering
   #23 = Utf8               MODULE$
   #24 = Utf8               Lcoursier/graph/ModuleTree$;
   #25 = Utf8               <clinit>
   #26 = Utf8               ()V
   #27 = Utf8               <init>
   #28 = NameAndType        #27:#26       // "<init>":()V
   #29 = Methodref          #2.#28        // coursier/graph/ModuleTree$."<init>":()V
   #30 = NameAndType        #23:#24       // MODULE$:Lcoursier/graph/ModuleTree$;
   #31 = Fieldref           #2.#30        // coursier/graph/ModuleTree$.MODULE$:Lcoursier/graph/ModuleTree$;
   #32 = Utf8               apply
   #33 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #34 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ModuleTree;>;
   #35 = Utf8               resolution
   #36 = Utf8               roots
   #37 = Utf8               coursier/graph/DependencyTree$
   #38 = Class              #37           // coursier/graph/DependencyTree$
   #39 = Utf8               Lcoursier/graph/DependencyTree$;
   #40 = NameAndType        #23:#39       // MODULE$:Lcoursier/graph/DependencyTree$;
   #41 = Fieldref           #38.#40       // coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
   #42 = Utf8               apply$default$3
   #43 = Utf8               ()Z
   #44 = NameAndType        #42:#43       // apply$default$3:()Z
   #45 = Methodref          #38.#44       // coursier/graph/DependencyTree$.apply$default$3:()Z
   #46 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #47 = NameAndType        #32:#46       // apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #48 = Methodref          #38.#47       // coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
   #49 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #50 = NameAndType        #32:#49       // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #51 = Methodref          #2.#50        // coursier/graph/ModuleTree$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #52 = Utf8               this
   #53 = Utf8               Lcoursier/core/Resolution;
   #54 = Utf8               Lscala/collection/immutable/Seq;
   #55 = Utf8               one
   #56 = Utf8               (Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lcoursier/graph/ModuleTree;
   #57 = Utf8               root
   #58 = Utf8               Lcoursier/graph/ModuleTree$Node$;
   #59 = NameAndType        #23:#58       // MODULE$:Lcoursier/graph/ModuleTree$Node$;
   #60 = Fieldref           #12.#59       // coursier/graph/ModuleTree$Node$.MODULE$:Lcoursier/graph/ModuleTree$Node$;
   #61 = Utf8               one$default$3
   #62 = NameAndType        #61:#43       // one$default$3:()Z
   #63 = Methodref          #38.#62       // coursier/graph/DependencyTree$.one$default$3:()Z
   #64 = Utf8               (Lcoursier/core/Resolution;Lcoursier/core/Dependency;Z)Lcoursier/graph/DependencyTree;
   #65 = NameAndType        #55:#64       // one:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;Z)Lcoursier/graph/DependencyTree;
   #66 = Methodref          #38.#65       // coursier/graph/DependencyTree$.one:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;Z)Lcoursier/graph/DependencyTree;
   #67 = Utf8               scala/collection/immutable/Nil$
   #68 = Class              #67           // scala/collection/immutable/Nil$
   #69 = Utf8               Lscala/collection/immutable/Nil$;
   #70 = NameAndType        #23:#69       // MODULE$:Lscala/collection/immutable/Nil$;
   #71 = Fieldref           #68.#70       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #72 = Utf8               (Lcoursier/graph/DependencyTree;Lscala/collection/immutable/Seq;)Lcoursier/graph/ModuleTree$Node;
   #73 = NameAndType        #32:#72       // apply:(Lcoursier/graph/DependencyTree;Lscala/collection/immutable/Seq;)Lcoursier/graph/ModuleTree$Node;
   #74 = Methodref          #12.#73       // coursier/graph/ModuleTree$Node$.apply:(Lcoursier/graph/DependencyTree;Lscala/collection/immutable/Seq;)Lcoursier/graph/ModuleTree$Node;
   #75 = Utf8               Lcoursier/core/Dependency;
   #76 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ModuleTree;>;
   #77 = Utf8               dependencyTrees
   #78 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #79 = MethodType         #78           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #80 = Utf8               $anonfun$apply$1$adapted
   #81 = Utf8               (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
   #82 = NameAndType        #80:#81       // $anonfun$apply$1$adapted:(Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
   #83 = Methodref          #2.#82        // coursier/graph/ModuleTree$.$anonfun$apply$1$adapted:(Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
   #84 = MethodHandle       6:#83         // REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$1$adapted:(Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
   #85 = MethodType         #81           //  (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
   #86 = Integer            5
   #87 = Integer            1
   #88 = Utf8               java/lang/invoke/LambdaMetafactory
   #89 = Class              #88           // java/lang/invoke/LambdaMetafactory
   #90 = Utf8               altMetafactory
   #91 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #92 = NameAndType        #90:#91       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #93 = Methodref          #89.#92       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #94 = MethodHandle       6:#93         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = Utf8               ()Lscala/Function1;
   #96 = NameAndType        #32:#95       // apply:()Lscala/Function1;
   #97 = InvokeDynamic      #0:#96        // #0:apply:()Lscala/Function1;
   #98 = Utf8               scala/collection/immutable/Seq
   #99 = Class              #98           // scala/collection/immutable/Seq
  #100 = Utf8               filter
  #101 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #102 = NameAndType        #100:#101     // filter:(Lscala/Function1;)Ljava/lang/Object;
  #103 = InterfaceMethodref #99.#102      // scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
  #104 = Utf8               $anonfun$apply$2
  #105 = Utf8               (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #106 = NameAndType        #104:#105     // $anonfun$apply$2:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #107 = Methodref          #2.#106       // coursier/graph/ModuleTree$.$anonfun$apply$2:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #108 = MethodHandle       6:#107        // REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$2:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #109 = MethodType         #105          //  (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #110 = InvokeDynamic      #1:#96        // #1:apply:()Lscala/Function1;
  #111 = Utf8               map
  #112 = NameAndType        #111:#101     // map:(Lscala/Function1;)Ljava/lang/Object;
  #113 = InterfaceMethodref #99.#112      // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #114 = Utf8               scala/collection/IterableOps
  #115 = Class              #114          // scala/collection/IterableOps
  #116 = Utf8               zipWithIndex
  #117 = Utf8               ()Ljava/lang/Object;
  #118 = NameAndType        #116:#117     // zipWithIndex:()Ljava/lang/Object;
  #119 = InterfaceMethodref #115.#118     // scala/collection/IterableOps.zipWithIndex:()Ljava/lang/Object;
  #120 = Utf8               scala/collection/SeqOps
  #121 = Class              #120          // scala/collection/SeqOps
  #122 = Utf8               reverse
  #123 = NameAndType        #122:#117     // reverse:()Ljava/lang/Object;
  #124 = InterfaceMethodref #121.#123     // scala/collection/SeqOps.reverse:()Ljava/lang/Object;
  #125 = Utf8               scala/collection/IterableOnceOps
  #126 = Class              #125          // scala/collection/IterableOnceOps
  #127 = Utf8               scala/$less$colon$less$
  #128 = Class              #127          // scala/$less$colon$less$
  #129 = Utf8               Lscala/$less$colon$less$;
  #130 = NameAndType        #23:#129      // MODULE$:Lscala/$less$colon$less$;
  #131 = Fieldref           #128.#130     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #132 = Utf8               refl
  #133 = Utf8               ()Lscala/$eq$colon$eq;
  #134 = NameAndType        #132:#133     // refl:()Lscala/$eq$colon$eq;
  #135 = Methodref          #128.#134     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #136 = Utf8               toMap
  #137 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #138 = NameAndType        #136:#137     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #139 = InterfaceMethodref #126.#138     // scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #140 = Utf8               $anonfun$apply$3
  #141 = NameAndType        #140:#105     // $anonfun$apply$3:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #142 = Methodref          #2.#141       // coursier/graph/ModuleTree$.$anonfun$apply$3:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #143 = MethodHandle       6:#142        // REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$3:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  #144 = InvokeDynamic      #2:#96        // #2:apply:()Lscala/Function1;
  #145 = Utf8               groupBy
  #146 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/Map;
  #147 = NameAndType        #145:#146     // groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
  #148 = InterfaceMethodref #99.#147      // scala/collection/immutable/Seq.groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
  #149 = Utf8               scala/collection/immutable/Map
  #150 = Class              #149          // scala/collection/immutable/Map
  #151 = Utf8               toSeq
  #152 = Utf8               ()Lscala/collection/immutable/Seq;
  #153 = NameAndType        #151:#152     // toSeq:()Lscala/collection/immutable/Seq;
  #154 = InterfaceMethodref #150.#153     // scala/collection/immutable/Map.toSeq:()Lscala/collection/immutable/Seq;
  #155 = Utf8               $anonfun$apply$4$adapted
  #156 = Utf8               (Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #157 = NameAndType        #155:#156     // $anonfun$apply$4$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #158 = Methodref          #2.#157       // coursier/graph/ModuleTree$.$anonfun$apply$4$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #159 = MethodHandle       6:#158        // REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$4$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
  #160 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #161 = MethodType         #160          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #162 = Utf8               (Lscala/collection/immutable/Map;)Lscala/Function1;
  #163 = NameAndType        #32:#162      // apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #164 = InvokeDynamic      #3:#163       // #3:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
  #165 = Utf8               Lscala/math/Ordering$Int$;
  #166 = NameAndType        #23:#165      // MODULE$:Lscala/math/Ordering$Int$;
  #167 = Fieldref           #20.#166      // scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
  #168 = Utf8               sortBy
  #169 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #170 = NameAndType        #168:#169     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #171 = InterfaceMethodref #99.#170      // scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #172 = Utf8               $anonfun$apply$5
  #173 = Utf8               (Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  #174 = NameAndType        #172:#173     // $anonfun$apply$5:(Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  #175 = Methodref          #2.#174       // coursier/graph/ModuleTree$.$anonfun$apply$5:(Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  #176 = MethodHandle       6:#175        // REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$5:(Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  #177 = MethodType         #173          //  (Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  #178 = InvokeDynamic      #4:#96        // #4:apply:()Lscala/Function1;
  #179 = InterfaceMethodref #115.#112     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #180 = Utf8               dependencyTrees0
  #181 = Utf8               indices
  #182 = Utf8               Lscala/collection/immutable/Map;
  #183 = Utf8               apply$default$2
  #184 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;
  #185 = Utf8               $anonfun$apply$1
  #186 = Utf8               (Lcoursier/graph/DependencyTree;)Z
  #187 = Utf8               x$1
  #188 = Utf8               coursier/graph/DependencyTree
  #189 = Class              #188          // coursier/graph/DependencyTree
  #190 = Utf8               excluded
  #191 = NameAndType        #190:#43      // excluded:()Z
  #192 = Methodref          #189.#191     // coursier/graph/DependencyTree.excluded:()Z
  #193 = Utf8               Lcoursier/graph/DependencyTree;
  #194 = Utf8               x$2
  #195 = Utf8               dependency
  #196 = Utf8               ()Lcoursier/core/Dependency;
  #197 = NameAndType        #195:#196     // dependency:()Lcoursier/core/Dependency;
  #198 = Methodref          #189.#197     // coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
  #199 = Utf8               coursier/core/Dependency
  #200 = Class              #199          // coursier/core/Dependency
  #201 = Utf8               module
  #202 = Utf8               ()Lcoursier/core/Module;
  #203 = NameAndType        #201:#202     // module:()Lcoursier/core/Module;
  #204 = Methodref          #200.#203     // coursier/core/Dependency.module:()Lcoursier/core/Module;
  #205 = Utf8               x$3
  #206 = Utf8               $anonfun$apply$4
  #207 = Utf8               (Lscala/collection/immutable/Map;Lscala/Tuple2;)I
  #208 = Utf8               indices$1
  #209 = Utf8               x0$1
  #210 = Utf8               scala/Tuple2
  #211 = Class              #210          // scala/Tuple2
  #212 = Utf8               _1
  #213 = NameAndType        #212:#117     // _1:()Ljava/lang/Object;
  #214 = Methodref          #211.#213     // scala/Tuple2._1:()Ljava/lang/Object;
  #215 = Utf8               coursier/core/Module
  #216 = Class              #215          // coursier/core/Module
  #217 = NameAndType        #32:#78       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #218 = InterfaceMethodref #150.#217     // scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #219 = Utf8               scala/runtime/BoxesRunTime
  #220 = Class              #219          // scala/runtime/BoxesRunTime
  #221 = Utf8               unboxToInt
  #222 = Utf8               (Ljava/lang/Object;)I
  #223 = NameAndType        #221:#222     // unboxToInt:(Ljava/lang/Object;)I
  #224 = Methodref          #220.#223     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #225 = Utf8               scala/MatchError
  #226 = Class              #225          // scala/MatchError
  #227 = Utf8               (Ljava/lang/Object;)V
  #228 = NameAndType        #27:#227      // "<init>":(Ljava/lang/Object;)V
  #229 = Methodref          #226.#228     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #230 = Utf8               m
  #231 = Utf8               Lcoursier/core/Module;
  #232 = Utf8               Lscala/Tuple2;
  #233 = Utf8               x0$2
  #234 = Utf8               _2
  #235 = NameAndType        #234:#117     // _2:()Ljava/lang/Object;
  #236 = Methodref          #211.#235     // scala/Tuple2._2:()Ljava/lang/Object;
  #237 = Utf8               head
  #238 = NameAndType        #237:#117     // head:()Ljava/lang/Object;
  #239 = InterfaceMethodref #99.#238      // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
  #240 = Utf8               tail
  #241 = NameAndType        #240:#117     // tail:()Ljava/lang/Object;
  #242 = InterfaceMethodref #99.#241      // scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
  #243 = Utf8               l
  #244 = Methodref          #4.#28        // java/lang/Object."<init>":()V
  #245 = NameAndType        #185:#186     // $anonfun$apply$1:(Lcoursier/graph/DependencyTree;)Z
  #246 = Methodref          #2.#245       // coursier/graph/ModuleTree$.$anonfun$apply$1:(Lcoursier/graph/DependencyTree;)Z
  #247 = Utf8               boxToBoolean
  #248 = Utf8               (Z)Ljava/lang/Boolean;
  #249 = NameAndType        #247:#248     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #250 = Methodref          #220.#249     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #251 = NameAndType        #206:#207     // $anonfun$apply$4:(Lscala/collection/immutable/Map;Lscala/Tuple2;)I
  #252 = Methodref          #2.#251       // coursier/graph/ModuleTree$.$anonfun$apply$4:(Lscala/collection/immutable/Map;Lscala/Tuple2;)I
  #253 = Utf8               boxToInteger
  #254 = Utf8               (I)Ljava/lang/Integer;
  #255 = NameAndType        #253:#254     // boxToInteger:(I)Ljava/lang/Integer;
  #256 = Methodref          #220.#255     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #257 = Utf8               $deserializeLambda$
  #258 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #259 = Utf8               scala/runtime/LambdaDeserialize
  #260 = Class              #259          // scala/runtime/LambdaDeserialize
  #261 = Utf8               bootstrap
  #262 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #263 = NameAndType        #261:#262     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #264 = Methodref          #260.#263     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #265 = MethodHandle       6:#264        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #266 = Utf8               lambdaDeserialize
  #267 = NameAndType        #266:#258     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #268 = InvokeDynamic      #5:#267       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #269 = Utf8               Code
  #270 = Utf8               LineNumberTable
  #271 = Utf8               LocalVariableTable
  #272 = Utf8               Signature
  #273 = Utf8               MethodParameters
  #274 = Utf8               StackMapTable
  #275 = Utf8               InnerClasses
  #276 = Utf8               SourceFile
  #277 = Utf8               BootstrapMethods
  #278 = Utf8               ScalaInlineInfo
  #279 = Utf8               Scala
{
  public static final coursier.graph.ModuleTree$ MODULE$;
    descriptor: Lcoursier/graph/ModuleTree$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/graph/ModuleTree$
         3: dup
         4: invokespecial #29                 // Method "<init>":()V
         7: putstatic     #31                 // Field MODULE$:Lcoursier/graph/ModuleTree$;
        10: return
      LineNumberTable:
        line 18: 0

  public scala.collection.immutable.Seq<coursier.graph.ModuleTree> apply(coursier.core.Resolution, scala.collection.immutable.Seq<coursier.core.Dependency>);
    descriptor: (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: getstatic     #41                 // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
         4: aload_1
         5: aload_2
         6: getstatic     #41                 // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
         9: invokevirtual #45                 // Method coursier/graph/DependencyTree$.apply$default$3:()Z
        12: invokevirtual #48                 // Method coursier/graph/DependencyTree$.apply:(Lcoursier/core/Resolution;Lscala/collection/immutable/Seq;Z)Lscala/collection/immutable/Seq;
        15: invokevirtual #51                 // Method apply:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        18: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/graph/ModuleTree$;
            0      19     1 resolution   Lcoursier/core/Resolution;
            0      19     2 roots   Lscala/collection/immutable/Seq;
    Signature: #34                          // (Lcoursier/core/Resolution;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ModuleTree;>;
    MethodParameters:
      Name                           Flags
      resolution                     final
      roots                          final

  public coursier.graph.ModuleTree one(coursier.core.Resolution, coursier.core.Dependency);
    descriptor: (Lcoursier/core/Resolution;Lcoursier/core/Dependency;)Lcoursier/graph/ModuleTree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #60                 // Field coursier/graph/ModuleTree$Node$.MODULE$:Lcoursier/graph/ModuleTree$Node$;
         3: getstatic     #41                 // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
         6: aload_1
         7: aload_2
         8: getstatic     #41                 // Field coursier/graph/DependencyTree$.MODULE$:Lcoursier/graph/DependencyTree$;
        11: invokevirtual #63                 // Method coursier/graph/DependencyTree$.one$default$3:()Z
        14: invokevirtual #66                 // Method coursier/graph/DependencyTree$.one:(Lcoursier/core/Resolution;Lcoursier/core/Dependency;Z)Lcoursier/graph/DependencyTree;
        17: getstatic     #71                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        20: invokevirtual #74                 // Method coursier/graph/ModuleTree$Node$.apply:(Lcoursier/graph/DependencyTree;Lscala/collection/immutable/Seq;)Lcoursier/graph/ModuleTree$Node;
        23: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lcoursier/graph/ModuleTree$;
            0      24     1 resolution   Lcoursier/core/Resolution;
            0      24     2  root   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      resolution                     final
      root                           final

  public scala.collection.immutable.Seq<coursier.graph.ModuleTree> apply(scala.collection.immutable.Seq<coursier.graph.DependencyTree>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: invokedynamic #97,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
         6: invokeinterface #103,  2          // InterfaceMethod scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
        11: checkcast     #99                 // class scala/collection/immutable/Seq
        14: astore_2
        15: aload_2
        16: invokedynamic #110,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        21: invokeinterface #113,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        26: checkcast     #115                // class scala/collection/IterableOps
        29: invokeinterface #119,  1          // InterfaceMethod scala/collection/IterableOps.zipWithIndex:()Ljava/lang/Object;
        34: checkcast     #121                // class scala/collection/SeqOps
        37: invokeinterface #124,  1          // InterfaceMethod scala/collection/SeqOps.reverse:()Ljava/lang/Object;
        42: checkcast     #126                // class scala/collection/IterableOnceOps
        45: getstatic     #131                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        48: invokevirtual #135                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        51: invokeinterface #139,  2          // InterfaceMethod scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        56: astore_3
        57: aload_2
        58: invokedynamic #144,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        63: invokeinterface #148,  2          // InterfaceMethod scala/collection/immutable/Seq.groupBy:(Lscala/Function1;)Lscala/collection/immutable/Map;
        68: invokeinterface #154,  1          // InterfaceMethod scala/collection/immutable/Map.toSeq:()Lscala/collection/immutable/Seq;
        73: aload_3
        74: invokedynamic #164,  0            // InvokeDynamic #3:apply:(Lscala/collection/immutable/Map;)Lscala/Function1;
        79: getstatic     #167                // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
        82: invokeinterface #171,  3          // InterfaceMethod scala/collection/immutable/Seq.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        87: checkcast     #115                // class scala/collection/IterableOps
        90: invokedynamic #178,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        95: invokeinterface #179,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
       100: checkcast     #99                 // class scala/collection/immutable/Seq
       103: areturn
      LineNumberTable:
        line 34: 0
        line 36: 15
        line 37: 16
        line 40: 45
        line 42: 57
        line 43: 58
        line 45: 73
        line 49: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      88     2 dependencyTrees0   Lscala/collection/immutable/Seq;
           57      46     3 indices   Lscala/collection/immutable/Map;
            0     104     0  this   Lcoursier/graph/ModuleTree$;
            0     104     1 dependencyTrees   Lscala/collection/immutable/Seq;
    Signature: #76                          // (Lscala/collection/immutable/Seq<Lcoursier/graph/DependencyTree;>;)Lscala/collection/immutable/Seq<Lcoursier/graph/ModuleTree;>;
    MethodParameters:
      Name                           Flags
      dependencyTrees                final

  public scala.collection.immutable.Seq<coursier.core.Dependency> apply$default$2();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/ModuleTree$;
    Signature: #184                         // ()Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;

  public static final boolean $anonfun$apply$1(coursier.graph.DependencyTree);
    descriptor: (Lcoursier/graph/DependencyTree;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #192                // Method coursier/graph/DependencyTree.excluded:()Z
         4: ifne          11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0   x$1   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final coursier.core.Module $anonfun$apply$2(coursier.graph.DependencyTree);
    descriptor: (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
         4: invokevirtual #204                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         7: areturn
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final coursier.core.Module $anonfun$apply$3(coursier.graph.DependencyTree);
    descriptor: (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method coursier/graph/DependencyTree.dependency:()Lcoursier/core/Dependency;
         4: invokevirtual #204                // Method coursier/core/Dependency.module:()Lcoursier/core/Module;
         7: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final int $anonfun$apply$4(scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lscala/collection/immutable/Map;Lscala/Tuple2;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        30
         6: aload_3
         7: invokevirtual #214                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #216                // class coursier/core/Module
        13: astore        4
        15: aload_0
        16: aload         4
        18: invokeinterface #218,  2          // InterfaceMethod scala/collection/immutable/Map.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        23: invokestatic  #224                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        26: istore_2
        27: goto          42
        30: goto          33
        33: new           #226                // class scala/MatchError
        36: dup
        37: aload_3
        38: invokespecial #229                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        41: athrow
        42: iload_2
        43: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/Map, class scala/Tuple2, int, class scala/Tuple2, class coursier/core/Module ]
          stack = []
      LineNumberTable:
        line 45: 0
        line 46: 2
        line 47: 15
        line 46: 30
        line 45: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      15     4     m   Lcoursier/core/Module;
            0      44     0 indices$1   Lscala/collection/immutable/Map;
            0      44     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      indices$1                      final
      x0$1                           final

  public static final coursier.graph.ModuleTree $anonfun$apply$5(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        42
         6: aload_2
         7: invokevirtual #236                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #99                 // class scala/collection/immutable/Seq
        13: astore_3
        14: getstatic     #60                 // Field coursier/graph/ModuleTree$Node$.MODULE$:Lcoursier/graph/ModuleTree$Node$;
        17: aload_3
        18: invokeinterface #239,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        23: checkcast     #189                // class coursier/graph/DependencyTree
        26: aload_3
        27: invokeinterface #242,  1          // InterfaceMethod scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
        32: checkcast     #99                 // class scala/collection/immutable/Seq
        35: invokevirtual #74                 // Method coursier/graph/ModuleTree$Node$.apply:(Lcoursier/graph/DependencyTree;Lscala/collection/immutable/Seq;)Lcoursier/graph/ModuleTree$Node;
        38: astore_1
        39: goto          54
        42: goto          45
        45: new           #226                // class scala/MatchError
        48: dup
        49: aload_2
        50: invokespecial #229                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        53: athrow
        54: aload_1
        55: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 42
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, class coursier/graph/ModuleTree$Node, class scala/Tuple2, class scala/collection/immutable/Seq ]
          stack = []
      LineNumberTable:
        line 49: 0
        line 50: 2
        line 51: 14
        line 50: 42
        line 49: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      28     3     l   Lscala/collection/immutable/Seq;
            0      56     0  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  private coursier.graph.ModuleTree$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #244                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 79: 0
        line 18: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/ModuleTree$;

  public static final java.lang.Object $anonfun$apply$1$adapted(coursier.graph.DependencyTree);
    descriptor: (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #246                // Method $anonfun$apply$1:(Lcoursier/graph/DependencyTree;)Z
         4: invokestatic  #250                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Lcoursier/graph/DependencyTree;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.Object $anonfun$apply$4$adapted(scala.collection.immutable.Map, scala.Tuple2);
    descriptor: (Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #252                // Method $anonfun$apply$4:(Lscala/collection/immutable/Map;Lscala/Tuple2;)I
         5: invokestatic  #256                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         8: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 indices$1   Lscala/collection/immutable/Map;
            0       9     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      indices$1                      final
      x0$1                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #268,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Node=class coursier/graph/ModuleTree$Node of class coursier/graph/ModuleTree
  public static #13= #12 of #9;           // =class coursier/graph/ModuleTree$Node$ of class coursier/graph/ModuleTree
  public static final #18= #15 of #17;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #13= #20 of #22;          // =class scala/math/Ordering$Int$ of class scala/math/Ordering
SourceFile: "ModuleTree.scala"
BootstrapMethods:
  0: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 (Ljava/lang/Object;)Ljava/lang/Object;
      #84 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$1$adapted:(Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
      #85 (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
      #86 5
      #87 1
      #85 (Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
  1: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 (Ljava/lang/Object;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$2:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
      #109 (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
      #86 5
      #87 1
      #109 (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  2: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 (Ljava/lang/Object;)Ljava/lang/Object;
      #143 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$3:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
      #109 (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
      #86 5
      #87 1
      #109 (Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
  3: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 (Ljava/lang/Object;)Ljava/lang/Object;
      #159 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$4$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
      #161 (Lscala/Tuple2;)Ljava/lang/Object;
      #86 5
      #87 1
      #161 (Lscala/Tuple2;)Ljava/lang/Object;
  4: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #79 (Ljava/lang/Object;)Ljava/lang/Object;
      #176 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$5:(Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
      #177 (Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
      #86 5
      #87 1
      #177 (Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  5: #265 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #84 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$1$adapted:(Lcoursier/graph/DependencyTree;)Ljava/lang/Object;
      #108 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$2:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
      #143 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$3:(Lcoursier/graph/DependencyTree;)Lcoursier/core/Module;
      #159 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$4$adapted:(Lscala/collection/immutable/Map;Lscala/Tuple2;)Ljava/lang/Object;
      #176 REF_invokeStatic coursier/graph/ModuleTree$.$anonfun$apply$5:(Lscala/Tuple2;)Lcoursier/graph/ModuleTree;
  ScalaInlineInfo: length = 0x40 (unknown attribute)
   01 01 00 0C 00 BA 00 BB 01 00 51 00 52 01 00 69
   00 6A 01 00 8D 00 6A 01 00 CF 00 D0 01 00 9C 00
   9D 01 00 AD 00 AE 01 00 1C 00 1B 01 00 21 00 22
   01 00 21 00 32 01 00 B8 00 99 01 00 38 00 39 01

  Scala: length = 0x0 (unknown attribute)

