Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/util/Xml$.class
  Last modified May 29, 2022; size 5127 bytes
  SHA-256 checksum 4392c8a31286c884dedccbe350068090a89948d7dd84d11c6a60875d7ffc0fd7
  Compiled from "Xml.scala"
public final class coursier.util.Xml$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/util/Xml$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               coursier/util/Xml$
    #2 = Class              #1            // coursier/util/Xml$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Xml.scala
    #6 = Utf8               coursier/core/Versions$DateTime
    #7 = Class              #6            // coursier/core/Versions$DateTime
    #8 = Utf8               coursier/core/Versions
    #9 = Class              #8            // coursier/core/Versions
   #10 = Utf8               DateTime
   #11 = Utf8               coursier/core/Versions$DateTime$
   #12 = Class              #11           // coursier/core/Versions$DateTime$
   #13 = Utf8
   #14 = Utf8               coursier/util/Xml$$anonfun$$nestedInanonfun$text$2$1
   #15 = Class              #14           // coursier/util/Xml$$anonfun$$nestedInanonfun$text$2$1
   #16 = Utf8               coursier/util/Xml$Node
   #17 = Class              #16           // coursier/util/Xml$Node
   #18 = Utf8               coursier/util/Xml
   #19 = Class              #18           // coursier/util/Xml
   #20 = Utf8               Node
   #21 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #22 = Class              #21           // java/lang/invoke/MethodHandles$Lookup
   #23 = Utf8               java/lang/invoke/MethodHandles
   #24 = Class              #23           // java/lang/invoke/MethodHandles
   #25 = Utf8               Lookup
   #26 = Utf8               MODULE$
   #27 = Utf8               Lcoursier/util/Xml$;
   #28 = Utf8               <clinit>
   #29 = Utf8               ()V
   #30 = Utf8               <init>
   #31 = NameAndType        #30:#29       // "<init>":()V
   #32 = Methodref          #2.#31        // coursier/util/Xml$."<init>":()V
   #33 = NameAndType        #26:#27       // MODULE$:Lcoursier/util/Xml$;
   #34 = Fieldref           #2.#33        // coursier/util/Xml$.MODULE$:Lcoursier/util/Xml$;
   #35 = Utf8               text
   #36 = Utf8               (Lcoursier/util/Xml$Node;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
   #37 = Utf8               (Lcoursier/util/Xml$Node;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;
   #38 = Utf8               elem
   #39 = Utf8               label
   #40 = Utf8               description
   #41 = Utf8               children
   #42 = Utf8               ()Lscala/collection/immutable/Seq;
   #43 = NameAndType        #41:#42       // children:()Lscala/collection/immutable/Seq;
   #44 = InterfaceMethodref #17.#43       // coursier/util/Xml$Node.children:()Lscala/collection/immutable/Seq;
   #45 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #46 = MethodType         #45           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #47 = Utf8               $anonfun$text$1$adapted
   #48 = Utf8               (Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
   #49 = NameAndType        #47:#48       // $anonfun$text$1$adapted:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
   #50 = Methodref          #2.#49        // coursier/util/Xml$.$anonfun$text$1$adapted:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
   #51 = MethodHandle       6:#50         // REF_invokeStatic coursier/util/Xml$.$anonfun$text$1$adapted:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
   #52 = Utf8               (Lcoursier/util/Xml$Node;)Ljava/lang/Object;
   #53 = MethodType         #52           //  (Lcoursier/util/Xml$Node;)Ljava/lang/Object;
   #54 = Integer            5
   #55 = Integer            1
   #56 = Utf8               java/lang/invoke/LambdaMetafactory
   #57 = Class              #56           // java/lang/invoke/LambdaMetafactory
   #58 = Utf8               altMetafactory
   #59 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #60 = NameAndType        #58:#59       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #61 = Methodref          #57.#60       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #62 = MethodHandle       6:#61         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #63 = Utf8               apply
   #64 = Utf8               (Ljava/lang/String;)Lscala/Function1;
   #65 = NameAndType        #63:#64       // apply:(Ljava/lang/String;)Lscala/Function1;
   #66 = InvokeDynamic      #0:#65        // #0:apply:(Ljava/lang/String;)Lscala/Function1;
   #67 = Utf8               scala/collection/immutable/Seq
   #68 = Class              #67           // scala/collection/immutable/Seq
   #69 = Utf8               find
   #70 = Utf8               (Lscala/Function1;)Lscala/Option;
   #71 = NameAndType        #69:#70       // find:(Lscala/Function1;)Lscala/Option;
   #72 = InterfaceMethodref #68.#71       // scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
   #73 = Utf8               $anonfun$text$2
   #74 = Utf8               (Lcoursier/util/Xml$Node;)Lscala/Option;
   #75 = NameAndType        #73:#74       // $anonfun$text$2:(Lcoursier/util/Xml$Node;)Lscala/Option;
   #76 = Methodref          #2.#75        // coursier/util/Xml$.$anonfun$text$2:(Lcoursier/util/Xml$Node;)Lscala/Option;
   #77 = MethodHandle       6:#76         // REF_invokeStatic coursier/util/Xml$.$anonfun$text$2:(Lcoursier/util/Xml$Node;)Lscala/Option;
   #78 = MethodType         #74           //  (Lcoursier/util/Xml$Node;)Lscala/Option;
   #79 = Utf8               ()Lscala/Function1;
   #80 = NameAndType        #63:#79       // apply:()Lscala/Function1;
   #81 = InvokeDynamic      #1:#80        // #1:apply:()Lscala/Function1;
   #82 = Utf8               scala/Option
   #83 = Class              #82           // scala/Option
   #84 = Utf8               flatMap
   #85 = NameAndType        #84:#70       // flatMap:(Lscala/Function1;)Lscala/Option;
   #86 = Methodref          #83.#85       // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
   #87 = Utf8               ()Ljava/lang/Object;
   #88 = MethodType         #87           //  ()Ljava/lang/Object;
   #89 = Utf8               $anonfun$text$3
   #90 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #91 = NameAndType        #89:#90       // $anonfun$text$3:(Ljava/lang/String;)Ljava/lang/String;
   #92 = Methodref          #2.#91        // coursier/util/Xml$.$anonfun$text$3:(Ljava/lang/String;)Ljava/lang/String;
   #93 = MethodHandle       6:#92         // REF_invokeStatic coursier/util/Xml$.$anonfun$text$3:(Ljava/lang/String;)Ljava/lang/String;
   #94 = Utf8               ()Ljava/lang/String;
   #95 = MethodType         #94           //  ()Ljava/lang/String;
   #96 = Utf8               (Ljava/lang/String;)Lscala/Function0;
   #97 = NameAndType        #63:#96       // apply:(Ljava/lang/String;)Lscala/Function0;
   #98 = InvokeDynamic      #2:#97        // #2:apply:(Ljava/lang/String;)Lscala/Function0;
   #99 = Utf8               toRight
  #100 = Utf8               (Lscala/Function0;)Lscala/util/Either;
  #101 = NameAndType        #99:#100      // toRight:(Lscala/Function0;)Lscala/util/Either;
  #102 = Methodref          #83.#101      // scala/Option.toRight:(Lscala/Function0;)Lscala/util/Either;
  #103 = Utf8               this
  #104 = Utf8               Lcoursier/util/Xml$Node;
  #105 = Utf8               Ljava/lang/String;
  #106 = Utf8               parseDateTime
  #107 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #108 = Utf8               (Ljava/lang/String;)Lscala/Option<Lcoursier/core/Versions$DateTime;>;
  #109 = Utf8               s
  #110 = Utf8               java/lang/String
  #111 = Class              #110          // java/lang/String
  #112 = Utf8               length
  #113 = Utf8               ()I
  #114 = NameAndType        #112:#113     // length:()I
  #115 = Methodref          #111.#114     // java/lang/String.length:()I
  #116 = Utf8               scala/collection/StringOps$
  #117 = Class              #116          // scala/collection/StringOps$
  #118 = Utf8               Lscala/collection/StringOps$;
  #119 = NameAndType        #26:#118      // MODULE$:Lscala/collection/StringOps$;
  #120 = Fieldref           #117.#119     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #121 = Utf8               scala/Predef$
  #122 = Class              #121          // scala/Predef$
  #123 = Utf8               Lscala/Predef$;
  #124 = NameAndType        #26:#123      // MODULE$:Lscala/Predef$;
  #125 = Fieldref           #122.#124     // scala/Predef$.MODULE$:Lscala/Predef$;
  #126 = Utf8               augmentString
  #127 = NameAndType        #126:#90      // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #128 = Methodref          #122.#127     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #129 = Utf8               $anonfun$parseDateTime$1$adapted
  #130 = NameAndType        #129:#45      // $anonfun$parseDateTime$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #131 = Methodref          #2.#130       // coursier/util/Xml$.$anonfun$parseDateTime$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #132 = MethodHandle       6:#131        // REF_invokeStatic coursier/util/Xml$.$anonfun$parseDateTime$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #133 = InvokeDynamic      #3:#80        // #3:apply:()Lscala/Function1;
  #134 = Utf8               forall$extension
  #135 = Utf8               (Ljava/lang/String;Lscala/Function1;)Z
  #136 = NameAndType        #134:#135     // forall$extension:(Ljava/lang/String;Lscala/Function1;)Z
  #137 = Methodref          #117.#136     // scala/collection/StringOps$.forall$extension:(Ljava/lang/String;Lscala/Function1;)Z
  #138 = Utf8               scala/Some
  #139 = Class              #138          // scala/Some
  #140 = Utf8               Lcoursier/core/Versions$DateTime$;
  #141 = NameAndType        #26:#140      // MODULE$:Lcoursier/core/Versions$DateTime$;
  #142 = Fieldref           #12.#141      // coursier/core/Versions$DateTime$.MODULE$:Lcoursier/core/Versions$DateTime$;
  #143 = Utf8               substring
  #144 = Utf8               (II)Ljava/lang/String;
  #145 = NameAndType        #143:#144     // substring:(II)Ljava/lang/String;
  #146 = Methodref          #111.#145     // java/lang/String.substring:(II)Ljava/lang/String;
  #147 = Utf8               toInt$extension
  #148 = Utf8               (Ljava/lang/String;)I
  #149 = NameAndType        #147:#148     // toInt$extension:(Ljava/lang/String;)I
  #150 = Methodref          #117.#149     // scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
  #151 = Utf8               (IIIIII)Lcoursier/core/Versions$DateTime;
  #152 = NameAndType        #63:#151      // apply:(IIIIII)Lcoursier/core/Versions$DateTime;
  #153 = Methodref          #12.#152      // coursier/core/Versions$DateTime$.apply:(IIIIII)Lcoursier/core/Versions$DateTime;
  #154 = Utf8               (Ljava/lang/Object;)V
  #155 = NameAndType        #30:#154      // "<init>":(Ljava/lang/Object;)V
  #156 = Methodref          #139.#155     // scala/Some."<init>":(Ljava/lang/Object;)V
  #157 = Utf8               scala/None$
  #158 = Class              #157          // scala/None$
  #159 = Utf8               Lscala/None$;
  #160 = NameAndType        #26:#159      // MODULE$:Lscala/None$;
  #161 = Fieldref           #158.#160     // scala/None$.MODULE$:Lscala/None$;
  #162 = Utf8               $anonfun$text$1
  #163 = Utf8               (Ljava/lang/String;Lcoursier/util/Xml$Node;)Z
  #164 = Utf8               label$1
  #165 = Utf8               x$1
  #166 = NameAndType        #39:#94       // label:()Ljava/lang/String;
  #167 = InterfaceMethodref #17.#166      // coursier/util/Xml$Node.label:()Ljava/lang/String;
  #168 = Utf8               equals
  #169 = Utf8               (Ljava/lang/Object;)Z
  #170 = NameAndType        #168:#169     // equals:(Ljava/lang/Object;)Z
  #171 = Methodref          #4.#170       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #172 = Utf8               x$2
  #173 = Methodref          #15.#31       // coursier/util/Xml$$anonfun$$nestedInanonfun$text$2$1."<init>":()V
  #174 = Utf8               collectFirst
  #175 = Utf8               (Lscala/PartialFunction;)Lscala/Option;
  #176 = NameAndType        #174:#175     // collectFirst:(Lscala/PartialFunction;)Lscala/Option;
  #177 = InterfaceMethodref #68.#176      // scala/collection/immutable/Seq.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
  #178 = Utf8               description$1
  #179 = Utf8               java/lang/StringBuilder
  #180 = Class              #179          // java/lang/StringBuilder
  #181 = Integer            10
  #182 = Utf8               (I)V
  #183 = NameAndType        #30:#182      // "<init>":(I)V
  #184 = Methodref          #180.#183     // java/lang/StringBuilder."<init>":(I)V
  #185 = Utf8               append
  #186 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #187 = NameAndType        #185:#186     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #188 = Methodref          #180.#187     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #189 = Utf8                not found
  #190 = String             #189          //  not found
  #191 = Utf8               toString
  #192 = NameAndType        #191:#94      // toString:()Ljava/lang/String;
  #193 = Methodref          #180.#192     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #194 = Utf8               $anonfun$parseDateTime$1
  #195 = Utf8               (C)Z
  #196 = Utf8               x$3
  #197 = Utf8               scala/runtime/RichChar$
  #198 = Class              #197          // scala/runtime/RichChar$
  #199 = Utf8               Lscala/runtime/RichChar$;
  #200 = NameAndType        #26:#199      // MODULE$:Lscala/runtime/RichChar$;
  #201 = Fieldref           #198.#200     // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
  #202 = Utf8               charWrapper
  #203 = Utf8               (C)C
  #204 = NameAndType        #202:#203     // charWrapper:(C)C
  #205 = Methodref          #122.#204     // scala/Predef$.charWrapper:(C)C
  #206 = Utf8               isDigit$extension
  #207 = NameAndType        #206:#195     // isDigit$extension:(C)Z
  #208 = Methodref          #198.#207     // scala/runtime/RichChar$.isDigit$extension:(C)Z
  #209 = Utf8               C
  #210 = Methodref          #4.#31        // java/lang/Object."<init>":()V
  #211 = NameAndType        #162:#163     // $anonfun$text$1:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Z
  #212 = Methodref          #2.#211       // coursier/util/Xml$.$anonfun$text$1:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Z
  #213 = Utf8               scala/runtime/BoxesRunTime
  #214 = Class              #213          // scala/runtime/BoxesRunTime
  #215 = Utf8               boxToBoolean
  #216 = Utf8               (Z)Ljava/lang/Boolean;
  #217 = NameAndType        #215:#216     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #218 = Methodref          #214.#217     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #219 = Utf8               unboxToChar
  #220 = Utf8               (Ljava/lang/Object;)C
  #221 = NameAndType        #219:#220     // unboxToChar:(Ljava/lang/Object;)C
  #222 = Methodref          #214.#221     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #223 = NameAndType        #194:#195     // $anonfun$parseDateTime$1:(C)Z
  #224 = Methodref          #2.#223       // coursier/util/Xml$.$anonfun$parseDateTime$1:(C)Z
  #225 = Utf8               Ljava/lang/Object;
  #226 = Utf8               $deserializeLambda$
  #227 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #228 = Utf8               scala/runtime/LambdaDeserialize
  #229 = Class              #228          // scala/runtime/LambdaDeserialize
  #230 = Utf8               bootstrap
  #231 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #232 = NameAndType        #230:#231     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #233 = Methodref          #229.#232     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #234 = MethodHandle       6:#233        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #235 = Utf8               lambdaDeserialize
  #236 = NameAndType        #235:#227     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #237 = InvokeDynamic      #4:#236       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #238 = Utf8               Code
  #239 = Utf8               LineNumberTable
  #240 = Utf8               LocalVariableTable
  #241 = Utf8               Signature
  #242 = Utf8               MethodParameters
  #243 = Utf8               StackMapTable
  #244 = Utf8               InnerClasses
  #245 = Utf8               SourceFile
  #246 = Utf8               BootstrapMethods
  #247 = Utf8               ScalaInlineInfo
  #248 = Utf8               Scala
{
  public static final coursier.util.Xml$ MODULE$;
    descriptor: Lcoursier/util/Xml$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/util/Xml$
         3: dup
         4: invokespecial #32                 // Method "<init>":()V
         7: putstatic     #34                 // Field MODULE$:Lcoursier/util/Xml$;
        10: return
      LineNumberTable:
        line 5: 0

  public scala.util.Either<java.lang.String, java.lang.String> text(coursier.util.Xml$Node, java.lang.String, java.lang.String);
    descriptor: (Lcoursier/util/Xml$Node;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_1
         1: invokeinterface #44,  1           // InterfaceMethod coursier/util/Xml$Node.children:()Lscala/collection/immutable/Seq;
         6: aload_2
         7: invokedynamic #66,  0             // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function1;
        12: invokeinterface #72,  2           // InterfaceMethod scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
        17: invokedynamic #81,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
        22: invokevirtual #86                 // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        25: aload_3
        26: invokedynamic #98,  0             // InvokeDynamic #2:apply:(Ljava/lang/String;)Lscala/Function0;
        31: invokevirtual #102                // Method scala/Option.toRight:(Lscala/Function0;)Lscala/util/Either;
        34: areturn
      LineNumberTable:
        line 50: 0
        line 51: 6
        line 52: 17
        line 53: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lcoursier/util/Xml$;
            0      35     1  elem   Lcoursier/util/Xml$Node;
            0      35     2 label   Ljava/lang/String;
            0      35     3 description   Ljava/lang/String;
    Signature: #37                          // (Lcoursier/util/Xml$Node;Ljava/lang/String;Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      elem                           final
      label                          final
      description                    final

  public scala.Option<coursier.core.Versions$DateTime> parseDateTime(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=13, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #115                // Method java/lang/String.length:()I
         4: bipush        14
         6: if_icmpne     163
         9: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        12: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        15: aload_1
        16: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        19: invokedynamic #133,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        24: invokevirtual #137                // Method scala/collection/StringOps$.forall$extension:(Ljava/lang/String;Lscala/Function1;)Z
        27: ifeq          163
        30: new           #139                // class scala/Some
        33: dup
        34: getstatic     #142                // Field coursier/core/Versions$DateTime$.MODULE$:Lcoursier/core/Versions$DateTime$;
        37: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        40: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        43: aload_1
        44: iconst_0
        45: iconst_4
        46: invokevirtual #146                // Method java/lang/String.substring:(II)Ljava/lang/String;
        49: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        52: invokevirtual #150                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
        55: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        58: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        61: aload_1
        62: iconst_4
        63: bipush        6
        65: invokevirtual #146                // Method java/lang/String.substring:(II)Ljava/lang/String;
        68: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        71: invokevirtual #150                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
        74: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        77: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        80: aload_1
        81: bipush        6
        83: bipush        8
        85: invokevirtual #146                // Method java/lang/String.substring:(II)Ljava/lang/String;
        88: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        91: invokevirtual #150                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
        94: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        97: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       100: aload_1
       101: bipush        8
       103: bipush        10
       105: invokevirtual #146                // Method java/lang/String.substring:(II)Ljava/lang/String;
       108: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       111: invokevirtual #150                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
       114: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       117: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       120: aload_1
       121: bipush        10
       123: bipush        12
       125: invokevirtual #146                // Method java/lang/String.substring:(II)Ljava/lang/String;
       128: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       131: invokevirtual #150                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
       134: getstatic     #120                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       137: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       140: aload_1
       141: bipush        12
       143: bipush        14
       145: invokevirtual #146                // Method java/lang/String.substring:(II)Ljava/lang/String;
       148: invokevirtual #128                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       151: invokevirtual #150                // Method scala/collection/StringOps$.toInt$extension:(Ljava/lang/String;)I
       154: invokevirtual #153                // Method coursier/core/Versions$DateTime$.apply:(IIIIII)Lcoursier/core/Versions$DateTime;
       157: invokespecial #156                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       160: goto          166
       163: getstatic     #161                // Field scala/None$.MODULE$:Lscala/None$;
       166: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 163
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 56: 0
        line 57: 30
        line 58: 40
        line 59: 58
        line 60: 77
        line 61: 97
        line 62: 117
        line 63: 137
        line 66: 163
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     167     0  this   Lcoursier/util/Xml$;
            0     167     1     s   Ljava/lang/String;
    Signature: #108                         // (Ljava/lang/String;)Lscala/Option<Lcoursier/core/Versions$DateTime;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final boolean $anonfun$text$1(java.lang.String, coursier.util.Xml$Node);
    descriptor: (Ljava/lang/String;Lcoursier/util/Xml$Node;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: invokeinterface #167,  1          // InterfaceMethod coursier/util/Xml$Node.label:()Ljava/lang/String;
         6: aload_0
         7: astore_2
         8: dup
         9: ifnonnull     20
        12: pop
        13: aload_2
        14: ifnull        27
        17: goto          31
        20: aload_2
        21: invokevirtual #171                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        24: ifeq          31
        27: iconst_1
        28: goto          32
        31: iconst_0
        32: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class java/lang/String, class coursier/util/Xml$Node, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0 label$1   Ljava/lang/String;
            0      33     1   x$1   Lcoursier/util/Xml$Node;
    MethodParameters:
      Name                           Flags
      label$1                        final
      x$1                            final

  public static final scala.Option $anonfun$text$2(coursier.util.Xml$Node);
    descriptor: (Lcoursier/util/Xml$Node;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #44,  1           // InterfaceMethod coursier/util/Xml$Node.children:()Lscala/collection/immutable/Seq;
         6: new           #15                 // class coursier/util/Xml$$anonfun$$nestedInanonfun$text$2$1
         9: dup
        10: invokespecial #173                // Method coursier/util/Xml$$anonfun$$nestedInanonfun$text$2$1."<init>":()V
        13: invokeinterface #177,  2          // InterfaceMethod scala/collection/immutable/Seq.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
        18: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0   x$2   Lcoursier/util/Xml$Node;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.String $anonfun$text$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #180                // class java/lang/StringBuilder
         3: dup
         4: ldc           #181                // int 10
         6: invokespecial #184                // Method java/lang/StringBuilder."<init>":(I)V
         9: aload_0
        10: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        13: ldc           #190                // String  not found
        15: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        18: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        21: areturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 description$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      description$1                  final

  public static final boolean $anonfun$parseDateTime$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #201                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: getstatic     #125                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_0
         7: invokevirtual #205                // Method scala/Predef$.charWrapper:(C)C
        10: invokevirtual #208                // Method scala/runtime/RichChar$.isDigit$extension:(C)Z
        13: ireturn
      LineNumberTable:
        line 56: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$3   C
    MethodParameters:
      Name                           Flags
      x$3                            final

  private coursier.util.Xml$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #210                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 68: 0
        line 5: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/util/Xml$;

  public static final java.lang.Object $anonfun$text$1$adapted(java.lang.String, coursier.util.Xml$Node);
    descriptor: (Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #212                // Method $anonfun$text$1:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Z
         5: invokestatic  #218                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 51: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 label$1   Ljava/lang/String;
            0       9     1   x$1   Lcoursier/util/Xml$Node;
    MethodParameters:
      Name                           Flags
      label$1                        final
      x$1                            final

  public static final java.lang.Object $anonfun$parseDateTime$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #222                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #224                // Method $anonfun$parseDateTime$1:(C)Z
         7: invokestatic  #218                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$3   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$3                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #237,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // DateTime=class coursier/core/Versions$DateTime of class coursier/core/Versions
  public static #13= #12 of #9;           // =class coursier/core/Versions$DateTime$ of class coursier/core/Versions
  public final #15;                       // class coursier/util/Xml$$anonfun$$nestedInanonfun$text$2$1
  public static #20= #17 of #19;          // Node=class coursier/util/Xml$Node of class coursier/util/Xml
  public static final #25= #22 of #24;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "Xml.scala"
BootstrapMethods:
  0: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #46 (Ljava/lang/Object;)Ljava/lang/Object;
      #51 REF_invokeStatic coursier/util/Xml$.$anonfun$text$1$adapted:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
      #53 (Lcoursier/util/Xml$Node;)Ljava/lang/Object;
      #54 5
      #55 1
      #53 (Lcoursier/util/Xml$Node;)Ljava/lang/Object;
  1: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #46 (Ljava/lang/Object;)Ljava/lang/Object;
      #77 REF_invokeStatic coursier/util/Xml$.$anonfun$text$2:(Lcoursier/util/Xml$Node;)Lscala/Option;
      #78 (Lcoursier/util/Xml$Node;)Lscala/Option;
      #54 5
      #55 1
      #78 (Lcoursier/util/Xml$Node;)Lscala/Option;
  2: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #88 ()Ljava/lang/Object;
      #93 REF_invokeStatic coursier/util/Xml$.$anonfun$text$3:(Ljava/lang/String;)Ljava/lang/String;
      #95 ()Ljava/lang/String;
      #54 5
      #55 1
      #95 ()Ljava/lang/String;
  3: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #46 (Ljava/lang/Object;)Ljava/lang/Object;
      #132 REF_invokeStatic coursier/util/Xml$.$anonfun$parseDateTime$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #46 (Ljava/lang/Object;)Ljava/lang/Object;
      #55 1
  4: #234 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #132 REF_invokeStatic coursier/util/Xml$.$anonfun$parseDateTime$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #51 REF_invokeStatic coursier/util/Xml$.$anonfun$text$1$adapted:(Ljava/lang/String;Lcoursier/util/Xml$Node;)Ljava/lang/Object;
      #77 REF_invokeStatic coursier/util/Xml$.$anonfun$text$2:(Lcoursier/util/Xml$Node;)Lscala/Option;
      #93 REF_invokeStatic coursier/util/Xml$.$anonfun$text$3:(Ljava/lang/String;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 C2 00 C3 01 00 81 00 2D 01 00 A2
   00 A3 01 00 2F 00 30 01 00 49 00 4A 01 00 59 00
   5A 01 00 1E 00 1D 01 00 6A 00 6B 01 00 23 00 24
   01
  Scala: length = 0x0 (unknown attribute)

