Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/util/control/Exception$Catch.class
  Last modified May 29, 2022; size 9808 bytes
  SHA-256 checksum 55983aac7e0f407134dfe281a8acadcafb8aa1514443e74171a483bf15efe207
  Compiled from "Exception.scala"
public class scala.util.control.Exception$Catch<T extends java.lang.Object> extends java.lang.Object implements scala.util.control.Exception$Described
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/util/control/Exception$Catch
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 32, attributes: 6
Constant pool:
    #1 = Utf8               scala/util/control/Exception$Catch
    #2 = Class              #1            // scala/util/control/Exception$Catch
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/util/control/Exception$Described;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/util/control/Exception$Described
    #7 = Class              #6            // scala/util/control/Exception$Described
    #8 = Utf8               Exception.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/util/control/Exception
   #15 = Class              #14           // scala/util/control/Exception
   #16 = Utf8               Catch
   #17 = Utf8               scala/util/control/Exception$Catch$$anon$2
   #18 = Class              #17           // scala/util/control/Exception$Catch$$anon$2
   #19 = Utf8               Described
   #20 = Utf8               scala/util/control/Exception$Finally
   #21 = Class              #20           // scala/util/control/Exception$Finally
   #22 = Utf8               Finally
   #23 = Utf8               pf
   #24 = Utf8               Lscala/PartialFunction;
   #25 = Utf8               Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
   #26 = Utf8               fin
   #27 = Utf8               Lscala/Option;
   #28 = Utf8               Lscala/Option<Lscala/util/control/Exception$Finally;>;
   #29 = Utf8               rethrow
   #30 = Utf8               Lscala/Function1;
   #31 = Utf8               Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;
   #32 = Utf8               name
   #33 = Utf8               Ljava/lang/String;
   #34 = Utf8               scala$util$control$Exception$Described$$_desc
   #35 = Utf8               desc
   #36 = Utf8               ()Ljava/lang/String;
   #37 = Utf8               desc$
   #38 = Utf8               (Lscala/util/control/Exception$Described;)Ljava/lang/String;
   #39 = NameAndType        #37:#38       // desc$:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   #40 = InterfaceMethodref #7.#39        // scala/util/control/Exception$Described.desc$:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   #41 = Utf8               this
   #42 = Utf8               Lscala/util/control/Exception$Catch;
   #43 = Utf8               withDesc
   #44 = Utf8               (Ljava/lang/String;)Lscala/util/control/Exception$Described;
   #45 = Utf8               s
   #46 = Utf8               withDesc$
   #47 = Utf8               (Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
   #48 = NameAndType        #46:#47       // withDesc$:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
   #49 = InterfaceMethodref #7.#48        // scala/util/control/Exception$Described.withDesc$:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
   #50 = Utf8               toString
   #51 = Utf8               toString$
   #52 = NameAndType        #51:#38       // toString$:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   #53 = InterfaceMethodref #7.#52        // scala/util/control/Exception$Described.toString$:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
   #54 = NameAndType        #34:#33       // scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
   #55 = Fieldref           #2.#54        // scala/util/control/Exception$Catch.scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
   #56 = Utf8               scala$util$control$Exception$Described$$_desc_$eq
   #57 = Utf8               (Ljava/lang/String;)V
   #58 = Utf8               x$1
   #59 = Utf8               ()Lscala/PartialFunction;
   #60 = Utf8               ()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;
   #61 = NameAndType        #23:#24       // pf:Lscala/PartialFunction;
   #62 = Fieldref           #2.#61        // scala/util/control/Exception$Catch.pf:Lscala/PartialFunction;
   #63 = Utf8               ()Lscala/Option;
   #64 = Utf8               ()Lscala/Option<Lscala/util/control/Exception$Finally;>;
   #65 = NameAndType        #26:#27       // fin:Lscala/Option;
   #66 = Fieldref           #2.#65        // scala/util/control/Exception$Catch.fin:Lscala/Option;
   #67 = Utf8               ()Lscala/Function1;
   #68 = Utf8               ()Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;
   #69 = NameAndType        #29:#30       // rethrow:Lscala/Function1;
   #70 = Fieldref           #2.#69        // scala/util/control/Exception$Catch.rethrow:Lscala/Function1;
   #71 = NameAndType        #32:#33       // name:Ljava/lang/String;
   #72 = Fieldref           #2.#71        // scala/util/control/Exception$Catch.name:Ljava/lang/String;
   #73 = Utf8               or
   #74 = Utf8               (Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
   #75 = Utf8               <U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;
   #76 = Utf8               pf2
   #77 = NameAndType        #23:#59       // pf:()Lscala/PartialFunction;
   #78 = Methodref          #2.#77        // scala/util/control/Exception$Catch.pf:()Lscala/PartialFunction;
   #79 = Utf8               scala/PartialFunction
   #80 = Class              #79           // scala/PartialFunction
   #81 = Utf8               orElse
   #82 = Utf8               (Lscala/PartialFunction;)Lscala/PartialFunction;
   #83 = NameAndType        #81:#82       // orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
   #84 = InterfaceMethodref #80.#83       // scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
   #85 = NameAndType        #26:#63       // fin:()Lscala/Option;
   #86 = Methodref          #2.#85        // scala/util/control/Exception$Catch.fin:()Lscala/Option;
   #87 = NameAndType        #29:#67       // rethrow:()Lscala/Function1;
   #88 = Methodref          #2.#87        // scala/util/control/Exception$Catch.rethrow:()Lscala/Function1;
   #89 = Utf8               <init>
   #90 = Utf8               (Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
   #91 = NameAndType        #89:#90       // "<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
   #92 = Methodref          #2.#91        // scala/util/control/Exception$Catch."<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
   #93 = Utf8               (Lscala/util/control/Exception$Catch;)Lscala/util/control/Exception$Catch;
   #94 = Utf8               <U:Ljava/lang/Object;>(Lscala/util/control/Exception$Catch<TU;>;)Lscala/util/control/Exception$Catch<TU;>;
   #95 = Utf8               other
   #96 = NameAndType        #73:#74       // or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
   #97 = Methodref          #2.#96        // scala/util/control/Exception$Catch.or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
   #98 = Utf8               apply
   #99 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #100 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)TU;
  #101 = Utf8               body
  #102 = Utf8               java/lang/Throwable
  #103 = Class              #102          // java/lang/Throwable
  #104 = Utf8               scala/Function0
  #105 = Class              #104          // scala/Function0
  #106 = Utf8               ()Ljava/lang/Object;
  #107 = NameAndType        #98:#106      // apply:()Ljava/lang/Object;
  #108 = InterfaceMethodref #105.#107     // scala/Function0.apply:()Ljava/lang/Object;
  #109 = Utf8               scala/Function1
  #110 = Class              #109          // scala/Function1
  #111 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #112 = NameAndType        #98:#111      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #113 = InterfaceMethodref #110.#112     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #114 = Utf8               scala/runtime/BoxesRunTime
  #115 = Class              #114          // scala/runtime/BoxesRunTime
  #116 = Utf8               unboxToBoolean
  #117 = Utf8               (Ljava/lang/Object;)Z
  #118 = NameAndType        #116:#117     // unboxToBoolean:(Ljava/lang/Object;)Z
  #119 = Methodref          #115.#118     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #120 = Utf8               isDefinedAt
  #121 = NameAndType        #120:#117     // isDefinedAt:(Ljava/lang/Object;)Z
  #122 = InterfaceMethodref #80.#121      // scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
  #123 = InterfaceMethodref #80.#112      // scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #124 = Utf8               scala/Option
  #125 = Class              #124          // scala/Option
  #126 = Utf8               isEmpty
  #127 = Utf8               ()Z
  #128 = NameAndType        #126:#127     // isEmpty:()Z
  #129 = Methodref          #125.#128     // scala/Option.isEmpty:()Z
  #130 = Utf8               get
  #131 = NameAndType        #130:#106     // get:()Ljava/lang/Object;
  #132 = Methodref          #125.#131     // scala/Option.get:()Ljava/lang/Object;
  #133 = Utf8               invoke
  #134 = Utf8               ()V
  #135 = NameAndType        #133:#134     // invoke:()V
  #136 = Methodref          #21.#135      // scala/util/control/Exception$Finally.invoke:()V
  #137 = Utf8               Lscala/Function0;
  #138 = Utf8               foreach_this
  #139 = Utf8               andFinally
  #140 = Utf8               (Lscala/Function0;)Lscala/util/control/Exception$Catch;
  #141 = Utf8               (Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lscala/util/control/Exception$Catch<TT;>;
  #142 = Utf8               scala/None$
  #143 = Class              #142          // scala/None$
  #144 = Utf8               MODULE$
  #145 = Utf8               Lscala/None$;
  #146 = NameAndType        #144:#145     // MODULE$:Lscala/None$;
  #147 = Fieldref           #143.#146     // scala/None$.MODULE$:Lscala/None$;
  #148 = Utf8               scala/Some
  #149 = Class              #148          // scala/Some
  #150 = Utf8               and
  #151 = Utf8               (Lscala/Function0;)Lscala/util/control/Exception$Finally;
  #152 = NameAndType        #150:#151     // and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
  #153 = Methodref          #21.#152      // scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
  #154 = Utf8               (Ljava/lang/Object;)V
  #155 = NameAndType        #89:#154      // "<init>":(Ljava/lang/Object;)V
  #156 = Methodref          #149.#155     // scala/Some."<init>":(Ljava/lang/Object;)V
  #157 = Utf8               (Lscala/Function0;)V
  #158 = NameAndType        #89:#157      // "<init>":(Lscala/Function0;)V
  #159 = Methodref          #21.#158      // scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
  #160 = Utf8               appendedFin
  #161 = Utf8               Lscala/util/control/Exception$Finally;
  #162 = Utf8               map_this
  #163 = Utf8               getOrElse_this
  #164 = Utf8               opt
  #165 = Utf8               (Lscala/Function0;)Lscala/Option;
  #166 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/Option<TU;>;
  #167 = Utf8               toOption
  #168 = Utf8               ()Lscala/util/control/Exception$Catch;
  #169 = NameAndType        #167:#168     // toOption:()Lscala/util/control/Exception$Catch;
  #170 = Methodref          #2.#169       // scala/util/control/Exception$Catch.toOption:()Lscala/util/control/Exception$Catch;
  #171 = MethodType         #106          //  ()Ljava/lang/Object;
  #172 = Utf8               $anonfun$opt$1
  #173 = Utf8               (Lscala/Function0;)Lscala/Some;
  #174 = NameAndType        #172:#173     // $anonfun$opt$1:(Lscala/Function0;)Lscala/Some;
  #175 = Methodref          #2.#174       // scala/util/control/Exception$Catch.$anonfun$opt$1:(Lscala/Function0;)Lscala/Some;
  #176 = MethodHandle       6:#175        // REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$opt$1:(Lscala/Function0;)Lscala/Some;
  #177 = Utf8               ()Lscala/Some;
  #178 = MethodType         #177          //  ()Lscala/Some;
  #179 = Integer            5
  #180 = Integer            1
  #181 = Utf8               java/lang/invoke/LambdaMetafactory
  #182 = Class              #181          // java/lang/invoke/LambdaMetafactory
  #183 = Utf8               altMetafactory
  #184 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #185 = NameAndType        #183:#184     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #186 = Methodref          #182.#185     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #187 = MethodHandle       6:#186        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #188 = Utf8               (Lscala/Function0;)Lscala/Function0;
  #189 = NameAndType        #98:#188      // apply:(Lscala/Function0;)Lscala/Function0;
  #190 = InvokeDynamic      #0:#189       // #0:apply:(Lscala/Function0;)Lscala/Function0;
  #191 = NameAndType        #98:#99       // apply:(Lscala/Function0;)Ljava/lang/Object;
  #192 = Methodref          #2.#191       // scala/util/control/Exception$Catch.apply:(Lscala/Function0;)Ljava/lang/Object;
  #193 = Utf8               either
  #194 = Utf8               (Lscala/Function0;)Lscala/util/Either;
  #195 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/util/Either<Ljava/lang/Throwable;TU;>;
  #196 = Utf8               toEither
  #197 = NameAndType        #196:#168     // toEither:()Lscala/util/control/Exception$Catch;
  #198 = Methodref          #2.#197       // scala/util/control/Exception$Catch.toEither:()Lscala/util/control/Exception$Catch;
  #199 = Utf8               $anonfun$either$1
  #200 = Utf8               (Lscala/Function0;)Lscala/util/Right;
  #201 = NameAndType        #199:#200     // $anonfun$either$1:(Lscala/Function0;)Lscala/util/Right;
  #202 = Methodref          #2.#201       // scala/util/control/Exception$Catch.$anonfun$either$1:(Lscala/Function0;)Lscala/util/Right;
  #203 = MethodHandle       6:#202        // REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$either$1:(Lscala/Function0;)Lscala/util/Right;
  #204 = Utf8               ()Lscala/util/Right;
  #205 = MethodType         #204          //  ()Lscala/util/Right;
  #206 = InvokeDynamic      #1:#189       // #1:apply:(Lscala/Function0;)Lscala/Function0;
  #207 = Utf8               scala/util/Either
  #208 = Class              #207          // scala/util/Either
  #209 = Utf8               withTry
  #210 = Utf8               (Lscala/Function0;)Lscala/util/Try;
  #211 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/util/Try<TU;>;
  #212 = Utf8               toTry
  #213 = NameAndType        #212:#168     // toTry:()Lscala/util/control/Exception$Catch;
  #214 = Methodref          #2.#213       // scala/util/control/Exception$Catch.toTry:()Lscala/util/control/Exception$Catch;
  #215 = Utf8               $anonfun$withTry$1
  #216 = Utf8               (Lscala/Function0;)Lscala/util/Success;
  #217 = NameAndType        #215:#216     // $anonfun$withTry$1:(Lscala/Function0;)Lscala/util/Success;
  #218 = Methodref          #2.#217       // scala/util/control/Exception$Catch.$anonfun$withTry$1:(Lscala/Function0;)Lscala/util/Success;
  #219 = MethodHandle       6:#218        // REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$withTry$1:(Lscala/Function0;)Lscala/util/Success;
  #220 = Utf8               ()Lscala/util/Success;
  #221 = MethodType         #220          //  ()Lscala/util/Success;
  #222 = InvokeDynamic      #2:#189       // #2:apply:(Lscala/Function0;)Lscala/Function0;
  #223 = Utf8               scala/util/Try
  #224 = Class              #223          // scala/util/Try
  #225 = Utf8               withApply
  #226 = Utf8               (Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #227 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;
  #228 = Utf8               f
  #229 = Utf8               (Lscala/util/control/Exception$Catch;Lscala/Function1;)V
  #230 = NameAndType        #89:#229      // "<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
  #231 = Methodref          #18.#230      // scala/util/control/Exception$Catch$$anon$2."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
  #232 = Utf8               ()Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;
  #233 = MethodType         #111          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #234 = Utf8               $anonfun$toOption$1
  #235 = Utf8               (Ljava/lang/Throwable;)Lscala/None$;
  #236 = NameAndType        #234:#235     // $anonfun$toOption$1:(Ljava/lang/Throwable;)Lscala/None$;
  #237 = Methodref          #2.#236       // scala/util/control/Exception$Catch.$anonfun$toOption$1:(Ljava/lang/Throwable;)Lscala/None$;
  #238 = MethodHandle       6:#237        // REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toOption$1:(Ljava/lang/Throwable;)Lscala/None$;
  #239 = MethodType         #235          //  (Ljava/lang/Throwable;)Lscala/None$;
  #240 = NameAndType        #98:#67       // apply:()Lscala/Function1;
  #241 = InvokeDynamic      #3:#240       // #3:apply:()Lscala/Function1;
  #242 = NameAndType        #225:#226     // withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #243 = Methodref          #2.#242       // scala/util/control/Exception$Catch.withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
  #244 = Utf8               ()Lscala/util/control/Exception$Catch<Lscala/util/Either<Ljava/lang/Throwable;TT;>;>;
  #245 = Utf8               $anonfun$toEither$1
  #246 = Utf8               (Ljava/lang/Throwable;)Lscala/util/Left;
  #247 = NameAndType        #245:#246     // $anonfun$toEither$1:(Ljava/lang/Throwable;)Lscala/util/Left;
  #248 = Methodref          #2.#247       // scala/util/control/Exception$Catch.$anonfun$toEither$1:(Ljava/lang/Throwable;)Lscala/util/Left;
  #249 = MethodHandle       6:#248        // REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toEither$1:(Ljava/lang/Throwable;)Lscala/util/Left;
  #250 = MethodType         #246          //  (Ljava/lang/Throwable;)Lscala/util/Left;
  #251 = InvokeDynamic      #4:#240       // #4:apply:()Lscala/Function1;
  #252 = Utf8               ()Lscala/util/control/Exception$Catch<Lscala/util/Try<TT;>;>;
  #253 = Utf8               $anonfun$toTry$1
  #254 = Utf8               (Ljava/lang/Throwable;)Lscala/util/Failure;
  #255 = NameAndType        #253:#254     // $anonfun$toTry$1:(Ljava/lang/Throwable;)Lscala/util/Failure;
  #256 = Methodref          #2.#255       // scala/util/control/Exception$Catch.$anonfun$toTry$1:(Ljava/lang/Throwable;)Lscala/util/Failure;
  #257 = MethodHandle       6:#256        // REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toTry$1:(Ljava/lang/Throwable;)Lscala/util/Failure;
  #258 = MethodType         #254          //  (Ljava/lang/Throwable;)Lscala/util/Failure;
  #259 = InvokeDynamic      #5:#240       // #5:apply:()Lscala/Function1;
  #260 = Utf8               $anonfun$apply$1
  #261 = Utf8               (Lscala/util/control/Exception$Finally;)V
  #262 = Utf8               $anonfun$andFinally$1
  #263 = Utf8               (Lscala/Function0;Lscala/util/control/Exception$Finally;)Lscala/util/control/Exception$Finally;
  #264 = Utf8               body$1
  #265 = Utf8               x$2
  #266 = Utf8               $anonfun$andFinally$2
  #267 = Utf8               body$2
  #268 = Utf8               body$3
  #269 = Utf8               scala/util/Right
  #270 = Class              #269          // scala/util/Right
  #271 = Methodref          #270.#155     // scala/util/Right."<init>":(Ljava/lang/Object;)V
  #272 = Utf8               body$4
  #273 = Utf8               scala/util/Success
  #274 = Class              #273          // scala/util/Success
  #275 = Methodref          #274.#155     // scala/util/Success."<init>":(Ljava/lang/Object;)V
  #276 = Utf8               x$3
  #277 = Utf8               Ljava/lang/Throwable;
  #278 = Utf8               x$4
  #279 = Utf8               scala/util/Left
  #280 = Class              #279          // scala/util/Left
  #281 = Methodref          #280.#155     // scala/util/Left."<init>":(Ljava/lang/Object;)V
  #282 = Utf8               x
  #283 = Utf8               scala/util/Failure
  #284 = Class              #283          // scala/util/Failure
  #285 = Utf8               (Ljava/lang/Throwable;)V
  #286 = NameAndType        #89:#285      // "<init>":(Ljava/lang/Throwable;)V
  #287 = Methodref          #284.#286     // scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
  #288 = Utf8               (Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;Lscala/Option<Lscala/util/control/Exception$Finally;>;Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;)V
  #289 = NameAndType        #89:#134      // "<init>":()V
  #290 = Methodref          #5.#289       // java/lang/Object."<init>":()V
  #291 = Utf8
  #292 = String             #291          //
  #293 = NameAndType        #56:#57       // scala$util$control$Exception$Described$$_desc_$eq:(Ljava/lang/String;)V
  #294 = InterfaceMethodref #7.#293       // scala/util/control/Exception$Described.scala$util$control$Exception$Described$$_desc_$eq:(Ljava/lang/String;)V
  #295 = String             #16           // Catch
  #296 = Utf8               $anonfun$apply$1$adapted
  #297 = Utf8               (Lscala/util/control/Exception$Finally;)Ljava/lang/Object;
  #298 = NameAndType        #260:#261     // $anonfun$apply$1:(Lscala/util/control/Exception$Finally;)V
  #299 = Methodref          #2.#298       // scala/util/control/Exception$Catch.$anonfun$apply$1:(Lscala/util/control/Exception$Finally;)V
  #300 = Utf8               scala/runtime/BoxedUnit
  #301 = Class              #300          // scala/runtime/BoxedUnit
  #302 = Utf8               UNIT
  #303 = Utf8               Lscala/runtime/BoxedUnit;
  #304 = NameAndType        #302:#303     // UNIT:Lscala/runtime/BoxedUnit;
  #305 = Fieldref           #301.#304     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #306 = Utf8               $deserializeLambda$
  #307 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #308 = Utf8               scala/runtime/LambdaDeserialize
  #309 = Class              #308          // scala/runtime/LambdaDeserialize
  #310 = Utf8               bootstrap
  #311 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #312 = NameAndType        #310:#311     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #313 = Methodref          #309.#312     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #314 = MethodHandle       6:#313        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #315 = Utf8               lambdaDeserialize
  #316 = NameAndType        #315:#307     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #317 = InvokeDynamic      #6:#316       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #318 = Utf8               Signature
  #319 = Utf8               Code
  #320 = Utf8               LineNumberTable
  #321 = Utf8               LocalVariableTable
  #322 = Utf8               MethodParameters
  #323 = Utf8               StackMapTable
  #324 = Utf8               InnerClasses
  #325 = Utf8               SourceFile
  #326 = Utf8               BootstrapMethods
  #327 = Utf8               ScalaInlineInfo
  #328 = Utf8               Scala
{
  private final scala.PartialFunction<java.lang.Throwable, T> pf;
    descriptor: Lscala/PartialFunction;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #25                          // Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;

  private final scala.Option<scala.util.control.Exception$Finally> fin;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #28                          // Lscala/Option<Lscala/util/control/Exception$Finally;>;

  private final scala.Function1<java.lang.Throwable, java.lang.Object> rethrow;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #31                          // Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;

  private final java.lang.String name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.lang.String scala$util$control$Exception$Described$$_desc;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  public java.lang.String desc();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #40                 // InterfaceMethod scala/util/control/Exception$Described.desc$:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;

  public scala.util.control.Exception$Described withDesc(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/control/Exception$Described;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #49                 // InterfaceMethod scala/util/control/Exception$Described.withDesc$:(Lscala/util/control/Exception$Described;Ljava/lang/String;)Lscala/util/control/Exception$Described;
         5: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/util/control/Exception$Catch;
            0       6     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #53                 // InterfaceMethod scala/util/control/Exception$Described.toString$:(Lscala/util/control/Exception$Described;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;

  public java.lang.String scala$util$control$Exception$Described$$_desc();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #55                 // Field scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;

  public void scala$util$control$Exception$Described$$_desc_$eq(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #55                 // Field scala$util$control$Exception$Described$$_desc:Ljava/lang/String;
         5: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/util/control/Exception$Catch;
            0       6     1   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.PartialFunction<java.lang.Throwable, T> pf();
    descriptor: ()Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #62                 // Field pf:Lscala/PartialFunction;
         4: areturn
      LineNumberTable:
        line 214: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;
    Signature: #60                          // ()Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;

  public scala.Option<scala.util.control.Exception$Finally> fin();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #66                 // Field fin:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 215: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;
    Signature: #64                          // ()Lscala/Option<Lscala/util/control/Exception$Finally;>;

  public scala.Function1<java.lang.Throwable, java.lang.Object> rethrow();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #70                 // Field rethrow:Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;
    Signature: #68                          // ()Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;

  public java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #72                 // Field name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/util/control/Exception$Catch;

  public <U extends java.lang.Object> scala.util.control.Exception$Catch<U> or(scala.PartialFunction<java.lang.Throwable, U>);
    descriptor: (Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/util/control/Exception$Catch
         3: dup
         4: aload_0
         5: invokevirtual #78                 // Method pf:()Lscala/PartialFunction;
         8: aload_1
         9: invokeinterface #84,  2           // InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
        14: aload_0
        15: invokevirtual #86                 // Method fin:()Lscala/Option;
        18: aload_0
        19: invokevirtual #88                 // Method rethrow:()Lscala/Function1;
        22: invokespecial #92                 // Method "<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        25: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lscala/util/control/Exception$Catch;
            0      26     1   pf2   Lscala/PartialFunction;
    Signature: #75                          // <U:Ljava/lang/Object;>(Lscala/PartialFunction<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;
    MethodParameters:
      Name                           Flags
      pf2                            final

  public <U extends java.lang.Object> scala.util.control.Exception$Catch<U> or(scala.util.control.Exception$Catch<U>);
    descriptor: (Lscala/util/control/Exception$Catch;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #78                 // Method pf:()Lscala/PartialFunction;
         5: invokevirtual #97                 // Method or:(Lscala/PartialFunction;)Lscala/util/control/Exception$Catch;
         8: areturn
      LineNumberTable:
        line 223: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/util/control/Exception$Catch;
            0       9     1 other   Lscala/util/control/Exception$Catch;
    Signature: #94                          // <U:Ljava/lang/Object;>(Lscala/util/control/Exception$Catch<TU;>;)Lscala/util/control/Exception$Catch<TU;>;
    MethodParameters:
      Name                           Flags
      other                          final

  public <U extends java.lang.Object> U apply(scala.Function0<U>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=2
         0: aload_1
         1: invokeinterface #108,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
         6: goto          93
         9: astore_2
        10: aload_0
        11: invokevirtual #88                 // Method rethrow:()Lscala/Function1;
        14: aload_2
        15: invokeinterface #113,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        20: invokestatic  #119                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        23: ifeq          28
        26: aload_2
        27: athrow
        28: aload_0
        29: invokevirtual #78                 // Method pf:()Lscala/PartialFunction;
        32: aload_2
        33: invokeinterface #122,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
        38: ifeq          54
        41: aload_0
        42: invokevirtual #78                 // Method pf:()Lscala/PartialFunction;
        45: aload_2
        46: invokeinterface #123,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        51: goto          93
        54: aload_2
        55: athrow
        56: astore_3
        57: aload_0
        58: invokevirtual #86                 // Method fin:()Lscala/Option;
        61: dup
        62: ifnonnull     67
        65: aconst_null
        66: athrow
        67: astore        4
        69: aload         4
        71: invokevirtual #129                // Method scala/Option.isEmpty:()Z
        74: ifne          88
        77: aload         4
        79: invokevirtual #132                // Method scala/Option.get:()Ljava/lang/Object;
        82: checkcast     #21                 // class scala/util/control/Exception$Finally
        85: invokevirtual #136                // Method scala/util/control/Exception$Finally.invoke:()V
        88: aconst_null
        89: astore        4
        91: aload_3
        92: athrow
        93: aload_0
        94: invokevirtual #86                 // Method fin:()Lscala/Option;
        97: dup
        98: ifnonnull     103
       101: aconst_null
       102: athrow
       103: astore        5
       105: aload         5
       107: invokevirtual #129                // Method scala/Option.isEmpty:()Z
       110: ifne          125
       113: aload         5
       115: invokevirtual #132                // Method scala/Option.get:()Ljava/lang/Object;
       118: checkcast     #21                 // class scala/util/control/Exception$Finally
       121: invokevirtual #136                // Method scala/util/control/Exception$Finally.invoke:()V
       124: areturn
       125: areturn
      Exception table:
         from    to  target type
             0     6     9   Class java/lang/Throwable
             0    56    56   any
      StackMapTable: number_of_entries = 9
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class java/lang/Throwable ]
        frame_type = 25 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/util/control/Exception$Catch, class scala/Function0 ]
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class scala/util/control/Exception$Catch, class scala/Function0, top, class java/lang/Throwable ]
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/util/control/Exception$Catch, class scala/Function0 ]
          stack = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/util/control/Exception$Catch, class scala/Function0 ]
          stack = [ class java/lang/Object, class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/util/control/Exception$Catch, class scala/Function0, top, top, top, class scala/Option ]
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 227: 0
        line 229: 10
        line 230: 28
        line 229: 54
        line 232: 57
        line 232: 85
        line 232: 88
        line 232: 121
        line 232: 124
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     126     0  this   Lscala/util/control/Exception$Catch;
            0     126     1  body   Lscala/Function0;
           69      19     4 foreach_this   Lscala/Option;
          105      20     5 foreach_this   Lscala/Option;
    Signature: #100                         // <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)TU;
    MethodParameters:
      Name                           Flags
      body                           final

  public scala.util.control.Exception$Catch<T> andFinally(scala.Function0<scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function0;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=2
         0: aload_0
         1: invokevirtual #86                 // Method fin:()Lscala/Option;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_3
        11: aload_3
        12: invokevirtual #129                // Method scala/Option.isEmpty:()Z
        15: ifeq          24
        18: getstatic     #147                // Field scala/None$.MODULE$:Lscala/None$;
        21: goto          42
        24: new           #149                // class scala/Some
        27: dup
        28: aload_3
        29: invokevirtual #132                // Method scala/Option.get:()Ljava/lang/Object;
        32: checkcast     #21                 // class scala/util/control/Exception$Finally
        35: aload_1
        36: invokevirtual #153                // Method scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
        39: invokespecial #156                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        42: aconst_null
        43: astore_3
        44: astore        4
        46: aload         4
        48: invokevirtual #129                // Method scala/Option.isEmpty:()Z
        51: ifeq          65
        54: new           #21                 // class scala/util/control/Exception$Finally
        57: dup
        58: aload_1
        59: invokespecial #159                // Method scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
        62: goto          70
        65: aload         4
        67: invokevirtual #132                // Method scala/Option.get:()Ljava/lang/Object;
        70: aconst_null
        71: astore        4
        73: checkcast     #21                 // class scala/util/control/Exception$Finally
        76: astore_2
        77: new           #2                  // class scala/util/control/Exception$Catch
        80: dup
        81: aload_0
        82: invokevirtual #78                 // Method pf:()Lscala/PartialFunction;
        85: new           #149                // class scala/Some
        88: dup
        89: aload_2
        90: invokespecial #156                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        93: aload_0
        94: invokevirtual #88                 // Method rethrow:()Lscala/Function1;
        97: invokespecial #92                 // Method "<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
       100: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 253 /* append */
          offset_delta = 13
          locals = [ top, class scala/Option ]
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class scala/util/control/Exception$Catch, class scala/Function0, top, null, class scala/Option ]
          stack = []
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 238: 0
        line 238: 35
        line 238: 39
        line 238: 54
        line 238: 62
        line 239: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           77      23     2 appendedFin   Lscala/util/control/Exception$Finally;
            0     101     0  this   Lscala/util/control/Exception$Catch;
            0     101     1  body   Lscala/Function0;
           11      31     3 map_this   Lscala/Option;
           46      24     4 getOrElse_this   Lscala/Option;
    Signature: #141                         // (Lscala/Function0<Lscala/runtime/BoxedUnit;>;)Lscala/util/control/Exception$Catch<TT;>;
    MethodParameters:
      Name                           Flags
      body                           final

  public <U extends java.lang.Object> scala.Option<U> opt(scala.Function0<U>);
    descriptor: (Lscala/Function0;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #170                // Method toOption:()Lscala/util/control/Exception$Catch;
         4: aload_1
         5: invokedynamic #190,  0            // InvokeDynamic #0:apply:(Lscala/Function0;)Lscala/Function0;
        10: invokevirtual #192                // Method apply:(Lscala/Function0;)Ljava/lang/Object;
        13: checkcast     #125                // class scala/Option
        16: areturn
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/util/control/Exception$Catch;
            0      17     1  body   Lscala/Function0;
    Signature: #166                         // <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/Option<TU;>;
    MethodParameters:
      Name                           Flags
      body                           final

  public <U extends java.lang.Object> scala.util.Either<java.lang.Throwable, U> either(scala.Function0<U>);
    descriptor: (Lscala/Function0;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #198                // Method toEither:()Lscala/util/control/Exception$Catch;
         4: aload_1
         5: invokedynamic #206,  0            // InvokeDynamic #1:apply:(Lscala/Function0;)Lscala/Function0;
        10: invokevirtual #192                // Method apply:(Lscala/Function0;)Ljava/lang/Object;
        13: checkcast     #208                // class scala/util/Either
        16: areturn
      LineNumberTable:
        line 251: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/util/control/Exception$Catch;
            0      17     1  body   Lscala/Function0;
    Signature: #195                         // <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/util/Either<Ljava/lang/Throwable;TU;>;
    MethodParameters:
      Name                           Flags
      body                           final

  public <U extends java.lang.Object> scala.util.Try<U> withTry(scala.Function0<U>);
    descriptor: (Lscala/Function0;)Lscala/util/Try;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #214                // Method toTry:()Lscala/util/control/Exception$Catch;
         4: aload_1
         5: invokedynamic #222,  0            // InvokeDynamic #2:apply:(Lscala/Function0;)Lscala/Function0;
        10: invokevirtual #192                // Method apply:(Lscala/Function0;)Ljava/lang/Object;
        13: checkcast     #224                // class scala/util/Try
        16: areturn
      LineNumberTable:
        line 256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/util/control/Exception$Catch;
            0      17     1  body   Lscala/Function0;
    Signature: #211                         // <U:Ljava/lang/Object;>(Lscala/Function0<TU;>;)Lscala/util/Try<TU;>;
    MethodParameters:
      Name                           Flags
      body                           final

  public <U extends java.lang.Object> scala.util.control.Exception$Catch<U> withApply(scala.Function1<java.lang.Throwable, U>);
    descriptor: (Lscala/Function1;)Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: new           #18                 // class scala/util/control/Exception$Catch$$anon$2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #231                // Method scala/util/control/Exception$Catch$$anon$2."<init>":(Lscala/util/control/Exception$Catch;Lscala/Function1;)V
         9: astore_2
        10: new           #2                  // class scala/util/control/Exception$Catch
        13: dup
        14: aload_2
        15: aload_0
        16: invokevirtual #86                 // Method fin:()Lscala/Option;
        19: aload_0
        20: invokevirtual #88                 // Method rethrow:()Lscala/Function1;
        23: invokespecial #92                 // Method "<init>":(Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
        26: areturn
      LineNumberTable:
        line 261: 0
        line 265: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      16     2   pf2   Lscala/PartialFunction;
            0      27     0  this   Lscala/util/control/Exception$Catch;
            0      27     1     f   Lscala/Function1;
    Signature: #227                         // <U:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/Throwable;TU;>;)Lscala/util/control/Exception$Catch<TU;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public scala.util.control.Exception$Catch<scala.Option<T>> toOption();
    descriptor: ()Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #241,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
         6: invokevirtual #243                // Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
         9: areturn
      LineNumberTable:
        line 269: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/control/Exception$Catch;
    Signature: #232                         // ()Lscala/util/control/Exception$Catch<Lscala/Option<TT;>;>;

  public scala.util.control.Exception$Catch<scala.util.Either<java.lang.Throwable, T>> toEither();
    descriptor: ()Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #251,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
         6: invokevirtual #243                // Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
         9: areturn
      LineNumberTable:
        line 270: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/control/Exception$Catch;
    Signature: #244                         // ()Lscala/util/control/Exception$Catch<Lscala/util/Either<Ljava/lang/Throwable;TT;>;>;

  public scala.util.control.Exception$Catch<scala.util.Try<T>> toTry();
    descriptor: ()Lscala/util/control/Exception$Catch;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #259,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
         6: invokevirtual #243                // Method withApply:(Lscala/Function1;)Lscala/util/control/Exception$Catch;
         9: areturn
      LineNumberTable:
        line 271: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/util/control/Exception$Catch;
    Signature: #252                         // ()Lscala/util/control/Exception$Catch<Lscala/util/Try<TT;>;>;

  public static final void $anonfun$apply$1(scala.util.control.Exception$Finally);
    descriptor: (Lscala/util/control/Exception$Finally;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #136                // Method scala/util/control/Exception$Finally.invoke:()V
         4: return
      LineNumberTable:
        line 232: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lscala/util/control/Exception$Finally;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.util.control.Exception$Finally $anonfun$andFinally$1(scala.Function0, scala.util.control.Exception$Finally);
    descriptor: (Lscala/Function0;Lscala/util/control/Exception$Finally;)Lscala/util/control/Exception$Finally;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #153                // Method scala/util/control/Exception$Finally.and:(Lscala/Function0;)Lscala/util/control/Exception$Finally;
         5: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 body$1   Lscala/Function0;
            0       6     1   x$2   Lscala/util/control/Exception$Finally;
    MethodParameters:
      Name                           Flags
      body$1                         final
      x$2                            final

  public static final scala.util.control.Exception$Finally $anonfun$andFinally$2(scala.Function0);
    descriptor: (Lscala/Function0;)Lscala/util/control/Exception$Finally;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #21                 // class scala/util/control/Exception$Finally
         3: dup
         4: aload_0
         5: invokespecial #159                // Method scala/util/control/Exception$Finally."<init>":(Lscala/Function0;)V
         8: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 body$1   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      body$1                         final

  public static final scala.Some $anonfun$opt$1(scala.Function0);
    descriptor: (Lscala/Function0;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #149                // class scala/Some
         3: dup
         4: aload_0
         5: invokeinterface #108,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: invokespecial #156                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        13: areturn
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 body$2   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      body$2                         final

  public static final scala.util.Right $anonfun$either$1(scala.Function0);
    descriptor: (Lscala/Function0;)Lscala/util/Right;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #270                // class scala/util/Right
         3: dup
         4: aload_0
         5: invokeinterface #108,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: invokespecial #271                // Method scala/util/Right."<init>":(Ljava/lang/Object;)V
        13: areturn
      LineNumberTable:
        line 251: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 body$3   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      body$3                         final

  public static final scala.util.Success $anonfun$withTry$1(scala.Function0);
    descriptor: (Lscala/Function0;)Lscala/util/Success;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #274                // class scala/util/Success
         3: dup
         4: aload_0
         5: invokeinterface #108,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: invokespecial #275                // Method scala/util/Success."<init>":(Ljava/lang/Object;)V
        13: areturn
      LineNumberTable:
        line 256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 body$4   Lscala/Function0;
    MethodParameters:
      Name                           Flags
      body$4                         final

  public static final scala.None$ $anonfun$toOption$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/None$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #147                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 269: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0   x$3   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final scala.util.Left $anonfun$toEither$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/util/Left;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #280                // class scala/util/Left
         3: dup
         4: aload_0
         5: invokespecial #281                // Method scala/util/Left."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 270: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$4   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final scala.util.Failure $anonfun$toTry$1(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)Lscala/util/Failure;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #284                // class scala/util/Failure
         3: dup
         4: aload_0
         5: invokespecial #287                // Method scala/util/Failure."<init>":(Ljava/lang/Throwable;)V
         8: areturn
      LineNumberTable:
        line 271: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     x   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.util.control.Exception$Catch(scala.PartialFunction<java.lang.Throwable, T>, scala.Option<scala.util.control.Exception$Finally>, scala.Function1<java.lang.Throwable, java.lang.Object>);
    descriptor: (Lscala/PartialFunction;Lscala/Option;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: putfield      #62                 // Field pf:Lscala/PartialFunction;
         5: aload_0
         6: aload_2
         7: putfield      #66                 // Field fin:Lscala/Option;
        10: aload_0
        11: aload_3
        12: putfield      #70                 // Field rethrow:Lscala/Function1;
        15: aload_0
        16: invokespecial #290                // Method java/lang/Object."<init>":()V
        19: aload_0
        20: ldc_w         #292                // String
        23: invokeinterface #294,  2          // InterfaceMethod scala/util/control/Exception$Described.scala$util$control$Exception$Described$$_desc_$eq:(Ljava/lang/String;)V
        28: aload_0
        29: ldc_w         #295                // String Catch
        32: putfield      #72                 // Field name:Ljava/lang/String;
        35: return
      LineNumberTable:
        line 214: 0
        line 215: 5
        line 216: 10
        line 217: 15
        line 183: 19
        line 219: 28
        line 213: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Lscala/util/control/Exception$Catch;
            0      36     1    pf   Lscala/PartialFunction;
            0      36     2   fin   Lscala/Option;
            0      36     3 rethrow   Lscala/Function1;
    Signature: #288                         // (Lscala/PartialFunction<Ljava/lang/Throwable;TT;>;Lscala/Option<Lscala/util/control/Exception$Finally;>;Lscala/Function1<Ljava/lang/Throwable;Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      pf                             final
      fin                            final
      rethrow                        final

  public static final java.lang.Object $anonfun$apply$1$adapted(scala.util.control.Exception$Finally);
    descriptor: (Lscala/util/control/Exception$Finally;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #299                // Method $anonfun$apply$1:(Lscala/util/control/Exception$Finally;)V
         4: getstatic     #305                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 232: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Lscala/util/control/Exception$Finally;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #317,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #16= #2 of #15;           // Catch=class scala/util/control/Exception$Catch of class scala/util/control/Exception
  public final #18;                       // class scala/util/control/Exception$Catch$$anon$2
  public static #19= #7 of #15;           // Described=class scala/util/control/Exception$Described of class scala/util/control/Exception
  public static #22= #21 of #15;          // Finally=class scala/util/control/Exception$Finally of class scala/util/control/Exception
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/util/control/Exception$Described;
SourceFile: "Exception.scala"
BootstrapMethods:
  0: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #171 ()Ljava/lang/Object;
      #176 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$opt$1:(Lscala/Function0;)Lscala/Some;
      #178 ()Lscala/Some;
      #179 5
      #180 1
      #178 ()Lscala/Some;
  1: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #171 ()Ljava/lang/Object;
      #203 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$either$1:(Lscala/Function0;)Lscala/util/Right;
      #205 ()Lscala/util/Right;
      #179 5
      #180 1
      #205 ()Lscala/util/Right;
  2: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #171 ()Ljava/lang/Object;
      #219 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$withTry$1:(Lscala/Function0;)Lscala/util/Success;
      #221 ()Lscala/util/Success;
      #179 5
      #180 1
      #221 ()Lscala/util/Success;
  3: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #233 (Ljava/lang/Object;)Ljava/lang/Object;
      #238 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toOption$1:(Ljava/lang/Throwable;)Lscala/None$;
      #239 (Ljava/lang/Throwable;)Lscala/None$;
      #179 5
      #180 1
      #239 (Ljava/lang/Throwable;)Lscala/None$;
  4: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #233 (Ljava/lang/Object;)Ljava/lang/Object;
      #249 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toEither$1:(Ljava/lang/Throwable;)Lscala/util/Left;
      #250 (Ljava/lang/Throwable;)Lscala/util/Left;
      #179 5
      #180 1
      #250 (Ljava/lang/Throwable;)Lscala/util/Left;
  5: #187 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #233 (Ljava/lang/Object;)Ljava/lang/Object;
      #257 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toTry$1:(Ljava/lang/Throwable;)Lscala/util/Failure;
      #258 (Ljava/lang/Throwable;)Lscala/util/Failure;
      #179 5
      #180 1
      #258 (Ljava/lang/Throwable;)Lscala/util/Failure;
  6: #314 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #203 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$either$1:(Lscala/Function0;)Lscala/util/Right;
      #176 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$opt$1:(Lscala/Function0;)Lscala/Some;
      #249 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toEither$1:(Ljava/lang/Throwable;)Lscala/util/Left;
      #238 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toOption$1:(Ljava/lang/Throwable;)Lscala/None$;
      #257 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$toTry$1:(Ljava/lang/Throwable;)Lscala/util/Failure;
      #219 REF_invokeStatic scala/util/control/Exception$Catch.$anonfun$withTry$1:(Lscala/Function0;)Lscala/util/Success;
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 00 00 1F 01 06 01 07 01 01 0A 00 97 01 01 04
   01 05 01 01 28 01 29 01 00 C7 00 C8 01 00 AC 00
   AD 01 00 F5 00 F6 01 00 EA 00 EB 01 00 FD 00 FE
   01 00 D7 00 D8 01 00 59 00 5A 00 00 8B 00 8C 00
   00 62 00 63 00 00 23 00 24 00 00 C1 00 C2 00 00
   1A 00 3F 00 00 20 00 24 00 00 A4 00 A5 00 00 49
   00 4A 00 00 49 00 5D 00 00 17 00 3B 00 00 1D 00
   43 00 00 22 00 24 01 00 38 00 39 01 00 C4 00 A8
   00 00 A7 00 A8 00 00 32 00 24 00 00 D4 00 A8 00
   00 E1 00 E2 00 00 2B 00 2C 00 00 D1 00 D2 00
  Scala: length = 0x0 (unknown attribute)

