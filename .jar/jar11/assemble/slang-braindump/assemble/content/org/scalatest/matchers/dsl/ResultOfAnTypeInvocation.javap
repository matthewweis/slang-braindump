Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/matchers/dsl/ResultOfAnTypeInvocation.class
  Last modified May 29, 2022; size 5792 bytes
  SHA-256 checksum c2fe69cfb90865473ffd33cd34fc6ae104873b7634580578af28cd7dca3d8d4b
  Compiled from "ResultOfAnTypeInvocation.scala"
public final class org.scalatest.matchers.dsl.ResultOfAnTypeInvocation<T extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/matchers/dsl/ResultOfAnTypeInvocation
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 13, attributes: 5
Constant pool:
    #1 = Utf8               org/scalatest/matchers/dsl/ResultOfAnTypeInvocation
    #2 = Class              #1            // org/scalatest/matchers/dsl/ResultOfAnTypeInvocation
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               ResultOfAnTypeInvocation.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\u0005]c\u0001\u0002\t\u0012\u0005iA\u0001B\t\u0001\u0003\u0006\u0004%\ta\t\u0005\tk\u0001\u0011\t\u0011)A\u0005I!)a\u0007\u0001C\u0001o!91\b\u0001b\u0001\n\u0003a\u0004B\u0002%\u0001A\u0003%Q\bC\u00037\u0001\u0011\u0005\u0011\nC\u0003R\u0001\u0011\u0005!\u000bC\u0003R\u0001\u0011\u0005A\u000eC\u0003v\u0001\u0011\u0005a\u000f\u0003\u0004R\u0001\u0011\u0005\u0011Q\u0003\u0005\b\u0003O\u0001A\u0011AA\u0015\u0011\u001d\t9\u0003\u0001C\u0001\u0003gAq!a\u000e\u0001\t\u0003\tI\u0004C\u0004\u0002(\u0001!\t!a\u0011\t\u000f\u00055\u0003\u0001\"\u0011\u0002P\tA\"+Z:vYR|e-\u00118UsB,\u0017J\u001c<pG\u0006$\u0018n\u001c8\u000b\u0005I\u0019\u0012a\u00013tY*\u0011A#F\u0001\t[\u0006$8\r[3sg*\u0011acF\u0001\ng\u000e\fG.\u0019;fgRT\u0011\u0001G\u0001\u0004_J<7\u0001A\u000b\u000371\u001a\"\u0001\u0001\u000f\u0011\u0005u\u0001S\"\u0001\u0010\u000b\u0003}\tQa]2bY\u0006L!!\t\u0010\u0003\r\u0005s\u0017PU3g\u0003!\u0019G.\u0019>{)\u0006<W#\u0001\u0013\u0011\u0007\u0015B#&D\u0001\'\u0015\t9c$A\u0004sK\u001adWm\u0019;\n\u0005%2#\u0001C\"mCN\u001cH+Y4\u0011\u0005-bC\u0002\u0001\u0003\u0006[\u0001\u0011\rA\f\u0002\u0002)F\u0011qF\r\t\u0003;AJ!!\r\u0010\u0003\u000f9{G\u000f[5oOB\u0011QdM\u0005\u0003iy\u00111!\u00118z\u0003%\u0019G.\u0019>{)\u0006<\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0003qi\u00022!\u000f\u0001+\u001b\u0005\t\u0002\"\u0002\u0012\u0004\u0001\u0004!\u0013!B2mCjTX#A\u001f\u0011\u0007y*%F\u0004\u0002@\u0007B\u0011\u0001IH\u0007\u0002\u0003*\u0011!)G\u0001\u0007yI|w\u000e\u001e \n\u0005\u0011s\u0012A\u0002)sK\u0012,g-\u0003\u0002G\u000f\n)1\t\\1tg*\u0011AIH\u0001\u0007G2\f\'P\u001f\u0011\u0015\u0005aR\u0005\"B&\u0007\u0001\u0004a\u0015!A21\u00055{\u0005c\u0001 F\u001dB\u00111f\u0014\u0003\n!*\u000b\t\u0011!A\u0003\u00029\u00121a\u0018\u00132\u0003\u0019\u0019\bn\\;mIR\u00111k\u001a\u000b\u0004)^{\u0006cA\u001dVU%\u0011a+\u0005\u0002\u0018%\u0016\u001cX\u000f\u001c;PM\n+wk\u001c:e\r>\u0014\u0018I\u001c+za\u0016DQ\u0001W\u0004A\u0004e\u000b!\u0002\u001d:fiRLg-[3s!\tQV,D\u0001\\\u0015\tav#A\u0005tG\u0006d\u0017m\u0019;jG&\u0011al\u0017\u0002\u000b!J,G\u000f^5gS\u0016\u0014\b\"\u00021\b\u0001\b\t\u0017a\u00019pgB\u0011!-Z\u0007\u0002G*\u0011AmW\u0001\u0007g>,(oY3\n\u0005\u0019\u001c\'\u0001\u0003)pg&$\u0018n\u001c8\t\u000b!<\u0001\u0019A5\u0002\r\t,wk\u001c:e!\tI$.\u0003\u0002l#\t1!)Z,pe\u0012$\"!\u001c9\u0011\u0005er\u0017BA8\u0012\u0005\u001d\u0002F.Z1tKV\u001bXMT8Fq\u000e,\u0007\u000f^5p]NCw.\u001e7e\'ftG/\u0019=J]N$X-\u00193\t\u000bED\u0001\u0019\u0001:\u0002\u000f9|GoV8sIB\u0011\u0011h]\u0005\u0003iF\u0011qAT8u/>\u0014H-\u0001\u0005tQ>,H\u000e\u001a\"f)\r9\u00181\u0002\u000b\u0006q\u0006\u001d\u0011\u0011\u0002\t\u0004s\u0006\u0005aB\u0001>\u007f\u001d\tYXP\u0004\u0002Ay&\t\u0001$\u0003\u0002\u0017/%\u0011q0F\u0001\ba\u0006\u001c7.Y4f\u0013\u0011\t\u0019!!\u0002\u0003\u0013\u0005\u001b8/\u001a:uS>t\'BA@\u0016\u0011\u0015A\u0016\u0002q\u0001Z\u0011\u0015\u0001\u0017\u0002q\u0001b\u0011\u001d\ti!\u0003a\u0001\u0003\u001f\t\u0001\u0002\u001e5s_^t\')\u001f\t\u0004s\u0005E\u0011bAA\n#\tY\"+Z:vYR|e\r\u00165s_^t\')_!qa2L7-\u0019;j_:$B!a\u0006\u0002\u001eQ)\u00010!\u0007\u0002\u001c!)\u0001L\u0003a\u00023\")\u0001M\u0003a\u0002C\"9\u0011q\u0004\u0006A\u0002\u0005\u0005\u0012A\u00032f)\"\u0014xn\u001e8CsB\u0019\u0011(a\t\n\u0007\u0005\u0015\u0012C\u0001\nSKN,H\u000e^(g\u0005\u0016$\u0006N]8x]\nK\u0018\u0001B7vgR$B!a\u000b\u00022Q)A+!\f\u00020!)\u0001l\u0003a\u00023\")\u0001m\u0003a\u0002C\")\u0001n\u0003a\u0001SR\u0019Q.!\u000e\t\u000bEd\u0001\u0019\u0001:\u0002\r5,8\u000f\u001e\"f)\u0011\tY$!\u0011\u0015\u000ba\fi$a\u0010\t\u000bak\u00019A-\t\u000b\u0001l\u00019A1\t\u000f\u00055Q\u00021\u0001\u0002\u0010Q!\u0011QIA&)\u0015A\u0018qIA%\u0011\u0015Af\u0002q\u0001Z\u0011\u0015\u0001g\u0002q\u0001b\u0011\u001d\tyB\u0004a\u0001\u0003C\t\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u0003#\u00022APA*\u0013\r\t)f\u0012\u0002\u0007\'R\u0014\u0018N\\4
   #10 = Utf8               clazzTag
   #11 = Utf8               Lscala/reflect/ClassTag;
   #12 = Utf8               Lscala/reflect/ClassTag<TT;>;
   #13 = Utf8               clazz
   #14 = Utf8               Ljava/lang/Class;
   #15 = Utf8               Ljava/lang/Class<TT;>;
   #16 = Utf8               ()Lscala/reflect/ClassTag;
   #17 = Utf8               ()Lscala/reflect/ClassTag<TT;>;
   #18 = NameAndType        #10:#11       // clazzTag:Lscala/reflect/ClassTag;
   #19 = Fieldref           #2.#18        // org/scalatest/matchers/dsl/ResultOfAnTypeInvocation.clazzTag:Lscala/reflect/ClassTag;
   #20 = Utf8               this
   #21 = Utf8               Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
   #22 = Utf8               ()Ljava/lang/Class;
   #23 = Utf8               ()Ljava/lang/Class<TT;>;
   #24 = NameAndType        #13:#14       // clazz:Ljava/lang/Class;
   #25 = Fieldref           #2.#24        // org/scalatest/matchers/dsl/ResultOfAnTypeInvocation.clazz:Ljava/lang/Class;
   #26 = Utf8               should
   #27 = Utf8               (Lorg/scalatest/matchers/dsl/BeWord;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/matchers/dsl/ResultOfBeWordForAnType;
   #28 = Utf8               (Lorg/scalatest/matchers/dsl/BeWord;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/matchers/dsl/ResultOfBeWordForAnType<TT;>;
   #29 = Utf8               beWord
   #30 = Utf8               prettifier
   #31 = Utf8               pos
   #32 = Utf8               org/scalatest/matchers/dsl/ResultOfBeWordForAnType
   #33 = Class              #32           // org/scalatest/matchers/dsl/ResultOfBeWordForAnType
   #34 = NameAndType        #13:#22       // clazz:()Ljava/lang/Class;
   #35 = Methodref          #2.#34        // org/scalatest/matchers/dsl/ResultOfAnTypeInvocation.clazz:()Ljava/lang/Class;
   #36 = Utf8               <init>
   #37 = Utf8               (Ljava/lang/Class;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
   #38 = NameAndType        #36:#37       // "<init>":(Ljava/lang/Class;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
   #39 = Methodref          #33.#38       // org/scalatest/matchers/dsl/ResultOfBeWordForAnType."<init>":(Ljava/lang/Class;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
   #40 = Utf8               Lorg/scalatest/matchers/dsl/BeWord;
   #41 = Utf8               Lorg/scalactic/Prettifier;
   #42 = Utf8               Lorg/scalactic/source/Position;
   #43 = Utf8               (Lorg/scalatest/matchers/dsl/NotWord;)Lorg/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead;
   #44 = Utf8               notWord
   #45 = Utf8               org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead
   #46 = Class              #45           // org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead
   #47 = Utf8               ()V
   #48 = NameAndType        #36:#47       // "<init>":()V
   #49 = Methodref          #46.#48       // org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead."<init>":()V
   #50 = Utf8               Lorg/scalatest/matchers/dsl/NotWord;
   #51 = Utf8               shouldBe
   #52 = Utf8               (Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #53 = Utf8               thrownBy
   #54 = Utf8               org/scalatest/matchers/MatchersHelper$
   #55 = Class              #54           // org/scalatest/matchers/MatchersHelper$
   #56 = Utf8               MODULE$
   #57 = Utf8               Lorg/scalatest/matchers/MatchersHelper$;
   #58 = NameAndType        #56:#57       // MODULE$:Lorg/scalatest/matchers/MatchersHelper$;
   #59 = Fieldref           #55.#58       // org/scalatest/matchers/MatchersHelper$.MODULE$:Lorg/scalatest/matchers/MatchersHelper$;
   #60 = Utf8               checkThrownBy
   #61 = Utf8               (Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #62 = NameAndType        #60:#61       // checkThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #63 = Methodref          #55.#62       // org/scalatest/matchers/MatchersHelper$.checkThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #64 = Utf8               Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;
   #65 = Utf8               (Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #66 = Utf8               beThrownBy
   #67 = Utf8               checkBeThrownBy
   #68 = Utf8               (Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #69 = NameAndType        #67:#68       // checkBeThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #70 = Methodref          #55.#69       // org/scalatest/matchers/MatchersHelper$.checkBeThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
   #71 = Utf8               Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;
   #72 = Utf8               must
   #73 = Utf8               mustBe
   #74 = Utf8               toString
   #75 = Utf8               ()Ljava/lang/String;
   #76 = Utf8               java/lang/StringBuilder
   #77 = Class              #76           // java/lang/StringBuilder
   #78 = Integer            5
   #79 = Utf8               (I)V
   #80 = NameAndType        #36:#79       // "<init>":(I)V
   #81 = Methodref          #77.#80       // java/lang/StringBuilder."<init>":(I)V
   #82 = Utf8               an [
   #83 = String             #82           // an [
   #84 = Utf8               append
   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #86 = NameAndType        #84:#85       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #87 = Methodref          #77.#86       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #88 = Utf8               java/lang/Class
   #89 = Class              #88           // java/lang/Class
   #90 = Utf8               getName
   #91 = NameAndType        #90:#75       // getName:()Ljava/lang/String;
   #92 = Methodref          #89.#91       // java/lang/Class.getName:()Ljava/lang/String;
   #93 = Utf8               ]
   #94 = String             #93           // ]
   #95 = NameAndType        #74:#75       // toString:()Ljava/lang/String;
   #96 = Methodref          #77.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #97 = Utf8               (Lscala/reflect/ClassTag;)V
   #98 = Utf8               (Lscala/reflect/ClassTag<TT;>;)V
   #99 = Methodref          #5.#48        // java/lang/Object."<init>":()V
  #100 = Utf8               scala/reflect/ClassTag
  #101 = Class              #100          // scala/reflect/ClassTag
  #102 = Utf8               runtimeClass
  #103 = NameAndType        #102:#22      // runtimeClass:()Ljava/lang/Class;
  #104 = InterfaceMethodref #101.#103     // scala/reflect/ClassTag.runtimeClass:()Ljava/lang/Class;
  #105 = Utf8               (Ljava/lang/Class;)V
  #106 = Utf8               (Ljava/lang/Class<*>;)V
  #107 = Utf8               c
  #108 = Utf8               scala/reflect/ClassTag$
  #109 = Class              #108          // scala/reflect/ClassTag$
  #110 = Utf8               Lscala/reflect/ClassTag$;
  #111 = NameAndType        #56:#110      // MODULE$:Lscala/reflect/ClassTag$;
  #112 = Fieldref           #109.#111     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #113 = Utf8               apply
  #114 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #115 = NameAndType        #113:#114     // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #116 = Methodref          #109.#115     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #117 = NameAndType        #36:#97       // "<init>":(Lscala/reflect/ClassTag;)V
  #118 = Methodref          #2.#117       // org/scalatest/matchers/dsl/ResultOfAnTypeInvocation."<init>":(Lscala/reflect/ClassTag;)V
  #119 = Utf8               Signature
  #120 = Utf8               Code
  #121 = Utf8               LineNumberTable
  #122 = Utf8               LocalVariableTable
  #123 = Utf8               MethodParameters
  #124 = Utf8               SourceFile
  #125 = Utf8               RuntimeVisibleAnnotations
  #126 = Utf8               ScalaInlineInfo
  #127 = Utf8               ScalaSig
{
  private final scala.reflect.ClassTag<T> clazzTag;
    descriptor: Lscala/reflect/ClassTag;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // Lscala/reflect/ClassTag<TT;>;

  private final java.lang.Class<T> clazz;
    descriptor: Ljava/lang/Class;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // Ljava/lang/Class<TT;>;

  public scala.reflect.ClassTag<T> clazzTag();
    descriptor: ()Lscala/reflect/ClassTag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #19                 // Field clazzTag:Lscala/reflect/ClassTag;
         4: areturn
      LineNumberTable:
        line 33: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
    Signature: #17                          // ()Lscala/reflect/ClassTag<TT;>;

  public java.lang.Class<T> clazz();
    descriptor: ()Ljava/lang/Class;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field clazz:Ljava/lang/Class;
         4: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
    Signature: #23                          // ()Ljava/lang/Class<TT;>;

  public org.scalatest.matchers.dsl.ResultOfBeWordForAnType<T> should(org.scalatest.matchers.dsl.BeWord, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Lorg/scalatest/matchers/dsl/BeWord;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/matchers/dsl/ResultOfBeWordForAnType;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #33                 // class org/scalatest/matchers/dsl/ResultOfBeWordForAnType
         3: dup
         4: aload_0
         5: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
         8: aload_2
         9: aload_3
        10: invokespecial #39                 // Method org/scalatest/matchers/dsl/ResultOfBeWordForAnType."<init>":(Ljava/lang/Class;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
        13: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      14     1 beWord   Lorg/scalatest/matchers/dsl/BeWord;
            0      14     2 prettifier   Lorg/scalactic/Prettifier;
            0      14     3   pos   Lorg/scalactic/source/Position;
    Signature: #28                          // (Lorg/scalatest/matchers/dsl/BeWord;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/matchers/dsl/ResultOfBeWordForAnType<TT;>;
    MethodParameters:
      Name                           Flags
      beWord                         final
      prettifier                     final
      pos                            final

  public org.scalatest.matchers.dsl.PleaseUseNoExceptionShouldSyntaxInstead should(org.scalatest.matchers.dsl.NotWord);
    descriptor: (Lorg/scalatest/matchers/dsl/NotWord;)Lorg/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #46                 // class org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead
         3: dup
         4: invokespecial #49                 // Method org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead."<init>":()V
         7: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0       8     1 notWord   Lorg/scalatest/matchers/dsl/NotWord;
    MethodParameters:
      Name                           Flags
      notWord                        final

  public org.scalatest.compatible.Assertion shouldBe(org.scalatest.matchers.dsl.ResultOfThrownByApplication, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: getstatic     #59                 // Field org/scalatest/matchers/MatchersHelper$.MODULE$:Lorg/scalatest/matchers/MatchersHelper$;
         3: aload_0
         4: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
         7: aload_1
         8: aload_3
         9: invokevirtual #63                 // Method org/scalatest/matchers/MatchersHelper$.checkThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        12: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      13     1 thrownBy   Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;
            0      13     2 prettifier   Lorg/scalactic/Prettifier;
            0      13     3   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      thrownBy                       final
      prettifier                     final
      pos                            final

  public org.scalatest.compatible.Assertion should(org.scalatest.matchers.dsl.ResultOfBeThrownBy, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: getstatic     #59                 // Field org/scalatest/matchers/MatchersHelper$.MODULE$:Lorg/scalatest/matchers/MatchersHelper$;
         3: aload_0
         4: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
         7: aload_1
         8: aload_3
         9: invokevirtual #70                 // Method org/scalatest/matchers/MatchersHelper$.checkBeThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        12: areturn
      LineNumberTable:
        line 88: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      13     1 beThrownBy   Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;
            0      13     2 prettifier   Lorg/scalactic/Prettifier;
            0      13     3   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      beThrownBy                     final
      prettifier                     final
      pos                            final

  public org.scalatest.matchers.dsl.ResultOfBeWordForAnType<T> must(org.scalatest.matchers.dsl.BeWord, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Lorg/scalatest/matchers/dsl/BeWord;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/matchers/dsl/ResultOfBeWordForAnType;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: new           #33                 // class org/scalatest/matchers/dsl/ResultOfBeWordForAnType
         3: dup
         4: aload_0
         5: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
         8: aload_2
         9: aload_3
        10: invokespecial #39                 // Method org/scalatest/matchers/dsl/ResultOfBeWordForAnType."<init>":(Ljava/lang/Class;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
        13: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      14     1 beWord   Lorg/scalatest/matchers/dsl/BeWord;
            0      14     2 prettifier   Lorg/scalactic/Prettifier;
            0      14     3   pos   Lorg/scalactic/source/Position;
    Signature: #28                          // (Lorg/scalatest/matchers/dsl/BeWord;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/matchers/dsl/ResultOfBeWordForAnType<TT;>;
    MethodParameters:
      Name                           Flags
      beWord                         final
      prettifier                     final
      pos                            final

  public org.scalatest.matchers.dsl.PleaseUseNoExceptionShouldSyntaxInstead must(org.scalatest.matchers.dsl.NotWord);
    descriptor: (Lorg/scalatest/matchers/dsl/NotWord;)Lorg/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #46                 // class org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead
         3: dup
         4: invokespecial #49                 // Method org/scalatest/matchers/dsl/PleaseUseNoExceptionShouldSyntaxInstead."<init>":()V
         7: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0       8     1 notWord   Lorg/scalatest/matchers/dsl/NotWord;
    MethodParameters:
      Name                           Flags
      notWord                        final

  public org.scalatest.compatible.Assertion mustBe(org.scalatest.matchers.dsl.ResultOfThrownByApplication, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: getstatic     #59                 // Field org/scalatest/matchers/MatchersHelper$.MODULE$:Lorg/scalatest/matchers/MatchersHelper$;
         3: aload_0
         4: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
         7: aload_1
         8: aload_3
         9: invokevirtual #63                 // Method org/scalatest/matchers/MatchersHelper$.checkThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        12: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      13     1 thrownBy   Lorg/scalatest/matchers/dsl/ResultOfThrownByApplication;
            0      13     2 prettifier   Lorg/scalactic/Prettifier;
            0      13     3   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      thrownBy                       final
      prettifier                     final
      pos                            final

  public org.scalatest.compatible.Assertion must(org.scalatest.matchers.dsl.ResultOfBeThrownBy, org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: (Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: getstatic     #59                 // Field org/scalatest/matchers/MatchersHelper$.MODULE$:Lorg/scalatest/matchers/MatchersHelper$;
         3: aload_0
         4: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
         7: aload_1
         8: aload_3
         9: invokevirtual #70                 // Method org/scalatest/matchers/MatchersHelper$.checkBeThrownBy:(Ljava/lang/Class;Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;Lorg/scalactic/source/Position;)Lorg/scalatest/compatible/Assertion;
        12: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      13     1 beThrownBy   Lorg/scalatest/matchers/dsl/ResultOfBeThrownBy;
            0      13     2 prettifier   Lorg/scalactic/Prettifier;
            0      13     3   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      beThrownBy                     final
      prettifier                     final
      pos                            final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #77                 // class java/lang/StringBuilder
         3: dup
         4: ldc           #78                 // int 5
         6: invokespecial #81                 // Method java/lang/StringBuilder."<init>":(I)V
         9: ldc           #83                 // String an [
        11: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: aload_0
        15: invokevirtual #35                 // Method clazz:()Ljava/lang/Class;
        18: invokevirtual #92                 // Method java/lang/Class.getName:()Ljava/lang/String;
        21: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc           #94                 // String ]
        26: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: invokevirtual #96                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: areturn
      LineNumberTable:
        line 147: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;

  public org.scalatest.matchers.dsl.ResultOfAnTypeInvocation(scala.reflect.ClassTag<T>);
    descriptor: (Lscala/reflect/ClassTag;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #19                 // Field clazzTag:Lscala/reflect/ClassTag;
         5: aload_0
         6: invokespecial #99                 // Method java/lang/Object."<init>":()V
         9: aload_0
        10: aload_1
        11: invokeinterface #104,  1          // InterfaceMethod scala/reflect/ClassTag.runtimeClass:()Ljava/lang/Class;
        16: putfield      #25                 // Field clazz:Ljava/lang/Class;
        19: return
      LineNumberTable:
        line 33: 0
        line 148: 5
        line 35: 9
        line 33: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      20     1 clazzTag   Lscala/reflect/ClassTag;
    Signature: #98                          // (Lscala/reflect/ClassTag<TT;>;)V
    MethodParameters:
      Name                           Flags
      clazzTag                       final

  public org.scalatest.matchers.dsl.ResultOfAnTypeInvocation(java.lang.Class<?>);
    descriptor: (Ljava/lang/Class;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getstatic     #112                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
         4: aload_1
         5: invokevirtual #116                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
         8: invokespecial #118                // Method "<init>":(Lscala/reflect/ClassTag;)V
        11: return
      LineNumberTable:
        line 37: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/scalatest/matchers/dsl/ResultOfAnTypeInvocation;
            0      12     1     c   Ljava/lang/Class;
    Signature: #106                         // (Ljava/lang/Class<*>;)V
    MethodParameters:
      Name                           Flags
      c                              final
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "ResultOfAnTypeInvocation.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005]c\u0001\u0002\t\u0012\u0005iA\u0001B\t\u0001\u0003\u0006\u0004%\ta\t\u0005\tk\u0001\u0011\t\u0011)A\u0005I!)a\u0007\u0001C\u0001o!91\b\u0001b\u0001\n\u0003a\u0004B\u0002%\u0001A\u0003%Q\bC\u00037\u0001\u0011\u0005\u0011\nC\u0003R\u0001\u0011\u0005!\u000bC\u0003R\u0001\u0011\u0005A\u000eC\u0003v\u0001\u0011\u0005a\u000f\u0003\u0004R\u0001\u0011\u0005\u0011Q\u0003\u0005\b\u0003O\u0001A\u0011AA\u0015\u0011\u001d\t9\u0003\u0001C\u0001\u0003gAq!a\u000e\u0001\t\u0003\tI\u0004C\u0004\u0002(\u0001!\t!a\u0011\t\u000f\u00055\u0003\u0001\"\u0011\u0002P\tA\"+Z:vYR|e-\u00118UsB,\u0017J\u001c<pG\u0006$\u0018n\u001c8\u000b\u0005I\u0019\u0012a\u00013tY*\u0011A#F\u0001\t[\u0006$8\r[3sg*\u0011acF\u0001\ng\u000e\fG.\u0019;fgRT\u0011\u0001G\u0001\u0004_J<7\u0001A\u000b\u000371\u001a\"\u0001\u0001\u000f\u0011\u0005u\u0001S\"\u0001\u0010\u000b\u0003}\tQa]2bY\u0006L!!\t\u0010\u0003\r\u0005s\u0017PU3g\u0003!\u0019G.\u0019>{)\u0006<W#\u0001\u0013\u0011\u0007\u0015B#&D\u0001\'\u0015\t9c$A\u0004sK\u001adWm\u0019;\n\u0005%2#\u0001C\"mCN\u001cH+Y4\u0011\u0005-bC\u0002\u0001\u0003\u0006[\u0001\u0011\rA\f\u0002\u0002)F\u0011qF\r\t\u0003;AJ!!\r\u0010\u0003\u000f9{G\u000f[5oOB\u0011QdM\u0005\u0003iy\u00111!\u00118z\u0003%\u0019G.\u0019>{)\u0006<\u0007%\u0001\u0004=S:LGO\u0010\u000b\u0003qi\u00022!\u000f\u0001+\u001b\u0005\t\u0002\"\u0002\u0012\u0004\u0001\u0004!\u0013!B2mCjTX#A\u001f\u0011\u0007y*%F\u0004\u0002@\u0007B\u0011\u0001IH\u0007\u0002\u0003*\u0011!)G\u0001\u0007yI|w\u000e\u001e \n\u0005\u0011s\u0012A\u0002)sK\u0012,g-\u0003\u0002G\u000f\n)1\t\\1tg*\u0011AIH\u0001\u0007G2\f\'P\u001f\u0011\u0015\u0005aR\u0005\"B&\u0007\u0001\u0004a\u0015!A21\u00055{\u0005c\u0001 F\u001dB\u00111f\u0014\u0003\n!*\u000b\t\u0011!A\u0003\u00029\u00121a\u0018\u00132\u0003\u0019\u0019\bn\\;mIR\u00111k\u001a\u000b\u0004)^{\u0006cA\u001dVU%\u0011a+\u0005\u0002\u0018%\u0016\u001cX\u000f\u001c;PM\n+wk\u001c:e\r>\u0014\u0018I\u001c+za\u0016DQ\u0001W\u0004A\u0004e\u000b!\u0002\u001d:fiRLg-[3s!\tQV,D\u0001\\\u0015\tav#A\u0005tG\u0006d\u0017m\u0019;jG&\u0011al\u0017\u0002\u000b!J,G\u000f^5gS\u0016\u0014\b\"\u00021\b\u0001\b\t\u0017a\u00019pgB\u0011!-Z\u0007\u0002G*\u0011AmW\u0001\u0007g>,(oY3\n\u0005\u0019\u001c\'\u0001\u0003)pg&$\u0018n\u001c8\t\u000b!<\u0001\u0019A5\u0002\r\t,wk\u001c:e!\tI$.\u0003\u0002l#\t1!)Z,pe\u0012$\"!\u001c9\u0011\u0005er\u0017BA8\u0012\u0005\u001d\u0002F.Z1tKV\u001bXMT8Fq\u000e,\u0007\u000f^5p]NCw.\u001e7e\'ftG/\u0019=J]N$X-\u00193\t\u000bED\u0001\u0019\u0001:\u0002\u000f9|GoV8sIB\u0011\u0011h]\u0005\u0003iF\u0011qAT8u/>\u0014H-\u0001\u0005tQ>,H\u000e\u001a\"f)\r9\u00181\u0002\u000b\u0006q\u0006\u001d\u0011\u0011\u0002\t\u0004s\u0006\u0005aB\u0001>\u007f\u001d\tYXP\u0004\u0002Ay&\t\u0001$\u0003\u0002\u0017/%\u0011q0F\u0001\ba\u0006\u001c7.Y4f\u0013\u0011\t\u0019!!\u0002\u0003\u0013\u0005\u001b8/\u001a:uS>t\'BA@\u0016\u0011\u0015A\u0016\u0002q\u0001Z\u0011\u0015\u0001\u0017\u0002q\u0001b\u0011\u001d\ti!\u0003a\u0001\u0003\u001f\t\u0001\u0002\u001e5s_^t\')\u001f\t\u0004s\u0005E\u0011bAA\n#\tY\"+Z:vYR|e\r\u00165s_^t\')_!qa2L7-\u0019;j_:$B!a\u0006\u0002\u001eQ)\u00010!\u0007\u0002\u001c!)\u0001L\u0003a\u00023\")\u0001M\u0003a\u0002C\"9\u0011q\u0004\u0006A\u0002\u0005\u0005\u0012A\u00032f)\"\u0014xn\u001e8CsB\u0019\u0011(a\t\n\u0007\u0005\u0015\u0012C\u0001\nSKN,H\u000e^(g\u0005\u0016$\u0006N]8x]\nK\u0018\u0001B7vgR$B!a\u000b\u00022Q)A+!\f\u00020!)\u0001l\u0003a\u00023\")\u0001m\u0003a\u0002C\")\u0001n\u0003a\u0001SR\u0019Q.!\u000e\t\u000bEd\u0001\u0019\u0001:\u0002\r5,8\u000f\u001e\"f)\u0011\tY$!\u0011\u0015\u000ba\fi$a\u0010\t\u000bak\u00019A-\t\u000b\u0001l\u00019A1\t\u000f\u00055Q\u00021\u0001\u0002\u0010Q!\u0011QIA&)\u0015A\u0018qIA%\u0011\u0015Af\u0002q\u0001Z\u0011\u0015\u0001g\u0002q\u0001b\u0011\u001d\tyB\u0004a\u0001\u0003C\t\u0001\u0002^8TiJLgn\u001a\u000b\u0003\u0003#\u00022APA*\u0013\r\t)f\u0012\u0002\u0007\'R\u0014\u0018N\\4"
    )
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 24 00 69 01 00 24 00 61 01 00 0D
   00 16 01 00 0A 00 10 01 00 48 00 1B 01 00 48 00
   2B 01 00 48 00 41 01 00 49 00 34 01 00 1A 00 1B
   01 00 1A 00 2B 01 00 1A 00 41 01 00 33 00 34 01
   00 4A 00 4B 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
