Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/SeqSplitter.class
  Last modified May 29, 2022; size 13948 bytes
  SHA-256 checksum 93634061215577cd08525b898f0c8f79b7eeecbf104e3f19476bc898726e489b
  Compiled from "RemainsIterator.scala"
public interface scala.collection.parallel.SeqSplitter<T extends java.lang.Object> extends scala.collection.parallel.IterableSplitter<T>, scala.collection.parallel.AugmentedSeqIterator<T>, scala.collection.parallel.PreciseSplitter<T>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/SeqSplitter
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 0, methods: 32, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/parallel/SeqSplitter
    #2 = Class              #1            // scala/collection/parallel/SeqSplitter
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter<TT;>;Lscala/collection/parallel/AugmentedSeqIterator<TT;>;Lscala/collection/parallel/PreciseSplitter<TT;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/IterableSplitter
    #7 = Class              #6            // scala/collection/parallel/IterableSplitter
    #8 = Utf8               scala/collection/parallel/AugmentedSeqIterator
    #9 = Class              #8            // scala/collection/parallel/AugmentedSeqIterator
   #10 = Utf8               scala/collection/parallel/PreciseSplitter
   #11 = Class              #10           // scala/collection/parallel/PreciseSplitter
   #12 = Utf8               RemainsIterator.scala
   #13 = Utf8               Lscala/reflect/ScalaSignature;
   #14 = Utf8               bytes
   #15 = Utf8               \u0006\u0005\t%ga\u0002 @!\u0003\r\tA\u0012\u0005\u0006C\u0002!\tA\u0019\u0005\u0006M\u00021\ta\u001a\u0005\u0006S\u00021\tA\u001b\u0005\u0006e\u00021\ta\u001d\u0005\u0006y\u0002!\tE\u001b\u0005\u0006{\u0002!\tA \u0005\b\u0003\u0003\u0001a\u0011AA\u0002\r\u0019\t)\u0001\u0001\u0001\u0002\b!I\u0011\u0011\u0003\u0005\u0003\u0002\u0003\u0006I!\u001f\u0005\b\u0003\'AA\u0011AA\u000b\u0011\u00151\u0007\u0002\"\u0011h\u0011\u0015I\u0007\u0002\"\u0011k\u0011\u0019\u0011\b\u0002\"\u0001\u0002\u001c!A\u0011q\u0004\u0001\u0005B\u0005\u000b\t\u0003C\u0004\u0002(\u0001!\t%!\u000b\t\u000f\u0005=\u0002\u0001\"\u0011\u00022\u00191\u00111\b\u0001\u0001\u0003{A!\"a\u0014\u0012\u0005\u0003\u0005\u000b\u0011BA)\u0011\u001d\t\u0019\"\u0005C\u0001\u0003/BaAZ\t\u0005B\u0005u\u0003BB5\u0012\t\u0003\ny\u0006\u0003\u0004s#\u0011\u0005\u00111\r\u0005\b\u0003O\u0002A\u0011IA5\r\u0019\t9\b\u0001\u0001\u0002z!a\u0011Q\u0013\r\u0003\u0002\u0003\u0006I!a#\u0002\u0018\"9\u00111\u0003\r\u0005\u0002\u0005m\u0005B\u00024\u0019\t\u0003\n\t\u000b\u0003\u0004j1\u0011\u0005\u00131\u0015\u0005\u0007eb!\t!a*\t\u000f\u0005-\u0006\u0001\"\u0001\u0002.\u001a1\u0011\u0011\u0019\u0001\u0001\u0003\u0007DA\"!7 \u0005\u0003\u0005\u000b\u0011BAn\u0003;Dq!a\u0005 \t\u0003\ty\u000e\u0003\u0004g?\u0011\u0005\u0013Q\u001d\u0005\u0007S~!\t%a:\t\rI|B\u0011AAv\u0011\u001d\tY\u0010\u0001C!\u0003{4aA!\u0004\u0001\u0001\t=\u0001\u0002DAmM\t\u0005\t\u0015!\u0003\u0003&\t\u001d\u0002\u0002\u0004B\u0015M\t\u0005\t\u0015!\u0003\u0003\u001a\t-\u0002\u0002\u0004B\u0018M\t\u0005\t\u0015!\u0003\u0003\u001e\tE\u0002bBA\nM\u0011\u0005!Q\u0007\u0005\u0007M\u001a\"\tEa\u0010\t\u000f\t\u0005c\u0005\"\u0003\u0003D!1\u0011N\nC!\u0005\u0013BaA\u001d\u0014\u0005\u0002\t5\u0003b\u0002B)\u0001\u0011\u0005#1\u000b\u0005\u0007\u0005k\u0002A\u0011A4\u0007\r\t]\u0004\u0001\u0001B=\u0011%\u0011\u0019)\rB\u0001B\u0003%\u0011\u0010\u0003\u0006\u0003\u0006F\u0012\t\u0011)A\u0005\u0005{B\u0011Ba\"2\u0005\u0003\u0005\u000b\u0011B=\t\u000f\u0005M\u0011\u0007\"\u0001\u0003\n\"A!1S\u0019!\u0002\u0013\u0011)\nC\u0004\u0003\u001aF\"\tAa\'\t\u000f\t\r\u0016\u0007\"\u0001\u0003&\"9\u0011\u0011A\u0019\u0005\u0002\u0005\r\u0001B\u000242\t\u0003\u00119\u000b\u0003\u0004jc\u0011\u0005!1\u0016\u0005\u0007eF\"\tAa,\t\u000f\tM\u0006\u0001\"\u0001\u00036\nY1+Z9Ta2LG\u000f^3s\u0015\t\u0001\u0015)\u0001\u0005qCJ\fG\u000e\\3m\u0015\t\u00115)\u0001\u0006d_2dWm\u0019;j_:T\u0011\u0001R\u0001\u0006g\u000e\fG.Y\u0002\u0001+\t9%kE\u0003\u0001\u00112[f\f\u0005\u0002J\u00156\t1)\u0003\u0002L\u0007\n1\u0011I\\=SK\u001a\u00042!\u0014(Q\u001b\u0005y\u0014BA(@\u0005AIE/\u001a:bE2,7\u000b\u001d7jiR,\'\u000f\u0005\u0002R%2\u0001AAB*\u0001\t\u000b\u0007AKA\u0001U#\t)\u0006\f\u0005\u0002J-&\u0011qk\u0011\u0002\b\u001d>$\b.\u001b8h!\tI\u0015,\u0003\u0002[\u0007\n\u0019\u0011I\\=\u0011\u00075c\u0006+\u0003\u0002^\u007f\t!\u0012)^4nK:$X\rZ*fc&#XM]1u_J\u00042!T0Q\u0013\t\u0001wHA\bQe\u0016\u001c\u0017n]3Ta2LG\u000f^3s\u0003\u0019!\u0013N\\5uIQ\t1\r\u0005\u0002JI&\u0011Qm\u0011\u0002\u0005+:LG/A\u0002ekB,\u0012\u0001\u001b\t\u0004\u001b\u0002\u0001\u0016!B:qY&$X#A6\u0011\u00071|\u0007N\u0004\u0002J[&\u0011anQ\u0001\ba\u0006\u001c7.Y4f\u0013\t\u0001\u0018OA\u0002TKFT!A\\\"\u0002\rA\u001c\b\u000f\\5u)\tYG\u000fC\u0003v\t\u0001\u0007a/A\u0003tSj,7\u000fE\u0002JofL!\u0001_\"\u0003\u0015q\u0012X\r]3bi\u0016$g\b\u0005\u0002Ju&\u00111p\u0011\u0002\u0004\u0013:$\u0018aE:qY&$x+\u001b;i\'&<g.\u00197mS:<\u0017\u0001\u00069ta2LGoV5uQNKwM\\1mY&tw\r\u0006\u0002l\u007f\")QO\u0002a\u0001m\u0006I!/Z7bS:LgnZ\u000b\u0002s\n!\"+Z7bS:\u001c\u0018\n^3sCR|\'\u000fV1lK:\u001cB\u0001CA\u0005QB!\u00111BA\u0007\u001b\u0005\u0001\u0011bAA\b\u001d\n)A+Y6f]\u0006\u0011Ao[\u0001\u0007y%t\u0017\u000e\u001e \u0015\t\u0005]\u0011\u0011\u0004\t\u0004\u0003\u0017A\u0001BBA\t\u0015\u0001\u0007\u0011\u0010F\u0002l\u0003;AQ!^\u0007A\u0002Y\f\u0001B\\3x)\u0006\\WM\u001c\u000b\u0005\u0003/\t\u0019\u0003\u0003\u0004\u0002&9\u0001\r!_\u0001\u0006k:$\u0018\u000e\\\u0001\u0005i\u0006\\W\rF\u0002i\u0003WAa!!\f\u0010\u0001\u0004I\u0018!\u00018\u0002\u000bMd\u0017nY3\u0015\u000b!\f\u0019$a\u000e\t\r\u0005U\u0002\u00031\u0001z\u0003\u00151\'o\\72\u0011\u0019\tI\u0004\u0005a\u0001s\u00061QO\u001c;jYF\u0012QCU3nC&t7/\u0013;fe\u0006$xN]\'baB,G-\u0006\u0003\u0002@\u0005%3#B\t\u0002B\u00055\u0003CBA\u0006\u0003\u0007\n9%C\u0002\u0002F9\u0013a!T1qa\u0016$\u0007cA)\u0002J\u00111\u00111J\tC\u0002Q\u0013\u0011a\u0015\t\u0005\u001b\u0002\t9%A\u0001g!\u0019I\u00151\u000b)\u0002H%\u0019\u0011QK\"\u0003\u0013\u0019+hn\u0019;j_:\fD\u0003BA-\u00037\u0002R!a\u0003\u0012\u0003\u000fBq!a\u0014\u0014\u0001\u0004\t\t&\u0006\u0002\u0002NU\u0011\u0011\u0011\r\t\u0005Y>\fi\u0005\u0006\u0003\u0002b\u0005\u0015\u0004\"B;\u0017\u0001\u00041\u0018aA7baV!\u00111NA9)\u0011\ti\'a\u001d\u0011\t5\u0003\u0011q\u000e\t\u0004#\u0006EDABA&/\t\u0007A\u000bC\u0004\u0002P]\u0001\r!!\u001e\u0011\r%\u000b\u0019\u0006UA8\u0005]\u0011V-\\1j]NLE/\u001a:bi>\u0014\u0018\t\u001d9f]\u0012,G-\u0006\u0004\u0002|\u0005\u0015\u0015QR\n\u00061\u0005u\u00141\u0013\t\t\u0003\u0017\ty(a!\u0002\f&\u0019\u0011\u0011\u0011(\u0003\u0011\u0005\u0003\b/\u001a8eK\u0012\u00042!UAC\t\u001d\t9\t\u0007b\u0001\u0003\u0013\u0013\u0011!V\t\u0003!b\u00032!UAG\t\u001d\ty\t\u0007b\u0001\u0003#\u0013!\u0001U%\u0012\u0007U\u000b\u0019\n\u0005\u0003N\u0001\u0005\r\u0015AA5u\u0013\u0011\tI*a \u0002\tQD\u0017\r\u001e\u000b\u0005\u0003;\u000by\nE\u0004\u0002\fa\t\u0019)a#\t\u000f\u0005U%\u00041\u0001\u0002\fV\u0011\u00111S\u000b\u0003\u0003K\u0003B\u0001\\8\u0002\u0014R!\u0011QUAU\u0011\u0015)X\u00041\u0001w\u00031\t\u0007\u000f]3oIB\u000b\'oU3r+\u0019\ty+!.\u0002:R!\u0011\u0011WA`!\u001d\tY\u0001GAZ\u0003o\u00032!UA[\t\u001d\t9I\bb\u0001\u0003\u0013\u00032!UA]\t\u001d\tyI\bb\u0001\u0003w\u000b2!VA_!\u0011i\u0005!a-\t\u000f\u0005ee\u00041\u0001\u00028\n)\"+Z7bS:\u001c\u0018\n^3sCR|\'OW5qa\u0016$W\u0003BAc\u0003\u001f\u001cRaHAd\u0003#\u0004b!a\u0003\u0002J\u00065\u0017bAAf\u001d\n1!,\u001b9qK\u0012\u00042!UAh\t\u0019\tYe\bb\u0001)B!Q\nAAj!\u0019I\u0015Q\u001b)\u0002N&\u0019\u0011q[\"\u0003\rQ+\b\u000f\\33\u0003\t!\u0018\u000e\u0005\u0003N\u0001\u00055\u0017\u0002BAM\u0003\u0013$B!!9\u0002dB)\u00111B\u0010\u0002N\"9\u0011\u0011\\\u0011A\u0002\u0005mWCAAi+\t\tI\u000f\u0005\u0003m_\u0006EG\u0003BAw\u0003o\u0004b!a<\u0002v\u0006EWBAAy\u0015\r\t\u00190Q\u0001\nS6lW\u000f^1cY\u0016L1\u0001]Ay\u0011\u0019\tI\u0010\na\u0001m\u0006\u00191O_:\u0002\u0013iL\u0007\u000fU1s\'\u0016\fX\u0003BA\u0000\u0005\u000f!BA!\u0001\u0003\nA!Q\n\u0001B\u0002!\u0019I\u0015Q\u001b)\u0003\u0006A\u0019\u0011Ka\u0002\u0005\r\u0005-SE1\u0001U\u0011\u001d\tI*\na\u0001\u0005\u0017\u0001B!\u0014\u0001\u0003\u0006\tA\"+Z7bS:\u001c\u0018\n^3sCR|\'OW5qa\u0016$\u0017\t\u001c7\u0016\r\tE!1\u0004B\u0010\'\u00151#1\u0003B\u0011!!\tYA!\u0006\u0003\u001a\tu\u0011b\u0001B\f\u001d\nI!,\u001b9qK\u0012\fE\u000e\u001c\t\u0004#\nmAaBADM\t\u0007\u0011\u0011\u0012\t\u0004#\n}AABA&M\t\u0007A\u000b\u0005\u0003N\u0001\t\r\u0002cB%\u0002V\ne!Q\u0004\t\u0005\u001b\u0002\u0011i\"\u0003\u0003\u0002\u001a\nU\u0011!\u0002;iSN,\u0017\u0002\u0002B\u0017\u0005+\t\u0001\u0002\u001e5jg\u0016dW-\\\u0001\u0006i\"\fG/Z\u0005\u0005\u0005g\u0011)\"\u0001\u0005uQ\u0006$X\r\\3n)!\u00119D!\u000f\u0003<\tu\u0002cBA\u0006M\te!Q\u0004\u0005\b\u00033T\u0003\u0019\u0001B\u0013\u0011\u001d\u0011IC\u000ba\u0001\u00053AqAa\f+\u0001\u0004\u0011i\"\u0006\u0002\u0003\"\u00059\u0001/\u0019;dQ\u0016lWC\u0001B#!\u001dI\u0015Q\u001bB$\u0005K\u0001B!\u0014\u0001\u0003\u001aU\u0011!1\n\t\u0005Y>\u0014\t\u0003\u0006\u0003\u0003L\t=\u0003\"B;/\u0001\u00041\u0018\u0001\u0004>ja\u0006cG\u000eU1s\'\u0016\fX\u0003\u0003B+\u0005O\u0012YFa\u0018\u0015\u0011\t]#\u0011\u000eB7\u0005c\u0002r!a\u0003\'\u00053\u0012i\u0006E\u0002R\u00057\"q!a\"0\u0005\u0004\tI\tE\u0002R\u0005?\"qA!\u00190\u0005\u0004\u0011\u0019GA\u0001S#\r\u0011)\u0007\u0017\t\u0004#\n\u001dDABA&_\t\u0007A\u000bC\u0004\u0002\u001a>\u0002\rAa\u001b\u0011\t5\u0003!Q\r\u0005\b\u0005_z\u0003\u0019\u0001B-\u0003!!\b.[:FY\u0016l\u0007b\u0002B:_\u0001\u0007!QL\u0001\ti\"\fG/\u00127f[\u00069!/\u001a<feN,\'a\u0002)bi\u000eDW\rZ\u000b\u0005\u0005w\u0012\ti\u0005\u00032\u0011\nu\u0004\u0003B\'\u0001\u0005\u007f\u00022!\u0015BA\t\u001d\t9)\rb\u0001\u0003\u0013\u000bAA\u001a:p[\u0006)\u0001/\u0019;dQ\u0006A!/\u001a9mC\u000e,G\r\u0006\u0005\u0003\f\n5%q\u0012BI!\u0015\tY!\rB@\u0011\u0019\u0011\u0019)\u000ea\u0001s\"9!QQ\u001bA\u0002\tu\u0004B\u0002BDk\u0001\u0007\u00110\u0001\u0003ue&|\u0007C\u0002BL1\t}\u0004\u000e\u0005\u0004i1\t}$QP\u0001\bQ\u0006\u001ch*\u001a=u+\t\u0011i\nE\u0002J\u0005?K1A!)D\u0005\u001d\u0011un\u001c7fC:\fAA\\3yiR\u0011!qP\u000b\u0003\u0005S\u0003B\u0001[\u0019\u0003\u0000U\u0011!Q\u0016\t\u0005Y>\u0014i\b\u0006\u0003\u0003.\nE\u0006\"B;=\u0001\u00041\u0018a\u00039bi\u000eD\u0007+\u0019:TKF,BAa.\u0003>RA!\u0011\u0018B`\u0005\u0003\u00149\rE\u0003\u0002\fE\u0012Y\fE\u0002R\u0005{#q!a\">\u0005\u0004\tI\t\u0003\u0004\u0003\u0004v\u0002\r!\u001f\u0005\b\u0005\u0007l\u0004\u0019\u0001Bc\u0003)\u0001\u0018\r^2i\u000b2,Wn\u001d\t\u0005\u001b\u0002\u0011Y\f\u0003\u0004\u0003\bv\u0002\r!\u001f
   #16 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #17 = Class              #16           // java/lang/invoke/MethodHandles$Lookup
   #18 = Utf8               java/lang/invoke/MethodHandles
   #19 = Class              #18           // java/lang/invoke/MethodHandles
   #20 = Utf8               Lookup
   #21 = Utf8               scala/collection/parallel/IterableSplitter$Taken
   #22 = Class              #21           // scala/collection/parallel/IterableSplitter$Taken
   #23 = Utf8               Taken
   #24 = Utf8               scala/collection/parallel/SeqSplitter$$anon$1
   #25 = Class              #24           // scala/collection/parallel/SeqSplitter$$anon$1
   #26 = Utf8               scala/collection/parallel/SeqSplitter$Patched
   #27 = Class              #26           // scala/collection/parallel/SeqSplitter$Patched
   #28 = Utf8               Patched
   #29 = Utf8               scala/collection/parallel/SeqSplitter$RemainsIteratorAppended
   #30 = Class              #29           // scala/collection/parallel/SeqSplitter$RemainsIteratorAppended
   #31 = Utf8               RemainsIteratorAppended
   #32 = Utf8               scala/collection/parallel/SeqSplitter$RemainsIteratorMapped
   #33 = Class              #32           // scala/collection/parallel/SeqSplitter$RemainsIteratorMapped
   #34 = Utf8               RemainsIteratorMapped
   #35 = Utf8               scala/collection/parallel/SeqSplitter$RemainsIteratorTaken
   #36 = Class              #35           // scala/collection/parallel/SeqSplitter$RemainsIteratorTaken
   #37 = Utf8               RemainsIteratorTaken
   #38 = Utf8               scala/collection/parallel/SeqSplitter$RemainsIteratorZipped
   #39 = Class              #38           // scala/collection/parallel/SeqSplitter$RemainsIteratorZipped
   #40 = Utf8               RemainsIteratorZipped
   #41 = Utf8               scala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll
   #42 = Class              #41           // scala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll
   #43 = Utf8               RemainsIteratorZippedAll
   #44 = Utf8               dup
   #45 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
   #46 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TT;>;
   #47 = Utf8               split
   #48 = Utf8               ()Lscala/collection/immutable/Seq;
   #49 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/SeqSplitter<TT;>;>;
   #50 = Utf8               psplit
   #51 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #52 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/Object;>;)Lscala/collection/immutable/Seq<Lscala/collection/parallel/SeqSplitter<TT;>;>;
   #53 = Utf8               sizes
   #54 = Utf8               splitWithSignalling$
   #55 = Utf8               (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/immutable/Seq;
   #56 = Utf8               $this
   #57 = Utf8               splitWithSignalling
   #58 = NameAndType        #57:#48       // splitWithSignalling:()Lscala/collection/immutable/Seq;
   #59 = InterfaceMethodref #2.#58        // scala/collection/parallel/SeqSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
   #60 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #61 = NameAndType        #47:#48       // split:()Lscala/collection/immutable/Seq;
   #62 = InterfaceMethodref #2.#61        // scala/collection/parallel/SeqSplitter.split:()Lscala/collection/immutable/Seq;
   #63 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #64 = MethodType         #63           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #65 = Utf8               $anonfun$splitWithSignalling$2$adapted
   #66 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
   #67 = NameAndType        #65:#66       // $anonfun$splitWithSignalling$2$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
   #68 = InterfaceMethodref #2.#67        // scala/collection/parallel/SeqSplitter.$anonfun$splitWithSignalling$2$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
   #69 = MethodHandle       6:#68         // REF_invokeStatic scala/collection/parallel/SeqSplitter.$anonfun$splitWithSignalling$2$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
   #70 = Utf8               (Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
   #71 = MethodType         #70           //  (Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
   #72 = Integer            5
   #73 = Integer            1
   #74 = Utf8               java/lang/invoke/LambdaMetafactory
   #75 = Class              #74           // java/lang/invoke/LambdaMetafactory
   #76 = Utf8               altMetafactory
   #77 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #78 = NameAndType        #76:#77       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #79 = Methodref          #75.#78       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #80 = MethodHandle       6:#79         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = Utf8               apply
   #82 = Utf8               (Lscala/collection/parallel/SeqSplitter;)Lscala/Function1;
   #83 = NameAndType        #81:#82       // apply:(Lscala/collection/parallel/SeqSplitter;)Lscala/Function1;
   #84 = InvokeDynamic      #0:#83        // #0:apply:(Lscala/collection/parallel/SeqSplitter;)Lscala/Function1;
   #85 = Utf8               scala/collection/immutable/Seq
   #86 = Class              #85           // scala/collection/immutable/Seq
   #87 = Utf8               foreach
   #88 = Utf8               (Lscala/Function1;)V
   #89 = NameAndType        #87:#88       // foreach:(Lscala/Function1;)V
   #90 = InterfaceMethodref #86.#89       // scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
   #91 = Utf8               pits
   #92 = Utf8               Lscala/collection/immutable/Seq;
   #93 = Utf8               this
   #94 = Utf8               psplitWithSignalling$
   #95 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #96 = Utf8               psplitWithSignalling
   #97 = NameAndType        #96:#51       // psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #98 = InterfaceMethodref #2.#97        // scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
   #99 = NameAndType        #50:#51       // psplit:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #100 = InterfaceMethodref #2.#99        // scala/collection/parallel/SeqSplitter.psplit:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #101 = Utf8               $anonfun$psplitWithSignalling$1$adapted
  #102 = NameAndType        #101:#66      // $anonfun$psplitWithSignalling$1$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #103 = InterfaceMethodref #2.#102       // scala/collection/parallel/SeqSplitter.$anonfun$psplitWithSignalling$1$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #104 = MethodHandle       6:#103        // REF_invokeStatic scala/collection/parallel/SeqSplitter.$anonfun$psplitWithSignalling$1$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  #105 = InvokeDynamic      #1:#83        // #1:apply:(Lscala/collection/parallel/SeqSplitter;)Lscala/Function1;
  #106 = Utf8               remaining
  #107 = Utf8               ()I
  #108 = Utf8               newTaken$
  #109 = Utf8               (Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
  #110 = Utf8               until
  #111 = Utf8               newTaken
  #112 = Utf8               (I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
  #113 = NameAndType        #111:#112     // newTaken:(I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
  #114 = InterfaceMethodref #2.#113       // scala/collection/parallel/SeqSplitter.newTaken:(I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
  #115 = Utf8               I
  #116 = Utf8               (I)Lscala/collection/parallel/SeqSplitter<TT;>.RemainsIteratorTaken;
  #117 = Utf8               <init>
  #118 = Utf8               (Lscala/collection/parallel/SeqSplitter;I)V
  #119 = NameAndType        #117:#118     // "<init>":(Lscala/collection/parallel/SeqSplitter;I)V
  #120 = Methodref          #36.#119      // scala/collection/parallel/SeqSplitter$RemainsIteratorTaken."<init>":(Lscala/collection/parallel/SeqSplitter;I)V
  #121 = Utf8               take$
  #122 = Utf8               (Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter;
  #123 = Utf8               n
  #124 = Utf8               take
  #125 = Utf8               (I)Lscala/collection/parallel/SeqSplitter;
  #126 = NameAndType        #124:#125     // take:(I)Lscala/collection/parallel/SeqSplitter;
  #127 = InterfaceMethodref #2.#126       // scala/collection/parallel/SeqSplitter.take:(I)Lscala/collection/parallel/SeqSplitter;
  #128 = Utf8               (I)Lscala/collection/parallel/SeqSplitter<TT;>;
  #129 = Utf8               slice$
  #130 = Utf8               (Lscala/collection/parallel/SeqSplitter;II)Lscala/collection/parallel/SeqSplitter;
  #131 = Utf8               from1
  #132 = Utf8               until1
  #133 = Utf8               slice
  #134 = Utf8               (II)Lscala/collection/parallel/SeqSplitter;
  #135 = NameAndType        #133:#134     // slice:(II)Lscala/collection/parallel/SeqSplitter;
  #136 = InterfaceMethodref #2.#135       // scala/collection/parallel/SeqSplitter.slice:(II)Lscala/collection/parallel/SeqSplitter;
  #137 = Utf8               (II)Lscala/collection/parallel/SeqSplitter<TT;>;
  #138 = Utf8               newSliceInternal
  #139 = Utf8               (Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
  #140 = NameAndType        #138:#139     // newSliceInternal:(Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
  #141 = InterfaceMethodref #2.#140       // scala/collection/parallel/SeqSplitter.newSliceInternal:(Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
  #142 = Utf8               map$
  #143 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
  #144 = Utf8               f
  #145 = Utf8               map
  #146 = Utf8               (Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
  #147 = NameAndType        #145:#146     // map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
  #148 = InterfaceMethodref #2.#147       // scala/collection/parallel/SeqSplitter.map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
  #149 = Utf8               Lscala/Function1;
  #150 = Utf8               <S$:Ljava/lang/Object;>(Lscala/Function1<TT;TS$;>;)Lscala/collection/parallel/SeqSplitter<TS$;>;
  #151 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)V
  #152 = NameAndType        #117:#151     // "<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)V
  #153 = Methodref          #33.#152      // scala/collection/parallel/SeqSplitter$RemainsIteratorMapped."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)V
  #154 = Utf8               appendParSeq$
  #155 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
  #156 = Utf8               that
  #157 = Utf8               appendParSeq
  #158 = Utf8               (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
  #159 = NameAndType        #157:#158     // appendParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
  #160 = InterfaceMethodref #2.#159       // scala/collection/parallel/SeqSplitter.appendParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
  #161 = Utf8               <U:Ljava/lang/Object;PI::Lscala/collection/parallel/SeqSplitter<TU;>;>(TPI;)Lscala/collection/parallel/SeqSplitter<TT;>.RemainsIteratorAppended<TU;TPI;>;
  #162 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #163 = NameAndType        #117:#162     // "<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #164 = Methodref          #30.#163      // scala/collection/parallel/SeqSplitter$RemainsIteratorAppended."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #165 = Utf8               zipParSeq$
  #166 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
  #167 = Utf8               zipParSeq
  #168 = Utf8               (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
  #169 = NameAndType        #167:#168     // zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
  #170 = InterfaceMethodref #2.#169       // scala/collection/parallel/SeqSplitter.zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
  #171 = Utf8               <S$:Ljava/lang/Object;>(Lscala/collection/parallel/SeqSplitter<TS$;>;)Lscala/collection/parallel/SeqSplitter<Lscala/Tuple2<TT;TS$;>;>;
  #172 = Methodref          #39.#163      // scala/collection/parallel/SeqSplitter$RemainsIteratorZipped."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #173 = Utf8               zipAllParSeq$
  #174 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
  #175 = Utf8               thisElem
  #176 = Utf8               thatElem
  #177 = Utf8               zipAllParSeq
  #178 = Utf8               (Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
  #179 = NameAndType        #177:#178     // zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
  #180 = InterfaceMethodref #2.#179       // scala/collection/parallel/SeqSplitter.zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
  #181 = Utf8               Ljava/lang/Object;
  #182 = Utf8               <S:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lscala/collection/parallel/SeqSplitter<TS;>;TU;TR;)Lscala/collection/parallel/SeqSplitter<TT;>.RemainsIteratorZippedAll<TU;TR;>;
  #183 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)V
  #184 = NameAndType        #117:#183     // "<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)V
  #185 = Methodref          #42.#184      // scala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)V
  #186 = Utf8               reverse$
  #187 = Utf8               reverse
  #188 = NameAndType        #187:#45      // reverse:()Lscala/collection/parallel/SeqSplitter;
  #189 = InterfaceMethodref #2.#188       // scala/collection/parallel/SeqSplitter.reverse:()Lscala/collection/parallel/SeqSplitter;
  #190 = Utf8               scala/collection/parallel/mutable/ParArray$
  #191 = Class              #190          // scala/collection/parallel/mutable/ParArray$
  #192 = Utf8               MODULE$
  #193 = Utf8               Lscala/collection/parallel/mutable/ParArray$;
  #194 = NameAndType        #192:#193     // MODULE$:Lscala/collection/parallel/mutable/ParArray$;
  #195 = Fieldref           #191.#194     // scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
  #196 = Utf8               scala/runtime/ScalaRunTime$
  #197 = Class              #196          // scala/runtime/ScalaRunTime$
  #198 = Utf8               Lscala/runtime/ScalaRunTime$;
  #199 = NameAndType        #192:#198     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #200 = Fieldref           #197.#199     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #201 = Utf8               scala/collection/IterableOnce
  #202 = Class              #201          // scala/collection/IterableOnce
  #203 = Utf8               genericWrapArray
  #204 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #205 = NameAndType        #203:#204     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #206 = Methodref          #197.#205     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #207 = Utf8               fromIterables
  #208 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/parallel/mutable/ParArray;
  #209 = NameAndType        #207:#208     // fromIterables:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/mutable/ParArray;
  #210 = Methodref          #191.#209     // scala/collection/parallel/mutable/ParArray$.fromIterables:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/mutable/ParArray;
  #211 = Utf8               scala/collection/parallel/mutable/ParArray
  #212 = Class              #211          // scala/collection/parallel/mutable/ParArray
  #213 = Utf8               ()Lscala/collection/parallel/ParSeq;
  #214 = NameAndType        #187:#213     // reverse:()Lscala/collection/parallel/ParSeq;
  #215 = Methodref          #212.#214     // scala/collection/parallel/mutable/ParArray.reverse:()Lscala/collection/parallel/ParSeq;
  #216 = Utf8               (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/mutable/ParArray;)V
  #217 = NameAndType        #117:#216     // "<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/mutable/ParArray;)V
  #218 = Methodref          #25.#217      // scala/collection/parallel/SeqSplitter$$anon$1."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/mutable/ParArray;)V
  #219 = Utf8               pa
  #220 = Utf8               Lscala/collection/parallel/mutable/ParArray;
  #221 = Utf8               patchParSeq$
  #222 = Utf8               (Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
  #223 = Utf8               from
  #224 = Utf8               patchElems
  #225 = Utf8               replaced
  #226 = Utf8               patchParSeq
  #227 = Utf8               (ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
  #228 = NameAndType        #226:#227     // patchParSeq:(ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
  #229 = InterfaceMethodref #2.#228       // scala/collection/parallel/SeqSplitter.patchParSeq:(ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
  #230 = Utf8               <U:Ljava/lang/Object;>(ILscala/collection/parallel/SeqSplitter<TU;>;I)Lscala/collection/parallel/SeqSplitter<TT;>.Patched<TU;>;
  #231 = Utf8               (Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)V
  #232 = NameAndType        #117:#231     // "<init>":(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)V
  #233 = Methodref          #27.#232      // scala/collection/parallel/SeqSplitter$Patched."<init>":(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)V
  #234 = Utf8               $anonfun$splitWithSignalling$2
  #235 = Utf8               x$9
  #236 = Utf8               signalDelegate
  #237 = Utf8               ()Lscala/collection/generic/Signalling;
  #238 = NameAndType        #236:#237     // signalDelegate:()Lscala/collection/generic/Signalling;
  #239 = InterfaceMethodref #2.#238       // scala/collection/parallel/SeqSplitter.signalDelegate:()Lscala/collection/generic/Signalling;
  #240 = Utf8               signalDelegate_$eq
  #241 = Utf8               (Lscala/collection/generic/Signalling;)V
  #242 = NameAndType        #240:#241     // signalDelegate_$eq:(Lscala/collection/generic/Signalling;)V
  #243 = InterfaceMethodref #2.#242       // scala/collection/parallel/SeqSplitter.signalDelegate_$eq:(Lscala/collection/generic/Signalling;)V
  #244 = Utf8               $anonfun$psplitWithSignalling$1
  #245 = Utf8               x$10
  #246 = Utf8               $init$
  #247 = Utf8               (Lscala/collection/parallel/SeqSplitter;)V
  #248 = NameAndType        #234:#162     // $anonfun$splitWithSignalling$2:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #249 = InterfaceMethodref #2.#248       // scala/collection/parallel/SeqSplitter.$anonfun$splitWithSignalling$2:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #250 = Utf8               scala/runtime/BoxedUnit
  #251 = Class              #250          // scala/runtime/BoxedUnit
  #252 = Utf8               UNIT
  #253 = Utf8               Lscala/runtime/BoxedUnit;
  #254 = NameAndType        #252:#253     // UNIT:Lscala/runtime/BoxedUnit;
  #255 = Fieldref           #251.#254     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #256 = NameAndType        #244:#162     // $anonfun$psplitWithSignalling$1:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #257 = InterfaceMethodref #2.#256       // scala/collection/parallel/SeqSplitter.$anonfun$psplitWithSignalling$1:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #258 = Utf8               $deserializeLambda$
  #259 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #260 = Utf8               scala/runtime/LambdaDeserialize
  #261 = Class              #260          // scala/runtime/LambdaDeserialize
  #262 = Utf8               bootstrap
  #263 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #264 = NameAndType        #262:#263     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #265 = Methodref          #261.#264     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #266 = MethodHandle       6:#265        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #267 = Utf8               lambdaDeserialize
  #268 = NameAndType        #267:#259     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #269 = InvokeDynamic      #2:#268       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #270 = Utf8               Signature
  #271 = Utf8               MethodParameters
  #272 = Utf8               Code
  #273 = Utf8               LineNumberTable
  #274 = Utf8               LocalVariableTable
  #275 = Utf8               InnerClasses
  #276 = Utf8               SourceFile
  #277 = Utf8               RuntimeVisibleAnnotations
  #278 = Utf8               BootstrapMethods
  #279 = Utf8               ScalaInlineInfo
  #280 = Utf8               ScalaSig
{
  public abstract scala.collection.parallel.SeqSplitter<T> dup();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #46                          // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public abstract scala.collection.immutable.Seq<scala.collection.parallel.SeqSplitter<T>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #49                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/SeqSplitter<TT;>;>;

  public abstract scala.collection.immutable.Seq<scala.collection.parallel.SeqSplitter<T>> psplit(scala.collection.immutable.Seq<java.lang.Object>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #52                          // (Lscala/collection/immutable/Seq<Ljava/lang/Object;>;)Lscala/collection/immutable/Seq<Lscala/collection/parallel/SeqSplitter<TT;>;>;
    MethodParameters:
      Name                           Flags
      sizes                          final

  public static scala.collection.immutable.Seq splitWithSignalling$(scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/immutable/Seq;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #59                 // InterfaceMethod splitWithSignalling:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 544: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.immutable.Seq<scala.collection.parallel.SeqSplitter<T>> splitWithSignalling();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #62,  1           // InterfaceMethod split:()Lscala/collection/immutable/Seq;
         6: astore_1
         7: aload_1
         8: aload_0
         9: invokedynamic #84,  0             // InvokeDynamic #0:apply:(Lscala/collection/parallel/SeqSplitter;)Lscala/Function1;
        14: invokeinterface #90,  2           // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        19: aload_1
        20: areturn
      LineNumberTable:
        line 545: 0
        line 546: 7
        line 547: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      13     1  pits   Lscala/collection/immutable/Seq;
            0      21     0  this   Lscala/collection/parallel/SeqSplitter;
    Signature: #49                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/SeqSplitter<TT;>;>;

  public static scala.collection.immutable.Seq psplitWithSignalling$(scala.collection.parallel.SeqSplitter, scala.collection.immutable.Seq);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #98                 // InterfaceMethod psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
         5: areturn
      LineNumberTable:
        line 550: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       6     1 sizes   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      sizes                          final

  public default scala.collection.immutable.Seq<scala.collection.parallel.SeqSplitter<T>> psplitWithSignalling(scala.collection.immutable.Seq<java.lang.Object>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #100,  2          // InterfaceMethod psplit:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
         7: astore_2
         8: aload_2
         9: aload_0
        10: invokedynamic #105,  0            // InvokeDynamic #1:apply:(Lscala/collection/parallel/SeqSplitter;)Lscala/Function1;
        15: invokeinterface #90,  2           // InterfaceMethod scala/collection/immutable/Seq.foreach:(Lscala/Function1;)V
        20: aload_2
        21: areturn
      LineNumberTable:
        line 551: 0
        line 552: 8
        line 553: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      13     2  pits   Lscala/collection/immutable/Seq;
            0      22     0  this   Lscala/collection/parallel/SeqSplitter;
            0      22     1 sizes   Lscala/collection/immutable/Seq;
    Signature: #52                          // (Lscala/collection/immutable/Seq<Ljava/lang/Object;>;)Lscala/collection/immutable/Seq<Lscala/collection/parallel/SeqSplitter<TT;>;>;
    MethodParameters:
      Name                           Flags
      sizes                          final

  public abstract int remaining();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public static scala.collection.parallel.SeqSplitter$RemainsIteratorTaken newTaken$(scala.collection.parallel.SeqSplitter, int);
    descriptor: (Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #114                // InterfaceMethod newTaken:(I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
         5: areturn
      LineNumberTable:
        line 572: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       6     1 until   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      until                          final

  public default scala.collection.parallel.SeqSplitter<T>.RemainsIteratorTaken newTaken(int);
    descriptor: (I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #36                 // class scala/collection/parallel/SeqSplitter$RemainsIteratorTaken
         3: dup
         4: aload_0
         5: iload_1
         6: invokespecial #120                // Method scala/collection/parallel/SeqSplitter$RemainsIteratorTaken."<init>":(Lscala/collection/parallel/SeqSplitter;I)V
         9: areturn
      LineNumberTable:
        line 572: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/parallel/SeqSplitter;
            0      10     1 until   I
    Signature: #116                         // (I)Lscala/collection/parallel/SeqSplitter<TT;>.RemainsIteratorTaken;
    MethodParameters:
      Name                           Flags
      until                          final

  public static scala.collection.parallel.SeqSplitter take$(scala.collection.parallel.SeqSplitter, int);
    descriptor: (Lscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #127                // InterfaceMethod take:(I)Lscala/collection/parallel/SeqSplitter;
         5: areturn
      LineNumberTable:
        line 573: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       6     1     n   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final

  public default scala.collection.parallel.SeqSplitter<T> take(int);
    descriptor: (I)Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokeinterface #114,  2          // InterfaceMethod newTaken:(I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
         7: areturn
      LineNumberTable:
        line 573: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/SeqSplitter;
            0       8     1     n   I
    Signature: #128                         // (I)Lscala/collection/parallel/SeqSplitter<TT;>;
    MethodParameters:
      Name                           Flags
      n                              final

  public static scala.collection.parallel.SeqSplitter slice$(scala.collection.parallel.SeqSplitter, int, int);
    descriptor: (Lscala/collection/parallel/SeqSplitter;II)Lscala/collection/parallel/SeqSplitter;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: iload_2
         3: invokespecial #136                // InterfaceMethod slice:(II)Lscala/collection/parallel/SeqSplitter;
         6: areturn
      LineNumberTable:
        line 574: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       7     1 from1   I
            0       7     2 until1   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      from1                          final
      until1                         final

  public default scala.collection.parallel.SeqSplitter<T> slice(int, int);
    descriptor: (II)Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_0
         2: iload_2
         3: invokeinterface #114,  2          // InterfaceMethod newTaken:(I)Lscala/collection/parallel/SeqSplitter$RemainsIteratorTaken;
         8: iload_1
         9: invokeinterface #141,  3          // InterfaceMethod newSliceInternal:(Lscala/collection/parallel/IterableSplitter$Taken;I)Lscala/collection/parallel/IterableSplitter$Taken;
        14: checkcast     #2                  // class scala/collection/parallel/SeqSplitter
        17: areturn
      LineNumberTable:
        line 574: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/SeqSplitter;
            0      18     1 from1   I
            0      18     2 until1   I
    Signature: #137                         // (II)Lscala/collection/parallel/SeqSplitter<TT;>;
    MethodParameters:
      Name                           Flags
      from1                          final
      until1                         final

  public static scala.collection.parallel.SeqSplitter map$(scala.collection.parallel.SeqSplitter, scala.Function1);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #148                // InterfaceMethod map:(Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
         5: areturn
      LineNumberTable:
        line 582: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       6     1     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      f                              final

  public default <S$ extends java.lang.Object> scala.collection.parallel.SeqSplitter<S$> map(scala.Function1<T, S$>);
    descriptor: (Lscala/Function1;)Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #33                 // class scala/collection/parallel/SeqSplitter$RemainsIteratorMapped
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #153                // Method scala/collection/parallel/SeqSplitter$RemainsIteratorMapped."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/Function1;)V
         9: areturn
      LineNumberTable:
        line 582: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/parallel/SeqSplitter;
            0      10     1     f   Lscala/Function1;
    Signature: #150                         // <S$:Ljava/lang/Object;>(Lscala/Function1<TT;TS$;>;)Lscala/collection/parallel/SeqSplitter<TS$;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static scala.collection.parallel.SeqSplitter$RemainsIteratorAppended appendParSeq$(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #160                // InterfaceMethod appendParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
         5: areturn
      LineNumberTable:
        line 613: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       6     1  that   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      that                           final

  public default <U extends java.lang.Object, PI extends scala.collection.parallel.SeqSplitter<U>> scala.collection.parallel.SeqSplitter<T>.RemainsIteratorAppended<U, PI> appendParSeq(PI);
    descriptor: (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorAppended;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #30                 // class scala/collection/parallel/SeqSplitter$RemainsIteratorAppended
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #164                // Method scala/collection/parallel/SeqSplitter$RemainsIteratorAppended."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
         9: areturn
      LineNumberTable:
        line 613: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/parallel/SeqSplitter;
            0      10     1  that   Lscala/collection/parallel/SeqSplitter;
    Signature: #161                         // <U:Ljava/lang/Object;PI::Lscala/collection/parallel/SeqSplitter<TU;>;>(TPI;)Lscala/collection/parallel/SeqSplitter<TT;>.RemainsIteratorAppended<TU;TPI;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public static scala.collection.parallel.SeqSplitter zipParSeq$(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #170                // InterfaceMethod zipParSeq:(Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
         5: areturn
      LineNumberTable:
        line 621: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       6     1  that   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      that                           final

  public default <S$ extends java.lang.Object> scala.collection.parallel.SeqSplitter<scala.Tuple2<T, S$>> zipParSeq(scala.collection.parallel.SeqSplitter<S$>);
    descriptor: (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #39                 // class scala/collection/parallel/SeqSplitter$RemainsIteratorZipped
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #172                // Method scala/collection/parallel/SeqSplitter$RemainsIteratorZipped."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
         9: areturn
      LineNumberTable:
        line 621: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/parallel/SeqSplitter;
            0      10     1  that   Lscala/collection/parallel/SeqSplitter;
    Signature: #171                         // <S$:Ljava/lang/Object;>(Lscala/collection/parallel/SeqSplitter<TS$;>;)Lscala/collection/parallel/SeqSplitter<Lscala/Tuple2<TT;TS$;>;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public static scala.collection.parallel.SeqSplitter$RemainsIteratorZippedAll zipAllParSeq$(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter, java.lang.Object, java.lang.Object);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokespecial #180                // InterfaceMethod zipAllParSeq:(Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
         7: areturn
      LineNumberTable:
        line 644: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       8     1  that   Lscala/collection/parallel/SeqSplitter;
            0       8     2 thisElem   Ljava/lang/Object;
            0       8     3 thatElem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      that                           final
      thisElem                       final
      thatElem                       final

  public default <S extends java.lang.Object, U extends java.lang.Object, R extends java.lang.Object> scala.collection.parallel.SeqSplitter<T>.RemainsIteratorZippedAll<U, R> zipAllParSeq(scala.collection.parallel.SeqSplitter<S>, U, R);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)Lscala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: new           #42                 // class scala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll
         3: dup
         4: aload_0
         5: aload_1
         6: aload_2
         7: aload_3
         8: invokespecial #185                // Method scala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;Ljava/lang/Object;Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 644: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/parallel/SeqSplitter;
            0      12     1  that   Lscala/collection/parallel/SeqSplitter;
            0      12     2 thisElem   Ljava/lang/Object;
            0      12     3 thatElem   Ljava/lang/Object;
    Signature: #182                         // <S:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lscala/collection/parallel/SeqSplitter<TS;>;TU;TR;)Lscala/collection/parallel/SeqSplitter<TT;>.RemainsIteratorZippedAll<TU;TR;>;
    MethodParameters:
      Name                           Flags
      that                           final
      thisElem                       final
      thatElem                       final

  public static scala.collection.parallel.SeqSplitter reverse$(scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;)Lscala/collection/parallel/SeqSplitter;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #189                // InterfaceMethod reverse:()Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 646: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.parallel.SeqSplitter<T> reverse();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=1
         0: getstatic     #195                // Field scala/collection/parallel/mutable/ParArray$.MODULE$:Lscala/collection/parallel/mutable/ParArray$;
         3: getstatic     #200                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         6: iconst_1
         7: anewarray     #202                // class scala/collection/IterableOnce
        10: dup
        11: iconst_0
        12: aload_0
        13: aastore
        14: invokevirtual #206                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        17: invokevirtual #210                // Method scala/collection/parallel/mutable/ParArray$.fromIterables:(Lscala/collection/immutable/Seq;)Lscala/collection/parallel/mutable/ParArray;
        20: invokevirtual #215                // Method scala/collection/parallel/mutable/ParArray.reverse:()Lscala/collection/parallel/ParSeq;
        23: checkcast     #212                // class scala/collection/parallel/mutable/ParArray
        26: astore_1
        27: new           #25                 // class scala/collection/parallel/SeqSplitter$$anon$1
        30: dup
        31: aload_0
        32: aload_1
        33: invokespecial #218                // Method scala/collection/parallel/SeqSplitter$$anon$1."<init>":(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/mutable/ParArray;)V
        36: areturn
      LineNumberTable:
        line 647: 0
        line 648: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27       9     1    pa   Lscala/collection/parallel/mutable/ParArray;
            0      37     0  this   Lscala/collection/parallel/SeqSplitter;
    Signature: #46                          // ()Lscala/collection/parallel/SeqSplitter<TT;>;

  public static scala.collection.parallel.SeqSplitter$Patched patchParSeq$(scala.collection.parallel.SeqSplitter, int, scala.collection.parallel.SeqSplitter, int);
    descriptor: (Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: iload_1
         2: aload_2
         3: iload_3
         4: invokespecial #229                // InterfaceMethod patchParSeq:(ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
         7: areturn
      LineNumberTable:
        line 667: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       8     1  from   I
            0       8     2 patchElems   Lscala/collection/parallel/SeqSplitter;
            0       8     3 replaced   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      from                           final
      patchElems                     final
      replaced                       final

  public default <U extends java.lang.Object> scala.collection.parallel.SeqSplitter<T>.Patched<U> patchParSeq(int, scala.collection.parallel.SeqSplitter<U>, int);
    descriptor: (ILscala/collection/parallel/SeqSplitter;I)Lscala/collection/parallel/SeqSplitter$Patched;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: new           #27                 // class scala/collection/parallel/SeqSplitter$Patched
         3: dup
         4: aload_0
         5: iload_1
         6: aload_2
         7: iload_3
         8: invokespecial #233                // Method scala/collection/parallel/SeqSplitter$Patched."<init>":(Lscala/collection/parallel/SeqSplitter;ILscala/collection/parallel/SeqSplitter;I)V
        11: areturn
      LineNumberTable:
        line 667: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/parallel/SeqSplitter;
            0      12     1  from   I
            0      12     2 patchElems   Lscala/collection/parallel/SeqSplitter;
            0      12     3 replaced   I
    Signature: #230                         // <U:Ljava/lang/Object;>(ILscala/collection/parallel/SeqSplitter<TU;>;I)Lscala/collection/parallel/SeqSplitter<TT;>.Patched<TU;>;
    MethodParameters:
      Name                           Flags
      from                           final
      patchElems                     final
      replaced                       final

  public static void $anonfun$splitWithSignalling$2(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #239,  1          // InterfaceMethod signalDelegate:()Lscala/collection/generic/Signalling;
         7: invokeinterface #243,  2          // InterfaceMethod signalDelegate_$eq:(Lscala/collection/generic/Signalling;)V
        12: return
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lscala/collection/parallel/SeqSplitter;
            0      13     1   x$9   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$9                            final

  public static void $anonfun$psplitWithSignalling$1(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #239,  1          // InterfaceMethod signalDelegate:()Lscala/collection/generic/Signalling;
         7: invokeinterface #243,  2          // InterfaceMethod signalDelegate_$eq:(Lscala/collection/generic/Signalling;)V
        12: return
      LineNumberTable:
        line 552: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lscala/collection/parallel/SeqSplitter;
            0      13     1  x$10   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$10                           final

  public static void $init$(scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 535: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Object $anonfun$splitWithSignalling$2$adapted(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #249                // InterfaceMethod $anonfun$splitWithSignalling$2:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
         5: getstatic     #255                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 546: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       9     1   x$9   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$9                            final

  public static java.lang.Object $anonfun$psplitWithSignalling$1$adapted(scala.collection.parallel.SeqSplitter, scala.collection.parallel.SeqSplitter);
    descriptor: (Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #257                // InterfaceMethod $anonfun$psplitWithSignalling$1:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)V
         5: getstatic     #255                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 552: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lscala/collection/parallel/SeqSplitter;
            0       9     1  x$10   Lscala/collection/parallel/SeqSplitter;
    MethodParameters:
      Name                           Flags
      $this                          final
      x$10                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #269,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #20= #17 of #19;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #23= #22 of #7;                  // Taken=class scala/collection/parallel/IterableSplitter$Taken of class scala/collection/parallel/IterableSplitter
  public final #25;                       // class scala/collection/parallel/SeqSplitter$$anon$1
  public #28= #27 of #2;                  // Patched=class scala/collection/parallel/SeqSplitter$Patched of class scala/collection/parallel/SeqSplitter
  public #31= #30 of #2;                  // RemainsIteratorAppended=class scala/collection/parallel/SeqSplitter$RemainsIteratorAppended of class scala/collection/parallel/SeqSplitter
  public #34= #33 of #2;                  // RemainsIteratorMapped=class scala/collection/parallel/SeqSplitter$RemainsIteratorMapped of class scala/collection/parallel/SeqSplitter
  public #37= #36 of #2;                  // RemainsIteratorTaken=class scala/collection/parallel/SeqSplitter$RemainsIteratorTaken of class scala/collection/parallel/SeqSplitter
  public #40= #39 of #2;                  // RemainsIteratorZipped=class scala/collection/parallel/SeqSplitter$RemainsIteratorZipped of class scala/collection/parallel/SeqSplitter
  public #43= #42 of #2;                  // RemainsIteratorZippedAll=class scala/collection/parallel/SeqSplitter$RemainsIteratorZippedAll of class scala/collection/parallel/SeqSplitter
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter<TT;>;Lscala/collection/parallel/AugmentedSeqIterator<TT;>;Lscala/collection/parallel/PreciseSplitter<TT;>;
SourceFile: "RemainsIterator.scala"
RuntimeVisibleAnnotations:
  0: #13(#14=s#15)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t%ga\u0002 @!\u0003\r\tA\u0012\u0005\u0006C\u0002!\tA\u0019\u0005\u0006M\u00021\ta\u001a\u0005\u0006S\u00021\tA\u001b\u0005\u0006e\u00021\ta\u001d\u0005\u0006y\u0002!\tE\u001b\u0005\u0006{\u0002!\tA \u0005\b\u0003\u0003\u0001a\u0011AA\u0002\r\u0019\t)\u0001\u0001\u0001\u0002\b!I\u0011\u0011\u0003\u0005\u0003\u0002\u0003\u0006I!\u001f\u0005\b\u0003\'AA\u0011AA\u000b\u0011\u00151\u0007\u0002\"\u0011h\u0011\u0015I\u0007\u0002\"\u0011k\u0011\u0019\u0011\b\u0002\"\u0001\u0002\u001c!A\u0011q\u0004\u0001\u0005B\u0005\u000b\t\u0003C\u0004\u0002(\u0001!\t%!\u000b\t\u000f\u0005=\u0002\u0001\"\u0011\u00022\u00191\u00111\b\u0001\u0001\u0003{A!\"a\u0014\u0012\u0005\u0003\u0005\u000b\u0011BA)\u0011\u001d\t\u0019\"\u0005C\u0001\u0003/BaAZ\t\u0005B\u0005u\u0003BB5\u0012\t\u0003\ny\u0006\u0003\u0004s#\u0011\u0005\u00111\r\u0005\b\u0003O\u0002A\u0011IA5\r\u0019\t9\b\u0001\u0001\u0002z!a\u0011Q\u0013\r\u0003\u0002\u0003\u0006I!a#\u0002\u0018\"9\u00111\u0003\r\u0005\u0002\u0005m\u0005B\u00024\u0019\t\u0003\n\t\u000b\u0003\u0004j1\u0011\u0005\u00131\u0015\u0005\u0007eb!\t!a*\t\u000f\u0005-\u0006\u0001\"\u0001\u0002.\u001a1\u0011\u0011\u0019\u0001\u0001\u0003\u0007DA\"!7 \u0005\u0003\u0005\u000b\u0011BAn\u0003;Dq!a\u0005 \t\u0003\ty\u000e\u0003\u0004g?\u0011\u0005\u0013Q\u001d\u0005\u0007S~!\t%a:\t\rI|B\u0011AAv\u0011\u001d\tY\u0010\u0001C!\u0003{4aA!\u0004\u0001\u0001\t=\u0001\u0002DAmM\t\u0005\t\u0015!\u0003\u0003&\t\u001d\u0002\u0002\u0004B\u0015M\t\u0005\t\u0015!\u0003\u0003\u001a\t-\u0002\u0002\u0004B\u0018M\t\u0005\t\u0015!\u0003\u0003\u001e\tE\u0002bBA\nM\u0011\u0005!Q\u0007\u0005\u0007M\u001a\"\tEa\u0010\t\u000f\t\u0005c\u0005\"\u0003\u0003D!1\u0011N\nC!\u0005\u0013BaA\u001d\u0014\u0005\u0002\t5\u0003b\u0002B)\u0001\u0011\u0005#1\u000b\u0005\u0007\u0005k\u0002A\u0011A4\u0007\r\t]\u0004\u0001\u0001B=\u0011%\u0011\u0019)\rB\u0001B\u0003%\u0011\u0010\u0003\u0006\u0003\u0006F\u0012\t\u0011)A\u0005\u0005{B\u0011Ba\"2\u0005\u0003\u0005\u000b\u0011B=\t\u000f\u0005M\u0011\u0007\"\u0001\u0003\n\"A!1S\u0019!\u0002\u0013\u0011)\nC\u0004\u0003\u001aF\"\tAa\'\t\u000f\t\r\u0016\u0007\"\u0001\u0003&\"9\u0011\u0011A\u0019\u0005\u0002\u0005\r\u0001B\u000242\t\u0003\u00119\u000b\u0003\u0004jc\u0011\u0005!1\u0016\u0005\u0007eF\"\tAa,\t\u000f\tM\u0006\u0001\"\u0001\u00036\nY1+Z9Ta2LG\u000f^3s\u0015\t\u0001\u0015)\u0001\u0005qCJ\fG\u000e\\3m\u0015\t\u00115)\u0001\u0006d_2dWm\u0019;j_:T\u0011\u0001R\u0001\u0006g\u000e\fG.Y\u0002\u0001+\t9%kE\u0003\u0001\u00112[f\f\u0005\u0002J\u00156\t1)\u0003\u0002L\u0007\n1\u0011I\\=SK\u001a\u00042!\u0014(Q\u001b\u0005y\u0014BA(@\u0005AIE/\u001a:bE2,7\u000b\u001d7jiR,\'\u000f\u0005\u0002R%2\u0001AAB*\u0001\t\u000b\u0007AKA\u0001U#\t)\u0006\f\u0005\u0002J-&\u0011qk\u0011\u0002\b\u001d>$\b.\u001b8h!\tI\u0015,\u0003\u0002[\u0007\n\u0019\u0011I\\=\u0011\u00075c\u0006+\u0003\u0002^\u007f\t!\u0012)^4nK:$X\rZ*fc&#XM]1u_J\u00042!T0Q\u0013\t\u0001wHA\bQe\u0016\u001c\u0017n]3Ta2LG\u000f^3s\u0003\u0019!\u0013N\\5uIQ\t1\r\u0005\u0002JI&\u0011Qm\u0011\u0002\u0005+:LG/A\u0002ekB,\u0012\u0001\u001b\t\u0004\u001b\u0002\u0001\u0016!B:qY&$X#A6\u0011\u00071|\u0007N\u0004\u0002J[&\u0011anQ\u0001\ba\u0006\u001c7.Y4f\u0013\t\u0001\u0018OA\u0002TKFT!A\\\"\u0002\rA\u001c\b\u000f\\5u)\tYG\u000fC\u0003v\t\u0001\u0007a/A\u0003tSj,7\u000fE\u0002JofL!\u0001_\"\u0003\u0015q\u0012X\r]3bi\u0016$g\b\u0005\u0002Ju&\u00111p\u0011\u0002\u0004\u0013:$\u0018aE:qY&$x+\u001b;i\'&<g.\u00197mS:<\u0017\u0001\u00069ta2LGoV5uQNKwM\\1mY&tw\r\u0006\u0002l\u007f\")QO\u0002a\u0001m\u0006I!/Z7bS:LgnZ\u000b\u0002s\n!\"+Z7bS:\u001c\u0018\n^3sCR|\'\u000fV1lK:\u001cB\u0001CA\u0005QB!\u00111BA\u0007\u001b\u0005\u0001\u0011bAA\b\u001d\n)A+Y6f]\u0006\u0011Ao[\u0001\u0007y%t\u0017\u000e\u001e \u0015\t\u0005]\u0011\u0011\u0004\t\u0004\u0003\u0017A\u0001BBA\t\u0015\u0001\u0007\u0011\u0010F\u0002l\u0003;AQ!^\u0007A\u0002Y\f\u0001B\\3x)\u0006\\WM\u001c\u000b\u0005\u0003/\t\u0019\u0003\u0003\u0004\u0002&9\u0001\r!_\u0001\u0006k:$\u0018\u000e\\\u0001\u0005i\u0006\\W\rF\u0002i\u0003WAa!!\f\u0010\u0001\u0004I\u0018!\u00018\u0002\u000bMd\u0017nY3\u0015\u000b!\f\u0019$a\u000e\t\r\u0005U\u0002\u00031\u0001z\u0003\u00151\'o\\72\u0011\u0019\tI\u0004\u0005a\u0001s\u00061QO\u001c;jYF\u0012QCU3nC&t7/\u0013;fe\u0006$xN]\'baB,G-\u0006\u0003\u0002@\u0005%3#B\t\u0002B\u00055\u0003CBA\u0006\u0003\u0007\n9%C\u0002\u0002F9\u0013a!T1qa\u0016$\u0007cA)\u0002J\u00111\u00111J\tC\u0002Q\u0013\u0011a\u0015\t\u0005\u001b\u0002\t9%A\u0001g!\u0019I\u00151\u000b)\u0002H%\u0019\u0011QK\"\u0003\u0013\u0019+hn\u0019;j_:\fD\u0003BA-\u00037\u0002R!a\u0003\u0012\u0003\u000fBq!a\u0014\u0014\u0001\u0004\t\t&\u0006\u0002\u0002NU\u0011\u0011\u0011\r\t\u0005Y>\fi\u0005\u0006\u0003\u0002b\u0005\u0015\u0004\"B;\u0017\u0001\u00041\u0018aA7baV!\u00111NA9)\u0011\ti\'a\u001d\u0011\t5\u0003\u0011q\u000e\t\u0004#\u0006EDABA&/\t\u0007A\u000bC\u0004\u0002P]\u0001\r!!\u001e\u0011\r%\u000b\u0019\u0006UA8\u0005]\u0011V-\\1j]NLE/\u001a:bi>\u0014\u0018\t\u001d9f]\u0012,G-\u0006\u0004\u0002|\u0005\u0015\u0015QR\n\u00061\u0005u\u00141\u0013\t\t\u0003\u0017\ty(a!\u0002\f&\u0019\u0011\u0011\u0011(\u0003\u0011\u0005\u0003\b/\u001a8eK\u0012\u00042!UAC\t\u001d\t9\t\u0007b\u0001\u0003\u0013\u0013\u0011!V\t\u0003!b\u00032!UAG\t\u001d\ty\t\u0007b\u0001\u0003#\u0013!\u0001U%\u0012\u0007U\u000b\u0019\n\u0005\u0003N\u0001\u0005\r\u0015AA5u\u0013\u0011\tI*a \u0002\tQD\u0017\r\u001e\u000b\u0005\u0003;\u000by\nE\u0004\u0002\fa\t\u0019)a#\t\u000f\u0005U%\u00041\u0001\u0002\fV\u0011\u00111S\u000b\u0003\u0003K\u0003B\u0001\\8\u0002\u0014R!\u0011QUAU\u0011\u0015)X\u00041\u0001w\u00031\t\u0007\u000f]3oIB\u000b\'oU3r+\u0019\ty+!.\u0002:R!\u0011\u0011WA`!\u001d\tY\u0001GAZ\u0003o\u00032!UA[\t\u001d\t9I\bb\u0001\u0003\u0013\u00032!UA]\t\u001d\tyI\bb\u0001\u0003w\u000b2!VA_!\u0011i\u0005!a-\t\u000f\u0005ee\u00041\u0001\u00028\n)\"+Z7bS:\u001c\u0018\n^3sCR|\'OW5qa\u0016$W\u0003BAc\u0003\u001f\u001cRaHAd\u0003#\u0004b!a\u0003\u0002J\u00065\u0017bAAf\u001d\n1!,\u001b9qK\u0012\u00042!UAh\t\u0019\tYe\bb\u0001)B!Q\nAAj!\u0019I\u0015Q\u001b)\u0002N&\u0019\u0011q[\"\u0003\rQ+\b\u000f\\33\u0003\t!\u0018\u000e\u0005\u0003N\u0001\u00055\u0017\u0002BAM\u0003\u0013$B!!9\u0002dB)\u00111B\u0010\u0002N\"9\u0011\u0011\\\u0011A\u0002\u0005mWCAAi+\t\tI\u000f\u0005\u0003m_\u0006EG\u0003BAw\u0003o\u0004b!a<\u0002v\u0006EWBAAy\u0015\r\t\u00190Q\u0001\nS6lW\u000f^1cY\u0016L1\u0001]Ay\u0011\u0019\tI\u0010\na\u0001m\u0006\u00191O_:\u0002\u0013iL\u0007\u000fU1s\'\u0016\fX\u0003BA\u0000\u0005\u000f!BA!\u0001\u0003\nA!Q\n\u0001B\u0002!\u0019I\u0015Q\u001b)\u0003\u0006A\u0019\u0011Ka\u0002\u0005\r\u0005-SE1\u0001U\u0011\u001d\tI*\na\u0001\u0005\u0017\u0001B!\u0014\u0001\u0003\u0006\tA\"+Z7bS:\u001c\u0018\n^3sCR|\'OW5qa\u0016$\u0017\t\u001c7\u0016\r\tE!1\u0004B\u0010\'\u00151#1\u0003B\u0011!!\tYA!\u0006\u0003\u001a\tu\u0011b\u0001B\f\u001d\nI!,\u001b9qK\u0012\fE\u000e\u001c\t\u0004#\nmAaBADM\t\u0007\u0011\u0011\u0012\t\u0004#\n}AABA&M\t\u0007A\u000b\u0005\u0003N\u0001\t\r\u0002cB%\u0002V\ne!Q\u0004\t\u0005\u001b\u0002\u0011i\"\u0003\u0003\u0002\u001a\nU\u0011!\u0002;iSN,\u0017\u0002\u0002B\u0017\u0005+\t\u0001\u0002\u001e5jg\u0016dW-\\\u0001\u0006i\"\fG/Z\u0005\u0005\u0005g\u0011)\"\u0001\u0005uQ\u0006$X\r\\3n)!\u00119D!\u000f\u0003<\tu\u0002cBA\u0006M\te!Q\u0004\u0005\b\u00033T\u0003\u0019\u0001B\u0013\u0011\u001d\u0011IC\u000ba\u0001\u00053AqAa\f+\u0001\u0004\u0011i\"\u0006\u0002\u0003\"\u00059\u0001/\u0019;dQ\u0016lWC\u0001B#!\u001dI\u0015Q\u001bB$\u0005K\u0001B!\u0014\u0001\u0003\u001aU\u0011!1\n\t\u0005Y>\u0014\t\u0003\u0006\u0003\u0003L\t=\u0003\"B;/\u0001\u00041\u0018\u0001\u0004>ja\u0006cG\u000eU1s\'\u0016\fX\u0003\u0003B+\u0005O\u0012YFa\u0018\u0015\u0011\t]#\u0011\u000eB7\u0005c\u0002r!a\u0003\'\u00053\u0012i\u0006E\u0002R\u00057\"q!a\"0\u0005\u0004\tI\tE\u0002R\u0005?\"qA!\u00190\u0005\u0004\u0011\u0019GA\u0001S#\r\u0011)\u0007\u0017\t\u0004#\n\u001dDABA&_\t\u0007A\u000bC\u0004\u0002\u001a>\u0002\rAa\u001b\u0011\t5\u0003!Q\r\u0005\b\u0005_z\u0003\u0019\u0001B-\u0003!!\b.[:FY\u0016l\u0007b\u0002B:_\u0001\u0007!QL\u0001\ti\"\fG/\u00127f[\u00069!/\u001a<feN,\'a\u0002)bi\u000eDW\rZ\u000b\u0005\u0005w\u0012\ti\u0005\u00032\u0011\nu\u0004\u0003B\'\u0001\u0005\u007f\u00022!\u0015BA\t\u001d\t9)\rb\u0001\u0003\u0013\u000bAA\u001a:p[\u0006)\u0001/\u0019;dQ\u0006A!/\u001a9mC\u000e,G\r\u0006\u0005\u0003\f\n5%q\u0012BI!\u0015\tY!\rB@\u0011\u0019\u0011\u0019)\u000ea\u0001s\"9!QQ\u001bA\u0002\tu\u0004B\u0002BDk\u0001\u0007\u00110\u0001\u0003ue&|\u0007C\u0002BL1\t}\u0004\u000e\u0005\u0004i1\t}$QP\u0001\bQ\u0006\u001ch*\u001a=u+\t\u0011i\nE\u0002J\u0005?K1A!)D\u0005\u001d\u0011un\u001c7fC:\fAA\\3yiR\u0011!qP\u000b\u0003\u0005S\u0003B\u0001[\u0019\u0003\u0000U\u0011!Q\u0016\t\u0005Y>\u0014i\b\u0006\u0003\u0003.\nE\u0006\"B;=\u0001\u00041\u0018a\u00039bi\u000eD\u0007+\u0019:TKF,BAa.\u0003>RA!\u0011\u0018B`\u0005\u0003\u00149\rE\u0003\u0002\fE\u0012Y\fE\u0002R\u0005{#q!a\">\u0005\u0004\tI\t\u0003\u0004\u0003\u0004v\u0002\r!\u001f\u0005\b\u0005\u0007l\u0004\u0019\u0001Bc\u0003)\u0001\u0018\r^2i\u000b2,Wn\u001d\t\u0005\u001b\u0002\u0011Y\f\u0003\u0004\u0003\bv\u0002\r!\u001f"
    )
BootstrapMethods:
  0: #80 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #64 (Ljava/lang/Object;)Ljava/lang/Object;
      #69 REF_invokeStatic scala/collection/parallel/SeqSplitter.$anonfun$splitWithSignalling$2$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #71 (Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #72 5
      #73 1
      #71 (Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  1: #80 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #64 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 REF_invokeStatic scala/collection/parallel/SeqSplitter.$anonfun$psplitWithSignalling$1$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #71 (Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #72 5
      #73 1
      #71 (Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  2: #266 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #104 REF_invokeStatic scala/collection/parallel/SeqSplitter.$anonfun$psplitWithSignalling$1$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
      #69 REF_invokeStatic scala/collection/parallel/SeqSplitter.$anonfun$splitWithSignalling$2$adapted:(Lscala/collection/parallel/SeqSplitter;Lscala/collection/parallel/SeqSplitter;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 00 00 1F 00 F4 00 A2 01 00 65 00 42 01 00 EA
   00 A2 01 00 41 00 42 01 00 F6 00 F7 01 00 9D 00
   9E 00 00 9A 00 9B 01 00 2C 00 2D 00 00 91 00 92
   00 00 8E 00 8F 01 00 6F 00 70 00 00 6C 00 6D 01
   00 E2 00 E3 00 00 DD 00 DE 01 00 32 00 33 00 00
   60 00 33 00 00 5E 00 5F 01 00 6A 00 6B 00 00 BB
   00 2D 00 00 BA 00 A8 01 00 85 00 86 00 00 81 00
   82 01 00 2F 00 30 00 00 39 00 30 00 00 36 00 37
   01 00 7C 00 7D 00 00 79 00 7A 01 00 B1 00 B2 00
   00 AD 00 AE 01 00 A7 00 A8 00 00 A5 00 A6 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
