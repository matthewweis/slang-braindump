Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/graph/Conflict$Conflicted.class
  Last modified May 29, 2022; size 8403 bytes
  SHA-256 checksum 5de8ef8c18c488a75458624311bf380cf517241b89b392837ce5f59885adfc84
  Compiled from "Conflict.scala"
public final class coursier.graph.Conflict$Conflicted implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/graph/Conflict$Conflicted
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 20, attributes: 5
Constant pool:
    #1 = Utf8               coursier/graph/Conflict$Conflicted
    #2 = Class              #1            // coursier/graph/Conflict$Conflicted
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Conflict.scala
   #10 = Utf8               coursier/graph/Conflict
   #11 = Class              #10           // coursier/graph/Conflict
   #12 = Utf8               Conflicted
   #13 = Utf8               coursier/util/Print$Colors
   #14 = Class              #13           // coursier/util/Print$Colors
   #15 = Utf8               coursier/util/Print
   #16 = Class              #15           // coursier/util/Print
   #17 = Utf8               Colors
   #18 = Utf8               coursier/util/Print$Colors$
   #19 = Class              #18           // coursier/util/Print$Colors$
   #20 = Utf8
   #21 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #22 = Class              #21           // java/lang/invoke/MethodHandles$Lookup
   #23 = Utf8               java/lang/invoke/MethodHandles
   #24 = Class              #23           // java/lang/invoke/MethodHandles
   #25 = Utf8               Lookup
   #26 = Utf8               scala/math/Ordering$String$
   #27 = Class              #26           // scala/math/Ordering$String$
   #28 = Utf8               scala/math/Ordering
   #29 = Class              #28           // scala/math/Ordering
   #30 = Utf8               tree
   #31 = Utf8               Lcoursier/graph/ReverseModuleTree;
   #32 = Utf8               productIterator
   #33 = Utf8               ()Lscala/collection/Iterator;
   #34 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #35 = Utf8               productIterator$
   #36 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #37 = NameAndType        #35:#36       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #38 = InterfaceMethodref #6.#37        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #39 = Utf8               this
   #40 = Utf8               Lcoursier/graph/Conflict$Conflicted;
   #41 = Utf8               productElementNames
   #42 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #43 = Utf8               productElementNames$
   #44 = NameAndType        #43:#36       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #45 = InterfaceMethodref #6.#44        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #46 = Utf8               ()Lcoursier/graph/ReverseModuleTree;
   #47 = NameAndType        #30:#31       // tree:Lcoursier/graph/ReverseModuleTree;
   #48 = Fieldref           #2.#47        // coursier/graph/Conflict$Conflicted.tree:Lcoursier/graph/ReverseModuleTree;
   #49 = Utf8               conflict
   #50 = Utf8               ()Lcoursier/graph/Conflict;
   #51 = Utf8               coursier/graph/Conflict$
   #52 = Class              #51           // coursier/graph/Conflict$
   #53 = Utf8               MODULE$
   #54 = Utf8               Lcoursier/graph/Conflict$;
   #55 = NameAndType        #53:#54       // MODULE$:Lcoursier/graph/Conflict$;
   #56 = Fieldref           #52.#55       // coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
   #57 = NameAndType        #30:#46       // tree:()Lcoursier/graph/ReverseModuleTree;
   #58 = Methodref          #2.#57        // coursier/graph/Conflict$Conflicted.tree:()Lcoursier/graph/ReverseModuleTree;
   #59 = Utf8               coursier/graph/ReverseModuleTree
   #60 = Class              #59           // coursier/graph/ReverseModuleTree
   #61 = Utf8               dependsOnModule
   #62 = Utf8               ()Lcoursier/core/Module;
   #63 = NameAndType        #61:#62       // dependsOnModule:()Lcoursier/core/Module;
   #64 = Methodref          #60.#63       // coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
   #65 = Utf8               dependsOnReconciledVersion
   #66 = Utf8               ()Ljava/lang/String;
   #67 = NameAndType        #65:#66       // dependsOnReconciledVersion:()Ljava/lang/String;
   #68 = Methodref          #60.#67       // coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
   #69 = Utf8               dependsOnVersion
   #70 = NameAndType        #69:#66       // dependsOnVersion:()Ljava/lang/String;
   #71 = Methodref          #60.#70       // coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
   #72 = Utf8               excludedDependsOn
   #73 = Utf8               ()Z
   #74 = NameAndType        #72:#73       // excludedDependsOn:()Z
   #75 = Methodref          #60.#74       // coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
   #76 = Utf8               module
   #77 = NameAndType        #76:#62       // module:()Lcoursier/core/Module;
   #78 = Methodref          #60.#77       // coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
   #79 = Utf8               reconciledVersion
   #80 = NameAndType        #79:#66       // reconciledVersion:()Ljava/lang/String;
   #81 = Methodref          #60.#80       // coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
   #82 = Utf8               apply
   #83 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
   #84 = NameAndType        #82:#83       // apply:(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
   #85 = Methodref          #52.#84       // coursier/graph/Conflict$.apply:(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
   #86 = Utf8               repr
   #87 = Utf8               Lcoursier/util/Print$Colors$;
   #88 = NameAndType        #53:#87       // MODULE$:Lcoursier/util/Print$Colors$;
   #89 = Fieldref           #19.#88       // coursier/util/Print$Colors$.MODULE$:Lcoursier/util/Print$Colors$;
   #90 = Utf8               coursier/core/compatibility/package$
   #91 = Class              #90           // coursier/core/compatibility/package$
   #92 = Utf8               Lcoursier/core/compatibility/package$;
   #93 = NameAndType        #53:#92       // MODULE$:Lcoursier/core/compatibility/package$;
   #94 = Fieldref           #91.#93       // coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
   #95 = Utf8               coloredOutput
   #96 = NameAndType        #95:#73       // coloredOutput:()Z
   #97 = Methodref          #91.#96       // coursier/core/compatibility/package$.coloredOutput:()Z
   #98 = Utf8               get
   #99 = Utf8               (Z)Lcoursier/util/Print$Colors;
  #100 = NameAndType        #98:#99       // get:(Z)Lcoursier/util/Print$Colors;
  #101 = Methodref          #19.#100      // coursier/util/Print$Colors$.get:(Z)Lcoursier/util/Print$Colors;
  #102 = Utf8               coursier/util/Tree$
  #103 = Class              #102          // coursier/util/Tree$
  #104 = Utf8               Lcoursier/util/Tree$;
  #105 = NameAndType        #53:#104      // MODULE$:Lcoursier/util/Tree$;
  #106 = Fieldref           #103.#105     // coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
  #107 = Utf8               scala/collection/immutable/$colon$colon
  #108 = Class              #107          // scala/collection/immutable/$colon$colon
  #109 = Utf8               scala/collection/immutable/Nil$
  #110 = Class              #109          // scala/collection/immutable/Nil$
  #111 = Utf8               Lscala/collection/immutable/Nil$;
  #112 = NameAndType        #53:#111      // MODULE$:Lscala/collection/immutable/Nil$;
  #113 = Fieldref           #110.#112     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #114 = Utf8               <init>
  #115 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #116 = NameAndType        #114:#115     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #117 = Methodref          #108.#116     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #118 = Utf8               toVector
  #119 = Utf8               ()Lscala/collection/immutable/Vector;
  #120 = NameAndType        #118:#119     // toVector:()Lscala/collection/immutable/Vector;
  #121 = Methodref          #108.#120     // scala/collection/immutable/$colon$colon.toVector:()Lscala/collection/immutable/Vector;
  #122 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #123 = MethodType         #122          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #124 = Utf8               $anonfun$repr$1
  #125 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #126 = NameAndType        #124:#125     // $anonfun$repr$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #127 = Methodref          #2.#126       // coursier/graph/Conflict$Conflicted.$anonfun$repr$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #128 = MethodHandle       6:#127        // REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #129 = MethodType         #125          //  (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  #130 = Integer            5
  #131 = Integer            1
  #132 = Utf8               java/lang/invoke/LambdaMetafactory
  #133 = Class              #132          // java/lang/invoke/LambdaMetafactory
  #134 = Utf8               altMetafactory
  #135 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #136 = NameAndType        #134:#135     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #137 = Methodref          #133.#136     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #138 = MethodHandle       6:#137        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #139 = Utf8               ()Lscala/Function1;
  #140 = NameAndType        #82:#139      // apply:()Lscala/Function1;
  #141 = InvokeDynamic      #0:#140       // #0:apply:()Lscala/Function1;
  #142 = Utf8               scala/math/Ordering$
  #143 = Class              #142          // scala/math/Ordering$
  #144 = Utf8               Lscala/math/Ordering$;
  #145 = NameAndType        #53:#144      // MODULE$:Lscala/math/Ordering$;
  #146 = Fieldref           #143.#145     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #147 = Utf8               Lscala/math/Ordering$String$;
  #148 = NameAndType        #53:#147      // MODULE$:Lscala/math/Ordering$String$;
  #149 = Fieldref           #27.#148      // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #150 = Utf8               Tuple3
  #151 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #152 = NameAndType        #150:#151     // Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #153 = Methodref          #143.#152     // scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
  #154 = Utf8               scala/collection/immutable/Vector
  #155 = Class              #154          // scala/collection/immutable/Vector
  #156 = Utf8               sortBy
  #157 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #158 = NameAndType        #156:#157     // sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #159 = Methodref          #155.#158     // scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
  #160 = Utf8               scala/collection/immutable/IndexedSeq
  #161 = Class              #160          // scala/collection/immutable/IndexedSeq
  #162 = Utf8               $anonfun$repr$2
  #163 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #164 = NameAndType        #162:#163     // $anonfun$repr$2:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #165 = Methodref          #2.#164       // coursier/graph/Conflict$Conflicted.$anonfun$repr$2:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #166 = MethodHandle       6:#165        // REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$2:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #167 = MethodType         #163          //  (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  #168 = InvokeDynamic      #1:#140       // #1:apply:()Lscala/Function1;
  #169 = Utf8               (Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
  #170 = NameAndType        #82:#169      // apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
  #171 = Methodref          #103.#170     // coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
  #172 = Utf8               $anonfun$repr$3
  #173 = Utf8               (Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #174 = NameAndType        #172:#173     // $anonfun$repr$3:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #175 = Methodref          #2.#174       // coursier/graph/Conflict$Conflicted.$anonfun$repr$3:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #176 = MethodHandle       6:#175        // REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$3:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #177 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #178 = MethodType         #177          //  (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  #179 = Utf8               (Lcoursier/util/Print$Colors;)Lscala/Function1;
  #180 = NameAndType        #82:#179      // apply:(Lcoursier/util/Print$Colors;)Lscala/Function1;
  #181 = InvokeDynamic      #2:#180       // #2:apply:(Lcoursier/util/Print$Colors;)Lscala/Function1;
  #182 = Utf8               coursier/util/Tree
  #183 = Class              #182          // coursier/util/Tree
  #184 = Utf8               render
  #185 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #186 = NameAndType        #184:#185     // render:(Lscala/Function1;)Ljava/lang/String;
  #187 = Methodref          #183.#186     // coursier/util/Tree.render:(Lscala/Function1;)Ljava/lang/String;
  #188 = Utf8               coursier/util/Print$
  #189 = Class              #188          // coursier/util/Print$
  #190 = Utf8               Lcoursier/util/Print$;
  #191 = NameAndType        #53:#190      // MODULE$:Lcoursier/util/Print$;
  #192 = Fieldref           #189.#191     // coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
  #193 = Utf8               compatibleVersions
  #194 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
  #195 = NameAndType        #193:#194     // compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
  #196 = Methodref          #189.#195     // coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
  #197 = Utf8               java/lang/StringBuilder
  #198 = Class              #197          // java/lang/StringBuilder
  #199 = Integer            0
  #200 = Utf8               (I)V
  #201 = NameAndType        #114:#200     // "<init>":(I)V
  #202 = Methodref          #198.#201     // java/lang/StringBuilder."<init>":(I)V
  #203 = Utf8               java/lang/System
  #204 = Class              #203          // java/lang/System
  #205 = Utf8               lineSeparator
  #206 = NameAndType        #205:#66      // lineSeparator:()Ljava/lang/String;
  #207 = Methodref          #204.#206     // java/lang/System.lineSeparator:()Ljava/lang/String;
  #208 = Utf8               append
  #209 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #210 = NameAndType        #208:#209     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #211 = Methodref          #198.#210     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #212 = Utf8               coursier/core/Module
  #213 = Class              #212          // coursier/core/Module
  #214 = NameAndType        #86:#66       // repr:()Ljava/lang/String;
  #215 = Methodref          #213.#214     // coursier/core/Module.repr:()Ljava/lang/String;
  #216 = Utf8               :
  #217 = String             #216          // :
  #218 = Utf8               toString
  #219 = NameAndType        #218:#66      // toString:()Ljava/lang/String;
  #220 = Methodref          #198.#219     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #221 = Utf8               yellow
  #222 = NameAndType        #221:#66      // yellow:()Ljava/lang/String;
  #223 = Methodref          #14.#222      // coursier/util/Print$Colors.yellow:()Ljava/lang/String;
  #224 = Utf8               java/lang/String
  #225 = Class              #224          // java/lang/String
  #226 = Utf8               red
  #227 = NameAndType        #226:#66      // red:()Ljava/lang/String;
  #228 = Methodref          #14.#227      // coursier/util/Print$Colors.red:()Ljava/lang/String;
  #229 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #230 = NameAndType        #208:#229     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #231 = Methodref          #198.#230     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #232 = Utf8               reset
  #233 = NameAndType        #232:#66      // reset:()Ljava/lang/String;
  #234 = Methodref          #14.#233      // coursier/util/Print$Colors.reset:()Ljava/lang/String;
  #235 = Utf8
  #236 = String             #235          //
  #237 = Integer            9
  #238 = Utf8               (
  #239 = String             #238          // (
  #240 = Utf8                wanted)
  #241 = String             #240          //  wanted)
  #242 = Utf8               colors0
  #243 = Utf8               Lcoursier/util/Print$Colors;
  #244 = Utf8               treeRepr
  #245 = Utf8               Ljava/lang/String;
  #246 = Utf8               assumeCompatibleVersions
  #247 = Utf8               Z
  #248 = Utf8               withTree
  #249 = Utf8               (Lcoursier/graph/ReverseModuleTree;)Lcoursier/graph/Conflict$Conflicted;
  #250 = Utf8               (Lcoursier/graph/ReverseModuleTree;)V
  #251 = NameAndType        #114:#250     // "<init>":(Lcoursier/graph/ReverseModuleTree;)V
  #252 = Methodref          #2.#251       // coursier/graph/Conflict$Conflicted."<init>":(Lcoursier/graph/ReverseModuleTree;)V
  #253 = Utf8               Conflicted(
  #254 = String             #253          // Conflicted(
  #255 = Utf8               (Ljava/lang/String;)V
  #256 = NameAndType        #114:#255     // "<init>":(Ljava/lang/String;)V
  #257 = Methodref          #198.#256     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #258 = Utf8               valueOf
  #259 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #260 = NameAndType        #258:#259     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #261 = Methodref          #225.#260     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #262 = Utf8               )
  #263 = String             #262          // )
  #264 = Utf8               b
  #265 = Utf8               Ljava/lang/StringBuilder;
  #266 = Utf8               canEqual
  #267 = Utf8               (Ljava/lang/Object;)Z
  #268 = Utf8               obj
  #269 = Utf8               Ljava/lang/Object;
  #270 = Utf8               equals
  #271 = NameAndType        #266:#267     // canEqual:(Ljava/lang/Object;)Z
  #272 = Methodref          #2.#271       // coursier/graph/Conflict$Conflicted.canEqual:(Ljava/lang/Object;)Z
  #273 = NameAndType        #270:#267     // equals:(Ljava/lang/Object;)Z
  #274 = Methodref          #4.#273       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #275 = Utf8               other
  #276 = Utf8               hashCode
  #277 = Utf8               ()I
  #278 = String             #12           // Conflicted
  #279 = Utf8               scala/runtime/Statics
  #280 = Class              #279          // scala/runtime/Statics
  #281 = Utf8               anyHash
  #282 = Utf8               (Ljava/lang/Object;)I
  #283 = NameAndType        #281:#282     // anyHash:(Ljava/lang/Object;)I
  #284 = Methodref          #280.#283     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #285 = Utf8               code
  #286 = Utf8               I
  #287 = Utf8               tuple
  #288 = Utf8               ()Lscala/Tuple1;
  #289 = Utf8               ()Lscala/Tuple1<Lcoursier/graph/ReverseModuleTree;>;
  #290 = Utf8               scala/Tuple1
  #291 = Class              #290          // scala/Tuple1
  #292 = Utf8               (Ljava/lang/Object;)V
  #293 = NameAndType        #114:#292     // "<init>":(Ljava/lang/Object;)V
  #294 = Methodref          #291.#293     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #295 = Utf8               productPrefix
  #296 = Utf8               productArity
  #297 = Utf8               productElement
  #298 = Utf8               (I)Ljava/lang/Object;
  #299 = Utf8               n
  #300 = Utf8               java/lang/IndexOutOfBoundsException
  #301 = Class              #300          // java/lang/IndexOutOfBoundsException
  #302 = Utf8               scala/runtime/BoxesRunTime
  #303 = Class              #302          // scala/runtime/BoxesRunTime
  #304 = Utf8               boxToInteger
  #305 = Utf8               (I)Ljava/lang/Integer;
  #306 = NameAndType        #304:#305     // boxToInteger:(I)Ljava/lang/Integer;
  #307 = Methodref          #303.#306     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #308 = Methodref          #4.#219       // java/lang/Object.toString:()Ljava/lang/String;
  #309 = Methodref          #301.#256     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #310 = Utf8               productElementName
  #311 = Utf8               (I)Ljava/lang/String;
  #312 = String             #30           // tree
  #313 = Utf8               t
  #314 = Utf8               scala/Tuple3
  #315 = Class              #314          // scala/Tuple3
  #316 = Utf8               organization
  #317 = NameAndType        #316:#66      // organization:()Ljava/lang/String;
  #318 = Methodref          #213.#317     // coursier/core/Module.organization:()Ljava/lang/String;
  #319 = Utf8               name
  #320 = NameAndType        #319:#66      // name:()Ljava/lang/String;
  #321 = Methodref          #213.#320     // coursier/core/Module.name:()Ljava/lang/String;
  #322 = Utf8               nameWithAttributes
  #323 = NameAndType        #322:#66      // nameWithAttributes:()Ljava/lang/String;
  #324 = Methodref          #213.#323     // coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
  #325 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #326 = NameAndType        #114:#325     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #327 = Methodref          #315.#326     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #328 = Utf8               x$1
  #329 = Utf8               dependees
  #330 = Utf8               ()Lscala/collection/immutable/Seq;
  #331 = NameAndType        #329:#330     // dependees:()Lscala/collection/immutable/Seq;
  #332 = Methodref          #60.#331      // coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
  #333 = Utf8               colors0$1
  #334 = Utf8               node
  #335 = Integer            15
  #336 = Utf8               (excluded by)
  #337 = String             #336          // (excluded by)
  #338 = Integer            2
  #339 = Integer            7
  #340 = Utf8               wants
  #341 = String             #340          // wants
  #342 = Utf8               ()V
  #343 = NameAndType        #114:#342     // "<init>":()V
  #344 = Methodref          #4.#343       // java/lang/Object."<init>":()V
  #345 = Utf8               $init$
  #346 = Utf8               (Lscala/Product;)V
  #347 = NameAndType        #345:#346     // $init$:(Lscala/Product;)V
  #348 = InterfaceMethodref #6.#347       // scala/Product.$init$:(Lscala/Product;)V
  #349 = Utf8               $deserializeLambda$
  #350 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #351 = Utf8               scala/runtime/LambdaDeserialize
  #352 = Class              #351          // scala/runtime/LambdaDeserialize
  #353 = Utf8               bootstrap
  #354 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #355 = NameAndType        #353:#354     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #356 = Methodref          #352.#355     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #357 = MethodHandle       6:#356        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #358 = Utf8               lambdaDeserialize
  #359 = NameAndType        #358:#350     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #360 = InvokeDynamic      #3:#359       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #361 = Utf8               Code
  #362 = Utf8               LineNumberTable
  #363 = Utf8               LocalVariableTable
  #364 = Utf8               Signature
  #365 = Utf8               StackMapTable
  #366 = Utf8               MethodParameters
  #367 = Utf8               InnerClasses
  #368 = Utf8               SourceFile
  #369 = Utf8               BootstrapMethods
  #370 = Utf8               ScalaInlineInfo
  #371 = Utf8               Scala
{
  private final coursier.graph.ReverseModuleTree tree;
    descriptor: Lcoursier/graph/ReverseModuleTree;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #38                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict$Conflicted;
    Signature: #34                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #45                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict$Conflicted;
    Signature: #42                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.graph.ReverseModuleTree tree();
    descriptor: ()Lcoursier/graph/ReverseModuleTree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field tree:Lcoursier/graph/ReverseModuleTree;
         4: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/graph/Conflict$Conflicted;

  public coursier.graph.Conflict conflict();
    descriptor: ()Lcoursier/graph/Conflict;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=1, args_size=1
         0: getstatic     #56                 // Field coursier/graph/Conflict$.MODULE$:Lcoursier/graph/Conflict$;
         3: aload_0
         4: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
         7: invokevirtual #64                 // Method coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
        10: aload_0
        11: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        14: invokevirtual #68                 // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
        17: aload_0
        18: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        21: invokevirtual #71                 // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
        24: aload_0
        25: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        28: invokevirtual #75                 // Method coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
        31: aload_0
        32: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        35: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        38: aload_0
        39: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        42: invokevirtual #81                 // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
        45: invokevirtual #85                 // Method coursier/graph/Conflict$.apply:(Lcoursier/core/Module;Ljava/lang/String;Ljava/lang/String;ZLcoursier/core/Module;Ljava/lang/String;)Lcoursier/graph/Conflict;
        48: areturn
      LineNumberTable:
        line 26: 0
        line 27: 3
        line 28: 10
        line 29: 17
        line 30: 24
        line 31: 31
        line 32: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lcoursier/graph/Conflict$Conflicted;

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=4, args_size=1
         0: getstatic     #89                 // Field coursier/util/Print$Colors$.MODULE$:Lcoursier/util/Print$Colors$;
         3: getstatic     #94                 // Field coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
         6: invokevirtual #97                 // Method coursier/core/compatibility/package$.coloredOutput:()Z
         9: invokevirtual #101                // Method coursier/util/Print$Colors$.get:(Z)Lcoursier/util/Print$Colors;
        12: astore_1
        13: getstatic     #106                // Field coursier/util/Tree$.MODULE$:Lcoursier/util/Tree$;
        16: new           #108                // class scala/collection/immutable/$colon$colon
        19: dup
        20: aload_0
        21: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        24: getstatic     #113                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        27: invokespecial #117                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
        30: invokevirtual #121                // Method scala/collection/immutable/$colon$colon.toVector:()Lscala/collection/immutable/Vector;
        33: invokedynamic #141,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        38: getstatic     #146                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        41: getstatic     #149                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        44: getstatic     #149                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        47: getstatic     #149                // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        50: invokevirtual #153                // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        53: invokevirtual #159                // Method scala/collection/immutable/Vector.sortBy:(Lscala/Function1;Lscala/math/Ordering;)Ljava/lang/Object;
        56: checkcast     #161                // class scala/collection/immutable/IndexedSeq
        59: invokedynamic #168,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        64: invokevirtual #171                // Method coursier/util/Tree$.apply:(Lscala/collection/immutable/IndexedSeq;Lscala/Function1;)Lcoursier/util/Tree;
        67: aload_1
        68: invokedynamic #181,  0            // InvokeDynamic #2:apply:(Lcoursier/util/Print$Colors;)Lscala/Function1;
        73: invokevirtual #187                // Method coursier/util/Tree.render:(Lscala/Function1;)Ljava/lang/String;
        76: astore_2
        77: getstatic     #192                // Field coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
        80: aload_0
        81: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        84: invokevirtual #71                 // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
        87: aload_0
        88: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        91: invokevirtual #68                 // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
        94: invokevirtual #196                // Method coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
        97: istore_3
        98: new           #198                // class java/lang/StringBuilder
       101: dup
       102: ldc           #199                // int 0
       104: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       107: invokestatic  #207                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       110: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       113: new           #198                // class java/lang/StringBuilder
       116: dup
       117: ldc           #131                // int 1
       119: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       122: aload_0
       123: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
       126: invokevirtual #64                 // Method coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
       129: invokevirtual #215                // Method coursier/core/Module.repr:()Ljava/lang/String;
       132: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       135: ldc           #217                // String :
       137: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       140: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       143: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       146: new           #198                // class java/lang/StringBuilder
       149: dup
       150: ldc           #131                // int 1
       152: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       155: iload_3
       156: ifeq          166
       159: aload_1
       160: invokevirtual #223                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
       163: goto          170
       166: aload_1
       167: invokevirtual #228                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       170: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       173: aload_0
       174: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
       177: invokevirtual #68                 // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       180: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       183: aload_1
       184: invokevirtual #234                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       187: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: ldc           #236                // String
       192: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       195: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       198: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       201: new           #198                // class java/lang/StringBuilder
       204: dup
       205: ldc           #237                // int 9
       207: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       210: ldc           #239                // String (
       212: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       215: aload_0
       216: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
       219: invokevirtual #71                 // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       222: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       225: ldc           #241                // String  wanted)
       227: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       230: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       233: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       236: invokestatic  #207                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
       239: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       242: aload_2
       243: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       246: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       249: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 166
          locals = [ class coursier/graph/Conflict$Conflicted, class coursier/util/Print$Colors, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/graph/Conflict$Conflicted, class coursier/util/Print$Colors, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 37: 0
        line 39: 13
        line 40: 67
        line 54: 77
        line 58: 98
        line 56: 107
        line 57: 146
        line 58: 201
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13     236     1 colors0   Lcoursier/util/Print$Colors;
           77     172     2 treeRepr   Ljava/lang/String;
           98     151     3 assumeCompatibleVersions   Z
            0     250     0  this   Lcoursier/graph/Conflict$Conflicted;

  public coursier.graph.Conflict$Conflicted withTree(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Lcoursier/graph/Conflict$Conflicted;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/graph/Conflict$Conflicted
         3: dup
         4: aload_1
         5: invokespecial #252                // Method "<init>":(Lcoursier/graph/ReverseModuleTree;)V
         8: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/graph/Conflict$Conflicted;
            0       9     1  tree   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      tree                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #198                // class java/lang/StringBuilder
         3: dup
         4: ldc           #254                // String Conflicted(
         6: invokespecial #257                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        15: invokestatic  #261                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc_w         #263                // String )
        26: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: pop
        30: aload_1
        31: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        34: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      24     1     b   Ljava/lang/StringBuilder;
            0      35     0  this   Lcoursier/graph/Conflict$Conflicted;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/graph/Conflict$Conflicted
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/graph/Conflict$Conflicted;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #272                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/graph/Conflict$Conflicted
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        26: aload_2
        27: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #274                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/graph/Conflict$Conflicted, class java/lang/Object, class coursier/graph/Conflict$Conflicted, class coursier/graph/ReverseModuleTree ]
          stack = [ class coursier/graph/ReverseModuleTree ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/graph/Conflict$Conflicted;
            0      64     0  this   Lcoursier/graph/Conflict$Conflicted;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #278                // String Conflicted
         5: invokestatic  #284                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        18: invokestatic  #284                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      17     1  code   I
            0      28     0  this   Lcoursier/graph/Conflict$Conflicted;

  private scala.Tuple1<coursier.graph.ReverseModuleTree> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #291                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
         8: invokespecial #294                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/graph/Conflict$Conflicted;
    Signature: #289                         // ()Lscala/Tuple1<Lcoursier/graph/ReverseModuleTree;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #278                // String Conflicted
         3: areturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/graph/Conflict$Conflicted;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/graph/Conflict$Conflicted;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #58                 // Method tree:()Lcoursier/graph/ReverseModuleTree;
        24: goto          42
        27: new           #301                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #307                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #308                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #309                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class coursier/graph/ReverseModuleTree ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/graph/Conflict$Conflicted;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 26
            }
        20: ldc_w         #312                // String tree
        23: goto          41
        26: new           #301                // class java/lang/IndexOutOfBoundsException
        29: dup
        30: iload_2
        31: invokestatic  #307                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        34: invokevirtual #308                // Method java/lang/Object.toString:()Ljava/lang/String;
        37: invokespecial #309                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        40: athrow
        41: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0  this   Lcoursier/graph/Conflict$Conflicted;
            0      42     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.Tuple3 $anonfun$repr$1(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #315                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
         8: invokevirtual #318                // Method coursier/core/Module.organization:()Ljava/lang/String;
        11: aload_0
        12: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        15: invokevirtual #321                // Method coursier/core/Module.name:()Ljava/lang/String;
        18: aload_0
        19: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        22: invokevirtual #324                // Method coursier/core/Module.nameWithAttributes:()Ljava/lang/String;
        25: invokespecial #327                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        28: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0     t   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      t                              final

  public static final scala.collection.immutable.Seq $anonfun$repr$2(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #332                // Method coursier/graph/ReverseModuleTree.dependees:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 39: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.String $anonfun$repr$3(coursier.util.Print$Colors, coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_1
         1: invokevirtual #75                 // Method coursier/graph/ReverseModuleTree.excludedDependsOn:()Z
         4: ifeq          67
         7: new           #198                // class java/lang/StringBuilder
        10: dup
        11: ldc_w         #335                // int 15
        14: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
        17: aload_0
        18: invokevirtual #223                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
        21: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc_w         #337                // String (excluded by)
        27: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: aload_0
        31: invokevirtual #234                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
        34: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: ldc           #236                // String
        39: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: aload_1
        43: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
        46: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        49: ldc           #217                // String :
        51: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: aload_1
        55: invokevirtual #81                 // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
        58: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        61: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        64: goto          262
        67: aload_1
        68: invokevirtual #71                 // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
        71: aload_1
        72: invokevirtual #68                 // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
        75: astore_2
        76: dup
        77: ifnonnull     88
        80: pop
        81: aload_2
        82: ifnull        231
        85: goto          95
        88: aload_2
        89: invokevirtual #274                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        92: ifne          231
        95: getstatic     #192                // Field coursier/util/Print$.MODULE$:Lcoursier/util/Print$;
        98: aload_1
        99: invokevirtual #71                 // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       102: aload_1
       103: invokevirtual #68                 // Method coursier/graph/ReverseModuleTree.dependsOnReconciledVersion:()Ljava/lang/String;
       106: invokevirtual #196                // Method coursier/util/Print$.compatibleVersions:(Ljava/lang/String;Ljava/lang/String;)Z
       109: istore_3
       110: new           #198                // class java/lang/StringBuilder
       113: dup
       114: ldc           #199                // int 0
       116: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       119: new           #198                // class java/lang/StringBuilder
       122: dup
       123: ldc_w         #338                // int 2
       126: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       129: aload_1
       130: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       133: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       136: ldc           #217                // String :
       138: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       141: aload_1
       142: invokevirtual #81                 // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       145: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       148: ldc           #236                // String
       150: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       153: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       156: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       159: iload_3
       160: ifeq          170
       163: aload_0
       164: invokevirtual #223                // Method coursier/util/Print$Colors.yellow:()Ljava/lang/String;
       167: goto          174
       170: aload_0
       171: invokevirtual #228                // Method coursier/util/Print$Colors.red:()Ljava/lang/String;
       174: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       177: new           #198                // class java/lang/StringBuilder
       180: dup
       181: ldc_w         #339                // int 7
       184: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       187: ldc_w         #341                // String wants
       190: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       193: aload_1
       194: invokevirtual #64                 // Method coursier/graph/ReverseModuleTree.dependsOnModule:()Lcoursier/core/Module;
       197: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       200: ldc           #217                // String :
       202: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       205: aload_1
       206: invokevirtual #71                 // Method coursier/graph/ReverseModuleTree.dependsOnVersion:()Ljava/lang/String;
       209: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       212: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       215: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       218: aload_0
       219: invokevirtual #234                // Method coursier/util/Print$Colors.reset:()Ljava/lang/String;
       222: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       225: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       228: goto          262
       231: new           #198                // class java/lang/StringBuilder
       234: dup
       235: ldc           #131                // int 1
       237: invokespecial #202                // Method java/lang/StringBuilder."<init>":(I)V
       240: aload_1
       241: invokevirtual #78                 // Method coursier/graph/ReverseModuleTree.module:()Lcoursier/core/Module;
       244: invokevirtual #231                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       247: ldc           #217                // String :
       249: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       252: aload_1
       253: invokevirtual #81                 // Method coursier/graph/ReverseModuleTree.reconciledVersion:()Ljava/lang/String;
       256: invokevirtual #211                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       259: invokevirtual #220                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       262: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree, class java/lang/String, int ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 56
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class coursier/util/Print$Colors, class coursier/graph/ReverseModuleTree ]
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 41: 0
        line 42: 7
        line 43: 67
        line 44: 95
        line 48: 110
        line 46: 119
        line 47: 159
        line 48: 177
        line 49: 218
        line 51: 231
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          110     118     3 assumeCompatibleVersions   Z
            0     263     0 colors0$1   Lcoursier/util/Print$Colors;
            0     263     1  node   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      colors0$1                      final
      node                           final

  public coursier.graph.Conflict$Conflicted(coursier.graph.ReverseModuleTree);
    descriptor: (Lcoursier/graph/ReverseModuleTree;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #48                 // Field tree:Lcoursier/graph/ReverseModuleTree;
         5: aload_0
         6: invokespecial #344                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #348                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        13: return
      LineNumberTable:
        line 24: 0
        line 62: 5
        line 24: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcoursier/graph/Conflict$Conflicted;
            0      14     1  tree   Lcoursier/graph/ReverseModuleTree;
    MethodParameters:
      Name                           Flags
      tree                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #360,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #2 of #11;     // Conflicted=class coursier/graph/Conflict$Conflicted of class coursier/graph/Conflict
  public static final #17= #14 of #16;    // Colors=class coursier/util/Print$Colors of class coursier/util/Print
  public static #20= #19 of #16;          // =class coursier/util/Print$Colors$ of class coursier/util/Print
  public static final #25= #22 of #24;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #27 of #29;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "Conflict.scala"
BootstrapMethods:
  0: #138 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #123 (Ljava/lang/Object;)Ljava/lang/Object;
      #128 REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
      #129 (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
      #130 5
      #131 1
      #129 (Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
  1: #138 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #123 (Ljava/lang/Object;)Ljava/lang/Object;
      #166 REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$2:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #167 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #130 5
      #131 1
      #167 (Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
  2: #138 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #123 (Ljava/lang/Object;)Ljava/lang/Object;
      #176 REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$3:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #178 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
      #130 5
      #131 1
      #178 (Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  3: #357 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #128 REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$1:(Lcoursier/graph/ReverseModuleTree;)Lscala/Tuple3;
      #166 REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$2:(Lcoursier/graph/ReverseModuleTree;)Lscala/collection/immutable/Seq;
      #176 REF_invokeStatic coursier/graph/Conflict$Conflicted.$anonfun$repr$3:(Lcoursier/util/Print$Colors;Lcoursier/graph/ReverseModuleTree;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x63 (unknown attribute)
   01 01 00 13 00 7D 00 7E 01 00 A3 00 A4 01 00 AD
   00 AE 01 00 73 00 FB 01 01 0B 01 0C 01 00 32 00
   33 01 01 0F 01 0C 01 01 15 01 16 01 01 29 01 16
   01 01 2A 01 2B 01 01 37 01 38 01 00 2A 00 22 01
   00 21 00 22 01 01 28 00 43 01 00 57 00 43 01 00
   DB 00 43 01 00 1F 00 2F 01 01 20 01 21 01 00 F9
   00 FA 01
  Scala: length = 0x0 (unknown attribute)

