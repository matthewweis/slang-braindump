Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/CharSequenceInputStream.class
  Last modified May 29, 2022; size 5392 bytes
  SHA-256 checksum c97e0db43434e51279f949fb0277a17bc5fe9934e469322e41a4987935677049
  Compiled from "CharSequenceInputStream.java"
public class org.apache.commons.io.input.CharSequenceInputStream extends java.io.InputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #24                         // org/apache/commons/io/input/CharSequenceInputStream
  super_class: #65                        // java/io/InputStream
  interfaces: 0, fields: 7, methods: 14, attributes: 1
Constant pool:
    #1 = Class              #136          // org/apache/commons/io/IOUtils
    #2 = Methodref          #65.#137      // java/io/InputStream."<init>":()V
    #3 = Methodref          #138.#139     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
    #4 = Fieldref           #140.#141     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
    #5 = Methodref          #142.#143     // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
    #6 = Methodref          #142.#144     // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
    #7 = Fieldref           #24.#145      // org/apache/commons/io/input/CharSequenceInputStream.encoder:Ljava/nio/charset/CharsetEncoder;
    #8 = Methodref          #142.#146     // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
    #9 = Class              #147          // java/lang/IllegalArgumentException
   #10 = Class              #148          // java/lang/StringBuilder
   #11 = Methodref          #10.#137      // java/lang/StringBuilder."<init>":()V
   #12 = String             #149          // Buffer size
   #13 = Methodref          #10.#150      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #14 = Methodref          #10.#151      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #15 = String             #152          //  is less than maxBytesPerChar
   #16 = Methodref          #10.#153      // java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
   #17 = Methodref          #10.#154      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #18 = Methodref          #9.#155       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #19 = Methodref          #156.#157     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
   #20 = Fieldref           #24.#158      // org/apache/commons/io/input/CharSequenceInputStream.bbuf:Ljava/nio/ByteBuffer;
   #21 = Methodref          #156.#159     // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
   #22 = Methodref          #160.#161     // java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
   #23 = Fieldref           #24.#162      // org/apache/commons/io/input/CharSequenceInputStream.cbuf:Ljava/nio/CharBuffer;
   #24 = Class              #163          // org/apache/commons/io/input/CharSequenceInputStream
   #25 = Fieldref           #24.#164      // org/apache/commons/io/input/CharSequenceInputStream.mark_cbuf:I
   #26 = Fieldref           #24.#165      // org/apache/commons/io/input/CharSequenceInputStream.mark_bbuf:I
   #27 = Methodref          #138.#166     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #28 = Methodref          #24.#167      // org/apache/commons/io/input/CharSequenceInputStream."<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
   #29 = Methodref          #24.#168      // org/apache/commons/io/input/CharSequenceInputStream."<init>":(Ljava/lang/CharSequence;Ljava/lang/String;I)V
   #30 = Methodref          #156.#169     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
   #31 = Methodref          #142.#170     // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
   #32 = Methodref          #171.#172     // java/nio/charset/CoderResult.isError:()Z
   #33 = Methodref          #171.#173     // java/nio/charset/CoderResult.throwException:()V
   #34 = String             #112          // array
   #35 = Methodref          #174.#175     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #36 = Class              #176          // java/lang/IndexOutOfBoundsException
   #37 = String             #177          // Array Size=
   #38 = String             #178          // , offset=
   #39 = String             #179          // , length=
   #40 = Methodref          #36.#155      // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #41 = Methodref          #156.#180     // java/nio/ByteBuffer.hasRemaining:()Z
   #42 = Methodref          #160.#180     // java/nio/CharBuffer.hasRemaining:()Z
   #43 = Methodref          #156.#181     // java/nio/ByteBuffer.remaining:()I
   #44 = Methodref          #182.#183     // java/lang/Math.min:(II)I
   #45 = Methodref          #156.#184     // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
   #46 = Methodref          #24.#185      // org/apache/commons/io/input/CharSequenceInputStream.fillBuffer:()V
   #47 = Methodref          #156.#186     // java/nio/ByteBuffer.get:()B
   #48 = Methodref          #24.#187      // org/apache/commons/io/input/CharSequenceInputStream.read:([BII)I
   #49 = Methodref          #24.#188      // org/apache/commons/io/input/CharSequenceInputStream.available:()I
   #50 = Methodref          #24.#189      // org/apache/commons/io/input/CharSequenceInputStream.read:()I
   #51 = Methodref          #160.#181     // java/nio/CharBuffer.remaining:()I
   #52 = Methodref          #160.#190     // java/nio/CharBuffer.position:()I
   #53 = Methodref          #156.#190     // java/nio/ByteBuffer.position:()I
   #54 = Methodref          #160.#191     // java/nio/CharBuffer.mark:()Ljava/nio/Buffer;
   #55 = Methodref          #156.#191     // java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
   #56 = Methodref          #142.#192     // java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
   #57 = Methodref          #160.#193     // java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
   #58 = Methodref          #156.#193     // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
   #59 = Methodref          #156.#194     // java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
   #60 = Class              #195          // java/lang/IllegalStateException
   #61 = String             #196          // Unexpected CharBuffer position: actual=
   #62 = String             #197          //  expected=
   #63 = Methodref          #60.#155      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #64 = Methodref          #156.#198     // java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
   #65 = Class              #199          // java/io/InputStream
   #66 = Utf8               BUFFER_SIZE
   #67 = Utf8               I
   #68 = Utf8               ConstantValue
   #69 = Integer            2048
   #70 = Utf8               NO_MARK
   #71 = Integer            -1
   #72 = Utf8               encoder
   #73 = Utf8               Ljava/nio/charset/CharsetEncoder;
   #74 = Utf8               cbuf
   #75 = Utf8               Ljava/nio/CharBuffer;
   #76 = Utf8               bbuf
   #77 = Utf8               Ljava/nio/ByteBuffer;
   #78 = Utf8               mark_cbuf
   #79 = Utf8               mark_bbuf
   #80 = Utf8               <init>
   #81 = Utf8               (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
   #82 = Utf8               Code
   #83 = Utf8               LineNumberTable
   #84 = Utf8               LocalVariableTable
   #85 = Utf8               this
   #86 = Utf8               Lorg/apache/commons/io/input/CharSequenceInputStream;
   #87 = Utf8               cs
   #88 = Utf8               Ljava/lang/CharSequence;
   #89 = Utf8               charset
   #90 = Utf8               Ljava/nio/charset/Charset;
   #91 = Utf8               bufferSize
   #92 = Utf8               maxBytesPerChar
   #93 = Utf8               F
   #94 = Utf8               StackMapTable
   #95 = Class              #163          // org/apache/commons/io/input/CharSequenceInputStream
   #96 = Class              #200          // java/lang/CharSequence
   #97 = Class              #201          // java/nio/charset/Charset
   #98 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;I)V
   #99 = Utf8               Ljava/lang/String;
  #100 = Utf8               (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V
  #101 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/String;)V
  #102 = Utf8               fillBuffer
  #103 = Utf8               ()V
  #104 = Utf8               result
  #105 = Utf8               Ljava/nio/charset/CoderResult;
  #106 = Class              #202          // java/nio/charset/CoderResult
  #107 = Utf8               Exceptions
  #108 = Class              #203          // java/nio/charset/CharacterCodingException
  #109 = Utf8               read
  #110 = Utf8               ([BII)I
  #111 = Utf8               chunk
  #112 = Utf8               array
  #113 = Utf8               [B
  #114 = Utf8               off
  #115 = Utf8               len
  #116 = Utf8               bytesRead
  #117 = Class              #204          // java/io/IOException
  #118 = Utf8               ()I
  #119 = Utf8               ([B)I
  #120 = Utf8               b
  #121 = Utf8               skip
  #122 = Utf8               (J)J
  #123 = Utf8               n
  #124 = Utf8               J
  #125 = Utf8               skipped
  #126 = Utf8               available
  #127 = Utf8               close
  #128 = Utf8               mark
  #129 = Utf8               (I)V
  #130 = Utf8               readlimit
  #131 = Utf8               reset
  #132 = Utf8               markSupported
  #133 = Utf8               ()Z
  #134 = Utf8               SourceFile
  #135 = Utf8               CharSequenceInputStream.java
  #136 = Utf8               org/apache/commons/io/IOUtils
  #137 = NameAndType        #80:#103      // "<init>":()V
  #138 = Class              #201          // java/nio/charset/Charset
  #139 = NameAndType        #205:#206     // newEncoder:()Ljava/nio/charset/CharsetEncoder;
  #140 = Class              #207          // java/nio/charset/CodingErrorAction
  #141 = NameAndType        #208:#209     // REPLACE:Ljava/nio/charset/CodingErrorAction;
  #142 = Class              #210          // java/nio/charset/CharsetEncoder
  #143 = NameAndType        #211:#212     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #144 = NameAndType        #213:#212     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #145 = NameAndType        #72:#73       // encoder:Ljava/nio/charset/CharsetEncoder;
  #146 = NameAndType        #92:#214      // maxBytesPerChar:()F
  #147 = Utf8               java/lang/IllegalArgumentException
  #148 = Utf8               java/lang/StringBuilder
  #149 = Utf8               Buffer size
  #150 = NameAndType        #215:#216     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #151 = NameAndType        #215:#217     // append:(I)Ljava/lang/StringBuilder;
  #152 = Utf8                is less than maxBytesPerChar
  #153 = NameAndType        #215:#218     // append:(F)Ljava/lang/StringBuilder;
  #154 = NameAndType        #219:#220     // toString:()Ljava/lang/String;
  #155 = NameAndType        #80:#221      // "<init>":(Ljava/lang/String;)V
  #156 = Class              #222          // java/nio/ByteBuffer
  #157 = NameAndType        #223:#224     // allocate:(I)Ljava/nio/ByteBuffer;
  #158 = NameAndType        #76:#77       // bbuf:Ljava/nio/ByteBuffer;
  #159 = NameAndType        #225:#226     // flip:()Ljava/nio/Buffer;
  #160 = Class              #227          // java/nio/CharBuffer
  #161 = NameAndType        #228:#229     // wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #162 = NameAndType        #74:#75       // cbuf:Ljava/nio/CharBuffer;
  #163 = Utf8               org/apache/commons/io/input/CharSequenceInputStream
  #164 = NameAndType        #78:#67       // mark_cbuf:I
  #165 = NameAndType        #79:#67       // mark_bbuf:I
  #166 = NameAndType        #230:#231     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
  #167 = NameAndType        #80:#81       // "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
  #168 = NameAndType        #80:#98       // "<init>":(Ljava/lang/CharSequence;Ljava/lang/String;I)V
  #169 = NameAndType        #232:#233     // compact:()Ljava/nio/ByteBuffer;
  #170 = NameAndType        #234:#235     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #171 = Class              #202          // java/nio/charset/CoderResult
  #172 = NameAndType        #236:#133     // isError:()Z
  #173 = NameAndType        #237:#103     // throwException:()V
  #174 = Class              #238          // java/util/Objects
  #175 = NameAndType        #239:#240     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #176 = Utf8               java/lang/IndexOutOfBoundsException
  #177 = Utf8               Array Size=
  #178 = Utf8               , offset=
  #179 = Utf8               , length=
  #180 = NameAndType        #241:#133     // hasRemaining:()Z
  #181 = NameAndType        #242:#118     // remaining:()I
  #182 = Class              #243          // java/lang/Math
  #183 = NameAndType        #244:#245     // min:(II)I
  #184 = NameAndType        #246:#247     // get:([BII)Ljava/nio/ByteBuffer;
  #185 = NameAndType        #102:#103     // fillBuffer:()V
  #186 = NameAndType        #246:#248     // get:()B
  #187 = NameAndType        #109:#110     // read:([BII)I
  #188 = NameAndType        #126:#118     // available:()I
  #189 = NameAndType        #109:#118     // read:()I
  #190 = NameAndType        #249:#118     // position:()I
  #191 = NameAndType        #128:#226     // mark:()Ljava/nio/Buffer;
  #192 = NameAndType        #131:#206     // reset:()Ljava/nio/charset/CharsetEncoder;
  #193 = NameAndType        #250:#226     // rewind:()Ljava/nio/Buffer;
  #194 = NameAndType        #251:#252     // limit:(I)Ljava/nio/Buffer;
  #195 = Utf8               java/lang/IllegalStateException
  #196 = Utf8               Unexpected CharBuffer position: actual=
  #197 = Utf8                expected=
  #198 = NameAndType        #249:#252     // position:(I)Ljava/nio/Buffer;
  #199 = Utf8               java/io/InputStream
  #200 = Utf8               java/lang/CharSequence
  #201 = Utf8               java/nio/charset/Charset
  #202 = Utf8               java/nio/charset/CoderResult
  #203 = Utf8               java/nio/charset/CharacterCodingException
  #204 = Utf8               java/io/IOException
  #205 = Utf8               newEncoder
  #206 = Utf8               ()Ljava/nio/charset/CharsetEncoder;
  #207 = Utf8               java/nio/charset/CodingErrorAction
  #208 = Utf8               REPLACE
  #209 = Utf8               Ljava/nio/charset/CodingErrorAction;
  #210 = Utf8               java/nio/charset/CharsetEncoder
  #211 = Utf8               onMalformedInput
  #212 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #213 = Utf8               onUnmappableCharacter
  #214 = Utf8               ()F
  #215 = Utf8               append
  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #217 = Utf8               (I)Ljava/lang/StringBuilder;
  #218 = Utf8               (F)Ljava/lang/StringBuilder;
  #219 = Utf8               toString
  #220 = Utf8               ()Ljava/lang/String;
  #221 = Utf8               (Ljava/lang/String;)V
  #222 = Utf8               java/nio/ByteBuffer
  #223 = Utf8               allocate
  #224 = Utf8               (I)Ljava/nio/ByteBuffer;
  #225 = Utf8               flip
  #226 = Utf8               ()Ljava/nio/Buffer;
  #227 = Utf8               java/nio/CharBuffer
  #228 = Utf8               wrap
  #229 = Utf8               (Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
  #230 = Utf8               forName
  #231 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
  #232 = Utf8               compact
  #233 = Utf8               ()Ljava/nio/ByteBuffer;
  #234 = Utf8               encode
  #235 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #236 = Utf8               isError
  #237 = Utf8               throwException
  #238 = Utf8               java/util/Objects
  #239 = Utf8               requireNonNull
  #240 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #241 = Utf8               hasRemaining
  #242 = Utf8               remaining
  #243 = Utf8               java/lang/Math
  #244 = Utf8               min
  #245 = Utf8               (II)I
  #246 = Utf8               get
  #247 = Utf8               ([BII)Ljava/nio/ByteBuffer;
  #248 = Utf8               ()B
  #249 = Utf8               position
  #250 = Utf8               rewind
  #251 = Utf8               limit
  #252 = Utf8               (I)Ljava/nio/Buffer;
{
  private static final int BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 2048

  private static final int NO_MARK;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int -1

  private final java.nio.charset.CharsetEncoder encoder;
    descriptor: Ljava/nio/charset/CharsetEncoder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.CharBuffer cbuf;
    descriptor: Ljava/nio/CharBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.ByteBuffer bbuf;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private int mark_cbuf;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  private int mark_bbuf;
    descriptor: I
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset, int);
    descriptor: (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_0
         1: invokespecial #2                  // Method java/io/InputStream."<init>":()V
         4: aload_0
         5: aload_2
         6: invokevirtual #3                  // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
         9: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
        12: invokevirtual #5                  // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        15: getstatic     #4                  // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
        18: invokevirtual #6                  // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        21: putfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
        24: aload_0
        25: getfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
        28: invokevirtual #8                  // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
        31: fstore        4
        33: iload_3
        34: i2f
        35: fload         4
        37: fcmpg
        38: ifge          78
        41: new           #9                  // class java/lang/IllegalArgumentException
        44: dup
        45: new           #10                 // class java/lang/StringBuilder
        48: dup
        49: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        52: ldc           #12                 // String Buffer size
        54: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        57: iload_3
        58: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        61: ldc           #15                 // String  is less than maxBytesPerChar
        63: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        66: fload         4
        68: invokevirtual #16                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
        71: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        74: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        77: athrow
        78: aload_0
        79: iload_3
        80: invokestatic  #19                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        83: putfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        86: aload_0
        87: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        90: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
        93: pop
        94: aload_0
        95: aload_1
        96: invokestatic  #22                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
        99: putfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
       102: aload_0
       103: iconst_m1
       104: putfield      #25                 // Field mark_cbuf:I
       107: aload_0
       108: iconst_m1
       109: putfield      #26                 // Field mark_bbuf:I
       112: return
      LineNumberTable:
        line 63: 0
        line 64: 4
        line 65: 12
        line 66: 18
        line 68: 24
        line 69: 33
        line 70: 41
        line 73: 78
        line 74: 86
        line 75: 94
        line 76: 102
        line 77: 107
        line 78: 112
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     113     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0     113     1    cs   Ljava/lang/CharSequence;
            0     113     2 charset   Ljava/nio/charset/Charset;
            0     113     3 bufferSize   I
           33      80     4 maxBytesPerChar   F
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 78
          locals = [ class org/apache/commons/io/input/CharSequenceInputStream, class java/lang/CharSequence, class java/nio/charset/Charset, int, float ]
          stack = []

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.lang.String, int);
    descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #27                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
         6: iload_3
         7: invokespecial #28                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
        10: return
      LineNumberTable:
        line 89: 0
        line 90: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0      11     1    cs   Ljava/lang/CharSequence;
            0      11     2 charset   Ljava/lang/String;
            0      11     3 bufferSize   I

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.nio.charset.Charset);
    descriptor: (Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        2048
         6: invokespecial #28                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;I)V
         9: return
      LineNumberTable:
        line 101: 0
        line 102: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0      10     1    cs   Ljava/lang/CharSequence;
            0      10     2 charset   Ljava/nio/charset/Charset;

  public org.apache.commons.io.input.CharSequenceInputStream(java.lang.CharSequence, java.lang.String);
    descriptor: (Ljava/lang/CharSequence;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        2048
         6: invokespecial #29                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/String;I)V
         9: return
      LineNumberTable:
        line 113: 0
        line 114: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0      10     1    cs   Ljava/lang/CharSequence;
            0      10     2 charset   Ljava/lang/String;

  private void fillBuffer() throws java.nio.charset.CharacterCodingException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
         4: invokevirtual #30                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
         7: pop
         8: aload_0
         9: getfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
        12: aload_0
        13: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        16: aload_0
        17: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        20: iconst_1
        21: invokevirtual #31                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
        24: astore_1
        25: aload_1
        26: invokevirtual #32                 // Method java/nio/charset/CoderResult.isError:()Z
        29: ifeq          36
        32: aload_1
        33: invokevirtual #33                 // Method java/nio/charset/CoderResult.throwException:()V
        36: aload_0
        37: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        40: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
        43: pop
        44: return
      LineNumberTable:
        line 123: 0
        line 124: 8
        line 125: 25
        line 126: 32
        line 128: 36
        line 129: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
           25      20     1 result   Ljava/nio/charset/CoderResult;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ class java/nio/charset/CoderResult ]
    Exceptions:
      throws java.nio.charset.CharacterCodingException

  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_1
         1: ldc           #34                 // String array
         3: invokestatic  #35                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: iload_3
         8: iflt          19
        11: iload_2
        12: iload_3
        13: iadd
        14: aload_1
        15: arraylength
        16: if_icmple     65
        19: new           #36                 // class java/lang/IndexOutOfBoundsException
        22: dup
        23: new           #10                 // class java/lang/StringBuilder
        26: dup
        27: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        30: ldc           #37                 // String Array Size=
        32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        35: aload_1
        36: arraylength
        37: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        40: ldc           #38                 // String , offset=
        42: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: iload_2
        46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        49: ldc           #39                 // String , length=
        51: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        54: iload_3
        55: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        58: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        61: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        64: athrow
        65: iload_3
        66: ifne          71
        69: iconst_0
        70: ireturn
        71: aload_0
        72: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        75: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
        78: ifne          93
        81: aload_0
        82: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        85: invokevirtual #42                 // Method java/nio/CharBuffer.hasRemaining:()Z
        88: ifne          93
        91: iconst_m1
        92: ireturn
        93: iconst_0
        94: istore        4
        96: iload_3
        97: ifle          182
       100: aload_0
       101: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       104: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       107: ifeq          155
       110: aload_0
       111: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       114: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
       117: iload_3
       118: invokestatic  #44                 // Method java/lang/Math.min:(II)I
       121: istore        5
       123: aload_0
       124: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       127: aload_1
       128: iload_2
       129: iload         5
       131: invokevirtual #45                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
       134: pop
       135: iload_2
       136: iload         5
       138: iadd
       139: istore_2
       140: iload_3
       141: iload         5
       143: isub
       144: istore_3
       145: iload         4
       147: iload         5
       149: iadd
       150: istore        4
       152: goto          96
       155: aload_0
       156: invokespecial #46                 // Method fillBuffer:()V
       159: aload_0
       160: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       163: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       166: ifne          96
       169: aload_0
       170: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
       173: invokevirtual #42                 // Method java/nio/CharBuffer.hasRemaining:()Z
       176: ifne          96
       179: goto          182
       182: iload         4
       184: ifne          201
       187: aload_0
       188: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
       191: invokevirtual #42                 // Method java/nio/CharBuffer.hasRemaining:()Z
       194: ifne          201
       197: iconst_m1
       198: goto          203
       201: iload         4
       203: ireturn
      LineNumberTable:
        line 133: 0
        line 134: 7
        line 135: 19
        line 138: 65
        line 139: 69
        line 141: 71
        line 142: 91
        line 144: 93
        line 145: 96
        line 146: 100
        line 147: 110
        line 148: 123
        line 149: 135
        line 150: 140
        line 151: 145
        line 152: 152
        line 153: 155
        line 154: 159
        line 155: 179
        line 159: 182
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          123      29     5 chunk   I
            0     204     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0     204     1 array   [B
            0     204     2   off   I
            0     204     3   len   I
           96     108     4 bytesRead   I
      StackMapTable: number_of_entries = 9
        frame_type = 19 /* same */
        frame_type = 45 /* same */
        frame_type = 5 /* same */
        frame_type = 21 /* same */
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 58 /* same */
        frame_type = 26 /* same */
        frame_type = 18 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
         4: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
         7: ifeq          22
        10: aload_0
        11: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        14: invokevirtual #47                 // Method java/nio/ByteBuffer.get:()B
        17: sipush        255
        20: iand
        21: ireturn
        22: aload_0
        23: invokespecial #46                 // Method fillBuffer:()V
        26: aload_0
        27: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        30: invokevirtual #41                 // Method java/nio/ByteBuffer.hasRemaining:()Z
        33: ifne          0
        36: aload_0
        37: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        40: invokevirtual #42                 // Method java/nio/CharBuffer.hasRemaining:()Z
        43: ifne          0
        46: iconst_m1
        47: ireturn
      LineNumberTable:
        line 165: 0
        line 166: 10
        line 168: 22
        line 169: 26
        line 170: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 21 /* same */
    Exceptions:
      throws java.io.IOException

  public int read(byte[]) throws java.io.IOException;
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aload_1
         4: arraylength
         5: invokevirtual #48                 // Method read:([BII)I
         8: ireturn
      LineNumberTable:
        line 177: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0       9     1     b   [B
    Exceptions:
      throws java.io.IOException

  public long skip(long) throws java.io.IOException;
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=2
         0: lconst_0
         1: lstore_3
         2: lload_1
         3: lconst_0
         4: lcmp
         5: ifle          31
         8: aload_0
         9: invokevirtual #49                 // Method available:()I
        12: ifle          31
        15: aload_0
        16: invokevirtual #50                 // Method read:()I
        19: pop
        20: lload_1
        21: lconst_1
        22: lsub
        23: lstore_1
        24: lload_3
        25: lconst_1
        26: ladd
        27: lstore_3
        28: goto          2
        31: lload_3
        32: lreturn
      LineNumberTable:
        line 185: 0
        line 186: 2
        line 187: 15
        line 188: 20
        line 189: 24
        line 191: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0      33     1     n   J
            2      31     3 skipped   J
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ long ]
        frame_type = 28 /* same */
    Exceptions:
      throws java.io.IOException

  public int available() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
         4: invokevirtual #43                 // Method java/nio/ByteBuffer.remaining:()I
         7: aload_0
         8: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        11: invokevirtual #51                 // Method java/nio/CharBuffer.remaining:()I
        14: iadd
        15: ireturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 212: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
    Exceptions:
      throws java.io.IOException

  public synchronized void mark(int);
    descriptor: (I)V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
         5: invokevirtual #52                 // Method java/nio/CharBuffer.position:()I
         8: putfield      #25                 // Field mark_cbuf:I
        11: aload_0
        12: aload_0
        13: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        16: invokevirtual #53                 // Method java/nio/ByteBuffer.position:()I
        19: putfield      #26                 // Field mark_bbuf:I
        22: aload_0
        23: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        26: invokevirtual #54                 // Method java/nio/CharBuffer.mark:()Ljava/nio/Buffer;
        29: pop
        30: aload_0
        31: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        34: invokevirtual #55                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
        37: pop
        38: return
      LineNumberTable:
        line 220: 0
        line 221: 11
        line 222: 22
        line 223: 30
        line 226: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
            0      39     1 readlimit   I

  public synchronized void reset() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #25                 // Field mark_cbuf:I
         4: iconst_m1
         5: if_icmpeq     170
         8: aload_0
         9: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        12: invokevirtual #52                 // Method java/nio/CharBuffer.position:()I
        15: ifeq          89
        18: aload_0
        19: getfield      #7                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
        22: invokevirtual #56                 // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
        25: pop
        26: aload_0
        27: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        30: invokevirtual #57                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;
        33: pop
        34: aload_0
        35: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        38: invokevirtual #58                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
        41: pop
        42: aload_0
        43: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        46: iconst_0
        47: invokevirtual #59                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
        50: pop
        51: aload_0
        52: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        55: invokevirtual #52                 // Method java/nio/CharBuffer.position:()I
        58: aload_0
        59: getfield      #25                 // Field mark_cbuf:I
        62: if_icmpge     89
        65: aload_0
        66: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        69: invokevirtual #58                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;
        72: pop
        73: aload_0
        74: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
        77: iconst_0
        78: invokevirtual #59                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
        81: pop
        82: aload_0
        83: invokespecial #46                 // Method fillBuffer:()V
        86: goto          51
        89: aload_0
        90: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
        93: invokevirtual #52                 // Method java/nio/CharBuffer.position:()I
        96: aload_0
        97: getfield      #25                 // Field mark_cbuf:I
       100: if_icmpeq     148
       103: new           #60                 // class java/lang/IllegalStateException
       106: dup
       107: new           #10                 // class java/lang/StringBuilder
       110: dup
       111: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       114: ldc           #61                 // String Unexpected CharBuffer position: actual=
       116: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       119: aload_0
       120: getfield      #23                 // Field cbuf:Ljava/nio/CharBuffer;
       123: invokevirtual #52                 // Method java/nio/CharBuffer.position:()I
       126: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       129: ldc           #62                 // String  expected=
       131: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       134: aload_0
       135: getfield      #25                 // Field mark_cbuf:I
       138: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       141: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       144: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       147: athrow
       148: aload_0
       149: getfield      #20                 // Field bbuf:Ljava/nio/ByteBuffer;
       152: aload_0
       153: getfield      #26                 // Field mark_bbuf:I
       156: invokevirtual #64                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
       159: pop
       160: aload_0
       161: iconst_m1
       162: putfield      #25                 // Field mark_cbuf:I
       165: aload_0
       166: iconst_m1
       167: putfield      #26                 // Field mark_bbuf:I
       170: return
      LineNumberTable:
        line 241: 0
        line 243: 8
        line 244: 18
        line 245: 26
        line 246: 34
        line 247: 42
        line 248: 51
        line 249: 65
        line 250: 73
        line 251: 82
        line 254: 89
        line 255: 103
        line 258: 148
        line 259: 160
        line 260: 165
        line 262: 170
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     171     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
      StackMapTable: number_of_entries = 4
        frame_type = 51 /* same */
        frame_type = 37 /* same */
        frame_type = 58 /* same */
        frame_type = 21 /* same */
    Exceptions:
      throws java.io.IOException

  public boolean markSupported();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/apache/commons/io/input/CharSequenceInputStream;
}
SourceFile: "CharSequenceInputStream.java"
