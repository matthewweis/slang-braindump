Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.class
  Last modified May 29, 2022; size 5943 bytes
  SHA-256 checksum 83a09da632c671632849880a3837b4010f4a8048d9f67f3c7de5a3e1a85f8655
  Compiled from "Tasks.scala"
public interface scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R extends java.lang.Object, Tp extends java.lang.Object> extends scala.collection.parallel.Tasks$WrappedTask<R, Tp>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 18, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
    #2 = Class              #1            // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
    #3 = Utf8               <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/Tasks$WrappedTask<TR;TTp;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/Tasks$WrappedTask
    #7 = Class              #6            // scala/collection/parallel/Tasks$WrappedTask
    #8 = Utf8               Tasks.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/AdaptiveWorkStealingTasks
   #15 = Class              #14           // scala/collection/parallel/AdaptiveWorkStealingTasks
   #16 = Utf8               AWSTWrappedTask
   #17 = Utf8               scala/collection/parallel/Tasks
   #18 = Class              #17           // scala/collection/parallel/Tasks
   #19 = Utf8               WrappedTask
   #20 = Utf8               next
   #21 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #22 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;
   #23 = Utf8               next_$eq
   #24 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
   #25 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;)V
   #26 = Utf8               x$1
   #27 = Utf8               shouldWaitFor
   #28 = Utf8               ()Z
   #29 = Utf8               shouldWaitFor_$eq
   #30 = Utf8               (Z)V
   #31 = Utf8               split
   #32 = Utf8               ()Lscala/collection/immutable/Seq;
   #33 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;>;
   #34 = Utf8               compute$
   #35 = Utf8               $this
   #36 = Utf8               compute
   #37 = Utf8               ()V
   #38 = NameAndType        #36:#37       // compute:()V
   #39 = InterfaceMethodref #2.#38        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.compute:()V
   #40 = Utf8               Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #41 = Utf8               body
   #42 = Utf8               ()Lscala/collection/parallel/Task;
   #43 = NameAndType        #41:#42       // body:()Lscala/collection/parallel/Task;
   #44 = InterfaceMethodref #2.#43        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.body:()Lscala/collection/parallel/Task;
   #45 = Utf8               scala/collection/parallel/Task
   #46 = Class              #45           // scala/collection/parallel/Task
   #47 = Utf8               shouldSplitFurther
   #48 = NameAndType        #47:#28       // shouldSplitFurther:()Z
   #49 = InterfaceMethodref #46.#48       // scala/collection/parallel/Task.shouldSplitFurther:()Z
   #50 = Utf8               internal
   #51 = NameAndType        #50:#37       // internal:()V
   #52 = InterfaceMethodref #2.#51        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.internal:()V
   #53 = Utf8               release
   #54 = NameAndType        #53:#37       // release:()V
   #55 = InterfaceMethodref #2.#54        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.release:()V
   #56 = Utf8               scala/None$
   #57 = Class              #56           // scala/None$
   #58 = Utf8               MODULE$
   #59 = Utf8               Lscala/None$;
   #60 = NameAndType        #58:#59       // MODULE$:Lscala/None$;
   #61 = Fieldref           #57.#60       // scala/None$.MODULE$:Lscala/None$;
   #62 = Utf8               tryLeaf
   #63 = Utf8               (Lscala/Option;)V
   #64 = NameAndType        #62:#63       // tryLeaf:(Lscala/Option;)V
   #65 = InterfaceMethodref #46.#64       // scala/collection/parallel/Task.tryLeaf:(Lscala/Option;)V
   #66 = Utf8               this
   #67 = Utf8               internal$
   #68 = Utf8               spawnSubtasks
   #69 = NameAndType        #68:#21       // spawnSubtasks:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #70 = InterfaceMethodref #2.#69        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.spawnSubtasks:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #71 = Utf8               result
   #72 = Utf8               ()Ljava/lang/Object;
   #73 = NameAndType        #71:#72       // result:()Ljava/lang/Object;
   #74 = InterfaceMethodref #46.#73       // scala/collection/parallel/Task.result:()Ljava/lang/Object;
   #75 = Utf8               result_$eq
   #76 = Utf8               (Ljava/lang/Object;)V
   #77 = NameAndType        #75:#76       // result_$eq:(Ljava/lang/Object;)V
   #78 = InterfaceMethodref #46.#77       // scala/collection/parallel/Task.result_$eq:(Ljava/lang/Object;)V
   #79 = Utf8               throwable
   #80 = Utf8               ()Ljava/lang/Throwable;
   #81 = NameAndType        #79:#80       // throwable:()Ljava/lang/Throwable;
   #82 = InterfaceMethodref #46.#81       // scala/collection/parallel/Task.throwable:()Ljava/lang/Throwable;
   #83 = Utf8               throwable_$eq
   #84 = Utf8               (Ljava/lang/Throwable;)V
   #85 = NameAndType        #83:#84       // throwable_$eq:(Ljava/lang/Throwable;)V
   #86 = InterfaceMethodref #46.#85       // scala/collection/parallel/Task.throwable_$eq:(Ljava/lang/Throwable;)V
   #87 = NameAndType        #20:#21       // next:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #88 = InterfaceMethodref #2.#87        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.next:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
   #89 = Utf8               tryCancel
   #90 = NameAndType        #89:#28       // tryCancel:()Z
   #91 = InterfaceMethodref #2.#90        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.tryCancel:()Z
   #92 = Utf8               scala/Some
   #93 = Class              #92           // scala/Some
   #94 = Utf8               <init>
   #95 = NameAndType        #94:#76       // "<init>":(Ljava/lang/Object;)V
   #96 = Methodref          #93.#95       // scala/Some."<init>":(Ljava/lang/Object;)V
   #97 = Utf8               sync
   #98 = NameAndType        #97:#37       // sync:()V
   #99 = InterfaceMethodref #2.#98        // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.sync:()V
  #100 = Utf8               repr
  #101 = NameAndType        #100:#72      // repr:()Ljava/lang/Object;
  #102 = InterfaceMethodref #46.#101      // scala/collection/parallel/Task.repr:()Ljava/lang/Object;
  #103 = Utf8               tryMerge
  #104 = NameAndType        #103:#76      // tryMerge:(Ljava/lang/Object;)V
  #105 = InterfaceMethodref #46.#104      // scala/collection/parallel/Task.tryMerge:(Ljava/lang/Object;)V
  #106 = Utf8               last
  #107 = Utf8               spawnSubtasks$
  #108 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
  #109 = Utf8               scala/runtime/ObjectRef
  #110 = Class              #109          // scala/runtime/ObjectRef
  #111 = Utf8               create
  #112 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #113 = NameAndType        #111:#112     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #114 = Methodref          #110.#113     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #115 = NameAndType        #31:#32       // split:()Lscala/collection/immutable/Seq;
  #116 = InterfaceMethodref #2.#115       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.split:()Lscala/collection/immutable/Seq;
  #117 = Utf8               scala/collection/immutable/Seq
  #118 = Class              #117          // scala/collection/immutable/Seq
  #119 = Utf8               head
  #120 = NameAndType        #119:#72      // head:()Ljava/lang/Object;
  #121 = InterfaceMethodref #118.#120     // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
  #122 = Utf8               tail
  #123 = NameAndType        #122:#72      // tail:()Ljava/lang/Object;
  #124 = InterfaceMethodref #118.#123     // scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
  #125 = Utf8               scala/collection/SeqOps
  #126 = Class              #125          // scala/collection/SeqOps
  #127 = Utf8               reverse
  #128 = NameAndType        #127:#72      // reverse:()Ljava/lang/Object;
  #129 = InterfaceMethodref #126.#128     // scala/collection/SeqOps.reverse:()Ljava/lang/Object;
  #130 = Utf8               scala/collection/IterableOnceOps
  #131 = Class              #130          // scala/collection/IterableOnceOps
  #132 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #133 = MethodType         #132          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #134 = Utf8               $anonfun$spawnSubtasks$1$adapted
  #135 = Utf8               (Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  #136 = NameAndType        #134:#135     // $anonfun$spawnSubtasks$1$adapted:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  #137 = InterfaceMethodref #2.#136       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$anonfun$spawnSubtasks$1$adapted:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  #138 = MethodHandle       6:#137        // REF_invokeStatic scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$anonfun$spawnSubtasks$1$adapted:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  #139 = Utf8               (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  #140 = MethodType         #139          //  (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  #141 = Integer            5
  #142 = Integer            1
  #143 = Utf8               java/lang/invoke/LambdaMetafactory
  #144 = Class              #143          // java/lang/invoke/LambdaMetafactory
  #145 = Utf8               altMetafactory
  #146 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #147 = NameAndType        #145:#146     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #148 = Methodref          #144.#147     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #149 = MethodHandle       6:#148        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #150 = Utf8               apply
  #151 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
  #152 = NameAndType        #150:#151     // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #153 = InvokeDynamic      #0:#152       // #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #154 = Utf8               foreach
  #155 = Utf8               (Lscala/Function1;)V
  #156 = NameAndType        #154:#155     // foreach:(Lscala/Function1;)V
  #157 = InterfaceMethodref #131.#156     // scala/collection/IterableOnceOps.foreach:(Lscala/Function1;)V
  #158 = Utf8               elem
  #159 = Utf8               Ljava/lang/Object;
  #160 = NameAndType        #158:#159     // elem:Ljava/lang/Object;
  #161 = Fieldref           #110.#160     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #162 = NameAndType        #23:#24       // next_$eq:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #163 = InterfaceMethodref #2.#162       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.next_$eq:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #164 = Utf8               subtasks
  #165 = Utf8               Lscala/collection/immutable/Seq;
  #166 = Utf8               Lscala/runtime/ObjectRef;
  #167 = Utf8               printChain$
  #168 = Utf8               printChain
  #169 = NameAndType        #168:#37      // printChain:()V
  #170 = InterfaceMethodref #2.#169       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.printChain:()V
  #171 = Utf8               chain:
  #172 = String             #171          // chain:
  #173 = Utf8               java/lang/StringBuilder
  #174 = Class              #173          // java/lang/StringBuilder
  #175 = Integer            6
  #176 = Utf8               (I)V
  #177 = NameAndType        #94:#176      // "<init>":(I)V
  #178 = Methodref          #174.#177     // java/lang/StringBuilder."<init>":(I)V
  #179 = Utf8               append
  #180 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #181 = NameAndType        #179:#180     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #182 = Methodref          #174.#181     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #183 = Utf8               toString
  #184 = Utf8               ()Ljava/lang/String;
  #185 = NameAndType        #183:#184     // toString:()Ljava/lang/String;
  #186 = Methodref          #5.#185       // java/lang/Object.toString:()Ljava/lang/String;
  #187 = Utf8                --->
  #188 = String             #187          //  --->
  #189 = Methodref          #174.#185     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #190 = Utf8               scala/Predef$
  #191 = Class              #190          // scala/Predef$
  #192 = Utf8               Lscala/Predef$;
  #193 = NameAndType        #58:#192      // MODULE$:Lscala/Predef$;
  #194 = Fieldref           #191.#193     // scala/Predef$.MODULE$:Lscala/Predef$;
  #195 = Utf8               println
  #196 = NameAndType        #195:#76      // println:(Ljava/lang/Object;)V
  #197 = Methodref          #191.#196     // scala/Predef$.println:(Ljava/lang/Object;)V
  #198 = Utf8               curr
  #199 = Utf8               chain
  #200 = Utf8               Ljava/lang/String;
  #201 = Utf8               java/lang/String
  #202 = Class              #201          // java/lang/String
  #203 = Utf8               scala$collection$parallel$AdaptiveWorkStealingTasks$AWSTWrappedTask$$$outer
  #204 = Utf8               ()Lscala/collection/parallel/AdaptiveWorkStealingTasks;
  #205 = Utf8               $anonfun$spawnSubtasks$1
  #206 = Utf8               (Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #207 = Utf8               last$1
  #208 = Utf8               t
  #209 = Utf8               start
  #210 = NameAndType        #209:#37      // start:()V
  #211 = InterfaceMethodref #2.#210       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.start:()V
  #212 = Utf8               $init$
  #213 = NameAndType        #29:#30       // shouldWaitFor_$eq:(Z)V
  #214 = InterfaceMethodref #2.#213       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.shouldWaitFor_$eq:(Z)V
  #215 = NameAndType        #205:#206     // $anonfun$spawnSubtasks$1:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #216 = InterfaceMethodref #2.#215       // scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$anonfun$spawnSubtasks$1:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
  #217 = Utf8               scala/runtime/BoxedUnit
  #218 = Class              #217          // scala/runtime/BoxedUnit
  #219 = Utf8               UNIT
  #220 = Utf8               Lscala/runtime/BoxedUnit;
  #221 = NameAndType        #219:#220     // UNIT:Lscala/runtime/BoxedUnit;
  #222 = Fieldref           #218.#221     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #223 = Utf8               $deserializeLambda$
  #224 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #225 = Utf8               scala/runtime/LambdaDeserialize
  #226 = Class              #225          // scala/runtime/LambdaDeserialize
  #227 = Utf8               bootstrap
  #228 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #229 = NameAndType        #227:#228     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #230 = Methodref          #226.#229     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #231 = MethodHandle       6:#230        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #232 = Utf8               lambdaDeserialize
  #233 = NameAndType        #232:#224     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #234 = InvokeDynamic      #1:#233       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #235 = Utf8               Signature
  #236 = Utf8               MethodParameters
  #237 = Utf8               Code
  #238 = Utf8               LineNumberTable
  #239 = Utf8               LocalVariableTable
  #240 = Utf8               StackMapTable
  #241 = Utf8               InnerClasses
  #242 = Utf8               SourceFile
  #243 = Utf8               BootstrapMethods
  #244 = Utf8               ScalaInlineInfo
  #245 = Utf8               Scala
{
  public abstract scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp> next();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #22                          // ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;

  public abstract void next_$eq(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp>);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #25                          // (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract boolean shouldWaitFor();
    descriptor: ()Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void shouldWaitFor_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract scala.collection.immutable.Seq<scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #33                          // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;>;

  public static void compute$(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #39                 // InterfaceMethod compute:()V
         4: return
      LineNumberTable:
        line 148: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void compute();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
         6: invokeinterface #49,  1           // InterfaceMethod scala/collection/parallel/Task.shouldSplitFurther:()Z
        11: ifeq          29
        14: aload_0
        15: invokeinterface #52,  1           // InterfaceMethod internal:()V
        20: aload_0
        21: invokeinterface #55,  1           // InterfaceMethod release:()V
        26: goto          49
        29: aload_0
        30: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        35: getstatic     #61                 // Field scala/None$.MODULE$:Lscala/None$;
        38: invokeinterface #65,  2           // InterfaceMethod scala/collection/parallel/Task.tryLeaf:(Lscala/Option;)V
        43: aload_0
        44: invokeinterface #55,  1           // InterfaceMethod release:()V
        49: return
      StackMapTable: number_of_entries = 2
        frame_type = 29 /* same */
        frame_type = 19 /* same */
      LineNumberTable:
        line 148: 0
        line 149: 14
        line 150: 20
        line 152: 29
        line 153: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;

  public static void internal$(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #52                 // InterfaceMethod internal:()V
         4: return
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void internal();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #70,  1           // InterfaceMethod spawnSubtasks:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
         6: astore_1
         7: aload_1
         8: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        13: getstatic     #61                 // Field scala/None$.MODULE$:Lscala/None$;
        16: invokeinterface #65,  2           // InterfaceMethod scala/collection/parallel/Task.tryLeaf:(Lscala/Option;)V
        21: aload_1
        22: invokeinterface #55,  1           // InterfaceMethod release:()V
        27: aload_0
        28: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        33: aload_1
        34: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        39: invokeinterface #74,  1           // InterfaceMethod scala/collection/parallel/Task.result:()Ljava/lang/Object;
        44: invokeinterface #78,  2           // InterfaceMethod scala/collection/parallel/Task.result_$eq:(Ljava/lang/Object;)V
        49: aload_0
        50: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        55: aload_1
        56: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        61: invokeinterface #82,  1           // InterfaceMethod scala/collection/parallel/Task.throwable:()Ljava/lang/Throwable;
        66: invokeinterface #86,  2           // InterfaceMethod scala/collection/parallel/Task.throwable_$eq:(Ljava/lang/Throwable;)V
        71: aload_1
        72: invokeinterface #88,  1           // InterfaceMethod next:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
        77: ifnull        165
        80: aload_1
        81: invokeinterface #88,  1           // InterfaceMethod next:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
        86: astore_1
        87: aload_1
        88: invokeinterface #91,  1           // InterfaceMethod tryCancel:()Z
        93: ifeq          134
        96: aload_1
        97: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
       102: new           #93                 // class scala/Some
       105: dup
       106: aload_0
       107: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
       112: invokeinterface #74,  1           // InterfaceMethod scala/collection/parallel/Task.result:()Ljava/lang/Object;
       117: invokespecial #96                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       120: invokeinterface #65,  2           // InterfaceMethod scala/collection/parallel/Task.tryLeaf:(Lscala/Option;)V
       125: aload_1
       126: invokeinterface #55,  1           // InterfaceMethod release:()V
       131: goto          140
       134: aload_1
       135: invokeinterface #99,  1           // InterfaceMethod sync:()V
       140: aload_0
       141: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
       146: aload_1
       147: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
       152: invokeinterface #102,  1          // InterfaceMethod scala/collection/parallel/Task.repr:()Ljava/lang/Object;
       157: invokeinterface #105,  2          // InterfaceMethod scala/collection/parallel/Task.tryMerge:(Ljava/lang/Object;)V
       162: goto          71
       165: return
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 71
          locals = [ class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask ]
        frame_type = 62 /* same */
        frame_type = 5 /* same */
        frame_type = 24 /* same */
      LineNumberTable:
        line 157: 0
        line 159: 7
        line 160: 21
        line 161: 27
        line 162: 49
        line 164: 71
        line 166: 80
        line 167: 87
        line 169: 96
        line 170: 125
        line 173: 134
        line 176: 140
        line 164: 162
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7     158     1  last   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
            0     166     0  this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;

  public static scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask spawnSubtasks$(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #70                 // InterfaceMethod spawnSubtasks:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
         4: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask<R, Tp> spawnSubtasks();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=1
         0: aconst_null
         1: invokestatic  #114                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
         4: astore_1
         5: aload_0
         6: astore_2
         7: aload_2
         8: invokeinterface #116,  1          // InterfaceMethod split:()Lscala/collection/immutable/Seq;
        13: astore_3
        14: aload_3
        15: invokeinterface #121,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        20: checkcast     #2                  // class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
        23: astore_2
        24: aload_3
        25: invokeinterface #124,  1          // InterfaceMethod scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
        30: checkcast     #126                // class scala/collection/SeqOps
        33: invokeinterface #129,  1          // InterfaceMethod scala/collection/SeqOps.reverse:()Ljava/lang/Object;
        38: checkcast     #131                // class scala/collection/IterableOnceOps
        41: aload_1
        42: invokedynamic #153,  0            // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        47: invokeinterface #157,  2          // InterfaceMethod scala/collection/IterableOnceOps.foreach:(Lscala/Function1;)V
        52: aload_2
        53: invokeinterface #44,  1           // InterfaceMethod body:()Lscala/collection/parallel/Task;
        58: invokeinterface #49,  1           // InterfaceMethod scala/collection/parallel/Task.shouldSplitFurther:()Z
        63: ifeq          69
        66: goto          7
        69: aload_2
        70: aload_1
        71: getfield      #161                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        74: checkcast     #2                  // class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
        77: invokeinterface #163,  2          // InterfaceMethod next_$eq:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
        82: aload_2
        83: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 7
          locals = [ class scala/runtime/ObjectRef, class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask ]
        frame_type = 252 /* append */
          offset_delta = 61
          locals = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 181: 0
        line 182: 5
        line 184: 7
        line 185: 14
        line 186: 24
        line 191: 52
        line 192: 66
        line 193: 69
        line 194: 82
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      49     3 subtasks   Lscala/collection/immutable/Seq;
            5      78     1  last   Lscala/runtime/ObjectRef;
            7      76     2  head   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
            0      84     0  this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    Signature: #22                          // ()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask<TR;TTp;>;

  public static void printChain$(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #170                // InterfaceMethod printChain:()V
         4: return
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void printChain();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: astore_1
         2: ldc           #172                // String chain:
         4: astore_2
         5: aload_1
         6: ifnull        48
         9: new           #174                // class java/lang/StringBuilder
        12: dup
        13: ldc           #175                // int 6
        15: invokespecial #178                // Method java/lang/StringBuilder."<init>":(I)V
        18: aload_2
        19: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: aload_1
        23: invokevirtual #186                // Method java/lang/Object.toString:()Ljava/lang/String;
        26: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: ldc           #188                // String  --->
        31: invokevirtual #182                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        37: astore_2
        38: aload_1
        39: invokeinterface #88,  1           // InterfaceMethod next:()Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
        44: astore_1
        45: goto          5
        48: getstatic     #194                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        51: aload_2
        52: invokevirtual #197                // Method scala/Predef$.println:(Ljava/lang/Object;)V
        55: return
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 5
          locals = [ class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask, class java/lang/String ]
        frame_type = 42 /* same */
      LineNumberTable:
        line 198: 0
        line 199: 2
        line 200: 5
        line 201: 9
        line 202: 38
        line 200: 45
        line 204: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      53     1  curr   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
            5      50     2 chain   Ljava/lang/String;
            0      56     0  this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;

  public abstract scala.collection.parallel.AdaptiveWorkStealingTasks scala$collection$parallel$AdaptiveWorkStealingTasks$AWSTWrappedTask$$$outer();
    descriptor: ()Lscala/collection/parallel/AdaptiveWorkStealingTasks;
    flags: (0x1401) ACC_PUBLIC, ACC_ABSTRACT, ACC_SYNTHETIC

  public static void $anonfun$spawnSubtasks$1(scala.runtime.ObjectRef, scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #161                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #2                  // class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask
         8: invokeinterface #163,  2          // InterfaceMethod next_$eq:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
        13: aload_0
        14: aload_1
        15: putfield      #161                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        18: aload_1
        19: invokeinterface #211,  1          // InterfaceMethod start:()V
        24: return
      LineNumberTable:
        line 187: 0
        line 188: 13
        line 189: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 last$1   Lscala/runtime/ObjectRef;
            0      25     1     t   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      last$1                         final
      t                              final

  public static void $init$(scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aconst_null
         2: invokeinterface #163,  2          // InterfaceMethod next_$eq:(Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
         7: aload_0
         8: iconst_1
         9: invokeinterface #214,  2          // InterfaceMethod shouldWaitFor_$eq:(Z)V
        14: return
      LineNumberTable:
        line 143: 0
        line 144: 7
        line 142: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Object $anonfun$spawnSubtasks$1$adapted(scala.runtime.ObjectRef, scala.collection.parallel.AdaptiveWorkStealingTasks$AWSTWrappedTask);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #216                // InterfaceMethod $anonfun$spawnSubtasks$1:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)V
         5: getstatic     #222                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 186: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 last$1   Lscala/runtime/ObjectRef;
            0       9     1     t   Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;
    MethodParameters:
      Name                           Flags
      last$1                         final
      t                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #234,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #16= #2 of #15;                  // AWSTWrappedTask=class scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask of class scala/collection/parallel/AdaptiveWorkStealingTasks
  public #19= #7 of #18;                  // WrappedTask=class scala/collection/parallel/Tasks$WrappedTask of class scala/collection/parallel/Tasks
Signature: #3                           // <R:Ljava/lang/Object;Tp:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/Tasks$WrappedTask<TR;TTp;>;
SourceFile: "Tasks.scala"
BootstrapMethods:
  0: #149 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #133 (Ljava/lang/Object;)Ljava/lang/Object;
      #138 REF_invokeStatic scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$anonfun$spawnSubtasks$1$adapted:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
      #140 (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
      #141 5
      #142 1
      #140 (Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  1: #231 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #138 REF_invokeStatic scala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask.$anonfun$spawnSubtasks$1$adapted:(Lscala/runtime/ObjectRef;Lscala/collection/parallel/AdaptiveWorkStealingTasks$AWSTWrappedTask;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 CD 00 CE 01 00 86 00 87 01 00 D4
   00 18 01 00 24 00 25 00 00 22 00 18 01 00 32 00
   25 00 00 43 00 18 01 00 14 00 15 00 00 17 00 18
   00 00 A8 00 25 00 00 A7 00 18 01 00 CB 00 CC 00
   00 1B 00 1C 00 00 1D 00 1E 00 00 44 00 15 00 00
   6B 00 6C 01 00 1F 00 20 00
  Scala: length = 0x0 (unknown attribute)

