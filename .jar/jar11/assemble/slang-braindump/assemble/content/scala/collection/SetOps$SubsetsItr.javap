Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/SetOps$SubsetsItr.class
  Last modified May 29, 2022; size 4365 bytes
  SHA-256 checksum 71c52fadc0b4f9dba1d35086cc84db0c042bb0aa8f989b47230b61fe768f416e
  Compiled from "Set.scala"
public class scala.collection.SetOps$SubsetsItr extends scala.collection.AbstractIterator<C>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/SetOps$SubsetsItr
  super_class: #5                         // scala/collection/AbstractIterator
  interfaces: 0, fields: 5, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/SetOps$SubsetsItr
    #2 = Class              #1            // scala/collection/SetOps$SubsetsItr
    #3 = Utf8               Lscala/collection/AbstractIterator<TC;>;
    #4 = Utf8               scala/collection/AbstractIterator
    #5 = Class              #4            // scala/collection/AbstractIterator
    #6 = Utf8               Set.scala
    #7 = Utf8               scala/collection/SetOps
    #8 = Class              #7            // scala/collection/SetOps
    #9 = Utf8               SubsetsItr
   #10 = Utf8               scala/collection/immutable/Range$Exclusive
   #11 = Class              #10           // scala/collection/immutable/Range$Exclusive
   #12 = Utf8               scala/collection/immutable/Range
   #13 = Class              #12           // scala/collection/immutable/Range
   #14 = Utf8               Exclusive
   #15 = Utf8               elms
   #16 = Utf8               Lscala/collection/IndexedSeq;
   #17 = Utf8               Lscala/collection/IndexedSeq<TA;>;
   #18 = Utf8               len
   #19 = Utf8               I
   #20 = Utf8               idxs
   #21 = Utf8               [I
   #22 = Utf8               _hasNext
   #23 = Utf8               Z
   #24 = Utf8               $outer
   #25 = Utf8               Lscala/collection/SetOps;
   #26 = Utf8               hasNext
   #27 = Utf8               ()Z
   #28 = NameAndType        #22:#23       // _hasNext:Z
   #29 = Fieldref           #2.#28        // scala/collection/SetOps$SubsetsItr._hasNext:Z
   #30 = Utf8               this
   #31 = Utf8               Lscala/collection/SetOps$SubsetsItr;
   #32 = Utf8               next
   #33 = Utf8               ()Lscala/collection/SetOps;
   #34 = Utf8               ()TC;^Ljava/util/NoSuchElementException;
   #35 = Utf8               java/util/NoSuchElementException
   #36 = Class              #35           // java/util/NoSuchElementException
   #37 = NameAndType        #26:#27       // hasNext:()Z
   #38 = Methodref          #2.#37        // scala/collection/SetOps$SubsetsItr.hasNext:()Z
   #39 = Utf8               scala/collection/Iterator$
   #40 = Class              #39           // scala/collection/Iterator$
   #41 = Utf8               MODULE$
   #42 = Utf8               Lscala/collection/Iterator$;
   #43 = NameAndType        #41:#42       // MODULE$:Lscala/collection/Iterator$;
   #44 = Fieldref           #40.#43       // scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
   #45 = Utf8               scala$collection$Iterator$$_empty
   #46 = Utf8               Lscala/collection/Iterator;
   #47 = NameAndType        #45:#46       // scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #48 = Fieldref           #40.#47       // scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
   #49 = Utf8               scala/collection/Iterator
   #50 = Class              #49           // scala/collection/Iterator
   #51 = Utf8               ()Ljava/lang/Object;
   #52 = NameAndType        #32:#51       // next:()Ljava/lang/Object;
   #53 = InterfaceMethodref #50.#52       // scala/collection/Iterator.next:()Ljava/lang/Object;
   #54 = Utf8               scala$collection$SetOps$SubsetsItr$$$outer
   #55 = NameAndType        #54:#33       // scala$collection$SetOps$SubsetsItr$$$outer:()Lscala/collection/SetOps;
   #56 = Methodref          #2.#55        // scala/collection/SetOps$SubsetsItr.scala$collection$SetOps$SubsetsItr$$$outer:()Lscala/collection/SetOps;
   #57 = Utf8               newSpecificBuilder
   #58 = Utf8               ()Lscala/collection/mutable/Builder;
   #59 = NameAndType        #57:#58       // newSpecificBuilder:()Lscala/collection/mutable/Builder;
   #60 = InterfaceMethodref #8.#59        // scala/collection/SetOps.newSpecificBuilder:()Lscala/collection/mutable/Builder;
   #61 = Utf8               scala/collection/ArrayOps$
   #62 = Class              #61           // scala/collection/ArrayOps$
   #63 = Utf8               Lscala/collection/ArrayOps$;
   #64 = NameAndType        #41:#63       // MODULE$:Lscala/collection/ArrayOps$;
   #65 = Fieldref           #62.#64       // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
   #66 = NameAndType        #20:#21       // idxs:[I
   #67 = Fieldref           #2.#66        // scala/collection/SetOps$SubsetsItr.idxs:[I
   #68 = NameAndType        #18:#19       // len:I
   #69 = Fieldref           #2.#68        // scala/collection/SetOps$SubsetsItr.len:I
   #70 = Utf8               slice$extension
   #71 = Utf8               (Ljava/lang/Object;II)Ljava/lang/Object;
   #72 = NameAndType        #70:#71       // slice$extension:(Ljava/lang/Object;II)Ljava/lang/Object;
   #73 = Methodref          #62.#72       // scala/collection/ArrayOps$.slice$extension:(Ljava/lang/Object;II)Ljava/lang/Object;
   #74 = Class              #21           // "[I"
   #75 = Utf8               $anonfun$next$1
   #76 = Utf8               (Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;I)Lscala/collection/mutable/Builder;
   #77 = NameAndType        #75:#76       // $anonfun$next$1:(Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;I)Lscala/collection/mutable/Builder;
   #78 = Methodref          #2.#77        // scala/collection/SetOps$SubsetsItr.$anonfun$next$1:(Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;I)Lscala/collection/mutable/Builder;
   #79 = Utf8               scala/collection/mutable/Builder
   #80 = Class              #79           // scala/collection/mutable/Builder
   #81 = Utf8               result
   #82 = NameAndType        #81:#51       // result:()Ljava/lang/Object;
   #83 = InterfaceMethodref #80.#82       // scala/collection/mutable/Builder.result:()Ljava/lang/Object;
   #84 = Utf8               scala/runtime/RichInt$
   #85 = Class              #84           // scala/runtime/RichInt$
   #86 = Utf8               Lscala/runtime/RichInt$;
   #87 = NameAndType        #41:#86       // MODULE$:Lscala/runtime/RichInt$;
   #88 = Fieldref           #85.#87       // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
   #89 = Utf8               scala/collection/immutable/Range$
   #90 = Class              #89           // scala/collection/immutable/Range$
   #91 = Utf8               Lscala/collection/immutable/Range$;
   #92 = NameAndType        #41:#91       // MODULE$:Lscala/collection/immutable/Range$;
   #93 = Fieldref           #90.#92       // scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
   #94 = Utf8               <init>
   #95 = Utf8               (III)V
   #96 = NameAndType        #94:#95       // "<init>":(III)V
   #97 = Methodref          #11.#96       // scala/collection/immutable/Range$Exclusive."<init>":(III)V
   #98 = Utf8               isEmpty
   #99 = NameAndType        #98:#27       // isEmpty:()Z
  #100 = Methodref          #13.#99       // scala/collection/immutable/Range.isEmpty:()Z
  #101 = Utf8               start
  #102 = Utf8               ()I
  #103 = NameAndType        #101:#102     // start:()I
  #104 = Methodref          #13.#103      // scala/collection/immutable/Range.start:()I
  #105 = Utf8               $anonfun$next$2
  #106 = Utf8               (Lscala/collection/SetOps$SubsetsItr;I)V
  #107 = NameAndType        #105:#106     // $anonfun$next$2:(Lscala/collection/SetOps$SubsetsItr;I)V
  #108 = Methodref          #2.#107       // scala/collection/SetOps$SubsetsItr.$anonfun$next$2:(Lscala/collection/SetOps$SubsetsItr;I)V
  #109 = Utf8               scala$collection$immutable$Range$$lastElement
  #110 = NameAndType        #109:#19      // scala$collection$immutable$Range$$lastElement:I
  #111 = Fieldref           #13.#110      // scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
  #112 = Utf8               step
  #113 = NameAndType        #112:#102     // step:()I
  #114 = Methodref          #13.#113      // scala/collection/immutable/Range.step:()I
  #115 = Utf8               buf
  #116 = Utf8               Lscala/collection/mutable/Builder;
  #117 = Utf8               i
  #118 = Utf8               foreach$extension_i
  #119 = Utf8               foreach$extension_$this
  #120 = Utf8               Ljava/lang/Object;
  #121 = Utf8               foreach$extension_boxToInteger_i
  #122 = Utf8               foreach$mVc$sp_i
  #123 = Utf8               foreach$mVc$sp_this
  #124 = Utf8               Lscala/collection/immutable/Range;
  #125 = Utf8               until$extension_end
  #126 = NameAndType        #24:#25       // $outer:Lscala/collection/SetOps;
  #127 = Fieldref           #2.#126       // scala/collection/SetOps$SubsetsItr.$outer:Lscala/collection/SetOps;
  #128 = NameAndType        #32:#33       // next:()Lscala/collection/SetOps;
  #129 = Methodref          #2.#128       // scala/collection/SetOps$SubsetsItr.next:()Lscala/collection/SetOps;
  #130 = Utf8               $this
  #131 = Utf8               buf$1
  #132 = Utf8               idx
  #133 = NameAndType        #15:#16       // elms:Lscala/collection/IndexedSeq;
  #134 = Fieldref           #2.#133       // scala/collection/SetOps$SubsetsItr.elms:Lscala/collection/IndexedSeq;
  #135 = Utf8               scala/collection/IndexedSeq
  #136 = Class              #135          // scala/collection/IndexedSeq
  #137 = Utf8               apply
  #138 = Utf8               (I)Ljava/lang/Object;
  #139 = NameAndType        #137:#138     // apply:(I)Ljava/lang/Object;
  #140 = InterfaceMethodref #136.#139     // scala/collection/IndexedSeq.apply:(I)Ljava/lang/Object;
  #141 = Utf8               scala/collection/mutable/Growable
  #142 = Class              #141          // scala/collection/mutable/Growable
  #143 = Utf8               addOne
  #144 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #145 = NameAndType        #143:#144     // addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #146 = InterfaceMethodref #142.#145     // scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #147 = Utf8               $plus$eq_elem
  #148 = Utf8               java/lang/Object
  #149 = Class              #148          // java/lang/Object
  #150 = Utf8               j
  #151 = Utf8               (Lscala/collection/SetOps;Lscala/collection/IndexedSeq;I)V
  #152 = Utf8               (Lscala/collection/IndexedSeq<TA;>;I)V
  #153 = Utf8               ()V
  #154 = NameAndType        #94:#153      // "<init>":()V
  #155 = Methodref          #5.#154       // scala/collection/AbstractIterator."<init>":()V
  #156 = Utf8               scala/Array$
  #157 = Class              #156          // scala/Array$
  #158 = Utf8               Lscala/Array$;
  #159 = NameAndType        #41:#158      // MODULE$:Lscala/Array$;
  #160 = Fieldref           #157.#159     // scala/Array$.MODULE$:Lscala/Array$;
  #161 = Utf8               range
  #162 = Utf8               (III)[I
  #163 = NameAndType        #161:#162     // range:(III)[I
  #164 = Methodref          #157.#163     // scala/Array$.range:(III)[I
  #165 = Utf8               scala/collection/SeqOps
  #166 = Class              #165          // scala/collection/SeqOps
  #167 = Utf8               length
  #168 = NameAndType        #167:#102     // length:()I
  #169 = InterfaceMethodref #166.#168     // scala/collection/SeqOps.length:()I
  #170 = Utf8               $anonfun$next$1$adapted
  #171 = Utf8               (Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/collection/mutable/Builder;
  #172 = Utf8               scala/runtime/BoxesRunTime
  #173 = Class              #172          // scala/runtime/BoxesRunTime
  #174 = Utf8               unboxToInt
  #175 = Utf8               (Ljava/lang/Object;)I
  #176 = NameAndType        #174:#175     // unboxToInt:(Ljava/lang/Object;)I
  #177 = Methodref          #173.#176     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #178 = Utf8               Signature
  #179 = Utf8               Code
  #180 = Utf8               LineNumberTable
  #181 = Utf8               LocalVariableTable
  #182 = Utf8               StackMapTable
  #183 = Utf8               Exceptions
  #184 = Utf8               MethodParameters
  #185 = Utf8               InnerClasses
  #186 = Utf8               SourceFile
  #187 = Utf8               ScalaInlineInfo
  #188 = Utf8               Scala
{
  private final scala.collection.IndexedSeq<A> elms;
    descriptor: Lscala/collection/IndexedSeq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // Lscala/collection/IndexedSeq<TA;>;

  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int[] idxs;
    descriptor: [I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private boolean _hasNext;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final scala.collection.SetOps $outer;
    descriptor: Lscala/collection/SetOps;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public boolean hasNext();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #29                 // Field _hasNext:Z
         4: ireturn
      LineNumberTable:
        line 156: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SetOps$SubsetsItr;

  public C next() throws java/util/NoSuchElementException;
    descriptor: ()Lscala/collection/SetOps;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=12, args_size=1
         0: aload_0
         1: invokevirtual #38                 // Method hasNext:()Z
         4: ifne          20
         7: getstatic     #44                 // Field scala/collection/Iterator$.MODULE$:Lscala/collection/Iterator$;
        10: pop
        11: getstatic     #48                 // Field scala/collection/Iterator$.scala$collection$Iterator$$_empty:Lscala/collection/Iterator;
        14: invokeinterface #53,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        19: pop
        20: aload_0
        21: invokevirtual #56                 // Method scala$collection$SetOps$SubsetsItr$$$outer:()Lscala/collection/SetOps;
        24: invokeinterface #60,  1           // InterfaceMethod scala/collection/SetOps.newSpecificBuilder:()Lscala/collection/mutable/Builder;
        29: astore_1
        30: getstatic     #65                 // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        33: aload_0
        34: getfield      #67                 // Field idxs:[I
        37: iconst_0
        38: aload_0
        39: getfield      #69                 // Field len:I
        42: invokevirtual #73                 // Method scala/collection/ArrayOps$.slice$extension:(Ljava/lang/Object;II)Ljava/lang/Object;
        45: checkcast     #74                 // class "[I"
        48: astore        5
        50: aload         5
        52: arraylength
        53: istore        7
        55: iconst_0
        56: istore        6
        58: iload         6
        60: iload         7
        62: if_icmpge     86
        65: aload         5
        67: iload         6
        69: iaload
        70: istore        8
        72: aload_0
        73: aload_1
        74: iload         8
        76: invokestatic  #78                 // Method $anonfun$next$1:(Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;I)Lscala/collection/mutable/Builder;
        79: pop
        80: iinc          6, 1
        83: goto          58
        86: aconst_null
        87: astore        5
        89: aload_1
        90: invokeinterface #83,  1           // InterfaceMethod scala/collection/mutable/Builder.result:()Ljava/lang/Object;
        95: checkcast     #8                  // class scala/collection/SetOps
        98: astore_2
        99: aload_0
       100: getfield      #69                 // Field len:I
       103: iconst_1
       104: isub
       105: istore_3
       106: iload_3
       107: iconst_0
       108: if_icmplt     136
       111: aload_0
       112: getfield      #67                 // Field idxs:[I
       115: iload_3
       116: iaload
       117: aload_0
       118: getfield      #67                 // Field idxs:[I
       121: iload_3
       122: iconst_1
       123: iadd
       124: iaload
       125: iconst_1
       126: isub
       127: if_icmpne     136
       130: iinc          3, -1
       133: goto          106
       136: iload_3
       137: iconst_0
       138: if_icmpge     149
       141: aload_0
       142: iconst_0
       143: putfield      #29                 // Field _hasNext:Z
       146: goto          240
       149: aload_0
       150: getfield      #67                 // Field idxs:[I
       153: iload_3
       154: aload_0
       155: getfield      #67                 // Field idxs:[I
       158: iload_3
       159: iaload
       160: iconst_1
       161: iadd
       162: iastore
       163: getstatic     #88                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       166: pop
       167: iload_3
       168: iconst_1
       169: iadd
       170: istore        4
       172: aload_0
       173: getfield      #69                 // Field len:I
       176: istore        11
       178: getstatic     #93                 // Field scala/collection/immutable/Range$.MODULE$:Lscala/collection/immutable/Range$;
       181: pop
       182: new           #11                 // class scala/collection/immutable/Range$Exclusive
       185: dup
       186: iload         4
       188: iload         11
       190: iconst_1
       191: invokespecial #97                 // Method scala/collection/immutable/Range$Exclusive."<init>":(III)V
       194: astore        9
       196: aload         9
       198: invokevirtual #100                // Method scala/collection/immutable/Range.isEmpty:()Z
       201: ifne          240
       204: aload         9
       206: invokevirtual #104                // Method scala/collection/immutable/Range.start:()I
       209: istore        10
       211: aload_0
       212: iload         10
       214: invokestatic  #108                // Method $anonfun$next$2:(Lscala/collection/SetOps$SubsetsItr;I)V
       217: iload         10
       219: aload         9
       221: getfield      #111                // Field scala/collection/immutable/Range.scala$collection$immutable$Range$$lastElement:I
       224: if_icmpeq     240
       227: iload         10
       229: aload         9
       231: invokevirtual #114                // Method scala/collection/immutable/Range.step:()I
       234: iadd
       235: istore        10
       237: goto          211
       240: aload_2
       241: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 20 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class scala/collection/SetOps$SubsetsItr, class scala/collection/mutable/Builder, top, top, top, class "[I", int, int ]
          stack = []
        frame_type = 27 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/SetOps$SubsetsItr, class scala/collection/mutable/Builder, class scala/collection/SetOps, int, top, null, int, int ]
          stack = []
        frame_type = 29 /* same */
        frame_type = 12 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class scala/collection/SetOps$SubsetsItr, class scala/collection/mutable/Builder, class scala/collection/SetOps, int, int, null, int, int, top, class scala/collection/immutable/Range$Exclusive, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class scala/collection/SetOps$SubsetsItr, class scala/collection/mutable/Builder, class scala/collection/SetOps, int, top, null, int, int ]
          stack = []
      LineNumberTable:
        line 159: 0
        line 161: 20
        line 162: 30
        line 162: 58
        line 162: 72
        line 162: 80
        line 162: 86
        line 163: 89
        line 165: 99
        line 166: 106
        line 168: 136
        line 170: 149
        line 171: 163
        line 175: 240
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           30     211     1   buf   Lscala/collection/mutable/Builder;
           99     142     2 result   Lscala/collection/SetOps;
          106     135     3     i   I
            0     242     0  this   Lscala/collection/SetOps$SubsetsItr;
           58      28     6 foreach$extension_i   I
           50      36     5 foreach$extension_$this   Ljava/lang/Object;
           72       0     8 foreach$extension_boxToInteger_i   I
          211      29    10 foreach$mVc$sp_i   I
          196      44     9 foreach$mVc$sp_this   Lscala/collection/immutable/Range;
          178      16    11 until$extension_end   I
    Exceptions:
      throws java.util.NoSuchElementException
    Signature: #34                          // ()TC;^Ljava/util/NoSuchElementException;

  public scala.collection.SetOps scala$collection$SetOps$SubsetsItr$$$outer();
    descriptor: ()Lscala/collection/SetOps;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #127                // Field $outer:Lscala/collection/SetOps;
         4: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SetOps$SubsetsItr;

  public java.lang.Object next() throws java.util.NoSuchElementException;
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #129                // Method next:()Lscala/collection/SetOps;
         4: areturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/SetOps$SubsetsItr;
    Exceptions:
      throws java.util.NoSuchElementException

  public static final scala.collection.mutable.Builder $anonfun$next$1(scala.collection.SetOps$SubsetsItr, scala.collection.mutable.Builder, int);
    descriptor: (Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;I)Lscala/collection/mutable/Builder;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #134                // Field elms:Lscala/collection/IndexedSeq;
         5: iload_2
         6: invokeinterface #140,  2          // InterfaceMethod scala/collection/IndexedSeq.apply:(I)Ljava/lang/Object;
        11: astore_3
        12: ifnonnull     17
        15: aconst_null
        16: athrow
        17: aload_1
        18: aload_3
        19: invokeinterface #146,  2          // InterfaceMethod scala/collection/mutable/Growable.addOne:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        24: checkcast     #80                 // class scala/collection/mutable/Builder
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 $this   Lscala/collection/SetOps$SubsetsItr;
            0      28     1 buf$1   Lscala/collection/mutable/Builder;
            0      28     2   idx   I
           17       7     3 $plus$eq_elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      buf$1                          final
      idx                            final

  public static final void $anonfun$next$2(scala.collection.SetOps$SubsetsItr, int);
    descriptor: (Lscala/collection/SetOps$SubsetsItr;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: getfield      #67                 // Field idxs:[I
         4: iload_1
         5: aload_0
         6: getfield      #67                 // Field idxs:[I
         9: iload_1
        10: iconst_1
        11: isub
        12: iaload
        13: iconst_1
        14: iadd
        15: iastore
        16: return
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 $this   Lscala/collection/SetOps$SubsetsItr;
            0      17     1     j   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      j                              final

  public scala.collection.SetOps$SubsetsItr(scala.collection.IndexedSeq<A>, int);
    descriptor: (Lscala/collection/SetOps;Lscala/collection/IndexedSeq;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: aload_2
         2: putfield      #134                // Field elms:Lscala/collection/IndexedSeq;
         5: aload_0
         6: iload_3
         7: putfield      #69                 // Field len:I
        10: aload_1
        11: ifnonnull     16
        14: aconst_null
        15: athrow
        16: aload_0
        17: aload_1
        18: putfield      #127                // Field $outer:Lscala/collection/SetOps;
        21: aload_0
        22: invokespecial #155                // Method scala/collection/AbstractIterator."<init>":()V
        25: aload_0
        26: getstatic     #160                // Field scala/Array$.MODULE$:Lscala/Array$;
        29: iconst_0
        30: iload_3
        31: iconst_1
        32: iadd
        33: iconst_1
        34: invokevirtual #164                // Method scala/Array$.range:(III)[I
        37: putfield      #67                 // Field idxs:[I
        40: aload_0
        41: iconst_1
        42: putfield      #29                 // Field _hasNext:Z
        45: aload_0
        46: getfield      #67                 // Field idxs:[I
        49: iload_3
        50: aload_2
        51: ifnonnull     56
        54: aconst_null
        55: athrow
        56: aload_2
        57: invokeinterface #169,  1          // InterfaceMethod scala/collection/SeqOps.length:()I
        62: iastore
        63: return
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class scala/collection/SetOps$SubsetsItr, class scala/collection/SetOps, class scala/collection/IndexedSeq, int ]
          stack = [ class "[I", int ]
      LineNumberTable:
        line 151: 0
        line 152: 25
        line 153: 40
        line 154: 45
        line 151: 63
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      64     0  this   Lscala/collection/SetOps$SubsetsItr;
            0      64     1 $outer   Lscala/collection/SetOps;
            0      64     2  elms   Lscala/collection/IndexedSeq;
            0      64     3   len   I
    Signature: #152                         // (Lscala/collection/IndexedSeq<TA;>;I)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      elms                           final
      len                            final

  public static final scala.collection.mutable.Builder $anonfun$next$1$adapted(scala.collection.SetOps$SubsetsItr, scala.collection.mutable.Builder, java.lang.Object);
    descriptor: (Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;Ljava/lang/Object;)Lscala/collection/mutable/Builder;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #177                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         6: invokestatic  #78                 // Method $anonfun$next$1:(Lscala/collection/SetOps$SubsetsItr;Lscala/collection/mutable/Builder;I)Lscala/collection/mutable/Builder;
         9: areturn
      LineNumberTable:
        line 162: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lscala/collection/SetOps$SubsetsItr;
            0      10     1 buf$1   Lscala/collection/mutable/Builder;
            0      10     2   idx   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      buf$1                          final
      idx                            final
}
InnerClasses:
  private #9= #2 of #8;                   // SubsetsItr=class scala/collection/SetOps$SubsetsItr of class scala/collection/SetOps
  public static final #14= #11 of #13;    // Exclusive=class scala/collection/immutable/Range$Exclusive of class scala/collection/immutable/Range
Signature: #3                           // Lscala/collection/AbstractIterator<TC;>;
SourceFile: "Set.scala"
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 00 4B 00 4C 01 00 AA 00 AB 01 00 69
   00 6A 01 00 5E 00 97 00 00 1A 00 1B 00 00 20 00
   33 00 00 20 00 21 00 00 36 00 21 00
  Scala: length = 0x0 (unknown attribute)

