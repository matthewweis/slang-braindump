Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/core/shaded/fastparse/LowestPriSequencer.class
  Last modified May 29, 2022; size 3000 bytes
  SHA-256 checksum c21ecece22de4f45b117757735e7a9c9d09fd5ce865a0f37e0174b014e57c92b
  Compiled from "SequencerGen.scala"
public interface coursier.core.shaded.fastparse.LowestPriSequencer<Sequencer extends java.lang.Object>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // coursier/core/shaded/fastparse/LowestPriSequencer
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 6, attributes: 7
Constant pool:
    #1 = Utf8               coursier/core/shaded/fastparse/LowestPriSequencer
    #2 = Class              #1            // coursier/core/shaded/fastparse/LowestPriSequencer
    #3 = Utf8               <Sequencer:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               SequencerGen.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\r3q\u0001B\u0003\u0011\u0002\u0007\u0005\u0001\u0002C\u0003\u0011\u0001\u0011\u0005\u0011\u0003\u0003\u0004\u0016\u0001\u00016\tB\u0006\u0005\u0006m\u0001!\u0019a\u000e\u0002\u0013\u0019><Xm\u001d;Qe&\u001cV-];f]\u000e,\'OC\u0001\u0007\u0003%1\u0017m\u001d;qCJ\u001cXm\u0001\u0001\u0016\u0005%Q2C\u0001\u0001\u000b!\tYa\"D\u0001\r\u0015\u0005i\u0011!B:dC2\f\u0017BA\b\r\u0005\u0019\te.\u001f*fM\u00061A%\u001b8ji\u0012\"\u0012A\u0005\t\u0003\u0017MI!\u0001\u0006\u0007\u0003\tUs\u0017\u000e^\u0001\u000b\'\u0016\fX/\u001a8dKJ\u0004T\u0003B\f*Y=\"\"\u0001G\u0019\u0011\u000beQ\u0002f\u000b\u0018\r\u0001\u0011)1\u0004\u0001b\u00019\tI1+Z9vK:\u001cWM]\u000b\u0005;\u00112s%\u0005\u0002\u001fCA\u00111bH\u0005\u0003A1\u0011qAT8uQ&tw\r\u0005\u0002\fE%\u00111\u0005\u0004\u0002\u0004\u0003:LH!B\u0013\u001b\u0005\u0004i\"!A0\u0005\u000b\u0015R\"\u0019A\u000f\u0005\u000b\u0015R\"\u0019A\u000f\u0011\u0005eIC!\u0002\u0016\u0003\u0005\u0004i\"!A!\u0011\u0005eaC!B\u0017\u0003\u0005\u0004i\"!\u0001\"\u0011\u0005eyC!\u0002\u0019\u0003\u0005\u0004i\"!A\"\t\u000bI\u0012\u0001\u0019A\u001a\u0002\u0003\u0019\u0004Ra\u0003\u001b)W9J!!\u000e\u0007\u0003\u0013\u0019+hn\u0019;j_:\u0014\u0014AC*fcV,gnY3scU\u0019\u0001h\u000f \u0016\u0003e\u0002R!\u0007\u000e;{\u0001\u0003\"!G\u001e\u0005\u000bq\u001a!\u0019A\u000f\u0003\u0005Q\u000b\u0004CA\r?\t\u0015y4A1\u0001\u001e\u0005\t!&\u0007\u0005\u0003\f\u0003jj\u0014B\u0001\"\r\u0005\u0019!V\u000f\u001d7fe\u0001
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               Sequencer0
   #16 = Utf8               (Lscala/Function2;)Ljava/lang/Object;
   #17 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;C:Ljava/lang/Object;>(Lscala/Function2<TA;TB;TC;>;)TSequencer;
   #18 = Utf8               f
   #19 = Utf8               Sequencer1$
   #20 = Utf8               (Lcoursier/core/shaded/fastparse/LowestPriSequencer;)Ljava/lang/Object;
   #21 = Utf8               $this
   #22 = Utf8               Sequencer1
   #23 = Utf8               ()Ljava/lang/Object;
   #24 = NameAndType        #22:#23       // Sequencer1:()Ljava/lang/Object;
   #25 = InterfaceMethodref #2.#24        // coursier/core/shaded/fastparse/LowestPriSequencer.Sequencer1:()Ljava/lang/Object;
   #26 = Utf8               Lcoursier/core/shaded/fastparse/LowestPriSequencer;
   #27 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;>()TSequencer;
   #28 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #29 = MethodType         #28           //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #30 = Utf8               $anonfun$Sequencer1$1
   #31 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #32 = NameAndType        #30:#31       // $anonfun$Sequencer1$1:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #33 = InterfaceMethodref #2.#32        // coursier/core/shaded/fastparse/LowestPriSequencer.$anonfun$Sequencer1$1:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #34 = MethodHandle       6:#33         // REF_invokeStatic coursier/core/shaded/fastparse/LowestPriSequencer.$anonfun$Sequencer1$1:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #35 = MethodType         #31           //  (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
   #36 = Integer            5
   #37 = Integer            1
   #38 = Utf8               java/lang/invoke/LambdaMetafactory
   #39 = Class              #38           // java/lang/invoke/LambdaMetafactory
   #40 = Utf8               altMetafactory
   #41 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #42 = NameAndType        #40:#41       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #43 = Methodref          #39.#42       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #44 = MethodHandle       6:#43         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #45 = Utf8               apply
   #46 = Utf8               ()Lscala/Function2;
   #47 = NameAndType        #45:#46       // apply:()Lscala/Function2;
   #48 = InvokeDynamic      #0:#47        // #0:apply:()Lscala/Function2;
   #49 = NameAndType        #15:#16       // Sequencer0:(Lscala/Function2;)Ljava/lang/Object;
   #50 = InterfaceMethodref #2.#49        // coursier/core/shaded/fastparse/LowestPriSequencer.Sequencer0:(Lscala/Function2;)Ljava/lang/Object;
   #51 = Utf8               this
   #52 = Utf8               x0$1
   #53 = Utf8               x1$1
   #54 = Utf8               scala/Tuple2
   #55 = Class              #54           // scala/Tuple2
   #56 = Utf8               <init>
   #57 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #58 = NameAndType        #56:#57       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #59 = Methodref          #55.#58       // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #60 = Utf8               _1
   #61 = NameAndType        #60:#23       // _1:()Ljava/lang/Object;
   #62 = Methodref          #55.#61       // scala/Tuple2._1:()Ljava/lang/Object;
   #63 = Utf8               _2
   #64 = NameAndType        #63:#23       // _2:()Ljava/lang/Object;
   #65 = Methodref          #55.#64       // scala/Tuple2._2:()Ljava/lang/Object;
   #66 = Utf8               scala/MatchError
   #67 = Class              #66           // scala/MatchError
   #68 = Utf8               (Ljava/lang/Object;)V
   #69 = NameAndType        #56:#68       // "<init>":(Ljava/lang/Object;)V
   #70 = Methodref          #67.#69       // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #71 = Utf8               t1
   #72 = Utf8               Ljava/lang/Object;
   #73 = Utf8               t2
   #74 = Utf8               $init$
   #75 = Utf8               (Lcoursier/core/shaded/fastparse/LowestPriSequencer;)V
   #76 = Utf8               $deserializeLambda$
   #77 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #78 = Utf8               scala/runtime/LambdaDeserialize
   #79 = Class              #78           // scala/runtime/LambdaDeserialize
   #80 = Utf8               bootstrap
   #81 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #82 = NameAndType        #80:#81       // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #83 = Methodref          #79.#82       // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #84 = MethodHandle       6:#83         // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
   #85 = Utf8               lambdaDeserialize
   #86 = NameAndType        #85:#77       // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #87 = InvokeDynamic      #1:#86        // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
   #88 = Utf8               Signature
   #89 = Utf8               MethodParameters
   #90 = Utf8               Code
   #91 = Utf8               LineNumberTable
   #92 = Utf8               LocalVariableTable
   #93 = Utf8               StackMapTable
   #94 = Utf8               InnerClasses
   #95 = Utf8               SourceFile
   #96 = Utf8               RuntimeVisibleAnnotations
   #97 = Utf8               BootstrapMethods
   #98 = Utf8               ScalaInlineInfo
   #99 = Utf8               ScalaSig
{
  public abstract <A extends java.lang.Object, B extends java.lang.Object, C extends java.lang.Object> Sequencer Sequencer0(scala.Function2<A, B, C>);
    descriptor: (Lscala/Function2;)Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #17                          // <A:Ljava/lang/Object;B:Ljava/lang/Object;C:Ljava/lang/Object;>(Lscala/Function2<TA;TB;TC;>;)TSequencer;
    MethodParameters:
      Name                           Flags
      f                              final

  public static java.lang.Object Sequencer1$(coursier.core.shaded.fastparse.LowestPriSequencer);
    descriptor: (Lcoursier/core/shaded/fastparse/LowestPriSequencer;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #25                 // InterfaceMethod Sequencer1:()Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/core/shaded/fastparse/LowestPriSequencer;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default <T1 extends java.lang.Object, T2 extends java.lang.Object> Sequencer Sequencer1();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #48,  0             // InvokeDynamic #0:apply:()Lscala/Function2;
         6: invokeinterface #50,  2           // InterfaceMethod Sequencer0:(Lscala/Function2;)Ljava/lang/Object;
        11: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/core/shaded/fastparse/LowestPriSequencer;
    Signature: #27                          // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;>()TSequencer;

  public static scala.Tuple2 $anonfun$Sequencer1$1(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=6, args_size=2
         0: new           #55                 // class scala/Tuple2
         3: dup
         4: aload_0
         5: aload_1
         6: invokespecial #59                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
         9: astore_3
        10: aload_3
        11: ifnull        41
        14: aload_3
        15: invokevirtual #62                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: astore        4
        20: aload_3
        21: invokevirtual #65                 // Method scala/Tuple2._2:()Ljava/lang/Object;
        24: astore        5
        26: new           #55                 // class scala/Tuple2
        29: dup
        30: aload         4
        32: aload         5
        34: invokespecial #59                 // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        37: astore_2
        38: goto          53
        41: goto          44
        44: new           #67                 // class scala/MatchError
        47: dup
        48: aload_3
        49: invokespecial #70                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        52: athrow
        53: aload_2
        54: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object, class scala/Tuple2, class scala/Tuple2, class java/lang/Object, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      23     4    t1   Ljava/lang/Object;
           24      17     5    t2   Ljava/lang/Object;
            0      55     0  x0$1   Ljava/lang/Object;
            0      55     1  x1$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x0$1                           final
      x1$1                           final

  public static void $init$(coursier.core.shaded.fastparse.LowestPriSequencer);
    descriptor: (Lcoursier/core/shaded/fastparse/LowestPriSequencer;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lcoursier/core/shaded/fastparse/LowestPriSequencer;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #87,  0             // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <Sequencer:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "SequencerGen.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\r3q\u0001B\u0003\u0011\u0002\u0007\u0005\u0001\u0002C\u0003\u0011\u0001\u0011\u0005\u0011\u0003\u0003\u0004\u0016\u0001\u00016\tB\u0006\u0005\u0006m\u0001!\u0019a\u000e\u0002\u0013\u0019><Xm\u001d;Qe&\u001cV-];f]\u000e,\'OC\u0001\u0007\u0003%1\u0017m\u001d;qCJ\u001cXm\u0001\u0001\u0016\u0005%Q2C\u0001\u0001\u000b!\tYa\"D\u0001\r\u0015\u0005i\u0011!B:dC2\f\u0017BA\b\r\u0005\u0019\te.\u001f*fM\u00061A%\u001b8ji\u0012\"\u0012A\u0005\t\u0003\u0017MI!\u0001\u0006\u0007\u0003\tUs\u0017\u000e^\u0001\u000b\'\u0016\fX/\u001a8dKJ\u0004T\u0003B\f*Y=\"\"\u0001G\u0019\u0011\u000beQ\u0002f\u000b\u0018\r\u0001\u0011)1\u0004\u0001b\u00019\tI1+Z9vK:\u001cWM]\u000b\u0005;\u00112s%\u0005\u0002\u001fCA\u00111bH\u0005\u0003A1\u0011qAT8uQ&tw\r\u0005\u0002\fE%\u00111\u0005\u0004\u0002\u0004\u0003:LH!B\u0013\u001b\u0005\u0004i\"!A0\u0005\u000b\u0015R\"\u0019A\u000f\u0005\u000b\u0015R\"\u0019A\u000f\u0011\u0005eIC!\u0002\u0016\u0003\u0005\u0004i\"!A!\u0011\u0005eaC!B\u0017\u0003\u0005\u0004i\"!\u0001\"\u0011\u0005eyC!\u0002\u0019\u0003\u0005\u0004i\"!A\"\t\u000bI\u0012\u0001\u0019A\u001a\u0002\u0003\u0019\u0004Ra\u0003\u001b)W9J!!\u000e\u0007\u0003\u0013\u0019+hn\u0019;j_:\u0014\u0014AC*fcV,gnY3scU\u0019\u0001h\u000f \u0016\u0003e\u0002R!\u0007\u000e;{\u0001\u0003\"!G\u001e\u0005\u000bq\u001a!\u0019A\u000f\u0003\u0005Q\u000b\u0004CA\r?\t\u0015y4A1\u0001\u001e\u0005\t!&\u0007\u0005\u0003\f\u0003jj\u0014B\u0001\"\r\u0005\u0019!V\u000f\u001d7fe\u0001"
    )
BootstrapMethods:
  0: #44 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #29 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #34 REF_invokeStatic coursier/core/shaded/fastparse/LowestPriSequencer.$anonfun$Sequencer1$1:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      #35 (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      #36 5
      #37 1
      #35 (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  1: #84 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #34 REF_invokeStatic coursier/core/shaded/fastparse/LowestPriSequencer.$anonfun$Sequencer1$1:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 00 00 05 00 1E 00 1F 01 00 4A 00 4B 01 00 0F
   00 10 00 00 16 00 17 00 00 13 00 14 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
