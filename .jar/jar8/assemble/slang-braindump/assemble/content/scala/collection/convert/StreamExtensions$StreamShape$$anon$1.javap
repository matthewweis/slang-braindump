Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$StreamShape$$anon$1.class
  Last modified May 29, 2022; size 1928 bytes
  SHA-256 checksum ed0d887f2c2848fc2f1719c98521b150722f5f0d6f55639939604d053a2fe838
  Compiled from "StreamExtensions.scala"
public final class scala.collection.convert.StreamExtensions$StreamShape$$anon$1 extends java.lang.Object implements scala.collection.convert.StreamExtensions$StreamShape<T, java.util.stream.IntStream, scala.collection.IntStepper>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$StreamShape$$anon$1
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 4, attributes: 6
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$StreamShape$$anon$1
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$StreamShape$$anon$1
   #3 = Utf8               Ljava/lang/Object;Lscala/collection/convert/StreamExtensions$StreamShape<TT;Ljava/util/stream/IntStream;Lscala/collection/IntStepper;>;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
   #7 = Class              #6             // scala/collection/convert/StreamExtensions$StreamShape
   #8 = Utf8               StreamExtensions.scala
   #9 = Utf8               scala/collection/convert/StreamExtensions$StreamShape$
  #10 = Class              #9             // scala/collection/convert/StreamExtensions$StreamShape$
  #11 = Utf8               mkIntStreamShape
  #12 = Utf8               ()Lscala/collection/convert/StreamExtensions$StreamShape;
  #13 = NameAndType        #11:#12        // mkIntStreamShape:()Lscala/collection/convert/StreamExtensions$StreamShape;
  #14 = Utf8               java/util/Spliterator$OfInt
  #15 = Class              #14            // java/util/Spliterator$OfInt
  #16 = Utf8               java/util/Spliterator
  #17 = Class              #16            // java/util/Spliterator
  #18 = Utf8               OfInt
  #19 = Utf8               scala/collection/convert/StreamExtensions
  #20 = Class              #19            // scala/collection/convert/StreamExtensions
  #21 = Utf8               StreamShape
  #22 = Utf8               StreamShape$
  #23 = Utf8               fromStepper
  #24 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #25 = Utf8               st
  #26 = Utf8               par
  #27 = Utf8               fromStepper$
  #28 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #29 = NameAndType        #27:#28        // fromStepper$:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #30 = InterfaceMethodref #7.#29         // scala/collection/convert/StreamExtensions$StreamShape.fromStepper$:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #31 = Utf8               this
  #32 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape$$anon$1;
  #33 = Utf8               Lscala/collection/Stepper;
  #34 = Utf8               Z
  #35 = Utf8               mkStream
  #36 = Utf8               (Lscala/collection/IntStepper;Z)Ljava/util/stream/IntStream;
  #37 = Utf8               scala/collection/IntStepper
  #38 = Class              #37            // scala/collection/IntStepper
  #39 = Utf8               spliterator
  #40 = Utf8               ()Ljava/util/Spliterator$OfInt;
  #41 = NameAndType        #39:#40        // spliterator:()Ljava/util/Spliterator$OfInt;
  #42 = InterfaceMethodref #38.#41        // scala/collection/IntStepper.spliterator:()Ljava/util/Spliterator$OfInt;
  #43 = Utf8               java/util/stream/StreamSupport
  #44 = Class              #43            // java/util/stream/StreamSupport
  #45 = Utf8               intStream
  #46 = Utf8               (Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
  #47 = NameAndType        #45:#46        // intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
  #48 = Methodref          #44.#47        // java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
  #49 = Utf8               Lscala/collection/IntStepper;
  #50 = NameAndType        #35:#36        // mkStream:(Lscala/collection/IntStepper;Z)Ljava/util/stream/IntStream;
  #51 = Methodref          #2.#50         // scala/collection/convert/StreamExtensions$StreamShape$$anon$1.mkStream:(Lscala/collection/IntStepper;Z)Ljava/util/stream/IntStream;
  #52 = Utf8               <init>
  #53 = Utf8               ()V
  #54 = NameAndType        #52:#53        // "<init>":()V
  #55 = Methodref          #5.#54         // java/lang/Object."<init>":()V
  #56 = Utf8               Code
  #57 = Utf8               LineNumberTable
  #58 = Utf8               LocalVariableTable
  #59 = Utf8               MethodParameters
  #60 = Utf8               InnerClasses
  #61 = Utf8               EnclosingMethod
  #62 = Utf8               Signature
  #63 = Utf8               SourceFile
  #64 = Utf8               ScalaInlineInfo
  #65 = Utf8               Scala
{
  public final java.util.stream.BaseStream fromStepper(scala.collection.Stepper, boolean);
    descriptor: (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokestatic  #30                 // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.fromStepper$:(Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
         6: areturn
      LineNumberTable:
        line 394: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/StreamExtensions$StreamShape$$anon$1;
            0       7     1    st   Lscala/collection/Stepper;
            0       7     2   par   Z
    MethodParameters:
      Name                           Flags
      st                             final
      par                            final

  public java.util.stream.IntStream mkStream(scala.collection.IntStepper, boolean);
    descriptor: (Lscala/collection/IntStepper;Z)Ljava/util/stream/IntStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: invokeinterface #42,  1           // InterfaceMethod scala/collection/IntStepper.spliterator:()Ljava/util/Spliterator$OfInt;
         6: iload_2
         7: invokestatic  #48                 // Method java/util/stream/StreamSupport.intStream:(Ljava/util/Spliterator$OfInt;Z)Ljava/util/stream/IntStream;
        10: areturn
      LineNumberTable:
        line 395: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/convert/StreamExtensions$StreamShape$$anon$1;
            0      11     1    st   Lscala/collection/IntStepper;
            0      11     2   par   Z
    MethodParameters:
      Name                           Flags
      st                             final
      par                            final

  public java.util.stream.BaseStream mkStream(scala.collection.Stepper, boolean);
    descriptor: (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #38                 // class scala/collection/IntStepper
         5: iload_2
         6: invokevirtual #51                 // Method mkStream:(Lscala/collection/IntStepper;Z)Ljava/util/stream/IntStream;
         9: areturn
      LineNumberTable:
        line 394: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/StreamExtensions$StreamShape$$anon$1;
            0      10     1    st   Lscala/collection/Stepper;
            0      10     2   par   Z
    MethodParameters:
      Name                           Flags
      st                             final
      par                            final

  public scala.collection.convert.StreamExtensions$StreamShape$$anon$1();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #55                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 394: 0
        line 394: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$StreamShape$$anon$1;
}
InnerClasses:
  public static #18= #15 of #17;          // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
  public static #21= #7 of #20;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
  public static #22= #10 of #20;          // StreamShape$=class scala/collection/convert/StreamExtensions$StreamShape$ of class scala/collection/convert/StreamExtensions
  public final #2;                        // class scala/collection/convert/StreamExtensions$StreamShape$$anon$1
EnclosingMethod: #10.#13                // scala.collection.convert.StreamExtensions$StreamShape$.mkIntStreamShape
Signature: #3                           // Ljava/lang/Object;Lscala/collection/convert/StreamExtensions$StreamShape<TT;Ljava/util/stream/IntStream;Lscala/collection/IntStepper;>;
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 01 00 04 00 34 00 35 01 00 17 00 18 01 00 23
   00 24 01 00 23 00 18 01
  Scala: length = 0x0 (unknown attribute)

