Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper.class
  Last modified May 29, 2022; size 7014 bytes
  SHA-256 checksum a4816d46f5772a4cfd0ac604d6d5f8786975b86c73f3d7ab192259711d6c115a
  Compiled from "JavaCollectionWrappers.scala"
public class scala.collection.convert.JavaCollectionWrappers$JConcurrentMapWrapper<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.convert.JavaCollectionWrappers$AbstractJMapWrapper<K, V> implements scala.collection.concurrent.Map<K, V>, scala.Product
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper
  super_class: #5                         // scala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper
  interfaces: 2, fields: 2, methods: 27, attributes: 5
Constant pool:
    #1 = Utf8               scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper
    #2 = Class              #1            // scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper<TK;TV;>;Lscala/collection/concurrent/Map<TK;TV;>;Lscala/Product;
    #4 = Utf8               scala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper
    #5 = Class              #4            // scala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper
    #6 = Utf8               scala/collection/concurrent/Map
    #7 = Class              #6            // scala/collection/concurrent/Map
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               JavaCollectionWrappers.scala
   #11 = Utf8               scala/collection/convert/JavaCollectionWrappers
   #12 = Class              #11           // scala/collection/convert/JavaCollectionWrappers
   #13 = Utf8               AbstractJMapWrapper
   #14 = Utf8               JConcurrentMapWrapper
   #15 = Utf8               scala/runtime/ScalaRunTime$$anon$1
   #16 = Class              #15           // scala/runtime/ScalaRunTime$$anon$1
   #17 = Utf8               serialVersionUID
   #18 = Utf8               J
   #19 = Long               3l
   #21 = Utf8               underlying
   #22 = Utf8               Ljava/util/concurrent/ConcurrentMap;
   #23 = Utf8               Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
   #24 = Utf8               productElementNames
   #25 = Utf8               ()Lscala/collection/Iterator;
   #26 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #27 = Utf8               productElementNames$
   #28 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #29 = NameAndType        #27:#28       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #30 = InterfaceMethodref #9.#29        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #31 = Utf8               this
   #32 = Utf8               Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
   #33 = Utf8               getOrElseUpdate
   #34 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #35 = Utf8               (TK;Lscala/Function0<TV;>;)TV;
   #36 = Utf8               key
   #37 = Utf8               op
   #38 = Utf8               getOrElseUpdate$
   #39 = Utf8               (Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #40 = NameAndType        #38:#39       // getOrElseUpdate$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #41 = InterfaceMethodref #7.#40        // scala/collection/concurrent/Map.getOrElseUpdate$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
   #42 = Utf8               Ljava/lang/Object;
   #43 = Utf8               Lscala/Function0;
   #44 = Utf8               removeRefEq
   #45 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #46 = Utf8               (TK;TV;)Z
   #47 = Utf8               k
   #48 = Utf8               v
   #49 = Utf8               removeRefEq$
   #50 = Utf8               (Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;)Z
   #51 = NameAndType        #49:#50       // removeRefEq$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;)Z
   #52 = InterfaceMethodref #7.#51        // scala/collection/concurrent/Map.removeRefEq$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;)Z
   #53 = Utf8               replaceRefEq
   #54 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
   #55 = Utf8               (TK;TV;TV;)Z
   #56 = Utf8               oldValue
   #57 = Utf8               newValue
   #58 = Utf8               replaceRefEq$
   #59 = Utf8               (Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
   #60 = NameAndType        #58:#59       // replaceRefEq$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
   #61 = InterfaceMethodref #7.#60        // scala/collection/concurrent/Map.replaceRefEq$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
   #62 = Utf8               updateWith
   #63 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
   #64 = Utf8               (TK;Lscala/Function1<Lscala/Option<TV;>;Lscala/Option<TV;>;>;)Lscala/Option<TV;>;
   #65 = Utf8               remappingFunction
   #66 = Utf8               updateWith$
   #67 = Utf8               (Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
   #68 = NameAndType        #66:#67       // updateWith$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
   #69 = InterfaceMethodref #7.#68        // scala/collection/concurrent/Map.updateWith$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
   #70 = Utf8               Lscala/Function1;
   #71 = Utf8               filterInPlaceImpl
   #72 = Utf8               (Lscala/Function2;)Lscala/collection/concurrent/Map;
   #73 = Utf8               (Lscala/Function2<TK;TV;Ljava/lang/Object;>;)Lscala/collection/concurrent/Map<TK;TV;>;
   #74 = Utf8               p
   #75 = Utf8               filterInPlaceImpl$
   #76 = Utf8               (Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
   #77 = NameAndType        #75:#76       // filterInPlaceImpl$:(Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
   #78 = InterfaceMethodref #7.#77        // scala/collection/concurrent/Map.filterInPlaceImpl$:(Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
   #79 = Utf8               Lscala/Function2;
   #80 = Utf8               mapValuesInPlaceImpl
   #81 = Utf8               (Lscala/Function2<TK;TV;TV;>;)Lscala/collection/concurrent/Map<TK;TV;>;
   #82 = Utf8               f
   #83 = Utf8               mapValuesInPlaceImpl$
   #84 = NameAndType        #83:#76       // mapValuesInPlaceImpl$:(Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
   #85 = InterfaceMethodref #7.#84        // scala/collection/concurrent/Map.mapValuesInPlaceImpl$:(Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
   #86 = Utf8               ()Ljava/util/concurrent/ConcurrentMap;
   #87 = Utf8               ()Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
   #88 = NameAndType        #21:#22       // underlying:Ljava/util/concurrent/ConcurrentMap;
   #89 = Fieldref           #2.#88        // scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper.underlying:Ljava/util/concurrent/ConcurrentMap;
   #90 = Utf8               get
   #91 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #92 = Utf8               (TK;)Lscala/Option<TV;>;
   #93 = Utf8               scala/Option$
   #94 = Class              #93           // scala/Option$
   #95 = Utf8               MODULE$
   #96 = Utf8               Lscala/Option$;
   #97 = NameAndType        #95:#96       // MODULE$:Lscala/Option$;
   #98 = Fieldref           #94.#97       // scala/Option$.MODULE$:Lscala/Option$;
   #99 = NameAndType        #21:#86       // underlying:()Ljava/util/concurrent/ConcurrentMap;
  #100 = Methodref          #2.#99        // scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper.underlying:()Ljava/util/concurrent/ConcurrentMap;
  #101 = Utf8               java/util/concurrent/ConcurrentMap
  #102 = Class              #101          // java/util/concurrent/ConcurrentMap
  #103 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #104 = NameAndType        #90:#103      // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #105 = InterfaceMethodref #102.#104     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
  #106 = Utf8               apply
  #107 = NameAndType        #106:#91      // apply:(Ljava/lang/Object;)Lscala/Option;
  #108 = Methodref          #94.#107      // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #109 = Utf8               isEmpty
  #110 = Utf8               ()Z
  #111 = NameAndType        #109:#110     // isEmpty:()Z
  #112 = InterfaceMethodref #102.#111     // java/util/concurrent/ConcurrentMap.isEmpty:()Z
  #113 = Utf8               knownSize
  #114 = Utf8               ()I
  #115 = Utf8               empty
  #116 = Utf8               ()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
  #117 = Utf8               ()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper<TK;TV;>;
  #118 = Utf8               java/util/concurrent/ConcurrentHashMap
  #119 = Class              #118          // java/util/concurrent/ConcurrentHashMap
  #120 = Utf8               <init>
  #121 = Utf8               ()V
  #122 = NameAndType        #120:#121     // "<init>":()V
  #123 = Methodref          #119.#122     // java/util/concurrent/ConcurrentHashMap."<init>":()V
  #124 = Utf8               (Ljava/util/concurrent/ConcurrentMap;)V
  #125 = NameAndType        #120:#124     // "<init>":(Ljava/util/concurrent/ConcurrentMap;)V
  #126 = Methodref          #2.#125       // scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper."<init>":(Ljava/util/concurrent/ConcurrentMap;)V
  #127 = Utf8               putIfAbsent
  #128 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
  #129 = Utf8               (TK;TV;)Lscala/Option<TV;>;
  #130 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #131 = NameAndType        #127:#130     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #132 = InterfaceMethodref #102.#131     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #133 = Utf8               remove
  #134 = NameAndType        #133:#45      // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #135 = InterfaceMethodref #102.#134     // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #136 = Utf8               replace
  #137 = NameAndType        #136:#130     // replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #138 = InterfaceMethodref #102.#137     // java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #139 = Utf8               oldvalue
  #140 = Utf8               newvalue
  #141 = NameAndType        #136:#54      // replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #142 = InterfaceMethodref #102.#141     // java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #143 = Utf8               copy
  #144 = Utf8               (Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
  #145 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;)Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper<TK;TV;>;
  #146 = Utf8               copy$default$1
  #147 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/concurrent/ConcurrentMap<TK;TV;>;
  #148 = Utf8               productPrefix
  #149 = Utf8               ()Ljava/lang/String;
  #150 = String             #14           // JConcurrentMapWrapper
  #151 = Utf8               productArity
  #152 = Utf8               productElement
  #153 = Utf8               (I)Ljava/lang/Object;
  #154 = Utf8               x$1
  #155 = Utf8               scala/runtime/Statics
  #156 = Class              #155          // scala/runtime/Statics
  #157 = Utf8               ioobe
  #158 = NameAndType        #157:#153     // ioobe:(I)Ljava/lang/Object;
  #159 = Methodref          #156.#158     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #160 = Utf8               I
  #161 = Utf8               productIterator
  #162 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #163 = Utf8               (Lscala/Product;)V
  #164 = NameAndType        #120:#163     // "<init>":(Lscala/Product;)V
  #165 = Methodref          #16.#164      // scala/runtime/ScalaRunTime$$anon$1."<init>":(Lscala/Product;)V
  #166 = Utf8               productElementName
  #167 = Utf8               (I)Ljava/lang/String;
  #168 = String             #21           // underlying
  #169 = Utf8               java/lang/String
  #170 = Class              #169          // java/lang/String
  #171 = Utf8               ()Ljava/lang/Object;
  #172 = NameAndType        #115:#116     // empty:()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
  #173 = Methodref          #2.#172       // scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper.empty:()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
  #174 = Utf8               ()Lscala/collection/IterableOps;
  #175 = Utf8               ()Ljava/util/Map;
  #176 = Utf8               (Ljava/util/concurrent/ConcurrentMap<TK;TV;>;)V
  #177 = Methodref          #5.#122       // scala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper."<init>":()V
  #178 = Utf8               ConstantValue
  #179 = Utf8               Signature
  #180 = Utf8               Code
  #181 = Utf8               LineNumberTable
  #182 = Utf8               LocalVariableTable
  #183 = Utf8               MethodParameters
  #184 = Utf8               StackMapTable
  #185 = Utf8               InnerClasses
  #186 = Utf8               SourceFile
  #187 = Utf8               ScalaInlineInfo
  #188 = Utf8               Scala
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 3l

  private final java.util.concurrent.ConcurrentMap<K, V> underlying;
    descriptor: Ljava/util/concurrent/ConcurrentMap;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #23                          // Ljava/util/concurrent/ConcurrentMap<TK;TV;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #30                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    Signature: #26                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public V getOrElseUpdate(K, scala.Function0<V>);
    descriptor: (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #41                 // InterfaceMethod scala/collection/concurrent/Map.getOrElseUpdate$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       7     1   key   Ljava/lang/Object;
            0       7     2    op   Lscala/Function0;
    Signature: #35                          // (TK;Lscala/Function0<TV;>;)TV;
    MethodParameters:
      Name                           Flags
      key                            final
      op                             final

  public boolean removeRefEq(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #52                 // InterfaceMethod scala/collection/concurrent/Map.removeRefEq$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ireturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       7     1     k   Ljava/lang/Object;
            0       7     2     v   Ljava/lang/Object;
    Signature: #46                          // (TK;TV;)Z
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public boolean replaceRefEq(K, V, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #61                 // InterfaceMethod scala/collection/concurrent/Map.replaceRefEq$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
         7: ireturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       8     1     k   Ljava/lang/Object;
            0       8     2 oldValue   Ljava/lang/Object;
            0       8     3 newValue   Ljava/lang/Object;
    Signature: #55                          // (TK;TV;TV;)Z
    MethodParameters:
      Name                           Flags
      k                              final
      oldValue                       final
      newValue                       final

  public scala.Option<V> updateWith(K, scala.Function1<scala.Option<V>, scala.Option<V>>);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #69                 // InterfaceMethod scala/collection/concurrent/Map.updateWith$:(Lscala/collection/concurrent/Map;Ljava/lang/Object;Lscala/Function1;)Lscala/Option;
         6: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       7     1   key   Ljava/lang/Object;
            0       7     2 remappingFunction   Lscala/Function1;
    Signature: #64                          // (TK;Lscala/Function1<Lscala/Option<TV;>;Lscala/Option<TV;>;>;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      key                            final
      remappingFunction              final

  public scala.collection.concurrent.Map<K, V> filterInPlaceImpl(scala.Function2<K, V, java.lang.Object>);
    descriptor: (Lscala/Function2;)Lscala/collection/concurrent/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #78                 // InterfaceMethod scala/collection/concurrent/Map.filterInPlaceImpl$:(Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
         5: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       6     1     p   Lscala/Function2;
    Signature: #73                          // (Lscala/Function2<TK;TV;Ljava/lang/Object;>;)Lscala/collection/concurrent/Map<TK;TV;>;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.concurrent.Map<K, V> mapValuesInPlaceImpl(scala.Function2<K, V, V>);
    descriptor: (Lscala/Function2;)Lscala/collection/concurrent/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #85                 // InterfaceMethod scala/collection/concurrent/Map.mapValuesInPlaceImpl$:(Lscala/collection/concurrent/Map;Lscala/Function2;)Lscala/collection/concurrent/Map;
         5: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       6     1     f   Lscala/Function2;
    Signature: #81                          // (Lscala/Function2<TK;TV;TV;>;)Lscala/collection/concurrent/Map<TK;TV;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public java.util.concurrent.ConcurrentMap<K, V> underlying();
    descriptor: ()Ljava/util/concurrent/ConcurrentMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #89                 // Field underlying:Ljava/util/concurrent/ConcurrentMap;
         4: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    Signature: #87                          // ()Ljava/util/concurrent/ConcurrentMap<TK;TV;>;

  public scala.Option<V> get(K);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #98                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         7: aload_1
         8: invokeinterface #105,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        13: invokevirtual #108                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        16: areturn
      LineNumberTable:
        line 415: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      17     1     k   Ljava/lang/Object;
    Signature: #92                          // (TK;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         4: invokeinterface #112,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
         9: ireturn
      LineNumberTable:
        line 417: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public int knownSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         4: invokeinterface #112,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.isEmpty:()Z
         9: ifeq          14
        12: iconst_0
        13: ireturn
        14: iconst_m1
        15: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 14 /* same */
      LineNumberTable:
        line 418: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public scala.collection.convert.JavaCollectionWrappers$JConcurrentMapWrapper<K, V> empty();
    descriptor: ()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #2                  // class scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper
         3: dup
         4: new           #119                // class java/util/concurrent/ConcurrentHashMap
         7: dup
         8: invokespecial #123                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
        11: invokespecial #126                // Method "<init>":(Ljava/util/concurrent/ConcurrentMap;)V
        14: areturn
      LineNumberTable:
        line 419: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    Signature: #117                         // ()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper<TK;TV;>;

  public scala.Option<V> putIfAbsent(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #98                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         7: aload_1
         8: aload_2
         9: invokeinterface #132,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        14: invokevirtual #108                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        17: areturn
      LineNumberTable:
        line 421: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      18     1     k   Ljava/lang/Object;
            0      18     2     v   Ljava/lang/Object;
    Signature: #129                         // (TK;TV;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public boolean remove(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         4: aload_1
         5: aload_2
         6: invokeinterface #135,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 423: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      12     1     k   Ljava/lang/Object;
            0      12     2     v   Ljava/lang/Object;
    Signature: #46                          // (TK;TV;)Z
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public scala.Option<V> replace(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #98                 // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         7: aload_1
         8: aload_2
         9: invokeinterface #138,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        14: invokevirtual #108                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        17: areturn
      LineNumberTable:
        line 425: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      18     1     k   Ljava/lang/Object;
            0      18     2     v   Ljava/lang/Object;
    Signature: #129                         // (TK;TV;)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      k                              final
      v                              final

  public boolean replace(K, V, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokeinterface #142,  4          // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
        12: ireturn
      LineNumberTable:
        line 428: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      13     1     k   Ljava/lang/Object;
            0      13     2 oldvalue   Ljava/lang/Object;
            0      13     3 newvalue   Ljava/lang/Object;
    Signature: #55                          // (TK;TV;TV;)Z
    MethodParameters:
      Name                           Flags
      k                              final
      oldvalue                       final
      newvalue                       final

  public <K extends java.lang.Object, V extends java.lang.Object> scala.collection.convert.JavaCollectionWrappers$JConcurrentMapWrapper<K, V> copy(java.util.concurrent.ConcurrentMap<K, V>);
    descriptor: (Ljava/util/concurrent/ConcurrentMap;)Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper
         3: dup
         4: aload_1
         5: invokespecial #126                // Method "<init>":(Ljava/util/concurrent/ConcurrentMap;)V
         8: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0       9     1 underlying   Ljava/util/concurrent/ConcurrentMap;
    Signature: #145                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;)Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper<TK;TV;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public <K extends java.lang.Object, V extends java.lang.Object> java.util.concurrent.ConcurrentMap<K, V> copy$default$1();
    descriptor: ()Ljava/util/concurrent/ConcurrentMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         4: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    Signature: #147                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/concurrent/ConcurrentMap<TK;TV;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #150                // String JConcurrentMapWrapper
         2: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: aload_0
        21: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
        24: areturn
        25: iload_1
        26: invokestatic  #159                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        29: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 4 /* same */
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      30     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #16                 // class scala/runtime/ScalaRunTime$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #165                // Method scala/runtime/ScalaRunTime$$anon$1."<init>":(Lscala/Product;)V
         8: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
    Signature: #162                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: tableswitch   { // 0 to 0
                       0: 20
                 default: 23
            }
        20: ldc           #168                // String underlying
        22: areturn
        23: iload_1
        24: invokestatic  #159                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        27: checkcast     #170                // class java/lang/String
        30: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      31     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object empty();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #173                // Method empty:()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
         4: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public scala.collection.IterableOps empty();
    descriptor: ()Lscala/collection/IterableOps;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #173                // Method empty:()Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
         4: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public java.util.Map underlying();
    descriptor: ()Ljava/util/Map;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method underlying:()Ljava/util/concurrent/ConcurrentMap;
         4: areturn
      LineNumberTable:
        line 411: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;

  public scala.collection.convert.JavaCollectionWrappers$JConcurrentMapWrapper(java.util.concurrent.ConcurrentMap<K, V>);
    descriptor: (Ljava/util/concurrent/ConcurrentMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #89                 // Field underlying:Ljava/util/concurrent/ConcurrentMap;
         5: aload_0
         6: invokespecial #177                // Method scala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper."<init>":()V
         9: return
      LineNumberTable:
        line 411: 0
        line 412: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper;
            0      10     1 underlying   Ljava/util/concurrent/ConcurrentMap;
    Signature: #176                         // (Ljava/util/concurrent/ConcurrentMap<TK;TV;>;)V
    MethodParameters:
      Name                           Flags
      underlying                     final
}
InnerClasses:
  public static abstract #13= #5 of #12;  // AbstractJMapWrapper=class scala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper of class scala/collection/convert/JavaCollectionWrappers
  public static #14= #2 of #12;           // JConcurrentMapWrapper=class scala/collection/convert/JavaCollectionWrappers$JConcurrentMapWrapper of class scala/collection/convert/JavaCollectionWrappers
  public final #16;                       // class scala/runtime/ScalaRunTime$$anon$1
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/convert/JavaCollectionWrappers$AbstractJMapWrapper<TK;TV;>;Lscala/collection/concurrent/Map<TK;TV;>;Lscala/Product;
SourceFile: "JavaCollectionWrappers.scala"
  ScalaInlineInfo: length = 0x8B (unknown attribute)
   01 00 00 1B 00 78 00 7C 00 00 8F 00 90 00 00 92
   00 56 00 00 73 00 AB 00 00 73 00 AE 00 00 73 00
   74 00 00 47 00 48 00 00 5A 00 5B 00 00 21 00 22
   00 00 6D 00 6E 00 00 71 00 72 00 00 50 00 48 00
   00 97 00 72 00 00 98 00 99 00 00 A6 00 A7 00 00
   18 00 19 00 00 A1 00 19 00 00 94 00 95 00 00 7F
   00 80 00 00 85 00 2D 00 00 2C 00 2D 00 00 88 00
   80 00 00 88 00 36 00 00 35 00 36 00 00 15 00 AF
   00 00 15 00 56 00 00 3E 00 3F 00
  Scala: length = 0x0 (unknown attribute)

