Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$CreateScanTree.class
  Last modified May 29, 2022; size 12856 bytes
  SHA-256 checksum 43e91e4d423b322b4b831fea7b6369d82279ca7118583ea5cff488e3eeb7c664
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$CreateScanTree<U extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Transformer<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.CreateScanTree<U>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$CreateScanTree
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 8, methods: 35, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$CreateScanTree
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$CreateScanTree
    #3 = Utf8               <U:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CreateScanTree<TU;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$Transformer
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$Transformer
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               CreateScanTree
   #20 = Utf8               scala/collection/parallel/ParIterableLike$ScanLeaf
   #21 = Class              #20           // scala/collection/parallel/ParIterableLike$ScanLeaf
   #22 = Utf8               ScanLeaf
   #23 = Utf8               scala/collection/parallel/ParIterableLike$ScanNode
   #24 = Class              #23           // scala/collection/parallel/ParIterableLike$ScanNode
   #25 = Utf8               ScanNode
   #26 = Utf8               scala/collection/parallel/ParIterableLike$ScanTree
   #27 = Class              #26           // scala/collection/parallel/ParIterableLike$ScanTree
   #28 = Utf8               ScanTree
   #29 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #30 = Class              #29           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #31 = Utf8               StrictSplitterCheckTask
   #32 = Utf8               Transformer
   #33 = Utf8               from
   #34 = Utf8               I
   #35 = Utf8               len
   #36 = Utf8               z
   #37 = Utf8               Ljava/lang/Object;
   #38 = Utf8               TU;
   #39 = Utf8               op
   #40 = Utf8               Lscala/Function2;
   #41 = Utf8               Lscala/Function2<TU;TU;TU;>;
   #42 = Utf8               pit
   #43 = Utf8               Lscala/collection/parallel/IterableSplitter;
   #44 = Utf8               Lscala/collection/parallel/IterableSplitter<TT;>;
   #45 = Utf8               result
   #46 = Utf8               Lscala/collection/parallel/ParIterableLike$ScanTree;
   #47 = Utf8               Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
   #48 = Utf8               throwable
   #49 = Utf8               Ljava/lang/Throwable;
   #50 = Utf8               $outer
   #51 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #52 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #53 = Utf8               ()Ljava/lang/String;
   #54 = Utf8               toString
   #55 = NameAndType        #54:#53       // toString:()Ljava/lang/String;
   #56 = Methodref          #5.#55        // java/lang/Object.toString:()Ljava/lang/String;
   #57 = Utf8               this
   #58 = Utf8               Lscala/collection/parallel/ParIterableLike$CreateScanTree;
   #59 = Utf8               shouldSplitFurther
   #60 = Utf8               ()Z
   #61 = Utf8               shouldSplitFurther$
   #62 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #63 = NameAndType        #61:#62       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #64 = InterfaceMethodref #15.#63       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #65 = Utf8               signalAbort
   #66 = Utf8               ()V
   #67 = Utf8               signalAbort$
   #68 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #69 = NameAndType        #67:#68       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #70 = InterfaceMethodref #15.#69       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #71 = Utf8               toString$
   #72 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #73 = NameAndType        #71:#72       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #74 = InterfaceMethodref #15.#73       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #75 = Utf8               repr
   #76 = Utf8               ()Ljava/lang/Object;
   #77 = Utf8               scala/collection/parallel/Task
   #78 = Class              #77           // scala/collection/parallel/Task
   #79 = Utf8               repr$
   #80 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #81 = NameAndType        #79:#80       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #82 = InterfaceMethodref #78.#81       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #83 = Utf8               forwardThrowable
   #84 = Utf8               forwardThrowable$
   #85 = Utf8               (Lscala/collection/parallel/Task;)V
   #86 = NameAndType        #84:#85       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #87 = InterfaceMethodref #78.#86       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #88 = Utf8               tryLeaf
   #89 = Utf8               (Lscala/Option;)V
   #90 = Utf8               (Lscala/Option<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;>;)V
   #91 = Utf8               lastres
   #92 = Utf8               tryLeaf$
   #93 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #94 = NameAndType        #92:#93       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #95 = InterfaceMethodref #78.#94       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #96 = Utf8               Lscala/Option;
   #97 = Utf8               tryMerge
   #98 = Utf8               (Ljava/lang/Object;)V
   #99 = Utf8               t
  #100 = Utf8               tryMerge$
  #101 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #102 = NameAndType        #100:#101     // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #103 = InterfaceMethodref #78.#102      // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #104 = Utf8               mergeThrowables
  #105 = Utf8               (Lscala/collection/parallel/Task<**>;)V
  #106 = Utf8               that
  #107 = Utf8               mergeThrowables$
  #108 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #109 = NameAndType        #107:#108     // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #110 = InterfaceMethodref #78.#109      // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #111 = Utf8               Lscala/collection/parallel/Task;
  #112 = Utf8               ()Ljava/lang/Throwable;
  #113 = NameAndType        #48:#49       // throwable:Ljava/lang/Throwable;
  #114 = Fieldref           #2.#113       // scala/collection/parallel/ParIterableLike$CreateScanTree.throwable:Ljava/lang/Throwable;
  #115 = Utf8               throwable_$eq
  #116 = Utf8               (Ljava/lang/Throwable;)V
  #117 = Utf8               x$1
  #118 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #119 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
  #120 = NameAndType        #42:#43       // pit:Lscala/collection/parallel/IterableSplitter;
  #121 = Fieldref           #2.#120       // scala/collection/parallel/ParIterableLike$CreateScanTree.pit:Lscala/collection/parallel/IterableSplitter;
  #122 = Utf8               ()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #123 = Utf8               ()Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
  #124 = NameAndType        #45:#46       // result:Lscala/collection/parallel/ParIterableLike$ScanTree;
  #125 = Fieldref           #2.#124       // scala/collection/parallel/ParIterableLike$CreateScanTree.result:Lscala/collection/parallel/ParIterableLike$ScanTree;
  #126 = Utf8               result_$eq
  #127 = Utf8               (Lscala/collection/parallel/ParIterableLike$ScanTree;)V
  #128 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;)V
  #129 = Utf8               leaf
  #130 = Utf8               prev
  #131 = NameAndType        #42:#118      // pit:()Lscala/collection/parallel/IterableSplitter;
  #132 = Methodref          #2.#131       // scala/collection/parallel/ParIterableLike$CreateScanTree.pit:()Lscala/collection/parallel/IterableSplitter;
  #133 = Utf8               scala/collection/parallel/IterableSplitter
  #134 = Class              #133          // scala/collection/parallel/IterableSplitter
  #135 = Utf8               remaining
  #136 = Utf8               ()I
  #137 = NameAndType        #135:#136     // remaining:()I
  #138 = InterfaceMethodref #134.#137     // scala/collection/parallel/IterableSplitter.remaining:()I
  #139 = Utf8               scala/collection/mutable/ArrayBuffer$
  #140 = Class              #139          // scala/collection/mutable/ArrayBuffer$
  #141 = Utf8               MODULE$
  #142 = Utf8               Lscala/collection/mutable/ArrayBuffer$;
  #143 = NameAndType        #141:#142     // MODULE$:Lscala/collection/mutable/ArrayBuffer$;
  #144 = Fieldref           #140.#143     // scala/collection/mutable/ArrayBuffer$.MODULE$:Lscala/collection/mutable/ArrayBuffer$;
  #145 = Utf8               scala/collection/immutable/Nil$
  #146 = Class              #145          // scala/collection/immutable/Nil$
  #147 = Utf8               Lscala/collection/immutable/Nil$;
  #148 = NameAndType        #141:#147     // MODULE$:Lscala/collection/immutable/Nil$;
  #149 = Fieldref           #146.#148     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #150 = Utf8               apply
  #151 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #152 = NameAndType        #150:#151     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #153 = Methodref          #140.#152     // scala/collection/mutable/ArrayBuffer$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #154 = Utf8               scala/collection/mutable/ArrayBuffer
  #155 = Class              #154          // scala/collection/mutable/ArrayBuffer
  #156 = NameAndType        #33:#34       // from:I
  #157 = Fieldref           #2.#156       // scala/collection/parallel/ParIterableLike$CreateScanTree.from:I
  #158 = NameAndType        #35:#34       // len:I
  #159 = Fieldref           #2.#158       // scala/collection/parallel/ParIterableLike$CreateScanTree.len:I
  #160 = Utf8               scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer
  #161 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #162 = NameAndType        #160:#161     // scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #163 = Methodref          #2.#162       // scala/collection/parallel/ParIterableLike$CreateScanTree.scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #164 = Utf8               scanBlockSize
  #165 = NameAndType        #164:#136     // scanBlockSize:()I
  #166 = InterfaceMethodref #17.#165      // scala/collection/parallel/ParIterableLike.scanBlockSize:()I
  #167 = Utf8               scala/math/package$
  #168 = Class              #167          // scala/math/package$
  #169 = Utf8               Lscala/math/package$;
  #170 = NameAndType        #141:#169     // MODULE$:Lscala/math/package$;
  #171 = Fieldref           #168.#170     // scala/math/package$.MODULE$:Lscala/math/package$;
  #172 = Utf8               min
  #173 = Utf8               (II)I
  #174 = NameAndType        #172:#173     // min:(II)I
  #175 = Methodref          #168.#174     // scala/math/package$.min:(II)I
  #176 = Utf8               scanBlock
  #177 = Utf8               (II)Lscala/collection/parallel/ParIterableLike$ScanTree;
  #178 = NameAndType        #176:#177     // scanBlock:(II)Lscala/collection/parallel/ParIterableLike$ScanTree;
  #179 = Methodref          #2.#178       // scala/collection/parallel/ParIterableLike$CreateScanTree.scanBlock:(II)Lscala/collection/parallel/ParIterableLike$ScanTree;
  #180 = Utf8               $plus$eq
  #181 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #182 = NameAndType        #180:#181     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #183 = Methodref          #155.#182     // scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #184 = Utf8               length
  #185 = NameAndType        #184:#136     // length:()I
  #186 = Methodref          #155.#185     // scala/collection/mutable/ArrayBuffer.length:()I
  #187 = Utf8               mergeTrees
  #188 = Utf8               (Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
  #189 = NameAndType        #187:#188     // mergeTrees:(Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
  #190 = Methodref          #2.#189       // scala/collection/parallel/ParIterableLike$CreateScanTree.mergeTrees:(Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
  #191 = NameAndType        #126:#127     // result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
  #192 = Methodref          #2.#191       // scala/collection/parallel/ParIterableLike$CreateScanTree.result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
  #193 = Utf8               trees
  #194 = Utf8               Lscala/collection/mutable/ArrayBuffer;
  #195 = Utf8               i
  #196 = Utf8               until
  #197 = Utf8               blocksize
  #198 = Utf8               scala/Option
  #199 = Class              #198          // scala/Option
  #200 = Utf8               (II)Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
  #201 = Utf8               dup
  #202 = NameAndType        #201:#118     // dup:()Lscala/collection/parallel/IterableSplitter;
  #203 = InterfaceMethodref #134.#202     // scala/collection/parallel/IterableSplitter.dup:()Lscala/collection/parallel/IterableSplitter;
  #204 = NameAndType        #39:#40       // op:Lscala/Function2;
  #205 = Fieldref           #2.#204       // scala/collection/parallel/ParIterableLike$CreateScanTree.op:Lscala/Function2;
  #206 = Utf8               scala/None$
  #207 = Class              #206          // scala/None$
  #208 = Utf8               Lscala/None$;
  #209 = NameAndType        #141:#208     // MODULE$:Lscala/None$;
  #210 = Fieldref           #207.#209     // scala/None$.MODULE$:Lscala/None$;
  #211 = Utf8               reduceLeft
  #212 = Utf8               (ILscala/Function2;)Ljava/lang/Object;
  #213 = NameAndType        #211:#212     // reduceLeft:(ILscala/Function2;)Ljava/lang/Object;
  #214 = InterfaceMethodref #134.#213     // scala/collection/parallel/IterableSplitter.reduceLeft:(ILscala/Function2;)Ljava/lang/Object;
  #215 = Utf8               <init>
  #216 = Utf8               (Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/IterableSplitter;Lscala/Function2;IILscala/Option;Ljava/lang/Object;)V
  #217 = NameAndType        #215:#216     // "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/IterableSplitter;Lscala/Function2;IILscala/Option;Ljava/lang/Object;)V
  #218 = Methodref          #21.#217      // scala/collection/parallel/ParIterableLike$ScanLeaf."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/IterableSplitter;Lscala/Function2;IILscala/Option;Ljava/lang/Object;)V
  #219 = Utf8               pitdup
  #220 = Utf8               (Lscala/collection/mutable/ArrayBuffer<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;>;II)Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
  #221 = Utf8               howmany
  #222 = Utf8               (Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/ParIterableLike$ScanTree;)V
  #223 = NameAndType        #215:#222     // "<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/ParIterableLike$ScanTree;)V
  #224 = Methodref          #24.#223      // scala/collection/parallel/ParIterableLike$ScanNode."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/ParIterableLike$ScanTree;)V
  #225 = Utf8               (I)Ljava/lang/Object;
  #226 = NameAndType        #150:#225     // apply:(I)Ljava/lang/Object;
  #227 = Methodref          #155.#226     // scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
  #228 = Utf8               half
  #229 = Utf8               newSubtask
  #230 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #231 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #232 = Utf8               java/lang/UnsupportedOperationException
  #233 = Class              #232          // java/lang/UnsupportedOperationException
  #234 = NameAndType        #215:#66      // "<init>":()V
  #235 = Methodref          #233.#234     // java/lang/UnsupportedOperationException."<init>":()V
  #236 = Utf8               split
  #237 = Utf8               ()Lscala/collection/immutable/Seq;
  #238 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CreateScanTree<TU;>;>;>;
  #239 = Utf8               splitWithSignalling
  #240 = NameAndType        #239:#237     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #241 = InterfaceMethodref #134.#240     // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #242 = Utf8               scala/runtime/BoxesRunTime
  #243 = Class              #242          // scala/runtime/BoxesRunTime
  #244 = Utf8               boxToInteger
  #245 = Utf8               (I)Ljava/lang/Integer;
  #246 = NameAndType        #244:#245     // boxToInteger:(I)Ljava/lang/Integer;
  #247 = Methodref          #243.#246     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #248 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #249 = MethodType         #248          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #250 = Utf8               $anonfun$split$31$adapted
  #251 = Utf8               (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #252 = NameAndType        #250:#251     // $anonfun$split$31$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #253 = Methodref          #2.#252       // scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$31$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #254 = MethodHandle       6:#253        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$31$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #255 = MethodType         #251          //  (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #256 = Integer            5
  #257 = Integer            1
  #258 = Utf8               java/lang/invoke/LambdaMetafactory
  #259 = Class              #258          // java/lang/invoke/LambdaMetafactory
  #260 = Utf8               altMetafactory
  #261 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #262 = NameAndType        #260:#261     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #263 = Methodref          #259.#262     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #264 = MethodHandle       6:#263        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #265 = Utf8               ()Lscala/Function2;
  #266 = NameAndType        #150:#265     // apply:()Lscala/Function2;
  #267 = InvokeDynamic      #0:#266       // #0:apply:()Lscala/Function2;
  #268 = Utf8               scala/collection/immutable/Seq
  #269 = Class              #268          // scala/collection/immutable/Seq
  #270 = Utf8               scanLeft
  #271 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #272 = NameAndType        #270:#271     // scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #273 = InterfaceMethodref #269.#272     // scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
  #274 = Utf8               scala/collection/IterableOnce
  #275 = Class              #274          // scala/collection/IterableOnce
  #276 = Utf8               zip
  #277 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #278 = NameAndType        #276:#277     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #279 = InterfaceMethodref #269.#278     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #280 = Utf8               scala/collection/IterableOps
  #281 = Class              #280          // scala/collection/IterableOps
  #282 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #283 = MethodType         #282          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #284 = Utf8               $anonfun$split$32$adapted
  #285 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #286 = NameAndType        #284:#285     // $anonfun$split$32$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #287 = Methodref          #2.#286       // scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$32$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #288 = MethodHandle       6:#287        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$32$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #289 = MethodType         #285          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #290 = Utf8               ()Lscala/Function1;
  #291 = NameAndType        #150:#290     // apply:()Lscala/Function1;
  #292 = InvokeDynamic      #1:#291       // #1:apply:()Lscala/Function1;
  #293 = Utf8               withFilter
  #294 = Utf8               (Lscala/Function1;)Lscala/collection/WithFilter;
  #295 = NameAndType        #293:#294     // withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #296 = InterfaceMethodref #281.#295     // scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
  #297 = Utf8               $anonfun$split$33
  #298 = Utf8               (Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #299 = NameAndType        #297:#298     // $anonfun$split$33:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #300 = Methodref          #2.#299       // scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$33:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #301 = MethodHandle       6:#300        // REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$33:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #302 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #303 = MethodType         #302          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #304 = Utf8               (Lscala/collection/parallel/ParIterableLike$CreateScanTree;)Lscala/Function1;
  #305 = NameAndType        #150:#304     // apply:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;)Lscala/Function1;
  #306 = InvokeDynamic      #2:#305       // #2:apply:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;)Lscala/Function1;
  #307 = Utf8               scala/collection/WithFilter
  #308 = Class              #307          // scala/collection/WithFilter
  #309 = Utf8               map
  #310 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #311 = NameAndType        #309:#310     // map:(Lscala/Function1;)Ljava/lang/Object;
  #312 = Methodref          #308.#311     // scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
  #313 = Utf8               pits
  #314 = Utf8               Lscala/collection/immutable/Seq;
  #315 = Utf8               merge
  #316 = Utf8               (Lscala/collection/parallel/ParIterableLike$CreateScanTree;)V
  #317 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CreateScanTree<TU;>;)V
  #318 = NameAndType        #45:#122      // result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #319 = Methodref          #2.#318       // scala/collection/parallel/ParIterableLike$CreateScanTree.result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
  #320 = Utf8               requiresStrictSplitters
  #321 = NameAndType        #50:#51       // $outer:Lscala/collection/parallel/ParIterableLike;
  #322 = Fieldref           #2.#321       // scala/collection/parallel/ParIterableLike$CreateScanTree.$outer:Lscala/collection/parallel/ParIterableLike;
  #323 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #324 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #325 = NameAndType        #315:#316     // merge:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;)V
  #326 = Methodref          #2.#325       // scala/collection/parallel/ParIterableLike$CreateScanTree.merge:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;)V
  #327 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #328 = Utf8               p
  #329 = NameAndType        #229:#230     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #330 = Methodref          #2.#329       // scala/collection/parallel/ParIterableLike$CreateScanTree.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #331 = Utf8               $anonfun$split$31
  #332 = Utf8               (ILscala/collection/parallel/IterableSplitter;)I
  #333 = Utf8               x$42
  #334 = Utf8               x$43
  #335 = Utf8               $anonfun$split$32
  #336 = Utf8               (Lscala/Tuple2;)Z
  #337 = Utf8               check$ifrefutable$8
  #338 = Utf8               Lscala/Tuple2;
  #339 = Utf8               scala/Tuple2
  #340 = Class              #339          // scala/Tuple2
  #341 = Utf8               $this
  #342 = Utf8               x$44
  #343 = Utf8               _1
  #344 = NameAndType        #343:#76      // _1:()Ljava/lang/Object;
  #345 = Methodref          #340.#344     // scala/Tuple2._1:()Ljava/lang/Object;
  #346 = Utf8               _2$mcI$sp
  #347 = NameAndType        #346:#136     // _2$mcI$sp:()I
  #348 = Methodref          #340.#347     // scala/Tuple2._2$mcI$sp:()I
  #349 = NameAndType        #36:#37       // z:Ljava/lang/Object;
  #350 = Fieldref           #2.#349       // scala/collection/parallel/ParIterableLike$CreateScanTree.z:Ljava/lang/Object;
  #351 = Utf8               (Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
  #352 = NameAndType        #215:#351     // "<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
  #353 = Methodref          #2.#352       // scala/collection/parallel/ParIterableLike$CreateScanTree."<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
  #354 = Utf8               scala/MatchError
  #355 = Class              #354          // scala/MatchError
  #356 = NameAndType        #215:#98      // "<init>":(Ljava/lang/Object;)V
  #357 = Methodref          #355.#356     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #358 = Utf8               untilp
  #359 = Utf8               (IITU;Lscala/Function2<TU;TU;TU;>;Lscala/collection/parallel/IterableSplitter<TT;>;)V
  #360 = Methodref          #5.#234       // java/lang/Object."<init>":()V
  #361 = Utf8               $init$
  #362 = NameAndType        #361:#85      // $init$:(Lscala/collection/parallel/Task;)V
  #363 = InterfaceMethodref #78.#362      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #364 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #365 = NameAndType        #361:#364     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #366 = InterfaceMethodref #30.#365      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #367 = NameAndType        #361:#68      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #368 = InterfaceMethodref #15.#367      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #369 = Utf8               unboxToInt
  #370 = Utf8               (Ljava/lang/Object;)I
  #371 = NameAndType        #369:#370     // unboxToInt:(Ljava/lang/Object;)I
  #372 = Methodref          #243.#371     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #373 = NameAndType        #331:#332     // $anonfun$split$31:(ILscala/collection/parallel/IterableSplitter;)I
  #374 = Methodref          #2.#373       // scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$31:(ILscala/collection/parallel/IterableSplitter;)I
  #375 = NameAndType        #335:#336     // $anonfun$split$32:(Lscala/Tuple2;)Z
  #376 = Methodref          #2.#375       // scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$32:(Lscala/Tuple2;)Z
  #377 = Utf8               boxToBoolean
  #378 = Utf8               (Z)Ljava/lang/Boolean;
  #379 = NameAndType        #377:#378     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #380 = Methodref          #243.#379     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #381 = Utf8               $deserializeLambda$
  #382 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #383 = Utf8               scala/runtime/LambdaDeserialize
  #384 = Class              #383          // scala/runtime/LambdaDeserialize
  #385 = Utf8               bootstrap
  #386 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #387 = NameAndType        #385:#386     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #388 = Methodref          #384.#387     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #389 = MethodHandle       6:#388        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #390 = Utf8               lambdaDeserialize
  #391 = NameAndType        #390:#382     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #392 = InvokeDynamic      #3:#391       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #393 = Utf8               Signature
  #394 = Utf8               Code
  #395 = Utf8               LineNumberTable
  #396 = Utf8               LocalVariableTable
  #397 = Utf8               MethodParameters
  #398 = Utf8               StackMapTable
  #399 = Utf8               InnerClasses
  #400 = Utf8               SourceFile
  #401 = Utf8               BootstrapMethods
  #402 = Utf8               ScalaInlineInfo
  #403 = Utf8               Scala
{
  private final int from;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final U z;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #38                          // TU;

  private final scala.Function2<U, U, U> op;
    descriptor: Lscala/Function2;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #41                          // Lscala/Function2<TU;TU;TU;>;

  private final scala.collection.parallel.IterableSplitter<T> pit;
    descriptor: Lscala/collection/parallel/IterableSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #44                          // Lscala/collection/parallel/IterableSplitter<TT;>;

  private volatile scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U> result;
    descriptor: Lscala/collection/parallel/ParIterableLike$ScanTree;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #47                          // Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public void tryLeaf(scala.Option<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #95                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       6     1 lastres   Lscala/Option;
    Signature: #90                          // (Lscala/Option<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #103                // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #110                // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #105                         // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #114                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field pit:Lscala/collection/parallel/IterableSplitter;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
    Signature: #119                         // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U> result();
    descriptor: ()Lscala/collection/parallel/ParIterableLike$ScanTree;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #125                // Field result:Lscala/collection/parallel/ParIterableLike$ScanTree;
         4: areturn
      LineNumberTable:
        line 1326: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
    Signature: #123                         // ()Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;

  public void result_$eq(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$ScanTree;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #125                // Field result:Lscala/collection/parallel/ParIterableLike$ScanTree;
         5: return
      LineNumberTable:
        line 1326: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       6     1   x$1   Lscala/collection/parallel/ParIterableLike$ScanTree;
    Signature: #128                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #132                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #138,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         9: iconst_0
        10: if_icmple     111
        13: getstatic     #144                // Field scala/collection/mutable/ArrayBuffer$.MODULE$:Lscala/collection/mutable/ArrayBuffer$;
        16: getstatic     #149                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        19: invokevirtual #153                // Method scala/collection/mutable/ArrayBuffer$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        22: checkcast     #155                // class scala/collection/mutable/ArrayBuffer
        25: astore_2
        26: aload_0
        27: getfield      #157                // Field from:I
        30: istore_3
        31: aload_0
        32: getfield      #157                // Field from:I
        35: aload_0
        36: getfield      #159                // Field len:I
        39: iadd
        40: istore        4
        42: aload_0
        43: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        46: invokeinterface #166,  1          // InterfaceMethod scala/collection/parallel/ParIterableLike.scanBlockSize:()I
        51: istore        5
        53: iload_3
        54: iload         4
        56: if_icmpge     94
        59: aload_2
        60: aload_0
        61: iload_3
        62: getstatic     #171                // Field scala/math/package$.MODULE$:Lscala/math/package$;
        65: iload         5
        67: aload_0
        68: invokevirtual #132                // Method pit:()Lscala/collection/parallel/IterableSplitter;
        71: invokeinterface #138,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
        76: invokevirtual #175                // Method scala/math/package$.min:(II)I
        79: invokespecial #179                // Method scanBlock:(II)Lscala/collection/parallel/ParIterableLike$ScanTree;
        82: invokevirtual #183                // Method scala/collection/mutable/ArrayBuffer.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
        85: pop
        86: iload_3
        87: iload         5
        89: iadd
        90: istore_3
        91: goto          53
        94: aload_0
        95: aload_0
        96: aload_2
        97: iconst_0
        98: aload_2
        99: invokevirtual #186                // Method scala/collection/mutable/ArrayBuffer.length:()I
       102: invokespecial #190                // Method mergeTrees:(Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
       105: invokevirtual #192                // Method result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
       108: goto          116
       111: aload_0
       112: aconst_null
       113: invokevirtual #192                // Method result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
       116: return
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class scala/collection/parallel/ParIterableLike$CreateScanTree, class scala/Option, class scala/collection/mutable/ArrayBuffer, int, int, int ]
          stack = []
        frame_type = 40 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 16
          locals = [ class scala/collection/parallel/ParIterableLike$CreateScanTree, class scala/Option ]
          stack = []
        frame_type = 4 /* same */
      LineNumberTable:
        line 1327: 0
        line 1328: 13
        line 1329: 26
        line 1330: 31
        line 1331: 42
        line 1332: 53
        line 1333: 59
        line 1334: 86
        line 1332: 91
        line 1338: 94
        line 1339: 111
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      82     2 trees   Lscala/collection/mutable/ArrayBuffer;
           31      77     3     i   I
           42      66     4 until   I
           53      55     5 blocksize   I
            0     117     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0     117     1  prev   Lscala/Option;
    Signature: #90                          // (Lscala/Option<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  private scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U> scanBlock(int, int);
    descriptor: (II)Lscala/collection/parallel/ParIterableLike$ScanTree;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=11, locals=4, args_size=3
         0: aload_0
         1: invokevirtual #132                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #203,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.dup:()Lscala/collection/parallel/IterableSplitter;
         9: astore_3
        10: new           #21                 // class scala/collection/parallel/ParIterableLike$ScanLeaf
        13: dup
        14: aload_0
        15: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        18: aload_3
        19: aload_0
        20: getfield      #205                // Field op:Lscala/Function2;
        23: iload_1
        24: iload_2
        25: getstatic     #210                // Field scala/None$.MODULE$:Lscala/None$;
        28: aload_0
        29: invokevirtual #132                // Method pit:()Lscala/collection/parallel/IterableSplitter;
        32: iload_2
        33: aload_0
        34: getfield      #205                // Field op:Lscala/Function2;
        37: invokeinterface #214,  3          // InterfaceMethod scala/collection/parallel/IterableSplitter.reduceLeft:(ILscala/Function2;)Ljava/lang/Object;
        42: invokespecial #218                // Method scala/collection/parallel/ParIterableLike$ScanLeaf."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/IterableSplitter;Lscala/Function2;IILscala/Option;Ljava/lang/Object;)V
        45: areturn
      LineNumberTable:
        line 1341: 0
        line 1342: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      35     3 pitdup   Lscala/collection/parallel/IterableSplitter;
            0      46     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0      46     1  from   I
            0      46     2   len   I
    Signature: #200                         // (II)Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
    MethodParameters:
      Name                           Flags
      from                           final
      len                            final

  private scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U> mergeTrees(scala.collection.mutable.ArrayBuffer<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>>, int, int);
    descriptor: (Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=9, locals=5, args_size=4
         0: iload_3
         1: iconst_1
         2: if_icmple     45
         5: iload_3
         6: iconst_2
         7: idiv
         8: istore        4
        10: new           #24                 // class scala/collection/parallel/ParIterableLike$ScanNode
        13: dup
        14: aload_0
        15: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        18: aload_0
        19: aload_1
        20: iload_2
        21: iload         4
        23: invokespecial #190                // Method mergeTrees:(Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
        26: aload_0
        27: aload_1
        28: iload_2
        29: iload         4
        31: iadd
        32: iload_3
        33: iload         4
        35: isub
        36: invokespecial #190                // Method mergeTrees:(Lscala/collection/mutable/ArrayBuffer;II)Lscala/collection/parallel/ParIterableLike$ScanTree;
        39: invokespecial #224                // Method scala/collection/parallel/ParIterableLike$ScanNode."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/ParIterableLike$ScanTree;)V
        42: goto          53
        45: aload_1
        46: iload_2
        47: invokevirtual #227                // Method scala/collection/mutable/ArrayBuffer.apply:(I)Ljava/lang/Object;
        50: checkcast     #27                 // class scala/collection/parallel/ParIterableLike$ScanTree
        53: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 45 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class scala/collection/parallel/ParIterableLike$ScanTree ]
      LineNumberTable:
        line 1344: 0
        line 1345: 5
        line 1346: 10
        line 1347: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      32     4  half   I
            0      54     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0      54     1 trees   Lscala/collection/mutable/ArrayBuffer;
            0      54     2  from   I
            0      54     3 howmany   I
    Signature: #220                         // (Lscala/collection/mutable/ArrayBuffer<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;>;II)Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;
    MethodParameters:
      Name                           Flags
      trees                          final
      from                           final
      howmany                        final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #233                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #235                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       8     1   pit   Lscala/collection/parallel/IterableSplitter;
    Signature: #231                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      pit                            final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ScanTree<U>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.CreateScanTree<U>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #132                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #241,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
         9: astore_1
        10: aload_1
        11: aload_1
        12: aload_0
        13: getfield      #157                // Field from:I
        16: invokestatic  #247                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        19: invokedynamic #267,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
        24: invokeinterface #273,  3          // InterfaceMethod scala/collection/immutable/Seq.scanLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        29: checkcast     #275                // class scala/collection/IterableOnce
        32: invokeinterface #279,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        37: checkcast     #281                // class scala/collection/IterableOps
        40: invokedynamic #292,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        45: invokeinterface #296,  2          // InterfaceMethod scala/collection/IterableOps.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
        50: aload_0
        51: invokedynamic #306,  0            // InvokeDynamic #2:apply:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;)Lscala/Function1;
        56: invokevirtual #312                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
        59: checkcast     #269                // class scala/collection/immutable/Seq
        62: areturn
      LineNumberTable:
        line 1350: 0
        line 1351: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      52     1  pits   Lscala/collection/immutable/Seq;
            0      63     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
    Signature: #238                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CreateScanTree<TU;>;>;>;

  public void merge(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.CreateScanTree<U>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$CreateScanTree;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #319                // Method result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
         4: ifnull        43
         7: aload_1
         8: invokevirtual #319                // Method result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        11: ifnull        40
        14: aload_0
        15: new           #24                 // class scala/collection/parallel/ParIterableLike$ScanNode
        18: dup
        19: aload_0
        20: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        23: aload_0
        24: invokevirtual #319                // Method result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        27: aload_1
        28: invokevirtual #319                // Method result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        31: invokespecial #224                // Method scala/collection/parallel/ParIterableLike$ScanNode."<init>":(Lscala/collection/parallel/ParIterableLike;Lscala/collection/parallel/ParIterableLike$ScanTree;Lscala/collection/parallel/ParIterableLike$ScanTree;)V
        34: invokevirtual #192                // Method result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
        37: goto          40
        40: goto          51
        43: aload_0
        44: aload_1
        45: invokevirtual #319                // Method result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
        48: invokevirtual #192                // Method result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
        51: return
      StackMapTable: number_of_entries = 3
        frame_type = 40 /* same */
        frame_type = 2 /* same */
        frame_type = 7 /* same */
      LineNumberTable:
        line 1355: 0
        line 1356: 7
        line 1357: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0      52     1  that   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
    Signature: #317                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CreateScanTree<TU;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1358: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #322                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$CreateScanTree
         5: invokevirtual #326                // Method merge:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;)V
         8: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #330                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #27                 // class scala/collection/parallel/ParIterableLike$ScanTree
         5: invokevirtual #192                // Method result_$eq:(Lscala/collection/parallel/ParIterableLike$ScanTree;)V
         8: return
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #319                // Method result:()Lscala/collection/parallel/ParIterableLike$ScanTree;
         4: areturn
      LineNumberTable:
        line 1324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;

  public static final int $anonfun$split$31(int, scala.collection.parallel.IterableSplitter);
    descriptor: (ILscala/collection/parallel/IterableSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: aload_1
         2: invokeinterface #138,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         7: iadd
         8: ireturn
      LineNumberTable:
        line 1351: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  x$42   I
            0       9     1  x$43   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$42                           final
      x$43                           final

  public static final boolean $anonfun$split$32(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 1351: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$8   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$8            final

  public static final scala.collection.parallel.ParIterableLike$Accessor $anonfun$split$33(scala.collection.parallel.ParIterableLike$CreateScanTree, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        55
         6: aload_3
         7: invokevirtual #345                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #134                // class scala/collection/parallel/IterableSplitter
        13: astore        4
        15: aload_3
        16: invokevirtual #348                // Method scala/Tuple2._2$mcI$sp:()I
        19: istore        5
        21: new           #2                  // class scala/collection/parallel/ParIterableLike$CreateScanTree
        24: dup
        25: aload_0
        26: invokevirtual #163                // Method scala$collection$parallel$ParIterableLike$CreateScanTree$$$outer:()Lscala/collection/parallel/ParIterableLike;
        29: iload         5
        31: aload         4
        33: invokeinterface #138,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
        38: aload_0
        39: getfield      #350                // Field z:Ljava/lang/Object;
        42: aload_0
        43: getfield      #205                // Field op:Lscala/Function2;
        46: aload         4
        48: invokespecial #353                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
        51: astore_2
        52: goto          67
        55: goto          58
        58: new           #355                // class scala/MatchError
        61: dup
        62: aload_3
        63: invokespecial #357                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        66: athrow
        67: aload_2
        68: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 55
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/parallel/ParIterableLike$CreateScanTree, class scala/Tuple2, class scala/collection/parallel/ParIterableLike$CreateScanTree, class scala/Tuple2, class scala/collection/parallel/IterableSplitter, int ]
          stack = []
      LineNumberTable:
        line 1351: 0
        line 1352: 21
        line 1351: 55
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      40     4     p   Lscala/collection/parallel/IterableSplitter;
           21      34     5 untilp   I
            0      69     0 $this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0      69     1  x$44   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$44                           final

  public scala.collection.parallel.ParIterableLike$CreateScanTree(int, int, U, scala.Function2<U, U, U>, scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;IILjava/lang/Object;Lscala/Function2;Lscala/collection/parallel/IterableSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=7
         0: aload_0
         1: iload_2
         2: putfield      #157                // Field from:I
         5: aload_0
         6: iload_3
         7: putfield      #159                // Field len:I
        10: aload_0
        11: aload         4
        13: putfield      #350                // Field z:Ljava/lang/Object;
        16: aload_0
        17: aload         5
        19: putfield      #205                // Field op:Lscala/Function2;
        22: aload_0
        23: aload         6
        25: putfield      #121                // Field pit:Lscala/collection/parallel/IterableSplitter;
        28: aload_1
        29: ifnonnull     34
        32: aconst_null
        33: athrow
        34: aload_0
        35: aload_1
        36: putfield      #322                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        39: aload_0
        40: invokespecial #360                // Method java/lang/Object."<init>":()V
        43: aload_0
        44: invokestatic  #363                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        47: aload_0
        48: invokestatic  #366                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        51: aload_0
        52: invokestatic  #368                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        55: aload_0
        56: aconst_null
        57: putfield      #125                // Field result:Lscala/collection/parallel/ParIterableLike$ScanTree;
        60: return
      StackMapTable: number_of_entries = 1
        frame_type = 34 /* same */
      LineNumberTable:
        line 1324: 0
        line 1325: 39
        line 1326: 55
        line 1324: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0  this   Lscala/collection/parallel/ParIterableLike$CreateScanTree;
            0      61     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      61     2  from   I
            0      61     3   len   I
            0      61     4     z   Ljava/lang/Object;
            0      61     5    op   Lscala/Function2;
            0      61     6   pit   Lscala/collection/parallel/IterableSplitter;
    Signature: #359                         // (IITU;Lscala/Function2<TU;TU;TU;>;Lscala/collection/parallel/IterableSplitter<TT;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      from                           final
      len                            final
      z                              final
      op                             final
      pit                            final

  public static final java.lang.Object $anonfun$split$31$adapted(java.lang.Object, scala.collection.parallel.IterableSplitter);
    descriptor: (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokestatic  #372                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         4: aload_1
         5: invokestatic  #374                // Method $anonfun$split$31:(ILscala/collection/parallel/IterableSplitter;)I
         8: invokestatic  #247                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: areturn
      LineNumberTable:
        line 1351: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  x$42   Ljava/lang/Object;
            0      12     1  x$43   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$42                           final
      x$43                           final

  public static final java.lang.Object $anonfun$split$32$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #376                // Method $anonfun$split$32:(Lscala/Tuple2;)Z
         4: invokestatic  #380                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 1351: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$8   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$8            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #392,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #19= #2 of #17;                  // CreateScanTree=class scala/collection/parallel/ParIterableLike$CreateScanTree of class scala/collection/parallel/ParIterableLike
  public #22= #21 of #17;                 // ScanLeaf=class scala/collection/parallel/ParIterableLike$ScanLeaf of class scala/collection/parallel/ParIterableLike
  public #25= #24 of #17;                 // ScanNode=class scala/collection/parallel/ParIterableLike$ScanNode of class scala/collection/parallel/ParIterableLike
  public #28= #27 of #17;                 // ScanTree=class scala/collection/parallel/ParIterableLike$ScanTree of class scala/collection/parallel/ParIterableLike
  public #31= #30 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #32= #7 of #17;                  // Transformer=class scala/collection/parallel/ParIterableLike$Transformer of class scala/collection/parallel/ParIterableLike
Signature: #3                           // <U:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ScanTree<TU;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.CreateScanTree<TU;>;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #264 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #249 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #254 REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$31$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #255 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #256 5
      #257 1
      #255 (Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  1: #264 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 (Ljava/lang/Object;)Ljava/lang/Object;
      #288 REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$32$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #289 (Lscala/Tuple2;)Ljava/lang/Object;
      #256 5
      #257 1
      #289 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #264 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #283 (Ljava/lang/Object;)Ljava/lang/Object;
      #301 REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$33:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #303 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
      #256 5
      #257 1
      #303 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  3: #389 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #254 REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$31$adapted:(Ljava/lang/Object;Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #288 REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$32$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #301 REF_invokeStatic scala/collection/parallel/ParIterableLike$CreateScanTree.$anonfun$split$33:(Lscala/collection/parallel/ParIterableLike$CreateScanTree;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$Accessor;
  ScalaInlineInfo: length = 0xAE (unknown attribute)
   01 00 00 22 01 4B 01 4C 01 00 FA 00 FB 01 01 4F
   01 50 01 01 1C 01 1D 01 01 29 01 2A 01 00 D7 01
   5F 00 00 53 00 42 00 00 81 00 59 00 01 3B 00 62
   00 01 3B 01 3C 00 00 68 00 55 00 00 BB 00 BC 01
   00 E5 01 47 00 00 E5 00 E6 00 00 2A 00 76 00 00
   4B 00 4C 00 01 40 00 3C 00 00 2D 00 4C 00 00 2D
   00 7A 00 00 7E 00 62 00 00 7E 00 7F 00 01 43 00
   A1 00 00 34 00 35 01 00 A0 00 A1 00 01 44 00 A1
   00 00 B0 00 B1 01 00 3B 00 3C 00 00 41 00 42 00
   00 EC 00 ED 00 00 30 00 70 00 00 73 00 74 00 00
   36 00 35 00 00 58 00 59 00 00 61 00 62 00
  Scala: length = 0x0 (unknown attribute)

