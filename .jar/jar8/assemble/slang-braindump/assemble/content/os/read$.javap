Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/read$.class
  Last modified May 29, 2022; size 6816 bytes
  SHA-256 checksum 812799fec4178509f553dfe67d6b366e3c61820243138510d4651587ffb66cc8
  Compiled from "ReadWriteOps.scala"
public final class os.read$ extends java.lang.Object implements scala.Function1<os.ReadablePath, java.lang.String>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/read$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 36, attributes: 5
Constant pool:
    #1 = Utf8               os/read$
    #2 = Class              #1            // os/read$
    #3 = Utf8               Ljava/lang/Object;Lscala/Function1<Los/ReadablePath;Ljava/lang/String;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Function1
    #7 = Class              #6            // scala/Function1
    #8 = Utf8               ReadWriteOps.scala
    #9 = Utf8               os/read$bytes$
   #10 = Class              #9            // os/read$bytes$
   #11 = Utf8               os/read
   #12 = Class              #11           // os/read
   #13 = Utf8               bytes$
   #14 = Utf8               MODULE$
   #15 = Utf8               Los/read$;
   #16 = Utf8               <clinit>
   #17 = Utf8               ()V
   #18 = Utf8               <init>
   #19 = NameAndType        #18:#17       // "<init>":()V
   #20 = Methodref          #2.#19        // os/read$."<init>":()V
   #21 = NameAndType        #14:#15       // MODULE$:Los/read$;
   #22 = Fieldref           #2.#21        // os/read$.MODULE$:Los/read$;
   #23 = Utf8               $init$
   #24 = Utf8               (Lscala/Function1;)V
   #25 = NameAndType        #23:#24       // $init$:(Lscala/Function1;)V
   #26 = InterfaceMethodref #7.#25        // scala/Function1.$init$:(Lscala/Function1;)V
   #27 = Utf8               apply$mcZD$sp
   #28 = Utf8               (D)Z
   #29 = Utf8               v1
   #30 = Utf8               apply$mcZD$sp$
   #31 = Utf8               (Lscala/Function1;D)Z
   #32 = NameAndType        #30:#31       // apply$mcZD$sp$:(Lscala/Function1;D)Z
   #33 = InterfaceMethodref #7.#32        // scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
   #34 = Utf8               this
   #35 = Utf8               D
   #36 = Utf8               apply$mcDD$sp
   #37 = Utf8               (D)D
   #38 = Utf8               apply$mcDD$sp$
   #39 = Utf8               (Lscala/Function1;D)D
   #40 = NameAndType        #38:#39       // apply$mcDD$sp$:(Lscala/Function1;D)D
   #41 = InterfaceMethodref #7.#40        // scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
   #42 = Utf8               apply$mcFD$sp
   #43 = Utf8               (D)F
   #44 = Utf8               apply$mcFD$sp$
   #45 = Utf8               (Lscala/Function1;D)F
   #46 = NameAndType        #44:#45       // apply$mcFD$sp$:(Lscala/Function1;D)F
   #47 = InterfaceMethodref #7.#46        // scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
   #48 = Utf8               apply$mcID$sp
   #49 = Utf8               (D)I
   #50 = Utf8               apply$mcID$sp$
   #51 = Utf8               (Lscala/Function1;D)I
   #52 = NameAndType        #50:#51       // apply$mcID$sp$:(Lscala/Function1;D)I
   #53 = InterfaceMethodref #7.#52        // scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
   #54 = Utf8               apply$mcJD$sp
   #55 = Utf8               (D)J
   #56 = Utf8               apply$mcJD$sp$
   #57 = Utf8               (Lscala/Function1;D)J
   #58 = NameAndType        #56:#57       // apply$mcJD$sp$:(Lscala/Function1;D)J
   #59 = InterfaceMethodref #7.#58        // scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
   #60 = Utf8               apply$mcVD$sp
   #61 = Utf8               (D)V
   #62 = Utf8               apply$mcVD$sp$
   #63 = Utf8               (Lscala/Function1;D)V
   #64 = NameAndType        #62:#63       // apply$mcVD$sp$:(Lscala/Function1;D)V
   #65 = InterfaceMethodref #7.#64        // scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
   #66 = Utf8               apply$mcZF$sp
   #67 = Utf8               (F)Z
   #68 = Utf8               apply$mcZF$sp$
   #69 = Utf8               (Lscala/Function1;F)Z
   #70 = NameAndType        #68:#69       // apply$mcZF$sp$:(Lscala/Function1;F)Z
   #71 = InterfaceMethodref #7.#70        // scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
   #72 = Utf8               F
   #73 = Utf8               apply$mcDF$sp
   #74 = Utf8               (F)D
   #75 = Utf8               apply$mcDF$sp$
   #76 = Utf8               (Lscala/Function1;F)D
   #77 = NameAndType        #75:#76       // apply$mcDF$sp$:(Lscala/Function1;F)D
   #78 = InterfaceMethodref #7.#77        // scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
   #79 = Utf8               apply$mcFF$sp
   #80 = Utf8               (F)F
   #81 = Utf8               apply$mcFF$sp$
   #82 = Utf8               (Lscala/Function1;F)F
   #83 = NameAndType        #81:#82       // apply$mcFF$sp$:(Lscala/Function1;F)F
   #84 = InterfaceMethodref #7.#83        // scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
   #85 = Utf8               apply$mcIF$sp
   #86 = Utf8               (F)I
   #87 = Utf8               apply$mcIF$sp$
   #88 = Utf8               (Lscala/Function1;F)I
   #89 = NameAndType        #87:#88       // apply$mcIF$sp$:(Lscala/Function1;F)I
   #90 = InterfaceMethodref #7.#89        // scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
   #91 = Utf8               apply$mcJF$sp
   #92 = Utf8               (F)J
   #93 = Utf8               apply$mcJF$sp$
   #94 = Utf8               (Lscala/Function1;F)J
   #95 = NameAndType        #93:#94       // apply$mcJF$sp$:(Lscala/Function1;F)J
   #96 = InterfaceMethodref #7.#95        // scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
   #97 = Utf8               apply$mcVF$sp
   #98 = Utf8               (F)V
   #99 = Utf8               apply$mcVF$sp$
  #100 = Utf8               (Lscala/Function1;F)V
  #101 = NameAndType        #99:#100      // apply$mcVF$sp$:(Lscala/Function1;F)V
  #102 = InterfaceMethodref #7.#101       // scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
  #103 = Utf8               apply$mcZI$sp
  #104 = Utf8               (I)Z
  #105 = Utf8               apply$mcZI$sp$
  #106 = Utf8               (Lscala/Function1;I)Z
  #107 = NameAndType        #105:#106     // apply$mcZI$sp$:(Lscala/Function1;I)Z
  #108 = InterfaceMethodref #7.#107       // scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
  #109 = Utf8               I
  #110 = Utf8               apply$mcDI$sp
  #111 = Utf8               (I)D
  #112 = Utf8               apply$mcDI$sp$
  #113 = Utf8               (Lscala/Function1;I)D
  #114 = NameAndType        #112:#113     // apply$mcDI$sp$:(Lscala/Function1;I)D
  #115 = InterfaceMethodref #7.#114       // scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
  #116 = Utf8               apply$mcFI$sp
  #117 = Utf8               (I)F
  #118 = Utf8               apply$mcFI$sp$
  #119 = Utf8               (Lscala/Function1;I)F
  #120 = NameAndType        #118:#119     // apply$mcFI$sp$:(Lscala/Function1;I)F
  #121 = InterfaceMethodref #7.#120       // scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
  #122 = Utf8               apply$mcII$sp
  #123 = Utf8               (I)I
  #124 = Utf8               apply$mcII$sp$
  #125 = Utf8               (Lscala/Function1;I)I
  #126 = NameAndType        #124:#125     // apply$mcII$sp$:(Lscala/Function1;I)I
  #127 = InterfaceMethodref #7.#126       // scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
  #128 = Utf8               apply$mcJI$sp
  #129 = Utf8               (I)J
  #130 = Utf8               apply$mcJI$sp$
  #131 = Utf8               (Lscala/Function1;I)J
  #132 = NameAndType        #130:#131     // apply$mcJI$sp$:(Lscala/Function1;I)J
  #133 = InterfaceMethodref #7.#132       // scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
  #134 = Utf8               apply$mcVI$sp
  #135 = Utf8               (I)V
  #136 = Utf8               apply$mcVI$sp$
  #137 = Utf8               (Lscala/Function1;I)V
  #138 = NameAndType        #136:#137     // apply$mcVI$sp$:(Lscala/Function1;I)V
  #139 = InterfaceMethodref #7.#138       // scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
  #140 = Utf8               apply$mcZJ$sp
  #141 = Utf8               (J)Z
  #142 = Utf8               apply$mcZJ$sp$
  #143 = Utf8               (Lscala/Function1;J)Z
  #144 = NameAndType        #142:#143     // apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #145 = InterfaceMethodref #7.#144       // scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #146 = Utf8               J
  #147 = Utf8               apply$mcDJ$sp
  #148 = Utf8               (J)D
  #149 = Utf8               apply$mcDJ$sp$
  #150 = Utf8               (Lscala/Function1;J)D
  #151 = NameAndType        #149:#150     // apply$mcDJ$sp$:(Lscala/Function1;J)D
  #152 = InterfaceMethodref #7.#151       // scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
  #153 = Utf8               apply$mcFJ$sp
  #154 = Utf8               (J)F
  #155 = Utf8               apply$mcFJ$sp$
  #156 = Utf8               (Lscala/Function1;J)F
  #157 = NameAndType        #155:#156     // apply$mcFJ$sp$:(Lscala/Function1;J)F
  #158 = InterfaceMethodref #7.#157       // scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
  #159 = Utf8               apply$mcIJ$sp
  #160 = Utf8               (J)I
  #161 = Utf8               apply$mcIJ$sp$
  #162 = Utf8               (Lscala/Function1;J)I
  #163 = NameAndType        #161:#162     // apply$mcIJ$sp$:(Lscala/Function1;J)I
  #164 = InterfaceMethodref #7.#163       // scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
  #165 = Utf8               apply$mcJJ$sp
  #166 = Utf8               (J)J
  #167 = Utf8               apply$mcJJ$sp$
  #168 = Utf8               (Lscala/Function1;J)J
  #169 = NameAndType        #167:#168     // apply$mcJJ$sp$:(Lscala/Function1;J)J
  #170 = InterfaceMethodref #7.#169       // scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
  #171 = Utf8               apply$mcVJ$sp
  #172 = Utf8               (J)V
  #173 = Utf8               apply$mcVJ$sp$
  #174 = Utf8               (Lscala/Function1;J)V
  #175 = NameAndType        #173:#174     // apply$mcVJ$sp$:(Lscala/Function1;J)V
  #176 = InterfaceMethodref #7.#175       // scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
  #177 = Utf8               compose
  #178 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #179 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/ReadablePath;>;)Lscala/Function1<TA;Ljava/lang/String;>;
  #180 = Utf8               g
  #181 = Utf8               compose$
  #182 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #183 = NameAndType        #181:#182     // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #184 = InterfaceMethodref #7.#183       // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #185 = Utf8               Lscala/Function1;
  #186 = Utf8               andThen
  #187 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/String;TA;>;)Lscala/Function1<Los/ReadablePath;TA;>;
  #188 = Utf8               andThen$
  #189 = NameAndType        #188:#182     // andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #190 = InterfaceMethodref #7.#189       // scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #191 = Utf8               toString
  #192 = Utf8               ()Ljava/lang/String;
  #193 = Utf8               toString$
  #194 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #195 = NameAndType        #193:#194     // toString$:(Lscala/Function1;)Ljava/lang/String;
  #196 = InterfaceMethodref #7.#195       // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
  #197 = Utf8               apply
  #198 = Utf8               (Los/ReadablePath;)Ljava/lang/String;
  #199 = Utf8               arg
  #200 = Utf8               scala/io/Codec$
  #201 = Class              #200          // scala/io/Codec$
  #202 = Utf8               Lscala/io/Codec$;
  #203 = NameAndType        #14:#202      // MODULE$:Lscala/io/Codec$;
  #204 = Fieldref           #201.#203     // scala/io/Codec$.MODULE$:Lscala/io/Codec$;
  #205 = Utf8               java/nio/charset/StandardCharsets
  #206 = Class              #205          // java/nio/charset/StandardCharsets
  #207 = Utf8               UTF_8
  #208 = Utf8               Ljava/nio/charset/Charset;
  #209 = NameAndType        #207:#208     // UTF_8:Ljava/nio/charset/Charset;
  #210 = Fieldref           #206.#209     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
  #211 = Utf8               charset2codec
  #212 = Utf8               (Ljava/nio/charset/Charset;)Lscala/io/Codec;
  #213 = NameAndType        #211:#212     // charset2codec:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
  #214 = Methodref          #201.#213     // scala/io/Codec$.charset2codec:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
  #215 = Utf8               (Los/ReadablePath;Lscala/io/Codec;)Ljava/lang/String;
  #216 = NameAndType        #197:#215     // apply:(Los/ReadablePath;Lscala/io/Codec;)Ljava/lang/String;
  #217 = Methodref          #2.#216       // os/read$.apply:(Los/ReadablePath;Lscala/io/Codec;)Ljava/lang/String;
  #218 = Utf8               Los/ReadablePath;
  #219 = Utf8               charSet
  #220 = Utf8               java/lang/String
  #221 = Class              #220          // java/lang/String
  #222 = Utf8               Los/read$bytes$;
  #223 = NameAndType        #14:#222      // MODULE$:Los/read$bytes$;
  #224 = Fieldref           #10.#223      // os/read$bytes$.MODULE$:Los/read$bytes$;
  #225 = Utf8               (Los/ReadablePath;)[B
  #226 = NameAndType        #197:#225     // apply:(Los/ReadablePath;)[B
  #227 = Methodref          #10.#226      // os/read$bytes$.apply:(Los/ReadablePath;)[B
  #228 = Utf8               scala/io/Codec
  #229 = Class              #228          // scala/io/Codec
  #230 = Utf8               ()Ljava/nio/charset/Charset;
  #231 = NameAndType        #219:#230     // charSet:()Ljava/nio/charset/Charset;
  #232 = Methodref          #229.#231     // scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
  #233 = Utf8               ([BLjava/nio/charset/Charset;)V
  #234 = NameAndType        #18:#233      // "<init>":([BLjava/nio/charset/Charset;)V
  #235 = Methodref          #221.#234     // java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
  #236 = Utf8               Lscala/io/Codec;
  #237 = Utf8               (Los/Path;Lscala/io/Codec;JI)Ljava/lang/String;
  #238 = Utf8               offset
  #239 = Utf8               count
  #240 = Utf8               (Los/Path;JI)[B
  #241 = NameAndType        #197:#240     // apply:(Los/Path;JI)[B
  #242 = Methodref          #10.#241      // os/read$bytes$.apply:(Los/Path;JI)[B
  #243 = Utf8               Los/Path;
  #244 = Utf8               apply$default$2
  #245 = Utf8               ()Lscala/io/Codec;
  #246 = Utf8               apply$default$3
  #247 = Utf8               ()J
  #248 = Utf8               apply$default$4
  #249 = Utf8               ()I
  #250 = Integer            2147483647
  #251 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #252 = Utf8               os/ReadablePath
  #253 = Class              #252          // os/ReadablePath
  #254 = NameAndType        #197:#198     // apply:(Los/ReadablePath;)Ljava/lang/String;
  #255 = Methodref          #2.#254       // os/read$.apply:(Los/ReadablePath;)Ljava/lang/String;
  #256 = Utf8               Ljava/lang/Object;
  #257 = Methodref          #5.#19        // java/lang/Object."<init>":()V
  #258 = Utf8               Code
  #259 = Utf8               LineNumberTable
  #260 = Utf8               LocalVariableTable
  #261 = Utf8               MethodParameters
  #262 = Utf8               Signature
  #263 = Utf8               InnerClasses
  #264 = Utf8               SourceFile
  #265 = Utf8               ScalaInlineInfo
  #266 = Utf8               Scala
{
  public static final os.read$ MODULE$;
    descriptor: Los/read$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/read$
         3: dup
         4: invokespecial #20                 // Method "<init>":()V
         7: putstatic     #22                 // Field MODULE$:Los/read$;
        10: getstatic     #22                 // Field MODULE$:Los/read$;
        13: invokestatic  #26                 // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
        16: return
      LineNumberTable:
        line 213: 0

  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #33                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #41                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
         5: dreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #47                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
         5: freturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #53                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #59                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
         5: lreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #65                 // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
         5: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #71                 // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #78                 // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
         5: dreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #84                 // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
         5: freturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #90                 // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #96                 // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
         5: lreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #102                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
         5: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #108                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #115                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
         5: dreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #121                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
         5: freturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #127                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #133                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
         5: lreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #139                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
         5: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #145                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #152                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
         5: dreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #158                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
         5: freturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #164                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
         5: ireturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #170                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
         5: lreturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #176                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
         5: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public <A extends java.lang.Object> scala.Function1<A, java.lang.String> compose(scala.Function1<A, os.ReadablePath>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #184                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1     g   Lscala/Function1;
    Signature: #179                         // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/ReadablePath;>;)Lscala/Function1<TA;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public <A extends java.lang.Object> scala.Function1<os.ReadablePath, A> andThen(scala.Function1<java.lang.String, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #190                // InterfaceMethod scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/read$;
            0       6     1     g   Lscala/Function1;
    Signature: #187                         // <A:Ljava/lang/Object;>(Lscala/Function1<Ljava/lang/String;TA;>;)Lscala/Function1<Los/ReadablePath;TA;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #196                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/read$;

  public java.lang.String apply(os.ReadablePath);
    descriptor: (Los/ReadablePath;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #204                // Field scala/io/Codec$.MODULE$:Lscala/io/Codec$;
         5: getstatic     #210                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
         8: invokevirtual #214                // Method scala/io/Codec$.charset2codec:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
        11: invokevirtual #217                // Method apply:(Los/ReadablePath;Lscala/io/Codec;)Ljava/lang/String;
        14: areturn
      LineNumberTable:
        line 214: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Los/read$;
            0      15     1   arg   Los/ReadablePath;
    MethodParameters:
      Name                           Flags
      arg                            final

  public java.lang.String apply(os.ReadablePath, scala.io.Codec);
    descriptor: (Los/ReadablePath;Lscala/io/Codec;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #221                // class java/lang/String
         3: dup
         4: getstatic     #224                // Field os/read$bytes$.MODULE$:Los/read$bytes$;
         7: aload_1
         8: invokevirtual #227                // Method os/read$bytes$.apply:(Los/ReadablePath;)[B
        11: aload_2
        12: invokevirtual #232                // Method scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
        15: invokespecial #235                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
        18: areturn
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Los/read$;
            0      19     1   arg   Los/ReadablePath;
            0      19     2 charSet   Lscala/io/Codec;
    MethodParameters:
      Name                           Flags
      arg                            final
      charSet                        final

  public java.lang.String apply(os.Path, scala.io.Codec, long, int);
    descriptor: (Los/Path;Lscala/io/Codec;JI)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=5
         0: new           #221                // class java/lang/String
         3: dup
         4: getstatic     #224                // Field os/read$bytes$.MODULE$:Los/read$bytes$;
         7: aload_1
         8: lload_3
         9: iload         5
        11: invokevirtual #242                // Method os/read$bytes$.apply:(Los/Path;JI)[B
        14: aload_2
        15: invokevirtual #232                // Method scala/io/Codec.charSet:()Ljava/nio/charset/Charset;
        18: invokespecial #235                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
        21: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Los/read$;
            0      22     1   arg   Los/Path;
            0      22     2 charSet   Lscala/io/Codec;
            0      22     3 offset   J
            0      22     5 count   I
    MethodParameters:
      Name                           Flags
      arg                            final
      charSet                        final
      offset                         final
      count                          final

  public scala.io.Codec apply$default$2();
    descriptor: ()Lscala/io/Codec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #204                // Field scala/io/Codec$.MODULE$:Lscala/io/Codec$;
         3: getstatic     #210                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
         6: invokevirtual #214                // Method scala/io/Codec$.charset2codec:(Ljava/nio/charset/Charset;)Lscala/io/Codec;
         9: areturn
      LineNumberTable:
        line 219: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Los/read$;

  public long apply$default$3();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: lconst_0
         1: lreturn
      LineNumberTable:
        line 220: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/read$;

  public int apply$default$4();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #250                // int 2147483647
         2: ireturn
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Los/read$;

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #253                // class os/ReadablePath
         5: invokevirtual #255                // Method apply:(Los/ReadablePath;)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/read$;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  private os.read$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #257                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 213: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/read$;
}
InnerClasses:
  public static #13= #10 of #12;          // bytes$=class os/read$bytes$ of class os/read
Signature: #3                           // Ljava/lang/Object;Lscala/Function1<Los/ReadablePath;Ljava/lang/String;>;
SourceFile: "ReadWriteOps.scala"
  ScalaInlineInfo: length = 0xB3 (unknown attribute)
   01 01 00 23 00 12 00 11 01 00 BA 00 B2 01 00 C5
   00 FB 01 00 C5 00 ED 01 00 C5 00 C6 01 00 C5 00
   D7 01 00 F4 00 F5 01 00 F6 00 F7 01 00 F8 00 F9
   01 00 24 00 25 01 00 49 00 4A 01 00 6E 00 6F 01
   00 93 00 94 01 00 2A 00 2B 01 00 4F 00 50 01 00
   74 00 75 01 00 99 00 9A 01 00 30 00 31 01 00 55
   00 56 01 00 7A 00 7B 01 00 9F 00 A0 01 00 36 00
   37 01 00 5B 00 5C 01 00 80 00 81 01 00 A5 00 A6
   01 00 3C 00 3D 01 00 61 00 62 01 00 86 00 87 01
   00 AB 00 AC 01 00 1B 00 1C 01 00 42 00 43 01 00
   67 00 68 01 00 8C 00 8D 01 00 B1 00 B2 01 00 BF
   00 C0 01
  Scala: length = 0x0 (unknown attribute)

