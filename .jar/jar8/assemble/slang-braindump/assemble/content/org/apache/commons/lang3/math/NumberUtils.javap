Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/math/NumberUtils.class
  Last modified May 29, 2022; size 16948 bytes
  SHA-256 checksum 82593a0d3b82ba454a68212bd58a41fa9c89cd8521e3c870c580c19b95b83b0d
  Compiled from "NumberUtils.java"
public class org.apache.commons.lang3.math.NumberUtils
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #135                        // org/apache/commons/lang3/math/NumberUtils
  super_class: #92                        // java/lang/Object
  interfaces: 0, fields: 19, methods: 68, attributes: 1
Constant pool:
    #1 = Methodref          #92.#319      // java/lang/Object."<init>":()V
    #2 = Methodref          #135.#320     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I
    #3 = Methodref          #321.#322     // java/lang/Integer.parseInt:(Ljava/lang/String;)I
    #4 = Class              #323          // java/lang/NumberFormatException
    #5 = Methodref          #135.#324     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J
    #6 = Methodref          #325.#326     // java/lang/Long.parseLong:(Ljava/lang/String;)J
    #7 = Methodref          #135.#327     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F
    #8 = Methodref          #89.#328      // java/lang/Float.parseFloat:(Ljava/lang/String;)F
    #9 = Methodref          #135.#329     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D
   #10 = Methodref          #85.#330      // java/lang/Double.parseDouble:(Ljava/lang/String;)D
   #11 = Methodref          #135.#331     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D
   #12 = Methodref          #81.#332      // java/math/BigDecimal.doubleValue:()D
   #13 = Methodref          #135.#333     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B
   #14 = Methodref          #334.#335     // java/lang/Byte.parseByte:(Ljava/lang/String;)B
   #15 = Methodref          #135.#336     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S
   #16 = Methodref          #337.#338     // java/lang/Short.parseShort:(Ljava/lang/String;)S
   #17 = Fieldref           #135.#339     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;
   #18 = Methodref          #321.#340     // java/lang/Integer.intValue:()I
   #19 = Fieldref           #208.#341     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
   #20 = Methodref          #135.#342     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
   #21 = Fieldref           #81.#343      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
   #22 = Methodref          #81.#344      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
   #23 = Methodref          #135.#345     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
   #24 = Methodref          #89.#346      // java/lang/Float.floatValue:()F
   #25 = Methodref          #81.#347      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
   #26 = Methodref          #135.#348     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
   #27 = Methodref          #85.#332      // java/lang/Double.doubleValue:()D
   #28 = Methodref          #135.#349     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
   #29 = Methodref          #135.#350     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
   #30 = Methodref          #351.#352     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
   #31 = String             #353          // A blank string is not a valid number
   #32 = Methodref          #4.#354       // java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
   #33 = Class              #355          // java/lang/String
   #34 = String             #356          // 0x
   #35 = String             #357          // 0X
   #36 = String             #358          // -0x
   #37 = String             #359          // -0X
   #38 = String             #360          // #
   #39 = String             #361          // -#
   #40 = Methodref          #33.#362      // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #41 = Methodref          #33.#363      // java/lang/String.length:()I
   #42 = Methodref          #33.#364      // java/lang/String.charAt:(I)C
   #43 = Methodref          #135.#365     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;
   #44 = Methodref          #135.#366     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;
   #45 = Methodref          #135.#367     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;
   #46 = Methodref          #33.#368      // java/lang/String.indexOf:(I)I
   #47 = Class              #369          // java/lang/StringBuilder
   #48 = Methodref          #47.#319      // java/lang/StringBuilder."<init>":()V
   #49 = Methodref          #47.#370      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #50 = String             #371          //  is not a valid number.
   #51 = Methodref          #47.#372      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #52 = Methodref          #33.#373      // java/lang/String.substring:(II)Ljava/lang/String;
   #53 = Methodref          #33.#374      // java/lang/String.substring:(I)Ljava/lang/String;
   #54 = Methodref          #135.#375     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;
   #55 = Methodref          #135.#376     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;
   #56 = Methodref          #377.#378     // java/lang/Character.isDigit:(C)Z
   #57 = Methodref          #135.#379     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z
   #58 = Methodref          #33.#380      // java/lang/String.isEmpty:()Z
   #59 = Methodref          #135.#381     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z
   #60 = Methodref          #135.#382     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;
   #61 = Methodref          #89.#383      // java/lang/Float.isInfinite:()Z
   #62 = Methodref          #135.#384     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;
   #63 = Methodref          #85.#383      // java/lang/Double.isInfinite:()Z
   #64 = Methodref          #85.#346      // java/lang/Double.floatValue:()F
   #65 = Methodref          #89.#372      // java/lang/Float.toString:()Ljava/lang/String;
   #66 = Methodref          #85.#372      // java/lang/Double.toString:()Ljava/lang/String;
   #67 = Methodref          #33.#385      // java/lang/String.equals:(Ljava/lang/Object;)Z
   #68 = Methodref          #81.#386      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
   #69 = Methodref          #89.#387      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
   #70 = Methodref          #85.#388      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;
   #71 = Methodref          #321.#389     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
   #72 = Methodref          #325.#390     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;
   #73 = String             #391          // -
   #74 = Methodref          #33.#392      // java/lang/String.startsWith:(Ljava/lang/String;I)Z
   #75 = String             #393          // 0
   #76 = Class              #394          // java/math/BigInteger
   #77 = Methodref          #76.#395      // java/math/BigInteger."<init>":(Ljava/lang/String;I)V
   #78 = Methodref          #76.#396      // java/math/BigInteger.negate:()Ljava/math/BigInteger;
   #79 = Methodref          #33.#397      // java/lang/String.trim:()Ljava/lang/String;
   #80 = String             #398          // --
   #81 = Class              #399          // java/math/BigDecimal
   #82 = Methodref          #81.#354      // java/math/BigDecimal."<init>":(Ljava/lang/String;)V
   #83 = Methodref          #135.#400     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V
   #84 = Methodref          #85.#401      // java/lang/Double.isNaN:(D)Z
   #85 = Class              #402          // java/lang/Double
   #86 = Double             NaNd
   #88 = Methodref          #89.#403      // java/lang/Float.isNaN:(F)Z
   #89 = Class              #404          // java/lang/Float
   #90 = Float              NaNf
   #91 = String             #405          // The Array must not be null
   #92 = Class              #406          // java/lang/Object
   #93 = Methodref          #407.#408     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
   #94 = Methodref          #409.#410     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
   #95 = String             #411          // Array cannot be empty.
   #96 = Methodref          #412.#413     // java/lang/Math.min:(DD)D
   #97 = Methodref          #412.#414     // java/lang/Math.min:(FF)F
   #98 = Methodref          #412.#415     // java/lang/Math.max:(DD)D
   #99 = Methodref          #412.#416     // java/lang/Math.max:(FF)F
  #100 = Methodref          #351.#417     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z
  #101 = Methodref          #135.#418     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z
  #102 = Methodref          #351.#419     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z
  #103 = Methodref          #33.#420      // java/lang/String.toCharArray:()[C
  #104 = Methodref          #351.#421     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z
  #105 = Methodref          #135.#422     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z
  #106 = Methodref          #325.#423     // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #107 = Fieldref           #135.#424     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;
  #108 = Fieldref           #135.#425     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;
  #109 = Long               -1l
  #111 = Fieldref           #135.#426     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;
  #112 = Methodref          #321.#427     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #113 = Fieldref           #135.#428     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;
  #114 = Fieldref           #135.#429     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;
  #115 = Fieldref           #135.#430     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;
  #116 = Methodref          #337.#431     // java/lang/Short.valueOf:(S)Ljava/lang/Short;
  #117 = Fieldref           #135.#432     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;
  #118 = Fieldref           #135.#433     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;
  #119 = Fieldref           #135.#434     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;
  #120 = Methodref          #334.#435     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
  #121 = Fieldref           #135.#436     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;
  #122 = Fieldref           #135.#437     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;
  #123 = Fieldref           #135.#438     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;
  #124 = Methodref          #85.#439      // java/lang/Double.valueOf:(D)Ljava/lang/Double;
  #125 = Fieldref           #135.#440     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;
  #126 = Fieldref           #135.#441     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;
  #127 = Double             -1.0d
  #129 = Fieldref           #135.#442     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;
  #130 = Methodref          #89.#443      // java/lang/Float.valueOf:(F)Ljava/lang/Float;
  #131 = Fieldref           #135.#444     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;
  #132 = Fieldref           #135.#445     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;
  #133 = Float              -1.0f
  #134 = Fieldref           #135.#446     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;
  #135 = Class              #447          // org/apache/commons/lang3/math/NumberUtils
  #136 = Utf8               LONG_ZERO
  #137 = Utf8               Ljava/lang/Long;
  #138 = Utf8               LONG_ONE
  #139 = Utf8               LONG_MINUS_ONE
  #140 = Utf8               INTEGER_ZERO
  #141 = Utf8               Ljava/lang/Integer;
  #142 = Utf8               INTEGER_ONE
  #143 = Utf8               INTEGER_TWO
  #144 = Utf8               INTEGER_MINUS_ONE
  #145 = Utf8               SHORT_ZERO
  #146 = Utf8               Ljava/lang/Short;
  #147 = Utf8               SHORT_ONE
  #148 = Utf8               SHORT_MINUS_ONE
  #149 = Utf8               BYTE_ZERO
  #150 = Utf8               Ljava/lang/Byte;
  #151 = Utf8               BYTE_ONE
  #152 = Utf8               BYTE_MINUS_ONE
  #153 = Utf8               DOUBLE_ZERO
  #154 = Utf8               Ljava/lang/Double;
  #155 = Utf8               DOUBLE_ONE
  #156 = Utf8               DOUBLE_MINUS_ONE
  #157 = Utf8               FLOAT_ZERO
  #158 = Utf8               Ljava/lang/Float;
  #159 = Utf8               FLOAT_ONE
  #160 = Utf8               FLOAT_MINUS_ONE
  #161 = Utf8               <init>
  #162 = Utf8               ()V
  #163 = Utf8               Code
  #164 = Utf8               LineNumberTable
  #165 = Utf8               LocalVariableTable
  #166 = Utf8               this
  #167 = Utf8               Lorg/apache/commons/lang3/math/NumberUtils;
  #168 = Utf8               toInt
  #169 = Utf8               (Ljava/lang/String;)I
  #170 = Utf8               str
  #171 = Utf8               Ljava/lang/String;
  #172 = Utf8               (Ljava/lang/String;I)I
  #173 = Utf8               nfe
  #174 = Utf8               Ljava/lang/NumberFormatException;
  #175 = Utf8               defaultValue
  #176 = Utf8               I
  #177 = Utf8               StackMapTable
  #178 = Utf8               toLong
  #179 = Utf8               (Ljava/lang/String;)J
  #180 = Utf8               (Ljava/lang/String;J)J
  #181 = Utf8               J
  #182 = Utf8               toFloat
  #183 = Utf8               (Ljava/lang/String;)F
  #184 = Utf8               (Ljava/lang/String;F)F
  #185 = Utf8               F
  #186 = Utf8               toDouble
  #187 = Utf8               (Ljava/lang/String;)D
  #188 = Utf8               (Ljava/lang/String;D)D
  #189 = Utf8               D
  #190 = Utf8               (Ljava/math/BigDecimal;)D
  #191 = Utf8               value
  #192 = Utf8               Ljava/math/BigDecimal;
  #193 = Utf8               (Ljava/math/BigDecimal;D)D
  #194 = Utf8               toByte
  #195 = Utf8               (Ljava/lang/String;)B
  #196 = Utf8               (Ljava/lang/String;B)B
  #197 = Utf8               B
  #198 = Utf8               toShort
  #199 = Utf8               (Ljava/lang/String;)S
  #200 = Utf8               (Ljava/lang/String;S)S
  #201 = Utf8               S
  #202 = Utf8               toScaledBigDecimal
  #203 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
  #204 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #205 = Utf8               scale
  #206 = Utf8               roundingMode
  #207 = Utf8               Ljava/math/RoundingMode;
  #208 = Class              #448          // java/math/RoundingMode
  #209 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;
  #210 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #211 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;
  #212 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #213 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;
  #214 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #215 = Utf8               createNumber
  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;
  #217 = Utf8               pfx
  #218 = Utf8               i
  #219 = Utf8               firstSigDigit
  #220 = Utf8               C
  #221 = Utf8               hexDigits
  #222 = Utf8               dec
  #223 = Utf8               mant
  #224 = Utf8               exp
  #225 = Utf8               f
  #226 = Utf8               d
  #227 = Utf8               numeric
  #228 = Utf8               allZeros
  #229 = Utf8               Z
  #230 = Utf8               b
  #231 = Utf8               hex_prefixes
  #232 = Utf8               [Ljava/lang/String;
  #233 = Utf8               pfxLen
  #234 = Utf8               lastChar
  #235 = Utf8               decPos
  #236 = Utf8               expPos
  #237 = Class              #232          // "[Ljava/lang/String;"
  #238 = Utf8               getMantissa
  #239 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #240 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #241 = Utf8               stopPos
  #242 = Utf8               firstChar
  #243 = Utf8               hasSign
  #244 = Utf8               isAllZeros
  #245 = Utf8               (Ljava/lang/String;)Z
  #246 = Utf8               createFloat
  #247 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;
  #248 = Utf8               createDouble
  #249 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;
  #250 = Utf8               createInteger
  #251 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;
  #252 = Utf8               createLong
  #253 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;
  #254 = Utf8               createBigInteger
  #255 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;
  #256 = Utf8               pos
  #257 = Utf8               radix
  #258 = Utf8               negate
  #259 = Utf8               Ljava/math/BigInteger;
  #260 = Utf8               createBigDecimal
  #261 = Utf8               min
  #262 = Utf8               ([J)J
  #263 = Utf8               array
  #264 = Utf8               [J
  #265 = Utf8               ([I)I
  #266 = Utf8               j
  #267 = Utf8               [I
  #268 = Utf8               ([S)S
  #269 = Utf8               [S
  #270 = Utf8               ([B)B
  #271 = Utf8               [B
  #272 = Utf8               ([D)D
  #273 = Utf8               [D
  #274 = Utf8               ([F)F
  #275 = Utf8               [F
  #276 = Utf8               max
  #277 = Utf8               validateArray
  #278 = Utf8               (Ljava/lang/Object;)V
  #279 = Utf8               Ljava/lang/Object;
  #280 = Utf8               (JJJ)J
  #281 = Utf8               a
  #282 = Utf8               c
  #283 = Utf8               (III)I
  #284 = Utf8               (SSS)S
  #285 = Utf8               (BBB)B
  #286 = Utf8               (DDD)D
  #287 = Utf8               (FFF)F
  #288 = Utf8               isDigits
  #289 = Utf8               isNumber
  #290 = Utf8               Deprecated
  #291 = Utf8               RuntimeVisibleAnnotations
  #292 = Utf8               Ljava/lang/Deprecated;
  #293 = Utf8               isCreatable
  #294 = Utf8               chars
  #295 = Utf8               [C
  #296 = Utf8               sz
  #297 = Utf8               hasExp
  #298 = Utf8               hasDecPoint
  #299 = Utf8               allowSigns
  #300 = Utf8               foundDigit
  #301 = Utf8               start
  #302 = Class              #295          // "[C"
  #303 = Utf8               isParsable
  #304 = Utf8               withDecimalsParsing
  #305 = Utf8               (Ljava/lang/String;I)Z
  #306 = Utf8               isDecimalPoint
  #307 = Utf8               beginIdx
  #308 = Utf8               decimalPoints
  #309 = Utf8               compare
  #310 = Utf8               (II)I
  #311 = Utf8               x
  #312 = Utf8               y
  #313 = Utf8               (JJ)I
  #314 = Utf8               (SS)I
  #315 = Utf8               (BB)I
  #316 = Utf8               <clinit>
  #317 = Utf8               SourceFile
  #318 = Utf8               NumberUtils.java
  #319 = NameAndType        #161:#162     // "<init>":()V
  #320 = NameAndType        #168:#172     // toInt:(Ljava/lang/String;I)I
  #321 = Class              #449          // java/lang/Integer
  #322 = NameAndType        #450:#169     // parseInt:(Ljava/lang/String;)I
  #323 = Utf8               java/lang/NumberFormatException
  #324 = NameAndType        #178:#180     // toLong:(Ljava/lang/String;J)J
  #325 = Class              #451          // java/lang/Long
  #326 = NameAndType        #452:#179     // parseLong:(Ljava/lang/String;)J
  #327 = NameAndType        #182:#184     // toFloat:(Ljava/lang/String;F)F
  #328 = NameAndType        #453:#183     // parseFloat:(Ljava/lang/String;)F
  #329 = NameAndType        #186:#188     // toDouble:(Ljava/lang/String;D)D
  #330 = NameAndType        #454:#187     // parseDouble:(Ljava/lang/String;)D
  #331 = NameAndType        #186:#193     // toDouble:(Ljava/math/BigDecimal;D)D
  #332 = NameAndType        #455:#456     // doubleValue:()D
  #333 = NameAndType        #194:#196     // toByte:(Ljava/lang/String;B)B
  #334 = Class              #457          // java/lang/Byte
  #335 = NameAndType        #458:#195     // parseByte:(Ljava/lang/String;)B
  #336 = NameAndType        #198:#200     // toShort:(Ljava/lang/String;S)S
  #337 = Class              #459          // java/lang/Short
  #338 = NameAndType        #460:#199     // parseShort:(Ljava/lang/String;)S
  #339 = NameAndType        #143:#141     // INTEGER_TWO:Ljava/lang/Integer;
  #340 = NameAndType        #461:#462     // intValue:()I
  #341 = NameAndType        #463:#207     // HALF_EVEN:Ljava/math/RoundingMode;
  #342 = NameAndType        #202:#204     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #343 = NameAndType        #464:#192     // ZERO:Ljava/math/BigDecimal;
  #344 = NameAndType        #465:#466     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #345 = NameAndType        #202:#210     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #346 = NameAndType        #467:#468     // floatValue:()F
  #347 = NameAndType        #469:#470     // valueOf:(D)Ljava/math/BigDecimal;
  #348 = NameAndType        #202:#212     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #349 = NameAndType        #202:#214     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #350 = NameAndType        #260:#213     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
  #351 = Class              #471          // org/apache/commons/lang3/StringUtils
  #352 = NameAndType        #472:#473     // isBlank:(Ljava/lang/CharSequence;)Z
  #353 = Utf8               A blank string is not a valid number
  #354 = NameAndType        #161:#474     // "<init>":(Ljava/lang/String;)V
  #355 = Utf8               java/lang/String
  #356 = Utf8               0x
  #357 = Utf8               0X
  #358 = Utf8               -0x
  #359 = Utf8               -0X
  #360 = Utf8               #
  #361 = Utf8               -#
  #362 = NameAndType        #475:#245     // startsWith:(Ljava/lang/String;)Z
  #363 = NameAndType        #476:#462     // length:()I
  #364 = NameAndType        #477:#478     // charAt:(I)C
  #365 = NameAndType        #254:#255     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;
  #366 = NameAndType        #252:#253     // createLong:(Ljava/lang/String;)Ljava/lang/Long;
  #367 = NameAndType        #250:#251     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;
  #368 = NameAndType        #479:#480     // indexOf:(I)I
  #369 = Utf8               java/lang/StringBuilder
  #370 = NameAndType        #481:#482     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #371 = Utf8                is not a valid number.
  #372 = NameAndType        #483:#484     // toString:()Ljava/lang/String;
  #373 = NameAndType        #485:#486     // substring:(II)Ljava/lang/String;
  #374 = NameAndType        #485:#487     // substring:(I)Ljava/lang/String;
  #375 = NameAndType        #238:#240     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;
  #376 = NameAndType        #238:#239     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;
  #377 = Class              #488          // java/lang/Character
  #378 = NameAndType        #489:#490     // isDigit:(C)Z
  #379 = NameAndType        #244:#245     // isAllZeros:(Ljava/lang/String;)Z
  #380 = NameAndType        #491:#492     // isEmpty:()Z
  #381 = NameAndType        #288:#245     // isDigits:(Ljava/lang/String;)Z
  #382 = NameAndType        #246:#247     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;
  #383 = NameAndType        #493:#492     // isInfinite:()Z
  #384 = NameAndType        #248:#249     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;
  #385 = NameAndType        #494:#495     // equals:(Ljava/lang/Object;)Z
  #386 = NameAndType        #496:#497     // compareTo:(Ljava/math/BigDecimal;)I
  #387 = NameAndType        #469:#247     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;
  #388 = NameAndType        #469:#249     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;
  #389 = NameAndType        #498:#251     // decode:(Ljava/lang/String;)Ljava/lang/Integer;
  #390 = NameAndType        #498:#253     // decode:(Ljava/lang/String;)Ljava/lang/Long;
  #391 = Utf8               -
  #392 = NameAndType        #475:#305     // startsWith:(Ljava/lang/String;I)Z
  #393 = Utf8               0
  #394 = Utf8               java/math/BigInteger
  #395 = NameAndType        #161:#499     // "<init>":(Ljava/lang/String;I)V
  #396 = NameAndType        #258:#500     // negate:()Ljava/math/BigInteger;
  #397 = NameAndType        #501:#484     // trim:()Ljava/lang/String;
  #398 = Utf8               --
  #399 = Utf8               java/math/BigDecimal
  #400 = NameAndType        #277:#278     // validateArray:(Ljava/lang/Object;)V
  #401 = NameAndType        #502:#503     // isNaN:(D)Z
  #402 = Utf8               java/lang/Double
  #403 = NameAndType        #502:#504     // isNaN:(F)Z
  #404 = Utf8               java/lang/Float
  #405 = Utf8               The Array must not be null
  #406 = Utf8               java/lang/Object
  #407 = Class              #505          // org/apache/commons/lang3/Validate
  #408 = NameAndType        #506:#507     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
  #409 = Class              #508          // java/lang/reflect/Array
  #410 = NameAndType        #509:#510     // getLength:(Ljava/lang/Object;)I
  #411 = Utf8               Array cannot be empty.
  #412 = Class              #511          // java/lang/Math
  #413 = NameAndType        #261:#512     // min:(DD)D
  #414 = NameAndType        #261:#513     // min:(FF)F
  #415 = NameAndType        #276:#512     // max:(DD)D
  #416 = NameAndType        #276:#513     // max:(FF)F
  #417 = NameAndType        #514:#473     // isNumeric:(Ljava/lang/CharSequence;)Z
  #418 = NameAndType        #293:#245     // isCreatable:(Ljava/lang/String;)Z
  #419 = NameAndType        #491:#473     // isEmpty:(Ljava/lang/CharSequence;)Z
  #420 = NameAndType        #515:#516     // toCharArray:()[C
  #421 = NameAndType        #517:#518     // contains:(Ljava/lang/CharSequence;I)Z
  #422 = NameAndType        #304:#305     // withDecimalsParsing:(Ljava/lang/String;I)Z
  #423 = NameAndType        #469:#519     // valueOf:(J)Ljava/lang/Long;
  #424 = NameAndType        #136:#137     // LONG_ZERO:Ljava/lang/Long;
  #425 = NameAndType        #138:#137     // LONG_ONE:Ljava/lang/Long;
  #426 = NameAndType        #139:#137     // LONG_MINUS_ONE:Ljava/lang/Long;
  #427 = NameAndType        #469:#520     // valueOf:(I)Ljava/lang/Integer;
  #428 = NameAndType        #140:#141     // INTEGER_ZERO:Ljava/lang/Integer;
  #429 = NameAndType        #142:#141     // INTEGER_ONE:Ljava/lang/Integer;
  #430 = NameAndType        #144:#141     // INTEGER_MINUS_ONE:Ljava/lang/Integer;
  #431 = NameAndType        #469:#521     // valueOf:(S)Ljava/lang/Short;
  #432 = NameAndType        #145:#146     // SHORT_ZERO:Ljava/lang/Short;
  #433 = NameAndType        #147:#146     // SHORT_ONE:Ljava/lang/Short;
  #434 = NameAndType        #148:#146     // SHORT_MINUS_ONE:Ljava/lang/Short;
  #435 = NameAndType        #469:#522     // valueOf:(B)Ljava/lang/Byte;
  #436 = NameAndType        #149:#150     // BYTE_ZERO:Ljava/lang/Byte;
  #437 = NameAndType        #151:#150     // BYTE_ONE:Ljava/lang/Byte;
  #438 = NameAndType        #152:#150     // BYTE_MINUS_ONE:Ljava/lang/Byte;
  #439 = NameAndType        #469:#523     // valueOf:(D)Ljava/lang/Double;
  #440 = NameAndType        #153:#154     // DOUBLE_ZERO:Ljava/lang/Double;
  #441 = NameAndType        #155:#154     // DOUBLE_ONE:Ljava/lang/Double;
  #442 = NameAndType        #156:#154     // DOUBLE_MINUS_ONE:Ljava/lang/Double;
  #443 = NameAndType        #469:#524     // valueOf:(F)Ljava/lang/Float;
  #444 = NameAndType        #157:#158     // FLOAT_ZERO:Ljava/lang/Float;
  #445 = NameAndType        #159:#158     // FLOAT_ONE:Ljava/lang/Float;
  #446 = NameAndType        #160:#158     // FLOAT_MINUS_ONE:Ljava/lang/Float;
  #447 = Utf8               org/apache/commons/lang3/math/NumberUtils
  #448 = Utf8               java/math/RoundingMode
  #449 = Utf8               java/lang/Integer
  #450 = Utf8               parseInt
  #451 = Utf8               java/lang/Long
  #452 = Utf8               parseLong
  #453 = Utf8               parseFloat
  #454 = Utf8               parseDouble
  #455 = Utf8               doubleValue
  #456 = Utf8               ()D
  #457 = Utf8               java/lang/Byte
  #458 = Utf8               parseByte
  #459 = Utf8               java/lang/Short
  #460 = Utf8               parseShort
  #461 = Utf8               intValue
  #462 = Utf8               ()I
  #463 = Utf8               HALF_EVEN
  #464 = Utf8               ZERO
  #465 = Utf8               setScale
  #466 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
  #467 = Utf8               floatValue
  #468 = Utf8               ()F
  #469 = Utf8               valueOf
  #470 = Utf8               (D)Ljava/math/BigDecimal;
  #471 = Utf8               org/apache/commons/lang3/StringUtils
  #472 = Utf8               isBlank
  #473 = Utf8               (Ljava/lang/CharSequence;)Z
  #474 = Utf8               (Ljava/lang/String;)V
  #475 = Utf8               startsWith
  #476 = Utf8               length
  #477 = Utf8               charAt
  #478 = Utf8               (I)C
  #479 = Utf8               indexOf
  #480 = Utf8               (I)I
  #481 = Utf8               append
  #482 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #483 = Utf8               toString
  #484 = Utf8               ()Ljava/lang/String;
  #485 = Utf8               substring
  #486 = Utf8               (II)Ljava/lang/String;
  #487 = Utf8               (I)Ljava/lang/String;
  #488 = Utf8               java/lang/Character
  #489 = Utf8               isDigit
  #490 = Utf8               (C)Z
  #491 = Utf8               isEmpty
  #492 = Utf8               ()Z
  #493 = Utf8               isInfinite
  #494 = Utf8               equals
  #495 = Utf8               (Ljava/lang/Object;)Z
  #496 = Utf8               compareTo
  #497 = Utf8               (Ljava/math/BigDecimal;)I
  #498 = Utf8               decode
  #499 = Utf8               (Ljava/lang/String;I)V
  #500 = Utf8               ()Ljava/math/BigInteger;
  #501 = Utf8               trim
  #502 = Utf8               isNaN
  #503 = Utf8               (D)Z
  #504 = Utf8               (F)Z
  #505 = Utf8               org/apache/commons/lang3/Validate
  #506 = Utf8               isTrue
  #507 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V
  #508 = Utf8               java/lang/reflect/Array
  #509 = Utf8               getLength
  #510 = Utf8               (Ljava/lang/Object;)I
  #511 = Utf8               java/lang/Math
  #512 = Utf8               (DD)D
  #513 = Utf8               (FF)F
  #514 = Utf8               isNumeric
  #515 = Utf8               toCharArray
  #516 = Utf8               ()[C
  #517 = Utf8               contains
  #518 = Utf8               (Ljava/lang/CharSequence;I)Z
  #519 = Utf8               (J)Ljava/lang/Long;
  #520 = Utf8               (I)Ljava/lang/Integer;
  #521 = Utf8               (S)Ljava/lang/Short;
  #522 = Utf8               (B)Ljava/lang/Byte;
  #523 = Utf8               (D)Ljava/lang/Double;
  #524 = Utf8               (F)Ljava/lang/Float;
{
  public static final java.lang.Long LONG_ZERO;
    descriptor: Ljava/lang/Long;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Long LONG_ONE;
    descriptor: Ljava/lang/Long;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Long LONG_MINUS_ONE;
    descriptor: Ljava/lang/Long;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Integer INTEGER_ZERO;
    descriptor: Ljava/lang/Integer;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Integer INTEGER_ONE;
    descriptor: Ljava/lang/Integer;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Integer INTEGER_TWO;
    descriptor: Ljava/lang/Integer;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Integer INTEGER_MINUS_ONE;
    descriptor: Ljava/lang/Integer;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Short SHORT_ZERO;
    descriptor: Ljava/lang/Short;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Short SHORT_ONE;
    descriptor: Ljava/lang/Short;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Short SHORT_MINUS_ONE;
    descriptor: Ljava/lang/Short;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Byte BYTE_ZERO;
    descriptor: Ljava/lang/Byte;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Byte BYTE_ONE;
    descriptor: Ljava/lang/Byte;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Byte BYTE_MINUS_ONE;
    descriptor: Ljava/lang/Byte;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Double DOUBLE_ZERO;
    descriptor: Ljava/lang/Double;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Double DOUBLE_ONE;
    descriptor: Ljava/lang/Double;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Double DOUBLE_MINUS_ONE;
    descriptor: Ljava/lang/Double;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Float FLOAT_ZERO;
    descriptor: Ljava/lang/Float;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Float FLOAT_ONE;
    descriptor: Ljava/lang/Float;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.lang.Float FLOAT_MINUS_ONE;
    descriptor: Ljava/lang/Float;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public org.apache.commons.lang3.math.NumberUtils();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 82: 0
        line 83: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/math/NumberUtils;

  public static int toInt(java.lang.String);
    descriptor: (Ljava/lang/String;)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: invokestatic  #2                  // Method toInt:(Ljava/lang/String;I)I
         5: ireturn
      LineNumberTable:
        line 104: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   str   Ljava/lang/String;

  public static int toInt(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: iload_1
         5: ireturn
         6: aload_0
         7: invokestatic  #3                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
        10: ireturn
        11: astore_2
        12: iload_1
        13: ireturn
      Exception table:
         from    to  target type
             6    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 125: 0
        line 126: 4
        line 129: 6
        line 130: 11
        line 131: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     2   nfe   Ljava/lang/NumberFormatException;
            0      14     0   str   Ljava/lang/String;
            0      14     1 defaultValue   I
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]

  public static long toLong(java.lang.String);
    descriptor: (Ljava/lang/String;)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: lconst_0
         2: invokestatic  #5                  // Method toLong:(Ljava/lang/String;J)J
         5: lreturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   str   Ljava/lang/String;

  public static long toLong(java.lang.String, long);
    descriptor: (Ljava/lang/String;J)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: lload_1
         5: lreturn
         6: aload_0
         7: invokestatic  #6                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
        10: lreturn
        11: astore_3
        12: lload_1
        13: lreturn
      Exception table:
         from    to  target type
             6    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 174: 0
        line 175: 4
        line 178: 6
        line 179: 11
        line 180: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     3   nfe   Ljava/lang/NumberFormatException;
            0      14     0   str   Ljava/lang/String;
            0      14     1 defaultValue   J
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]

  public static float toFloat(java.lang.String);
    descriptor: (Ljava/lang/String;)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: fconst_0
         2: invokestatic  #7                  // Method toFloat:(Ljava/lang/String;F)F
         5: freturn
      LineNumberTable:
        line 203: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   str   Ljava/lang/String;

  public static float toFloat(java.lang.String, float);
    descriptor: (Ljava/lang/String;F)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: fload_1
         5: freturn
         6: aload_0
         7: invokestatic  #8                  // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
        10: freturn
        11: astore_2
        12: fload_1
        13: freturn
      Exception table:
         from    to  target type
             6    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 226: 0
        line 227: 4
        line 230: 6
        line 231: 11
        line 232: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     2   nfe   Ljava/lang/NumberFormatException;
            0      14     0   str   Ljava/lang/String;
            0      14     1 defaultValue   F
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]

  public static double toDouble(java.lang.String);
    descriptor: (Ljava/lang/String;)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: dconst_0
         2: invokestatic  #9                  // Method toDouble:(Ljava/lang/String;D)D
         5: dreturn
      LineNumberTable:
        line 255: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   str   Ljava/lang/String;

  public static double toDouble(java.lang.String, double);
    descriptor: (Ljava/lang/String;D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: dload_1
         5: dreturn
         6: aload_0
         7: invokestatic  #10                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
        10: dreturn
        11: astore_3
        12: dload_1
        13: dreturn
      Exception table:
         from    to  target type
             6    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 278: 0
        line 279: 4
        line 282: 6
        line 283: 11
        line 284: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     3   nfe   Ljava/lang/NumberFormatException;
            0      14     0   str   Ljava/lang/String;
            0      14     1 defaultValue   D
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]

  public static double toDouble(java.math.BigDecimal);
    descriptor: (Ljava/math/BigDecimal;)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: dconst_0
         2: invokestatic  #11                 // Method toDouble:(Ljava/math/BigDecimal;D)D
         5: dreturn
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 value   Ljava/math/BigDecimal;

  public static double toDouble(java.math.BigDecimal, double);
    descriptor: (Ljava/math/BigDecimal;D)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: ifnonnull     8
         4: dload_1
         5: goto          12
         8: aload_0
         9: invokevirtual #12                 // Method java/math/BigDecimal.doubleValue:()D
        12: dreturn
      LineNumberTable:
        line 326: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 value   Ljava/math/BigDecimal;
            0      13     1 defaultValue   D
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ double ]

  public static byte toByte(java.lang.String);
    descriptor: (Ljava/lang/String;)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: invokestatic  #13                 // Method toByte:(Ljava/lang/String;B)B
         5: ireturn
      LineNumberTable:
        line 348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   str   Ljava/lang/String;

  public static byte toByte(java.lang.String, byte);
    descriptor: (Ljava/lang/String;B)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: iload_1
         5: ireturn
         6: aload_0
         7: invokestatic  #14                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B
        10: ireturn
        11: astore_2
        12: iload_1
        13: ireturn
      Exception table:
         from    to  target type
             6    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 369: 0
        line 370: 4
        line 373: 6
        line 374: 11
        line 375: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     2   nfe   Ljava/lang/NumberFormatException;
            0      14     0   str   Ljava/lang/String;
            0      14     1 defaultValue   B
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]

  public static short toShort(java.lang.String);
    descriptor: (Ljava/lang/String;)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: invokestatic  #15                 // Method toShort:(Ljava/lang/String;S)S
         5: ireturn
      LineNumberTable:
        line 397: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0   str   Ljava/lang/String;

  public static short toShort(java.lang.String, short);
    descriptor: (Ljava/lang/String;S)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=3, args_size=2
         0: aload_0
         1: ifnonnull     6
         4: iload_1
         5: ireturn
         6: aload_0
         7: invokestatic  #16                 // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
        10: ireturn
        11: astore_2
        12: iload_1
        13: ireturn
      Exception table:
         from    to  target type
             6    10    11   Class java/lang/NumberFormatException
      LineNumberTable:
        line 418: 0
        line 419: 4
        line 422: 6
        line 423: 11
        line 424: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       2     2   nfe   Ljava/lang/NumberFormatException;
            0      14     0   str   Ljava/lang/String;
            0      14     1 defaultValue   S
      StackMapTable: number_of_entries = 2
        frame_type = 6 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]

  public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal);
    descriptor: (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;
         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
        10: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        13: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 value   Ljava/math/BigDecimal;

  public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal, int, java.math.RoundingMode);
    descriptor: (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     8
         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
         7: areturn
         8: aload_0
         9: iload_1
        10: aload_2
        11: ifnonnull     20
        14: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
        17: goto          21
        20: aload_2
        21: invokevirtual #22                 // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        24: areturn
      LineNumberTable:
        line 457: 0
        line 458: 4
        line 460: 8
        line 462: 10
        line 460: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 value   Ljava/math/BigDecimal;
            0      25     1 scale   I
            0      25     2 roundingMode   Ljava/math/RoundingMode;
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class java/math/BigDecimal, int, class java/math/RoundingMode ]
          stack = [ class java/math/BigDecimal, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/math/BigDecimal, int, class java/math/RoundingMode ]
          stack = [ class java/math/BigDecimal, int, class java/math/RoundingMode ]

  public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float);
    descriptor: (Ljava/lang/Float;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;
         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
        10: invokestatic  #23                 // Method toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        13: areturn
      LineNumberTable:
        line 479: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 value   Ljava/lang/Float;

  public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float, int, java.math.RoundingMode);
    descriptor: (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     8
         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
         7: areturn
         8: aload_0
         9: invokevirtual #24                 // Method java/lang/Float.floatValue:()F
        12: f2d
        13: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
        16: iload_1
        17: aload_2
        18: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        21: areturn
      LineNumberTable:
        line 495: 0
        line 496: 4
        line 498: 8
        line 499: 9
        line 498: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0 value   Ljava/lang/Float;
            0      22     1 scale   I
            0      22     2 roundingMode   Ljava/math/RoundingMode;
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */

  public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double);
    descriptor: (Ljava/lang/Double;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;
         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
        10: invokestatic  #26                 // Method toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        13: areturn
      LineNumberTable:
        line 518: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 value   Ljava/lang/Double;

  public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double, int, java.math.RoundingMode);
    descriptor: (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     8
         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
         7: areturn
         8: aload_0
         9: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D
        12: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
        15: iload_1
        16: aload_2
        17: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        20: areturn
      LineNumberTable:
        line 534: 0
        line 535: 4
        line 537: 8
        line 538: 9
        line 537: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 value   Ljava/lang/Double;
            0      21     1 scale   I
            0      21     2 roundingMode   Ljava/math/RoundingMode;
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */

  public static java.math.BigDecimal toScaledBigDecimal(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;
         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I
         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
        10: invokestatic  #28                 // Method toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        13: areturn
      LineNumberTable:
        line 557: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 value   Ljava/lang/String;

  public static java.math.BigDecimal toScaledBigDecimal(java.lang.String, int, java.math.RoundingMode);
    descriptor: (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: ifnonnull     8
         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
         7: areturn
         8: aload_0
         9: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
        12: iload_1
        13: aload_2
        14: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
        17: areturn
      LineNumberTable:
        line 573: 0
        line 574: 4
        line 576: 8
        line 577: 9
        line 576: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 value   Ljava/lang/String;
            0      18     1 scale   I
            0      18     2 roundingMode   Ljava/math/RoundingMode;
      StackMapTable: number_of_entries = 1
        frame_type = 8 /* same */

  public static java.lang.Number createNumber(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Number;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=13, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #30                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
        10: ifeq          23
        13: new           #4                  // class java/lang/NumberFormatException
        16: dup
        17: ldc           #31                 // String A blank string is not a valid number
        19: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        22: athrow
        23: bipush        6
        25: anewarray     #33                 // class java/lang/String
        28: dup
        29: iconst_0
        30: ldc           #34                 // String 0x
        32: aastore
        33: dup
        34: iconst_1
        35: ldc           #35                 // String 0X
        37: aastore
        38: dup
        39: iconst_2
        40: ldc           #36                 // String -0x
        42: aastore
        43: dup
        44: iconst_3
        45: ldc           #37                 // String -0X
        47: aastore
        48: dup
        49: iconst_4
        50: ldc           #38                 // String #
        52: aastore
        53: dup
        54: iconst_5
        55: ldc           #39                 // String -#
        57: aastore
        58: astore_1
        59: iconst_0
        60: istore_2
        61: aload_1
        62: astore_3
        63: aload_3
        64: arraylength
        65: istore        4
        67: iconst_0
        68: istore        5
        70: iload         5
        72: iload         4
        74: if_icmpge     109
        77: aload_3
        78: iload         5
        80: aaload
        81: astore        6
        83: aload_0
        84: aload         6
        86: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        89: ifeq          103
        92: iload_2
        93: aload         6
        95: invokevirtual #41                 // Method java/lang/String.length:()I
        98: iadd
        99: istore_2
       100: goto          109
       103: iinc          5, 1
       106: goto          70
       109: iload_2
       110: ifle          212
       113: iconst_0
       114: istore_3
       115: iload_2
       116: istore        4
       118: iload         4
       120: aload_0
       121: invokevirtual #41                 // Method java/lang/String.length:()I
       124: if_icmpge     149
       127: aload_0
       128: iload         4
       130: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
       133: istore_3
       134: iload_3
       135: bipush        48
       137: if_icmpne     149
       140: iinc          2, 1
       143: iinc          4, 1
       146: goto          118
       149: aload_0
       150: invokevirtual #41                 // Method java/lang/String.length:()I
       153: iload_2
       154: isub
       155: istore        4
       157: iload         4
       159: bipush        16
       161: if_icmpgt     177
       164: iload         4
       166: bipush        16
       168: if_icmpne     182
       171: iload_3
       172: bipush        55
       174: if_icmple     182
       177: aload_0
       178: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;
       181: areturn
       182: iload         4
       184: bipush        8
       186: if_icmpgt     202
       189: iload         4
       191: bipush        8
       193: if_icmpne     207
       196: iload_3
       197: bipush        55
       199: if_icmple     207
       202: aload_0
       203: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;
       206: areturn
       207: aload_0
       208: invokestatic  #45                 // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;
       211: areturn
       212: aload_0
       213: aload_0
       214: invokevirtual #41                 // Method java/lang/String.length:()I
       217: iconst_1
       218: isub
       219: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
       222: istore_3
       223: aload_0
       224: bipush        46
       226: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I
       229: istore        7
       231: aload_0
       232: bipush        101
       234: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I
       237: aload_0
       238: bipush        69
       240: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I
       243: iadd
       244: iconst_1
       245: iadd
       246: istore        8
       248: iload         7
       250: iconst_m1
       251: if_icmple     339
       254: iload         8
       256: iconst_m1
       257: if_icmple     318
       260: iload         8
       262: iload         7
       264: if_icmplt     276
       267: iload         8
       269: aload_0
       270: invokevirtual #41                 // Method java/lang/String.length:()I
       273: if_icmple     303
       276: new           #4                  // class java/lang/NumberFormatException
       279: dup
       280: new           #47                 // class java/lang/StringBuilder
       283: dup
       284: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       287: aload_0
       288: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       291: ldc           #50                 // String  is not a valid number.
       293: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       296: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       299: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       302: athrow
       303: aload_0
       304: iload         7
       306: iconst_1
       307: iadd
       308: iload         8
       310: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       313: astore        5
       315: goto          328
       318: aload_0
       319: iload         7
       321: iconst_1
       322: iadd
       323: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       326: astore        5
       328: aload_0
       329: iload         7
       331: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;
       334: astore        4
       336: goto          401
       339: iload         8
       341: iconst_m1
       342: if_icmple     392
       345: iload         8
       347: aload_0
       348: invokevirtual #41                 // Method java/lang/String.length:()I
       351: if_icmple     381
       354: new           #4                  // class java/lang/NumberFormatException
       357: dup
       358: new           #47                 // class java/lang/StringBuilder
       361: dup
       362: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       365: aload_0
       366: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       369: ldc           #50                 // String  is not a valid number.
       371: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       374: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       377: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       380: athrow
       381: aload_0
       382: iload         8
       384: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;
       387: astore        4
       389: goto          398
       392: aload_0
       393: invokestatic  #55                 // Method getMantissa:(Ljava/lang/String;)Ljava/lang/String;
       396: astore        4
       398: aconst_null
       399: astore        5
       401: iload_3
       402: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z
       405: ifne          748
       408: iload_3
       409: bipush        46
       411: if_icmpeq     748
       414: iload         8
       416: iconst_m1
       417: if_icmple     450
       420: iload         8
       422: aload_0
       423: invokevirtual #41                 // Method java/lang/String.length:()I
       426: iconst_1
       427: isub
       428: if_icmpge     450
       431: aload_0
       432: iload         8
       434: iconst_1
       435: iadd
       436: aload_0
       437: invokevirtual #41                 // Method java/lang/String.length:()I
       440: iconst_1
       441: isub
       442: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       445: astore        6
       447: goto          453
       450: aconst_null
       451: astore        6
       453: aload_0
       454: iconst_0
       455: aload_0
       456: invokevirtual #41                 // Method java/lang/String.length:()I
       459: iconst_1
       460: isub
       461: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       464: astore        9
       466: aload         4
       468: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z
       471: ifeq          486
       474: aload         6
       476: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z
       479: ifeq          486
       482: iconst_1
       483: goto          487
       486: iconst_0
       487: istore        10
       489: iload_3
       490: lookupswitch  { // 6
                      68: 675
                      70: 638
                      76: 548
                     100: 675
                     102: 638
                     108: 548
                 default: 721
            }
       548: aload         5
       550: ifnonnull     611
       553: aload         6
       555: ifnonnull     611
       558: aload         9
       560: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z
       563: ifne          589
       566: aload         9
       568: iconst_0
       569: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
       572: bipush        45
       574: if_icmpne     589
       577: aload         9
       579: iconst_1
       580: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       583: invokestatic  #59                 // Method isDigits:(Ljava/lang/String;)Z
       586: ifne          597
       589: aload         9
       591: invokestatic  #59                 // Method isDigits:(Ljava/lang/String;)Z
       594: ifeq          611
       597: aload         9
       599: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;
       602: areturn
       603: astore        11
       605: aload         9
       607: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;
       610: areturn
       611: new           #4                  // class java/lang/NumberFormatException
       614: dup
       615: new           #47                 // class java/lang/StringBuilder
       618: dup
       619: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       622: aload_0
       623: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       626: ldc           #50                 // String  is not a valid number.
       628: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       631: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       634: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       637: athrow
       638: aload_0
       639: invokestatic  #60                 // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;
       642: astore        11
       644: aload         11
       646: invokevirtual #61                 // Method java/lang/Float.isInfinite:()Z
       649: ifne          670
       652: aload         11
       654: invokevirtual #24                 // Method java/lang/Float.floatValue:()F
       657: fconst_0
       658: fcmpl
       659: ifne          667
       662: iload         10
       664: ifeq          670
       667: aload         11
       669: areturn
       670: goto          675
       673: astore        11
       675: aload_0
       676: invokestatic  #62                 // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;
       679: astore        11
       681: aload         11
       683: invokevirtual #63                 // Method java/lang/Double.isInfinite:()Z
       686: ifne          708
       689: aload         11
       691: invokevirtual #64                 // Method java/lang/Double.floatValue:()F
       694: f2d
       695: dconst_0
       696: dcmpl
       697: ifne          705
       700: iload         10
       702: ifeq          708
       705: aload         11
       707: areturn
       708: goto          713
       711: astore        11
       713: aload         9
       715: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
       718: areturn
       719: astore        11
       721: new           #4                  // class java/lang/NumberFormatException
       724: dup
       725: new           #47                 // class java/lang/StringBuilder
       728: dup
       729: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       732: aload_0
       733: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       736: ldc           #50                 // String  is not a valid number.
       738: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       741: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       744: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
       747: athrow
       748: iload         8
       750: iconst_m1
       751: if_icmple     782
       754: iload         8
       756: aload_0
       757: invokevirtual #41                 // Method java/lang/String.length:()I
       760: iconst_1
       761: isub
       762: if_icmpge     782
       765: aload_0
       766: iload         8
       768: iconst_1
       769: iadd
       770: aload_0
       771: invokevirtual #41                 // Method java/lang/String.length:()I
       774: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
       777: astore        6
       779: goto          785
       782: aconst_null
       783: astore        6
       785: aload         5
       787: ifnonnull     814
       790: aload         6
       792: ifnonnull     814
       795: aload_0
       796: invokestatic  #45                 // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;
       799: areturn
       800: astore        9
       802: aload_0
       803: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;
       806: areturn
       807: astore        9
       809: aload_0
       810: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;
       813: areturn
       814: aload         4
       816: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z
       819: ifeq          834
       822: aload         6
       824: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z
       827: ifeq          834
       830: iconst_1
       831: goto          835
       834: iconst_0
       835: istore        9
       837: aload_0
       838: invokestatic  #60                 // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;
       841: astore        10
       843: aload_0
       844: invokestatic  #62                 // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;
       847: astore        11
       849: aload         10
       851: invokevirtual #61                 // Method java/lang/Float.isInfinite:()Z
       854: ifne          891
       857: aload         10
       859: invokevirtual #24                 // Method java/lang/Float.floatValue:()F
       862: fconst_0
       863: fcmpl
       864: ifne          872
       867: iload         9
       869: ifeq          891
       872: aload         10
       874: invokevirtual #65                 // Method java/lang/Float.toString:()Ljava/lang/String;
       877: aload         11
       879: invokevirtual #66                 // Method java/lang/Double.toString:()Ljava/lang/String;
       882: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       885: ifeq          891
       888: aload         10
       890: areturn
       891: aload         11
       893: invokevirtual #63                 // Method java/lang/Double.isInfinite:()Z
       896: ifne          942
       899: aload         11
       901: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D
       904: dconst_0
       905: dcmpl
       906: ifne          914
       909: iload         9
       911: ifeq          942
       914: aload_0
       915: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
       918: astore        12
       920: aload         12
       922: aload         11
       924: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D
       927: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
       930: invokevirtual #68                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I
       933: ifne          939
       936: aload         11
       938: areturn
       939: aload         12
       941: areturn
       942: goto          947
       945: astore        10
       947: aload_0
       948: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;
       951: areturn
      Exception table:
         from    to  target type
           597   602   603   Class java/lang/NumberFormatException
           638   669   673   Class java/lang/NumberFormatException
           675   707   711   Class java/lang/NumberFormatException
           713   718   719   Class java/lang/NumberFormatException
           795   799   800   Class java/lang/NumberFormatException
           802   806   807   Class java/lang/NumberFormatException
           837   890   945   Class java/lang/NumberFormatException
           891   938   945   Class java/lang/NumberFormatException
           939   941   945   Class java/lang/NumberFormatException
      LineNumberTable:
        line 651: 0
        line 652: 4
        line 654: 6
        line 655: 13
        line 658: 23
        line 659: 59
        line 660: 61
        line 661: 83
        line 662: 92
        line 663: 100
        line 660: 103
        line 666: 109
        line 667: 113
        line 668: 115
        line 669: 127
        line 670: 134
        line 671: 140
        line 668: 143
        line 676: 149
        line 677: 157
        line 678: 177
        line 680: 182
        line 681: 202
        line 683: 207
        line 685: 212
        line 689: 223
        line 690: 231
        line 694: 248
        line 695: 254
        line 696: 260
        line 697: 276
        line 699: 303
        line 701: 318
        line 703: 328
        line 705: 339
        line 706: 345
        line 707: 354
        line 709: 381
        line 711: 392
        line 713: 398
        line 715: 401
        line 716: 414
        line 717: 431
        line 719: 450
        line 722: 453
        line 723: 466
        line 724: 489
        line 727: 548
        line 729: 560
        line 731: 597
        line 732: 603
        line 735: 605
        line 738: 611
        line 742: 638
        line 743: 644
        line 746: 667
        line 751: 670
        line 749: 673
        line 756: 675
        line 757: 681
        line 758: 705
        line 762: 708
        line 760: 711
        line 764: 713
        line 765: 719
        line 770: 721
        line 776: 748
        line 777: 765
        line 779: 782
        line 781: 785
        line 784: 795
        line 785: 800
        line 789: 802
        line 790: 807
        line 793: 809
        line 797: 814
        line 799: 837
        line 800: 843
        line 801: 849
        line 802: 859
        line 803: 874
        line 804: 888
        line 806: 891
        line 807: 914
        line 808: 920
        line 809: 936
        line 811: 939
        line 815: 942
        line 813: 945
        line 816: 947
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           83      20     6   pfx   Ljava/lang/String;
          118      31     4     i   I
          115      97     3 firstSigDigit   C
          157      55     4 hexDigits   I
          315       3     5   dec   Ljava/lang/String;
          336       3     4  mant   Ljava/lang/String;
          328      11     5   dec   Ljava/lang/String;
          389       3     4  mant   Ljava/lang/String;
          447       3     6   exp   Ljava/lang/String;
          644      26    11     f   Ljava/lang/Float;
          681      27    11     d   Ljava/lang/Double;
          466     282     9 numeric   Ljava/lang/String;
          489     259    10 allZeros   Z
          453     295     6   exp   Ljava/lang/String;
          779       3     6   exp   Ljava/lang/String;
          920      22    12     b   Ljava/math/BigDecimal;
          843      99    10     f   Ljava/lang/Float;
          849      93    11     d   Ljava/lang/Double;
            0     952     0   str   Ljava/lang/String;
           59     893     1 hex_prefixes   [Ljava/lang/String;
           61     891     2 pfxLen   I
          223     729     3 lastChar   C
          398     554     4  mant   Ljava/lang/String;
          401     551     5   dec   Ljava/lang/String;
          785     167     6   exp   Ljava/lang/String;
          231     721     7 decPos   I
          248     704     8 expPos   I
          837     115     9 allZeros   Z
      StackMapTable: number_of_entries = 56
        frame_type = 6 /* same */
        frame_type = 16 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 32 /* same */
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 30
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 19 /* same */
        frame_type = 4 /* same */
        frame_type = 249 /* chop */
          offset_delta = 4
        frame_type = 255 /* full_frame */
          offset_delta = 63
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, top, top, top, int, int ]
          stack = []
        frame_type = 26 /* same */
        frame_type = 14 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, top, class java/lang/String, top, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 10
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, top, top, top, int, int ]
          stack = []
        frame_type = 41 /* same */
        frame_type = 10 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, class java/lang/String, top, top, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, class java/lang/String, class java/lang/String, top, int, int ]
          stack = []
        frame_type = 48 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, class java/lang/String, class java/lang/String, class java/lang/String, int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class java/lang/String ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 60
          locals = [ int ]
        frame_type = 40 /* same */
        frame_type = 7 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 7 /* same */
        frame_type = 26 /* same */
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ class java/lang/Float ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class java/lang/Double ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 1 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 1 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, class java/lang/String, class java/lang/String, top, int, int ]
          stack = []
        frame_type = 33 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/lang/String, class "[Ljava/lang/String;", int, int, class java/lang/String, class java/lang/String, class java/lang/String, int, int ]
          stack = []
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 6 /* same */
        frame_type = 19 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 254 /* append */
          offset_delta = 36
          locals = [ int, class java/lang/Float, class java/lang/Double ]
        frame_type = 18 /* same */
        frame_type = 22 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class java/math/BigDecimal ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 1 /* same */

  private static java.lang.String getMantissa(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokevirtual #41                 // Method java/lang/String.length:()I
         5: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 828: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   str   Ljava/lang/String;

  private static java.lang.String getMantissa(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Ljava/lang/String;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: iconst_0
         2: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
         5: istore_2
         6: iload_2
         7: bipush        45
         9: if_icmpeq     18
        12: iload_2
        13: bipush        43
        15: if_icmpne     22
        18: iconst_1
        19: goto          23
        22: iconst_0
        23: istore_3
        24: iload_3
        25: ifeq          37
        28: aload_0
        29: iconst_1
        30: iload_1
        31: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        34: goto          43
        37: aload_0
        38: iconst_0
        39: iload_1
        40: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;
        43: areturn
      LineNumberTable:
        line 841: 0
        line 842: 6
        line 844: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0   str   Ljava/lang/String;
            0      44     1 stopPos   I
            6      38     2 firstChar   C
           24      20     3 hasSign   Z
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ int ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]

  private static boolean isAllZeros(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: iconst_1
         5: ireturn
         6: aload_0
         7: invokevirtual #41                 // Method java/lang/String.length:()I
        10: iconst_1
        11: isub
        12: istore_1
        13: iload_1
        14: iflt          35
        17: aload_0
        18: iload_1
        19: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
        22: bipush        48
        24: if_icmpeq     29
        27: iconst_0
        28: ireturn
        29: iinc          1, -1
        32: goto          13
        35: aload_0
        36: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z
        39: ifne          46
        42: iconst_1
        43: goto          47
        46: iconst_0
        47: ireturn
      LineNumberTable:
        line 856: 0
        line 857: 4
        line 859: 6
        line 860: 17
        line 861: 27
        line 859: 29
        line 864: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      22     1     i   I
            0      48     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 6
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 15 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static java.lang.Float createFloat(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Float;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #69                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
        10: areturn
      LineNumberTable:
        line 878: 0
        line 879: 4
        line 881: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public static java.lang.Double createDouble(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Double;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #70                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;
        10: areturn
      LineNumberTable:
        line 894: 0
        line 895: 4
        line 897: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public static java.lang.Integer createInteger(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Integer;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #71                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;
        10: areturn
      LineNumberTable:
        line 912: 0
        line 913: 4
        line 916: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public static java.lang.Long createLong(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Long;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #72                 // Method java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;
        10: areturn
      LineNumberTable:
        line 931: 0
        line 932: 4
        line 934: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public static java.math.BigInteger createBigInteger(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/math/BigInteger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=5, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: iconst_0
         7: istore_1
         8: bipush        10
        10: istore_2
        11: iconst_0
        12: istore_3
        13: aload_0
        14: ldc           #73                 // String -
        16: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        19: ifeq          26
        22: iconst_1
        23: istore_3
        24: iconst_1
        25: istore_1
        26: aload_0
        27: ldc           #34                 // String 0x
        29: iload_1
        30: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
        33: ifne          46
        36: aload_0
        37: ldc           #35                 // String 0X
        39: iload_1
        40: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
        43: ifeq          55
        46: bipush        16
        48: istore_2
        49: iinc          1, 2
        52: goto          100
        55: aload_0
        56: ldc           #38                 // String #
        58: iload_1
        59: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
        62: ifeq          74
        65: bipush        16
        67: istore_2
        68: iinc          1, 1
        71: goto          100
        74: aload_0
        75: ldc           #75                 // String 0
        77: iload_1
        78: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z
        81: ifeq          100
        84: aload_0
        85: invokevirtual #41                 // Method java/lang/String.length:()I
        88: iload_1
        89: iconst_1
        90: iadd
        91: if_icmple     100
        94: bipush        8
        96: istore_2
        97: iinc          1, 1
       100: new           #76                 // class java/math/BigInteger
       103: dup
       104: aload_0
       105: iload_1
       106: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       109: iload_2
       110: invokespecial #77                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
       113: astore        4
       115: iload_3
       116: ifeq          127
       119: aload         4
       121: invokevirtual #78                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;
       124: goto          129
       127: aload         4
       129: areturn
      LineNumberTable:
        line 948: 0
        line 949: 4
        line 951: 6
        line 952: 8
        line 953: 11
        line 954: 13
        line 955: 22
        line 956: 24
        line 958: 26
        line 959: 46
        line 960: 49
        line 961: 55
        line 962: 65
        line 963: 68
        line 964: 74
        line 965: 94
        line 966: 97
        line 969: 100
        line 970: 115
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     130     0   str   Ljava/lang/String;
            8     122     1   pos   I
           11     119     2 radix   I
           13     117     3 negate   Z
          115      15     4 value   Ljava/math/BigInteger;
      StackMapTable: number_of_entries = 8
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 19
          locals = [ int, int, int ]
        frame_type = 19 /* same */
        frame_type = 8 /* same */
        frame_type = 18 /* same */
        frame_type = 25 /* same */
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class java/math/BigInteger ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/math/BigInteger ]

  public static java.math.BigDecimal createBigDecimal(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: invokestatic  #30                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z
        10: ifeq          23
        13: new           #4                  // class java/lang/NumberFormatException
        16: dup
        17: ldc           #31                 // String A blank string is not a valid number
        19: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        22: athrow
        23: aload_0
        24: invokevirtual #79                 // Method java/lang/String.trim:()Ljava/lang/String;
        27: ldc           #80                 // String --
        29: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        32: ifeq          62
        35: new           #4                  // class java/lang/NumberFormatException
        38: dup
        39: new           #47                 // class java/lang/StringBuilder
        42: dup
        43: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
        46: aload_0
        47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: ldc           #50                 // String  is not a valid number.
        52: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        58: invokespecial #32                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
        61: athrow
        62: new           #81                 // class java/math/BigDecimal
        65: dup
        66: aload_0
        67: invokespecial #82                 // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
        70: areturn
      LineNumberTable:
        line 983: 0
        line 984: 4
        line 987: 6
        line 988: 13
        line 990: 23
        line 995: 35
        line 997: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 6 /* same */
        frame_type = 16 /* same */
        frame_type = 38 /* same */

  public static long min(long...);
    descriptor: ([J)J
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: laload
         7: lstore_1
         8: iconst_1
         9: istore_3
        10: iload_3
        11: aload_0
        12: arraylength
        13: if_icmpge     34
        16: aload_0
        17: iload_3
        18: laload
        19: lload_1
        20: lcmp
        21: ifge          28
        24: aload_0
        25: iload_3
        26: laload
        27: lstore_1
        28: iinc          3, 1
        31: goto          10
        34: lload_1
        35: lreturn
      LineNumberTable:
        line 1013: 0
        line 1016: 4
        line 1017: 8
        line 1018: 16
        line 1019: 24
        line 1017: 28
        line 1023: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      24     3     i   I
            0      36     0 array   [J
            8      28     1   min   J
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ long, int ]
        frame_type = 17 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static int min(int...);
    descriptor: ([I)I
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: iaload
         7: istore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     33
        16: aload_0
        17: iload_2
        18: iaload
        19: iload_1
        20: if_icmpge     27
        23: aload_0
        24: iload_2
        25: iaload
        26: istore_1
        27: iinc          2, 1
        30: goto          10
        33: iload_1
        34: ireturn
      LineNumberTable:
        line 1037: 0
        line 1040: 4
        line 1041: 8
        line 1042: 16
        line 1043: 23
        line 1041: 27
        line 1047: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     2     j   I
            0      35     0 array   [I
            8      27     1   min   I
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static short min(short...);
    descriptor: ([S)S
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: saload
         7: istore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     33
        16: aload_0
        17: iload_2
        18: saload
        19: iload_1
        20: if_icmpge     27
        23: aload_0
        24: iload_2
        25: saload
        26: istore_1
        27: iinc          2, 1
        30: goto          10
        33: iload_1
        34: ireturn
      LineNumberTable:
        line 1061: 0
        line 1064: 4
        line 1065: 8
        line 1066: 16
        line 1067: 23
        line 1065: 27
        line 1071: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     2     i   I
            0      35     0 array   [S
            8      27     1   min   S
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static byte min(byte...);
    descriptor: ([B)B
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: baload
         7: istore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     33
        16: aload_0
        17: iload_2
        18: baload
        19: iload_1
        20: if_icmpge     27
        23: aload_0
        24: iload_2
        25: baload
        26: istore_1
        27: iinc          2, 1
        30: goto          10
        33: iload_1
        34: ireturn
      LineNumberTable:
        line 1085: 0
        line 1088: 4
        line 1089: 8
        line 1090: 16
        line 1091: 23
        line 1089: 27
        line 1095: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     2     i   I
            0      35     0 array   [B
            8      27     1   min   B
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static double min(double...);
    descriptor: ([D)D
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: daload
         7: dstore_1
         8: iconst_1
         9: istore_3
        10: iload_3
        11: aload_0
        12: arraylength
        13: if_icmpge     47
        16: aload_0
        17: iload_3
        18: daload
        19: invokestatic  #84                 // Method java/lang/Double.isNaN:(D)Z
        22: ifeq          29
        25: ldc2_w        #86                 // double NaNd
        28: dreturn
        29: aload_0
        30: iload_3
        31: daload
        32: dload_1
        33: dcmpg
        34: ifge          41
        37: aload_0
        38: iload_3
        39: daload
        40: dstore_1
        41: iinc          3, 1
        44: goto          10
        47: dload_1
        48: dreturn
      LineNumberTable:
        line 1110: 0
        line 1113: 4
        line 1114: 8
        line 1115: 16
        line 1116: 25
        line 1118: 29
        line 1119: 37
        line 1114: 41
        line 1123: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      37     3     i   I
            0      49     0 array   [D
            8      41     1   min   D
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ double, int ]
        frame_type = 18 /* same */
        frame_type = 11 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static float min(float...);
    descriptor: ([F)F
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: faload
         7: fstore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     46
        16: aload_0
        17: iload_2
        18: faload
        19: invokestatic  #88                 // Method java/lang/Float.isNaN:(F)Z
        22: ifeq          28
        25: ldc           #90                 // float NaNf
        27: freturn
        28: aload_0
        29: iload_2
        30: faload
        31: fload_1
        32: fcmpg
        33: ifge          40
        36: aload_0
        37: iload_2
        38: faload
        39: fstore_1
        40: iinc          2, 1
        43: goto          10
        46: fload_1
        47: freturn
      LineNumberTable:
        line 1138: 0
        line 1141: 4
        line 1142: 8
        line 1143: 16
        line 1144: 25
        line 1146: 28
        line 1147: 36
        line 1142: 40
        line 1151: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      36     2     i   I
            0      48     0 array   [F
            8      40     1   min   F
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ float, int ]
        frame_type = 17 /* same */
        frame_type = 11 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static long max(long...);
    descriptor: ([J)J
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: laload
         7: lstore_1
         8: iconst_1
         9: istore_3
        10: iload_3
        11: aload_0
        12: arraylength
        13: if_icmpge     34
        16: aload_0
        17: iload_3
        18: laload
        19: lload_1
        20: lcmp
        21: ifle          28
        24: aload_0
        25: iload_3
        26: laload
        27: lstore_1
        28: iinc          3, 1
        31: goto          10
        34: lload_1
        35: lreturn
      LineNumberTable:
        line 1167: 0
        line 1170: 4
        line 1171: 8
        line 1172: 16
        line 1173: 24
        line 1171: 28
        line 1177: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      24     3     j   I
            0      36     0 array   [J
            8      28     1   max   J
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ long, int ]
        frame_type = 17 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static int max(int...);
    descriptor: ([I)I
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: iaload
         7: istore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     33
        16: aload_0
        17: iload_2
        18: iaload
        19: iload_1
        20: if_icmple     27
        23: aload_0
        24: iload_2
        25: iaload
        26: istore_1
        27: iinc          2, 1
        30: goto          10
        33: iload_1
        34: ireturn
      LineNumberTable:
        line 1191: 0
        line 1194: 4
        line 1195: 8
        line 1196: 16
        line 1197: 23
        line 1195: 27
        line 1201: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     2     j   I
            0      35     0 array   [I
            8      27     1   max   I
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static short max(short...);
    descriptor: ([S)S
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: saload
         7: istore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     33
        16: aload_0
        17: iload_2
        18: saload
        19: iload_1
        20: if_icmple     27
        23: aload_0
        24: iload_2
        25: saload
        26: istore_1
        27: iinc          2, 1
        30: goto          10
        33: iload_1
        34: ireturn
      LineNumberTable:
        line 1215: 0
        line 1218: 4
        line 1219: 8
        line 1220: 16
        line 1221: 23
        line 1219: 27
        line 1225: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     2     i   I
            0      35     0 array   [S
            8      27     1   max   S
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static byte max(byte...);
    descriptor: ([B)B
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: baload
         7: istore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     33
        16: aload_0
        17: iload_2
        18: baload
        19: iload_1
        20: if_icmple     27
        23: aload_0
        24: iload_2
        25: baload
        26: istore_1
        27: iinc          2, 1
        30: goto          10
        33: iload_1
        34: ireturn
      LineNumberTable:
        line 1239: 0
        line 1242: 4
        line 1243: 8
        line 1244: 16
        line 1245: 23
        line 1243: 27
        line 1249: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     2     i   I
            0      35     0 array   [B
            8      27     1   max   B
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 16 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static double max(double...);
    descriptor: ([D)D
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: daload
         7: dstore_1
         8: iconst_1
         9: istore_3
        10: iload_3
        11: aload_0
        12: arraylength
        13: if_icmpge     47
        16: aload_0
        17: iload_3
        18: daload
        19: invokestatic  #84                 // Method java/lang/Double.isNaN:(D)Z
        22: ifeq          29
        25: ldc2_w        #86                 // double NaNd
        28: dreturn
        29: aload_0
        30: iload_3
        31: daload
        32: dload_1
        33: dcmpl
        34: ifle          41
        37: aload_0
        38: iload_3
        39: daload
        40: dstore_1
        41: iinc          3, 1
        44: goto          10
        47: dload_1
        48: dreturn
      LineNumberTable:
        line 1264: 0
        line 1267: 4
        line 1268: 8
        line 1269: 16
        line 1270: 25
        line 1272: 29
        line 1273: 37
        line 1268: 41
        line 1277: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      37     3     j   I
            0      49     0 array   [D
            8      41     1   max   D
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ double, int ]
        frame_type = 18 /* same */
        frame_type = 11 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public static float max(float...);
    descriptor: ([F)F
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V
         4: aload_0
         5: iconst_0
         6: faload
         7: fstore_1
         8: iconst_1
         9: istore_2
        10: iload_2
        11: aload_0
        12: arraylength
        13: if_icmpge     46
        16: aload_0
        17: iload_2
        18: faload
        19: invokestatic  #88                 // Method java/lang/Float.isNaN:(F)Z
        22: ifeq          28
        25: ldc           #90                 // float NaNf
        27: freturn
        28: aload_0
        29: iload_2
        30: faload
        31: fload_1
        32: fcmpl
        33: ifle          40
        36: aload_0
        37: iload_2
        38: faload
        39: fstore_1
        40: iinc          2, 1
        43: goto          10
        46: fload_1
        47: freturn
      LineNumberTable:
        line 1292: 0
        line 1295: 4
        line 1296: 8
        line 1297: 16
        line 1298: 25
        line 1300: 28
        line 1301: 36
        line 1296: 40
        line 1305: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      36     2     j   I
            0      48     0 array   [F
            8      40     1   max   F
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ float, int ]
        frame_type = 17 /* same */
        frame_type = 11 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  private static void validateArray(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ldc           #91                 // String The Array must not be null
        11: iconst_0
        12: anewarray     #92                 // class java/lang/Object
        15: invokestatic  #93                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        18: aload_0
        19: invokestatic  #94                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
        22: ifeq          29
        25: iconst_1
        26: goto          30
        29: iconst_0
        30: ldc           #95                 // String Array cannot be empty.
        32: iconst_0
        33: anewarray     #92                 // class java/lang/Object
        36: invokestatic  #93                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V
        39: return
      LineNumberTable:
        line 1315: 0
        line 1316: 18
        line 1317: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0 array   Ljava/lang/Object;
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 19 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static long min(long, long, long);
    descriptor: (JJJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: lload_2
         1: lload_0
         2: lcmp
         3: ifge          8
         6: lload_2
         7: lstore_0
         8: lload         4
        10: lload_0
        11: lcmp
        12: ifge          18
        15: lload         4
        17: lstore_0
        18: lload_0
        19: lreturn
      LineNumberTable:
        line 1330: 0
        line 1331: 6
        line 1333: 8
        line 1334: 15
        line 1336: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0     a   J
            0      20     2     b   J
            0      20     4     c   J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 9 /* same */

  public static int min(int, int, int);
    descriptor: (III)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_0
         2: if_icmpge     7
         5: iload_1
         6: istore_0
         7: iload_2
         8: iload_0
         9: if_icmpge     14
        12: iload_2
        13: istore_0
        14: iload_0
        15: ireturn
      LineNumberTable:
        line 1348: 0
        line 1349: 5
        line 1351: 7
        line 1352: 12
        line 1354: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   I
            0      16     1     b   I
            0      16     2     c   I
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static short min(short, short, short);
    descriptor: (SSS)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_0
         2: if_icmpge     7
         5: iload_1
         6: istore_0
         7: iload_2
         8: iload_0
         9: if_icmpge     14
        12: iload_2
        13: istore_0
        14: iload_0
        15: ireturn
      LineNumberTable:
        line 1366: 0
        line 1367: 5
        line 1369: 7
        line 1370: 12
        line 1372: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   S
            0      16     1     b   S
            0      16     2     c   S
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static byte min(byte, byte, byte);
    descriptor: (BBB)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_0
         2: if_icmpge     7
         5: iload_1
         6: istore_0
         7: iload_2
         8: iload_0
         9: if_icmpge     14
        12: iload_2
        13: istore_0
        14: iload_0
        15: ireturn
      LineNumberTable:
        line 1384: 0
        line 1385: 5
        line 1387: 7
        line 1388: 12
        line 1390: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   B
            0      16     1     b   B
            0      16     2     c   B
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static double min(double, double, double);
    descriptor: (DDD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: dload_0
         1: dload_2
         2: invokestatic  #96                 // Method java/lang/Math.min:(DD)D
         5: dload         4
         7: invokestatic  #96                 // Method java/lang/Math.min:(DD)D
        10: dreturn
      LineNumberTable:
        line 1406: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     a   D
            0      11     2     b   D
            0      11     4     c   D

  public static float min(float, float, float);
    descriptor: (FFF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: fload_0
         1: fload_1
         2: invokestatic  #97                 // Method java/lang/Math.min:(FF)F
         5: fload_2
         6: invokestatic  #97                 // Method java/lang/Math.min:(FF)F
         9: freturn
      LineNumberTable:
        line 1422: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     a   F
            0      10     1     b   F
            0      10     2     c   F

  public static long max(long, long, long);
    descriptor: (JJJ)J
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: lload_2
         1: lload_0
         2: lcmp
         3: ifle          8
         6: lload_2
         7: lstore_0
         8: lload         4
        10: lload_0
        11: lcmp
        12: ifle          18
        15: lload         4
        17: lstore_0
        18: lload_0
        19: lreturn
      LineNumberTable:
        line 1436: 0
        line 1437: 6
        line 1439: 8
        line 1440: 15
        line 1442: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0     a   J
            0      20     2     b   J
            0      20     4     c   J
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 9 /* same */

  public static int max(int, int, int);
    descriptor: (III)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_0
         2: if_icmple     7
         5: iload_1
         6: istore_0
         7: iload_2
         8: iload_0
         9: if_icmple     14
        12: iload_2
        13: istore_0
        14: iload_0
        15: ireturn
      LineNumberTable:
        line 1454: 0
        line 1455: 5
        line 1457: 7
        line 1458: 12
        line 1460: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   I
            0      16     1     b   I
            0      16     2     c   I
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static short max(short, short, short);
    descriptor: (SSS)S
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_0
         2: if_icmple     7
         5: iload_1
         6: istore_0
         7: iload_2
         8: iload_0
         9: if_icmple     14
        12: iload_2
        13: istore_0
        14: iload_0
        15: ireturn
      LineNumberTable:
        line 1472: 0
        line 1473: 5
        line 1475: 7
        line 1476: 12
        line 1478: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   S
            0      16     1     b   S
            0      16     2     c   S
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static byte max(byte, byte, byte);
    descriptor: (BBB)B
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: iload_1
         1: iload_0
         2: if_icmple     7
         5: iload_1
         6: istore_0
         7: iload_2
         8: iload_0
         9: if_icmple     14
        12: iload_2
        13: istore_0
        14: iload_0
        15: ireturn
      LineNumberTable:
        line 1490: 0
        line 1491: 5
        line 1493: 7
        line 1494: 12
        line 1496: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0     a   B
            0      16     1     b   B
            0      16     2     c   B
      StackMapTable: number_of_entries = 2
        frame_type = 7 /* same */
        frame_type = 6 /* same */

  public static double max(double, double, double);
    descriptor: (DDD)D
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: dload_0
         1: dload_2
         2: invokestatic  #98                 // Method java/lang/Math.max:(DD)D
         5: dload         4
         7: invokestatic  #98                 // Method java/lang/Math.max:(DD)D
        10: dreturn
      LineNumberTable:
        line 1512: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     a   D
            0      11     2     b   D
            0      11     4     c   D

  public static float max(float, float, float);
    descriptor: (FFF)F
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=3, args_size=3
         0: fload_0
         1: fload_1
         2: invokestatic  #99                 // Method java/lang/Math.max:(FF)F
         5: fload_2
         6: invokestatic  #99                 // Method java/lang/Math.max:(FF)F
         9: freturn
      LineNumberTable:
        line 1528: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     a   F
            0      10     1     b   F
            0      10     2     c   F

  public static boolean isDigits(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #100                // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z
         4: ireturn
      LineNumberTable:
        line 1543: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   str   Ljava/lang/String;

  public static boolean isNumber(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #101                // Method isCreatable:(Ljava/lang/String;)Z
         4: ireturn
      LineNumberTable:
        line 1573: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   str   Ljava/lang/String;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #292()
        java.lang.Deprecated

  public static boolean isCreatable(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=9, args_size=1
         0: aload_0
         1: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z
         4: ifeq          9
         7: iconst_0
         8: ireturn
         9: aload_0
        10: invokevirtual #103                // Method java/lang/String.toCharArray:()[C
        13: astore_1
        14: aload_1
        15: arraylength
        16: istore_2
        17: iconst_0
        18: istore_3
        19: iconst_0
        20: istore        4
        22: iconst_0
        23: istore        5
        25: iconst_0
        26: istore        6
        28: aload_1
        29: iconst_0
        30: caload
        31: bipush        45
        33: if_icmpeq     44
        36: aload_1
        37: iconst_0
        38: caload
        39: bipush        43
        41: if_icmpne     48
        44: iconst_1
        45: goto          49
        48: iconst_0
        49: istore        7
        51: iload_2
        52: iload         7
        54: iconst_1
        55: iadd
        56: if_icmple     237
        59: aload_1
        60: iload         7
        62: caload
        63: bipush        48
        65: if_icmpne     237
        68: aload_0
        69: bipush        46
        71: invokestatic  #104                // Method org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z
        74: ifne          237
        77: aload_1
        78: iload         7
        80: iconst_1
        81: iadd
        82: caload
        83: bipush        120
        85: if_icmpeq     99
        88: aload_1
        89: iload         7
        91: iconst_1
        92: iadd
        93: caload
        94: bipush        88
        96: if_icmpne     184
        99: iload         7
       101: iconst_2
       102: iadd
       103: istore        8
       105: iload         8
       107: iload_2
       108: if_icmpne     113
       111: iconst_0
       112: ireturn
       113: iload         8
       115: aload_1
       116: arraylength
       117: if_icmpge     182
       120: aload_1
       121: iload         8
       123: caload
       124: bipush        48
       126: if_icmplt     138
       129: aload_1
       130: iload         8
       132: caload
       133: bipush        57
       135: if_icmple     176
       138: aload_1
       139: iload         8
       141: caload
       142: bipush        97
       144: if_icmplt     156
       147: aload_1
       148: iload         8
       150: caload
       151: bipush        102
       153: if_icmple     176
       156: aload_1
       157: iload         8
       159: caload
       160: bipush        65
       162: if_icmplt     174
       165: aload_1
       166: iload         8
       168: caload
       169: bipush        70
       171: if_icmple     176
       174: iconst_0
       175: ireturn
       176: iinc          8, 1
       179: goto          113
       182: iconst_1
       183: ireturn
       184: aload_1
       185: iload         7
       187: iconst_1
       188: iadd
       189: caload
       190: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z
       193: ifeq          237
       196: iload         7
       198: iconst_1
       199: iadd
       200: istore        8
       202: iload         8
       204: aload_1
       205: arraylength
       206: if_icmpge     235
       209: aload_1
       210: iload         8
       212: caload
       213: bipush        48
       215: if_icmplt     227
       218: aload_1
       219: iload         8
       221: caload
       222: bipush        55
       224: if_icmple     229
       227: iconst_0
       228: ireturn
       229: iinc          8, 1
       232: goto          202
       235: iconst_1
       236: ireturn
       237: iinc          2, -1
       240: iload         7
       242: istore        8
       244: iload         8
       246: iload_2
       247: if_icmplt     268
       250: iload         8
       252: iload_2
       253: iconst_1
       254: iadd
       255: if_icmpge     402
       258: iload         5
       260: ifeq          402
       263: iload         6
       265: ifne          402
       268: aload_1
       269: iload         8
       271: caload
       272: bipush        48
       274: if_icmplt     295
       277: aload_1
       278: iload         8
       280: caload
       281: bipush        57
       283: if_icmpgt     295
       286: iconst_1
       287: istore        6
       289: iconst_0
       290: istore        5
       292: goto          396
       295: aload_1
       296: iload         8
       298: caload
       299: bipush        46
       301: if_icmpne     321
       304: iload         4
       306: ifne          313
       309: iload_3
       310: ifeq          315
       313: iconst_0
       314: ireturn
       315: iconst_1
       316: istore        4
       318: goto          396
       321: aload_1
       322: iload         8
       324: caload
       325: bipush        101
       327: if_icmpeq     339
       330: aload_1
       331: iload         8
       333: caload
       334: bipush        69
       336: if_icmpne     360
       339: iload_3
       340: ifeq          345
       343: iconst_0
       344: ireturn
       345: iload         6
       347: ifne          352
       350: iconst_0
       351: ireturn
       352: iconst_1
       353: istore_3
       354: iconst_1
       355: istore        5
       357: goto          396
       360: aload_1
       361: iload         8
       363: caload
       364: bipush        43
       366: if_icmpeq     378
       369: aload_1
       370: iload         8
       372: caload
       373: bipush        45
       375: if_icmpne     394
       378: iload         5
       380: ifne          385
       383: iconst_0
       384: ireturn
       385: iconst_0
       386: istore        5
       388: iconst_0
       389: istore        6
       391: goto          396
       394: iconst_0
       395: ireturn
       396: iinc          8, 1
       399: goto          244
       402: iload         8
       404: aload_1
       405: arraylength
       406: if_icmpge     556
       409: aload_1
       410: iload         8
       412: caload
       413: bipush        48
       415: if_icmplt     429
       418: aload_1
       419: iload         8
       421: caload
       422: bipush        57
       424: if_icmpgt     429
       427: iconst_1
       428: ireturn
       429: aload_1
       430: iload         8
       432: caload
       433: bipush        101
       435: if_icmpeq     447
       438: aload_1
       439: iload         8
       441: caload
       442: bipush        69
       444: if_icmpne     449
       447: iconst_0
       448: ireturn
       449: aload_1
       450: iload         8
       452: caload
       453: bipush        46
       455: if_icmpne     472
       458: iload         4
       460: ifne          467
       463: iload_3
       464: ifeq          469
       467: iconst_0
       468: ireturn
       469: iload         6
       471: ireturn
       472: iload         5
       474: ifne          516
       477: aload_1
       478: iload         8
       480: caload
       481: bipush        100
       483: if_icmpeq     513
       486: aload_1
       487: iload         8
       489: caload
       490: bipush        68
       492: if_icmpeq     513
       495: aload_1
       496: iload         8
       498: caload
       499: bipush        102
       501: if_icmpeq     513
       504: aload_1
       505: iload         8
       507: caload
       508: bipush        70
       510: if_icmpne     516
       513: iload         6
       515: ireturn
       516: aload_1
       517: iload         8
       519: caload
       520: bipush        108
       522: if_icmpeq     534
       525: aload_1
       526: iload         8
       528: caload
       529: bipush        76
       531: if_icmpne     554
       534: iload         6
       536: ifeq          552
       539: iload_3
       540: ifne          552
       543: iload         4
       545: ifne          552
       548: iconst_1
       549: goto          553
       552: iconst_0
       553: ireturn
       554: iconst_0
       555: ireturn
       556: iload         5
       558: ifne          570
       561: iload         6
       563: ifeq          570
       566: iconst_1
       567: goto          571
       570: iconst_0
       571: ireturn
      LineNumberTable:
        line 1599: 0
        line 1600: 7
        line 1602: 9
        line 1603: 14
        line 1604: 17
        line 1605: 19
        line 1606: 22
        line 1607: 25
        line 1609: 28
        line 1610: 51
        line 1611: 77
        line 1612: 99
        line 1613: 105
        line 1614: 111
        line 1617: 113
        line 1618: 120
        line 1621: 174
        line 1617: 176
        line 1624: 182
        line 1625: 184
        line 1627: 196
        line 1628: 202
        line 1629: 209
        line 1630: 227
        line 1628: 229
        line 1633: 235
        line 1636: 237
        line 1638: 240
        line 1641: 244
        line 1642: 268
        line 1643: 286
        line 1644: 289
        line 1646: 295
        line 1647: 304
        line 1649: 313
        line 1651: 315
        line 1652: 321
        line 1654: 339
        line 1656: 343
        line 1658: 345
        line 1659: 350
        line 1661: 352
        line 1662: 354
        line 1663: 360
        line 1664: 378
        line 1665: 383
        line 1667: 385
        line 1668: 388
        line 1670: 394
        line 1672: 396
        line 1674: 402
        line 1675: 409
        line 1677: 427
        line 1679: 429
        line 1681: 447
        line 1683: 449
        line 1684: 458
        line 1686: 467
        line 1689: 469
        line 1691: 472
        line 1696: 513
        line 1698: 516
        line 1701: 534
        line 1704: 554
        line 1708: 556
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          105      79     8     i   I
          202      35     8     i   I
            0     572     0   str   Ljava/lang/String;
           14     558     1 chars   [C
           17     555     2    sz   I
           19     553     3 hasExp   Z
           22     550     4 hasDecPoint   Z
           25     547     5 allowSigns   Z
           28     544     6 foundDigit   Z
           51     521     7 start   I
          244     328     8     i   I
      StackMapTable: number_of_entries = 47
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class java/lang/String, class "[C", int, int, int, int, int ]
          stack = []
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 49
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ int ]
        frame_type = 24 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 1 /* same */
        frame_type = 5 /* same */
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ int ]
        frame_type = 24 /* same */
        frame_type = 1 /* same */
        frame_type = 5 /* same */
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 23 /* same */
        frame_type = 26 /* same */
        frame_type = 17 /* same */
        frame_type = 1 /* same */
        frame_type = 5 /* same */
        frame_type = 17 /* same */
        frame_type = 5 /* same */
        frame_type = 6 /* same */
        frame_type = 7 /* same */
        frame_type = 17 /* same */
        frame_type = 6 /* same */
        frame_type = 8 /* same */
        frame_type = 1 /* same */
        frame_type = 5 /* same */
        frame_type = 26 /* same */
        frame_type = 17 /* same */
        frame_type = 1 /* same */
        frame_type = 17 /* same */
        frame_type = 1 /* same */
        frame_type = 2 /* same */
        frame_type = 40 /* same */
        frame_type = 2 /* same */
        frame_type = 17 /* same */
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 0 /* same */
        frame_type = 1 /* same */
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static boolean isParsable(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z
         4: ifeq          9
         7: iconst_0
         8: ireturn
         9: aload_0
        10: aload_0
        11: invokevirtual #41                 // Method java/lang/String.length:()I
        14: iconst_1
        15: isub
        16: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
        19: bipush        46
        21: if_icmpne     26
        24: iconst_0
        25: ireturn
        26: aload_0
        27: iconst_0
        28: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
        31: bipush        45
        33: if_icmpne     52
        36: aload_0
        37: invokevirtual #41                 // Method java/lang/String.length:()I
        40: iconst_1
        41: if_icmpne     46
        44: iconst_0
        45: ireturn
        46: aload_0
        47: iconst_1
        48: invokestatic  #105                // Method withDecimalsParsing:(Ljava/lang/String;I)Z
        51: ireturn
        52: aload_0
        53: iconst_0
        54: invokestatic  #105                // Method withDecimalsParsing:(Ljava/lang/String;I)Z
        57: ireturn
      LineNumberTable:
        line 1729: 0
        line 1730: 7
        line 1732: 9
        line 1733: 24
        line 1735: 26
        line 1736: 36
        line 1737: 44
        line 1739: 46
        line 1741: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0   str   Ljava/lang/String;
      StackMapTable: number_of_entries = 4
        frame_type = 9 /* same */
        frame_type = 16 /* same */
        frame_type = 19 /* same */
        frame_type = 5 /* same */

  private static boolean withDecimalsParsing(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=5, args_size=2
         0: iconst_0
         1: istore_2
         2: iload_1
         3: istore_3
         4: iload_3
         5: aload_0
         6: invokevirtual #41                 // Method java/lang/String.length:()I
         9: if_icmpge     68
        12: aload_0
        13: iload_3
        14: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
        17: bipush        46
        19: if_icmpne     26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: istore        4
        29: iload         4
        31: ifeq          37
        34: iinc          2, 1
        37: iload_2
        38: iconst_1
        39: if_icmple     44
        42: iconst_0
        43: ireturn
        44: iload         4
        46: ifne          62
        49: aload_0
        50: iload_3
        51: invokevirtual #42                 // Method java/lang/String.charAt:(I)C
        54: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z
        57: ifne          62
        60: iconst_0
        61: ireturn
        62: iinc          3, 1
        65: goto          4
        68: iconst_1
        69: ireturn
      LineNumberTable:
        line 1745: 0
        line 1746: 2
        line 1747: 12
        line 1748: 29
        line 1749: 34
        line 1751: 37
        line 1752: 42
        line 1754: 44
        line 1755: 60
        line 1746: 62
        line 1758: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           29      33     4 isDecimalPoint   Z
            4      64     3     i   I
            0      70     0   str   Ljava/lang/String;
            0      70     1 beginIdx   I
            2      68     2 decimalPoints   I
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 4
          locals = [ int, int ]
        frame_type = 21 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 17
        frame_type = 250 /* chop */
          offset_delta = 5

  public static int compare(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: if_icmpne     7
         5: iconst_0
         6: ireturn
         7: iload_0
         8: iload_1
         9: if_icmpge     16
        12: iconst_m1
        13: goto          17
        16: iconst_1
        17: ireturn
      LineNumberTable:
        line 1772: 0
        line 1773: 5
        line 1775: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     x   I
            0      18     1     y   I
      StackMapTable: number_of_entries = 3
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static int compare(long, long);
    descriptor: (JJ)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=2
         0: lload_0
         1: lload_2
         2: lcmp
         3: ifne          8
         6: iconst_0
         7: ireturn
         8: lload_0
         9: lload_2
        10: lcmp
        11: ifge          18
        14: iconst_m1
        15: goto          19
        18: iconst_1
        19: ireturn
      LineNumberTable:
        line 1789: 0
        line 1790: 6
        line 1792: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0     x   J
            0      20     2     y   J
      StackMapTable: number_of_entries = 3
        frame_type = 8 /* same */
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static int compare(short, short);
    descriptor: (SS)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: if_icmpne     7
         5: iconst_0
         6: ireturn
         7: iload_0
         8: iload_1
         9: if_icmpge     16
        12: iconst_m1
        13: goto          17
        16: iconst_1
        17: ireturn
      LineNumberTable:
        line 1806: 0
        line 1807: 5
        line 1809: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     x   S
            0      18     1     y   S
      StackMapTable: number_of_entries = 3
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public static int compare(byte, byte);
    descriptor: (BB)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_0
         1: iload_1
         2: isub
         3: ireturn
      LineNumberTable:
        line 1823: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0     x   B
            0       4     1     y   B

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: lconst_0
         1: invokestatic  #106                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
         4: putstatic     #107                // Field LONG_ZERO:Ljava/lang/Long;
         7: lconst_1
         8: invokestatic  #106                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        11: putstatic     #108                // Field LONG_ONE:Ljava/lang/Long;
        14: ldc2_w        #109                // long -1l
        17: invokestatic  #106                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        20: putstatic     #111                // Field LONG_MINUS_ONE:Ljava/lang/Long;
        23: iconst_0
        24: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        27: putstatic     #113                // Field INTEGER_ZERO:Ljava/lang/Integer;
        30: iconst_1
        31: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        34: putstatic     #114                // Field INTEGER_ONE:Ljava/lang/Integer;
        37: iconst_2
        38: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        41: putstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;
        44: iconst_m1
        45: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        48: putstatic     #115                // Field INTEGER_MINUS_ONE:Ljava/lang/Integer;
        51: iconst_0
        52: invokestatic  #116                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
        55: putstatic     #117                // Field SHORT_ZERO:Ljava/lang/Short;
        58: iconst_1
        59: invokestatic  #116                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
        62: putstatic     #118                // Field SHORT_ONE:Ljava/lang/Short;
        65: iconst_m1
        66: invokestatic  #116                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
        69: putstatic     #119                // Field SHORT_MINUS_ONE:Ljava/lang/Short;
        72: iconst_0
        73: invokestatic  #120                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
        76: putstatic     #121                // Field BYTE_ZERO:Ljava/lang/Byte;
        79: iconst_1
        80: invokestatic  #120                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
        83: putstatic     #122                // Field BYTE_ONE:Ljava/lang/Byte;
        86: iconst_m1
        87: invokestatic  #120                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
        90: putstatic     #123                // Field BYTE_MINUS_ONE:Ljava/lang/Byte;
        93: dconst_0
        94: invokestatic  #124                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        97: putstatic     #125                // Field DOUBLE_ZERO:Ljava/lang/Double;
       100: dconst_1
       101: invokestatic  #124                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       104: putstatic     #126                // Field DOUBLE_ONE:Ljava/lang/Double;
       107: ldc2_w        #127                // double -1.0d
       110: invokestatic  #124                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       113: putstatic     #129                // Field DOUBLE_MINUS_ONE:Ljava/lang/Double;
       116: fconst_0
       117: invokestatic  #130                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       120: putstatic     #131                // Field FLOAT_ZERO:Ljava/lang/Float;
       123: fconst_1
       124: invokestatic  #130                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       127: putstatic     #132                // Field FLOAT_ONE:Ljava/lang/Float;
       130: ldc           #133                // float -1.0f
       132: invokestatic  #130                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       135: putstatic     #134                // Field FLOAT_MINUS_ONE:Ljava/lang/Float;
       138: return
      LineNumberTable:
        line 35: 0
        line 37: 7
        line 39: 14
        line 41: 23
        line 43: 30
        line 45: 37
        line 47: 44
        line 49: 51
        line 51: 58
        line 53: 65
        line 55: 72
        line 57: 79
        line 59: 86
        line 61: 93
        line 63: 100
        line 65: 107
        line 67: 116
        line 69: 123
        line 71: 130
}
SourceFile: "NumberUtils.java"
