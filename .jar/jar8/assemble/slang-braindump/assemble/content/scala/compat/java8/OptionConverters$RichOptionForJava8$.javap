Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/OptionConverters$RichOptionForJava8$.class
  Last modified May 29, 2022; size 2573 bytes
  SHA-256 checksum 8925226384f0a3ac9bf9e2500a04c8588c1020d3c643ba55458c8c3d6fa1c64f
  Compiled from "OptionConverters.scala"
public class scala.compat.java8.OptionConverters$RichOptionForJava8$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/compat/java8/OptionConverters$RichOptionForJava8$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
   #1 = Utf8               scala/compat/java8/OptionConverters$RichOptionForJava8$
   #2 = Class              #1             // scala/compat/java8/OptionConverters$RichOptionForJava8$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               OptionConverters.scala
   #6 = Utf8               scala/compat/java8/OptionConverters$RichOptionForJava8
   #7 = Class              #6             // scala/compat/java8/OptionConverters$RichOptionForJava8
   #8 = Utf8               scala/compat/java8/OptionConverters
   #9 = Class              #8             // scala/compat/java8/OptionConverters
  #10 = Utf8               RichOptionForJava8
  #11 = Utf8               RichOptionForJava8$
  #12 = Utf8               scala/compat/java8/OptionConverters$SpecializerOfOptions
  #13 = Class              #12            // scala/compat/java8/OptionConverters$SpecializerOfOptions
  #14 = Utf8               SpecializerOfOptions
  #15 = Utf8               MODULE$
  #16 = Utf8               Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
  #17 = Utf8               <clinit>
  #18 = Utf8               ()V
  #19 = Utf8               <init>
  #20 = NameAndType        #19:#18        // "<init>":()V
  #21 = Methodref          #2.#20         // scala/compat/java8/OptionConverters$RichOptionForJava8$."<init>":()V
  #22 = NameAndType        #15:#16        // MODULE$:Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
  #23 = Fieldref           #2.#22         // scala/compat/java8/OptionConverters$RichOptionForJava8$.MODULE$:Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
  #24 = Utf8               asJava$extension
  #25 = Utf8               (Lscala/Option;)Ljava/util/Optional;
  #26 = Utf8               <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Ljava/util/Optional<TA;>;
  #27 = Utf8               $this
  #28 = Utf8               scala/Some
  #29 = Class              #28            // scala/Some
  #30 = Utf8               value
  #31 = Utf8               ()Ljava/lang/Object;
  #32 = NameAndType        #30:#31        // value:()Ljava/lang/Object;
  #33 = Methodref          #29.#32        // scala/Some.value:()Ljava/lang/Object;
  #34 = Utf8               java/util/Optional
  #35 = Class              #34            // java/util/Optional
  #36 = Utf8               ofNullable
  #37 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;
  #38 = NameAndType        #36:#37        // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
  #39 = Methodref          #35.#38        // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
  #40 = Utf8               empty
  #41 = Utf8               ()Ljava/util/Optional;
  #42 = NameAndType        #40:#41        // empty:()Ljava/util/Optional;
  #43 = Methodref          #35.#42        // java/util/Optional.empty:()Ljava/util/Optional;
  #44 = Utf8               a
  #45 = Utf8               Ljava/lang/Object;
  #46 = Utf8               this
  #47 = Utf8               Lscala/Option;
  #48 = Utf8               scala/Option
  #49 = Class              #48            // scala/Option
  #50 = Utf8               asPrimitive$extension
  #51 = Utf8               (Lscala/Option;Lscala/compat/java8/OptionConverters$SpecializerOfOptions;)Ljava/lang/Object;
  #52 = Utf8               <That:Ljava/lang/Object;A:Ljava/lang/Object;>(Lscala/Option<TA;>;Lscala/compat/java8/OptionConverters$SpecializerOfOptions<TA;TThat;>;)TThat;
  #53 = Utf8               specOp
  #54 = Utf8               fromScala
  #55 = Utf8               (Lscala/Option;)Ljava/lang/Object;
  #56 = NameAndType        #54:#55        // fromScala:(Lscala/Option;)Ljava/lang/Object;
  #57 = Methodref          #13.#56        // scala/compat/java8/OptionConverters$SpecializerOfOptions.fromScala:(Lscala/Option;)Ljava/lang/Object;
  #58 = Utf8               Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
  #59 = Utf8               hashCode$extension
  #60 = Utf8               (Lscala/Option;)I
  #61 = Utf8               <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)I
  #62 = Utf8               hashCode
  #63 = Utf8               ()I
  #64 = NameAndType        #62:#63        // hashCode:()I
  #65 = Methodref          #49.#64        // scala/Option.hashCode:()I
  #66 = Utf8               equals$extension
  #67 = Utf8               (Lscala/Option;Ljava/lang/Object;)Z
  #68 = Utf8               <A:Ljava/lang/Object;>(Lscala/Option<TA;>;Ljava/lang/Object;)Z
  #69 = Utf8               x$1
  #70 = Utf8               underlying
  #71 = Utf8               ()Lscala/Option;
  #72 = NameAndType        #70:#71        // underlying:()Lscala/Option;
  #73 = Methodref          #7.#72         // scala/compat/java8/OptionConverters$RichOptionForJava8.underlying:()Lscala/Option;
  #74 = Utf8               equals
  #75 = Utf8               (Ljava/lang/Object;)Z
  #76 = NameAndType        #74:#75        // equals:(Ljava/lang/Object;)Z
  #77 = Methodref          #4.#76         // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #78 = Methodref          #4.#20         // java/lang/Object."<init>":()V
  #79 = Utf8               Code
  #80 = Utf8               LineNumberTable
  #81 = Utf8               StackMapTable
  #82 = Utf8               LocalVariableTable
  #83 = Utf8               Signature
  #84 = Utf8               MethodParameters
  #85 = Utf8               InnerClasses
  #86 = Utf8               SourceFile
  #87 = Utf8               ScalaInlineInfo
  #88 = Utf8               Scala
{
  public static final scala.compat.java8.OptionConverters$RichOptionForJava8$ MODULE$;
    descriptor: Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/compat/java8/OptionConverters$RichOptionForJava8$
         3: dup
         4: invokespecial #21                 // Method "<init>":()V
         7: putstatic     #23                 // Field MODULE$:Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
        10: return
      LineNumberTable:
        line 98: 0

  public final <A extends java.lang.Object> java.util.Optional<A> asJava$extension(scala.Option<A>);
    descriptor: (Lscala/Option;)Ljava/util/Optional;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #29                 // class scala/Some
         6: ifeq          31
         9: aload_3
        10: checkcast     #29                 // class scala/Some
        13: astore        4
        15: aload         4
        17: invokevirtual #33                 // Method scala/Some.value:()Ljava/lang/Object;
        20: astore        5
        22: aload         5
        24: invokestatic  #39                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
        27: astore_2
        28: goto          41
        31: goto          34
        34: invokestatic  #43                 // Method java/util/Optional.empty:()Ljava/util/Optional;
        37: astore_2
        38: goto          41
        41: aload_2
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/compat/java8/OptionConverters$RichOptionForJava8$, class scala/Option, class java/util/Optional, class scala/Option ]
          stack = []
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22       9     5     a   Ljava/lang/Object;
            0      43     0  this   Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
            0      43     1 $this   Lscala/Option;
    Signature: #26                          // <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)Ljava/util/Optional<TA;>;
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <That extends java.lang.Object, A extends java.lang.Object> That asPrimitive$extension(scala.Option<A>, scala.compat.java8.OptionConverters$SpecializerOfOptions<A, That>);
    descriptor: (Lscala/Option;Lscala/compat/java8/OptionConverters$SpecializerOfOptions;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=3, args_size=3
         0: aload_2
         1: aload_1
         2: invokevirtual #57                 // Method scala/compat/java8/OptionConverters$SpecializerOfOptions.fromScala:(Lscala/Option;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 102: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
            0       6     1 $this   Lscala/Option;
            0       6     2 specOp   Lscala/compat/java8/OptionConverters$SpecializerOfOptions;
    Signature: #52                          // <That:Ljava/lang/Object;A:Ljava/lang/Object;>(Lscala/Option<TA;>;Lscala/compat/java8/OptionConverters$SpecializerOfOptions<TA;TThat;>;)TThat;
    MethodParameters:
      Name                           Flags
      $this                          final
      specOp                         final

  public final <A extends java.lang.Object> int hashCode$extension(scala.Option<A>);
    descriptor: (Lscala/Option;)I
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #65                 // Method scala/Option.hashCode:()I
         4: ireturn
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
            0       5     1 $this   Lscala/Option;
    Signature: #61                          // <A:Ljava/lang/Object;>(Lscala/Option<TA;>;)I
    MethodParameters:
      Name                           Flags
      $this                          final

  public final <A extends java.lang.Object> boolean equals$extension(scala.Option<A>, java.lang.Object);
    descriptor: (Lscala/Option;Ljava/lang/Object;)Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #7                  // class scala/compat/java8/OptionConverters$RichOptionForJava8
         8: ifeq          16
        11: iconst_1
        12: istore_3
        13: goto          24
        16: goto          19
        19: iconst_0
        20: istore_3
        21: goto          24
        24: iload_3
        25: ifeq          83
        28: aload_2
        29: ifnonnull     36
        32: aconst_null
        33: goto          43
        36: aload_2
        37: checkcast     #7                  // class scala/compat/java8/OptionConverters$RichOptionForJava8
        40: invokevirtual #73                 // Method scala/compat/java8/OptionConverters$RichOptionForJava8.underlying:()Lscala/Option;
        43: astore        5
        45: aload_1
        46: aload         5
        48: astore        6
        50: dup
        51: ifnonnull     63
        54: pop
        55: aload         6
        57: ifnull        71
        60: goto          75
        63: aload         6
        65: invokevirtual #77                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        68: ifeq          75
        71: iconst_1
        72: goto          76
        75: iconst_0
        76: ifeq          83
        79: iconst_1
        80: goto          84
        83: iconst_0
        84: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/compat/java8/OptionConverters$RichOptionForJava8$, class scala/Option, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 11 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/compat/java8/OptionConverters$RichOptionForJava8$, class scala/Option, class java/lang/Object, int, class java/lang/Object, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      85     0  this   Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
            0      85     1 $this   Lscala/Option;
            0      85     2   x$1   Ljava/lang/Object;
    Signature: #68                          // <A:Ljava/lang/Object;>(Lscala/Option<TA;>;Ljava/lang/Object;)Z
    MethodParameters:
      Name                           Flags
      $this                          final
      x$1                            final

  public scala.compat.java8.OptionConverters$RichOptionForJava8$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #78                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/OptionConverters$RichOptionForJava8$;
}
InnerClasses:
  public static final #10= #7 of #9;      // RichOptionForJava8=class scala/compat/java8/OptionConverters$RichOptionForJava8 of class scala/compat/java8/OptionConverters
  public static #11= #2 of #9;            // RichOptionForJava8$=class scala/compat/java8/OptionConverters$RichOptionForJava8$ of class scala/compat/java8/OptionConverters
  public static abstract #14= #13 of #9;  // SpecializerOfOptions=class scala/compat/java8/OptionConverters$SpecializerOfOptions of class scala/compat/java8/OptionConverters
SourceFile: "OptionConverters.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 13 00 12 01 00 18 00 19 01 00 32
   00 33 01 00 42 00 43 01 00 3B 00 3C 01
  Scala: length = 0x0 (unknown attribute)

