Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/parallel/ParIterableLike$ZipAll.class
  Last modified May 29, 2022; size 11522 bytes
  SHA-256 checksum c65cc6ee12baef240eb3d270d5057cae881f43a146f44ee23001a63b2e277f1d
  Compiled from "ParIterableLike.scala"
public class scala.collection.parallel.ParIterableLike$ZipAll<U extends java.lang.Object, S extends java.lang.Object, That extends java.lang.Object> extends java.lang.Object implements scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Transformer<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ZipAll<U, S, That>>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/parallel/ParIterableLike$ZipAll
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 9, methods: 32, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/parallel/ParIterableLike$ZipAll
    #2 = Class              #1            // scala/collection/parallel/ParIterableLike$ZipAll
    #3 = Utf8               <U:Ljava/lang/Object;S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ZipAll<TU;TS;TThat;>;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/parallel/ParIterableLike$Transformer
    #7 = Class              #6            // scala/collection/parallel/ParIterableLike$Transformer
    #8 = Utf8               ParIterableLike.scala
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/collection/parallel/ParIterableLike$Accessor
   #15 = Class              #14           // scala/collection/parallel/ParIterableLike$Accessor
   #16 = Utf8               scala/collection/parallel/ParIterableLike
   #17 = Class              #16           // scala/collection/parallel/ParIterableLike
   #18 = Utf8               Accessor
   #19 = Utf8               scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #20 = Class              #19           // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask
   #21 = Utf8               StrictSplitterCheckTask
   #22 = Utf8               Transformer
   #23 = Utf8               ZipAll
   #24 = Utf8               scala/collection/parallel/immutable/Repetition$ParIterator
   #25 = Class              #24           // scala/collection/parallel/immutable/Repetition$ParIterator
   #26 = Utf8               scala/collection/parallel/immutable/Repetition
   #27 = Class              #26           // scala/collection/parallel/immutable/Repetition
   #28 = Utf8               ParIterator
   #29 = Utf8               len
   #30 = Utf8               I
   #31 = Utf8               thiselem
   #32 = Utf8               Ljava/lang/Object;
   #33 = Utf8               TU;
   #34 = Utf8               thatelem
   #35 = Utf8               TS;
   #36 = Utf8               pbf
   #37 = Utf8               Lscala/collection/parallel/CombinerFactory;
   #38 = Utf8               Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;
   #39 = Utf8               pit
   #40 = Utf8               Lscala/collection/parallel/IterableSplitter;
   #41 = Utf8               Lscala/collection/parallel/IterableSplitter<TT;>;
   #42 = Utf8               othpit
   #43 = Utf8               Lscala/collection/parallel/SeqSplitter;
   #44 = Utf8               Lscala/collection/parallel/SeqSplitter<TS;>;
   #45 = Utf8               result
   #46 = Utf8               Lscala/collection/parallel/Combiner;
   #47 = Utf8               Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;
   #48 = Utf8               throwable
   #49 = Utf8               Ljava/lang/Throwable;
   #50 = Utf8               $outer
   #51 = Utf8               Lscala/collection/parallel/ParIterableLike;
   #52 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$super$toString
   #53 = Utf8               ()Ljava/lang/String;
   #54 = Utf8               toString
   #55 = NameAndType        #54:#53       // toString:()Ljava/lang/String;
   #56 = Methodref          #5.#55        // java/lang/Object.toString:()Ljava/lang/String;
   #57 = Utf8               this
   #58 = Utf8               Lscala/collection/parallel/ParIterableLike$ZipAll;
   #59 = Utf8               shouldSplitFurther
   #60 = Utf8               ()Z
   #61 = Utf8               shouldSplitFurther$
   #62 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #63 = NameAndType        #61:#62       // shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #64 = InterfaceMethodref #15.#63       // scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
   #65 = Utf8               signalAbort
   #66 = Utf8               ()V
   #67 = Utf8               signalAbort$
   #68 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #69 = NameAndType        #67:#68       // signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #70 = InterfaceMethodref #15.#69       // scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
   #71 = Utf8               toString$
   #72 = Utf8               (Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #73 = NameAndType        #71:#72       // toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #74 = InterfaceMethodref #15.#73       // scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
   #75 = Utf8               repr
   #76 = Utf8               ()Ljava/lang/Object;
   #77 = Utf8               scala/collection/parallel/Task
   #78 = Class              #77           // scala/collection/parallel/Task
   #79 = Utf8               repr$
   #80 = Utf8               (Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #81 = NameAndType        #79:#80       // repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #82 = InterfaceMethodref #78.#81       // scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
   #83 = Utf8               forwardThrowable
   #84 = Utf8               forwardThrowable$
   #85 = Utf8               (Lscala/collection/parallel/Task;)V
   #86 = NameAndType        #84:#85       // forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #87 = InterfaceMethodref #78.#86       // scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
   #88 = Utf8               tryLeaf
   #89 = Utf8               (Lscala/Option;)V
   #90 = Utf8               (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
   #91 = Utf8               lastres
   #92 = Utf8               tryLeaf$
   #93 = Utf8               (Lscala/collection/parallel/Task;Lscala/Option;)V
   #94 = NameAndType        #92:#93       // tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #95 = InterfaceMethodref #78.#94       // scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
   #96 = Utf8               Lscala/Option;
   #97 = Utf8               tryMerge
   #98 = Utf8               (Ljava/lang/Object;)V
   #99 = Utf8               t
  #100 = Utf8               tryMerge$
  #101 = Utf8               (Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #102 = NameAndType        #100:#101     // tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #103 = InterfaceMethodref #78.#102      // scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
  #104 = Utf8               mergeThrowables
  #105 = Utf8               (Lscala/collection/parallel/Task<**>;)V
  #106 = Utf8               that
  #107 = Utf8               mergeThrowables$
  #108 = Utf8               (Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #109 = NameAndType        #107:#108     // mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #110 = InterfaceMethodref #78.#109      // scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
  #111 = Utf8               Lscala/collection/parallel/Task;
  #112 = Utf8               ()Ljava/lang/Throwable;
  #113 = NameAndType        #48:#49       // throwable:Ljava/lang/Throwable;
  #114 = Fieldref           #2.#113       // scala/collection/parallel/ParIterableLike$ZipAll.throwable:Ljava/lang/Throwable;
  #115 = Utf8               throwable_$eq
  #116 = Utf8               (Ljava/lang/Throwable;)V
  #117 = Utf8               x$1
  #118 = Utf8               ()Lscala/collection/parallel/IterableSplitter;
  #119 = Utf8               ()Lscala/collection/parallel/IterableSplitter<TT;>;
  #120 = NameAndType        #39:#40       // pit:Lscala/collection/parallel/IterableSplitter;
  #121 = Fieldref           #2.#120       // scala/collection/parallel/ParIterableLike$ZipAll.pit:Lscala/collection/parallel/IterableSplitter;
  #122 = Utf8               ()Lscala/collection/parallel/SeqSplitter;
  #123 = Utf8               ()Lscala/collection/parallel/SeqSplitter<TS;>;
  #124 = NameAndType        #42:#43       // othpit:Lscala/collection/parallel/SeqSplitter;
  #125 = Fieldref           #2.#124       // scala/collection/parallel/ParIterableLike$ZipAll.othpit:Lscala/collection/parallel/SeqSplitter;
  #126 = Utf8               ()Lscala/collection/parallel/Combiner;
  #127 = Utf8               ()Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;
  #128 = NameAndType        #45:#46       // result:Lscala/collection/parallel/Combiner;
  #129 = Fieldref           #2.#128       // scala/collection/parallel/ParIterableLike$ZipAll.result:Lscala/collection/parallel/Combiner;
  #130 = Utf8               result_$eq
  #131 = Utf8               (Lscala/collection/parallel/Combiner;)V
  #132 = Utf8               (Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;)V
  #133 = Utf8               leaf
  #134 = Utf8               prev
  #135 = NameAndType        #39:#118      // pit:()Lscala/collection/parallel/IterableSplitter;
  #136 = Methodref          #2.#135       // scala/collection/parallel/ParIterableLike$ZipAll.pit:()Lscala/collection/parallel/IterableSplitter;
  #137 = NameAndType        #42:#122      // othpit:()Lscala/collection/parallel/SeqSplitter;
  #138 = Methodref          #2.#137       // scala/collection/parallel/ParIterableLike$ZipAll.othpit:()Lscala/collection/parallel/SeqSplitter;
  #139 = NameAndType        #31:#32       // thiselem:Ljava/lang/Object;
  #140 = Fieldref           #2.#139       // scala/collection/parallel/ParIterableLike$ZipAll.thiselem:Ljava/lang/Object;
  #141 = NameAndType        #34:#32       // thatelem:Ljava/lang/Object;
  #142 = Fieldref           #2.#141       // scala/collection/parallel/ParIterableLike$ZipAll.thatelem:Ljava/lang/Object;
  #143 = NameAndType        #36:#37       // pbf:Lscala/collection/parallel/CombinerFactory;
  #144 = Fieldref           #2.#143       // scala/collection/parallel/ParIterableLike$ZipAll.pbf:Lscala/collection/parallel/CombinerFactory;
  #145 = Utf8               scala/collection/parallel/CombinerFactory
  #146 = Class              #145          // scala/collection/parallel/CombinerFactory
  #147 = Utf8               apply
  #148 = NameAndType        #147:#126     // apply:()Lscala/collection/parallel/Combiner;
  #149 = InterfaceMethodref #146.#148     // scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
  #150 = Utf8               scala/collection/parallel/IterableSplitter
  #151 = Class              #150          // scala/collection/parallel/IterableSplitter
  #152 = Utf8               zipAll2combiner
  #153 = Utf8               (Lscala/collection/parallel/RemainsIterator;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #154 = NameAndType        #152:#153     // zipAll2combiner:(Lscala/collection/parallel/RemainsIterator;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #155 = InterfaceMethodref #151.#154     // scala/collection/parallel/IterableSplitter.zipAll2combiner:(Lscala/collection/parallel/RemainsIterator;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #156 = NameAndType        #130:#131     // result_$eq:(Lscala/collection/parallel/Combiner;)V
  #157 = Methodref          #2.#156       // scala/collection/parallel/ParIterableLike$ZipAll.result_$eq:(Lscala/collection/parallel/Combiner;)V
  #158 = Utf8               newSubtask
  #159 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #160 = Utf8               (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
  #161 = Utf8               p
  #162 = Utf8               java/lang/UnsupportedOperationException
  #163 = Class              #162          // java/lang/UnsupportedOperationException
  #164 = Utf8               <init>
  #165 = NameAndType        #164:#66      // "<init>":()V
  #166 = Methodref          #163.#165     // java/lang/UnsupportedOperationException."<init>":()V
  #167 = Utf8               split
  #168 = Utf8               ()Lscala/collection/immutable/Seq;
  #169 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ZipAll<TU;TS;TThat;>;>;>;
  #170 = Utf8               remaining
  #171 = Utf8               ()I
  #172 = NameAndType        #170:#171     // remaining:()I
  #173 = InterfaceMethodref #151.#172     // scala/collection/parallel/IterableSplitter.remaining:()I
  #174 = NameAndType        #29:#30       // len:I
  #175 = Fieldref           #2.#174       // scala/collection/parallel/ParIterableLike$ZipAll.len:I
  #176 = Utf8               splitWithSignalling
  #177 = NameAndType        #176:#168     // splitWithSignalling:()Lscala/collection/immutable/Seq;
  #178 = InterfaceMethodref #151.#177     // scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
  #179 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #180 = MethodType         #179          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #181 = Utf8               $anonfun$split$25$adapted
  #182 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #183 = NameAndType        #181:#182     // $anonfun$split$25$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #184 = Methodref          #2.#183       // scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$25$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #185 = MethodHandle       6:#184        // REF_invokeStatic scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$25$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #186 = MethodType         #182          //  (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  #187 = Integer            5
  #188 = Integer            1
  #189 = Utf8               java/lang/invoke/LambdaMetafactory
  #190 = Class              #189          // java/lang/invoke/LambdaMetafactory
  #191 = Utf8               altMetafactory
  #192 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #193 = NameAndType        #191:#192     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #194 = Methodref          #190.#193     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #195 = MethodHandle       6:#194        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #196 = Utf8               ()Lscala/Function1;
  #197 = NameAndType        #147:#196     // apply:()Lscala/Function1;
  #198 = InvokeDynamic      #0:#197       // #0:apply:()Lscala/Function1;
  #199 = Utf8               scala/collection/immutable/Seq
  #200 = Class              #199          // scala/collection/immutable/Seq
  #201 = Utf8               map
  #202 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #203 = NameAndType        #201:#202     // map:(Lscala/Function1;)Ljava/lang/Object;
  #204 = InterfaceMethodref #200.#203     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #205 = Utf8               scala/collection/parallel/SeqSplitter
  #206 = Class              #205          // scala/collection/parallel/SeqSplitter
  #207 = Utf8               psplitWithSignalling
  #208 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #209 = NameAndType        #207:#208     // psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #210 = InterfaceMethodref #206.#209     // scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #211 = Utf8               zip
  #212 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #213 = NameAndType        #211:#212     // zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #214 = InterfaceMethodref #200.#213     // scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #215 = Utf8               scala/collection/IterableOps
  #216 = Class              #215          // scala/collection/IterableOps
  #217 = InterfaceMethodref #216.#213     // scala/collection/IterableOps.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #218 = Utf8               $anonfun$split$26
  #219 = Utf8               (Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  #220 = NameAndType        #218:#219     // $anonfun$split$26:(Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  #221 = Methodref          #2.#220       // scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$26:(Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  #222 = MethodHandle       6:#221        // REF_invokeStatic scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$26:(Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  #223 = Utf8               (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  #224 = MethodType         #223          //  (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  #225 = Utf8               (Lscala/collection/parallel/ParIterableLike$ZipAll;)Lscala/Function1;
  #226 = NameAndType        #147:#225     // apply:(Lscala/collection/parallel/ParIterableLike$ZipAll;)Lscala/Function1;
  #227 = InvokeDynamic      #1:#226       // #1:apply:(Lscala/collection/parallel/ParIterableLike$ZipAll;)Lscala/Function1;
  #228 = InterfaceMethodref #216.#203     // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
  #229 = Utf8               scala/runtime/ScalaRunTime$
  #230 = Class              #229          // scala/runtime/ScalaRunTime$
  #231 = Utf8               MODULE$
  #232 = Utf8               Lscala/runtime/ScalaRunTime$;
  #233 = NameAndType        #231:#232     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #234 = Fieldref           #230.#233     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #235 = Utf8               wrapIntArray
  #236 = Utf8               ([I)Lscala/collection/immutable/ArraySeq;
  #237 = NameAndType        #235:#236     // wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
  #238 = Methodref          #230.#237     // scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
  #239 = Utf8               scala/collection/immutable/$colon$colon
  #240 = Class              #239          // scala/collection/immutable/$colon$colon
  #241 = Utf8               scala$collection$parallel$ParIterableLike$ZipAll$$$outer
  #242 = Utf8               ()Lscala/collection/parallel/ParIterableLike;
  #243 = NameAndType        #241:#242     // scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #244 = Methodref          #2.#243       // scala/collection/parallel/ParIterableLike$ZipAll.scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
  #245 = Utf8               (I)Ljava/lang/Object;
  #246 = NameAndType        #147:#245     // apply:(I)Ljava/lang/Object;
  #247 = InterfaceMethodref #200.#246     // scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
  #248 = Utf8               (Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #249 = NameAndType        #164:#248     // "<init>":(Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #250 = Methodref          #2.#249       // scala/collection/parallel/ParIterableLike$ZipAll."<init>":(Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
  #251 = Utf8               scala/collection/parallel/immutable/package$
  #252 = Class              #251          // scala/collection/parallel/immutable/package$
  #253 = Utf8               Lscala/collection/parallel/immutable/package$;
  #254 = NameAndType        #231:#253     // MODULE$:Lscala/collection/parallel/immutable/package$;
  #255 = Fieldref           #252.#254     // scala/collection/parallel/immutable/package$.MODULE$:Lscala/collection/parallel/immutable/package$;
  #256 = Utf8               repetition
  #257 = Utf8               (Ljava/lang/Object;I)Lscala/collection/parallel/immutable/Repetition;
  #258 = NameAndType        #256:#257     // repetition:(Ljava/lang/Object;I)Lscala/collection/parallel/immutable/Repetition;
  #259 = Methodref          #252.#258     // scala/collection/parallel/immutable/package$.repetition:(Ljava/lang/Object;I)Lscala/collection/parallel/immutable/Repetition;
  #260 = Utf8               splitter
  #261 = Utf8               ()Lscala/collection/parallel/immutable/Repetition$ParIterator;
  #262 = NameAndType        #260:#261     // splitter:()Lscala/collection/parallel/immutable/Repetition$ParIterator;
  #263 = Methodref          #27.#262      // scala/collection/parallel/immutable/Repetition.splitter:()Lscala/collection/parallel/immutable/Repetition$ParIterator;
  #264 = Utf8               scala/collection/immutable/Nil$
  #265 = Class              #264          // scala/collection/immutable/Nil$
  #266 = Utf8               Lscala/collection/immutable/Nil$;
  #267 = NameAndType        #231:#266     // MODULE$:Lscala/collection/immutable/Nil$;
  #268 = Fieldref           #265.#267     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #269 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #270 = NameAndType        #164:#269     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #271 = Methodref          #240.#270     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #272 = Utf8               pits
  #273 = Utf8               Lscala/collection/immutable/Seq;
  #274 = Utf8               sizes
  #275 = Utf8               opits
  #276 = Utf8               diff
  #277 = Utf8               merge
  #278 = Utf8               (Lscala/collection/parallel/ParIterableLike$ZipAll;)V
  #279 = Utf8               (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ZipAll<TU;TS;TThat;>;)V
  #280 = NameAndType        #45:#126      // result:()Lscala/collection/parallel/Combiner;
  #281 = Methodref          #2.#280       // scala/collection/parallel/ParIterableLike$ZipAll.result:()Lscala/collection/parallel/Combiner;
  #282 = Utf8               scala/collection/parallel/Combiner
  #283 = Class              #282          // scala/collection/parallel/Combiner
  #284 = Utf8               combine
  #285 = Utf8               (Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #286 = NameAndType        #284:#285     // combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #287 = InterfaceMethodref #283.#286     // scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
  #288 = Utf8               requiresStrictSplitters
  #289 = NameAndType        #50:#51       // $outer:Lscala/collection/parallel/ParIterableLike;
  #290 = Fieldref           #2.#289       // scala/collection/parallel/ParIterableLike$ZipAll.$outer:Lscala/collection/parallel/ParIterableLike;
  #291 = Utf8               scala$collection$parallel$ParIterableLike$Accessor$$$outer
  #292 = Utf8               scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer
  #293 = NameAndType        #277:#278     // merge:(Lscala/collection/parallel/ParIterableLike$ZipAll;)V
  #294 = Methodref          #2.#293       // scala/collection/parallel/ParIterableLike$ZipAll.merge:(Lscala/collection/parallel/ParIterableLike$ZipAll;)V
  #295 = Utf8               (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
  #296 = NameAndType        #158:#159     // newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #297 = Methodref          #2.#296       // scala/collection/parallel/ParIterableLike$ZipAll.newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
  #298 = Utf8               $anonfun$split$25
  #299 = Utf8               (Lscala/collection/parallel/IterableSplitter;)I
  #300 = Utf8               x$37
  #301 = Utf8               $this
  #302 = Utf8               scala/Tuple2
  #303 = Class              #302          // scala/Tuple2
  #304 = Utf8               _2$mcI$sp
  #305 = NameAndType        #304:#171     // _2$mcI$sp:()I
  #306 = Methodref          #303.#305     // scala/Tuple2._2$mcI$sp:()I
  #307 = Utf8               _1
  #308 = NameAndType        #307:#76      // _1:()Ljava/lang/Object;
  #309 = Methodref          #303.#308     // scala/Tuple2._1:()Ljava/lang/Object;
  #310 = Utf8               _2
  #311 = NameAndType        #310:#76      // _2:()Ljava/lang/Object;
  #312 = Methodref          #303.#311     // scala/Tuple2._2:()Ljava/lang/Object;
  #313 = Utf8               Lscala/Tuple2;
  #314 = Utf8               (ITU;TS;Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/IterableSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
  #315 = Methodref          #5.#165       // java/lang/Object."<init>":()V
  #316 = Utf8               $init$
  #317 = NameAndType        #316:#85      // $init$:(Lscala/collection/parallel/Task;)V
  #318 = InterfaceMethodref #78.#317      // scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
  #319 = Utf8               (Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #320 = NameAndType        #316:#319     // $init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #321 = InterfaceMethodref #20.#320      // scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
  #322 = NameAndType        #316:#68      // $init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #323 = InterfaceMethodref #15.#322      // scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
  #324 = NameAndType        #298:#299     // $anonfun$split$25:(Lscala/collection/parallel/IterableSplitter;)I
  #325 = Methodref          #2.#324       // scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$25:(Lscala/collection/parallel/IterableSplitter;)I
  #326 = Utf8               scala/runtime/BoxesRunTime
  #327 = Class              #326          // scala/runtime/BoxesRunTime
  #328 = Utf8               boxToInteger
  #329 = Utf8               (I)Ljava/lang/Integer;
  #330 = NameAndType        #328:#329     // boxToInteger:(I)Ljava/lang/Integer;
  #331 = Methodref          #327.#330     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #332 = Utf8               $deserializeLambda$
  #333 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #334 = Utf8               scala/runtime/LambdaDeserialize
  #335 = Class              #334          // scala/runtime/LambdaDeserialize
  #336 = Utf8               bootstrap
  #337 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #338 = NameAndType        #336:#337     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #339 = Methodref          #335.#338     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #340 = MethodHandle       6:#339        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #341 = Utf8               lambdaDeserialize
  #342 = NameAndType        #341:#333     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #343 = InvokeDynamic      #2:#342       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #344 = Utf8               Signature
  #345 = Utf8               Code
  #346 = Utf8               LineNumberTable
  #347 = Utf8               LocalVariableTable
  #348 = Utf8               MethodParameters
  #349 = Utf8               StackMapTable
  #350 = Utf8               InnerClasses
  #351 = Utf8               SourceFile
  #352 = Utf8               BootstrapMethods
  #353 = Utf8               ScalaInlineInfo
  #354 = Utf8               Scala
{
  private final int len;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final U thiselem;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #33                          // TU;

  private final S thatelem;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #35                          // TS;

  private final scala.collection.parallel.CombinerFactory<scala.Tuple2<U, S>, That> pbf;
    descriptor: Lscala/collection/parallel/CombinerFactory;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #38                          // Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;

  private final scala.collection.parallel.IterableSplitter<T> pit;
    descriptor: Lscala/collection/parallel/IterableSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #41                          // Lscala/collection/parallel/IterableSplitter<TT;>;

  private final scala.collection.parallel.SeqSplitter<S> othpit;
    descriptor: Lscala/collection/parallel/SeqSplitter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #44                          // Lscala/collection/parallel/SeqSplitter<TS;>;

  private volatile scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> result;
    descriptor: Lscala/collection/parallel/Combiner;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE
    Signature: #47                          // Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;

  private volatile java.lang.Throwable throwable;
    descriptor: Ljava/lang/Throwable;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public final scala.collection.parallel.ParIterableLike $outer;
    descriptor: Lscala/collection/parallel/ParIterableLike;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.lang.String scala$collection$parallel$ParIterableLike$Accessor$$super$toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #56                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public boolean shouldSplitFurther();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.shouldSplitFurther$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Z
         4: ireturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public void signalAbort();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #70                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.signalAbort$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
         4: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.toString$:(Lscala/collection/parallel/ParIterableLike$Accessor;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public java.lang.Object repr();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod scala/collection/parallel/Task.repr$:(Lscala/collection/parallel/Task;)Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public void forwardThrowable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod scala/collection/parallel/Task.forwardThrowable$:(Lscala/collection/parallel/Task;)V
         4: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public void tryLeaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #95                 // InterfaceMethod scala/collection/parallel/Task.tryLeaf$:(Lscala/collection/parallel/Task;Lscala/Option;)V
         5: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       6     1 lastres   Lscala/Option;
    Signature: #90                          // (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      lastres                        final

  public void tryMerge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #103                // InterfaceMethod scala/collection/parallel/Task.tryMerge$:(Lscala/collection/parallel/Task;Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       6     1     t   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      t                              final

  public void mergeThrowables(scala.collection.parallel.Task<?, ?>);
    descriptor: (Lscala/collection/parallel/Task;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #110                // InterfaceMethod scala/collection/parallel/Task.mergeThrowables$:(Lscala/collection/parallel/Task;Lscala/collection/parallel/Task;)V
         5: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       6     1  that   Lscala/collection/parallel/Task;
    Signature: #105                         // (Lscala/collection/parallel/Task<**>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.Throwable throwable();
    descriptor: ()Ljava/lang/Throwable;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #114                // Field throwable:Ljava/lang/Throwable;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public void throwable_$eq(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #114                // Field throwable:Ljava/lang/Throwable;
         5: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       6     1   x$1   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.parallel.IterableSplitter<T> pit();
    descriptor: ()Lscala/collection/parallel/IterableSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #121                // Field pit:Lscala/collection/parallel/IterableSplitter;
         4: areturn
      LineNumberTable:
        line 1265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
    Signature: #119                         // ()Lscala/collection/parallel/IterableSplitter<TT;>;

  public scala.collection.parallel.SeqSplitter<S> othpit();
    descriptor: ()Lscala/collection/parallel/SeqSplitter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #125                // Field othpit:Lscala/collection/parallel/SeqSplitter;
         4: areturn
      LineNumberTable:
        line 1265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
    Signature: #123                         // ()Lscala/collection/parallel/SeqSplitter<TS;>;

  public scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That> result();
    descriptor: ()Lscala/collection/parallel/Combiner;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #129                // Field result:Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1267: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
    Signature: #127                         // ()Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;

  public void result_$eq(scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>);
    descriptor: (Lscala/collection/parallel/Combiner;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #129                // Field result:Lscala/collection/parallel/Combiner;
         5: return
      LineNumberTable:
        line 1267: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       6     1   x$1   Lscala/collection/parallel/Combiner;
    Signature: #132                         // (Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public void leaf(scala.Option<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         5: aload_0
         6: invokevirtual #138                // Method othpit:()Lscala/collection/parallel/SeqSplitter;
         9: aload_0
        10: getfield      #140                // Field thiselem:Ljava/lang/Object;
        13: aload_0
        14: getfield      #142                // Field thatelem:Ljava/lang/Object;
        17: aload_0
        18: getfield      #144                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        21: invokeinterface #149,  1          // InterfaceMethod scala/collection/parallel/CombinerFactory.apply:()Lscala/collection/parallel/Combiner;
        26: invokeinterface #155,  5          // InterfaceMethod scala/collection/parallel/IterableSplitter.zipAll2combiner:(Lscala/collection/parallel/RemainsIterator;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        31: invokevirtual #157                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        34: return
      LineNumberTable:
        line 1268: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0      35     1  prev   Lscala/Option;
    Signature: #90                          // (Lscala/Option<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;>;)V
    MethodParameters:
      Name                           Flags
      prev                           final

  public scala.runtime.Nothing$ newSubtask(scala.collection.parallel.IterableSplitter<T>);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: new           #163                // class java/lang/UnsupportedOperationException
         3: dup
         4: invokespecial #166                // Method java/lang/UnsupportedOperationException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1269: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       8     1     p   Lscala/collection/parallel/IterableSplitter;
    Signature: #160                         // (Lscala/collection/parallel/IterableSplitter<TT;>;)Lscala/runtime/Nothing$;
    MethodParameters:
      Name                           Flags
      p                              final

  public scala.collection.immutable.Seq<scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.Accessor<scala.collection.parallel.Combiner<scala.Tuple2<U, S>, That>, scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ZipAll<U, S, That>>> split();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=15, locals=6, args_size=1
         0: aload_0
         1: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
         4: invokeinterface #173,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         9: aload_0
        10: getfield      #175                // Field len:I
        13: if_icmpgt     88
        16: aload_0
        17: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
        20: invokeinterface #178,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.splitWithSignalling:()Lscala/collection/immutable/Seq;
        25: astore_1
        26: aload_1
        27: invokedynamic #198,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        32: invokeinterface #204,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        37: checkcast     #200                // class scala/collection/immutable/Seq
        40: astore_2
        41: aload_0
        42: invokevirtual #138                // Method othpit:()Lscala/collection/parallel/SeqSplitter;
        45: aload_2
        46: invokeinterface #210,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        51: astore_3
        52: aload_1
        53: aload_3
        54: invokeinterface #214,  2          // InterfaceMethod scala/collection/immutable/Seq.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        59: checkcast     #216                // class scala/collection/IterableOps
        62: aload_2
        63: invokeinterface #217,  2          // InterfaceMethod scala/collection/IterableOps.zip:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        68: checkcast     #216                // class scala/collection/IterableOps
        71: aload_0
        72: invokedynamic #227,  0            // InvokeDynamic #1:apply:(Lscala/collection/parallel/ParIterableLike$ZipAll;)Lscala/Function1;
        77: invokeinterface #228,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        82: checkcast     #200                // class scala/collection/immutable/Seq
        85: goto          254
        88: aload_0
        89: invokevirtual #138                // Method othpit:()Lscala/collection/parallel/SeqSplitter;
        92: getstatic     #234                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        95: iconst_1
        96: newarray       int
        98: dup
        99: iconst_0
       100: aload_0
       101: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
       104: invokeinterface #173,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
       109: iastore
       110: invokevirtual #238                // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
       113: invokeinterface #210,  2          // InterfaceMethod scala/collection/parallel/SeqSplitter.psplitWithSignalling:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
       118: astore        4
       120: aload_0
       121: getfield      #175                // Field len:I
       124: aload_0
       125: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
       128: invokeinterface #173,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
       133: isub
       134: istore        5
       136: new           #240                // class scala/collection/immutable/$colon$colon
       139: dup
       140: new           #2                  // class scala/collection/parallel/ParIterableLike$ZipAll
       143: dup
       144: aload_0
       145: invokevirtual #244                // Method scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
       148: aload_0
       149: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
       152: invokeinterface #173,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
       157: aload_0
       158: getfield      #140                // Field thiselem:Ljava/lang/Object;
       161: aload_0
       162: getfield      #142                // Field thatelem:Ljava/lang/Object;
       165: aload_0
       166: getfield      #144                // Field pbf:Lscala/collection/parallel/CombinerFactory;
       169: aload_0
       170: invokevirtual #136                // Method pit:()Lscala/collection/parallel/IterableSplitter;
       173: aload         4
       175: iconst_0
       176: invokeinterface #247,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
       181: checkcast     #206                // class scala/collection/parallel/SeqSplitter
       184: invokespecial #250                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
       187: new           #240                // class scala/collection/immutable/$colon$colon
       190: dup
       191: new           #2                  // class scala/collection/parallel/ParIterableLike$ZipAll
       194: dup
       195: aload_0
       196: invokevirtual #244                // Method scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
       199: iload         5
       201: aload_0
       202: getfield      #140                // Field thiselem:Ljava/lang/Object;
       205: aload_0
       206: getfield      #142                // Field thatelem:Ljava/lang/Object;
       209: aload_0
       210: getfield      #144                // Field pbf:Lscala/collection/parallel/CombinerFactory;
       213: getstatic     #255                // Field scala/collection/parallel/immutable/package$.MODULE$:Lscala/collection/parallel/immutable/package$;
       216: aload_0
       217: getfield      #140                // Field thiselem:Ljava/lang/Object;
       220: iload         5
       222: invokevirtual #259                // Method scala/collection/parallel/immutable/package$.repetition:(Ljava/lang/Object;I)Lscala/collection/parallel/immutable/Repetition;
       225: invokevirtual #263                // Method scala/collection/parallel/immutable/Repetition.splitter:()Lscala/collection/parallel/immutable/Repetition$ParIterator;
       228: aload         4
       230: iconst_1
       231: invokeinterface #247,  2          // InterfaceMethod scala/collection/immutable/Seq.apply:(I)Ljava/lang/Object;
       236: checkcast     #206                // class scala/collection/parallel/SeqSplitter
       239: invokespecial #250                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
       242: getstatic     #268                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       245: invokespecial #271                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       248: invokespecial #271                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       251: checkcast     #200                // class scala/collection/immutable/Seq
       254: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 88
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 165
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 1270: 0
        line 1271: 16
        line 1272: 26
        line 1273: 41
        line 1274: 52
        line 1276: 88
        line 1277: 120
        line 1278: 136
        line 1279: 140
        line 1278: 187
        line 1280: 191
        line 1278: 242
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      59     1  pits   Lscala/collection/immutable/Seq;
           41      44     2 sizes   Lscala/collection/immutable/Seq;
           52      33     3 opits   Lscala/collection/immutable/Seq;
          120     134     4 opits   Lscala/collection/immutable/Seq;
          136     118     5  diff   I
            0     255     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
    Signature: #169                         // ()Lscala/collection/immutable/Seq<Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Accessor<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ZipAll<TU;TS;TThat;>;>;>;

  public void merge(scala.collection.parallel.ParIterableLike<T, CC, Repr, Sequential>.ZipAll<U, S, That>);
    descriptor: (Lscala/collection/parallel/ParIterableLike$ZipAll;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #281                // Method result:()Lscala/collection/parallel/Combiner;
         5: aload_1
         6: invokevirtual #281                // Method result:()Lscala/collection/parallel/Combiner;
         9: invokeinterface #287,  2          // InterfaceMethod scala/collection/parallel/Combiner.combine:(Lscala/collection/parallel/Combiner;)Lscala/collection/parallel/Combiner;
        14: invokevirtual #157                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
        17: return
      LineNumberTable:
        line 1283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0      18     1  that   Lscala/collection/parallel/ParIterableLike$ZipAll;
    Signature: #279                         // (Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ZipAll<TU;TS;TThat;>;)V
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean requiresStrictSplitters();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1284: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$ZipAll$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #290                // Field $outer:Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$Accessor$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #244                // Method scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public scala.collection.parallel.ParIterableLike scala$collection$parallel$ParIterableLike$StrictSplitterCheckTask$$$outer();
    descriptor: ()Lscala/collection/parallel/ParIterableLike;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #244                // Method scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public void merge(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class scala/collection/parallel/ParIterableLike$ZipAll
         5: invokevirtual #294                // Method merge:(Lscala/collection/parallel/ParIterableLike$ZipAll;)V
         8: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.collection.parallel.ParIterableLike$Accessor newSubtask(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Lscala/collection/parallel/ParIterableLike$Accessor;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #297                // Method newSubtask:(Lscala/collection/parallel/IterableSplitter;)Lscala/runtime/Nothing$;
         5: athrow
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       6     1     p   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      p                              final

  public void result_$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #283                // class scala/collection/parallel/Combiner
         5: invokevirtual #157                // Method result_$eq:(Lscala/collection/parallel/Combiner;)V
         8: return
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.Object result();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #281                // Method result:()Lscala/collection/parallel/Combiner;
         4: areturn
      LineNumberTable:
        line 1264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;

  public static final int $anonfun$split$25(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)I
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #173,  1          // InterfaceMethod scala/collection/parallel/IterableSplitter.remaining:()I
         6: ireturn
      LineNumberTable:
        line 1272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  x$37   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$37                           final

  public static final scala.collection.parallel.ParIterableLike$ZipAll $anonfun$split$26(scala.collection.parallel.ParIterableLike$ZipAll, scala.Tuple2);
    descriptor: (Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=9, locals=2, args_size=2
         0: new           #2                  // class scala/collection/parallel/ParIterableLike$ZipAll
         3: dup
         4: aload_0
         5: invokevirtual #244                // Method scala$collection$parallel$ParIterableLike$ZipAll$$$outer:()Lscala/collection/parallel/ParIterableLike;
         8: aload_1
         9: invokevirtual #306                // Method scala/Tuple2._2$mcI$sp:()I
        12: aload_0
        13: getfield      #140                // Field thiselem:Ljava/lang/Object;
        16: aload_0
        17: getfield      #142                // Field thatelem:Ljava/lang/Object;
        20: aload_0
        21: getfield      #144                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        24: aload_1
        25: invokevirtual #309                // Method scala/Tuple2._1:()Ljava/lang/Object;
        28: checkcast     #303                // class scala/Tuple2
        31: invokevirtual #309                // Method scala/Tuple2._1:()Ljava/lang/Object;
        34: checkcast     #151                // class scala/collection/parallel/IterableSplitter
        37: aload_1
        38: invokevirtual #309                // Method scala/Tuple2._1:()Ljava/lang/Object;
        41: checkcast     #303                // class scala/Tuple2
        44: invokevirtual #312                // Method scala/Tuple2._2:()Ljava/lang/Object;
        47: checkcast     #206                // class scala/collection/parallel/SeqSplitter
        50: invokespecial #250                // Method "<init>":(Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
        53: areturn
      LineNumberTable:
        line 1274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0 $this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0      54     1     t   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      t                              final

  public scala.collection.parallel.ParIterableLike$ZipAll(int, U, S, scala.collection.parallel.CombinerFactory<scala.Tuple2<U, S>, That>, scala.collection.parallel.IterableSplitter<T>, scala.collection.parallel.SeqSplitter<S>);
    descriptor: (Lscala/collection/parallel/ParIterableLike;ILjava/lang/Object;Ljava/lang/Object;Lscala/collection/parallel/CombinerFactory;Lscala/collection/parallel/IterableSplitter;Lscala/collection/parallel/SeqSplitter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=8, args_size=8
         0: aload_0
         1: iload_2
         2: putfield      #175                // Field len:I
         5: aload_0
         6: aload_3
         7: putfield      #140                // Field thiselem:Ljava/lang/Object;
        10: aload_0
        11: aload         4
        13: putfield      #142                // Field thatelem:Ljava/lang/Object;
        16: aload_0
        17: aload         5
        19: putfield      #144                // Field pbf:Lscala/collection/parallel/CombinerFactory;
        22: aload_0
        23: aload         6
        25: putfield      #121                // Field pit:Lscala/collection/parallel/IterableSplitter;
        28: aload_0
        29: aload         7
        31: putfield      #125                // Field othpit:Lscala/collection/parallel/SeqSplitter;
        34: aload_1
        35: ifnonnull     40
        38: aconst_null
        39: athrow
        40: aload_0
        41: aload_1
        42: putfield      #290                // Field $outer:Lscala/collection/parallel/ParIterableLike;
        45: aload_0
        46: invokespecial #315                // Method java/lang/Object."<init>":()V
        49: aload_0
        50: invokestatic  #318                // InterfaceMethod scala/collection/parallel/Task.$init$:(Lscala/collection/parallel/Task;)V
        53: aload_0
        54: invokestatic  #321                // InterfaceMethod scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask.$init$:(Lscala/collection/parallel/ParIterableLike$StrictSplitterCheckTask;)V
        57: aload_0
        58: invokestatic  #323                // InterfaceMethod scala/collection/parallel/ParIterableLike$Accessor.$init$:(Lscala/collection/parallel/ParIterableLike$Accessor;)V
        61: aload_0
        62: aconst_null
        63: putfield      #129                // Field result:Lscala/collection/parallel/Combiner;
        66: return
      StackMapTable: number_of_entries = 1
        frame_type = 40 /* same */
      LineNumberTable:
        line 1265: 0
        line 1264: 34
        line 1266: 45
        line 1267: 61
        line 1265: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      67     0  this   Lscala/collection/parallel/ParIterableLike$ZipAll;
            0      67     1 $outer   Lscala/collection/parallel/ParIterableLike;
            0      67     2   len   I
            0      67     3 thiselem   Ljava/lang/Object;
            0      67     4 thatelem   Ljava/lang/Object;
            0      67     5   pbf   Lscala/collection/parallel/CombinerFactory;
            0      67     6   pit   Lscala/collection/parallel/IterableSplitter;
            0      67     7 othpit   Lscala/collection/parallel/SeqSplitter;
    Signature: #314                         // (ITU;TS;Lscala/collection/parallel/CombinerFactory<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/IterableSplitter<TT;>;Lscala/collection/parallel/SeqSplitter<TS;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      len                            final
      thiselem                       final
      thatelem                       final
      pbf                            final
      pit                            final
      othpit                         final

  public static final java.lang.Object $anonfun$split$25$adapted(scala.collection.parallel.IterableSplitter);
    descriptor: (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #325                // Method $anonfun$split$25:(Lscala/collection/parallel/IterableSplitter;)I
         4: invokestatic  #331                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 1272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$37   Lscala/collection/parallel/IterableSplitter;
    MethodParameters:
      Name                           Flags
      x$37                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #343,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // Accessor=class scala/collection/parallel/ParIterableLike$Accessor of class scala/collection/parallel/ParIterableLike
  public #21= #20 of #17;                 // StrictSplitterCheckTask=class scala/collection/parallel/ParIterableLike$StrictSplitterCheckTask of class scala/collection/parallel/ParIterableLike
  public #22= #7 of #17;                  // Transformer=class scala/collection/parallel/ParIterableLike$Transformer of class scala/collection/parallel/ParIterableLike
  public #23= #2 of #17;                  // ZipAll=class scala/collection/parallel/ParIterableLike$ZipAll of class scala/collection/parallel/ParIterableLike
  public #28= #25 of #27;                 // ParIterator=class scala/collection/parallel/immutable/Repetition$ParIterator of class scala/collection/parallel/immutable/Repetition
Signature: #3                           // <U:Ljava/lang/Object;S:Ljava/lang/Object;That:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.Transformer<Lscala/collection/parallel/Combiner<Lscala/Tuple2<TU;TS;>;TThat;>;Lscala/collection/parallel/ParIterableLike<TT;TCC;TRepr;TSequential;>.ZipAll<TU;TS;TThat;>;>;
SourceFile: "ParIterableLike.scala"
BootstrapMethods:
  0: #195 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #180 (Ljava/lang/Object;)Ljava/lang/Object;
      #185 REF_invokeStatic scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$25$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #186 (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #187 5
      #188 1
      #186 (Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
  1: #195 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #180 (Ljava/lang/Object;)Ljava/lang/Object;
      #222 REF_invokeStatic scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$26:(Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
      #224 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
      #187 5
      #188 1
      #224 (Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  2: #340 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #185 REF_invokeStatic scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$25$adapted:(Lscala/collection/parallel/IterableSplitter;)Ljava/lang/Object;
      #222 REF_invokeStatic scala/collection/parallel/ParIterableLike$ZipAll.$anonfun$split$26:(Lscala/collection/parallel/ParIterableLike$ZipAll;Lscala/Tuple2;)Lscala/collection/parallel/ParIterableLike$ZipAll;
  ScalaInlineInfo: length = 0x9F (unknown attribute)
   01 00 00 1F 01 2A 01 2B 01 00 B5 00 B6 01 00 DA
   00 DB 01 00 A4 00 F8 00 00 53 00 42 00 00 85 00
   59 00 01 15 00 62 00 01 15 01 16 00 00 68 00 55
   00 00 9E 01 27 00 00 9E 00 9F 00 00 2A 00 7A 00
   00 27 00 76 00 00 4B 00 4C 00 01 20 00 3C 00 00
   2D 00 4C 00 00 2D 00 7E 00 00 82 00 62 00 00 82
   00 83 00 01 23 00 F2 00 00 34 00 35 01 01 24 00
   F2 00 00 F1 00 F2 00 00 3B 00 3C 00 00 41 00 42
   00 00 A7 00 A8 00 00 30 00 70 00 00 73 00 74 00
   00 36 00 35 00 00 58 00 59 00 00 61 00 62 00
  Scala: length = 0x0 (unknown attribute)

