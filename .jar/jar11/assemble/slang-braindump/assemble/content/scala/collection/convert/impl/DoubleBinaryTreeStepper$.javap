Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/DoubleBinaryTreeStepper$.class
  Last modified May 29, 2022; size 1567 bytes
  SHA-256 checksum 953033fc89bad607492b09195b486243ad2e103cd4be449fd98454fa2261ef93
  Compiled from "BinaryTreeStepper.scala"
public final class scala.collection.convert.impl.DoubleBinaryTreeStepper$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/DoubleBinaryTreeStepper$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 3
Constant pool:
   #1 = Utf8               scala/collection/convert/impl/DoubleBinaryTreeStepper$
   #2 = Class              #1             // scala/collection/convert/impl/DoubleBinaryTreeStepper$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               BinaryTreeStepper.scala
   #6 = Utf8               MODULE$
   #7 = Utf8               Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
   #8 = Utf8               <clinit>
   #9 = Utf8               ()V
  #10 = Utf8               <init>
  #11 = NameAndType        #10:#9         // "<init>":()V
  #12 = Methodref          #2.#11         // scala/collection/convert/impl/DoubleBinaryTreeStepper$."<init>":()V
  #13 = NameAndType        #6:#7          // MODULE$:Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
  #14 = Fieldref           #2.#13         // scala/collection/convert/impl/DoubleBinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
  #15 = Utf8               from
  #16 = Utf8               (ILjava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Lscala/collection/convert/impl/DoubleBinaryTreeStepper;
  #17 = Utf8               <T:Ljava/lang/Object;>(ITT;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/collection/convert/impl/DoubleBinaryTreeStepper<TT;>;
  #18 = Utf8               maxLength
  #19 = Utf8               root
  #20 = Utf8               left
  #21 = Utf8               right
  #22 = Utf8               extract
  #23 = Utf8               scala/collection/convert/impl/DoubleBinaryTreeStepper
  #24 = Class              #23            // scala/collection/convert/impl/DoubleBinaryTreeStepper
  #25 = Utf8               scala/collection/convert/impl/BinaryTreeStepper$
  #26 = Class              #25            // scala/collection/convert/impl/BinaryTreeStepper$
  #27 = Utf8               Lscala/collection/convert/impl/BinaryTreeStepper$;
  #28 = NameAndType        #6:#27         // MODULE$:Lscala/collection/convert/impl/BinaryTreeStepper$;
  #29 = Fieldref           #26.#28        // scala/collection/convert/impl/BinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/BinaryTreeStepper$;
  #30 = Utf8               emptyStack
  #31 = Utf8               ()[Ljava/lang/Object;
  #32 = NameAndType        #30:#31        // emptyStack:()[Ljava/lang/Object;
  #33 = Methodref          #26.#32        // scala/collection/convert/impl/BinaryTreeStepper$.emptyStack:()[Ljava/lang/Object;
  #34 = Utf8               (ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
  #35 = NameAndType        #10:#34        // "<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
  #36 = Methodref          #24.#35        // scala/collection/convert/impl/DoubleBinaryTreeStepper."<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
  #37 = Utf8               initialize
  #38 = Utf8               (Ljava/lang/Object;I)V
  #39 = NameAndType        #37:#38        // initialize:(Ljava/lang/Object;I)V
  #40 = Methodref          #24.#39        // scala/collection/convert/impl/DoubleBinaryTreeStepper.initialize:(Ljava/lang/Object;I)V
  #41 = Utf8               ans
  #42 = Utf8               Lscala/collection/convert/impl/DoubleBinaryTreeStepper;
  #43 = Utf8               this
  #44 = Utf8               I
  #45 = Utf8               Ljava/lang/Object;
  #46 = Utf8               Lscala/Function1;
  #47 = Methodref          #4.#11         // java/lang/Object."<init>":()V
  #48 = Utf8               Code
  #49 = Utf8               LineNumberTable
  #50 = Utf8               LocalVariableTable
  #51 = Utf8               Signature
  #52 = Utf8               MethodParameters
  #53 = Utf8               SourceFile
  #54 = Utf8               ScalaInlineInfo
  #55 = Utf8               Scala
{
  public static final scala.collection.convert.impl.DoubleBinaryTreeStepper$ MODULE$;
    descriptor: Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/collection/convert/impl/DoubleBinaryTreeStepper$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
        10: return
      LineNumberTable:
        line 187: 0

  public <T extends java.lang.Object> scala.collection.convert.impl.DoubleBinaryTreeStepper<T> from(int, T, scala.Function1<T, T>, scala.Function1<T, T>, scala.Function1<T, java.lang.Object>);
    descriptor: (ILjava/lang/Object;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Lscala/collection/convert/impl/DoubleBinaryTreeStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=7, args_size=6
         0: new           #24                 // class scala/collection/convert/impl/DoubleBinaryTreeStepper
         3: dup
         4: iconst_0
         5: aconst_null
         6: getstatic     #29                 // Field scala/collection/convert/impl/BinaryTreeStepper$.MODULE$:Lscala/collection/convert/impl/BinaryTreeStepper$;
         9: invokevirtual #33                 // Method scala/collection/convert/impl/BinaryTreeStepper$.emptyStack:()[Ljava/lang/Object;
        12: iconst_m1
        13: aload_3
        14: aload         4
        16: aload         5
        18: invokespecial #36                 // Method scala/collection/convert/impl/DoubleBinaryTreeStepper."<init>":(ILjava/lang/Object;[Ljava/lang/Object;ILscala/Function1;Lscala/Function1;Lscala/Function1;)V
        21: astore        6
        23: aload         6
        25: aload_2
        26: iload_1
        27: invokevirtual #40                 // Method scala/collection/convert/impl/DoubleBinaryTreeStepper.initialize:(Ljava/lang/Object;I)V
        30: aload         6
        32: areturn
      LineNumberTable:
        line 189: 0
        line 190: 23
        line 191: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23       9     6   ans   Lscala/collection/convert/impl/DoubleBinaryTreeStepper;
            0      33     0  this   Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
            0      33     1 maxLength   I
            0      33     2  root   Ljava/lang/Object;
            0      33     3  left   Lscala/Function1;
            0      33     4 right   Lscala/Function1;
            0      33     5 extract   Lscala/Function1;
    Signature: #17                          // <T:Ljava/lang/Object;>(ITT;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;TT;>;Lscala/Function1<TT;Ljava/lang/Object;>;)Lscala/collection/convert/impl/DoubleBinaryTreeStepper<TT;>;
    MethodParameters:
      Name                           Flags
      maxLength                      final
      root                           final
      left                           final
      right                          final
      extract                        final

  private scala.collection.convert.impl.DoubleBinaryTreeStepper$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #47                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 187: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleBinaryTreeStepper$;
}
SourceFile: "BinaryTreeStepper.scala"
  ScalaInlineInfo: length = 0xE (unknown attribute)
   01 01 00 02 00 0A 00 09 01 00 0F 00 10 01
  Scala: length = 0x0 (unknown attribute)

