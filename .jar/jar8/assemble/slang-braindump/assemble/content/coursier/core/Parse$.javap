Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Parse$.class
  Last modified May 29, 2022; size 18095 bytes
  SHA-256 checksum 6e9d46762976484c0ba8e1562b4c6d366c60d1c562c94090ae79675d61b9e195
  Compiled from "Parse.scala"
public final class coursier.core.Parse$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/Parse$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 52, attributes: 5
Constant pool:
    #1 = Utf8               coursier/core/Parse$
    #2 = Class              #1            // coursier/core/Parse$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Parse.scala
    #6 = Utf8               coursier/core/compatibility/package$RichChar$
    #7 = Class              #6            // coursier/core/compatibility/package$RichChar$
    #8 = Utf8               coursier/core/compatibility/package
    #9 = Class              #8            // coursier/core/compatibility/package
   #10 = Utf8
   #11 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #12 = Class              #11           // java/lang/invoke/MethodHandles$Lookup
   #13 = Utf8               java/lang/invoke/MethodHandles
   #14 = Class              #13           // java/lang/invoke/MethodHandles
   #15 = Utf8               Lookup
   #16 = Utf8               scala/Option$WithFilter
   #17 = Class              #16           // scala/Option$WithFilter
   #18 = Utf8               scala/Option
   #19 = Class              #18           // scala/Option
   #20 = Utf8               WithFilter
   #21 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #22 = Class              #21           // scala/collection/SeqFactory$UnapplySeqWrapper
   #23 = Utf8               scala/collection/SeqFactory
   #24 = Class              #23           // scala/collection/SeqFactory
   #25 = Utf8               UnapplySeqWrapper
   #26 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #27 = Class              #26           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #28 = Utf8               scala/util/matching/Regex$Match
   #29 = Class              #28           // scala/util/matching/Regex$Match
   #30 = Utf8               scala/util/matching/Regex
   #31 = Class              #30           // scala/util/matching/Regex
   #32 = Utf8               Match
   #33 = Utf8               MODULE$
   #34 = Utf8               Lcoursier/core/Parse$;
   #35 = Utf8               latestSubRevision
   #36 = Utf8               Lscala/util/matching/Regex;
   #37 = Utf8               multiVersionIntervalSplit
   #38 = Utf8               fallbackConfigRegex
   #39 = Utf8               <clinit>
   #40 = Utf8               ()V
   #41 = Utf8               <init>
   #42 = NameAndType        #41:#40       // "<init>":()V
   #43 = Methodref          #2.#42        // coursier/core/Parse$."<init>":()V
   #44 = NameAndType        #33:#34       // MODULE$:Lcoursier/core/Parse$;
   #45 = Fieldref           #2.#44        // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
   #46 = Utf8               scala/collection/StringOps$
   #47 = Class              #46           // scala/collection/StringOps$
   #48 = Utf8               Lscala/collection/StringOps$;
   #49 = NameAndType        #33:#48       // MODULE$:Lscala/collection/StringOps$;
   #50 = Fieldref           #47.#49       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #51 = Utf8               scala/Predef$
   #52 = Class              #51           // scala/Predef$
   #53 = Utf8               Lscala/Predef$;
   #54 = NameAndType        #33:#53       // MODULE$:Lscala/Predef$;
   #55 = Fieldref           #52.#54       // scala/Predef$.MODULE$:Lscala/Predef$;
   #56 = Utf8               (.*[^.-])([.-]?)[+]
   #57 = String             #56           // (.*[^.-])([.-]?)[+]
   #58 = Utf8               augmentString
   #59 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #60 = NameAndType        #58:#59       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #61 = Methodref          #52.#60       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #62 = Utf8               r$extension
   #63 = Utf8               (Ljava/lang/String;)Lscala/util/matching/Regex;
   #64 = NameAndType        #62:#63       // r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
   #65 = Methodref          #47.#64       // scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
   #66 = NameAndType        #35:#36       // latestSubRevision:Lscala/util/matching/Regex;
   #67 = Fieldref           #2.#66        // coursier/core/Parse$.latestSubRevision:Lscala/util/matching/Regex;
   #68 = Utf8               java/lang/StringBuilder
   #69 = Class              #68           // java/lang/StringBuilder
   #70 = Integer            12
   #71 = Utf8               (I)V
   #72 = NameAndType        #41:#71       // "<init>":(I)V
   #73 = Methodref          #69.#72       // java/lang/StringBuilder."<init>":(I)V
   #74 = Utf8               (?
   #75 = String             #74           // (?
   #76 = Utf8               append
   #77 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #78 = NameAndType        #76:#77       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #79 = Methodref          #69.#78       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #80 = Utf8               coursier/core/compatibility/package$
   #81 = Class              #80           // coursier/core/compatibility/package$
   #82 = Utf8               Lcoursier/core/compatibility/package$;
   #83 = NameAndType        #33:#82       // MODULE$:Lcoursier/core/compatibility/package$;
   #84 = Fieldref           #81.#83       // coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
   #85 = Utf8               regexLookbehind
   #86 = Utf8               ()Ljava/lang/String;
   #87 = NameAndType        #85:#86       // regexLookbehind:()Ljava/lang/String;
   #88 = Methodref          #81.#87       // coursier/core/compatibility/package$.regexLookbehind:()Ljava/lang/String;
   #89 = Utf8               [
   #90 = String             #89           // [
   #91 = Utf8               ])
   #92 = String             #91           // ])
   #93 = Utf8               java/util/regex/Pattern
   #94 = Class              #93           // java/util/regex/Pattern
   #95 = Utf8               quote
   #96 = NameAndType        #95:#59       // quote:(Ljava/lang/String;)Ljava/lang/String;
   #97 = Methodref          #94.#96       // java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
   #98 = Utf8               ]),(?=[
   #99 = String             #98           // ]),(?=[
  #100 = Utf8               ([
  #101 = String             #100          // ([
  #102 = Utf8               toString
  #103 = NameAndType        #102:#86      // toString:()Ljava/lang/String;
  #104 = Methodref          #69.#103      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #105 = NameAndType        #37:#36       // multiVersionIntervalSplit:Lscala/util/matching/Regex;
  #106 = Fieldref           #2.#105       // coursier/core/Parse$.multiVersionIntervalSplit:Lscala/util/matching/Regex;
  #107 = Integer            6
  #108 = Utf8               ([^
  #109 = String             #108          // ([^
  #110 = Utf8               ()
  #111 = String             #110          // ()
  #112 = Utf8               ]*)
  #113 = String             #112          // ]*)
  #114 = Integer            2
  #115 = Utf8               ^
  #116 = String             #115          // ^
  #117 = Utf8               (
  #118 = String             #117          // (
  #119 = Utf8               )
  #120 = String             #119          // )
  #121 = Utf8               $
  #122 = String             #121          // $
  #123 = NameAndType        #38:#36       // fallbackConfigRegex:Lscala/util/matching/Regex;
  #124 = Fieldref           #2.#123       // coursier/core/Parse$.fallbackConfigRegex:Lscala/util/matching/Regex;
  #125 = Utf8               noPar
  #126 = Utf8               Ljava/lang/String;
  #127 = Utf8               version
  #128 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #129 = Utf8               (Ljava/lang/String;)Lscala/Option<Lcoursier/core/Version;>;
  #130 = Utf8               s
  #131 = Utf8               java/lang/String
  #132 = Class              #131          // java/lang/String
  #133 = Utf8               trim
  #134 = NameAndType        #133:#86      // trim:()Ljava/lang/String;
  #135 = Methodref          #132.#134     // java/lang/String.trim:()Ljava/lang/String;
  #136 = Utf8               isEmpty
  #137 = Utf8               ()Z
  #138 = NameAndType        #136:#137     // isEmpty:()Z
  #139 = Methodref          #132.#138     // java/lang/String.isEmpty:()Z
  #140 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #141 = MethodType         #140          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #142 = Utf8               $anonfun$version$1$adapted
  #143 = NameAndType        #142:#140     // $anonfun$version$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #144 = Methodref          #2.#143       // coursier/core/Parse$.$anonfun$version$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #145 = MethodHandle       6:#144        // REF_invokeStatic coursier/core/Parse$.$anonfun$version$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #146 = Integer            1
  #147 = Utf8               java/lang/invoke/LambdaMetafactory
  #148 = Class              #147          // java/lang/invoke/LambdaMetafactory
  #149 = Utf8               altMetafactory
  #150 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #151 = NameAndType        #149:#150     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #152 = Methodref          #148.#151     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #153 = MethodHandle       6:#152        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #154 = Utf8               apply
  #155 = Utf8               ()Lscala/Function1;
  #156 = NameAndType        #154:#155     // apply:()Lscala/Function1;
  #157 = InvokeDynamic      #0:#156       // #0:apply:()Lscala/Function1;
  #158 = Utf8               exists$extension
  #159 = Utf8               (Ljava/lang/String;Lscala/Function1;)Z
  #160 = NameAndType        #158:#159     // exists$extension:(Ljava/lang/String;Lscala/Function1;)Z
  #161 = Methodref          #47.#160      // scala/collection/StringOps$.exists$extension:(Ljava/lang/String;Lscala/Function1;)Z
  #162 = Utf8               scala/None$
  #163 = Class              #162          // scala/None$
  #164 = Utf8               Lscala/None$;
  #165 = NameAndType        #33:#164      // MODULE$:Lscala/None$;
  #166 = Fieldref           #163.#165     // scala/None$.MODULE$:Lscala/None$;
  #167 = Utf8               scala/Some
  #168 = Class              #167          // scala/Some
  #169 = Utf8               coursier/core/Version$
  #170 = Class              #169          // coursier/core/Version$
  #171 = Utf8               Lcoursier/core/Version$;
  #172 = NameAndType        #33:#171      // MODULE$:Lcoursier/core/Version$;
  #173 = Fieldref           #170.#172     // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
  #174 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
  #175 = NameAndType        #154:#174     // apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #176 = Methodref          #170.#175     // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
  #177 = Utf8               (Ljava/lang/Object;)V
  #178 = NameAndType        #41:#177      // "<init>":(Ljava/lang/Object;)V
  #179 = Methodref          #168.#178     // scala/Some."<init>":(Ljava/lang/Object;)V
  #180 = Utf8               trimmed
  #181 = Utf8               this
  #182 = Utf8               ()Lscala/util/matching/Regex;
  #183 = Utf8               ivyLatestSubRevisionInterval
  #184 = Utf8               (Ljava/lang/String;)Lscala/Option<Lcoursier/core/VersionInterval;>;
  #185 = NameAndType        #35:#182      // latestSubRevision:()Lscala/util/matching/Regex;
  #186 = Methodref          #2.#185       // coursier/core/Parse$.latestSubRevision:()Lscala/util/matching/Regex;
  #187 = Utf8               unapplySeq
  #188 = Utf8               (Ljava/lang/CharSequence;)Lscala/Option;
  #189 = NameAndType        #187:#188     // unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
  #190 = Methodref          #31.#189      // scala/util/matching/Regex.unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
  #191 = Methodref          #19.#138      // scala/Option.isEmpty:()Z
  #192 = Utf8               get
  #193 = Utf8               ()Ljava/lang/Object;
  #194 = NameAndType        #192:#193     // get:()Ljava/lang/Object;
  #195 = Methodref          #19.#194      // scala/Option.get:()Ljava/lang/Object;
  #196 = Utf8               scala/collection/immutable/List
  #197 = Class              #196          // scala/collection/immutable/List
  #198 = Utf8               lengthCompare
  #199 = Utf8               (I)I
  #200 = NameAndType        #198:#199     // lengthCompare:(I)I
  #201 = Methodref          #197.#200     // scala/collection/immutable/List.lengthCompare:(I)I
  #202 = Utf8               scala/collection/LinearSeqOps
  #203 = Class              #202          // scala/collection/LinearSeqOps
  #204 = Utf8               (I)Ljava/lang/Object;
  #205 = NameAndType        #154:#204     // apply:(I)Ljava/lang/Object;
  #206 = InterfaceMethodref #203.#205     // scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
  #207 = NameAndType        #127:#128     // version:(Ljava/lang/String;)Lscala/Option;
  #208 = Methodref          #2.#207       // coursier/core/Parse$.version:(Ljava/lang/String;)Lscala/Option;
  #209 = Utf8               $anonfun$ivyLatestSubRevisionInterval$1$adapted
  #210 = Utf8               (Lcoursier/core/Version;)Ljava/lang/Object;
  #211 = NameAndType        #209:#210     // $anonfun$ivyLatestSubRevisionInterval$1$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #212 = Methodref          #2.#211       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$1$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #213 = MethodHandle       6:#212        // REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$1$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #214 = MethodType         #210          //  (Lcoursier/core/Version;)Ljava/lang/Object;
  #215 = Integer            5
  #216 = InvokeDynamic      #1:#156       // #1:apply:()Lscala/Function1;
  #217 = Utf8               withFilter
  #218 = Utf8               (Lscala/Function1;)Lscala/Option$WithFilter;
  #219 = NameAndType        #217:#218     // withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #220 = Methodref          #19.#219      // scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #221 = Utf8               $anonfun$ivyLatestSubRevisionInterval$2
  #222 = Utf8               (Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
  #223 = NameAndType        #221:#222     // $anonfun$ivyLatestSubRevisionInterval$2:(Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
  #224 = Methodref          #2.#223       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$2:(Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
  #225 = MethodHandle       6:#224        // REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$2:(Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
  #226 = Utf8               (Lcoursier/core/Version;)Lscala/Tuple2;
  #227 = MethodType         #226          //  (Lcoursier/core/Version;)Lscala/Tuple2;
  #228 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #229 = NameAndType        #154:#228     // apply:(Ljava/lang/String;)Lscala/Function1;
  #230 = InvokeDynamic      #2:#229       // #2:apply:(Ljava/lang/String;)Lscala/Function1;
  #231 = Utf8               map
  #232 = Utf8               (Lscala/Function1;)Lscala/Option;
  #233 = NameAndType        #231:#232     // map:(Lscala/Function1;)Lscala/Option;
  #234 = Methodref          #17.#233      // scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
  #235 = Utf8               $anonfun$ivyLatestSubRevisionInterval$3
  #236 = Utf8               (Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
  #237 = NameAndType        #235:#236     // $anonfun$ivyLatestSubRevisionInterval$3:(Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
  #238 = Methodref          #2.#237       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$3:(Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
  #239 = MethodHandle       6:#238        // REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$3:(Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
  #240 = Utf8               (Lscala/Tuple2;)Lscala/Option;
  #241 = MethodType         #240          //  (Lscala/Tuple2;)Lscala/Option;
  #242 = InvokeDynamic      #3:#229       // #3:apply:(Ljava/lang/String;)Lscala/Function1;
  #243 = Utf8               flatMap
  #244 = NameAndType        #243:#232     // flatMap:(Lscala/Function1;)Lscala/Option;
  #245 = Methodref          #19.#244      // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
  #246 = Utf8               prefix
  #247 = Utf8               delim
  #248 = Utf8               versionInterval
  #249 = Utf8               startsWith
  #250 = Utf8               (Ljava/lang/String;)Z
  #251 = NameAndType        #249:#250     // startsWith:(Ljava/lang/String;)Z
  #252 = Methodref          #132.#251     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #253 = Utf8               scala/runtime/BoxesRunTime
  #254 = Class              #253          // scala/runtime/BoxesRunTime
  #255 = Utf8               boxToBoolean
  #256 = Utf8               (Z)Ljava/lang/Boolean;
  #257 = NameAndType        #255:#256     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #258 = Methodref          #254.#257     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #259 = Utf8               $anonfun$versionInterval$10$adapted
  #260 = Utf8               (Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
  #261 = NameAndType        #259:#260     // $anonfun$versionInterval$10$adapted:(Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
  #262 = Methodref          #2.#261       // coursier/core/Parse$.$anonfun$versionInterval$10$adapted:(Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
  #263 = MethodHandle       6:#262        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$10$adapted:(Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
  #264 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #265 = MethodType         #264          //  (Ljava/lang/Object;)Lscala/Option;
  #266 = Utf8               (Lcoursier/core/Parse$;Ljava/lang/String;)Lscala/Function1;
  #267 = NameAndType        #154:#266     // apply:(Lcoursier/core/Parse$;Ljava/lang/String;)Lscala/Function1;
  #268 = InvokeDynamic      #4:#267       // #4:apply:(Lcoursier/core/Parse$;Ljava/lang/String;)Lscala/Function1;
  #269 = Utf8               multiVersionInterval
  #270 = Utf8               $anonfun$multiVersionInterval$1$adapted
  #271 = NameAndType        #270:#140     // $anonfun$multiVersionInterval$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #272 = Methodref          #2.#271       // coursier/core/Parse$.$anonfun$multiVersionInterval$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #273 = MethodHandle       6:#272        // REF_invokeStatic coursier/core/Parse$.$anonfun$multiVersionInterval$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #274 = InvokeDynamic      #5:#156       // #5:apply:()Lscala/Function1;
  #275 = Utf8               count$extension
  #276 = Utf8               (Ljava/lang/String;Lscala/Function1;)I
  #277 = NameAndType        #275:#276     // count$extension:(Ljava/lang/String;Lscala/Function1;)I
  #278 = Methodref          #47.#277      // scala/collection/StringOps$.count$extension:(Ljava/lang/String;Lscala/Function1;)I
  #279 = Utf8               $anonfun$multiVersionInterval$2$adapted
  #280 = NameAndType        #279:#140     // $anonfun$multiVersionInterval$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #281 = Methodref          #2.#280       // coursier/core/Parse$.$anonfun$multiVersionInterval$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #282 = MethodHandle       6:#281        // REF_invokeStatic coursier/core/Parse$.$anonfun$multiVersionInterval$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #283 = InvokeDynamic      #6:#156       // #6:apply:()Lscala/Function1;
  #284 = Utf8               scala/collection/ArrayOps$
  #285 = Class              #284          // scala/collection/ArrayOps$
  #286 = Utf8               Lscala/collection/ArrayOps$;
  #287 = NameAndType        #33:#286      // MODULE$:Lscala/collection/ArrayOps$;
  #288 = Fieldref           #285.#287     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #289 = NameAndType        #37:#182      // multiVersionIntervalSplit:()Lscala/util/matching/Regex;
  #290 = Methodref          #2.#289       // coursier/core/Parse$.multiVersionIntervalSplit:()Lscala/util/matching/Regex;
  #291 = Utf8               split
  #292 = Utf8               (Ljava/lang/CharSequence;)[Ljava/lang/String;
  #293 = NameAndType        #291:#292     // split:(Ljava/lang/CharSequence;)[Ljava/lang/String;
  #294 = Methodref          #31.#293      // scala/util/matching/Regex.split:(Ljava/lang/CharSequence;)[Ljava/lang/String;
  #295 = Utf8               [Ljava/lang/Object;
  #296 = Class              #295          // "[Ljava/lang/Object;"
  #297 = Utf8               refArrayOps
  #298 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #299 = NameAndType        #297:#298     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #300 = Methodref          #52.#299      // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #301 = Utf8               last$extension
  #302 = NameAndType        #301:#140     // last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #303 = Methodref          #285.#302     // scala/collection/ArrayOps$.last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #304 = NameAndType        #248:#128     // versionInterval:(Ljava/lang/String;)Lscala/Option;
  #305 = Methodref          #2.#304       // coursier/core/Parse$.versionInterval:(Ljava/lang/String;)Lscala/Option;
  #306 = Utf8               openCount
  #307 = Utf8               I
  #308 = Utf8               closeCount
  #309 = Utf8               versionConstraint
  #310 = Utf8               (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #311 = Utf8               noConstraint$1
  #312 = NameAndType        #311:#128     // noConstraint$1:(Ljava/lang/String;)Lscala/Option;
  #313 = Methodref          #2.#312       // coursier/core/Parse$.noConstraint$1:(Ljava/lang/String;)Lscala/Option;
  #314 = MethodType         #193          //  ()Ljava/lang/Object;
  #315 = Utf8               $anonfun$versionConstraint$1
  #316 = NameAndType        #315:#128     // $anonfun$versionConstraint$1:(Ljava/lang/String;)Lscala/Option;
  #317 = Methodref          #2.#316       // coursier/core/Parse$.$anonfun$versionConstraint$1:(Ljava/lang/String;)Lscala/Option;
  #318 = MethodHandle       6:#317        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$1:(Ljava/lang/String;)Lscala/Option;
  #319 = Utf8               ()Lscala/Option;
  #320 = MethodType         #319          //  ()Lscala/Option;
  #321 = Utf8               (Ljava/lang/String;)Lscala/Function0;
  #322 = NameAndType        #154:#321     // apply:(Ljava/lang/String;)Lscala/Function0;
  #323 = InvokeDynamic      #7:#322       // #7:apply:(Ljava/lang/String;)Lscala/Function0;
  #324 = Utf8               orElse
  #325 = Utf8               (Lscala/Function0;)Lscala/Option;
  #326 = NameAndType        #324:#325     // orElse:(Lscala/Function0;)Lscala/Option;
  #327 = Methodref          #19.#326      // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
  #328 = Utf8               $anonfun$versionConstraint$3
  #329 = NameAndType        #328:#128     // $anonfun$versionConstraint$3:(Ljava/lang/String;)Lscala/Option;
  #330 = Methodref          #2.#329       // coursier/core/Parse$.$anonfun$versionConstraint$3:(Ljava/lang/String;)Lscala/Option;
  #331 = MethodHandle       6:#330        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$3:(Ljava/lang/String;)Lscala/Option;
  #332 = InvokeDynamic      #8:#322       // #8:apply:(Ljava/lang/String;)Lscala/Function0;
  #333 = Utf8               $anonfun$versionConstraint$6
  #334 = NameAndType        #333:#310     // $anonfun$versionConstraint$6:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #335 = Methodref          #2.#334       // coursier/core/Parse$.$anonfun$versionConstraint$6:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #336 = MethodHandle       6:#335        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$6:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
  #337 = Utf8               ()Lcoursier/core/VersionConstraint;
  #338 = MethodType         #337          //  ()Lcoursier/core/VersionConstraint;
  #339 = InvokeDynamic      #9:#322       // #9:apply:(Ljava/lang/String;)Lscala/Function0;
  #340 = Utf8               getOrElse
  #341 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #342 = NameAndType        #340:#341     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #343 = Methodref          #19.#342      // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #344 = Utf8               coursier/core/VersionConstraint
  #345 = Class              #344          // coursier/core/VersionConstraint
  #346 = Utf8               withFallbackConfig
  #347 = Utf8               (Ljava/lang/String;)Lscala/Option<Lscala/Tuple2<Lcoursier/core/Configuration;Lcoursier/core/Configuration;>;>;
  #348 = Utf8               config
  #349 = NameAndType        #38:#182      // fallbackConfigRegex:()Lscala/util/matching/Regex;
  #350 = Methodref          #2.#349       // coursier/core/Parse$.fallbackConfigRegex:()Lscala/util/matching/Regex;
  #351 = Utf8               findAllMatchIn
  #352 = Utf8               (Ljava/lang/CharSequence;)Lscala/collection/Iterator;
  #353 = NameAndType        #351:#352     // findAllMatchIn:(Ljava/lang/CharSequence;)Lscala/collection/Iterator;
  #354 = Methodref          #31.#353      // scala/util/matching/Regex.findAllMatchIn:(Ljava/lang/CharSequence;)Lscala/collection/Iterator;
  #355 = Utf8               scala/collection/Iterator
  #356 = Class              #355          // scala/collection/Iterator
  #357 = Utf8               toSeq
  #358 = Utf8               ()Lscala/collection/immutable/Seq;
  #359 = NameAndType        #357:#358     // toSeq:()Lscala/collection/immutable/Seq;
  #360 = InterfaceMethodref #356.#359     // scala/collection/Iterator.toSeq:()Lscala/collection/immutable/Seq;
  #361 = Utf8               scala/collection/immutable/Seq$
  #362 = Class              #361          // scala/collection/immutable/Seq$
  #363 = Utf8               Lscala/collection/immutable/Seq$;
  #364 = NameAndType        #33:#363      // MODULE$:Lscala/collection/immutable/Seq$;
  #365 = Fieldref           #362.#364     // scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
  #366 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #367 = NameAndType        #187:#366     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #368 = Methodref          #362.#367     // scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #369 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #370 = NameAndType        #33:#369      // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #371 = Fieldref           #27.#370      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #372 = Utf8               isEmpty$extension
  #373 = Utf8               (Lscala/collection/SeqOps;)Z
  #374 = NameAndType        #372:#373     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #375 = Methodref          #27.#374      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #376 = Utf8               get$extension
  #377 = NameAndType        #376:#366     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #378 = Methodref          #27.#377      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #379 = Utf8               (Lscala/collection/SeqOps;)V
  #380 = NameAndType        #41:#379      // "<init>":(Lscala/collection/SeqOps;)V
  #381 = Methodref          #22.#380      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #382 = Utf8               lengthCompare$extension
  #383 = Utf8               (Lscala/collection/SeqOps;I)I
  #384 = NameAndType        #382:#383     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #385 = Methodref          #27.#384      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #386 = Utf8               apply$extension
  #387 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #388 = NameAndType        #386:#387     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #389 = Methodref          #27.#388      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #390 = Utf8               groupCount
  #391 = Utf8               ()I
  #392 = NameAndType        #390:#391     // groupCount:()I
  #393 = Methodref          #29.#392      // scala/util/matching/Regex$Match.groupCount:()I
  #394 = Utf8               scala/collection/immutable/Seq
  #395 = Class              #394          // scala/collection/immutable/Seq
  #396 = Utf8               scala/collection/SeqOps
  #397 = Class              #396          // scala/collection/SeqOps
  #398 = Utf8               assert
  #399 = Utf8               (Z)V
  #400 = NameAndType        #398:#399     // assert:(Z)V
  #401 = Methodref          #52.#400      // scala/Predef$.assert:(Z)V
  #402 = Utf8               start
  #403 = NameAndType        #402:#199     // start:(I)I
  #404 = Methodref          #29.#403      // scala/util/matching/Regex$Match.start:(I)I
  #405 = Utf8               end
  #406 = NameAndType        #405:#199     // end:(I)I
  #407 = Methodref          #29.#406      // scala/util/matching/Regex$Match.end:(I)I
  #408 = Utf8               substring
  #409 = Utf8               (II)Ljava/lang/String;
  #410 = NameAndType        #408:#409     // substring:(II)Ljava/lang/String;
  #411 = Methodref          #132.#410     // java/lang/String.substring:(II)Ljava/lang/String;
  #412 = Utf8               scala/Tuple2
  #413 = Class              #412          // scala/Tuple2
  #414 = Utf8               coursier/core/Configuration
  #415 = Class              #414          // coursier/core/Configuration
  #416 = Utf8               (Ljava/lang/String;)V
  #417 = NameAndType        #41:#416      // "<init>":(Ljava/lang/String;)V
  #418 = Methodref          #415.#417     // coursier/core/Configuration."<init>":(Ljava/lang/String;)V
  #419 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #420 = NameAndType        #41:#419      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #421 = Methodref          #413.#420     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #422 = Utf8               main
  #423 = Utf8               fallback
  #424 = Utf8               m
  #425 = Utf8               Lscala/util/matching/Regex$Match;
  #426 = Utf8               $anonfun$version$1
  #427 = Utf8               (C)Z
  #428 = Utf8               c
  #429 = Utf8               Lcoursier/core/compatibility/package$RichChar$;
  #430 = NameAndType        #33:#429      // MODULE$:Lcoursier/core/compatibility/package$RichChar$;
  #431 = Fieldref           #7.#430       // coursier/core/compatibility/package$RichChar$.MODULE$:Lcoursier/core/compatibility/package$RichChar$;
  #432 = Utf8               RichChar
  #433 = Utf8               (C)C
  #434 = NameAndType        #432:#433     // RichChar:(C)C
  #435 = Methodref          #81.#434      // coursier/core/compatibility/package$.RichChar:(C)C
  #436 = Utf8               letterOrDigit$extension
  #437 = NameAndType        #436:#427     // letterOrDigit$extension:(C)Z
  #438 = Methodref          #7.#437       // coursier/core/compatibility/package$RichChar$.letterOrDigit$extension:(C)Z
  #439 = Utf8               C
  #440 = Utf8               $anonfun$ivyLatestSubRevisionInterval$1
  #441 = Utf8               (Lcoursier/core/Version;)Z
  #442 = Utf8               from
  #443 = Utf8               coursier/core/Version
  #444 = Class              #443          // coursier/core/Version
  #445 = Utf8               items
  #446 = Utf8               ()Lscala/collection/immutable/Vector;
  #447 = NameAndType        #445:#446     // items:()Lscala/collection/immutable/Vector;
  #448 = Methodref          #444.#447     // coursier/core/Version.items:()Lscala/collection/immutable/Vector;
  #449 = Utf8               scala/collection/immutable/Vector
  #450 = Class              #449          // scala/collection/immutable/Vector
  #451 = Utf8               nonEmpty
  #452 = NameAndType        #451:#137     // nonEmpty:()Z
  #453 = Methodref          #450.#452     // scala/collection/immutable/Vector.nonEmpty:()Z
  #454 = Utf8               Lcoursier/core/Version;
  #455 = Utf8               delim$1
  #456 = Integer            3
  #457 = Utf8               .
  #458 = String             #457          // .
  #459 = Utf8               max
  #460 = String             #459          // max
  #461 = Utf8               $anonfun$ivyLatestSubRevisionInterval$4
  #462 = Utf8               (Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #463 = Utf8               from$1
  #464 = Utf8               to
  #465 = Utf8               init
  #466 = NameAndType        #465:#446     // init:()Lscala/collection/immutable/Vector;
  #467 = Methodref          #450.#466     // scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
  #468 = Utf8               dropRight
  #469 = Utf8               (I)Lscala/collection/immutable/Vector;
  #470 = NameAndType        #468:#469     // dropRight:(I)Lscala/collection/immutable/Vector;
  #471 = Methodref          #450.#470     // scala/collection/immutable/Vector.dropRight:(I)Lscala/collection/immutable/Vector;
  #472 = Utf8               equals
  #473 = Utf8               (Ljava/lang/Object;)Z
  #474 = NameAndType        #472:#473     // equals:(Ljava/lang/Object;)Z
  #475 = Methodref          #4.#474       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #476 = Utf8               $anonfun$ivyLatestSubRevisionInterval$5
  #477 = Utf8               (Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #478 = Utf8               coursier/core/VersionInterval$
  #479 = Class              #478          // coursier/core/VersionInterval$
  #480 = Utf8               Lcoursier/core/VersionInterval$;
  #481 = NameAndType        #33:#480      // MODULE$:Lcoursier/core/VersionInterval$;
  #482 = Fieldref           #479.#481     // coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
  #483 = Utf8               (Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
  #484 = NameAndType        #154:#483     // apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
  #485 = Methodref          #479.#484     // coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
  #486 = Utf8               prefix$1
  #487 = Utf8               x$1
  #488 = Utf8               _1
  #489 = NameAndType        #488:#193     // _1:()Ljava/lang/Object;
  #490 = Methodref          #413.#489     // scala/Tuple2._1:()Ljava/lang/Object;
  #491 = Utf8               _2
  #492 = NameAndType        #491:#193     // _2:()Ljava/lang/Object;
  #493 = Methodref          #413.#492     // scala/Tuple2._2:()Ljava/lang/Object;
  #494 = Integer            0
  #495 = Utf8               $anonfun$ivyLatestSubRevisionInterval$4$adapted
  #496 = Utf8               (Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #497 = NameAndType        #495:#496     // $anonfun$ivyLatestSubRevisionInterval$4$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #498 = Methodref          #2.#497       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$4$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #499 = MethodHandle       6:#498        // REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$4$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #500 = Utf8               (Lcoursier/core/Version;)Lscala/Function1;
  #501 = NameAndType        #154:#500     // apply:(Lcoursier/core/Version;)Lscala/Function1;
  #502 = InvokeDynamic      #10:#501      // #10:apply:(Lcoursier/core/Version;)Lscala/Function1;
  #503 = NameAndType        #476:#477     // $anonfun$ivyLatestSubRevisionInterval$5:(Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #504 = Methodref          #2.#503       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$5:(Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #505 = MethodHandle       6:#504        // REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$5:(Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #506 = Utf8               (Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #507 = MethodType         #506          //  (Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #508 = InvokeDynamic      #11:#501      // #11:apply:(Lcoursier/core/Version;)Lscala/Function1;
  #509 = Utf8               scala/MatchError
  #510 = Class              #509          // scala/MatchError
  #511 = Methodref          #510.#178     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #512 = Utf8               Lscala/Tuple2;
  #513 = Utf8               $anonfun$versionInterval$1
  #514 = Utf8               (Lcoursier/core/Version;)Lscala/Some;
  #515 = Utf8               x$2
  #516 = Utf8               $anonfun$versionInterval$3
  #517 = Utf8               x$3
  #518 = Utf8               $anonfun$versionInterval$5
  #519 = Utf8               x$4
  #520 = Methodref          #444.#138     // coursier/core/Version.isEmpty:()Z
  #521 = Utf8               $anonfun$versionInterval$6
  #522 = Utf8               x$5
  #523 = Utf8               $anonfun$versionInterval$7
  #524 = Utf8               x$6
  #525 = Utf8               $anonfun$versionInterval$4
  #526 = Utf8               (Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
  #527 = Utf8               from$2
  #528 = Utf8               fromIncluded$1
  #529 = Utf8               toIncluded$1
  #530 = Utf8               $anonfun$versionInterval$5$adapted
  #531 = NameAndType        #530:#210     // $anonfun$versionInterval$5$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #532 = Methodref          #2.#531       // coursier/core/Parse$.$anonfun$versionInterval$5$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #533 = MethodHandle       6:#532        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$5$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #534 = InvokeDynamic      #12:#156      // #12:apply:()Lscala/Function1;
  #535 = Utf8               filterNot
  #536 = NameAndType        #535:#232     // filterNot:(Lscala/Function1;)Lscala/Option;
  #537 = Methodref          #19.#536      // scala/Option.filterNot:(Lscala/Function1;)Lscala/Option;
  #538 = Utf8               $anonfun$versionInterval$6$adapted
  #539 = NameAndType        #538:#210     // $anonfun$versionInterval$6$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #540 = Methodref          #2.#539       // coursier/core/Parse$.$anonfun$versionInterval$6$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #541 = MethodHandle       6:#540        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$6$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #542 = InvokeDynamic      #13:#156      // #13:apply:()Lscala/Function1;
  #543 = Utf8               $anonfun$versionInterval$7$adapted
  #544 = NameAndType        #543:#210     // $anonfun$versionInterval$7$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #545 = Methodref          #2.#544       // coursier/core/Parse$.$anonfun$versionInterval$7$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #546 = MethodHandle       6:#545        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$7$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #547 = InvokeDynamic      #14:#156      // #14:apply:()Lscala/Function1;
  #548 = Utf8               forall
  #549 = Utf8               (Lscala/Function1;)Z
  #550 = NameAndType        #548:#549     // forall:(Lscala/Function1;)Z
  #551 = Methodref          #19.#550      // scala/Option.forall:(Lscala/Function1;)Z
  #552 = Utf8               Lscala/Option;
  #553 = Utf8               Z
  #554 = Utf8               $anonfun$versionInterval$2
  #555 = Utf8               (Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
  #556 = Utf8               strTo$1
  #557 = NameAndType        #516:#514     // $anonfun$versionInterval$3:(Lcoursier/core/Version;)Lscala/Some;
  #558 = Methodref          #2.#557       // coursier/core/Parse$.$anonfun$versionInterval$3:(Lcoursier/core/Version;)Lscala/Some;
  #559 = MethodHandle       6:#558        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$3:(Lcoursier/core/Version;)Lscala/Some;
  #560 = MethodType         #514          //  (Lcoursier/core/Version;)Lscala/Some;
  #561 = InvokeDynamic      #15:#156      // #15:apply:()Lscala/Function1;
  #562 = Methodref          #19.#233      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #563 = NameAndType        #525:#526     // $anonfun$versionInterval$4:(Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
  #564 = Methodref          #2.#563       // coursier/core/Parse$.$anonfun$versionInterval$4:(Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
  #565 = MethodHandle       6:#564        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$4:(Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
  #566 = Utf8               (Lscala/Option;)Lcoursier/core/VersionInterval;
  #567 = MethodType         #566          //  (Lscala/Option;)Lcoursier/core/VersionInterval;
  #568 = Utf8               (Lscala/Option;ZZ)Lscala/Function1;
  #569 = NameAndType        #154:#568     // apply:(Lscala/Option;ZZ)Lscala/Function1;
  #570 = InvokeDynamic      #16:#569      // #16:apply:(Lscala/Option;ZZ)Lscala/Function1;
  #571 = Utf8               $anonfun$versionInterval$8
  #572 = Utf8               v
  #573 = Utf8               $anonfun$versionInterval$9
  #574 = Utf8               (ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #575 = Utf8               parseBounds$1
  #576 = Utf8               (ZZLjava/lang/String;)Lscala/Option;
  #577 = Utf8               fromIncluded
  #578 = Utf8               toIncluded
  #579 = Utf8               indexOf
  #580 = NameAndType        #579:#199     // indexOf:(I)I
  #581 = Methodref          #132.#580     // java/lang/String.indexOf:(I)I
  #582 = Utf8               take$extension
  #583 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #584 = NameAndType        #582:#583     // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #585 = Methodref          #47.#584      // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #586 = Utf8               drop$extension
  #587 = NameAndType        #586:#583     // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #588 = Methodref          #47.#587      // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #589 = NameAndType        #513:#514     // $anonfun$versionInterval$1:(Lcoursier/core/Version;)Lscala/Some;
  #590 = Methodref          #2.#589       // coursier/core/Parse$.$anonfun$versionInterval$1:(Lcoursier/core/Version;)Lscala/Some;
  #591 = MethodHandle       6:#590        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$1:(Lcoursier/core/Version;)Lscala/Some;
  #592 = InvokeDynamic      #17:#156      // #17:apply:()Lscala/Function1;
  #593 = NameAndType        #554:#555     // $anonfun$versionInterval$2:(Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
  #594 = Methodref          #2.#593       // coursier/core/Parse$.$anonfun$versionInterval$2:(Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
  #595 = MethodHandle       6:#594        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$2:(Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
  #596 = Utf8               (Lscala/Option;)Lscala/Option;
  #597 = MethodType         #596          //  (Lscala/Option;)Lscala/Option;
  #598 = Utf8               (Ljava/lang/String;ZZ)Lscala/Function1;
  #599 = NameAndType        #154:#598     // apply:(Ljava/lang/String;ZZ)Lscala/Function1;
  #600 = InvokeDynamic      #18:#599      // #18:apply:(Ljava/lang/String;ZZ)Lscala/Function1;
  #601 = Utf8               nonEmpty$extension
  #602 = NameAndType        #601:#250     // nonEmpty$extension:(Ljava/lang/String;)Z
  #603 = Methodref          #47.#602      // scala/collection/StringOps$.nonEmpty$extension:(Ljava/lang/String;)Z
  #604 = Utf8               $anonfun$versionInterval$8$adapted
  #605 = NameAndType        #604:#210     // $anonfun$versionInterval$8$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #606 = Methodref          #2.#605       // coursier/core/Parse$.$anonfun$versionInterval$8$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #607 = MethodHandle       6:#606        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$8$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
  #608 = InvokeDynamic      #19:#156      // #19:apply:()Lscala/Function1;
  #609 = NameAndType        #573:#574     // $anonfun$versionInterval$9:(ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #610 = Methodref          #2.#609       // coursier/core/Parse$.$anonfun$versionInterval$9:(ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #611 = MethodHandle       6:#610        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$9:(ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
  #612 = Utf8               (ZZ)Lscala/Function1;
  #613 = NameAndType        #154:#612     // apply:(ZZ)Lscala/Function1;
  #614 = InvokeDynamic      #20:#613      // #20:apply:(ZZ)Lscala/Function1;
  #615 = Utf8               strFrom
  #616 = Utf8               strTo
  #617 = Utf8               commaIdx
  #618 = Utf8               $anonfun$versionInterval$11
  #619 = Utf8               (Ljava/lang/String;Z)Lscala/Tuple2;
  #620 = Utf8               s$1
  #621 = Utf8               dropRight$extension
  #622 = NameAndType        #621:#583     // dropRight$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #623 = Methodref          #47.#622      // scala/collection/StringOps$.dropRight$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #624 = Utf8               s0
  #625 = Utf8               $anonfun$versionInterval$13
  #626 = Utf8               (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
  #627 = Utf8               itv
  #628 = Utf8               Lcoursier/core/VersionInterval;
  #629 = Utf8               $anonfun$versionInterval$12
  #630 = Utf8               (Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
  #631 = Utf8               $this
  #632 = Utf8               fromIncluded$2
  #633 = Utf8               x$7
  #634 = Utf8               _1$mcZ$sp
  #635 = NameAndType        #634:#137     // _1$mcZ$sp:()Z
  #636 = Methodref          #413.#635     // scala/Tuple2._1$mcZ$sp:()Z
  #637 = NameAndType        #575:#576     // parseBounds$1:(ZZLjava/lang/String;)Lscala/Option;
  #638 = Methodref          #2.#637       // coursier/core/Parse$.parseBounds$1:(ZZLjava/lang/String;)Lscala/Option;
  #639 = NameAndType        #625:#626     // $anonfun$versionInterval$13:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
  #640 = Methodref          #2.#639       // coursier/core/Parse$.$anonfun$versionInterval$13:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
  #641 = MethodHandle       6:#640        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$13:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
  #642 = MethodType         #626          //  (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
  #643 = InvokeDynamic      #21:#156      // #21:apply:()Lscala/Function1;
  #644 = Utf8               $anonfun$versionInterval$10
  #645 = Utf8               (Lcoursier/core/Parse$;Ljava/lang/String;Z)Lscala/Option;
  #646 = Utf8               ]
  #647 = String             #646          // ]
  #648 = Utf8               endsWith
  #649 = NameAndType        #648:#250     // endsWith:(Ljava/lang/String;)Z
  #650 = Methodref          #132.#649     // java/lang/String.endsWith:(Ljava/lang/String;)Z
  #651 = Utf8               $anonfun$versionInterval$11$adapted
  #652 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
  #653 = NameAndType        #651:#652     // $anonfun$versionInterval$11$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
  #654 = Methodref          #2.#653       // coursier/core/Parse$.$anonfun$versionInterval$11$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
  #655 = MethodHandle       6:#654        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$11$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
  #656 = Utf8               (Ljava/lang/Object;)Lscala/Tuple2;
  #657 = MethodType         #656          //  (Ljava/lang/Object;)Lscala/Tuple2;
  #658 = InvokeDynamic      #22:#229      // #22:apply:(Ljava/lang/String;)Lscala/Function1;
  #659 = NameAndType        #629:#630     // $anonfun$versionInterval$12:(Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
  #660 = Methodref          #2.#659       // coursier/core/Parse$.$anonfun$versionInterval$12:(Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
  #661 = MethodHandle       6:#660        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$12:(Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
  #662 = Utf8               (Lcoursier/core/Parse$;Z)Lscala/Function1;
  #663 = NameAndType        #154:#662     // apply:(Lcoursier/core/Parse$;Z)Lscala/Function1;
  #664 = InvokeDynamic      #23:#663      // #23:apply:(Lcoursier/core/Parse$;Z)Lscala/Function1;
  #665 = Utf8               $anonfun$multiVersionInterval$1
  #666 = Utf8               $anonfun$multiVersionInterval$2
  #667 = Utf8               s$2
  #668 = Utf8               coursier/core/VersionConstraint$
  #669 = Class              #668          // coursier/core/VersionConstraint$
  #670 = Utf8               Lcoursier/core/VersionConstraint$;
  #671 = NameAndType        #33:#670      // MODULE$:Lcoursier/core/VersionConstraint$;
  #672 = Fieldref           #669.#671     // coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
  #673 = Utf8               all
  #674 = NameAndType        #673:#337     // all:()Lcoursier/core/VersionConstraint;
  #675 = Methodref          #669.#674     // coursier/core/VersionConstraint$.all:()Lcoursier/core/VersionConstraint;
  #676 = Utf8               $anonfun$versionConstraint$2
  #677 = Utf8               (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #678 = Utf8               interval
  #679 = NameAndType        #678:#677     // interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #680 = Methodref          #669.#679     // coursier/core/VersionConstraint$.interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #681 = NameAndType        #183:#128     // ivyLatestSubRevisionInterval:(Ljava/lang/String;)Lscala/Option;
  #682 = Methodref          #2.#681       // coursier/core/Parse$.ivyLatestSubRevisionInterval:(Ljava/lang/String;)Lscala/Option;
  #683 = NameAndType        #676:#677     // $anonfun$versionConstraint$2:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #684 = Methodref          #2.#683       // coursier/core/Parse$.$anonfun$versionConstraint$2:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #685 = MethodHandle       6:#684        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$2:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #686 = MethodType         #677          //  (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #687 = InvokeDynamic      #24:#156      // #24:apply:()Lscala/Function1;
  #688 = Utf8               $anonfun$versionConstraint$4
  #689 = NameAndType        #269:#128     // multiVersionInterval:(Ljava/lang/String;)Lscala/Option;
  #690 = Methodref          #2.#689       // coursier/core/Parse$.multiVersionInterval:(Ljava/lang/String;)Lscala/Option;
  #691 = Utf8               $anonfun$versionConstraint$5
  #692 = NameAndType        #688:#128     // $anonfun$versionConstraint$4:(Ljava/lang/String;)Lscala/Option;
  #693 = Methodref          #2.#692       // coursier/core/Parse$.$anonfun$versionConstraint$4:(Ljava/lang/String;)Lscala/Option;
  #694 = MethodHandle       6:#693        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$4:(Ljava/lang/String;)Lscala/Option;
  #695 = InvokeDynamic      #25:#322      // #25:apply:(Ljava/lang/String;)Lscala/Function0;
  #696 = NameAndType        #691:#677     // $anonfun$versionConstraint$5:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #697 = Methodref          #2.#696       // coursier/core/Parse$.$anonfun$versionConstraint$5:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #698 = MethodHandle       6:#697        // REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$5:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #699 = InvokeDynamic      #26:#156      // #26:apply:()Lscala/Function1;
  #700 = Utf8               preferred
  #701 = Utf8               (Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
  #702 = NameAndType        #700:#701     // preferred:(Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
  #703 = Methodref          #669.#702     // coursier/core/VersionConstraint$.preferred:(Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
  #704 = Methodref          #4.#42        // java/lang/Object."<init>":()V
  #705 = Utf8               unboxToChar
  #706 = Utf8               (Ljava/lang/Object;)C
  #707 = NameAndType        #705:#706     // unboxToChar:(Ljava/lang/Object;)C
  #708 = Methodref          #254.#707     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #709 = NameAndType        #426:#427     // $anonfun$version$1:(C)Z
  #710 = Methodref          #2.#709       // coursier/core/Parse$.$anonfun$version$1:(C)Z
  #711 = Utf8               Ljava/lang/Object;
  #712 = NameAndType        #440:#441     // $anonfun$ivyLatestSubRevisionInterval$1:(Lcoursier/core/Version;)Z
  #713 = Methodref          #2.#712       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$1:(Lcoursier/core/Version;)Z
  #714 = Utf8               unboxToBoolean
  #715 = NameAndType        #714:#473     // unboxToBoolean:(Ljava/lang/Object;)Z
  #716 = Methodref          #254.#715     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #717 = NameAndType        #644:#645     // $anonfun$versionInterval$10:(Lcoursier/core/Parse$;Ljava/lang/String;Z)Lscala/Option;
  #718 = Methodref          #2.#717       // coursier/core/Parse$.$anonfun$versionInterval$10:(Lcoursier/core/Parse$;Ljava/lang/String;Z)Lscala/Option;
  #719 = NameAndType        #665:#427     // $anonfun$multiVersionInterval$1:(C)Z
  #720 = Methodref          #2.#719       // coursier/core/Parse$.$anonfun$multiVersionInterval$1:(C)Z
  #721 = NameAndType        #666:#427     // $anonfun$multiVersionInterval$2:(C)Z
  #722 = Methodref          #2.#721       // coursier/core/Parse$.$anonfun$multiVersionInterval$2:(C)Z
  #723 = NameAndType        #461:#462     // $anonfun$ivyLatestSubRevisionInterval$4:(Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #724 = Methodref          #2.#723       // coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$4:(Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #725 = NameAndType        #518:#441     // $anonfun$versionInterval$5:(Lcoursier/core/Version;)Z
  #726 = Methodref          #2.#725       // coursier/core/Parse$.$anonfun$versionInterval$5:(Lcoursier/core/Version;)Z
  #727 = NameAndType        #521:#441     // $anonfun$versionInterval$6:(Lcoursier/core/Version;)Z
  #728 = Methodref          #2.#727       // coursier/core/Parse$.$anonfun$versionInterval$6:(Lcoursier/core/Version;)Z
  #729 = NameAndType        #523:#441     // $anonfun$versionInterval$7:(Lcoursier/core/Version;)Z
  #730 = Methodref          #2.#729       // coursier/core/Parse$.$anonfun$versionInterval$7:(Lcoursier/core/Version;)Z
  #731 = NameAndType        #571:#441     // $anonfun$versionInterval$8:(Lcoursier/core/Version;)Z
  #732 = Methodref          #2.#731       // coursier/core/Parse$.$anonfun$versionInterval$8:(Lcoursier/core/Version;)Z
  #733 = NameAndType        #618:#619     // $anonfun$versionInterval$11:(Ljava/lang/String;Z)Lscala/Tuple2;
  #734 = Methodref          #2.#733       // coursier/core/Parse$.$anonfun$versionInterval$11:(Ljava/lang/String;Z)Lscala/Tuple2;
  #735 = Utf8               $deserializeLambda$
  #736 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #737 = Utf8               scala/runtime/LambdaDeserialize
  #738 = Class              #737          // scala/runtime/LambdaDeserialize
  #739 = Utf8               bootstrap
  #740 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #741 = NameAndType        #739:#740     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #742 = Methodref          #738.#741     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #743 = MethodHandle       6:#742        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #744 = Utf8               lambdaDeserialize
  #745 = NameAndType        #744:#736     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #746 = InvokeDynamic      #27:#745      // #27:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #747 = Utf8               Code
  #748 = Utf8               LineNumberTable
  #749 = Utf8               LocalVariableTable
  #750 = Utf8               StackMapTable
  #751 = Utf8               Signature
  #752 = Utf8               MethodParameters
  #753 = Utf8               InnerClasses
  #754 = Utf8               SourceFile
  #755 = Utf8               BootstrapMethods
  #756 = Utf8               ScalaInlineInfo
  #757 = Utf8               Scala
{
  public static final coursier.core.Parse$ MODULE$;
    descriptor: Lcoursier/core/Parse$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.util.matching.Regex latestSubRevision;
    descriptor: Lscala/util/matching/Regex;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final scala.util.matching.Regex multiVersionIntervalSplit;
    descriptor: Lscala/util/matching/Regex;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final scala.util.matching.Regex fallbackConfigRegex;
    descriptor: Lscala/util/matching/Regex;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=1, args_size=0
         0: new           #2                  // class coursier/core/Parse$
         3: dup
         4: invokespecial #43                 // Method "<init>":()V
         7: putstatic     #45                 // Field MODULE$:Lcoursier/core/Parse$;
        10: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        13: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        16: ldc           #57                 // String (.*[^.-])([.-]?)[+]
        18: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        21: invokevirtual #65                 // Method scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
        24: putstatic     #67                 // Field latestSubRevision:Lscala/util/matching/Regex;
        27: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        30: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        33: new           #69                 // class java/lang/StringBuilder
        36: dup
        37: ldc           #70                 // int 12
        39: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
        42: ldc           #75                 // String (?
        44: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: getstatic     #84                 // Field coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
        50: invokevirtual #88                 // Method coursier/core/compatibility/package$.regexLookbehind:()Ljava/lang/String;
        53: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        56: ldc           #90                 // String [
        58: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        61: ldc           #92                 // String ])
        63: invokestatic  #97                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
        66: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        69: ldc           #99                 // String ]),(?=[
        71: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        74: ldc           #101                // String ([
        76: invokestatic  #97                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
        79: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: ldc           #92                 // String ])
        84: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        87: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        90: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        93: invokevirtual #65                 // Method scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
        96: putstatic     #106                // Field multiVersionIntervalSplit:Lscala/util/matching/Regex;
        99: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       102: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       105: new           #69                 // class java/lang/StringBuilder
       108: dup
       109: ldc           #107                // int 6
       111: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       114: ldc           #109                // String ([^
       116: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       119: ldc           #111                // String ()
       121: invokestatic  #97                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
       124: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       127: ldc           #113                // String ]*)
       129: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       132: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       135: astore_0
       136: new           #69                 // class java/lang/StringBuilder
       139: dup
       140: ldc           #114                // int 2
       142: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       145: ldc           #116                // String ^
       147: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       150: aload_0
       151: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       154: ldc           #118                // String (
       156: invokestatic  #97                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
       159: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       162: aload_0
       163: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       166: ldc           #120                // String )
       168: invokestatic  #97                 // Method java/util/regex/Pattern.quote:(Ljava/lang/String;)Ljava/lang/String;
       171: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       174: ldc           #122                // String $
       176: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       179: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       182: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       185: invokevirtual #65                 // Method scala/collection/StringOps$.r$extension:(Ljava/lang/String;)Lscala/util/matching/Regex;
       188: putstatic     #124                // Field fallbackConfigRegex:Lscala/util/matching/Regex;
       191: return
      LineNumberTable:
        line 7: 0
        line 16: 10
        line 62: 27
        line 86: 99
        line 87: 105
        line 88: 136
        line 86: 188
        line 7: 191
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          136      46     0 noPar   Ljava/lang/String;

  public scala.Option<coursier.core.Version> version(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #135                // Method java/lang/String.trim:()Ljava/lang/String;
         4: astore_2
         5: aload_2
         6: invokevirtual #139                // Method java/lang/String.isEmpty:()Z
         9: ifne          33
        12: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        15: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        18: aload_2
        19: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        22: invokedynamic #157,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        27: invokevirtual #161                // Method scala/collection/StringOps$.exists$extension:(Ljava/lang/String;Lscala/Function1;)Z
        30: ifeq          39
        33: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        36: goto          53
        39: new           #168                // class scala/Some
        42: dup
        43: getstatic     #173                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
        46: aload_2
        47: invokevirtual #176                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
        50: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        53: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ class java/lang/String ]
        frame_type = 5 /* same */
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 10: 0
        line 11: 5
        line 12: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      48     2 trimmed   Ljava/lang/String;
            0      54     0  this   Lcoursier/core/Parse$;
            0      54     1     s   Ljava/lang/String;
    Signature: #129                         // (Ljava/lang/String;)Lscala/Option<Lcoursier/core/Version;>;
    MethodParameters:
      Name                           Flags
      s                              final

  private scala.util.matching.Regex latestSubRevision();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #67                 // Field latestSubRevision:Lscala/util/matching/Regex;
         3: areturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/Parse$;

  public scala.Option<coursier.core.VersionInterval> ivyLatestSubRevisionInterval(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        127
         6: aload_0
         7: invokespecial #186                // Method latestSubRevision:()Lscala/util/matching/Regex;
        10: aload_3
        11: invokevirtual #190                // Method scala/util/matching/Regex.unapplySeq:(Ljava/lang/CharSequence;)Lscala/Option;
        14: astore        4
        16: aload         4
        18: invokevirtual #191                // Method scala/Option.isEmpty:()Z
        21: ifne          124
        24: aload         4
        26: invokevirtual #195                // Method scala/Option.get:()Ljava/lang/Object;
        29: ifnull        124
        32: aload         4
        34: invokevirtual #195                // Method scala/Option.get:()Ljava/lang/Object;
        37: checkcast     #197                // class scala/collection/immutable/List
        40: iconst_2
        41: invokevirtual #201                // Method scala/collection/immutable/List.lengthCompare:(I)I
        44: iconst_0
        45: if_icmpne     124
        48: aload         4
        50: invokevirtual #195                // Method scala/Option.get:()Ljava/lang/Object;
        53: checkcast     #203                // class scala/collection/LinearSeqOps
        56: iconst_0
        57: invokeinterface #206,  2          // InterfaceMethod scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
        62: checkcast     #132                // class java/lang/String
        65: astore        5
        67: aload         4
        69: invokevirtual #195                // Method scala/Option.get:()Ljava/lang/Object;
        72: checkcast     #203                // class scala/collection/LinearSeqOps
        75: iconst_1
        76: invokeinterface #206,  2          // InterfaceMethod scala/collection/LinearSeqOps.apply:(I)Ljava/lang/Object;
        81: checkcast     #132                // class java/lang/String
        84: astore        6
        86: aload_0
        87: aload         5
        89: invokevirtual #208                // Method version:(Ljava/lang/String;)Lscala/Option;
        92: invokedynamic #216,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        97: invokevirtual #220                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
       100: aload         6
       102: invokedynamic #230,  0            // InvokeDynamic #2:apply:(Ljava/lang/String;)Lscala/Function1;
       107: invokevirtual #234                // Method scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
       110: aload         5
       112: invokedynamic #242,  0            // InvokeDynamic #3:apply:(Ljava/lang/String;)Lscala/Function1;
       117: invokevirtual #245                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
       120: astore_2
       121: goto          137
       124: goto          130
       127: goto          130
       130: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
       133: astore_2
       134: goto          137
       137: aload_2
       138: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 124
          locals = [ top, class java/lang/String, class scala/Option ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/core/Parse$, class java/lang/String, class scala/Option, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 19: 0
        line 20: 2
        line 22: 86
        line 20: 124
        line 30: 130
        line 19: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           67      57     5 prefix   Ljava/lang/String;
           86      38     6 delim   Ljava/lang/String;
            0     139     0  this   Lcoursier/core/Parse$;
            0     139     1     s   Ljava/lang/String;
    Signature: #184                         // (Ljava/lang/String;)Lscala/Option<Lcoursier/core/VersionInterval;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.Option<coursier.core.VersionInterval> versionInterval(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ldc           #90                 // String [
         3: invokevirtual #252                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         6: ifeq          23
         9: new           #168                // class scala/Some
        12: dup
        13: iconst_1
        14: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        17: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: goto          49
        23: aload_1
        24: ldc           #118                // String (
        26: invokevirtual #252                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        29: ifeq          46
        32: new           #168                // class scala/Some
        35: dup
        36: iconst_0
        37: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        40: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        43: goto          49
        46: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        49: aload_0
        50: aload_1
        51: invokedynamic #268,  0            // InvokeDynamic #4:apply:(Lcoursier/core/Parse$;Ljava/lang/String;)Lscala/Function1;
        56: invokevirtual #245                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        59: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 23 /* same */
        frame_type = 22 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lcoursier/core/Parse$;
            0      60     1     s   Ljava/lang/String;
    Signature: #184                         // (Ljava/lang/String;)Lscala/Option<Lcoursier/core/VersionInterval;>;
    MethodParameters:
      Name                           Flags
      s                              final

  private scala.util.matching.Regex multiVersionIntervalSplit();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #106                // Field multiVersionIntervalSplit:Lscala/util/matching/Regex;
         3: areturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/Parse$;

  public scala.Option<coursier.core.VersionInterval> multiVersionInterval(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=2
         0: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        10: invokedynamic #274,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        15: invokevirtual #278                // Method scala/collection/StringOps$.count$extension:(Ljava/lang/String;Lscala/Function1;)I
        18: istore_2
        19: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        22: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        25: aload_1
        26: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        29: invokedynamic #283,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        34: invokevirtual #278                // Method scala/collection/StringOps$.count$extension:(Ljava/lang/String;Lscala/Function1;)I
        37: istore_3
        38: iload_2
        39: iload_3
        40: if_icmpne     81
        43: iload_2
        44: iconst_1
        45: if_icmplt     81
        48: aload_0
        49: getstatic     #288                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        52: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        55: aload_0
        56: invokespecial #290                // Method multiVersionIntervalSplit:()Lscala/util/matching/Regex;
        59: aload_1
        60: invokevirtual #294                // Method scala/util/matching/Regex.split:(Ljava/lang/CharSequence;)[Ljava/lang/String;
        63: checkcast     #296                // class "[Ljava/lang/Object;"
        66: invokevirtual #300                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        69: invokevirtual #303                // Method scala/collection/ArrayOps$.last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        72: checkcast     #132                // class java/lang/String
        75: invokevirtual #305                // Method versionInterval:(Ljava/lang/String;)Lscala/Option;
        78: goto          84
        81: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        84: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 81
          locals = [ int, int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 68: 0
        line 69: 19
        line 71: 38
        line 72: 48
        line 74: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      65     2 openCount   I
           38      46     3 closeCount   I
            0      85     0  this   Lcoursier/core/Parse$;
            0      85     1     s   Ljava/lang/String;
    Signature: #184                         // (Ljava/lang/String;)Lscala/Option<Lcoursier/core/VersionInterval;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.core.VersionConstraint versionConstraint(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokestatic  #313                // Method noConstraint$1:(Ljava/lang/String;)Lscala/Option;
         4: aload_1
         5: invokedynamic #323,  0            // InvokeDynamic #7:apply:(Ljava/lang/String;)Lscala/Function0;
        10: invokevirtual #327                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        13: aload_1
        14: invokedynamic #332,  0            // InvokeDynamic #8:apply:(Ljava/lang/String;)Lscala/Function0;
        19: invokevirtual #327                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        22: aload_1
        23: invokedynamic #339,  0            // InvokeDynamic #9:apply:(Ljava/lang/String;)Lscala/Function0;
        28: invokevirtual #343                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        31: checkcast     #345                // class coursier/core/VersionConstraint
        34: areturn
      LineNumberTable:
        line 80: 0
        line 81: 4
        line 82: 13
        line 83: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lcoursier/core/Parse$;
            0      35     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.util.matching.Regex fallbackConfigRegex();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #124                // Field fallbackConfigRegex:Lscala/util/matching/Regex;
         3: areturn
      LineNumberTable:
        line 86: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/Parse$;

  public scala.Option<scala.Tuple2<coursier.core.Configuration, coursier.core.Configuration>> withFallbackConfig(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=8, args_size=2
         0: aload_0
         1: invokevirtual #350                // Method fallbackConfigRegex:()Lscala/util/matching/Regex;
         4: aload_1
         5: invokevirtual #354                // Method scala/util/matching/Regex.findAllMatchIn:(Ljava/lang/CharSequence;)Lscala/collection/Iterator;
         8: invokeinterface #360,  1          // InterfaceMethod scala/collection/Iterator.toSeq:()Lscala/collection/immutable/Seq;
        13: astore_3
        14: aload_3
        15: ifnull        190
        18: getstatic     #365                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        21: aload_3
        22: invokevirtual #368                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        25: astore        4
        27: getstatic     #371                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        30: aload         4
        32: invokevirtual #375                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        35: ifne          187
        38: new           #22                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        41: dup
        42: getstatic     #371                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        45: aload         4
        47: invokevirtual #378                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        50: invokespecial #381                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        53: ifnull        187
        56: getstatic     #371                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        59: getstatic     #371                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        62: aload         4
        64: invokevirtual #378                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        67: iconst_1
        68: invokevirtual #385                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        71: iconst_0
        72: if_icmpne     187
        75: getstatic     #371                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        78: getstatic     #371                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        81: aload         4
        83: invokevirtual #378                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        86: iconst_0
        87: invokevirtual #389                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
        90: checkcast     #29                 // class scala/util/matching/Regex$Match
        93: astore        5
        95: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        98: aload         5
       100: invokevirtual #393                // Method scala/util/matching/Regex$Match.groupCount:()I
       103: iconst_2
       104: if_icmpne     111
       107: iconst_1
       108: goto          112
       111: iconst_0
       112: invokevirtual #401                // Method scala/Predef$.assert:(Z)V
       115: aload_1
       116: aload         5
       118: iconst_1
       119: invokevirtual #404                // Method scala/util/matching/Regex$Match.start:(I)I
       122: aload         5
       124: iconst_1
       125: invokevirtual #407                // Method scala/util/matching/Regex$Match.end:(I)I
       128: invokevirtual #411                // Method java/lang/String.substring:(II)Ljava/lang/String;
       131: astore        6
       133: aload_1
       134: aload         5
       136: iconst_2
       137: invokevirtual #404                // Method scala/util/matching/Regex$Match.start:(I)I
       140: aload         5
       142: iconst_2
       143: invokevirtual #407                // Method scala/util/matching/Regex$Match.end:(I)I
       146: invokevirtual #411                // Method java/lang/String.substring:(II)Ljava/lang/String;
       149: astore        7
       151: new           #168                // class scala/Some
       154: dup
       155: new           #413                // class scala/Tuple2
       158: dup
       159: new           #415                // class coursier/core/Configuration
       162: dup
       163: aload         6
       165: invokespecial #418                // Method coursier/core/Configuration."<init>":(Ljava/lang/String;)V
       168: new           #415                // class coursier/core/Configuration
       171: dup
       172: aload         7
       174: invokespecial #418                // Method coursier/core/Configuration."<init>":(Ljava/lang/String;)V
       177: invokespecial #421                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       180: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       183: astore_2
       184: goto          200
       187: goto          193
       190: goto          193
       193: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
       196: astore_2
       197: goto          200
       200: aload_2
       201: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 111
          locals = [ class coursier/core/Parse$, class java/lang/String, top, class scala/collection/immutable/Seq, class scala/collection/SeqOps, class scala/util/matching/Regex$Match ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/core/Parse$, class java/lang/String, top, class scala/collection/immutable/Seq, class scala/collection/SeqOps, class scala/util/matching/Regex$Match ]
          stack = [ class scala/Predef$, int ]
        frame_type = 250 /* chop */
          offset_delta = 74
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/core/Parse$, class java/lang/String, class scala/Option, class scala/collection/immutable/Seq ]
          stack = []
      LineNumberTable:
        line 93: 0
        line 94: 14
        line 95: 95
        line 96: 115
        line 97: 133
        line 98: 151
        line 94: 187
        line 100: 193
        line 93: 200
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          133      50     6  main   Ljava/lang/String;
          151      32     7 fallback   Ljava/lang/String;
           95      92     5     m   Lscala/util/matching/Regex$Match;
            0     202     0  this   Lcoursier/core/Parse$;
            0     202     1 config   Ljava/lang/String;
    Signature: #347                         // (Ljava/lang/String;)Lscala/Option<Lscala/Tuple2<Lcoursier/core/Configuration;Lcoursier/core/Configuration;>;>;
    MethodParameters:
      Name                           Flags
      config                         final

  public static final boolean $anonfun$version$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: iload_0
         1: bipush        46
         3: if_icmpeq     44
         6: iload_0
         7: bipush        45
         9: if_icmpeq     44
        12: iload_0
        13: bipush        95
        15: if_icmpeq     44
        18: iload_0
        19: bipush        43
        21: if_icmpeq     44
        24: getstatic     #431                // Field coursier/core/compatibility/package$RichChar$.MODULE$:Lcoursier/core/compatibility/package$RichChar$;
        27: getstatic     #84                 // Field coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
        30: iload_0
        31: invokevirtual #435                // Method coursier/core/compatibility/package$.RichChar:(C)C
        34: invokevirtual #438                // Method coursier/core/compatibility/package$RichChar$.letterOrDigit$extension:(C)Z
        37: ifne          44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 44 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$ivyLatestSubRevisionInterval$1(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #448                // Method coursier/core/Version.items:()Lscala/collection/immutable/Vector;
         4: invokevirtual #453                // Method scala/collection/immutable/Vector.nonEmpty:()Z
         7: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  from   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      from                           final

  public static final scala.Tuple2 $anonfun$ivyLatestSubRevisionInterval$2(java.lang.String, coursier.core.Version);
    descriptor: (Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #69                 // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #456                // int 3
         7: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #139                // Method java/lang/String.isEmpty:()Z
        14: ifeq          23
        17: ldc_w         #458                // String .
        20: goto          24
        23: aload_0
        24: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: ldc_w         #460                // String max
        30: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        36: astore_2
        37: new           #413                // class scala/Tuple2
        40: dup
        41: aload_1
        42: aload_2
        43: invokespecial #421                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 87 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/String, class coursier/core/Version ]
          stack = [ class java/lang/StringBuilder, class java/lang/String ]
      LineNumberTable:
        line 24: 0
        line 22: 37
        line 24: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37       9     2   max   Ljava/lang/String;
            0      47     0 delim$1   Ljava/lang/String;
            0      47     1  from   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      delim$1                        final
      from                           final

  public static final boolean $anonfun$ivyLatestSubRevisionInterval$4(coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/Version;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #448                // Method coursier/core/Version.items:()Lscala/collection/immutable/Vector;
         4: invokevirtual #467                // Method scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
         7: aload_1
         8: invokevirtual #448                // Method coursier/core/Version.items:()Lscala/collection/immutable/Vector;
        11: iconst_1
        12: invokevirtual #471                // Method scala/collection/immutable/Vector.dropRight:(I)Lscala/collection/immutable/Vector;
        15: invokevirtual #467                // Method scala/collection/immutable/Vector.init:()Lscala/collection/immutable/Vector;
        18: astore_2
        19: dup
        20: ifnonnull     31
        23: pop
        24: aload_2
        25: ifnull        38
        28: goto          42
        31: aload_2
        32: invokevirtual #475                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        35: ifeq          42
        38: iconst_1
        39: goto          43
        42: iconst_0
        43: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class coursier/core/Version, class coursier/core/Version, class scala/collection/immutable/Vector ]
          stack = [ class scala/collection/immutable/Vector ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0 from$1   Lcoursier/core/Version;
            0      44     1    to   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      from$1                         final
      to                             final

  public static final coursier.core.VersionInterval $anonfun$ivyLatestSubRevisionInterval$5(coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: getstatic     #482                // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
         3: new           #168                // class scala/Some
         6: dup
         7: aload_0
         8: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: new           #168                // class scala/Some
        14: dup
        15: aload_1
        16: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        19: iconst_1
        20: iconst_1
        21: invokevirtual #485                // Method coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
        24: areturn
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 from$1   Lcoursier/core/Version;
            0      25     1    to   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      from$1                         final
      to                             final

  public static final scala.Option $anonfun$ivyLatestSubRevisionInterval$3(java.lang.String, scala.Tuple2);
    descriptor: (Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=6, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        76
         6: aload_3
         7: invokevirtual #490                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #444                // class coursier/core/Version
        13: astore        4
        15: aload_3
        16: invokevirtual #493                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #132                // class java/lang/String
        22: astore        5
        24: getstatic     #45                 // Field MODULE$:Lcoursier/core/Parse$;
        27: new           #69                 // class java/lang/StringBuilder
        30: dup
        31: ldc_w         #494                // int 0
        34: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
        37: aload_0
        38: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: aload         5
        43: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        46: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        49: invokevirtual #208                // Method version:(Ljava/lang/String;)Lscala/Option;
        52: aload         4
        54: invokedynamic #502,  0            // InvokeDynamic #10:apply:(Lcoursier/core/Version;)Lscala/Function1;
        59: invokevirtual #220                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        62: aload         4
        64: invokedynamic #508,  0            // InvokeDynamic #11:apply:(Lcoursier/core/Version;)Lscala/Function1;
        69: invokevirtual #234                // Method scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
        72: astore_2
        73: goto          88
        76: goto          79
        79: new           #510                // class scala/MatchError
        82: dup
        83: aload_3
        84: invokespecial #511                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        87: athrow
        88: aload_2
        89: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 76
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class java/lang/String, class scala/Tuple2, class scala/Option, class scala/Tuple2, class coursier/core/Version, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 22: 0
        line 24: 15
        line 25: 24
        line 27: 52
        line 25: 62
        line 22: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      61     4  from   Lcoursier/core/Version;
           24      52     5   max   Ljava/lang/String;
            0      90     0 prefix$1   Ljava/lang/String;
            0      90     1   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      prefix$1                       final
      x$1                            final

  public static final scala.Some $anonfun$versionInterval$1(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #168                // class scala/Some
         3: dup
         4: aload_0
         5: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$2   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final scala.Some $anonfun$versionInterval$3(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Lscala/Some;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #168                // class scala/Some
         3: dup
         4: aload_0
         5: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         8: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$3   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$versionInterval$5(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #520                // Method coursier/core/Version.isEmpty:()Z
         4: ireturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final boolean $anonfun$versionInterval$6(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #520                // Method coursier/core/Version.isEmpty:()Z
         4: ireturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final boolean $anonfun$versionInterval$7(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #520                // Method coursier/core/Version.isEmpty:()Z
         4: ifne          11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0   x$6   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final coursier.core.VersionInterval $anonfun$versionInterval$4(scala.Option, boolean, boolean, scala.Option);
    descriptor: (Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #482                // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
         3: aload_0
         4: invokedynamic #534,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
         9: invokevirtual #537                // Method scala/Option.filterNot:(Lscala/Function1;)Lscala/Option;
        12: aload_3
        13: invokedynamic #542,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
        18: invokevirtual #537                // Method scala/Option.filterNot:(Lscala/Function1;)Lscala/Option;
        21: aload_0
        22: invokedynamic #547,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
        27: invokevirtual #551                // Method scala/Option.forall:(Lscala/Function1;)Z
        30: ifeq          41
        33: iload_1
        34: ifeq          41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: iload_2
        43: invokevirtual #485                // Method coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class scala/Option, int, int, class scala/Option ]
          stack = [ class coursier/core/VersionInterval$, class scala/Option, class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/Option, int, int, class scala/Option ]
          stack = [ class coursier/core/VersionInterval$, class scala/Option, class scala/Option, int ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0 from$2   Lscala/Option;
            0      47     1 fromIncluded$1   Z
            0      47     2 toIncluded$1   Z
            0      47     3    to   Lscala/Option;
    MethodParameters:
      Name                           Flags
      from$2                         final
      fromIncluded$1                 final
      toIncluded$1                   final
      to                             final

  public static final scala.Option $anonfun$versionInterval$2(java.lang.String, boolean, boolean, scala.Option);
    descriptor: (Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokevirtual #139                // Method java/lang/String.isEmpty:()Z
         4: ifeq          20
         7: new           #168                // class scala/Some
        10: dup
        11: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        14: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        17: goto          35
        20: getstatic     #45                 // Field MODULE$:Lcoursier/core/Parse$;
        23: aload_0
        24: invokevirtual #208                // Method version:(Ljava/lang/String;)Lscala/Option;
        27: invokedynamic #561,  0            // InvokeDynamic #15:apply:()Lscala/Function1;
        32: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        35: aload_3
        36: iload_1
        37: iload_2
        38: invokedynamic #570,  0            // InvokeDynamic #16:apply:(Lscala/Option;ZZ)Lscala/Function1;
        43: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        46: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      47     0 strTo$1   Ljava/lang/String;
            0      47     1 fromIncluded$1   Z
            0      47     2 toIncluded$1   Z
            0      47     3  from   Lscala/Option;
    MethodParameters:
      Name                           Flags
      strTo$1                        final
      fromIncluded$1                 final
      toIncluded$1                   final
      from                           final

  public static final boolean $anonfun$versionInterval$8(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #520                // Method coursier/core/Version.isEmpty:()Z
         4: ifne          11
         7: iconst_1
         8: goto          12
        11: iconst_0
        12: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 11 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0     v   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      v                              final

  public static final coursier.core.VersionInterval $anonfun$versionInterval$9(boolean, boolean, coursier.core.Version);
    descriptor: (ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #482                // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
         3: new           #168                // class scala/Some
         6: dup
         7: aload_2
         8: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: new           #168                // class scala/Some
        14: dup
        15: aload_2
        16: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        19: iload_0
        20: iload_1
        21: invokevirtual #485                // Method coursier/core/VersionInterval$.apply:(Lscala/Option;Lscala/Option;ZZ)Lcoursier/core/VersionInterval;
        24: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0 fromIncluded$1   Z
            0      25     1 toIncluded$1   Z
            0      25     2     v   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      fromIncluded$1                 final
      toIncluded$1                   final
      v                              final

  private final scala.Option parseBounds$1(boolean, boolean, java.lang.String);
    descriptor: (ZZLjava/lang/String;)Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=7, args_size=4
         0: aload_3
         1: bipush        44
         3: invokevirtual #581                // Method java/lang/String.indexOf:(I)I
         6: istore        4
         8: iload         4
        10: iconst_0
        11: if_icmplt     100
        14: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        17: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_3
        21: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        24: iload         4
        26: invokevirtual #585                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        29: astore        5
        31: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        34: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        37: aload_3
        38: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        41: iload         4
        43: iconst_1
        44: iadd
        45: invokevirtual #588                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        48: astore        6
        50: aload         5
        52: invokevirtual #139                // Method java/lang/String.isEmpty:()Z
        55: ifeq          71
        58: new           #168                // class scala/Some
        61: dup
        62: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        65: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        68: goto          85
        71: aload_0
        72: aload         5
        74: invokevirtual #208                // Method version:(Ljava/lang/String;)Lscala/Option;
        77: invokedynamic #592,  0            // InvokeDynamic #17:apply:()Lscala/Function1;
        82: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        85: aload         6
        87: iload_1
        88: iload_2
        89: invokedynamic #600,  0            // InvokeDynamic #18:apply:(Ljava/lang/String;ZZ)Lscala/Function1;
        94: invokevirtual #245                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        97: goto          153
       100: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       103: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       106: aload_3
       107: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       110: invokevirtual #603                // Method scala/collection/StringOps$.nonEmpty$extension:(Ljava/lang/String;)Z
       113: ifeq          150
       116: iload_1
       117: ifeq          150
       120: iload_2
       121: ifeq          150
       124: aload_0
       125: aload_3
       126: invokevirtual #208                // Method version:(Ljava/lang/String;)Lscala/Option;
       129: invokedynamic #608,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
       134: invokevirtual #220                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
       137: iload_1
       138: iload_2
       139: invokedynamic #614,  0            // InvokeDynamic #20:apply:(ZZ)Lscala/Function1;
       144: invokevirtual #234                // Method scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
       147: goto          153
       150: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
       153: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 71
          locals = [ int, class java/lang/String, class java/lang/String ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 249 /* chop */
          offset_delta = 14
        frame_type = 49 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 37: 0
        line 39: 8
        line 40: 14
        line 41: 31
        line 44: 50
        line 47: 100
        line 48: 124
        line 51: 150
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      66     5 strFrom   Ljava/lang/String;
           50      47     6 strTo   Ljava/lang/String;
            8     145     4 commaIdx   I
            0     154     0  this   Lcoursier/core/Parse$;
            0     154     1 fromIncluded   Z
            0     154     2 toIncluded   Z
            0     154     3     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      fromIncluded                   final
      toIncluded                     final
      s                              final

  public static final scala.Tuple2 $anonfun$versionInterval$11(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=2
         0: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         3: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: getstatic     #50                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         9: getstatic     #55                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_0
        13: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        16: iconst_1
        17: invokevirtual #588                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        20: invokevirtual #61                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        23: iconst_1
        24: invokevirtual #623                // Method scala/collection/StringOps$.dropRight$extension:(Ljava/lang/String;I)Ljava/lang/String;
        27: astore_2
        28: new           #413                // class scala/Tuple2
        31: dup
        32: iload_1
        33: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        36: aload_2
        37: invokespecial #421                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        40: areturn
      LineNumberTable:
        line 57: 0
        line 56: 28
        line 57: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           28      12     2    s0   Ljava/lang/String;
            0      41     0   s$1   Ljava/lang/String;
            0      41     1 toIncluded   Z
    MethodParameters:
      Name                           Flags
      s$1                            final
      toIncluded                     final

  public static final coursier.core.VersionInterval $anonfun$versionInterval$13(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   itv   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      itv                            final

  public static final scala.Option $anonfun$versionInterval$12(coursier.core.Parse$, boolean, scala.Tuple2);
    descriptor: (Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        46
         8: aload         4
        10: invokevirtual #636                // Method scala/Tuple2._1$mcZ$sp:()Z
        13: istore        5
        15: aload         4
        17: invokevirtual #493                // Method scala/Tuple2._2:()Ljava/lang/Object;
        20: checkcast     #132                // class java/lang/String
        23: astore        6
        25: aload_0
        26: iload_1
        27: iload         5
        29: aload         6
        31: invokespecial #638                // Method parseBounds$1:(ZZLjava/lang/String;)Lscala/Option;
        34: invokedynamic #643,  0            // InvokeDynamic #21:apply:()Lscala/Function1;
        39: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        42: astore_3
        43: goto          59
        46: goto          49
        49: new           #510                // class scala/MatchError
        52: dup
        53: aload         4
        55: invokespecial #511                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        58: athrow
        59: aload_3
        60: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 46
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Parse$, int, class scala/Tuple2, class scala/Option, class scala/Tuple2, int, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 56: 0
        line 57: 15
        line 58: 25
        line 56: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      31     5 toIncluded   Z
           25      21     6    s0   Ljava/lang/String;
            0      61     0 $this   Lcoursier/core/Parse$;
            0      61     1 fromIncluded$2   Z
            0      61     2   x$7   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fromIncluded$2                 final
      x$7                            final

  public static final scala.Option $anonfun$versionInterval$10(coursier.core.Parse$, java.lang.String, boolean);
    descriptor: (Lcoursier/core/Parse$;Ljava/lang/String;Z)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: ldc_w         #647                // String ]
         4: invokevirtual #650                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
         7: ifeq          24
        10: new           #168                // class scala/Some
        13: dup
        14: iconst_1
        15: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        18: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: goto          50
        24: aload_1
        25: ldc           #120                // String )
        27: invokevirtual #650                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        30: ifeq          47
        33: new           #168                // class scala/Some
        36: dup
        37: iconst_0
        38: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        41: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        44: goto          50
        47: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        50: aload_1
        51: invokedynamic #658,  0            // InvokeDynamic #22:apply:(Ljava/lang/String;)Lscala/Function1;
        56: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        59: aload_0
        60: iload_2
        61: invokedynamic #664,  0            // InvokeDynamic #23:apply:(Lcoursier/core/Parse$;Z)Lscala/Function1;
        66: invokevirtual #245                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        69: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 24 /* same */
        frame_type = 22 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      70     0 $this   Lcoursier/core/Parse$;
            0      70     1   s$1   Ljava/lang/String;
            0      70     2 fromIncluded   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      s$1                            final
      fromIncluded                   final

  public static final boolean $anonfun$multiVersionInterval$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        91
         3: if_icmpeq     12
         6: iload_0
         7: bipush        40
         9: if_icmpne     16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public static final boolean $anonfun$multiVersionInterval$2(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        93
         3: if_icmpeq     12
         6: iload_0
         7: bipush        41
         9: if_icmpne     16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 12 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  private static final scala.Option noConstraint$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #139                // Method java/lang/String.isEmpty:()Z
         4: ifeq          23
         7: new           #168                // class scala/Some
        10: dup
        11: getstatic     #672                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
        14: invokevirtual #675                // Method coursier/core/VersionConstraint$.all:()Lcoursier/core/VersionConstraint;
        17: invokespecial #179                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        20: goto          26
        23: getstatic     #166                // Field scala/None$.MODULE$:Lscala/None$;
        26: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 23 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0   s$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$2                            final

  public static final coursier.core.VersionConstraint $anonfun$versionConstraint$2(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #672                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: aload_0
         4: invokevirtual #680                // Method coursier/core/VersionConstraint$.interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
         7: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 interval   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      interval                       final

  public static final scala.Option $anonfun$versionConstraint$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #45                 // Field MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #682                // Method ivyLatestSubRevisionInterval:(Ljava/lang/String;)Lscala/Option;
         7: invokedynamic #687,  0            // InvokeDynamic #24:apply:()Lscala/Function1;
        12: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        15: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0   s$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$2                            final

  public static final scala.Option $anonfun$versionConstraint$4(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #45                 // Field MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #690                // Method multiVersionInterval:(Ljava/lang/String;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   s$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$2                            final

  public static final coursier.core.VersionConstraint $anonfun$versionConstraint$5(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #672                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: aload_0
         4: invokevirtual #680                // Method coursier/core/VersionConstraint$.interval:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
         7: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 interval   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      interval                       final

  public static final scala.Option $anonfun$versionConstraint$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #45                 // Field MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #305                // Method versionInterval:(Ljava/lang/String;)Lscala/Option;
         7: aload_0
         8: invokedynamic #695,  0            // InvokeDynamic #25:apply:(Ljava/lang/String;)Lscala/Function0;
        13: invokevirtual #327                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        16: invokedynamic #699,  0            // InvokeDynamic #26:apply:()Lscala/Function1;
        21: invokevirtual #562                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        24: areturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0   s$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$2                            final

  public static final coursier.core.VersionConstraint $anonfun$versionConstraint$6(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/VersionConstraint;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #672                // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: getstatic     #173                // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         6: aload_0
         7: invokevirtual #176                // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
        10: invokevirtual #703                // Method coursier/core/VersionConstraint$.preferred:(Lcoursier/core/Version;)Lcoursier/core/VersionConstraint;
        13: areturn
      LineNumberTable:
        line 83: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   s$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s$2                            final

  private coursier.core.Parse$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #704                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 103: 0
        line 7: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Parse$;

  public static final java.lang.Object $anonfun$version$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #708                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #710                // Method $anonfun$version$1:(C)Z
         7: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$ivyLatestSubRevisionInterval$1$adapted(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #713                // Method $anonfun$ivyLatestSubRevisionInterval$1:(Lcoursier/core/Version;)Z
         4: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  from   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      from                           final

  public static final scala.Option $anonfun$versionInterval$10$adapted(coursier.core.Parse$, java.lang.String, java.lang.Object);
    descriptor: (Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #716                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         6: invokestatic  #718                // Method $anonfun$versionInterval$10:(Lcoursier/core/Parse$;Ljava/lang/String;Z)Lscala/Option;
         9: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/Parse$;
            0      10     1   s$1   Ljava/lang/String;
            0      10     2 fromIncluded   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      s$1                            final
      fromIncluded                   final

  public static final java.lang.Object $anonfun$multiVersionInterval$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #708                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #720                // Method $anonfun$multiVersionInterval$1:(C)Z
         7: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$multiVersionInterval$2$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #708                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #722                // Method $anonfun$multiVersionInterval$2:(C)Z
         7: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$ivyLatestSubRevisionInterval$4$adapted(coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #724                // Method $anonfun$ivyLatestSubRevisionInterval$4:(Lcoursier/core/Version;Lcoursier/core/Version;)Z
         5: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 from$1   Lcoursier/core/Version;
            0       9     1    to   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      from$1                         final
      to                             final

  public static final java.lang.Object $anonfun$versionInterval$5$adapted(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #726                // Method $anonfun$versionInterval$5:(Lcoursier/core/Version;)Z
         4: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.lang.Object $anonfun$versionInterval$6$adapted(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #728                // Method $anonfun$versionInterval$6:(Lcoursier/core/Version;)Z
         4: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.Object $anonfun$versionInterval$7$adapted(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #730                // Method $anonfun$versionInterval$7:(Lcoursier/core/Version;)Z
         4: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$6   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      x$6                            final

  public static final java.lang.Object $anonfun$versionInterval$8$adapted(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #732                // Method $anonfun$versionInterval$8:(Lcoursier/core/Version;)Z
         4: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     v   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      v                              final

  public static final scala.Tuple2 $anonfun$versionInterval$11$adapted(java.lang.String, java.lang.Object);
    descriptor: (Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #716                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         5: invokestatic  #734                // Method $anonfun$versionInterval$11:(Ljava/lang/String;Z)Lscala/Tuple2;
         8: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   s$1   Ljava/lang/String;
            0       9     1 toIncluded   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$1                            final
      toIncluded                     final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #746,  0            // InvokeDynamic #27:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static #10= #7 of #9;            // =class coursier/core/compatibility/package$RichChar$ of class coursier/core/compatibility/package
  public static final #15= #12 of #14;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #20= #17 of #19;                 // WithFilter=class scala/Option$WithFilter of class scala/Option
  public static final #25= #22 of #24;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #10= #27 of #24;          // =class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
  public static #32= #29 of #31;          // Match=class scala/util/matching/Regex$Match of class scala/util/matching/Regex
SourceFile: "Parse.scala"
BootstrapMethods:
  0: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #145 REF_invokeStatic coursier/core/Parse$.$anonfun$version$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #146 1
  1: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #213 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$1$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
      #215 5
      #146 1
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
  2: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #225 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$2:(Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
      #227 (Lcoursier/core/Version;)Lscala/Tuple2;
      #215 5
      #146 1
      #227 (Lcoursier/core/Version;)Lscala/Tuple2;
  3: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #239 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$3:(Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
      #241 (Lscala/Tuple2;)Lscala/Option;
      #215 5
      #146 1
      #241 (Lscala/Tuple2;)Lscala/Option;
  4: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #263 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$10$adapted:(Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
      #265 (Ljava/lang/Object;)Lscala/Option;
      #215 5
      #146 1
      #265 (Ljava/lang/Object;)Lscala/Option;
  5: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #273 REF_invokeStatic coursier/core/Parse$.$anonfun$multiVersionInterval$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #146 1
  6: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #282 REF_invokeStatic coursier/core/Parse$.$anonfun$multiVersionInterval$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #146 1
  7: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #314 ()Ljava/lang/Object;
      #318 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$1:(Ljava/lang/String;)Lscala/Option;
      #320 ()Lscala/Option;
      #215 5
      #146 1
      #320 ()Lscala/Option;
  8: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #314 ()Ljava/lang/Object;
      #331 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$3:(Ljava/lang/String;)Lscala/Option;
      #320 ()Lscala/Option;
      #215 5
      #146 1
      #320 ()Lscala/Option;
  9: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #314 ()Ljava/lang/Object;
      #336 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$6:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
      #338 ()Lcoursier/core/VersionConstraint;
      #215 5
      #146 1
      #338 ()Lcoursier/core/VersionConstraint;
  10: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #499 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$4$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
      #215 5
      #146 1
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
  11: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #505 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$5:(Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
      #507 (Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
      #215 5
      #146 1
      #507 (Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  12: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #533 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$5$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
      #215 5
      #146 1
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
  13: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #541 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$6$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
      #215 5
      #146 1
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
  14: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #546 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$7$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
      #215 5
      #146 1
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
  15: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #559 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$3:(Lcoursier/core/Version;)Lscala/Some;
      #560 (Lcoursier/core/Version;)Lscala/Some;
      #215 5
      #146 1
      #560 (Lcoursier/core/Version;)Lscala/Some;
  16: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #565 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$4:(Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
      #567 (Lscala/Option;)Lcoursier/core/VersionInterval;
      #215 5
      #146 1
      #567 (Lscala/Option;)Lcoursier/core/VersionInterval;
  17: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #591 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$1:(Lcoursier/core/Version;)Lscala/Some;
      #560 (Lcoursier/core/Version;)Lscala/Some;
      #215 5
      #146 1
      #560 (Lcoursier/core/Version;)Lscala/Some;
  18: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #595 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$2:(Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
      #597 (Lscala/Option;)Lscala/Option;
      #215 5
      #146 1
      #597 (Lscala/Option;)Lscala/Option;
  19: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #607 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$8$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
      #215 5
      #146 1
      #214 (Lcoursier/core/Version;)Ljava/lang/Object;
  20: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #611 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$9:(ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
      #507 (Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
      #215 5
      #146 1
      #507 (Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
  21: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #641 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$13:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
      #642 (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
      #215 5
      #146 1
      #642 (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
  22: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #655 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$11$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
      #657 (Ljava/lang/Object;)Lscala/Tuple2;
      #215 5
      #146 1
      #657 (Ljava/lang/Object;)Lscala/Tuple2;
  23: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #661 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$12:(Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
      #241 (Lscala/Tuple2;)Lscala/Option;
      #215 5
      #146 1
      #241 (Lscala/Tuple2;)Lscala/Option;
  24: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #685 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$2:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
      #686 (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
      #215 5
      #146 1
      #686 (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  25: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #314 ()Ljava/lang/Object;
      #694 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$4:(Ljava/lang/String;)Lscala/Option;
      #320 ()Lscala/Option;
      #215 5
      #146 1
      #320 ()Lscala/Option;
  26: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #141 (Ljava/lang/Object;)Ljava/lang/Object;
      #698 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$5:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
      #686 (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
      #215 5
      #146 1
      #686 (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  27: #743 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #213 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$1$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #225 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$2:(Ljava/lang/String;Lcoursier/core/Version;)Lscala/Tuple2;
      #239 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$3:(Ljava/lang/String;Lscala/Tuple2;)Lscala/Option;
      #499 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$4$adapted:(Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #505 REF_invokeStatic coursier/core/Parse$.$anonfun$ivyLatestSubRevisionInterval$5:(Lcoursier/core/Version;Lcoursier/core/Version;)Lcoursier/core/VersionInterval;
      #273 REF_invokeStatic coursier/core/Parse$.$anonfun$multiVersionInterval$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #282 REF_invokeStatic coursier/core/Parse$.$anonfun$multiVersionInterval$2$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #145 REF_invokeStatic coursier/core/Parse$.$anonfun$version$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #318 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$1:(Ljava/lang/String;)Lscala/Option;
      #685 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$2:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
      #331 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$3:(Ljava/lang/String;)Lscala/Option;
      #694 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$4:(Ljava/lang/String;)Lscala/Option;
      #698 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$5:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
      #336 REF_invokeStatic coursier/core/Parse$.$anonfun$versionConstraint$6:(Ljava/lang/String;)Lcoursier/core/VersionConstraint;
      #591 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$1:(Lcoursier/core/Version;)Lscala/Some;
      #263 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$10$adapted:(Lcoursier/core/Parse$;Ljava/lang/String;Ljava/lang/Object;)Lscala/Option;
      #655 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$11$adapted:(Ljava/lang/String;Ljava/lang/Object;)Lscala/Tuple2;
      #661 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$12:(Lcoursier/core/Parse$;ZLscala/Tuple2;)Lscala/Option;
      #641 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$13:(Lcoursier/core/VersionInterval;)Lcoursier/core/VersionInterval;
      #595 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$2:(Ljava/lang/String;ZZLscala/Option;)Lscala/Option;
      #559 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$3:(Lcoursier/core/Version;)Lscala/Some;
      #565 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$4:(Lscala/Option;ZZLscala/Option;)Lcoursier/core/VersionInterval;
      #533 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$5$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #541 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$6$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #546 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$7$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #607 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$8$adapted:(Lcoursier/core/Version;)Ljava/lang/Object;
      #611 REF_invokeStatic coursier/core/Parse$.$anonfun$versionInterval$9:(ZZLcoursier/core/Version;)Lcoursier/core/VersionInterval;
  ScalaInlineInfo: length = 0xFE (unknown attribute)
   01 01 00 32 01 B9 01 BA 01 00 D2 00 D3 01 00 DE
   00 DF 01 00 EC 00 ED 01 01 CE 01 CF 01 01 F0 01
   F1 01 01 DD 01 DE 01 02 9A 01 AC 01 01 0F 00 8D
   01 02 9B 01 AC 01 01 18 00 8D 01 01 AB 01 AC 01
   00 8F 00 8D 01 01 3C 00 81 01 02 A5 02 A6 01 01
   49 00 81 01 02 B1 00 81 01 02 B4 02 A6 01 01 4E
   01 37 01 02 02 02 03 01 02 85 02 86 01 01 04 01
   05 01 02 6B 02 6C 01 02 8C 02 8D 01 02 76 02 77
   01 02 72 02 73 01 02 2B 02 2C 01 02 05 02 03 01
   02 0E 02 0F 01 02 07 01 BA 01 02 13 00 D3 01 02
   0A 01 BA 01 02 1B 00 D3 01 02 0C 01 BA 01 02 20
   00 D3 01 02 3C 01 BA 01 02 5D 00 D3 01 02 3E 02
   3F 01 00 2A 00 29 01 00 27 00 B7 01 00 B8 00 81
   01 00 24 00 B7 01 01 0E 00 81 01 00 26 00 B7 01
   01 38 00 81 01 02 40 02 41 01 00 80 00 81 01 01
   36 01 37 01 00 F9 00 81 01 01 5B 00 81 01
  Scala: length = 0x0 (unknown attribute)

