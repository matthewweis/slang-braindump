Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/write$over$.class
  Last modified May 29, 2022; size 3281 bytes
  SHA-256 checksum c7d5852fa1b9dc648d64c8f6c4f2b344d96366172d25b5ed2c785ccf48565a60
  Compiled from "ReadWriteOps.scala"
public class os.write$over$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/write$over$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 10, attributes: 4
Constant pool:
    #1 = Utf8               os/write$over$
    #2 = Class              #1            // os/write$over$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ReadWriteOps.scala
    #6 = Utf8               os/PathChunk$RelPathChunk
    #7 = Class              #6            // os/PathChunk$RelPathChunk
    #8 = Utf8               os/PathChunk
    #9 = Class              #8            // os/PathChunk
   #10 = Utf8               RelPathChunk
   #11 = Utf8               os/makeDir$all$
   #12 = Class              #11           // os/makeDir$all$
   #13 = Utf8               os/makeDir
   #14 = Class              #13           // os/makeDir
   #15 = Utf8               all$
   #16 = Utf8               os/write
   #17 = Class              #16           // os/write
   #18 = Utf8               over$
   #19 = Utf8               MODULE$
   #20 = Utf8               Los/write$over$;
   #21 = Utf8               <clinit>
   #22 = Utf8               ()V
   #23 = Utf8               <init>
   #24 = NameAndType        #23:#22       // "<init>":()V
   #25 = Methodref          #2.#24        // os/write$over$."<init>":()V
   #26 = NameAndType        #19:#20       // MODULE$:Los/write$over$;
   #27 = Fieldref           #2.#26        // os/write$over$.MODULE$:Los/write$over$;
   #28 = Utf8               apply
   #29 = Utf8               (Los/Path;Los/Source;Los/PermSet;JZZ)V
   #30 = Utf8               target
   #31 = Utf8               data
   #32 = Utf8               perms
   #33 = Utf8               offset
   #34 = Utf8               createFolders
   #35 = Utf8               truncate
   #36 = Utf8               Los/makeDir$all$;
   #37 = NameAndType        #19:#36       // MODULE$:Los/makeDir$all$;
   #38 = Fieldref           #12.#37       // os/makeDir$all$.MODULE$:Los/makeDir$all$;
   #39 = Utf8               os/PathChunk$
   #40 = Class              #39           // os/PathChunk$
   #41 = Utf8               Los/PathChunk$;
   #42 = NameAndType        #19:#41       // MODULE$:Los/PathChunk$;
   #43 = Fieldref           #40.#42       // os/PathChunk$.MODULE$:Los/PathChunk$;
   #44 = Utf8               os/RelPath$
   #45 = Class              #44           // os/RelPath$
   #46 = Utf8               Los/RelPath$;
   #47 = NameAndType        #19:#46       // MODULE$:Los/RelPath$;
   #48 = Fieldref           #45.#47       // os/RelPath$.MODULE$:Los/RelPath$;
   #49 = Utf8               up
   #50 = Utf8               ()Los/RelPath;
   #51 = NameAndType        #49:#50       // up:()Los/RelPath;
   #52 = Methodref          #45.#51       // os/RelPath$.up:()Los/RelPath;
   #53 = Utf8               (Los/RelPath;)Los/PathChunk$RelPathChunk;
   #54 = NameAndType        #10:#53       // RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
   #55 = Methodref          #40.#54       // os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
   #56 = Utf8               os/Path
   #57 = Class              #56           // os/Path
   #58 = Utf8               $div
   #59 = Utf8               (Los/PathChunk;)Los/Path;
   #60 = NameAndType        #58:#59       // $div:(Los/PathChunk;)Los/Path;
   #61 = Methodref          #57.#60       // os/Path.$div:(Los/PathChunk;)Los/Path;
   #62 = Utf8               apply$default$3
   #63 = Utf8               ()Z
   #64 = NameAndType        #62:#63       // apply$default$3:()Z
   #65 = Methodref          #12.#64       // os/makeDir$all$.apply$default$3:()Z
   #66 = Utf8               (Los/Path;Los/PermSet;Z)V
   #67 = NameAndType        #28:#66       // apply:(Los/Path;Los/PermSet;Z)V
   #68 = Methodref          #12.#67       // os/makeDir$all$.apply:(Los/Path;Los/PermSet;Z)V
   #69 = Utf8               os/write$
   #70 = Class              #69           // os/write$
   #71 = Utf8               Los/write$;
   #72 = NameAndType        #19:#71       // MODULE$:Los/write$;
   #73 = Fieldref           #70.#72       // os/write$.MODULE$:Los/write$;
   #74 = Utf8               scala/package$
   #75 = Class              #74           // scala/package$
   #76 = Utf8               Lscala/package$;
   #77 = NameAndType        #19:#76       // MODULE$:Lscala/package$;
   #78 = Fieldref           #75.#77       // scala/package$.MODULE$:Lscala/package$;
   #79 = Utf8               Seq
   #80 = Utf8               ()Lscala/collection/immutable/Seq$;
   #81 = NameAndType        #79:#80       // Seq:()Lscala/collection/immutable/Seq$;
   #82 = Methodref          #75.#81       // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
   #83 = Utf8               scala/runtime/ScalaRunTime$
   #84 = Class              #83           // scala/runtime/ScalaRunTime$
   #85 = Utf8               Lscala/runtime/ScalaRunTime$;
   #86 = NameAndType        #19:#85       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #87 = Fieldref           #84.#86       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #88 = Utf8               java/nio/file/StandardOpenOption
   #89 = Class              #88           // java/nio/file/StandardOpenOption
   #90 = Utf8               CREATE
   #91 = Utf8               Ljava/nio/file/StandardOpenOption;
   #92 = NameAndType        #90:#91       // CREATE:Ljava/nio/file/StandardOpenOption;
   #93 = Fieldref           #89.#92       // java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
   #94 = Utf8               WRITE
   #95 = NameAndType        #94:#91       // WRITE:Ljava/nio/file/StandardOpenOption;
   #96 = Fieldref           #89.#95       // java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
   #97 = Utf8               [Ljava/lang/Object;
   #98 = Class              #97           // "[Ljava/lang/Object;"
   #99 = Utf8               wrapRefArray
  #100 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #101 = NameAndType        #99:#100      // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #102 = Methodref          #84.#101      // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #103 = Utf8               scala/collection/immutable/Seq$
  #104 = Class              #103          // scala/collection/immutable/Seq$
  #105 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #106 = NameAndType        #28:#105      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #107 = Methodref          #104.#106     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #108 = Utf8               TRUNCATE_EXISTING
  #109 = NameAndType        #108:#91      // TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
  #110 = Fieldref           #89.#109      // java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
  #111 = Utf8               Nil
  #112 = Utf8               ()Lscala/collection/immutable/Nil$;
  #113 = NameAndType        #111:#112     // Nil:()Lscala/collection/immutable/Nil$;
  #114 = Methodref          #75.#113      // scala/package$.Nil:()Lscala/collection/immutable/Nil$;
  #115 = Utf8               scala/collection/SeqOps
  #116 = Class              #115          // scala/collection/SeqOps
  #117 = Utf8               $plus$plus
  #118 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #119 = NameAndType        #117:#118     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #120 = InterfaceMethodref #116.#119     // scala/collection/SeqOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #121 = Utf8               scala/collection/immutable/Seq
  #122 = Class              #121          // scala/collection/immutable/Seq
  #123 = Utf8               write
  #124 = Utf8               (Los/Path;Los/Source;Lscala/collection/immutable/Seq;Los/PermSet;J)Ljava/lang/Object;
  #125 = NameAndType        #123:#124     // write:(Los/Path;Los/Source;Lscala/collection/immutable/Seq;Los/PermSet;J)Ljava/lang/Object;
  #126 = Methodref          #70.#125      // os/write$.write:(Los/Path;Los/Source;Lscala/collection/immutable/Seq;Los/PermSet;J)Ljava/lang/Object;
  #127 = Utf8               this
  #128 = Utf8               Los/Path;
  #129 = Utf8               Los/Source;
  #130 = Utf8               Los/PermSet;
  #131 = Utf8               J
  #132 = Utf8               Z
  #133 = Utf8               os/Source
  #134 = Class              #133          // os/Source
  #135 = Utf8               os/PermSet
  #136 = Class              #135          // os/PermSet
  #137 = Utf8               ()Los/PermSet;
  #138 = Utf8               apply$default$4
  #139 = Utf8               ()J
  #140 = Utf8               apply$default$5
  #141 = Utf8               apply$default$6
  #142 = Utf8               outputStream
  #143 = Utf8               (Los/Path;Los/PermSet;Z)Ljava/io/OutputStream;
  #144 = Utf8               (Los/Path;Los/PermSet;ZLscala/collection/immutable/Seq;)Ljava/io/OutputStream;
  #145 = NameAndType        #142:#144     // outputStream:(Los/Path;Los/PermSet;ZLscala/collection/immutable/Seq;)Ljava/io/OutputStream;
  #146 = Methodref          #70.#145      // os/write$.outputStream:(Los/Path;Los/PermSet;ZLscala/collection/immutable/Seq;)Ljava/io/OutputStream;
  #147 = Utf8               outputStream$default$2
  #148 = Utf8               outputStream$default$3
  #149 = Methodref          #4.#24        // java/lang/Object."<init>":()V
  #150 = Utf8               Code
  #151 = Utf8               LineNumberTable
  #152 = Utf8               StackMapTable
  #153 = Utf8               LocalVariableTable
  #154 = Utf8               MethodParameters
  #155 = Utf8               InnerClasses
  #156 = Utf8               SourceFile
  #157 = Utf8               ScalaInlineInfo
  #158 = Utf8               Scala
{
  public static final os.write$over$ MODULE$;
    descriptor: Los/write$over$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/write$over$
         3: dup
         4: invokespecial #25                 // Method "<init>":()V
         7: putstatic     #27                 // Field MODULE$:Los/write$over$;
        10: return
      LineNumberTable:
        line 115: 0

  public void apply(os.Path, os.Source, os.PermSet, long, boolean, boolean);
    descriptor: (Los/Path;Los/Source;Los/PermSet;JZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=8, args_size=7
         0: iload         6
         2: ifeq          37
         5: getstatic     #38                 // Field os/makeDir$all$.MODULE$:Los/makeDir$all$;
         8: aload_1
         9: getstatic     #43                 // Field os/PathChunk$.MODULE$:Los/PathChunk$;
        12: getstatic     #48                 // Field os/RelPath$.MODULE$:Los/RelPath$;
        15: invokevirtual #52                 // Method os/RelPath$.up:()Los/RelPath;
        18: invokevirtual #55                 // Method os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
        21: invokevirtual #61                 // Method os/Path.$div:(Los/PathChunk;)Los/Path;
        24: aload_3
        25: getstatic     #38                 // Field os/makeDir$all$.MODULE$:Los/makeDir$all$;
        28: invokevirtual #65                 // Method os/makeDir$all$.apply$default$3:()Z
        31: invokevirtual #68                 // Method os/makeDir$all$.apply:(Los/Path;Los/PermSet;Z)V
        34: goto          37
        37: getstatic     #73                 // Field os/write$.MODULE$:Los/write$;
        40: aload_1
        41: aload_2
        42: getstatic     #78                 // Field scala/package$.MODULE$:Lscala/package$;
        45: invokevirtual #82                 // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        48: getstatic     #87                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        51: iconst_2
        52: anewarray     #89                 // class java/nio/file/StandardOpenOption
        55: dup
        56: iconst_0
        57: getstatic     #93                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
        60: aastore
        61: dup
        62: iconst_1
        63: getstatic     #96                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
        66: aastore
        67: checkcast     #98                 // class "[Ljava/lang/Object;"
        70: invokevirtual #102                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        73: invokevirtual #107                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        76: iload         7
        78: ifeq          112
        81: getstatic     #78                 // Field scala/package$.MODULE$:Lscala/package$;
        84: invokevirtual #82                 // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        87: getstatic     #87                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        90: iconst_1
        91: anewarray     #89                 // class java/nio/file/StandardOpenOption
        94: dup
        95: iconst_0
        96: getstatic     #110                // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
        99: aastore
       100: checkcast     #98                 // class "[Ljava/lang/Object;"
       103: invokevirtual #102                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       106: invokevirtual #107                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       109: goto          118
       112: getstatic     #78                 // Field scala/package$.MODULE$:Lscala/package$;
       115: invokevirtual #114                // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
       118: invokeinterface #120,  2          // InterfaceMethod scala/collection/SeqOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       123: checkcast     #122                // class scala/collection/immutable/Seq
       126: aload_3
       127: lload         4
       129: invokevirtual #126                // Method os/write$.write:(Los/Path;Los/Source;Lscala/collection/immutable/Seq;Los/PermSet;J)Ljava/lang/Object;
       132: pop
       133: return
      StackMapTable: number_of_entries = 3
        frame_type = 37 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class os/write$over$, class os/Path, class os/Source, class os/PermSet, long, int, int ]
          stack = [ class os/write$, class os/Path, class os/Source, class scala/collection/SeqOps ]
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class os/write$over$, class os/Path, class os/Source, class os/PermSet, long, int, int ]
          stack = [ class os/write$, class os/Path, class os/Source, class scala/collection/SeqOps, class scala/collection/SeqOps ]
      LineNumberTable:
        line 122: 0
        line 123: 37
        line 124: 40
        line 125: 42
        line 126: 57
        line 127: 63
        line 128: 76
        line 129: 126
        line 130: 127
        line 123: 133
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     134     0  this   Los/write$over$;
            0     134     1 target   Los/Path;
            0     134     2  data   Los/Source;
            0     134     3 perms   Los/PermSet;
            0     134     4 offset   J
            0     134     6 createFolders   Z
            0     134     7 truncate   Z
    MethodParameters:
      Name                           Flags
      target                         final
      data                           final
      perms                          final
      offset                         final
      createFolders                  final
      truncate                       final

  public os.PermSet apply$default$3();
    descriptor: ()Los/PermSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 118: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/write$over$;

  public long apply$default$4();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: lconst_0
         1: lreturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/write$over$;

  public boolean apply$default$5();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 120: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/write$over$;

  public boolean apply$default$6();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/write$over$;

  public java.io.OutputStream outputStream(os.Path, os.PermSet, boolean);
    descriptor: (Los/Path;Los/PermSet;Z)Ljava/io/OutputStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=4, args_size=4
         0: getstatic     #73                 // Field os/write$.MODULE$:Los/write$;
         3: aload_1
         4: aload_2
         5: iload_3
         6: getstatic     #78                 // Field scala/package$.MODULE$:Lscala/package$;
         9: invokevirtual #82                 // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        12: getstatic     #87                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        15: iconst_3
        16: anewarray     #89                 // class java/nio/file/StandardOpenOption
        19: dup
        20: iconst_0
        21: getstatic     #93                 // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
        24: aastore
        25: dup
        26: iconst_1
        27: getstatic     #96                 // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
        30: aastore
        31: dup
        32: iconst_2
        33: getstatic     #110                // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;
        36: aastore
        37: checkcast     #98                 // class "[Ljava/lang/Object;"
        40: invokevirtual #102                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        43: invokevirtual #107                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        46: checkcast     #122                // class scala/collection/immutable/Seq
        49: invokevirtual #146                // Method os/write$.outputStream:(Los/Path;Los/PermSet;ZLscala/collection/immutable/Seq;)Ljava/io/OutputStream;
        52: areturn
      LineNumberTable:
        line 140: 0
        line 141: 3
        line 142: 4
        line 143: 5
        line 144: 6
        line 145: 21
        line 146: 27
        line 147: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Los/write$over$;
            0      53     1 target   Los/Path;
            0      53     2 perms   Los/PermSet;
            0      53     3 createFolders   Z
    MethodParameters:
      Name                           Flags
      target                         final
      perms                          final
      createFolders                  final

  public os.PermSet outputStream$default$2();
    descriptor: ()Los/PermSet;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/write$over$;

  public boolean outputStream$default$3();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/write$over$;

  public os.write$over$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #149                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 156: 0
        line 115: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/write$over$;
}
InnerClasses:
  public static #10= #7 of #9;            // RelPathChunk=class os/PathChunk$RelPathChunk of class os/PathChunk
  public static #15= #12 of #14;          // all$=class os/makeDir$all$ of class os/makeDir
  public static #18= #2 of #17;           // over$=class os/write$over$ of class os/write
SourceFile: "ReadWriteOps.scala"
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 17 00 16 01 00 1C 00 1D 01 00 3E
   00 89 01 00 8A 00 8B 01 00 8C 00 3F 01 00 8D 00
   3F 01 00 8E 00 8F 01 00 93 00 89 01 00 94 00 3F
   01
  Scala: length = 0x0 (unknown attribute)

