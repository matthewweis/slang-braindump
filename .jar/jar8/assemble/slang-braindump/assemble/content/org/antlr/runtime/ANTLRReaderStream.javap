Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/antlr/runtime/ANTLRReaderStream.class
  Last modified May 29, 2022; size 1480 bytes
  SHA-256 checksum 7c06167baadaafd9192faf29c49055829b36896dd04806b3d6918fa5783c6abe
  Compiled from "ANTLRReaderStream.java"
public class org.antlr.runtime.ANTLRReaderStream extends org.antlr.runtime.ANTLRStringStream
  minor version: 0
  major version: 49
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #9                          // org/antlr/runtime/ANTLRReaderStream
  super_class: #10                        // org/antlr/runtime/ANTLRStringStream
  interfaces: 0, fields: 2, methods: 5, attributes: 1
Constant pool:
   #1 = Methodref          #10.#39        // org/antlr/runtime/ANTLRStringStream."<init>":()V
   #2 = Methodref          #9.#40         // org/antlr/runtime/ANTLRReaderStream."<init>":(Ljava/io/Reader;II)V
   #3 = Methodref          #9.#41         // org/antlr/runtime/ANTLRReaderStream.load:(Ljava/io/Reader;II)V
   #4 = Fieldref           #9.#42         // org/antlr/runtime/ANTLRReaderStream.data:[C
   #5 = Methodref          #43.#44        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   #6 = Methodref          #45.#46        // java/io/Reader.read:([CII)I
   #7 = Fieldref           #10.#47        // org/antlr/runtime/ANTLRStringStream.n:I
   #8 = Methodref          #45.#48        // java/io/Reader.close:()V
   #9 = Class              #49            // org/antlr/runtime/ANTLRReaderStream
  #10 = Class              #50            // org/antlr/runtime/ANTLRStringStream
  #11 = Utf8               READ_BUFFER_SIZE
  #12 = Utf8               I
  #13 = Utf8               ConstantValue
  #14 = Integer            1024
  #15 = Utf8               INITIAL_BUFFER_SIZE
  #16 = Utf8               <init>
  #17 = Utf8               ()V
  #18 = Utf8               Code
  #19 = Utf8               LineNumberTable
  #20 = Utf8               LocalVariableTable
  #21 = Utf8               this
  #22 = Utf8               Lorg/antlr/runtime/ANTLRReaderStream;
  #23 = Utf8               (Ljava/io/Reader;)V
  #24 = Utf8               r
  #25 = Utf8               Ljava/io/Reader;
  #26 = Utf8               Exceptions
  #27 = Class              #51            // java/io/IOException
  #28 = Utf8               (Ljava/io/Reader;I)V
  #29 = Utf8               size
  #30 = Utf8               (Ljava/io/Reader;II)V
  #31 = Utf8               readChunkSize
  #32 = Utf8               load
  #33 = Utf8               newdata
  #34 = Utf8               [C
  #35 = Utf8               numRead
  #36 = Utf8               p
  #37 = Utf8               SourceFile
  #38 = Utf8               ANTLRReaderStream.java
  #39 = NameAndType        #16:#17        // "<init>":()V
  #40 = NameAndType        #16:#30        // "<init>":(Ljava/io/Reader;II)V
  #41 = NameAndType        #32:#30        // load:(Ljava/io/Reader;II)V
  #42 = NameAndType        #52:#34        // data:[C
  #43 = Class              #53            // java/lang/System
  #44 = NameAndType        #54:#55        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #45 = Class              #56            // java/io/Reader
  #46 = NameAndType        #57:#58        // read:([CII)I
  #47 = NameAndType        #59:#12        // n:I
  #48 = NameAndType        #60:#17        // close:()V
  #49 = Utf8               org/antlr/runtime/ANTLRReaderStream
  #50 = Utf8               org/antlr/runtime/ANTLRStringStream
  #51 = Utf8               java/io/IOException
  #52 = Utf8               data
  #53 = Utf8               java/lang/System
  #54 = Utf8               arraycopy
  #55 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #56 = Utf8               java/io/Reader
  #57 = Utf8               read
  #58 = Utf8               ([CII)I
  #59 = Utf8               n
  #60 = Utf8               close
{
  public static final int READ_BUFFER_SIZE;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024

  public static final int INITIAL_BUFFER_SIZE;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024

  public org.antlr.runtime.ANTLRReaderStream();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method org/antlr/runtime/ANTLRStringStream."<init>":()V
         4: return
      LineNumberTable:
        line 41: 0
        line 42: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/antlr/runtime/ANTLRReaderStream;

  public org.antlr.runtime.ANTLRReaderStream(java.io.Reader) throws java.io.IOException;
    descriptor: (Ljava/io/Reader;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: sipush        1024
         5: sipush        1024
         8: invokespecial #2                  // Method "<init>":(Ljava/io/Reader;II)V
        11: return
      LineNumberTable:
        line 45: 0
        line 46: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/antlr/runtime/ANTLRReaderStream;
            0      12     1     r   Ljava/io/Reader;
    Exceptions:
      throws java.io.IOException

  public org.antlr.runtime.ANTLRReaderStream(java.io.Reader, int) throws java.io.IOException;
    descriptor: (Ljava/io/Reader;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: sipush        1024
         6: invokespecial #2                  // Method "<init>":(Ljava/io/Reader;II)V
         9: return
      LineNumberTable:
        line 49: 0
        line 50: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/antlr/runtime/ANTLRReaderStream;
            0      10     1     r   Ljava/io/Reader;
            0      10     2  size   I
    Exceptions:
      throws java.io.IOException

  public org.antlr.runtime.ANTLRReaderStream(java.io.Reader, int, int) throws java.io.IOException;
    descriptor: (Ljava/io/Reader;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: invokespecial #1                  // Method org/antlr/runtime/ANTLRStringStream."<init>":()V
         4: aload_0
         5: aload_1
         6: iload_2
         7: iload_3
         8: invokevirtual #3                  // Method load:(Ljava/io/Reader;II)V
        11: return
      LineNumberTable:
        line 52: 0
        line 53: 4
        line 54: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/antlr/runtime/ANTLRReaderStream;
            0      12     1     r   Ljava/io/Reader;
            0      12     2  size   I
            0      12     3 readChunkSize   I
    Exceptions:
      throws java.io.IOException

  public void load(java.io.Reader, int, int) throws java.io.IOException;
    descriptor: (Ljava/io/Reader;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=4
         0: aload_1
         1: ifnonnull     5
         4: return
         5: iload_2
         6: ifgt          13
         9: sipush        1024
        12: istore_2
        13: iload_3
        14: ifgt          21
        17: sipush        1024
        20: istore_3
        21: aload_0
        22: iload_2
        23: newarray       char
        25: putfield      #4                  // Field data:[C
        28: iconst_0
        29: istore        5
        31: iload         5
        33: iload_3
        34: iadd
        35: aload_0
        36: getfield      #4                  // Field data:[C
        39: arraylength
        40: if_icmple     76
        43: aload_0
        44: getfield      #4                  // Field data:[C
        47: arraylength
        48: iconst_2
        49: imul
        50: newarray       char
        52: astore        6
        54: aload_0
        55: getfield      #4                  // Field data:[C
        58: iconst_0
        59: aload         6
        61: iconst_0
        62: aload_0
        63: getfield      #4                  // Field data:[C
        66: arraylength
        67: invokestatic  #5                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        70: aload_0
        71: aload         6
        73: putfield      #4                  // Field data:[C
        76: aload_1
        77: aload_0
        78: getfield      #4                  // Field data:[C
        81: iload         5
        83: iload_3
        84: invokevirtual #6                  // Method java/io/Reader.read:([CII)I
        87: istore        4
        89: iload         5
        91: iload         4
        93: iadd
        94: istore        5
        96: iload         4
        98: iconst_m1
        99: if_icmpne     31
       102: aload_0
       103: iload         5
       105: iconst_1
       106: iadd
       107: putfield      #7                  // Field org/antlr/runtime/ANTLRStringStream.n:I
       110: aload_1
       111: invokevirtual #8                  // Method java/io/Reader.close:()V
       114: goto          126
       117: astore        7
       119: aload_1
       120: invokevirtual #8                  // Method java/io/Reader.close:()V
       123: aload         7
       125: athrow
       126: return
      Exception table:
         from    to  target type
            21   110   117   any
           117   119   117   any
      LineNumberTable:
        line 59: 0
        line 60: 4
        line 62: 5
        line 63: 9
        line 65: 13
        line 66: 17
        line 71: 21
        line 74: 28
        line 76: 31
        line 78: 43
        line 79: 54
        line 80: 70
        line 82: 76
        line 84: 89
        line 85: 96
        line 88: 102
        line 92: 110
        line 93: 114
        line 92: 117
        line 94: 126
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           54      22     6 newdata   [C
           89      21     4 numRead   I
           31      79     5     p   I
            0     127     0  this   Lorg/antlr/runtime/ANTLRReaderStream;
            0     127     1     r   Ljava/io/Reader;
            0     127     2  size   I
            0     127     3 readChunkSize   I
    Exceptions:
      throws java.io.IOException
}
SourceFile: "ANTLRReaderStream.java"
