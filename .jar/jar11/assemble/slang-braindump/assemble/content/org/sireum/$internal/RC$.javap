Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/$internal/RC$.class
  Last modified May 29, 2022; size 5965 bytes
  SHA-256 checksum 4dce2e2a56493ea69bfbe7b9a5690cc103697f7a6163174611ff4ceda25a746a
  Compiled from "RC.scala"
public final class org.sireum.$internal.RC$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/$internal/RC$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/$internal/RC$
    #2 = Class              #1            // org/sireum/$internal/RC$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               RC.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/$internal/Trie$InNode
   #12 = Class              #11           // org/sireum/$internal/Trie$InNode
   #13 = Utf8               org/sireum/$internal/Trie
   #14 = Class              #13           // org/sireum/$internal/Trie
   #15 = Utf8               InNode
   #16 = Utf8               org/sireum/$internal/Trie$Leaf
   #17 = Class              #16           // org/sireum/$internal/Trie$Leaf
   #18 = Utf8               Leaf
   #19 = Utf8               org/sireum/$internal/Trie$Node
   #20 = Class              #19           // org/sireum/$internal/Trie$Node
   #21 = Utf8               Node
   #22 = Utf8               scala/collection/MapOps$WithFilter
   #23 = Class              #22           // scala/collection/MapOps$WithFilter
   #24 = Utf8               scala/collection/MapOps
   #25 = Class              #24           // scala/collection/MapOps
   #26 = Utf8               WithFilter
   #27 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #28 = Class              #27           // scala/collection/SeqFactory$UnapplySeqWrapper
   #29 = Utf8               scala/collection/SeqFactory
   #30 = Class              #29           // scala/collection/SeqFactory
   #31 = Utf8               UnapplySeqWrapper
   #32 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #33 = Class              #32           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #34 = Utf8               UnapplySeqWrapper$
   #35 = Utf8               MODULE$
   #36 = Utf8               Lorg/sireum/$internal/RC$;
   #37 = Utf8               <clinit>
   #38 = Utf8               ()V
   #39 = Utf8               <init>
   #40 = NameAndType        #39:#38       // "<init>":()V
   #41 = Methodref          #2.#40        // org/sireum/$internal/RC$."<init>":()V
   #42 = NameAndType        #35:#36       // MODULE$:Lorg/sireum/$internal/RC$;
   #43 = Fieldref           #2.#42        // org/sireum/$internal/RC$.MODULE$:Lorg/sireum/$internal/RC$;
   #44 = Utf8               toTrie
   #45 = Utf8               (Lscala/collection/Map;)Lorg/sireum/$internal/Trie$Node;
   #46 = Utf8               (Lscala/collection/Map<Lscala/collection/immutable/Vector<Ljava/lang/String;>;Ljava/lang/String;>;)Lorg/sireum/$internal/Trie$Node<Ljava/lang/String;Ljava/lang/String;>;
   #47 = Utf8               m
   #48 = Utf8               scala/collection/mutable/Map$
   #49 = Class              #48           // scala/collection/mutable/Map$
   #50 = Utf8               Lscala/collection/mutable/Map$;
   #51 = NameAndType        #35:#50       // MODULE$:Lscala/collection/mutable/Map$;
   #52 = Fieldref           #49.#51       // scala/collection/mutable/Map$.MODULE$:Lscala/collection/mutable/Map$;
   #53 = Utf8               scala/collection/immutable/Nil$
   #54 = Class              #53           // scala/collection/immutable/Nil$
   #55 = Utf8               Lscala/collection/immutable/Nil$;
   #56 = NameAndType        #35:#55       // MODULE$:Lscala/collection/immutable/Nil$;
   #57 = Fieldref           #54.#56       // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #58 = Utf8               apply
   #59 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #60 = NameAndType        #58:#59       // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #61 = Methodref          #49.#60       // scala/collection/mutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
   #62 = Utf8               scala/collection/mutable/Map
   #63 = Class              #62           // scala/collection/mutable/Map
   #64 = Utf8               (Lscala/collection/mutable/Map;)V
   #65 = NameAndType        #39:#64       // "<init>":(Lscala/collection/mutable/Map;)V
   #66 = Methodref          #12.#65       // org/sireum/$internal/Trie$InNode."<init>":(Lscala/collection/mutable/Map;)V
   #67 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #68 = MethodType         #67           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #69 = Utf8               $anonfun$toTrie$1$adapted
   #70 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #71 = NameAndType        #69:#70       // $anonfun$toTrie$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
   #72 = Methodref          #2.#71        // org/sireum/$internal/RC$.$anonfun$toTrie$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
   #73 = MethodHandle       6:#72         // REF_invokeStatic org/sireum/$internal/RC$.$anonfun$toTrie$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
   #74 = MethodType         #70           //  (Lscala/Tuple2;)Ljava/lang/Object;
   #75 = Integer            5
   #76 = Integer            1
   #77 = Utf8               java/lang/invoke/LambdaMetafactory
   #78 = Class              #77           // java/lang/invoke/LambdaMetafactory
   #79 = Utf8               altMetafactory
   #80 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #81 = NameAndType        #79:#80       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #82 = Methodref          #78.#81       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #83 = MethodHandle       6:#82         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #84 = Utf8               ()Lscala/Function1;
   #85 = NameAndType        #58:#84       // apply:()Lscala/Function1;
   #86 = InvokeDynamic      #0:#85        // #0:apply:()Lscala/Function1;
   #87 = Utf8               scala/collection/Map
   #88 = Class              #87           // scala/collection/Map
   #89 = Utf8               withFilter
   #90 = Utf8               (Lscala/Function1;)Lscala/collection/MapOps$WithFilter;
   #91 = NameAndType        #89:#90       // withFilter:(Lscala/Function1;)Lscala/collection/MapOps$WithFilter;
   #92 = InterfaceMethodref #88.#91       // scala/collection/Map.withFilter:(Lscala/Function1;)Lscala/collection/MapOps$WithFilter;
   #93 = Utf8               $anonfun$toTrie$2$adapted
   #94 = Utf8               (Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
   #95 = NameAndType        #93:#94       // $anonfun$toTrie$2$adapted:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
   #96 = Methodref          #2.#95        // org/sireum/$internal/RC$.$anonfun$toTrie$2$adapted:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
   #97 = MethodHandle       6:#96         // REF_invokeStatic org/sireum/$internal/RC$.$anonfun$toTrie$2$adapted:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
   #98 = Utf8               (Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;)Lscala/Function1;
   #99 = NameAndType        #58:#98       // apply:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;)Lscala/Function1;
  #100 = InvokeDynamic      #1:#99        // #1:apply:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;)Lscala/Function1;
  #101 = Utf8               foreach
  #102 = Utf8               (Lscala/Function1;)V
  #103 = NameAndType        #101:#102     // foreach:(Lscala/Function1;)V
  #104 = Methodref          #23.#103      // scala/collection/MapOps$WithFilter.foreach:(Lscala/Function1;)V
  #105 = Utf8               root
  #106 = Utf8               Lorg/sireum/$internal/Trie$InNode;
  #107 = Utf8               this
  #108 = Utf8               Lscala/collection/Map;
  #109 = Utf8               add$1
  #110 = Utf8               (Lscala/collection/immutable/Vector;Ljava/lang/String;Lorg/sireum/$internal/Trie$InNode;)V
  #111 = Utf8               path
  #112 = Utf8               content
  #113 = Utf8               node
  #114 = Utf8               scala/package$
  #115 = Class              #114          // scala/package$
  #116 = Utf8               Lscala/package$;
  #117 = NameAndType        #35:#116      // MODULE$:Lscala/package$;
  #118 = Fieldref           #115.#117     // scala/package$.MODULE$:Lscala/package$;
  #119 = Utf8               Seq
  #120 = Utf8               ()Lscala/collection/immutable/Seq$;
  #121 = NameAndType        #119:#120     // Seq:()Lscala/collection/immutable/Seq$;
  #122 = Methodref          #115.#121     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #123 = Utf8               scala/collection/immutable/Seq$
  #124 = Class              #123          // scala/collection/immutable/Seq$
  #125 = Utf8               unapplySeq
  #126 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #127 = NameAndType        #125:#126     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #128 = Methodref          #124.#127     // scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #129 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #130 = NameAndType        #35:#129      // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #131 = Fieldref           #33.#130      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #132 = Utf8               isEmpty$extension
  #133 = Utf8               (Lscala/collection/SeqOps;)Z
  #134 = NameAndType        #132:#133     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #135 = Methodref          #33.#134      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #136 = Utf8               get$extension
  #137 = NameAndType        #136:#126     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #138 = Methodref          #33.#137      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #139 = Utf8               (Lscala/collection/SeqOps;)V
  #140 = NameAndType        #39:#139      // "<init>":(Lscala/collection/SeqOps;)V
  #141 = Methodref          #28.#140      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #142 = Utf8               lengthCompare$extension
  #143 = Utf8               (Lscala/collection/SeqOps;I)I
  #144 = NameAndType        #142:#143     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #145 = Methodref          #33.#144      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #146 = Utf8               apply$extension
  #147 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #149 = Methodref          #33.#148      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #150 = Utf8               java/lang/String
  #151 = Class              #150          // java/lang/String
  #152 = Utf8               children
  #153 = Utf8               ()Lscala/collection/mutable/Map;
  #154 = NameAndType        #152:#153     // children:()Lscala/collection/mutable/Map;
  #155 = Methodref          #12.#154      // org/sireum/$internal/Trie$InNode.children:()Lscala/collection/mutable/Map;
  #156 = Utf8               scala/Tuple2
  #157 = Class              #156          // scala/Tuple2
  #158 = Utf8               (Ljava/lang/Object;)V
  #159 = NameAndType        #39:#158      // "<init>":(Ljava/lang/Object;)V
  #160 = Methodref          #17.#159      // org/sireum/$internal/Trie$Leaf."<init>":(Ljava/lang/Object;)V
  #161 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #162 = NameAndType        #39:#161      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #163 = Methodref          #157.#162     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #164 = Utf8               $plus$eq
  #165 = Utf8               (Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #166 = NameAndType        #164:#165     // $plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #167 = InterfaceMethodref #63.#166      // scala/collection/mutable/Map.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
  #168 = Utf8               scala/runtime/BoxedUnit
  #169 = Class              #168          // scala/runtime/BoxedUnit
  #170 = Utf8               UNIT
  #171 = Utf8               Lscala/runtime/BoxedUnit;
  #172 = NameAndType        #170:#171     // UNIT:Lscala/runtime/BoxedUnit;
  #173 = Fieldref           #169.#172     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #174 = Utf8               scala/collection/immutable/Vector
  #175 = Class              #174          // scala/collection/immutable/Vector
  #176 = Utf8               head
  #177 = Utf8               ()Ljava/lang/Object;
  #178 = NameAndType        #176:#177     // head:()Ljava/lang/Object;
  #179 = Methodref          #175.#178     // scala/collection/immutable/Vector.head:()Ljava/lang/Object;
  #180 = Utf8               get
  #181 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #182 = NameAndType        #180:#181     // get:(Ljava/lang/Object;)Lscala/Option;
  #183 = InterfaceMethodref #63.#182      // scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
  #184 = Utf8               scala/Some
  #185 = Class              #184          // scala/Some
  #186 = Utf8               value
  #187 = NameAndType        #186:#177     // value:()Ljava/lang/Object;
  #188 = Methodref          #185.#187     // scala/Some.value:()Ljava/lang/Object;
  #189 = Utf8               tail
  #190 = Utf8               ()Lscala/collection/immutable/Vector;
  #191 = NameAndType        #189:#190     // tail:()Lscala/collection/immutable/Vector;
  #192 = Methodref          #175.#191     // scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
  #193 = Utf8               s
  #194 = Utf8               Ljava/lang/String;
  #195 = Utf8               n
  #196 = Utf8               Lorg/sireum/$internal/Trie$Node;
  #197 = Utf8               Lscala/collection/immutable/Vector;
  #198 = Utf8               scala/collection/SeqOps
  #199 = Class              #198          // scala/collection/SeqOps
  #200 = Utf8               scala/Option
  #201 = Class              #200          // scala/Option
  #202 = Utf8               $anonfun$toTrie$1
  #203 = Utf8               (Lscala/Tuple2;)Z
  #204 = Utf8               check$ifrefutable$1
  #205 = Utf8               Lscala/Tuple2;
  #206 = Utf8               $anonfun$toTrie$2
  #207 = Utf8               (Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)V
  #208 = Utf8               $this
  #209 = Utf8               root$1
  #210 = Utf8               x$1
  #211 = Utf8               _1
  #212 = NameAndType        #211:#177     // _1:()Ljava/lang/Object;
  #213 = Methodref          #157.#212     // scala/Tuple2._1:()Ljava/lang/Object;
  #214 = Utf8               _2
  #215 = NameAndType        #214:#177     // _2:()Ljava/lang/Object;
  #216 = Methodref          #157.#215     // scala/Tuple2._2:()Ljava/lang/Object;
  #217 = NameAndType        #109:#110     // add$1:(Lscala/collection/immutable/Vector;Ljava/lang/String;Lorg/sireum/$internal/Trie$InNode;)V
  #218 = Methodref          #2.#217       // org/sireum/$internal/RC$.add$1:(Lscala/collection/immutable/Vector;Ljava/lang/String;Lorg/sireum/$internal/Trie$InNode;)V
  #219 = Utf8               scala/MatchError
  #220 = Class              #219          // scala/MatchError
  #221 = Methodref          #220.#159     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #222 = Methodref          #4.#40        // java/lang/Object."<init>":()V
  #223 = NameAndType        #202:#203     // $anonfun$toTrie$1:(Lscala/Tuple2;)Z
  #224 = Methodref          #2.#223       // org/sireum/$internal/RC$.$anonfun$toTrie$1:(Lscala/Tuple2;)Z
  #225 = Utf8               scala/runtime/BoxesRunTime
  #226 = Class              #225          // scala/runtime/BoxesRunTime
  #227 = Utf8               boxToBoolean
  #228 = Utf8               (Z)Ljava/lang/Boolean;
  #229 = NameAndType        #227:#228     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #230 = Methodref          #226.#229     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #231 = NameAndType        #206:#207     // $anonfun$toTrie$2:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)V
  #232 = Methodref          #2.#231       // org/sireum/$internal/RC$.$anonfun$toTrie$2:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)V
  #233 = Utf8               $deserializeLambda$
  #234 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #235 = Utf8               scala/runtime/LambdaDeserialize
  #236 = Class              #235          // scala/runtime/LambdaDeserialize
  #237 = Utf8               bootstrap
  #238 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #239 = NameAndType        #237:#238     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #240 = Methodref          #236.#239     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #241 = MethodHandle       6:#240        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #242 = Utf8               lambdaDeserialize
  #243 = NameAndType        #242:#234     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #244 = InvokeDynamic      #2:#243       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #245 = Utf8               Code
  #246 = Utf8               LineNumberTable
  #247 = Utf8               LocalVariableTable
  #248 = Utf8               Signature
  #249 = Utf8               MethodParameters
  #250 = Utf8               StackMapTable
  #251 = Utf8               InnerClasses
  #252 = Utf8               SourceFile
  #253 = Utf8               BootstrapMethods
  #254 = Utf8               ScalaInlineInfo
  #255 = Utf8               base64
  #256 = Utf8               (Lscala/collection/immutable/Vector;Lscala/Function2;)Lscala/collection/immutable/Map;
  #257 = Utf8               text
  #258 = Utf8               Scala
{
  public static final org.sireum.$internal.RC$ MODULE$;
    descriptor: Lorg/sireum/$internal/RC$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/$internal/RC$
         3: dup
         4: invokespecial #41                 // Method "<init>":()V
         7: putstatic     #43                 // Field MODULE$:Lorg/sireum/$internal/RC$;
        10: return
      LineNumberTable:
        line 35: 0

  public org.sireum.$internal.Trie$Node<java.lang.String, java.lang.String> toTrie(scala.collection.Map<scala.collection.immutable.Vector<java.lang.String>, java.lang.String>);
    descriptor: (Lscala/collection/Map;)Lorg/sireum/$internal/Trie$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: new           #12                 // class org/sireum/$internal/Trie$InNode
         3: dup
         4: getstatic     #52                 // Field scala/collection/mutable/Map$.MODULE$:Lscala/collection/mutable/Map$;
         7: getstatic     #57                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        10: invokevirtual #61                 // Method scala/collection/mutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        13: checkcast     #63                 // class scala/collection/mutable/Map
        16: invokespecial #66                 // Method org/sireum/$internal/Trie$InNode."<init>":(Lscala/collection/mutable/Map;)V
        19: astore_2
        20: aload_1
        21: invokedynamic #86,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        26: invokeinterface #92,  2           // InterfaceMethod scala/collection/Map.withFilter:(Lscala/Function1;)Lscala/collection/MapOps$WithFilter;
        31: aload_0
        32: aload_2
        33: invokedynamic #100,  0            // InvokeDynamic #1:apply:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;)Lscala/Function1;
        38: invokevirtual #104                // Method scala/collection/MapOps$WithFilter.foreach:(Lscala/Function1;)V
        41: aload_2
        42: areturn
      LineNumberTable:
        line 38: 0
        line 52: 20
        line 54: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      22     2  root   Lorg/sireum/$internal/Trie$InNode;
            0      43     0  this   Lorg/sireum/$internal/RC$;
            0      43     1     m   Lscala/collection/Map;
    Signature: #46                          // (Lscala/collection/Map<Lscala/collection/immutable/Vector<Ljava/lang/String;>;Ljava/lang/String;>;)Lorg/sireum/$internal/Trie$Node<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      m                              final

  private final void add$1(scala.collection.immutable.Vector, java.lang.String, org.sireum.$internal.Trie$InNode);
    descriptor: (Lscala/collection/immutable/Vector;Ljava/lang/String;Lorg/sireum/$internal/Trie$InNode;)V
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=7, locals=15, args_size=4
         0: aload_1
         1: astore        7
         3: aload         7
         5: ifnull        127
         8: getstatic     #118                // Field scala/package$.MODULE$:Lscala/package$;
        11: invokevirtual #122                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        14: aload         7
        16: invokevirtual #128                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        19: astore        8
        21: getstatic     #131                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        24: aload         8
        26: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        29: ifne          124
        32: new           #28                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        35: dup
        36: getstatic     #131                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        39: aload         8
        41: invokevirtual #138                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        44: invokespecial #141                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        47: ifnull        124
        50: getstatic     #131                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        53: getstatic     #131                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        56: aload         8
        58: invokevirtual #138                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        61: iconst_1
        62: invokevirtual #145                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        65: iconst_0
        66: if_icmpne     124
        69: getstatic     #131                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        72: getstatic     #131                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        75: aload         8
        77: invokevirtual #138                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        80: iconst_0
        81: invokevirtual #149                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
        84: checkcast     #151                // class java/lang/String
        87: astore        9
        89: aload_3
        90: invokevirtual #155                // Method org/sireum/$internal/Trie$InNode.children:()Lscala/collection/mutable/Map;
        93: new           #157                // class scala/Tuple2
        96: dup
        97: aload         9
        99: new           #17                 // class org/sireum/$internal/Trie$Leaf
       102: dup
       103: aload_2
       104: invokespecial #160                // Method org/sireum/$internal/Trie$Leaf."<init>":(Ljava/lang/Object;)V
       107: invokespecial #163                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       110: invokeinterface #167,  2          // InterfaceMethod scala/collection/mutable/Map.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       115: pop
       116: getstatic     #173                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       119: astore        5
       121: goto          261
       124: goto          130
       127: goto          130
       130: aload_3
       131: invokevirtual #155                // Method org/sireum/$internal/Trie$InNode.children:()Lscala/collection/mutable/Map;
       134: aload_1
       135: invokevirtual #179                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       138: invokeinterface #183,  2          // InterfaceMethod scala/collection/mutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
       143: astore        10
       145: aload         10
       147: instanceof    #185                // class scala/Some
       150: ifeq          201
       153: aload         10
       155: checkcast     #185                // class scala/Some
       158: astore        11
       160: aload         11
       162: invokevirtual #188                // Method scala/Some.value:()Ljava/lang/Object;
       165: checkcast     #20                 // class org/sireum/$internal/Trie$Node
       168: astore        12
       170: aload         12
       172: instanceof    #12                 // class org/sireum/$internal/Trie$InNode
       175: ifeq          198
       178: aload         12
       180: checkcast     #12                 // class org/sireum/$internal/Trie$InNode
       183: astore        13
       185: aload_1
       186: invokevirtual #192                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
       189: aload_2
       190: aload         13
       192: astore_3
       193: astore_2
       194: astore_1
       195: goto          0
       198: goto          204
       201: goto          204
       204: new           #12                 // class org/sireum/$internal/Trie$InNode
       207: dup
       208: getstatic     #52                 // Field scala/collection/mutable/Map$.MODULE$:Lscala/collection/mutable/Map$;
       211: getstatic     #57                 // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       214: invokevirtual #61                 // Method scala/collection/mutable/Map$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
       217: checkcast     #63                 // class scala/collection/mutable/Map
       220: invokespecial #66                 // Method org/sireum/$internal/Trie$InNode."<init>":(Lscala/collection/mutable/Map;)V
       223: astore        14
       225: aload_3
       226: invokevirtual #155                // Method org/sireum/$internal/Trie$InNode.children:()Lscala/collection/mutable/Map;
       229: new           #157                // class scala/Tuple2
       232: dup
       233: aload_1
       234: invokevirtual #179                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       237: aload         14
       239: invokespecial #163                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       242: invokeinterface #167,  2          // InterfaceMethod scala/collection/mutable/Map.$plus$eq:(Ljava/lang/Object;)Lscala/collection/mutable/Growable;
       247: pop
       248: aload_1
       249: invokevirtual #192                // Method scala/collection/immutable/Vector.tail:()Lscala/collection/immutable/Vector;
       252: aload_2
       253: aload         14
       255: astore_3
       256: astore_2
       257: astore_1
       258: goto          0
       261: getstatic     #173                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       264: pop
       265: return
      StackMapTable: number_of_entries = 8
        frame_type = 0 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 123
          locals = [ class org/sireum/$internal/RC$, class scala/collection/immutable/Vector, class java/lang/String, class org/sireum/$internal/Trie$InNode, top, top, top, class scala/collection/immutable/Vector, class scala/collection/SeqOps ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = [ class org/sireum/$internal/RC$, class scala/collection/immutable/Vector, class java/lang/String, class org/sireum/$internal/Trie$InNode, top, top, top, class scala/collection/immutable/Vector, top, top, class scala/Option, class scala/Some, class org/sireum/$internal/Trie$Node ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class org/sireum/$internal/RC$, class scala/collection/immutable/Vector, class java/lang/String, class org/sireum/$internal/Trie$InNode, top, class scala/runtime/BoxedUnit, top, class scala/collection/immutable/Vector, class scala/collection/SeqOps, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 40: 0
        line 41: 3
        line 43: 130
        line 44: 145
        line 46: 204
        line 47: 225
        line 48: 248
        line 40: 261
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           89      35     9     s   Ljava/lang/String;
          170      31    12     n   Lorg/sireum/$internal/Trie$Node;
          225      36    14     n   Lorg/sireum/$internal/Trie$InNode;
            0     266     0  this   Lorg/sireum/$internal/RC$;
            0     266     1  path   Lscala/collection/immutable/Vector;
            0     266     2 content   Ljava/lang/String;
            0     266     3  node   Lorg/sireum/$internal/Trie$InNode;
    MethodParameters:
      Name                           Flags
      path                           final
      content                        final
      node                           final

  public static final boolean $anonfun$toTrie$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        11
         6: iconst_1
         7: istore_1
         8: goto          19
        11: goto          14
        14: iconst_0
        15: istore_1
        16: goto          19
        19: iload_1
        20: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/Tuple2, int, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final void $anonfun$toTrie$2(org.sireum.$internal.RC$, org.sireum.$internal.Trie$InNode, scala.Tuple2);
    descriptor: (Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        44
         8: aload         4
        10: invokevirtual #213                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #175                // class scala/collection/immutable/Vector
        16: astore        5
        18: aload         4
        20: invokevirtual #216                // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #151                // class java/lang/String
        26: astore        6
        28: aload_0
        29: aload         5
        31: aload         6
        33: aload_1
        34: invokespecial #218                // Method add$1:(Lscala/collection/immutable/Vector;Ljava/lang/String;Lorg/sireum/$internal/Trie$InNode;)V
        37: getstatic     #173                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        40: astore_3
        41: goto          57
        44: goto          47
        47: new           #220                // class scala/MatchError
        50: dup
        51: aload         4
        53: invokespecial #221                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        56: athrow
        57: return
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 44
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/$internal/RC$, class org/sireum/$internal/Trie$InNode, class scala/Tuple2, class scala/runtime/BoxedUnit, class scala/Tuple2, class scala/collection/immutable/Vector, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      26     5  path   Lscala/collection/immutable/Vector;
           28      16     6 content   Ljava/lang/String;
            0      58     0 $this   Lorg/sireum/$internal/RC$;
            0      58     1 root$1   Lorg/sireum/$internal/Trie$InNode;
            0      58     2   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      root$1                         final
      x$1                            final

  private org.sireum.$internal.RC$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #222                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/$internal/RC$;

  public static final java.lang.Object $anonfun$toTrie$1$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #224                // Method $anonfun$toTrie$1:(Lscala/Tuple2;)Z
         4: invokestatic  #230                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$1            final

  public static final java.lang.Object $anonfun$toTrie$2$adapted(org.sireum.$internal.RC$, org.sireum.$internal.Trie$InNode, scala.Tuple2);
    descriptor: (Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #232                // Method $anonfun$toTrie$2:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)V
         6: getstatic     #173                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/$internal/RC$;
            0      10     1 root$1   Lorg/sireum/$internal/Trie$InNode;
            0      10     2   x$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final
      root$1                         final
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #244,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #15= #12 of #14;    // InNode=class org/sireum/$internal/Trie$InNode of class org/sireum/$internal/Trie
  public static final #18= #17 of #14;    // Leaf=class org/sireum/$internal/Trie$Leaf of class org/sireum/$internal/Trie
  public static #21= #20 of #14;          // Node=class org/sireum/$internal/Trie$Node of class org/sireum/$internal/Trie
  public static #26= #23 of #25;          // WithFilter=class scala/collection/MapOps$WithFilter of class scala/collection/MapOps
  public static final #31= #28 of #30;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #34= #33 of #30;          // UnapplySeqWrapper$=class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
SourceFile: "RC.scala"
BootstrapMethods:
  0: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #68 (Ljava/lang/Object;)Ljava/lang/Object;
      #73 REF_invokeStatic org/sireum/$internal/RC$.$anonfun$toTrie$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #74 (Lscala/Tuple2;)Ljava/lang/Object;
      #75 5
      #76 1
      #74 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #83 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #68 (Ljava/lang/Object;)Ljava/lang/Object;
      #97 REF_invokeStatic org/sireum/$internal/RC$.$anonfun$toTrie$2$adapted:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
      #74 (Lscala/Tuple2;)Ljava/lang/Object;
      #75 5
      #76 1
      #74 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #241 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #73 REF_invokeStatic org/sireum/$internal/RC$.$anonfun$toTrie$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #97 REF_invokeStatic org/sireum/$internal/RC$.$anonfun$toTrie$2$adapted:(Lorg/sireum/$internal/RC$;Lorg/sireum/$internal/Trie$InNode;Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 CA 00 CB 01 00 45 00 46 01 00 CE
   00 CF 01 00 5D 00 5E 01 00 27 00 26 01 00 6D 00
   6E 01 00 FF 01 00 01 01 01 01 00 01 00 2C 00 2D
   01
  Scala: length = 0x0 (unknown attribute)

