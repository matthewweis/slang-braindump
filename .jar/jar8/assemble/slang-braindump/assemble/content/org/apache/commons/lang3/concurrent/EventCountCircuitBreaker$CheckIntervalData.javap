Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.class
  Last modified May 29, 2022; size 1113 bytes
  SHA-256 checksum 3c9834a7e06d1d8492509097ab7283c43440ced56ecba43a29e4ab330b45c00c
  Compiled from "EventCountCircuitBreaker.java"
class org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData
  minor version: 0
  major version: 52
  flags: (0x0020) ACC_SUPER
  this_class: #4                          // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData
  super_class: #8                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 4, attributes: 2
Constant pool:
   #1 = Methodref          #8.#34         // java/lang/Object."<init>":()V
   #2 = Fieldref           #4.#35         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.eventCount:I
   #3 = Fieldref           #4.#36         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.checkIntervalStart:J
   #4 = Class              #38            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData
   #5 = Methodref          #4.#39         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getEventCount:()I
   #6 = Methodref          #4.#40         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J
   #7 = Methodref          #4.#41         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData."<init>":(IJ)V
   #8 = Class              #42            // java/lang/Object
   #9 = Utf8               eventCount
  #10 = Utf8               I
  #11 = Utf8               checkIntervalStart
  #12 = Utf8               J
  #13 = Utf8               <init>
  #14 = Utf8               (IJ)V
  #15 = Utf8               Code
  #16 = Utf8               LineNumberTable
  #17 = Utf8               LocalVariableTable
  #18 = Utf8               this
  #19 = Utf8               CheckIntervalData
  #20 = Utf8               InnerClasses
  #21 = Utf8               Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
  #22 = Utf8               count
  #23 = Utf8               intervalStart
  #24 = Utf8               getEventCount
  #25 = Utf8               ()I
  #26 = Utf8               getCheckIntervalStart
  #27 = Utf8               ()J
  #28 = Utf8               increment
  #29 = Utf8               (I)Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
  #30 = Utf8               delta
  #31 = Utf8               StackMapTable
  #32 = Utf8               SourceFile
  #33 = Utf8               EventCountCircuitBreaker.java
  #34 = NameAndType        #13:#43        // "<init>":()V
  #35 = NameAndType        #9:#10         // eventCount:I
  #36 = NameAndType        #11:#12        // checkIntervalStart:J
  #37 = Class              #44            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
  #38 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData
  #39 = NameAndType        #24:#25        // getEventCount:()I
  #40 = NameAndType        #26:#27        // getCheckIntervalStart:()J
  #41 = NameAndType        #13:#14        // "<init>":(IJ)V
  #42 = Utf8               java/lang/Object
  #43 = Utf8               ()V
  #44 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
{
  private final int eventCount;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final long checkIntervalStart;
    descriptor: J
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData(int, long);
    descriptor: (IJ)V
    flags: (0x0000)
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iload_1
         6: putfield      #2                  // Field eventCount:I
         9: aload_0
        10: lload_2
        11: putfield      #3                  // Field checkIntervalStart:J
        14: return
      LineNumberTable:
        line 441: 0
        line 442: 4
        line 443: 9
        line 444: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
            0      15     1 count   I
            0      15     2 intervalStart   J

  public int getEventCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field eventCount:I
         4: ireturn
      LineNumberTable:
        line 452: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;

  public long getCheckIntervalStart();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field checkIntervalStart:J
         4: lreturn
      LineNumberTable:
        line 461: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;

  public org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData increment(int);
    descriptor: (I)Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: iload_1
         1: ifne          8
         4: aload_0
         5: goto          25
         8: new           #4                  // class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData
        11: dup
        12: aload_0
        13: invokevirtual #5                  // Method getEventCount:()I
        16: iload_1
        17: iadd
        18: aload_0
        19: invokevirtual #6                  // Method getCheckIntervalStart:()J
        22: invokespecial #7                  // Method "<init>":(IJ)V
        25: areturn
      LineNumberTable:
        line 472: 0
        line 473: 19
        line 472: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;
            0      26     1 delta   I
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData ]
}
SourceFile: "EventCountCircuitBreaker.java"
InnerClasses:
  private static #19= #4 of #37;          // CheckIntervalData=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker
