Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/scalatest/CompileMacro.class
  Last modified May 29, 2022; size 10383 bytes
  SHA-256 checksum d30fbbb3f827479dffd95864583ba8c612879d9e52fcd3541aff648283949d20
  Compiled from "CompileMacro.scala"
public final class org.scalatest.CompileMacro
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/scalatest/CompileMacro
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 23, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/CompileMacro
    #2 = Class              #1            // org/scalatest/CompileMacro
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               CompileMacro.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\t}xA\u0002\u000e\u001c\u0011\u0003YrD\u0002\u0004\"7!\u00051D\t\u0005\u0006S\u0005!\ta\u000b\u0005\u0006Y\u0005!\t!\f\u0005\u00061\u0006!\t!\u0017\u0005\u0006W\u0006!\t\u0001\u001c\u0005\b\u0003\u0017\tA\u0011AA\u0007\u0011\u001d\t)$\u0001C\u0001\u0003oAq!a\u0013\u0002\t\u0003\ti\u0005C\u0004\u0002f\u0005!\t!a\u001a\t\u000f\u0005m\u0014\u0001\"\u0001\u0002~!9\u0011QS\u0001\u0005\u0002\u0005]\u0005bBA_\u0003\u0011\u0005\u0011q\u0018\u0005\b\u0003\'\fA\u0011AAk\u0011\u001d\tI/\u0001C\u0001\u0003WDqA!\u0001\u0002\t\u0003\u0011\u0019\u0001C\u0004\u0003\u001c\u0005!\tA!\b\t\u000f\tm\u0012\u0001\"\u0001\u0003>!9!\u0011K\u0001\u0005\u0002\tM\u0003b\u0002B4\u0003\u0011\u0005!\u0011\u000e\u0005\b\u0005w\nA\u0011\u0001B?\u0011\u001d\u0011\t*\u0001C\u0001\u0005\'CqA!+\u0002\t\u0003\u0011Y\u000bC\u0004\u0003@\u0006!\tA!1\t\u000f\tU\u0017\u0001\"\u0001\u0003X\"9!\u0011^\u0001\u0005\u0002\t-\u0018\u0001D\"p[BLG.Z\'bGJ|\'B\u0001\u000f\u001e\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001\u001f\u0003\ry\'o\u001a\t\u0003A\u0005i\u0011a\u0007\u0002\r\u0007>l\u0007/\u001b7f\u001b\u0006\u001c\'o\\\n\u0003\u0003\r\u0002\"\u0001J\u0014\u000e\u0003\u0015R\u0011AJ\u0001\u0006g\u000e\fG.Y\u0005\u0003Q\u0015\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003}\tqdZ3u\u0007>$Wm\u0015;sS:<gI]8n\u0007>$W-\u0012=qe\u0016\u001c8/[8o)\tq\u0013\tF\u00020uq\u0002\"\u0001M\u001c\u000f\u0005E*\u0004C\u0001\u001a&\u001b\u0005\u0019$B\u0001\u001b+\u0003\u0019a$o\\8u}%\u0011a\'J\u0001\u0007!J,G-\u001a4\n\u0005aJ$AB*ue&twM\u0003\u00027K!)1h\u0001a\u0001_\u0005QQ.\u001a;i_\u0012t\u0015-\\3\t\u000bu\u001a\u0001\u0019\u0001 \u0002\t\r|G-\u001a\t\u0004\u007fQ{cB\u0001!B\u0019\u0001AQAQ\u0002A\u0002\r\u000b\u0011a\u0019\t\u0003\tFs!!\u0012(\u000f\u0005\u0019[eBA$J\u001d\t\u0011\u0004*C\u0001\'\u0013\tQU%A\u0004sK\u001adWm\u0019;\n\u00051k\u0015AB7bGJ|7O\u0003\u0002KK%\u0011q\nU\u0001\ba\u0006\u001c7.Y4f\u0015\taU*\u0003\u0002S\'\n91i\u001c8uKb$(BA(Q\u0013\t)fK\u0001\u0003FqB\u0014\u0018BA,Q\u0005\u001d\tE.[1tKN\f1dY8oi\u0006Lgn]!osZ\u000bGNT;mYN#\u0018\r^3nK:$HC\u0001.i)\tYf\f\u0005\u0002%9&\u0011Q,\n\u0002\b\u0005>|G.Z1o\u0011\u0015yF\u00011\u0001a\u0003\u0015!(/Z3t!\r\t7M\u001a\b\u0003\u000f\nL!aT\u0013\n\u0005\u0011,\'\u0001\u0002\'jgRT!aT\u0013\u0011\u0005\u001dLgB\u0001!i\u0011\u0015\u0011E\u00011\u0001D\u0013\tQgK\u0001\u0003Ue\u0016,\u0017aE1tg\u0016\u0014H\u000fV=qK\u0016\u0013(o\u001c:J[BdGCA7r)\rq\u0017q\u0001\u000b\u0003_b\u00042\u0001\u001d+s\u001d\t\u0001\u0015\u000fC\u0003C\u000b\u0001\u00071\t\u0005\u0002tk:\u0011\u0001\u0005^\u0005\u0003\u001fnI!A^<\u0003\u0013\u0005\u001b8/\u001a:uS>t\'BA(\u001c\u0011\u0015IX\u00011\u0001{\u0003\r\u0001xn\u001d\t\u0004aR[\bc\u0001?\u0002\u00045\tQP\u0003\u0002\u007f\u007f\u000611o\\;sG\u0016T1!!\u0001\u001e\u0003%\u00198-\u00197bGRL7-C\u0002\u0002\u0006u\u0014\u0001\u0002U8tSRLwN\u001c\u0005\u0007{\u0015\u0001\r!!\u0003\u0011\u0007A$v&A\nfqB,7\r\u001e+za\u0016,%O]8s\u00136\u0004H\u000e\u0006\u0003\u0002\u0010\u0005]A\u0003BA\t\u0003c!b!a\u0005\u0002 \u00055\u0002#BA\u000b)\u0006eab\u0001!\u0002\u0018!)!I\u0002a\u0001\u0007B\u0019\u0001%a\u0007\n\u0007\u0005u1D\u0001\u0003GC\u000e$\bbBA\u0011\r\u0001\u0007\u00111E\u0001\u000baJ,G\u000f^5gS\u0016\u0014\b#BA\u000b)\u0006\u0015\u0002\u0003BA\u0014\u0003Si\u0011a`\u0005\u0004\u0003Wy(A\u0003)sKR$\u0018NZ5fe\"1\u0011P\u0002a\u0001\u0003_\u0001B!!\u0006Uw\"1QH\u0002a\u0001\u0003g\u0001B!!\u0006U_\u0005A\u0012m]:feR$u.Z:O_R\u001cu.\u001c9jY\u0016LU\u000e\u001d7\u0015\t\u0005e\u0012\u0011\t\u000b\u0005\u0003w\t9\u0005\u0006\u0003\u0002>\u0005\r\u0003\u0003BA )Jt1\u0001QA!\u0011\u0015\u0011u\u00011\u0001D\u0011\u0019Ix\u00011\u0001\u0002FA!\u0011q\b+|\u0011\u0019it\u00011\u0001\u0002JA!\u0011q\b+0\u0003a)\u0007\u0010]3di\u0012{Wm\u001d(pi\u000e{W\u000e]5mK&k\u0007\u000f\u001c\u000b\u0005\u0003\u001f\n9\u0006\u0006\u0003\u0002R\u0005\u0005DCBA*\u00033\ni\u0006E\u0003\u0002VQ\u000bIBD\u0002A\u0003/BQA\u0011\u0005A\u0002\rCq!!\t\t\u0001\u0004\tY\u0006E\u0003\u0002VQ\u000b)\u0003\u0003\u0004z\u0011\u0001\u0007\u0011q\f\t\u0005\u0003+\"6\u0010\u0003\u0004>\u0011\u0001\u0007\u00111\r\t\u0005\u0003+\"v&\u0001\nbgN,\'\u000f^\"p[BLG.Z:J[BdG\u0003BA5\u0003c\"B!a\u001b\u0002xQ!\u0011QNA:!\u0011\ty\u0007\u0016:\u000f\u0007\u0001\u000b\t\bC\u0003C\u0013\u0001\u00071\t\u0003\u0004z\u0013\u0001\u0007\u0011Q\u000f\t\u0005\u0003_\"6\u0010\u0003\u0004>\u0013\u0001\u0007\u0011\u0011\u0010\t\u0005\u0003_\"v&\u0001\nfqB,7\r^\"p[BLG.Z:J[BdG\u0003BA@\u0003\u000f#B!!!\u0002\u0012R1\u00111QAE\u0003\u001b\u0003R!!\"U\u00033q1\u0001QAD\u0011\u0015\u0011%\u00021\u0001D\u0011\u001d\t\tC\u0003a\u0001\u0003\u0017\u0003R!!\"U\u0003KAa!\u001f\u0006A\u0002\u0005=\u0005\u0003BAC)nDa!\u0010\u0006A\u0002\u0005M\u0005\u0003BAC)>\nA#Y:tKJ$hj\u001c;D_6\u0004\u0018\u000e\\3J[BdG\u0003BAM\u0003C#b!a\'\u0002(\u0006eF\u0003BAO\u0003G\u0003B!a(Ue:\u0019\u0001)!)\t\u000b\t[\u0001\u0019A\"\t\r\u0005\u00156\u00021\u00010\u00031\u0019\bn\\;mI>\u0013X*^:u\u0011\u001d\tIk\u0003a\u0001\u0003W\u000b1bY8na&dWmV8sIB)\u0011q\u0014+\u0002.B!\u0011qVA[\u001b\t\t\tLC\u0002\u00024n\tQA^3sENLA!a.\u00022\nY1i\\7qS2,wk\u001c:e\u0011\u0019I8\u00021\u0001\u0002<B!\u0011q\u0014+|\u0003Q\u0019\bn\\;mI:{GoQ8na&dW-S7qYR!\u0011\u0011YAe)\u0011\t\u0019-a4\u0015\t\u0005\u0015\u00171\u001a\t\u0005\u0003\u000f$&OD\u0002A\u0003\u0013DQA\u0011\u0007A\u0002\rCa!\u001f\u0007A\u0002\u00055\u0007\u0003BAd)nDq!!+\r\u0001\u0004\t\t\u000eE\u0003\u0002HR\u000bi+\u0001\nnkN$hj\u001c;D_6\u0004\u0018\u000e\\3J[BdG\u0003BAl\u0003?$B!!7\u0002fR!\u00111\\Aq!\u0011\ti\u000e\u0016:\u000f\u0007\u0001\u000by\u000eC\u0003C\u001b\u0001\u00071\t\u0003\u0004z\u001b\u0001\u0007\u00111\u001d\t\u0005\u0003;$6\u0010C\u0004\u0002*6\u0001\r!a:\u0011\u000b\u0005uG+!,\u0002)\u0015D\b/Z2u\u001d>$8i\\7qS2,\u0017*\u001c9m)\u0011\ti/a=\u0015\u0011\u0005=\u0018Q_A}\u0003{\u0004R!!=U\u00033q1\u0001QAz\u0011\u0015\u0011e\u00021\u0001D\u0011\u001d\tIK\u0004a\u0001\u0003o\u0004R!!=U\u0003[Cq!!\t\u000f\u0001\u0004\tY\u0010E\u0003\u0002rR\u000b)\u0003\u0003\u0004z\u001d\u0001\u0007\u0011q \t\u0005\u0003c$60\u0001\nxS2dgj\u001c;D_6\u0004\u0018\u000e\\3J[BdG\u0003\u0002B\u0003\u0005\u001b!BAa\u0002\u0003\u0018Q1!\u0011\u0002B\b\u0005\'\u0001RAa\u0003U\u00033q1\u0001\u0011B\u0007\u0011\u0015\u0011u\u00021\u0001D\u0011\u001d\t\tc\u0004a\u0001\u0005#\u0001RAa\u0003U\u0003KAa!_\bA\u0002\tU\u0001\u0003\u0002B\u0006)nDq!!+\u0010\u0001\u0004\u0011I\u0002E\u0003\u0003\fQ\u000bi+\u0001\fbgN,\'\u000f\u001e(piRK\b/Z\"iK\u000e\\\u0017*\u001c9m)\u0011\u0011yBa\n\u0015\r\t\u0005\"1\u0006B\u001c)\u0011\u0011\u0019C!\u000b\u0011\t\t\u0015BK\u001d\b\u0004\u0001\n\u001d\u0002\"\u0002\"\u0011\u0001\u0004\u0019\u0005BBAS!\u0001\u0007q\u0006C\u0004\u0003.A\u0001\rAa\f\u0002\u001bQL\b/Z\"iK\u000e\\wk\u001c:e!\u0015\u0011)\u0003\u0016B\u0019!\u0011\tyKa\r\n\t\tU\u0012\u0011\u0017\u0002\u000e)f\u0004Xm\u00115fG.<vN\u001d3\t\re\u0004\u0002\u0019\u0001B\u001d!\u0011\u0011)\u0003V>\u0002-MDw.\u001e7e\u001d>$H+\u001f9f\u0007\",7m[%na2$BAa\u0010\u0003HQ!!\u0011\tB\')\u0011\u0011\u0019E!\u0013\u0011\t\t\u0015CK\u001d\b\u0004\u0001\n\u001d\u0003\"\u0002\"\u0012\u0001\u0004\u0019\u0005BB=\u0012\u0001\u0004\u0011Y\u0005\u0005\u0003\u0003FQ[\bb\u0002B\u0017#\u0001\u0007!q\n\t\u0006\u0005\u000b\"&\u0011G\u0001\u0015[V\u001cHOT8u)f\u0004Xm\u00115fG.LU\u000e\u001d7\u0015\t\tU#Q\f\u000b\u0005\u0005/\u0012\u0019\u0007\u0006\u0003\u0003Z\t}\u0003\u0003\u0002B.)Jt1\u0001\u0011B/\u0011\u0015\u0011%\u00031\u0001D\u0011\u0019I(\u00031\u0001\u0003bA!!1\f+|\u0011\u001d\u0011iC\u0005a\u0001\u0005K\u0002RAa\u0017U\u0005c\ta#\u001a=qK\u000e$hj\u001c;UsB,7\t[3dW&k\u0007\u000f\u001c\u000b\u0005\u0005W\u0012\t\b\u0006\u0004\u0003n\tM$q\u000f\t\u0006\u0005_\"\u0016\u0011\u0004\b\u0004\u0001\nE\u0004\"\u0002\"\u0014\u0001\u0004\u0019\u0005b\u0002B\u0017\'\u0001\u0007!Q\u000f\t\u0006\u0005_\"&\u0011\u0007\u0005\b\u0003C\u0019\u0002\u0019\u0001B=!\u0015\u0011y\u0007VA\u0013\u0003Q9\u0018\u000e\u001c7O_R$\u0016\u0010]3DQ\u0016\u001c7.S7qYR!!q\u0010BD)\u0011\u0011\tI!$\u0015\t\t\r%\u0011\u0012\t\u0006\u0005\u000b#\u0016\u0011\u0004\b\u0004\u0001\n\u001d\u0005\"\u0002\"\u0015\u0001\u0004\u0019\u0005bBA\u0011)\u0001\u0007!1\u0012\t\u0006\u0005\u000b#\u0016Q\u0005\u0005\b\u0005[!\u0002\u0019\u0001BH!\u0015\u0011)\t\u0016B\u0019\u0003E\t7o]3si\u000e{W\u000e]5mK&k\u0007\u000f\u001c\u000b\u0005\u0005+\u0013i\n\u0006\u0004\u0003\u0018\n\u0005&Q\u0015\u000b\u0005\u00053\u0013y\n\u0005\u0003\u0003\u001cR\u0013hb\u0001!\u0003\u001e\")!)\u0006a\u0001\u0007\"1\u0011QU\u000bA\u0002=Bq!!+\u0016\u0001\u0004\u0011\u0019\u000bE\u0003\u0003\u001cR\u000bi\u000b\u0003\u0004z+\u0001\u0007!q\u0015\t\u0005\u00057#60A\ttQ>,H\u000eZ\"p[BLG.Z%na2$BA!,\u00036R!!q\u0016B^)\u0011\u0011\tLa.\u0011\t\tMFK\u001d\b\u0004\u0001\nU\u0006\"\u0002\"\u0017\u0001\u0004\u0019\u0005BB=\u0017\u0001\u0004\u0011I\f\u0005\u0003\u00034R[\bbBAU-\u0001\u0007!Q\u0018\t\u0006\u0005g#\u0016QV\u0001\u0010[V\u001cHoQ8na&dW-S7qYR!!1\u0019Bf)\u0011\u0011)M!5\u0015\t\t\u001d\'Q\u001a\t\u0005\u0005\u0013$&OD\u0002A\u0005\u0017DQAQ\fA\u0002\rCa!_\fA\u0002\t=\u0007\u0003\u0002Be)nDq!!+\u0018\u0001\u0004\u0011\u0019\u000eE\u0003\u0003JR\u000bi+A\tfqB,7\r^\"p[BLG.Z%na2$BA!7\u0003`R1!1\u001cBq\u0005K\u0004RA!8U\u00033q1\u0001\u0011Bp\u0011\u0015\u0011\u0005\u00041\u0001D\u0011\u001d\tI\u000b\u0007a\u0001\u0005G\u0004RA!8U\u0003[Cq!!\t\u0019\u0001\u0004\u00119\u000fE\u0003\u0003^R\u000b)#A\bxS2d7i\\7qS2,\u0017*\u001c9m)\u0011\u0011iO!>\u0015\t\t=(1 \u000b\u0005\u0005c\u00149\u0010E\u0003\u0003tR\u000bIBD\u0002A\u0005kDQAQ\rA\u0002\rCq!!\t\u001a\u0001\u0004\u0011I\u0010E\u0003\u0003tR\u000b)\u0003C\u0004\u0002*f\u0001\rA!@\u0011\u000b\tMH+!,
    #9 = Utf8               scala/reflect/api/Exprs$Expr
   #10 = Class              #9            // scala/reflect/api/Exprs$Expr
   #11 = Utf8               scala/reflect/api/Exprs
   #12 = Class              #11           // scala/reflect/api/Exprs
   #13 = Utf8               Expr
   #14 = Utf8               scala/reflect/api/Trees$TreeApi
   #15 = Class              #14           // scala/reflect/api/Trees$TreeApi
   #16 = Utf8               scala/reflect/api/Trees
   #17 = Class              #16           // scala/reflect/api/Trees
   #18 = Utf8               TreeApi
   #19 = Utf8               willCompileImpl
   #20 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #21 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
   #22 = Utf8               c
   #23 = Utf8               compileWord
   #24 = Utf8               prettifier
   #25 = Utf8               org/scalatest/CompileMacro$
   #26 = Class              #25           // org/scalatest/CompileMacro$
   #27 = Utf8               MODULE$
   #28 = Utf8               Lorg/scalatest/CompileMacro$;
   #29 = NameAndType        #27:#28       // MODULE$:Lorg/scalatest/CompileMacro$;
   #30 = Fieldref           #26.#29       // org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
   #31 = NameAndType        #19:#20       // willCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #32 = Methodref          #26.#31       // org/scalatest/CompileMacro$.willCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #33 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #34 = Utf8               Lscala/reflect/api/Exprs$Expr;
   #35 = Utf8               expectCompileImpl
   #36 = NameAndType        #35:#20       // expectCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #37 = Methodref          #26.#36       // org/scalatest/CompileMacro$.expectCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #38 = Utf8               mustCompileImpl
   #39 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #40 = Utf8               pos
   #41 = NameAndType        #38:#20       // mustCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #42 = Methodref          #26.#41       // org/scalatest/CompileMacro$.mustCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #43 = Utf8               shouldCompileImpl
   #44 = NameAndType        #43:#20       // shouldCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #45 = Methodref          #26.#44       // org/scalatest/CompileMacro$.shouldCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #46 = Utf8               assertCompileImpl
   #47 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #48 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #49 = Utf8               shouldOrMust
   #50 = NameAndType        #46:#47       // assertCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #51 = Methodref          #26.#50       // org/scalatest/CompileMacro$.assertCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #52 = Utf8               Ljava/lang/String;
   #53 = Utf8               willNotTypeCheckImpl
   #54 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
   #55 = Utf8               typeCheckWord
   #56 = NameAndType        #53:#20       // willNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #57 = Methodref          #26.#56       // org/scalatest/CompileMacro$.willNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #58 = Utf8               expectNotTypeCheckImpl
   #59 = NameAndType        #58:#20       // expectNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #60 = Methodref          #26.#59       // org/scalatest/CompileMacro$.expectNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #61 = Utf8               mustNotTypeCheckImpl
   #62 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #63 = NameAndType        #61:#20       // mustNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #64 = Methodref          #26.#63       // org/scalatest/CompileMacro$.mustNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #65 = Utf8               shouldNotTypeCheckImpl
   #66 = NameAndType        #65:#20       // shouldNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #67 = Methodref          #26.#66       // org/scalatest/CompileMacro$.shouldNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #68 = Utf8               assertNotTypeCheckImpl
   #69 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #70 = NameAndType        #68:#47       // assertNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #71 = Methodref          #26.#70       // org/scalatest/CompileMacro$.assertNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #72 = Utf8               willNotCompileImpl
   #73 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #74 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
   #75 = NameAndType        #72:#73       // willNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #76 = Methodref          #26.#75       // org/scalatest/CompileMacro$.willNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #77 = Utf8               expectNotCompileImpl
   #78 = NameAndType        #77:#73       // expectNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #79 = Methodref          #26.#78       // org/scalatest/CompileMacro$.expectNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #80 = Utf8               mustNotCompileImpl
   #81 = NameAndType        #80:#20       // mustNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #82 = Methodref          #26.#81       // org/scalatest/CompileMacro$.mustNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #83 = Utf8               shouldNotCompileImpl
   #84 = NameAndType        #83:#20       // shouldNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #85 = Methodref          #26.#84       // org/scalatest/CompileMacro$.shouldNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #86 = Utf8               assertNotCompileImpl
   #87 = NameAndType        #86:#47       // assertNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #88 = Methodref          #26.#87       // org/scalatest/CompileMacro$.assertNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
   #89 = Utf8               expectCompilesImpl
   #90 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
   #91 = Utf8               code
   #92 = NameAndType        #89:#73       // expectCompilesImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #93 = Methodref          #26.#92       // org/scalatest/CompileMacro$.expectCompilesImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #94 = Utf8               assertCompilesImpl
   #95 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
   #96 = NameAndType        #94:#20       // assertCompilesImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #97 = Methodref          #26.#96       // org/scalatest/CompileMacro$.assertCompilesImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
   #98 = Utf8               expectDoesNotCompileImpl
   #99 = NameAndType        #98:#73       // expectDoesNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #100 = Methodref          #26.#99       // org/scalatest/CompileMacro$.expectDoesNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #101 = Utf8               assertDoesNotCompileImpl
  #102 = NameAndType        #101:#20      // assertDoesNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #103 = Methodref          #26.#102      // org/scalatest/CompileMacro$.assertDoesNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #104 = Utf8               expectTypeErrorImpl
  #105 = NameAndType        #104:#73      // expectTypeErrorImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #106 = Methodref          #26.#105      // org/scalatest/CompileMacro$.expectTypeErrorImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #107 = Utf8               assertTypeErrorImpl
  #108 = NameAndType        #107:#20      // assertTypeErrorImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #109 = Methodref          #26.#108      // org/scalatest/CompileMacro$.assertTypeErrorImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
  #110 = Utf8               containsAnyValNullStatement
  #111 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List;)Z
  #112 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;)Z
  #113 = Utf8               trees
  #114 = NameAndType        #110:#111     // containsAnyValNullStatement:(Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List;)Z
  #115 = Methodref          #26.#114      // org/scalatest/CompileMacro$.containsAnyValNullStatement:(Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List;)Z
  #116 = Utf8               Lscala/collection/immutable/List;
  #117 = Utf8               getCodeStringFromCodeExpression
  #118 = Utf8               (Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/String;
  #119 = Utf8               (Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;)Ljava/lang/String;
  #120 = Utf8               methodName
  #121 = NameAndType        #117:#118     // getCodeStringFromCodeExpression:(Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/String;
  #122 = Methodref          #26.#121      // org/scalatest/CompileMacro$.getCodeStringFromCodeExpression:(Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/String;
  #123 = Utf8               Code
  #124 = Utf8               LocalVariableTable
  #125 = Utf8               Signature
  #126 = Utf8               MethodParameters
  #127 = Utf8               InnerClasses
  #128 = Utf8               SourceFile
  #129 = Utf8               RuntimeVisibleAnnotations
  #130 = Utf8               ScalaSig
{
  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> willCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #32                 // Method org/scalatest/CompileMacro$.willCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2 prettifier   Lscala/reflect/api/Exprs$Expr;
    Signature: #21                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      prettifier                     final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> expectCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #37                 // Method org/scalatest/CompileMacro$.expectCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2 prettifier   Lscala/reflect/api/Exprs$Expr;
    Signature: #21                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      prettifier                     final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> mustCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #42                 // Method org/scalatest/CompileMacro$.mustCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #39                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> shouldCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #45                 // Method org/scalatest/CompileMacro$.shouldCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #39                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>, java.lang.String);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #51                 // Method org/scalatest/CompileMacro$.assertCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      11     2   pos   Lscala/reflect/api/Exprs$Expr;
            0      11     3 shouldOrMust   Ljava/lang/String;
    Signature: #48                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      pos                            final
      shouldOrMust                   final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> willNotTypeCheckImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.TypeCheckWord>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #57                 // Method org/scalatest/CompileMacro$.willNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 typeCheckWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2 prettifier   Lscala/reflect/api/Exprs$Expr;
    Signature: #54                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      typeCheckWord                  final
      prettifier                     final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> expectNotTypeCheckImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.TypeCheckWord>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #60                 // Method org/scalatest/CompileMacro$.expectNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 typeCheckWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2 prettifier   Lscala/reflect/api/Exprs$Expr;
    Signature: #54                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      typeCheckWord                  final
      prettifier                     final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> mustNotTypeCheckImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.TypeCheckWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #64                 // Method org/scalatest/CompileMacro$.mustNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 typeCheckWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #62                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      typeCheckWord                  final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> shouldNotTypeCheckImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.TypeCheckWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #67                 // Method org/scalatest/CompileMacro$.shouldNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 typeCheckWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #62                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      typeCheckWord                  final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertNotTypeCheckImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.TypeCheckWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>, java.lang.String);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #71                 // Method org/scalatest/CompileMacro$.assertNotTypeCheckImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1 typeCheckWord   Lscala/reflect/api/Exprs$Expr;
            0      11     2   pos   Lscala/reflect/api/Exprs$Expr;
            0      11     3 shouldOrMust   Ljava/lang/String;
    Signature: #69                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/TypeCheckWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      typeCheckWord                  final
      pos                            final
      shouldOrMust                   final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> willNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #76                 // Method org/scalatest/CompileMacro$.willNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #74                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> expectNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #79                 // Method org/scalatest/CompileMacro$.expectNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #74                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> mustNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #82                 // Method org/scalatest/CompileMacro$.mustNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #39                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> shouldNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #85                 // Method org/scalatest/CompileMacro$.shouldNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #39                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<org.scalatest.verbs.CompileWord>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>, java.lang.String);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #88                 // Method org/scalatest/CompileMacro$.assertNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1 compileWord   Lscala/reflect/api/Exprs$Expr;
            0      11     2   pos   Lscala/reflect/api/Exprs$Expr;
            0      11     3 shouldOrMust   Ljava/lang/String;
    Signature: #48                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/verbs/CompileWord;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;Ljava/lang/String;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      compileWord                    final
      pos                            final
      shouldOrMust                   final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> expectCompilesImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #93                 // Method org/scalatest/CompileMacro$.expectCompilesImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1  code   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #90                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      code                           final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertCompilesImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #97                 // Method org/scalatest/CompileMacro$.assertCompilesImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1  code   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #95                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      code                           final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> expectDoesNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #100                // Method org/scalatest/CompileMacro$.expectDoesNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1  code   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #90                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      code                           final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertDoesNotCompileImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #103                // Method org/scalatest/CompileMacro$.assertDoesNotCompileImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1  code   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #95                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      code                           final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.Fact> expectTypeErrorImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, scala.reflect.api.Exprs$Expr<org.scalactic.Prettifier>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: invokevirtual #106                // Method org/scalatest/CompileMacro$.expectTypeErrorImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
        10: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0     c   Lscala/reflect/macros/whitebox/Context;
            0      11     1  code   Lscala/reflect/api/Exprs$Expr;
            0      11     2 prettifier   Lscala/reflect/api/Exprs$Expr;
            0      11     3   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #90                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/Prettifier;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/Fact;>;
    MethodParameters:
      Name                           Flags
      c                              final
      code                           final
      prettifier                     final
      pos                            final

  public static scala.reflect.api.Exprs$Expr<org.scalatest.compatible.Assertion> assertTypeErrorImpl(scala.reflect.macros.whitebox.Context, scala.reflect.api.Exprs$Expr<java.lang.String>, scala.reflect.api.Exprs$Expr<org.scalactic.source.Position>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #109                // Method org/scalatest/CompileMacro$.assertTypeErrorImpl:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr;Lscala/reflect/api/Exprs$Expr;)Lscala/reflect/api/Exprs$Expr;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1  code   Lscala/reflect/api/Exprs$Expr;
            0      10     2   pos   Lscala/reflect/api/Exprs$Expr;
    Signature: #95                          // (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;Lscala/reflect/api/Exprs$Expr<Lorg/scalactic/source/Position;>;)Lscala/reflect/api/Exprs$Expr<Lorg/scalatest/compatible/Assertion;>;
    MethodParameters:
      Name                           Flags
      c                              final
      code                           final
      pos                            final

  public static boolean containsAnyValNullStatement(scala.reflect.macros.whitebox.Context, scala.collection.immutable.List<scala.reflect.api.Trees$TreeApi>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: invokevirtual #115                // Method org/scalatest/CompileMacro$.containsAnyValNullStatement:(Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List;)Z
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0     c   Lscala/reflect/macros/whitebox/Context;
            0       9     1 trees   Lscala/collection/immutable/List;
    Signature: #112                         // (Lscala/reflect/macros/whitebox/Context;Lscala/collection/immutable/List<Lscala/reflect/api/Trees$TreeApi;>;)Z
    MethodParameters:
      Name                           Flags
      c                              final
      trees                          final

  public static java.lang.String getCodeStringFromCodeExpression(scala.reflect.macros.whitebox.Context, java.lang.String, scala.reflect.api.Exprs$Expr<java.lang.String>);
    descriptor: (Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #30                 // Field org/scalatest/CompileMacro$.MODULE$:Lorg/scalatest/CompileMacro$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #122                // Method org/scalatest/CompileMacro$.getCodeStringFromCodeExpression:(Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr;)Ljava/lang/String;
         9: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0     c   Lscala/reflect/macros/whitebox/Context;
            0      10     1 methodName   Ljava/lang/String;
            0      10     2  code   Lscala/reflect/api/Exprs$Expr;
    Signature: #119                         // (Lscala/reflect/macros/whitebox/Context;Ljava/lang/String;Lscala/reflect/api/Exprs$Expr<Ljava/lang/String;>;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      c                              final
      methodName                     final
      code                           final
}
InnerClasses:
  public #13= #10 of #12;                 // Expr=class scala/reflect/api/Exprs$Expr of class scala/reflect/api/Exprs
  public #18= #15 of #17;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
SourceFile: "CompileMacro.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t}xA\u0002\u000e\u001c\u0011\u0003YrD\u0002\u0004\"7!\u00051D\t\u0005\u0006S\u0005!\ta\u000b\u0005\u0006Y\u0005!\t!\f\u0005\u00061\u0006!\t!\u0017\u0005\u0006W\u0006!\t\u0001\u001c\u0005\b\u0003\u0017\tA\u0011AA\u0007\u0011\u001d\t)$\u0001C\u0001\u0003oAq!a\u0013\u0002\t\u0003\ti\u0005C\u0004\u0002f\u0005!\t!a\u001a\t\u000f\u0005m\u0014\u0001\"\u0001\u0002~!9\u0011QS\u0001\u0005\u0002\u0005]\u0005bBA_\u0003\u0011\u0005\u0011q\u0018\u0005\b\u0003\'\fA\u0011AAk\u0011\u001d\tI/\u0001C\u0001\u0003WDqA!\u0001\u0002\t\u0003\u0011\u0019\u0001C\u0004\u0003\u001c\u0005!\tA!\b\t\u000f\tm\u0012\u0001\"\u0001\u0003>!9!\u0011K\u0001\u0005\u0002\tM\u0003b\u0002B4\u0003\u0011\u0005!\u0011\u000e\u0005\b\u0005w\nA\u0011\u0001B?\u0011\u001d\u0011\t*\u0001C\u0001\u0005\'CqA!+\u0002\t\u0003\u0011Y\u000bC\u0004\u0003@\u0006!\tA!1\t\u000f\tU\u0017\u0001\"\u0001\u0003X\"9!\u0011^\u0001\u0005\u0002\t-\u0018\u0001D\"p[BLG.Z\'bGJ|\'B\u0001\u000f\u001e\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001\u001f\u0003\ry\'o\u001a\t\u0003A\u0005i\u0011a\u0007\u0002\r\u0007>l\u0007/\u001b7f\u001b\u0006\u001c\'o\\\n\u0003\u0003\r\u0002\"\u0001J\u0014\u000e\u0003\u0015R\u0011AJ\u0001\u0006g\u000e\fG.Y\u0005\u0003Q\u0015\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003}\tqdZ3u\u0007>$Wm\u0015;sS:<gI]8n\u0007>$W-\u0012=qe\u0016\u001c8/[8o)\tq\u0013\tF\u00020uq\u0002\"\u0001M\u001c\u000f\u0005E*\u0004C\u0001\u001a&\u001b\u0005\u0019$B\u0001\u001b+\u0003\u0019a$o\\8u}%\u0011a\'J\u0001\u0007!J,G-\u001a4\n\u0005aJ$AB*ue&twM\u0003\u00027K!)1h\u0001a\u0001_\u0005QQ.\u001a;i_\u0012t\u0015-\\3\t\u000bu\u001a\u0001\u0019\u0001 \u0002\t\r|G-\u001a\t\u0004\u007fQ{cB\u0001!B\u0019\u0001AQAQ\u0002A\u0002\r\u000b\u0011a\u0019\t\u0003\tFs!!\u0012(\u000f\u0005\u0019[eBA$J\u001d\t\u0011\u0004*C\u0001\'\u0013\tQU%A\u0004sK\u001adWm\u0019;\n\u00051k\u0015AB7bGJ|7O\u0003\u0002KK%\u0011q\nU\u0001\ba\u0006\u001c7.Y4f\u0015\taU*\u0003\u0002S\'\n91i\u001c8uKb$(BA(Q\u0013\t)fK\u0001\u0003FqB\u0014\u0018BA,Q\u0005\u001d\tE.[1tKN\f1dY8oi\u0006Lgn]!osZ\u000bGNT;mYN#\u0018\r^3nK:$HC\u0001.i)\tYf\f\u0005\u0002%9&\u0011Q,\n\u0002\b\u0005>|G.Z1o\u0011\u0015yF\u00011\u0001a\u0003\u0015!(/Z3t!\r\t7M\u001a\b\u0003\u000f\nL!aT\u0013\n\u0005\u0011,\'\u0001\u0002\'jgRT!aT\u0013\u0011\u0005\u001dLgB\u0001!i\u0011\u0015\u0011E\u00011\u0001D\u0013\tQgK\u0001\u0003Ue\u0016,\u0017aE1tg\u0016\u0014H\u000fV=qK\u0016\u0013(o\u001c:J[BdGCA7r)\rq\u0017q\u0001\u000b\u0003_b\u00042\u0001\u001d+s\u001d\t\u0001\u0015\u000fC\u0003C\u000b\u0001\u00071\t\u0005\u0002tk:\u0011\u0001\u0005^\u0005\u0003\u001fnI!A^<\u0003\u0013\u0005\u001b8/\u001a:uS>t\'BA(\u001c\u0011\u0015IX\u00011\u0001{\u0003\r\u0001xn\u001d\t\u0004aR[\bc\u0001?\u0002\u00045\tQP\u0003\u0002\u007f\u007f\u000611o\\;sG\u0016T1!!\u0001\u001e\u0003%\u00198-\u00197bGRL7-C\u0002\u0002\u0006u\u0014\u0001\u0002U8tSRLwN\u001c\u0005\u0007{\u0015\u0001\r!!\u0003\u0011\u0007A$v&A\nfqB,7\r\u001e+za\u0016,%O]8s\u00136\u0004H\u000e\u0006\u0003\u0002\u0010\u0005]A\u0003BA\t\u0003c!b!a\u0005\u0002 \u00055\u0002#BA\u000b)\u0006eab\u0001!\u0002\u0018!)!I\u0002a\u0001\u0007B\u0019\u0001%a\u0007\n\u0007\u0005u1D\u0001\u0003GC\u000e$\bbBA\u0011\r\u0001\u0007\u00111E\u0001\u000baJ,G\u000f^5gS\u0016\u0014\b#BA\u000b)\u0006\u0015\u0002\u0003BA\u0014\u0003Si\u0011a`\u0005\u0004\u0003Wy(A\u0003)sKR$\u0018NZ5fe\"1\u0011P\u0002a\u0001\u0003_\u0001B!!\u0006Uw\"1QH\u0002a\u0001\u0003g\u0001B!!\u0006U_\u0005A\u0012m]:feR$u.Z:O_R\u001cu.\u001c9jY\u0016LU\u000e\u001d7\u0015\t\u0005e\u0012\u0011\t\u000b\u0005\u0003w\t9\u0005\u0006\u0003\u0002>\u0005\r\u0003\u0003BA )Jt1\u0001QA!\u0011\u0015\u0011u\u00011\u0001D\u0011\u0019Ix\u00011\u0001\u0002FA!\u0011q\b+|\u0011\u0019it\u00011\u0001\u0002JA!\u0011q\b+0\u0003a)\u0007\u0010]3di\u0012{Wm\u001d(pi\u000e{W\u000e]5mK&k\u0007\u000f\u001c\u000b\u0005\u0003\u001f\n9\u0006\u0006\u0003\u0002R\u0005\u0005DCBA*\u00033\ni\u0006E\u0003\u0002VQ\u000bIBD\u0002A\u0003/BQA\u0011\u0005A\u0002\rCq!!\t\t\u0001\u0004\tY\u0006E\u0003\u0002VQ\u000b)\u0003\u0003\u0004z\u0011\u0001\u0007\u0011q\f\t\u0005\u0003+\"6\u0010\u0003\u0004>\u0011\u0001\u0007\u00111\r\t\u0005\u0003+\"v&\u0001\nbgN,\'\u000f^\"p[BLG.Z:J[BdG\u0003BA5\u0003c\"B!a\u001b\u0002xQ!\u0011QNA:!\u0011\ty\u0007\u0016:\u000f\u0007\u0001\u000b\t\bC\u0003C\u0013\u0001\u00071\t\u0003\u0004z\u0013\u0001\u0007\u0011Q\u000f\t\u0005\u0003_\"6\u0010\u0003\u0004>\u0013\u0001\u0007\u0011\u0011\u0010\t\u0005\u0003_\"v&\u0001\nfqB,7\r^\"p[BLG.Z:J[BdG\u0003BA@\u0003\u000f#B!!!\u0002\u0012R1\u00111QAE\u0003\u001b\u0003R!!\"U\u00033q1\u0001QAD\u0011\u0015\u0011%\u00021\u0001D\u0011\u001d\t\tC\u0003a\u0001\u0003\u0017\u0003R!!\"U\u0003KAa!\u001f\u0006A\u0002\u0005=\u0005\u0003BAC)nDa!\u0010\u0006A\u0002\u0005M\u0005\u0003BAC)>\nA#Y:tKJ$hj\u001c;D_6\u0004\u0018\u000e\\3J[BdG\u0003BAM\u0003C#b!a\'\u0002(\u0006eF\u0003BAO\u0003G\u0003B!a(Ue:\u0019\u0001)!)\t\u000b\t[\u0001\u0019A\"\t\r\u0005\u00156\u00021\u00010\u00031\u0019\bn\\;mI>\u0013X*^:u\u0011\u001d\tIk\u0003a\u0001\u0003W\u000b1bY8na&dWmV8sIB)\u0011q\u0014+\u0002.B!\u0011qVA[\u001b\t\t\tLC\u0002\u00024n\tQA^3sENLA!a.\u00022\nY1i\\7qS2,wk\u001c:e\u0011\u0019I8\u00021\u0001\u0002<B!\u0011q\u0014+|\u0003Q\u0019\bn\\;mI:{GoQ8na&dW-S7qYR!\u0011\u0011YAe)\u0011\t\u0019-a4\u0015\t\u0005\u0015\u00171\u001a\t\u0005\u0003\u000f$&OD\u0002A\u0003\u0013DQA\u0011\u0007A\u0002\rCa!\u001f\u0007A\u0002\u00055\u0007\u0003BAd)nDq!!+\r\u0001\u0004\t\t\u000eE\u0003\u0002HR\u000bi+\u0001\nnkN$hj\u001c;D_6\u0004\u0018\u000e\\3J[BdG\u0003BAl\u0003?$B!!7\u0002fR!\u00111\\Aq!\u0011\ti\u000e\u0016:\u000f\u0007\u0001\u000by\u000eC\u0003C\u001b\u0001\u00071\t\u0003\u0004z\u001b\u0001\u0007\u00111\u001d\t\u0005\u0003;$6\u0010C\u0004\u0002*6\u0001\r!a:\u0011\u000b\u0005uG+!,\u0002)\u0015D\b/Z2u\u001d>$8i\\7qS2,\u0017*\u001c9m)\u0011\ti/a=\u0015\u0011\u0005=\u0018Q_A}\u0003{\u0004R!!=U\u00033q1\u0001QAz\u0011\u0015\u0011e\u00021\u0001D\u0011\u001d\tIK\u0004a\u0001\u0003o\u0004R!!=U\u0003[Cq!!\t\u000f\u0001\u0004\tY\u0010E\u0003\u0002rR\u000b)\u0003\u0003\u0004z\u001d\u0001\u0007\u0011q \t\u0005\u0003c$60\u0001\nxS2dgj\u001c;D_6\u0004\u0018\u000e\\3J[BdG\u0003\u0002B\u0003\u0005\u001b!BAa\u0002\u0003\u0018Q1!\u0011\u0002B\b\u0005\'\u0001RAa\u0003U\u00033q1\u0001\u0011B\u0007\u0011\u0015\u0011u\u00021\u0001D\u0011\u001d\t\tc\u0004a\u0001\u0005#\u0001RAa\u0003U\u0003KAa!_\bA\u0002\tU\u0001\u0003\u0002B\u0006)nDq!!+\u0010\u0001\u0004\u0011I\u0002E\u0003\u0003\fQ\u000bi+\u0001\fbgN,\'\u000f\u001e(piRK\b/Z\"iK\u000e\\\u0017*\u001c9m)\u0011\u0011yBa\n\u0015\r\t\u0005\"1\u0006B\u001c)\u0011\u0011\u0019C!\u000b\u0011\t\t\u0015BK\u001d\b\u0004\u0001\n\u001d\u0002\"\u0002\"\u0011\u0001\u0004\u0019\u0005BBAS!\u0001\u0007q\u0006C\u0004\u0003.A\u0001\rAa\f\u0002\u001bQL\b/Z\"iK\u000e\\wk\u001c:e!\u0015\u0011)\u0003\u0016B\u0019!\u0011\tyKa\r\n\t\tU\u0012\u0011\u0017\u0002\u000e)f\u0004Xm\u00115fG.<vN\u001d3\t\re\u0004\u0002\u0019\u0001B\u001d!\u0011\u0011)\u0003V>\u0002-MDw.\u001e7e\u001d>$H+\u001f9f\u0007\",7m[%na2$BAa\u0010\u0003HQ!!\u0011\tB\')\u0011\u0011\u0019E!\u0013\u0011\t\t\u0015CK\u001d\b\u0004\u0001\n\u001d\u0003\"\u0002\"\u0012\u0001\u0004\u0019\u0005BB=\u0012\u0001\u0004\u0011Y\u0005\u0005\u0003\u0003FQ[\bb\u0002B\u0017#\u0001\u0007!q\n\t\u0006\u0005\u000b\"&\u0011G\u0001\u0015[V\u001cHOT8u)f\u0004Xm\u00115fG.LU\u000e\u001d7\u0015\t\tU#Q\f\u000b\u0005\u0005/\u0012\u0019\u0007\u0006\u0003\u0003Z\t}\u0003\u0003\u0002B.)Jt1\u0001\u0011B/\u0011\u0015\u0011%\u00031\u0001D\u0011\u0019I(\u00031\u0001\u0003bA!!1\f+|\u0011\u001d\u0011iC\u0005a\u0001\u0005K\u0002RAa\u0017U\u0005c\ta#\u001a=qK\u000e$hj\u001c;UsB,7\t[3dW&k\u0007\u000f\u001c\u000b\u0005\u0005W\u0012\t\b\u0006\u0004\u0003n\tM$q\u000f\t\u0006\u0005_\"\u0016\u0011\u0004\b\u0004\u0001\nE\u0004\"\u0002\"\u0014\u0001\u0004\u0019\u0005b\u0002B\u0017\'\u0001\u0007!Q\u000f\t\u0006\u0005_\"&\u0011\u0007\u0005\b\u0003C\u0019\u0002\u0019\u0001B=!\u0015\u0011y\u0007VA\u0013\u0003Q9\u0018\u000e\u001c7O_R$\u0016\u0010]3DQ\u0016\u001c7.S7qYR!!q\u0010BD)\u0011\u0011\tI!$\u0015\t\t\r%\u0011\u0012\t\u0006\u0005\u000b#\u0016\u0011\u0004\b\u0004\u0001\n\u001d\u0005\"\u0002\"\u0015\u0001\u0004\u0019\u0005bBA\u0011)\u0001\u0007!1\u0012\t\u0006\u0005\u000b#\u0016Q\u0005\u0005\b\u0005[!\u0002\u0019\u0001BH!\u0015\u0011)\t\u0016B\u0019\u0003E\t7o]3si\u000e{W\u000e]5mK&k\u0007\u000f\u001c\u000b\u0005\u0005+\u0013i\n\u0006\u0004\u0003\u0018\n\u0005&Q\u0015\u000b\u0005\u00053\u0013y\n\u0005\u0003\u0003\u001cR\u0013hb\u0001!\u0003\u001e\")!)\u0006a\u0001\u0007\"1\u0011QU\u000bA\u0002=Bq!!+\u0016\u0001\u0004\u0011\u0019\u000bE\u0003\u0003\u001cR\u000bi\u000b\u0003\u0004z+\u0001\u0007!q\u0015\t\u0005\u00057#60A\ttQ>,H\u000eZ\"p[BLG.Z%na2$BA!,\u00036R!!q\u0016B^)\u0011\u0011\tLa.\u0011\t\tMFK\u001d\b\u0004\u0001\nU\u0006\"\u0002\"\u0017\u0001\u0004\u0019\u0005BB=\u0017\u0001\u0004\u0011I\f\u0005\u0003\u00034R[\bbBAU-\u0001\u0007!Q\u0018\t\u0006\u0005g#\u0016QV\u0001\u0010[V\u001cHoQ8na&dW-S7qYR!!1\u0019Bf)\u0011\u0011)M!5\u0015\t\t\u001d\'Q\u001a\t\u0005\u0005\u0013$&OD\u0002A\u0005\u0017DQAQ\fA\u0002\rCa!_\fA\u0002\t=\u0007\u0003\u0002Be)nDq!!+\u0018\u0001\u0004\u0011\u0019\u000eE\u0003\u0003JR\u000bi+A\tfqB,7\r^\"p[BLG.Z%na2$BA!7\u0003`R1!1\u001cBq\u0005K\u0004RA!8U\u00033q1\u0001\u0011Bp\u0011\u0015\u0011\u0005\u00041\u0001D\u0011\u001d\tI\u000b\u0007a\u0001\u0005G\u0004RA!8U\u0003[Cq!!\t\u0019\u0001\u0004\u00119\u000fE\u0003\u0003^R\u000b)#A\bxS2d7i\\7qS2,\u0017*\u001c9m)\u0011\u0011iO!>\u0015\t\t=(1 \u000b\u0005\u0005c\u00149\u0010E\u0003\u0003tR\u000bIBD\u0002A\u0005kDQAQ\rA\u0002\rCq!!\t\u001a\u0001\u0004\u0011I\u0010E\u0003\u0003tR\u000b)\u0003C\u0004\u0002*f\u0001\rA!@\u0011\u000b\tMH+!,"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
