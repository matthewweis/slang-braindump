Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/parser/ParseTree$DotGenerator.class
  Last modified May 29, 2022; size 10789 bytes
  SHA-256 checksum 630954c3ea18f53548f9275b4bdc9b49e0b5cf6c8f37dfee6b5fc5cefa81ec5f
  Compiled from "ParseTree.scala"
public final class org.sireum.parser.ParseTree$DotGenerator implements org.sireum.RecordSig
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/parser/ParseTree$DotGenerator
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 5, methods: 29, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/parser/ParseTree$DotGenerator
    #2 = Class              #1            // org/sireum/parser/ParseTree$DotGenerator
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               org/sireum/RecordSig
    #6 = Class              #5            // org/sireum/RecordSig
    #7 = Utf8               ParseTree.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
   #14 = Class              #13           // org/sireum/$internal/PackageTrait$ISZ$
   #15 = Utf8               org/sireum/$internal/PackageTrait
   #16 = Class              #15           // org/sireum/$internal/PackageTrait
   #17 = Utf8               ISZ$
   #18 = Utf8               org/sireum/ST$Any
   #19 = Class              #18           // org/sireum/ST$Any
   #20 = Utf8               org/sireum/ST
   #21 = Class              #20           // org/sireum/ST
   #22 = Utf8               Any
   #23 = Utf8               org/sireum/ST$Any$
   #24 = Class              #23           // org/sireum/ST$Any$
   #25 = Utf8               Any$
   #26 = Utf8               org/sireum/ST$Arg
   #27 = Class              #26           // org/sireum/ST$Arg
   #28 = Utf8               Arg
   #29 = Utf8               org/sireum/ST$Templ
   #30 = Class              #29           // org/sireum/ST$Templ
   #31 = Utf8               Templ
   #32 = Utf8               org/sireum/ST$Templ$
   #33 = Class              #32           // org/sireum/ST$Templ$
   #34 = Utf8               Templ$
   #35 = Utf8               org/sireum/parser/ParseTree
   #36 = Class              #35           // org/sireum/parser/ParseTree
   #37 = Utf8               DotGenerator
   #38 = Utf8               org/sireum/parser/ParseTree$Leaf
   #39 = Class              #38           // org/sireum/parser/ParseTree$Leaf
   #40 = Utf8               Leaf
   #41 = Utf8               org/sireum/parser/ParseTree$Node
   #42 = Class              #41           // org/sireum/parser/ParseTree$Node
   #43 = Utf8               Node
   #44 = Utf8               hashCode
   #45 = Utf8               I
   #46 = Utf8               fresh
   #47 = Utf8               Lorg/sireum/Z;
   #48 = Utf8               nodes
   #49 = Utf8               Lorg/sireum/IS;
   #50 = Utf8               Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;
   #51 = Utf8               edges
   #52 = Utf8               org$sireum$RecordSig$$$isOwned
   #53 = Utf8               Z
   #54 = Utf8               $owned
   #55 = Utf8               ()Z
   #56 = Utf8               $owned$
   #57 = Utf8               (Lorg/sireum/RecordSig;)Z
   #58 = NameAndType        #56:#57       // $owned$:(Lorg/sireum/RecordSig;)Z
   #59 = InterfaceMethodref #6.#58        // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
   #60 = Utf8               this
   #61 = Utf8               Lorg/sireum/parser/ParseTree$DotGenerator;
   #62 = Utf8               $owned_$eq
   #63 = Utf8               (Z)Lorg/sireum/RecordSig;
   #64 = Utf8               b
   #65 = Utf8               $owned_$eq$
   #66 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #67 = NameAndType        #65:#66       // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #68 = InterfaceMethodref #6.#67        // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #69 = Utf8               hash
   #70 = Utf8               ()Lorg/sireum/Z;
   #71 = Utf8               hash$
   #72 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #73 = NameAndType        #71:#72       // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #74 = InterfaceMethodref #6.#73        // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #75 = Utf8               $cannotMixImmutableAndMutable
   #76 = Utf8               ()Lscala/runtime/Nothing$;
   #77 = Utf8               org/sireum/Mutable
   #78 = Class              #77           // org/sireum/Mutable
   #79 = Utf8               $cannotMixImmutableAndMutable$
   #80 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #81 = NameAndType        #79:#80       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #82 = InterfaceMethodref #78.#81       // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #83 = Utf8               $hasEquals
   #84 = Utf8               $hasEquals$
   #85 = Utf8               (Lorg/sireum/Mutable;)Z
   #86 = NameAndType        #84:#85       // $hasEquals$:(Lorg/sireum/Mutable;)Z
   #87 = InterfaceMethodref #78.#86       // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
   #88 = Utf8               $hasString
   #89 = Utf8               $hasString$
   #90 = NameAndType        #89:#85       // $hasString$:(Lorg/sireum/Mutable;)Z
   #91 = InterfaceMethodref #78.#90       // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
   #92 = NameAndType        #52:#53       // org$sireum$RecordSig$$$isOwned:Z
   #93 = Fieldref           #2.#92        // org/sireum/parser/ParseTree$DotGenerator.org$sireum$RecordSig$$$isOwned:Z
   #94 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
   #95 = Utf8               (Z)V
   #96 = Utf8               x$1
   #97 = Utf8               toString
   #98 = Utf8               ()Ljava/lang/String;
   #99 = NameAndType        #88:#55       // $hasString:()Z
  #100 = Methodref          #2.#99        // org/sireum/parser/ParseTree$DotGenerator.$hasString:()Z
  #101 = Utf8               string$
  #102 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
  #103 = NameAndType        #101:#102     // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #104 = InterfaceMethodref #6.#103       // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
  #105 = Utf8               DotGenerator()
  #106 = String             #105          // DotGenerator()
  #107 = Utf8               java/lang/String
  #108 = Class              #107          // java/lang/String
  #109 = Utf8               string
  #110 = Utf8               org/sireum/String$
  #111 = Class              #110          // org/sireum/String$
  #112 = Utf8               MODULE$
  #113 = Utf8               Lorg/sireum/String$;
  #114 = NameAndType        #112:#113     // MODULE$:Lorg/sireum/String$;
  #115 = Fieldref           #111.#114     // org/sireum/String$.MODULE$:Lorg/sireum/String$;
  #116 = NameAndType        #97:#98       // toString:()Ljava/lang/String;
  #117 = Methodref          #2.#116       // org/sireum/parser/ParseTree$DotGenerator.toString:()Ljava/lang/String;
  #118 = Utf8               apply
  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #120 = NameAndType        #118:#119     // apply:(Ljava/lang/String;)Ljava/lang/String;
  #121 = Methodref          #111.#120     // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #122 = Utf8               ()I
  #123 = NameAndType        #44:#45       // hashCode:I
  #124 = Fieldref           #2.#123       // org/sireum/parser/ParseTree$DotGenerator.hashCode:I
  #125 = Utf8               equals
  #126 = Utf8               (Ljava/lang/Object;)Z
  #127 = Utf8               o
  #128 = NameAndType        #83:#55       // $hasEquals:()Z
  #129 = Methodref          #2.#128       // org/sireum/parser/ParseTree$DotGenerator.$hasEquals:()Z
  #130 = NameAndType        #125:#126     // equals:(Ljava/lang/Object;)Z
  #131 = Methodref          #4.#130       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #132 = Utf8               Ljava/lang/Object;
  #133 = Utf8               $content
  #134 = Utf8               ()Lscala/collection/immutable/Seq;
  #135 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #136 = Utf8               scala/package$
  #137 = Class              #136          // scala/package$
  #138 = Utf8               Lscala/package$;
  #139 = NameAndType        #112:#138     // MODULE$:Lscala/package$;
  #140 = Fieldref           #137.#139     // scala/package$.MODULE$:Lscala/package$;
  #141 = Utf8               Seq
  #142 = Utf8               ()Lscala/collection/immutable/Seq$;
  #143 = NameAndType        #141:#142     // Seq:()Lscala/collection/immutable/Seq$;
  #144 = Methodref          #137.#143     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #145 = Utf8               scala/runtime/ScalaRunTime$
  #146 = Class              #145          // scala/runtime/ScalaRunTime$
  #147 = Utf8               Lscala/runtime/ScalaRunTime$;
  #148 = NameAndType        #112:#147     // MODULE$:Lscala/runtime/ScalaRunTime$;
  #149 = Fieldref           #146.#148     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #150 = Utf8               scala/Tuple2
  #151 = Class              #150          // scala/Tuple2
  #152 = Utf8               type
  #153 = String             #152          // type
  #154 = Utf8               List
  #155 = Utf8               ()Lscala/collection/immutable/List$;
  #156 = NameAndType        #154:#155     // List:()Lscala/collection/immutable/List$;
  #157 = Methodref          #137.#156     // scala/package$.List:()Lscala/collection/immutable/List$;
  #158 = Utf8               org
  #159 = String             #158          // org
  #160 = Utf8               sireum
  #161 = String             #160          // sireum
  #162 = Utf8               parser
  #163 = String             #162          // parser
  #164 = String             #37           // DotGenerator
  #165 = Utf8               [Ljava/lang/Object;
  #166 = Class              #165          // "[Ljava/lang/Object;"
  #167 = Utf8               wrapRefArray
  #168 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #169 = NameAndType        #167:#168     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #170 = Methodref          #146.#169     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #171 = Utf8               scala/collection/immutable/List$
  #172 = Class              #171          // scala/collection/immutable/List$
  #173 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #174 = NameAndType        #118:#173     // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #175 = Methodref          #172.#174     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #176 = Utf8               <init>
  #177 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #178 = NameAndType        #176:#177     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #179 = Methodref          #151.#178     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #180 = Utf8               scala/collection/immutable/Seq$
  #181 = Class              #180          // scala/collection/immutable/Seq$
  #182 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #183 = NameAndType        #118:#182     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #184 = Methodref          #181.#183     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #185 = Utf8               scala/collection/immutable/Seq
  #186 = Class              #185          // scala/collection/immutable/Seq
  #187 = Utf8               $clone
  #188 = Utf8               ()Lorg/sireum/parser/ParseTree$DotGenerator;
  #189 = Utf8               ()V
  #190 = NameAndType        #176:#189     // "<init>":()V
  #191 = Methodref          #2.#190       // org/sireum/parser/ParseTree$DotGenerator."<init>":()V
  #192 = Utf8               org/sireum/helper$
  #193 = Class              #192          // org/sireum/helper$
  #194 = Utf8               Lorg/sireum/helper$;
  #195 = NameAndType        #112:#194     // MODULE$:Lorg/sireum/helper$;
  #196 = Fieldref           #193.#195     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #197 = NameAndType        #46:#70       // fresh:()Lorg/sireum/Z;
  #198 = Methodref          #2.#197       // org/sireum/parser/ParseTree$DotGenerator.fresh:()Lorg/sireum/Z;
  #199 = Utf8               cloneAssign
  #200 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #201 = NameAndType        #199:#200     // cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #202 = Methodref          #193.#201     // org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
  #203 = Utf8               org/sireum/Z
  #204 = Class              #203          // org/sireum/Z
  #205 = Utf8               fresh_$eq
  #206 = Utf8               (Lorg/sireum/Z;)V
  #207 = NameAndType        #205:#206     // fresh_$eq:(Lorg/sireum/Z;)V
  #208 = Methodref          #2.#207       // org/sireum/parser/ParseTree$DotGenerator.fresh_$eq:(Lorg/sireum/Z;)V
  #209 = Utf8               ()Lorg/sireum/IS;
  #210 = NameAndType        #48:#209      // nodes:()Lorg/sireum/IS;
  #211 = Methodref          #2.#210       // org/sireum/parser/ParseTree$DotGenerator.nodes:()Lorg/sireum/IS;
  #212 = Utf8               org/sireum/IS
  #213 = Class              #212          // org/sireum/IS
  #214 = Utf8               nodes_$eq
  #215 = Utf8               (Lorg/sireum/IS;)V
  #216 = NameAndType        #214:#215     // nodes_$eq:(Lorg/sireum/IS;)V
  #217 = Methodref          #2.#216       // org/sireum/parser/ParseTree$DotGenerator.nodes_$eq:(Lorg/sireum/IS;)V
  #218 = NameAndType        #51:#209      // edges:()Lorg/sireum/IS;
  #219 = Methodref          #2.#218       // org/sireum/parser/ParseTree$DotGenerator.edges:()Lorg/sireum/IS;
  #220 = Utf8               edges_$eq
  #221 = NameAndType        #220:#215     // edges_$eq:(Lorg/sireum/IS;)V
  #222 = Methodref          #2.#221       // org/sireum/parser/ParseTree$DotGenerator.edges_$eq:(Lorg/sireum/IS;)V
  #223 = Utf8               r
  #224 = NameAndType        #46:#47       // fresh:Lorg/sireum/Z;
  #225 = Fieldref           #2.#224       // org/sireum/parser/ParseTree$DotGenerator.fresh:Lorg/sireum/Z;
  #226 = Utf8               ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;
  #227 = NameAndType        #48:#49       // nodes:Lorg/sireum/IS;
  #228 = Fieldref           #2.#227       // org/sireum/parser/ParseTree$DotGenerator.nodes:Lorg/sireum/IS;
  #229 = Utf8               (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;)V
  #230 = NameAndType        #51:#49       // edges:Lorg/sireum/IS;
  #231 = Fieldref           #2.#230       // org/sireum/parser/ParseTree$DotGenerator.edges:Lorg/sireum/IS;
  #232 = Utf8               toDot
  #233 = Utf8               (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #234 = Utf8               root
  #235 = Utf8               rec$1
  #236 = NameAndType        #235:#233     // rec$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #237 = Methodref          #2.#236       // org/sireum/parser/ParseTree$DotGenerator.rec$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
  #238 = Utf8               org/sireum/ST$
  #239 = Class              #238          // org/sireum/ST$
  #240 = Utf8               Lorg/sireum/ST$;
  #241 = NameAndType        #112:#240     // MODULE$:Lorg/sireum/ST$;
  #242 = Fieldref           #239.#241     // org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
  #243 = Utf8               digraph G {\n            |  node [shape = \"rect\"]\n            |\n            |
  #244 = String             #243          // digraph G {\n            |  node [shape = \"rect\"]\n            |\n            |
  #245 = Utf8               \n            |\n            |
  #246 = String             #245          // \n            |\n            |
  #247 = Utf8               \n            |}
  #248 = String             #247          // \n            |}
  #249 = Utf8               Lorg/sireum/ST$Templ$;
  #250 = NameAndType        #112:#249     // MODULE$:Lorg/sireum/ST$Templ$;
  #251 = Fieldref           #33.#250      // org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
  #252 = Utf8               elements
  #253 = NameAndType        #252:#134     // elements:()Lscala/collection/immutable/Seq;
  #254 = Methodref          #213.#253     // org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
  #255 = Utf8               \n
  #256 = String             #255          // \n
  #257 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #258 = NameAndType        #118:#257     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #259 = Methodref          #33.#258      // org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
  #260 = Utf8                       st\"\"\"digraph G {\n            |  node [shape = \"rect\"]\n            |\n            |  ${(nodes, \"\\n\")}\n            |\n            |  ${(edges, \"\\n\")}\n            |}\"\"\"
  #261 = String             #260          //         st\"\"\"digraph G {\n            |  node [shape = \"rect\"]\n            |\n            |  ${(nodes, \"\\n\")}\n            |\n            |  ${(edges, \"\\n\")}\n            |}\"\"\"
  #262 = Utf8               (Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #263 = NameAndType        #118:#262     // apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #264 = Methodref          #239.#263     // org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
  #265 = Utf8               Lorg/sireum/ST;
  #266 = Utf8               Lorg/sireum/parser/ParseTree;
  #267 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #268 = NameAndType        #62:#63       // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #269 = Methodref          #2.#268       // org/sireum/parser/ParseTree$DotGenerator.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #270 = Utf8               ()Ljava/lang/Object;
  #271 = NameAndType        #187:#188     // $clone:()Lorg/sireum/parser/ParseTree$DotGenerator;
  #272 = Methodref          #2.#271       // org/sireum/parser/ParseTree$DotGenerator.$clone:()Lorg/sireum/parser/ParseTree$DotGenerator;
  #273 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #274 = Utf8               $anonfun$toDot$1
  #275 = Utf8               (Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)V
  #276 = Utf8               $this
  #277 = Utf8               name$1
  #278 = Utf8               child
  #279 = Utf8
  #280 = String             #279          //
  #281 = Utf8                ->
  #282 = String             #281          //  ->
  #283 = Utf8                                              st\"\"\"$name -> $childName\"\"\"
  #284 = String             #283          //                                st\"\"\"$name -> $childName\"\"\"
  #285 = Utf8               $colon$plus
  #286 = Utf8               (Ljava/lang/Object;)Lorg/sireum/IS;
  #287 = NameAndType        #285:#286     // $colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #288 = Methodref          #213.#287     // org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
  #289 = Utf8               childName
  #290 = Utf8               tree
  #291 = Utf8               org/sireum/Z$
  #292 = Class              #291          // org/sireum/Z$
  #293 = Utf8               Lorg/sireum/Z$;
  #294 = NameAndType        #112:#293     // MODULE$:Lorg/sireum/Z$;
  #295 = Fieldref           #292.#294     // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
  #296 = Utf8               (I)Lorg/sireum/Z;
  #297 = NameAndType        #118:#296     // apply:(I)Lorg/sireum/Z;
  #298 = Methodref          #292.#297     // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
  #299 = Utf8               $plus
  #300 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
  #301 = NameAndType        #299:#300     // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #302 = InterfaceMethodref #204.#301     // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
  #303 = Utf8               scala/StringContext$
  #304 = Class              #303          // scala/StringContext$
  #305 = Utf8               Lscala/StringContext$;
  #306 = NameAndType        #112:#305     // MODULE$:Lscala/StringContext$;
  #307 = Fieldref           #304.#306     // scala/StringContext$.MODULE$:Lscala/StringContext$;
  #308 = Utf8               n
  #309 = String             #308          // n
  #310 = Utf8               processEscapes
  #311 = NameAndType        #310:#119     // processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #312 = Methodref          #304.#311     // scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
  #313 = Utf8               Lorg/sireum/ST$Any$;
  #314 = NameAndType        #112:#313     // MODULE$:Lorg/sireum/ST$Any$;
  #315 = Fieldref           #24.#314      // org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
  #316 = Utf8               org/sireum/$internal/Option$
  #317 = Class              #316          // org/sireum/$internal/Option$
  #318 = Utf8               Lorg/sireum/$internal/Option$;
  #319 = NameAndType        #112:#318     // MODULE$:Lorg/sireum/$internal/Option$;
  #320 = Fieldref           #317.#319     // org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
  #321 = NameAndType        #118:#200     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #322 = Methodref          #317.#321     // org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #323 = Utf8               genericWrapArray
  #324 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #325 = NameAndType        #323:#324     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #326 = Methodref          #146.#325     // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #327 = Utf8               (Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #328 = NameAndType        #118:#327     // apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #329 = Methodref          #24.#328      // org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
  #330 = Utf8                                  st\"n$fresh\"
  #331 = String             #330          //                    st\"n$fresh\"
  #332 = Utf8                [label = \"
  #333 = String             #332          //  [label = \"
  #334 = Utf8               \"]
  #335 = String             #334          // \"]
  #336 = Utf8               org/sireum/String
  #337 = Class              #336          // org/sireum/String
  #338 = Utf8               ruleName
  #339 = NameAndType        #338:#98      // ruleName:()Ljava/lang/String;
  #340 = Methodref          #42.#339      // org/sireum/parser/ParseTree$Node.ruleName:()Ljava/lang/String;
  #341 = Utf8               (Ljava/lang/String;)V
  #342 = NameAndType        #176:#341     // "<init>":(Ljava/lang/String;)V
  #343 = Methodref          #337.#342     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #344 = Utf8                                            st\"\"\"$name [label = \"${tree.ruleName}\"]\"\"\"
  #345 = String             #344          //                              st\"\"\"$name [label = \"${tree.ruleName}\"]\"\"\"
  #346 = Utf8               children
  #347 = NameAndType        #346:#209     // children:()Lorg/sireum/IS;
  #348 = Methodref          #42.#347      // org/sireum/parser/ParseTree$Node.children:()Lorg/sireum/IS;
  #349 = MethodType         #200          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #350 = Utf8               $anonfun$toDot$1$adapted
  #351 = Utf8               (Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  #352 = NameAndType        #350:#351     // $anonfun$toDot$1$adapted:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  #353 = Methodref          #2.#352       // org/sireum/parser/ParseTree$DotGenerator.$anonfun$toDot$1$adapted:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  #354 = MethodHandle       6:#353        // REF_invokeStatic org/sireum/parser/ParseTree$DotGenerator.$anonfun$toDot$1$adapted:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  #355 = Utf8               (Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  #356 = MethodType         #355          //  (Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  #357 = Integer            5
  #358 = Integer            1
  #359 = Utf8               java/lang/invoke/LambdaMetafactory
  #360 = Class              #359          // java/lang/invoke/LambdaMetafactory
  #361 = Utf8               altMetafactory
  #362 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #363 = NameAndType        #361:#362     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #364 = Methodref          #360.#363     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #365 = MethodHandle       6:#364        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #366 = Utf8               (Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;)Lscala/Function1;
  #367 = NameAndType        #118:#366     // apply:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;)Lscala/Function1;
  #368 = InvokeDynamic      #0:#367       // #0:apply:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;)Lscala/Function1;
  #369 = Utf8               foreach
  #370 = Utf8               (Lscala/Function1;)V
  #371 = NameAndType        #369:#370     // foreach:(Lscala/Function1;)V
  #372 = Methodref          #213.#371     // org/sireum/IS.foreach:(Lscala/Function1;)V
  #373 = Utf8               scala/runtime/BoxedUnit
  #374 = Class              #373          // scala/runtime/BoxedUnit
  #375 = Utf8               UNIT
  #376 = Utf8               Lscala/runtime/BoxedUnit;
  #377 = NameAndType        #375:#376     // UNIT:Lscala/runtime/BoxedUnit;
  #378 = Fieldref           #374.#377     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #379 = Utf8                [label =
  #380 = String             #379          //  [label =
  #381 = Utf8               ]
  #382 = String             #381          // ]
  #383 = Utf8               toST
  #384 = Utf8               ()Lorg/sireum/ST;
  #385 = NameAndType        #383:#384     // toST:()Lorg/sireum/ST;
  #386 = Methodref          #39.#385      // org/sireum/parser/ParseTree$Leaf.toST:()Lorg/sireum/ST;
  #387 = Utf8                                            st\"\"\"$name [label = ${tree.toST}]\"\"\"
  #388 = String             #387          //                              st\"\"\"$name [label = ${tree.toST}]\"\"\"
  #389 = Utf8               scala/MatchError
  #390 = Class              #389          // scala/MatchError
  #391 = Utf8               (Ljava/lang/Object;)V
  #392 = NameAndType        #176:#391     // "<init>":(Ljava/lang/Object;)V
  #393 = Methodref          #390.#392     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #394 = Utf8               name
  #395 = Methodref          #4.#190       // java/lang/Object."<init>":()V
  #396 = Utf8               $init$
  #397 = Utf8               (Lorg/sireum/Mutable;)V
  #398 = NameAndType        #396:#397     // $init$:(Lorg/sireum/Mutable;)V
  #399 = InterfaceMethodref #78.#398      // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #400 = Utf8               (Lorg/sireum/RecordSig;)V
  #401 = NameAndType        #396:#400     // $init$:(Lorg/sireum/RecordSig;)V
  #402 = InterfaceMethodref #6.#401       // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #403 = NameAndType        #44:#122      // hashCode:()I
  #404 = Methodref          #4.#403       // java/lang/Object.hashCode:()I
  #405 = Utf8               getClass
  #406 = Utf8               ()Ljava/lang/Class;
  #407 = NameAndType        #405:#406     // getClass:()Ljava/lang/Class;
  #408 = Methodref          #2.#407       // org/sireum/parser/ParseTree$DotGenerator.getClass:()Ljava/lang/Class;
  #409 = Utf8               java/lang/Class
  #410 = Class              #409          // java/lang/Class
  #411 = Utf8               getName
  #412 = NameAndType        #411:#98      // getName:()Ljava/lang/String;
  #413 = Methodref          #410.#412     // java/lang/Class.getName:()Ljava/lang/String;
  #414 = Methodref          #108.#403     // java/lang/String.hashCode:()I
  #415 = Utf8               org/sireum/package$
  #416 = Class              #415          // org/sireum/package$
  #417 = Utf8               Lorg/sireum/package$;
  #418 = NameAndType        #112:#417     // MODULE$:Lorg/sireum/package$;
  #419 = Fieldref           #416.#418     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #420 = Utf8               ISZ
  #421 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #422 = NameAndType        #420:#421     // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #423 = Methodref          #416.#422     // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
  #424 = Utf8               scala/collection/immutable/Nil$
  #425 = Class              #424          // scala/collection/immutable/Nil$
  #426 = Utf8               Lscala/collection/immutable/Nil$;
  #427 = NameAndType        #112:#426     // MODULE$:Lscala/collection/immutable/Nil$;
  #428 = Fieldref           #425.#427     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #429 = Utf8               (Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #430 = NameAndType        #118:#429     // apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #431 = Methodref          #14.#430      // org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
  #432 = NameAndType        #274:#275     // $anonfun$toDot$1:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)V
  #433 = Methodref          #2.#432       // org/sireum/parser/ParseTree$DotGenerator.$anonfun$toDot$1:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)V
  #434 = Utf8               $deserializeLambda$
  #435 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #436 = Utf8               scala/runtime/LambdaDeserialize
  #437 = Class              #436          // scala/runtime/LambdaDeserialize
  #438 = Utf8               bootstrap
  #439 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #440 = NameAndType        #438:#439     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #441 = Methodref          #437.#440     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #442 = MethodHandle       6:#441        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #443 = Utf8               lambdaDeserialize
  #444 = NameAndType        #443:#435     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #445 = InvokeDynamic      #1:#444       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #446 = Utf8               Signature
  #447 = Utf8               Code
  #448 = Utf8               LineNumberTable
  #449 = Utf8               LocalVariableTable
  #450 = Utf8               MethodParameters
  #451 = Utf8               StackMapTable
  #452 = Utf8               InnerClasses
  #453 = Utf8               SourceFile
  #454 = Utf8               BootstrapMethods
  #455 = Utf8               ScalaInlineInfo
  #456 = Utf8               Scala
{
  private final int hashCode;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private org.sireum.Z fresh;
    descriptor: Lorg/sireum/Z;
    flags: (0x0002) ACC_PRIVATE

  private org.sireum.IS<org.sireum.Z, org.sireum.ST> nodes;
    descriptor: Lorg/sireum/IS;
    flags: (0x0002) ACC_PRIVATE
    Signature: #50                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;

  private org.sireum.IS<org.sireum.Z, org.sireum.ST> edges;
    descriptor: Lorg/sireum/IS;
    flags: (0x0002) ACC_PRIVATE
    Signature: #50                          // Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #59                 // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #68                 // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #74                 // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #82                 // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #87                 // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #91                 // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #93                 // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #93                 // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #104                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          16
        14: ldc           #106                // String DotGenerator()
        16: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #100                // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #104                // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #115                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #117                // Method toString:()Ljava/lang/String;
        21: invokevirtual #121                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #124                // Field hashCode:I
         4: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #129                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          44
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          44
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/parser/ParseTree$DotGenerator
        30: ifeq          38
        33: iconst_1
        34: istore_2
        35: goto          43
        38: goto          41
        41: iconst_0
        42: ireturn
        43: iload_2
        44: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 13
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/parser/ParseTree$DotGenerator, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/parser/ParseTree$DotGenerator, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0      45     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_1
        10: anewarray     #151                // class scala/Tuple2
        13: dup
        14: iconst_0
        15: new           #151                // class scala/Tuple2
        18: dup
        19: ldc           #153                // String type
        21: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        24: invokevirtual #157                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        27: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        30: iconst_4
        31: anewarray     #108                // class java/lang/String
        34: dup
        35: iconst_0
        36: ldc           #159                // String org
        38: aastore
        39: dup
        40: iconst_1
        41: ldc           #161                // String sireum
        43: aastore
        44: dup
        45: iconst_2
        46: ldc           #163                // String parser
        48: aastore
        49: dup
        50: iconst_3
        51: ldc           #164                // String DotGenerator
        53: aastore
        54: checkcast     #166                // class "[Ljava/lang/Object;"
        57: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        60: invokevirtual #175                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        63: invokespecial #179                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        66: aastore
        67: checkcast     #166                // class "[Ljava/lang/Object;"
        70: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        73: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        76: checkcast     #186                // class scala/collection/immutable/Seq
        79: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      80     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
    Signature: #135                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.parser.ParseTree$DotGenerator $clone();
    descriptor: ()Lorg/sireum/parser/ParseTree$DotGenerator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #2                  // class org/sireum/parser/ParseTree$DotGenerator
         3: dup
         4: invokespecial #191                // Method "<init>":()V
         7: astore_1
         8: aload_1
         9: getstatic     #196                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        12: aload_0
        13: invokevirtual #198                // Method fresh:()Lorg/sireum/Z;
        16: invokevirtual #202                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        19: checkcast     #204                // class org/sireum/Z
        22: invokevirtual #208                // Method fresh_$eq:(Lorg/sireum/Z;)V
        25: aload_1
        26: getstatic     #196                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        29: aload_0
        30: invokevirtual #211                // Method nodes:()Lorg/sireum/IS;
        33: invokevirtual #202                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        36: checkcast     #213                // class org/sireum/IS
        39: invokevirtual #217                // Method nodes_$eq:(Lorg/sireum/IS;)V
        42: aload_1
        43: getstatic     #196                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
        46: aload_0
        47: invokevirtual #219                // Method edges:()Lorg/sireum/IS;
        50: invokevirtual #202                // Method org/sireum/helper$.cloneAssign:(Ljava/lang/Object;)Ljava/lang/Object;
        53: checkcast     #213                // class org/sireum/IS
        56: invokevirtual #222                // Method edges_$eq:(Lorg/sireum/IS;)V
        59: aload_1
        60: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      52     1     r   Lorg/sireum/parser/ParseTree$DotGenerator;
            0      61     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public org.sireum.Z fresh();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #225                // Field fresh:Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public void fresh_$eq(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #225                // Field fresh:Lorg/sireum/Z;
         5: return
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0       6     1   x$1   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.IS<org.sireum.Z, org.sireum.ST> nodes();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #228                // Field nodes:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
    Signature: #226                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;

  public void nodes_$eq(org.sireum.IS<org.sireum.Z, org.sireum.ST>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #228                // Field nodes:Lorg/sireum/IS;
         5: return
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0       6     1   x$1   Lorg/sireum/IS;
    Signature: #229                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.IS<org.sireum.Z, org.sireum.ST> edges();
    descriptor: ()Lorg/sireum/IS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #231                // Field edges:Lorg/sireum/IS;
         4: areturn
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
    Signature: #226                         // ()Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;

  public void edges_$eq(org.sireum.IS<org.sireum.Z, org.sireum.ST>);
    descriptor: (Lorg/sireum/IS;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #231                // Field edges:Lorg/sireum/IS;
         5: return
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0       6     1   x$1   Lorg/sireum/IS;
    Signature: #229                         // (Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/ST;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.sireum.ST toDot(org.sireum.parser.ParseTree);
    descriptor: (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=11, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #237                // Method rec$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
         5: pop
         6: getstatic     #242                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
         9: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        12: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        15: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        18: iconst_3
        19: anewarray     #108                // class java/lang/String
        22: dup
        23: iconst_0
        24: ldc           #244                // String digraph G {\n            |  node [shape = \"rect\"]\n            |\n            |
        26: aastore
        27: dup
        28: iconst_1
        29: ldc           #246                // String \n            |\n            |
        31: aastore
        32: dup
        33: iconst_2
        34: ldc           #248                // String \n            |}
        36: aastore
        37: checkcast     #166                // class "[Ljava/lang/Object;"
        40: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        43: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        46: checkcast     #186                // class scala/collection/immutable/Seq
        49: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        52: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        55: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        58: iconst_2
        59: anewarray     #27                 // class org/sireum/ST$Arg
        62: dup
        63: iconst_0
        64: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        67: aload_0
        68: invokevirtual #211                // Method nodes:()Lorg/sireum/IS;
        71: invokevirtual #254                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        74: getstatic     #115                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        77: ldc_w         #256                // String \n
        80: invokevirtual #121                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        83: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
        86: aastore
        87: dup
        88: iconst_1
        89: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        92: aload_0
        93: invokevirtual #219                // Method edges:()Lorg/sireum/IS;
        96: invokevirtual #254                // Method org/sireum/IS.elements:()Lscala/collection/immutable/Seq;
        99: getstatic     #115                // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
       102: ldc_w         #256                // String \n
       105: invokevirtual #121                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
       108: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       111: aastore
       112: checkcast     #166                // class "[Ljava/lang/Object;"
       115: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       118: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       121: checkcast     #186                // class scala/collection/immutable/Seq
       124: ldc_w         #261                // String         st\"\"\"digraph G {\n            |  node [shape = \"rect\"]\n            |\n            |  ${(nodes, \"\\n\")}\n            |\n            |  ${(edges, \"\\n\")}\n            |}\"\"\"
       127: invokevirtual #264                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       130: astore_2
       131: aload_2
       132: areturn
      LineNumberTable:
        line 86: 0
        line 88: 6
        line 91: 29
        line 93: 34
        line 88: 49
        line 91: 67
        line 88: 89
        line 93: 92
        line 88: 124
        line 95: 131
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          131       2     2     r   Lorg/sireum/ST;
            0     133     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0     133     1  root   Lorg/sireum/parser/ParseTree;
    MethodParameters:
      Name                           Flags
      root                           final

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #269                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #272                // Method $clone:()Lorg/sireum/parser/ParseTree$DotGenerator;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #272                // Method $clone:()Lorg/sireum/parser/ParseTree$DotGenerator;
         4: areturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public static final void $anonfun$toDot$1(org.sireum.parser.ParseTree$DotGenerator, org.sireum.ST, org.sireum.parser.ParseTree);
    descriptor: (Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=16, locals=4, args_size=3
         0: aload_0
         1: aload_2
         2: invokespecial #237                // Method rec$1:(Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
         5: astore_3
         6: aload_0
         7: aload_0
         8: invokevirtual #219                // Method edges:()Lorg/sireum/IS;
        11: getstatic     #242                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
        14: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        20: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        23: iconst_3
        24: anewarray     #108                // class java/lang/String
        27: dup
        28: iconst_0
        29: ldc_w         #280                // String
        32: aastore
        33: dup
        34: iconst_1
        35: ldc_w         #282                // String  ->
        38: aastore
        39: dup
        40: iconst_2
        41: ldc_w         #280                // String
        44: aastore
        45: checkcast     #166                // class "[Ljava/lang/Object;"
        48: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        51: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        54: checkcast     #186                // class scala/collection/immutable/Seq
        57: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        60: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        63: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        66: iconst_2
        67: anewarray     #27                 // class org/sireum/ST$Arg
        70: dup
        71: iconst_0
        72: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
        75: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        78: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        81: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        84: iconst_1
        85: anewarray     #21                 // class org/sireum/ST
        88: dup
        89: iconst_0
        90: aload_1
        91: aastore
        92: checkcast     #166                // class "[Ljava/lang/Object;"
        95: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        98: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       101: checkcast     #186                // class scala/collection/immutable/Seq
       104: ldc_w         #280                // String
       107: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       110: aastore
       111: dup
       112: iconst_1
       113: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
       116: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       119: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       122: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       125: iconst_1
       126: anewarray     #21                 // class org/sireum/ST
       129: dup
       130: iconst_0
       131: aload_3
       132: aastore
       133: checkcast     #166                // class "[Ljava/lang/Object;"
       136: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       139: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       142: checkcast     #186                // class scala/collection/immutable/Seq
       145: ldc_w         #280                // String
       148: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       151: aastore
       152: checkcast     #166                // class "[Ljava/lang/Object;"
       155: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       158: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       161: checkcast     #186                // class scala/collection/immutable/Seq
       164: ldc_w         #284                // String                                st\"\"\"$name -> $childName\"\"\"
       167: invokevirtual #264                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       170: invokevirtual #288                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       173: invokevirtual #222                // Method edges_$eq:(Lorg/sireum/IS;)V
       176: return
      LineNumberTable:
        line 77: 0
        line 78: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6     170     3 childName   Lorg/sireum/ST;
            0     177     0 $this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0     177     1 name$1   Lorg/sireum/ST;
            0     177     2 child   Lorg/sireum/parser/ParseTree;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      name$1                         final
      child                          final

  private final org.sireum.ST rec$1(org.sireum.parser.ParseTree);
    descriptor: (Lorg/sireum/parser/ParseTree;)Lorg/sireum/ST;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=19, locals=7, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #198                // Method fresh:()Lorg/sireum/Z;
         5: getstatic     #295                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         8: iconst_1
         9: invokevirtual #298                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        12: invokeinterface #302,  2          // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        17: invokevirtual #208                // Method fresh_$eq:(Lorg/sireum/Z;)V
        20: getstatic     #242                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
        23: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        26: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        29: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        32: iconst_2
        33: anewarray     #108                // class java/lang/String
        36: dup
        37: iconst_0
        38: getstatic     #307                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        41: ldc_w         #309                // String n
        44: invokevirtual #312                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        47: aastore
        48: dup
        49: iconst_1
        50: getstatic     #307                // Field scala/StringContext$.MODULE$:Lscala/StringContext$;
        53: ldc_w         #280                // String
        56: invokevirtual #312                // Method scala/StringContext$.processEscapes:(Ljava/lang/String;)Ljava/lang/String;
        59: aastore
        60: checkcast     #166                // class "[Ljava/lang/Object;"
        63: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        66: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        69: checkcast     #186                // class scala/collection/immutable/Seq
        72: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        75: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        78: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        81: iconst_1
        82: anewarray     #27                 // class org/sireum/ST$Arg
        85: dup
        86: iconst_0
        87: getstatic     #315                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
        90: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
        93: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        96: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        99: iconst_1
       100: anewarray     #4                  // class java/lang/Object
       103: dup
       104: iconst_0
       105: getstatic     #320                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       108: aload_0
       109: invokevirtual #198                // Method fresh:()Lorg/sireum/Z;
       112: invokevirtual #322                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       115: aastore
       116: invokevirtual #326                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       119: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       122: checkcast     #186                // class scala/collection/immutable/Seq
       125: ldc_w         #280                // String
       128: invokevirtual #329                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       131: aastore
       132: checkcast     #166                // class "[Ljava/lang/Object;"
       135: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       138: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       141: checkcast     #186                // class scala/collection/immutable/Seq
       144: ldc_w         #331                // String                    st\"n$fresh\"
       147: invokevirtual #264                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       150: astore_3
       151: aload_1
       152: astore        4
       154: aload         4
       156: instanceof    #42                 // class org/sireum/parser/ParseTree$Node
       159: ifeq          375
       162: aload         4
       164: checkcast     #42                 // class org/sireum/parser/ParseTree$Node
       167: astore        5
       169: aload_0
       170: aload_0
       171: invokevirtual #211                // Method nodes:()Lorg/sireum/IS;
       174: getstatic     #242                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
       177: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       180: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       183: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       186: iconst_3
       187: anewarray     #108                // class java/lang/String
       190: dup
       191: iconst_0
       192: ldc_w         #280                // String
       195: aastore
       196: dup
       197: iconst_1
       198: ldc_w         #333                // String  [label = \"
       201: aastore
       202: dup
       203: iconst_2
       204: ldc_w         #335                // String \"]
       207: aastore
       208: checkcast     #166                // class "[Ljava/lang/Object;"
       211: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       214: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       217: checkcast     #186                // class scala/collection/immutable/Seq
       220: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       223: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       226: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       229: iconst_2
       230: anewarray     #27                 // class org/sireum/ST$Arg
       233: dup
       234: iconst_0
       235: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
       238: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       241: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       244: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       247: iconst_1
       248: anewarray     #21                 // class org/sireum/ST
       251: dup
       252: iconst_0
       253: aload_3
       254: aastore
       255: checkcast     #166                // class "[Ljava/lang/Object;"
       258: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       261: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       264: checkcast     #186                // class scala/collection/immutable/Seq
       267: ldc_w         #280                // String
       270: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       273: aastore
       274: dup
       275: iconst_1
       276: getstatic     #315                // Field org/sireum/ST$Any$.MODULE$:Lorg/sireum/ST$Any$;
       279: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       282: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       285: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       288: iconst_1
       289: anewarray     #4                  // class java/lang/Object
       292: dup
       293: iconst_0
       294: getstatic     #320                // Field org/sireum/$internal/Option$.MODULE$:Lorg/sireum/$internal/Option$;
       297: new           #337                // class org/sireum/String
       300: dup
       301: aload         5
       303: invokevirtual #340                // Method org/sireum/parser/ParseTree$Node.ruleName:()Ljava/lang/String;
       306: invokespecial #343                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
       309: invokevirtual #322                // Method org/sireum/$internal/Option$.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       312: aastore
       313: invokevirtual #326                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       316: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       319: checkcast     #186                // class scala/collection/immutable/Seq
       322: ldc_w         #280                // String
       325: invokevirtual #329                // Method org/sireum/ST$Any$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Any;
       328: aastore
       329: checkcast     #166                // class "[Ljava/lang/Object;"
       332: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       335: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       338: checkcast     #186                // class scala/collection/immutable/Seq
       341: ldc_w         #345                // String                              st\"\"\"$name [label = \"${tree.ruleName}\"]\"\"\"
       344: invokevirtual #264                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       347: invokevirtual #288                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       350: invokevirtual #217                // Method nodes_$eq:(Lorg/sireum/IS;)V
       353: aload         5
       355: invokevirtual #348                // Method org/sireum/parser/ParseTree$Node.children:()Lorg/sireum/IS;
       358: aload_0
       359: aload_3
       360: invokedynamic #368,  0            // InvokeDynamic #0:apply:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;)Lscala/Function1;
       365: invokevirtual #372                // Method org/sireum/IS.foreach:(Lscala/Function1;)V
       368: getstatic     #378                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       371: astore_2
       372: goto          587
       375: goto          378
       378: aload         4
       380: instanceof    #39                 // class org/sireum/parser/ParseTree$Leaf
       383: ifeq          574
       386: aload         4
       388: checkcast     #39                 // class org/sireum/parser/ParseTree$Leaf
       391: astore        6
       393: aload_0
       394: aload_0
       395: invokevirtual #211                // Method nodes:()Lorg/sireum/IS;
       398: getstatic     #242                // Field org/sireum/ST$.MODULE$:Lorg/sireum/ST$;
       401: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       404: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       407: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       410: iconst_3
       411: anewarray     #108                // class java/lang/String
       414: dup
       415: iconst_0
       416: ldc_w         #280                // String
       419: aastore
       420: dup
       421: iconst_1
       422: ldc_w         #380                // String  [label =
       425: aastore
       426: dup
       427: iconst_2
       428: ldc_w         #382                // String ]
       431: aastore
       432: checkcast     #166                // class "[Ljava/lang/Object;"
       435: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       438: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       441: checkcast     #186                // class scala/collection/immutable/Seq
       444: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       447: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       450: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       453: iconst_2
       454: anewarray     #27                 // class org/sireum/ST$Arg
       457: dup
       458: iconst_0
       459: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
       462: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       465: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       468: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       471: iconst_1
       472: anewarray     #21                 // class org/sireum/ST
       475: dup
       476: iconst_0
       477: aload_3
       478: aastore
       479: checkcast     #166                // class "[Ljava/lang/Object;"
       482: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       485: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       488: checkcast     #186                // class scala/collection/immutable/Seq
       491: ldc_w         #280                // String
       494: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       497: aastore
       498: dup
       499: iconst_1
       500: getstatic     #251                // Field org/sireum/ST$Templ$.MODULE$:Lorg/sireum/ST$Templ$;
       503: getstatic     #140                // Field scala/package$.MODULE$:Lscala/package$;
       506: invokevirtual #144                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
       509: getstatic     #149                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       512: iconst_1
       513: anewarray     #21                 // class org/sireum/ST
       516: dup
       517: iconst_0
       518: aload         6
       520: invokevirtual #386                // Method org/sireum/parser/ParseTree$Leaf.toST:()Lorg/sireum/ST;
       523: aastore
       524: checkcast     #166                // class "[Ljava/lang/Object;"
       527: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       530: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       533: checkcast     #186                // class scala/collection/immutable/Seq
       536: ldc_w         #280                // String
       539: invokevirtual #259                // Method org/sireum/ST$Templ$.apply:(Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST$Templ;
       542: aastore
       543: checkcast     #166                // class "[Ljava/lang/Object;"
       546: invokevirtual #170                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       549: invokevirtual #184                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
       552: checkcast     #186                // class scala/collection/immutable/Seq
       555: ldc_w         #388                // String                              st\"\"\"$name [label = ${tree.toST}]\"\"\"
       558: invokevirtual #264                // Method org/sireum/ST$.apply:(Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Ljava/lang/String;)Lorg/sireum/ST;
       561: invokevirtual #288                // Method org/sireum/IS.$colon$plus:(Ljava/lang/Object;)Lorg/sireum/IS;
       564: invokevirtual #217                // Method nodes_$eq:(Lorg/sireum/IS;)V
       567: getstatic     #378                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       570: astore_2
       571: goto          587
       574: goto          577
       577: new           #390                // class scala/MatchError
       580: dup
       581: aload         4
       583: invokespecial #393                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       586: athrow
       587: aload_3
       588: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 375
          locals = [ top, class org/sireum/ST, class org/sireum/parser/ParseTree ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 195
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/parser/ParseTree$DotGenerator, class org/sireum/parser/ParseTree, class scala/runtime/BoxedUnit, class org/sireum/ST, class org/sireum/parser/ParseTree ]
          stack = []
      LineNumberTable:
        line 71: 0
        line 72: 20
        line 73: 151
        line 74: 154
        line 75: 169
        line 76: 353
        line 74: 375
        line 80: 378
        line 81: 393
        line 80: 574
        line 73: 577
        line 83: 587
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          151     438     3  name   Lorg/sireum/ST;
            0     589     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0     589     1  tree   Lorg/sireum/parser/ParseTree;
    MethodParameters:
      Name                           Flags
      tree                           final

  public org.sireum.parser.ParseTree$DotGenerator();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #395                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #399                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #402                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: aload_0
        14: invokevirtual #129                // Method $hasEquals:()Z
        17: ifeq          27
        20: aload_0
        21: invokespecial #404                // Method java/lang/Object.hashCode:()I
        24: goto          37
        27: aload_0
        28: invokevirtual #408                // Method getClass:()Ljava/lang/Class;
        31: invokevirtual #413                // Method java/lang/Class.getName:()Ljava/lang/String;
        34: invokevirtual #414                // Method java/lang/String.hashCode:()I
        37: putfield      #124                // Field hashCode:I
        40: aload_0
        41: getstatic     #295                // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        44: iconst_m1
        45: invokevirtual #298                // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        48: putfield      #225                // Field fresh:Lorg/sireum/Z;
        51: aload_0
        52: getstatic     #419                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        55: invokevirtual #423                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        58: getstatic     #428                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        61: invokevirtual #431                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        64: putfield      #228                // Field nodes:Lorg/sireum/IS;
        67: aload_0
        68: getstatic     #419                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        71: invokevirtual #423                // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        74: getstatic     #428                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        77: invokevirtual #431                // Method org/sireum/$internal/PackageTrait$ISZ$.apply:(Lscala/collection/immutable/Seq;)Lorg/sireum/IS;
        80: putfield      #231                // Field edges:Lorg/sireum/IS;
        83: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class org/sireum/parser/ParseTree$DotGenerator ]
          stack = [ class org/sireum/parser/ParseTree$DotGenerator ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/parser/ParseTree$DotGenerator ]
          stack = [ class org/sireum/parser/ParseTree$DotGenerator, int ]
      LineNumberTable:
        line 64: 0
        line 65: 40
        line 66: 51
        line 67: 67
        line 64: 83
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      84     0  this   Lorg/sireum/parser/ParseTree$DotGenerator;

  public static final java.lang.Object $anonfun$toDot$1$adapted(org.sireum.parser.ParseTree$DotGenerator, org.sireum.ST, org.sireum.parser.ParseTree);
    descriptor: (Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #433                // Method $anonfun$toDot$1:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)V
         6: getstatic     #378                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         9: areturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lorg/sireum/parser/ParseTree$DotGenerator;
            0      10     1 name$1   Lorg/sireum/ST;
            0      10     2 child   Lorg/sireum/parser/ParseTree;
    MethodParameters:
      Name                           Flags
      $this                          final
      name$1                         final
      child                          final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #445,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #17= #14 of #16;                 // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
  public static final #22= #19 of #21;    // Any=class org/sireum/ST$Any of class org/sireum/ST
  public static #25= #24 of #21;          // Any$=class org/sireum/ST$Any$ of class org/sireum/ST
  public static #28= #27 of #21;          // Arg=class org/sireum/ST$Arg of class org/sireum/ST
  public static final #31= #30 of #21;    // Templ=class org/sireum/ST$Templ of class org/sireum/ST
  public static #34= #33 of #21;          // Templ$=class org/sireum/ST$Templ$ of class org/sireum/ST
  public static final #37= #2 of #36;     // DotGenerator=class org/sireum/parser/ParseTree$DotGenerator of class org/sireum/parser/ParseTree
  public static final #40= #39 of #36;    // Leaf=class org/sireum/parser/ParseTree$Leaf of class org/sireum/parser/ParseTree
  public static final #43= #42 of #36;    // Node=class org/sireum/parser/ParseTree$Node of class org/sireum/parser/ParseTree
SourceFile: "ParseTree.scala"
BootstrapMethods:
  0: #365 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #349 (Ljava/lang/Object;)Ljava/lang/Object;
      #354 REF_invokeStatic org/sireum/parser/ParseTree$DotGenerator.$anonfun$toDot$1$adapted:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
      #356 (Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
      #357 5
      #358 1
      #356 (Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  1: #442 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #354 REF_invokeStatic org/sireum/parser/ParseTree$DotGenerator.$anonfun$toDot$1$adapted:(Lorg/sireum/parser/ParseTree$DotGenerator;Lorg/sireum/ST;Lorg/sireum/parser/ParseTree;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x90 (unknown attribute)
   01 01 00 1C 01 12 01 13 01 01 5E 01 5F 01 00 4B
   00 4C 01 00 BB 01 0E 01 00 BB 01 11 01 00 BB 00
   BC 01 00 85 00 86 01 00 53 00 37 01 00 58 00 37
   01 00 36 00 37 01 00 3E 01 0B 01 00 3E 00 3F 01
   00 B0 00 BD 01 00 33 00 D1 01 00 DC 00 D7 01 00
   7D 00 7E 01 00 2E 00 46 01 00 CD 00 CE 01 00 45
   00 46 01 00 2C 00 7A 01 00 30 00 D1 01 00 D6 00
   D7 01 00 34 00 37 01 00 5E 00 5F 01 00 EB 00 E9
   01 00 6D 00 62 01 00 E8 00 E9 01 00 61 00 62 01

  Scala: length = 0x0 (unknown attribute)

