Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/MNone.class
  Last modified May 29, 2022; size 8733 bytes
  SHA-256 checksum dbdb3e41657e776ff70121cb9a21d453da887ea09d268346401a8832afe45f6c
  Compiled from "MOption.scala"
public final class org.sireum.MNone<T extends java.lang.Object> extends java.lang.Object implements org.sireum.MOption<T>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/MNone
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 2, methods: 31, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/MNone
    #2 = Class              #1            // org/sireum/MNone
    #3 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/MOption<TT;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               org/sireum/MOption
    #7 = Class              #6            // org/sireum/MOption
    #8 = Utf8               MOption.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005%v!\u0002\u000e\u001c\u0011\u0003\u0001c!\u0002\u0012\u001c\u0011\u0003\u0019\u0003\"\u0002\u0016\u0002\t\u0003Y\u0003B\u0002\u0017\u0002A\u0003%A\u0005C\u0003.\u0003\u0011\u0005a\u0006C\u0004\u0002\u0018\u0006!\t!!\'\u0007\t\tZ\"!\r\u0005\u0006U\u0019!\t\u0001\u0012\u0005\u0006\r\u001a!\te\u0012\u0005\u0006!\u001a!\t%\u0015\u0005\b)\u001a\u0011\r\u0011\"\u0011V\u0011\u0019If\u0001)A\u0005-\")!L\u0002C!7\")\u0011M\u0002C!E\")!O\u0002C!g\")AO\u0002C!k\")QP\u0002C!k\"1qP\u0002C!\u0003\u0003Aq!!\b\u0007\t\u0003\ny\u0002C\u0004\u00022\u0019!\t%a\r\t\u000f\u0005ub\u0001\"\u0011\u0002@!9\u0011Q\t\u0004\u0005B\u0005\u001d\u0003bBA+\r\u0011\u0005\u0013q\u000b\u0005\b\u0003;2A\u0011IA0\u0011\u001d\t\u0019G\u0002C!\u0003KBq!!\u001e\u0007\t\u0003\t9(A\u0003N\u001d>tWM\u0003\u0002\u001d;\u000511/\u001b:fk6T\u0011AH\u0001\u0004_J<7\u0001\u0001\t\u0003C\u0005i\u0011a\u0007\u0002\u0006\u001b:{g.Z\n\u0003\u0003\u0011\u0002\"!\n\u0015\u000e\u0003\u0019R\u0011aJ\u0001\u0006g\u000e\fG.Y\u0005\u0003S\u0019\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$h\bF\u0001!\u0003\t!c/A\u0003baBd\u00170F\u00020\u0003+#\u0012\u0001\r\t\u0005C\u0019\t\u0019*\u0006\u00023qM!a\u0001J\u001aB!\r\tCGN\u0005\u0003km\u0011q!T(qi&|g\u000e\u0005\u00028q1\u0001A!B\u001d\u0007\u0005\u0004Q$!\u0001+\u0012\u0005mr\u0004CA\u0013=\u0013\tidEA\u0004O_RD\u0017N\\4\u0011\u0005\u0015z\u0014B\u0001!\'\u0005\r\te.\u001f\t\u0003C\tK!aQ\u000e\u0003\u0013I+7m\u001c:e\'&<G#A#\u0011\u0007\u00052a\'\u0001\u0005u_N#(/\u001b8h)\u0005A\u0005CA%O\u001b\u0005Q%BA&M\u0003\u0011a\u0017M\\4\u000b\u00035\u000bAA[1wC&\u0011qJ\u0013\u0002\u0007\'R\u0014\u0018N\\4\u0002\rM$(/\u001b8h+\u0005\u0011\u0006CA\u0011T\u0013\ty5$\u0001\u0005iCND7i\u001c3f+\u00051\u0006CA\u0013X\u0013\tAfEA\u0002J]R\f\u0011\u0002[1tQ\u000e{G-\u001a\u0011\u0002\r\u0015\fX/\u00197t)\tav\f\u0005\u0002&;&\u0011aL\n\u0002\b\u0005>|G.Z1o\u0011\u0015\u0001G\u00021\u0001?\u0003\u0005y\u0017\u0001\u0003\u0013d_:$XM\u001c;\u0016\u0003\r\u00042\u0001\u001a7p\u001d\t)\'N\u0004\u0002gS6\tqM\u0003\u0002i?\u00051AH]8pizJ\u0011aJ\u0005\u0003W\u001a\nq\u0001]1dW\u0006<W-\u0003\u0002n]\n\u00191+Z9\u000b\u0005-4\u0003\u0003B\u0013q\u0011zJ!!\u001d\u0014\u0003\rQ+\b\u000f\\33\u0003\u0019!3\r\\8oKV\tQ)A\u0004jg\u0016k\u0007\u000f^=\u0016\u0003Y\u0004\"!I<\n\u0005a\\\"!\u0001\")\u0005=Q\bCA\u0011|\u0013\ta8D\u0001\u0003qkJ,\u0017\u0001\u00038p]\u0016k\u0007\u000f^=)\u0005AQ\u0018aA7baV!\u00111AA\u0005)\u0011\t)!!\u0004\u0011\t\u0005\"\u0014q\u0001\t\u0004o\u0005%AABA\u0006#\t\u0007!H\u0001\u0002Ue!9\u0011qB\tA\u0002\u0005E\u0011!\u00014\u0011\r\u0015\n\u0019BNA\f\u0013\r\t)B\n\u0002\n\rVt7\r^5p]FRC!a\u0002\u0002\u001a-\n!\u0010\u000b\u0002\u0012u\u00069a\r\\1u\u001b\u0006\u0004X\u0003BA\u0011\u0003O!B!a\t\u0002*A!\u0011\u0005NA\u0013!\r9\u0014q\u0005\u0003\u0007\u0003\u0017\u0011\"\u0019\u0001\u001e\t\u000f\u0005=!\u00031\u0001\u0002,A1Q%a\u00057\u0003[QC!a\t\u0002\u001a!\u0012!C_\u0001\u0007M>\u0014\u0018\r\u001c7\u0015\u0007Y\f)\u0004C\u0004\u0002\u0010M\u0001\r!a\u000e\u0011\r\u0015\n\u0019BNA\u001dU\r1\u0018\u0011\u0004\u0015\u0003\'i\fa!\u001a=jgR\u001cHc\u0001<\u0002B!9\u0011q\u0002\u000bA\u0002\u0005]\u0002F\u0001\u000b{\u0003%9W\r^(s\u000b2\u001cX\rF\u00027\u0003\u0013B\u0001\"a\u0013\u0016\t\u0003\u0007\u0011QJ\u0001\bI\u00164\u0017-\u001e7u!\u0011)\u0013q\n\u001c\n\u0007\u0005EcE\u0001\u0005=Eft\u0017-\\3?Q\t)\"0\u0001\bhKR|%/\u00127tK\u0016\u000bw-\u001a:\u0015\u0007Y\nI\u0006\u0003\u0004\u0002LY\u0001\rA\u000e\u0015\u0003-i\f1aZ3u+\u00051\u0004FA\f{\u0003\u0011!x.T*\u0016\u0005\u0005\u001d\u0004CB\u0011\u0002j\u00055d\'C\u0002\u0002lm\u0011!!T*\u0011\u0007\u0005\ny\'C\u0002\u0002rm\u0011\u0011A\u0017\u0015\u00031i\fqAZ8sK\u0006\u001c\u0007.\u0006\u0003\u0002z\u0005\u001dE\u0003BA>\u0003\u0003\u00032!JA?\u0013\r\tyH\n\u0002\u0005+:LG\u000fC\u0004\u0002\u0010e\u0001\r!a!\u0011\r\u0015\n\u0019BNAC!\r9\u0014q\u0011\u0003\u0007\u0003\u0013K\"\u0019\u0001\u001e\u0003\u0003YC3ABAG!\r\t\u0013qR\u0005\u0004\u0003#[\"A\u0002:fG>\u0014H\rE\u00028\u0003+#Q!\u000f\u0003C\u0002i\nq!\u001e8baBd\u00170\u0006\u0003\u0002\u001c\u0006\u001dF\u0003BAO\u0003C{!!a(\u001a\u0003\u0005Aa\u0001Y\u0003A\u0002\u0005\r\u0006\u0003B\u0011\u0007\u0003K\u00032aNAT\t\u0015ITA1\u0001;\u0001
   #12 = Utf8               hashCode
   #13 = Utf8               I
   #14 = Utf8               org$sireum$RecordSig$$$isOwned
   #15 = Utf8               Z
   #16 = Utf8               unapply
   #17 = Utf8               (Lorg/sireum/MNone;)Z
   #18 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/MNone<TT;>;)Z
   #19 = Utf8               o
   #20 = Utf8               org/sireum/MNone$
   #21 = Class              #20           // org/sireum/MNone$
   #22 = Utf8               MODULE$
   #23 = Utf8               Lorg/sireum/MNone$;
   #24 = NameAndType        #22:#23       // MODULE$:Lorg/sireum/MNone$;
   #25 = Fieldref           #21.#24       // org/sireum/MNone$.MODULE$:Lorg/sireum/MNone$;
   #26 = NameAndType        #16:#17       // unapply:(Lorg/sireum/MNone;)Z
   #27 = Methodref          #21.#26       // org/sireum/MNone$.unapply:(Lorg/sireum/MNone;)Z
   #28 = Utf8               Lorg/sireum/MNone;
   #29 = Utf8               apply
   #30 = Utf8               ()Lorg/sireum/MNone;
   #31 = Utf8               <T:Ljava/lang/Object;>()Lorg/sireum/MNone<TT;>;
   #32 = NameAndType        #29:#30       // apply:()Lorg/sireum/MNone;
   #33 = Methodref          #21.#32       // org/sireum/MNone$.apply:()Lorg/sireum/MNone;
   #34 = Utf8               $owned
   #35 = Utf8               ()Z
   #36 = Utf8               org/sireum/RecordSig
   #37 = Class              #36           // org/sireum/RecordSig
   #38 = Utf8               $owned$
   #39 = Utf8               (Lorg/sireum/RecordSig;)Z
   #40 = NameAndType        #38:#39       // $owned$:(Lorg/sireum/RecordSig;)Z
   #41 = InterfaceMethodref #37.#40       // org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
   #42 = Utf8               this
   #43 = Utf8               $owned_$eq
   #44 = Utf8               (Z)Lorg/sireum/RecordSig;
   #45 = Utf8               b
   #46 = Utf8               $owned_$eq$
   #47 = Utf8               (Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #48 = NameAndType        #46:#47       // $owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #49 = InterfaceMethodref #37.#48       // org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
   #50 = Utf8               hash
   #51 = Utf8               ()Lorg/sireum/Z;
   #52 = Utf8               hash$
   #53 = Utf8               (Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #54 = NameAndType        #52:#53       // hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #55 = InterfaceMethodref #37.#54       // org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
   #56 = Utf8               $cannotMixImmutableAndMutable
   #57 = Utf8               ()Lscala/runtime/Nothing$;
   #58 = Utf8               org/sireum/Mutable
   #59 = Class              #58           // org/sireum/Mutable
   #60 = Utf8               $cannotMixImmutableAndMutable$
   #61 = Utf8               (Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #62 = NameAndType        #60:#61       // $cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #63 = InterfaceMethodref #59.#62       // org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
   #64 = Utf8               $hasEquals
   #65 = Utf8               $hasEquals$
   #66 = Utf8               (Lorg/sireum/Mutable;)Z
   #67 = NameAndType        #65:#66       // $hasEquals$:(Lorg/sireum/Mutable;)Z
   #68 = InterfaceMethodref #59.#67       // org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
   #69 = Utf8               $hasString
   #70 = Utf8               $hasString$
   #71 = NameAndType        #70:#66       // $hasString$:(Lorg/sireum/Mutable;)Z
   #72 = InterfaceMethodref #59.#71       // org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
   #73 = NameAndType        #14:#15       // org$sireum$RecordSig$$$isOwned:Z
   #74 = Fieldref           #2.#73        // org/sireum/MNone.org$sireum$RecordSig$$$isOwned:Z
   #75 = Utf8               org$sireum$RecordSig$$$isOwned_$eq
   #76 = Utf8               (Z)V
   #77 = Utf8               x$1
   #78 = Utf8               toString
   #79 = Utf8               ()Ljava/lang/String;
   #80 = NameAndType        #69:#35       // $hasString:()Z
   #81 = Methodref          #2.#80        // org/sireum/MNone.$hasString:()Z
   #82 = Utf8               string$
   #83 = Utf8               (Lorg/sireum/RecordSig;)Ljava/lang/String;
   #84 = NameAndType        #82:#83       // string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
   #85 = InterfaceMethodref #37.#84       // org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
   #86 = Utf8               MNone()
   #87 = String             #86           // MNone()
   #88 = Utf8               java/lang/String
   #89 = Class              #88           // java/lang/String
   #90 = Utf8               string
   #91 = Utf8               org/sireum/String$
   #92 = Class              #91           // org/sireum/String$
   #93 = Utf8               Lorg/sireum/String$;
   #94 = NameAndType        #22:#93       // MODULE$:Lorg/sireum/String$;
   #95 = Fieldref           #92.#94       // org/sireum/String$.MODULE$:Lorg/sireum/String$;
   #96 = NameAndType        #78:#79       // toString:()Ljava/lang/String;
   #97 = Methodref          #2.#96        // org/sireum/MNone.toString:()Ljava/lang/String;
   #98 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #99 = NameAndType        #29:#98       // apply:(Ljava/lang/String;)Ljava/lang/String;
  #100 = Methodref          #92.#99       // org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #101 = Utf8               ()I
  #102 = NameAndType        #12:#13       // hashCode:I
  #103 = Fieldref           #2.#102       // org/sireum/MNone.hashCode:I
  #104 = Utf8               equals
  #105 = Utf8               (Ljava/lang/Object;)Z
  #106 = NameAndType        #64:#35       // $hasEquals:()Z
  #107 = Methodref          #2.#106       // org/sireum/MNone.$hasEquals:()Z
  #108 = NameAndType        #104:#105     // equals:(Ljava/lang/Object;)Z
  #109 = Methodref          #5.#108       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #110 = Utf8               Ljava/lang/Object;
  #111 = Utf8               $content
  #112 = Utf8               ()Lscala/collection/immutable/Seq;
  #113 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
  #114 = Utf8               scala/package$
  #115 = Class              #114          // scala/package$
  #116 = Utf8               Lscala/package$;
  #117 = NameAndType        #22:#116      // MODULE$:Lscala/package$;
  #118 = Fieldref           #115.#117     // scala/package$.MODULE$:Lscala/package$;
  #119 = Utf8               Seq
  #120 = Utf8               ()Lscala/collection/immutable/Seq$;
  #121 = NameAndType        #119:#120     // Seq:()Lscala/collection/immutable/Seq$;
  #122 = Methodref          #115.#121     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #123 = Utf8               scala/runtime/ScalaRunTime$
  #124 = Class              #123          // scala/runtime/ScalaRunTime$
  #125 = Utf8               Lscala/runtime/ScalaRunTime$;
  #126 = NameAndType        #22:#125      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #127 = Fieldref           #124.#126     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #128 = Utf8               scala/Tuple2
  #129 = Class              #128          // scala/Tuple2
  #130 = Utf8               type
  #131 = String             #130          // type
  #132 = Utf8               List
  #133 = Utf8               ()Lscala/collection/immutable/List$;
  #134 = NameAndType        #132:#133     // List:()Lscala/collection/immutable/List$;
  #135 = Methodref          #115.#134     // scala/package$.List:()Lscala/collection/immutable/List$;
  #136 = Utf8               org
  #137 = String             #136          // org
  #138 = Utf8               sireum
  #139 = String             #138          // sireum
  #140 = Utf8               MNone
  #141 = String             #140          // MNone
  #142 = Utf8               [Ljava/lang/Object;
  #143 = Class              #142          // "[Ljava/lang/Object;"
  #144 = Utf8               wrapRefArray
  #145 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #146 = NameAndType        #144:#145     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #147 = Methodref          #124.#146     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #148 = Utf8               scala/collection/immutable/List$
  #149 = Class              #148          // scala/collection/immutable/List$
  #150 = Utf8               (Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #151 = NameAndType        #29:#150      // apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #152 = Methodref          #149.#151     // scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
  #153 = Utf8               <init>
  #154 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #155 = NameAndType        #153:#154     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #156 = Methodref          #129.#155     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #157 = Utf8               scala/collection/immutable/Seq$
  #158 = Class              #157          // scala/collection/immutable/Seq$
  #159 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #160 = NameAndType        #29:#159      // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #161 = Methodref          #158.#160     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #162 = Utf8               scala/collection/immutable/Seq
  #163 = Class              #162          // scala/collection/immutable/Seq
  #164 = Utf8               $clone
  #165 = Utf8               ()Lorg/sireum/MNone<TT;>;
  #166 = Utf8               isEmpty
  #167 = Utf8               scala/runtime/BoxedUnit
  #168 = Class              #167          // scala/runtime/BoxedUnit
  #169 = Utf8               UNIT
  #170 = Utf8               Lscala/runtime/BoxedUnit;
  #171 = NameAndType        #169:#170     // UNIT:Lscala/runtime/BoxedUnit;
  #172 = Fieldref           #168.#171     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #173 = Utf8               org/sireum/package$
  #174 = Class              #173          // org/sireum/package$
  #175 = Utf8               Lorg/sireum/package$;
  #176 = NameAndType        #22:#175      // MODULE$:Lorg/sireum/package$;
  #177 = Fieldref           #174.#176     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #178 = Utf8               T
  #179 = NameAndType        #178:#35      // T:()Z
  #180 = Methodref          #174.#179     // org/sireum/package$.T:()Z
  #181 = Utf8               nonEmpty
  #182 = Utf8               F
  #183 = NameAndType        #182:#35      // F:()Z
  #184 = Methodref          #174.#183     // org/sireum/package$.F:()Z
  #185 = Utf8               map
  #186 = Utf8               (Lscala/Function1;)Lorg/sireum/MOption;
  #187 = Utf8               <T2:Ljava/lang/Object;>(Lscala/Function1<TT;TT2;>;)Lorg/sireum/MOption<TT2;>;
  #188 = Utf8               f
  #189 = Utf8               org/sireum/helper$
  #190 = Class              #189          // org/sireum/helper$
  #191 = Utf8               Lorg/sireum/helper$;
  #192 = NameAndType        #22:#191      // MODULE$:Lorg/sireum/helper$;
  #193 = Fieldref           #190.#192     // org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
  #194 = Utf8               retMut
  #195 = Utf8               (Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #196 = NameAndType        #194:#195     // retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #197 = Methodref          #190.#196     // org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
  #198 = Utf8               Lscala/Function1;
  #199 = Utf8               flatMap
  #200 = Utf8               <T2:Ljava/lang/Object;>(Lscala/Function1<TT;Lorg/sireum/MOption<TT2;>;>;)Lorg/sireum/MOption<TT2;>;
  #201 = Utf8               forall
  #202 = Utf8               (Lscala/Function1;)Z
  #203 = Utf8               (Lscala/Function1<TT;Lorg/sireum/B;>;)Z
  #204 = Utf8               exists
  #205 = Utf8               getOrElse
  #206 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #207 = Utf8               (Lscala/Function0<TT;>;)TT;
  #208 = Utf8               default
  #209 = Utf8               scala/Function0
  #210 = Class              #209          // scala/Function0
  #211 = Utf8               ()Ljava/lang/Object;
  #212 = NameAndType        #29:#211      // apply:()Ljava/lang/Object;
  #213 = InterfaceMethodref #210.#212     // scala/Function0.apply:()Ljava/lang/Object;
  #214 = Utf8               Lscala/Function0;
  #215 = Utf8               getOrElseEager
  #216 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #217 = Utf8               (TT;)TT;
  #218 = Utf8               get
  #219 = Utf8               ()TT;
  #220 = Utf8               org/sireum/String
  #221 = Class              #220          // org/sireum/String
  #222 = Utf8               Invalid \'MNone\' operation \'get\'.
  #223 = String             #222          // Invalid \'MNone\' operation \'get\'.
  #224 = Utf8               (Ljava/lang/String;)V
  #225 = NameAndType        #153:#224     // "<init>":(Ljava/lang/String;)V
  #226 = Methodref          #221.#225     // org/sireum/String."<init>":(Ljava/lang/String;)V
  #227 = Utf8               halt
  #228 = Utf8               (Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #229 = NameAndType        #227:#228     // halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #230 = Methodref          #174.#229     // org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
  #231 = Utf8               toMS
  #232 = Utf8               ()Lorg/sireum/MS;
  #233 = Utf8               ()Lorg/sireum/MS<Lorg/sireum/Z;TT;>;
  #234 = Utf8               org/sireum/MS$
  #235 = Class              #234          // org/sireum/MS$
  #236 = Utf8               Lorg/sireum/MS$;
  #237 = NameAndType        #22:#236      // MODULE$:Lorg/sireum/MS$;
  #238 = Fieldref           #235.#237     // org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
  #239 = Utf8               scala/collection/immutable/Nil$
  #240 = Class              #239          // scala/collection/immutable/Nil$
  #241 = Utf8               Lscala/collection/immutable/Nil$;
  #242 = NameAndType        #22:#241      // MODULE$:Lscala/collection/immutable/Nil$;
  #243 = Fieldref           #240.#242     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #244 = Utf8               $ZCompanion
  #245 = Utf8               ()Lorg/sireum/$ZCompanion;
  #246 = NameAndType        #244:#245     // $ZCompanion:()Lorg/sireum/$ZCompanion;
  #247 = Methodref          #174.#246     // org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
  #248 = Utf8               (Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
  #249 = NameAndType        #29:#248      // apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
  #250 = Methodref          #235.#249     // org/sireum/MS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
  #251 = Utf8               org/sireum/MS
  #252 = Class              #251          // org/sireum/MS
  #253 = Utf8               foreach
  #254 = Utf8               (Lscala/Function1;)V
  #255 = Utf8               <V:Ljava/lang/Object;>(Lscala/Function1<TT;TV;>;)V
  #256 = Utf8               (Z)Lorg/sireum/$internal/MutableMarker;
  #257 = NameAndType        #43:#44       // $owned_$eq:(Z)Lorg/sireum/RecordSig;
  #258 = Methodref          #2.#257       // org/sireum/MNone.$owned_$eq:(Z)Lorg/sireum/RecordSig;
  #259 = NameAndType        #164:#30      // $clone:()Lorg/sireum/MNone;
  #260 = Methodref          #2.#259       // org/sireum/MNone.$clone:()Lorg/sireum/MNone;
  #261 = Utf8               ()Lorg/sireum/$internal/MutableMarker;
  #262 = Utf8               ()V
  #263 = NameAndType        #153:#262     // "<init>":()V
  #264 = Methodref          #5.#263       // java/lang/Object."<init>":()V
  #265 = Utf8               $init$
  #266 = Utf8               (Lorg/sireum/Mutable;)V
  #267 = NameAndType        #265:#266     // $init$:(Lorg/sireum/Mutable;)V
  #268 = InterfaceMethodref #59.#267      // org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
  #269 = Utf8               (Lorg/sireum/RecordSig;)V
  #270 = NameAndType        #265:#269     // $init$:(Lorg/sireum/RecordSig;)V
  #271 = InterfaceMethodref #37.#270      // org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
  #272 = Utf8               (Lorg/sireum/MOption;)V
  #273 = NameAndType        #265:#272     // $init$:(Lorg/sireum/MOption;)V
  #274 = InterfaceMethodref #7.#273       // org/sireum/MOption.$init$:(Lorg/sireum/MOption;)V
  #275 = NameAndType        #12:#101      // hashCode:()I
  #276 = Methodref          #5.#275       // java/lang/Object.hashCode:()I
  #277 = Utf8               getClass
  #278 = Utf8               ()Ljava/lang/Class;
  #279 = NameAndType        #277:#278     // getClass:()Ljava/lang/Class;
  #280 = Methodref          #2.#279       // org/sireum/MNone.getClass:()Ljava/lang/Class;
  #281 = Utf8               java/lang/Class
  #282 = Class              #281          // java/lang/Class
  #283 = Utf8               getName
  #284 = NameAndType        #283:#79      // getName:()Ljava/lang/String;
  #285 = Methodref          #282.#284     // java/lang/Class.getName:()Ljava/lang/String;
  #286 = Methodref          #89.#275      // java/lang/String.hashCode:()I
  #287 = Utf8               Code
  #288 = Utf8               LocalVariableTable
  #289 = Utf8               Signature
  #290 = Utf8               MethodParameters
  #291 = Utf8               LineNumberTable
  #292 = Utf8               StackMapTable
  #293 = Utf8               SourceFile
  #294 = Utf8               RuntimeVisibleAnnotations
  #295 = Utf8               ScalaInlineInfo
  #296 = Utf8               ScalaSig
{
  private final int hashCode;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private boolean org$sireum$RecordSig$$$isOwned;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public static <T extends java.lang.Object> boolean unapply(org.sireum.MNone<T>);
    descriptor: (Lorg/sireum/MNone;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #25                 // Field org/sireum/MNone$.MODULE$:Lorg/sireum/MNone$;
         3: aload_0
         4: invokevirtual #27                 // Method org/sireum/MNone$.unapply:(Lorg/sireum/MNone;)Z
         7: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     o   Lorg/sireum/MNone;
    Signature: #18                          // <T:Ljava/lang/Object;>(Lorg/sireum/MNone<TT;>;)Z
    MethodParameters:
      Name                           Flags
      o                              final

  public static <T extends java.lang.Object> org.sireum.MNone<T> apply();
    descriptor: ()Lorg/sireum/MNone;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #25                 // Field org/sireum/MNone$.MODULE$:Lorg/sireum/MNone$;
         3: invokevirtual #33                 // Method org/sireum/MNone$.apply:()Lorg/sireum/MNone;
         6: areturn
    Signature: #31                          // <T:Ljava/lang/Object;>()Lorg/sireum/MNone<TT;>;

  public final boolean $owned();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #41                 // InterfaceMethod org/sireum/RecordSig.$owned$:(Lorg/sireum/RecordSig;)Z
         4: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public final org.sireum.RecordSig $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/RecordSig;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #49                 // InterfaceMethod org/sireum/RecordSig.$owned_$eq$:(Lorg/sireum/RecordSig;Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/MNone;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public org.sireum.Z hash();
    descriptor: ()Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod org/sireum/RecordSig.hash$:(Lorg/sireum/RecordSig;)Lorg/sireum/Z;
         4: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public final scala.runtime.Nothing$ $cannotMixImmutableAndMutable();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #63                 // InterfaceMethod org/sireum/Mutable.$cannotMixImmutableAndMutable$:(Lorg/sireum/Mutable;)Lscala/runtime/Nothing$;
         4: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public boolean $hasEquals();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #68                 // InterfaceMethod org/sireum/Mutable.$hasEquals$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public boolean $hasString();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #72                 // InterfaceMethod org/sireum/Mutable.$hasString$:(Lorg/sireum/Mutable;)Z
         4: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public boolean org$sireum$RecordSig$$$isOwned();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #74                 // Field org$sireum$RecordSig$$$isOwned:Z
         4: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public void org$sireum$RecordSig$$$isOwned_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #74                 // Field org$sireum$RecordSig$$$isOwned:Z
         5: return
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/MNone;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #81                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #85                 // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          16
        14: ldc           #87                 // String MNone()
        16: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lorg/sireum/MNone;

  public java.lang.String string();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #81                 // Method $hasString:()Z
         4: ifeq          14
         7: aload_0
         8: invokestatic  #85                 // InterfaceMethod org/sireum/RecordSig.string$:(Lorg/sireum/RecordSig;)Ljava/lang/String;
        11: goto          24
        14: getstatic     #95                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        17: aload_0
        18: invokevirtual #97                 // Method toString:()Ljava/lang/String;
        21: invokevirtual #100                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        24: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/sireum/MNone;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #103                // Field hashCode:I
         4: ireturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #107                // Method $hasEquals:()Z
         4: ifeq          15
         7: aload_0
         8: aload_1
         9: invokespecial #109                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        12: goto          44
        15: aload_0
        16: aload_1
        17: if_acmpne     24
        20: iconst_1
        21: goto          44
        24: aload_1
        25: astore_3
        26: aload_3
        27: instanceof    #2                  // class org/sireum/MNone
        30: ifeq          38
        33: iconst_1
        34: istore_2
        35: goto          43
        38: goto          41
        41: iconst_0
        42: ireturn
        43: iload_2
        44: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 15 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 13
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class org/sireum/MNone, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/MNone, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/MNone;
            0      45     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public scala.collection.immutable.Seq<scala.Tuple2<java.lang.String, java.lang.Object>> $content();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=14, locals=1, args_size=1
         0: getstatic     #118                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #122                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
         6: getstatic     #127                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         9: iconst_1
        10: anewarray     #129                // class scala/Tuple2
        13: dup
        14: iconst_0
        15: new           #129                // class scala/Tuple2
        18: dup
        19: ldc           #131                // String type
        21: getstatic     #118                // Field scala/package$.MODULE$:Lscala/package$;
        24: invokevirtual #135                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        27: getstatic     #127                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        30: iconst_3
        31: anewarray     #89                 // class java/lang/String
        34: dup
        35: iconst_0
        36: ldc           #137                // String org
        38: aastore
        39: dup
        40: iconst_1
        41: ldc           #139                // String sireum
        43: aastore
        44: dup
        45: iconst_2
        46: ldc           #141                // String MNone
        48: aastore
        49: checkcast     #143                // class "[Ljava/lang/Object;"
        52: invokevirtual #147                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        55: invokevirtual #152                // Method scala/collection/immutable/List$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
        58: invokespecial #156                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        61: aastore
        62: checkcast     #143                // class "[Ljava/lang/Object;"
        65: invokevirtual #147                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        68: invokevirtual #161                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        71: checkcast     #163                // class scala/collection/immutable/Seq
        74: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      75     0  this   Lorg/sireum/MNone;
    Signature: #113                         // ()Lscala/collection/immutable/Seq<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;

  public org.sireum.MNone<T> $clone();
    descriptor: ()Lorg/sireum/MNone;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/MNone;
    Signature: #165                         // ()Lorg/sireum/MNone<TT;>;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #180                // Method org/sireum/package$.T:()Z
        10: ireturn
      LineNumberTable:
        line 149: 0
        line 150: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/MNone;

  public boolean nonEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #184                // Method org/sireum/package$.F:()Z
        10: ireturn
      LineNumberTable:
        line 154: 0
        line 155: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/MNone;

  public <T2 extends java.lang.Object> org.sireum.MOption<T2> map(scala.Function1<T, T2>);
    descriptor: (Lscala/Function1;)Lorg/sireum/MOption;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #193                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: getstatic     #25                 // Field org/sireum/MNone$.MODULE$:Lorg/sireum/MNone$;
        10: invokevirtual #33                 // Method org/sireum/MNone$.apply:()Lorg/sireum/MNone;
        13: invokevirtual #197                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        16: checkcast     #2                  // class org/sireum/MNone
        19: areturn
      LineNumberTable:
        line 159: 0
        line 160: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/sireum/MNone;
            0      20     1     f   Lscala/Function1;
    Signature: #187                         // <T2:Ljava/lang/Object;>(Lscala/Function1<TT;TT2;>;)Lorg/sireum/MOption<TT2;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public <T2 extends java.lang.Object> org.sireum.MOption<T2> flatMap(scala.Function1<T, org.sireum.MOption<T2>>);
    descriptor: (Lscala/Function1;)Lorg/sireum/MOption;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #193                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: getstatic     #25                 // Field org/sireum/MNone$.MODULE$:Lorg/sireum/MNone$;
        10: invokevirtual #33                 // Method org/sireum/MNone$.apply:()Lorg/sireum/MNone;
        13: invokevirtual #197                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        16: checkcast     #2                  // class org/sireum/MNone
        19: areturn
      LineNumberTable:
        line 164: 0
        line 165: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/sireum/MNone;
            0      20     1     f   Lscala/Function1;
    Signature: #200                         // <T2:Ljava/lang/Object;>(Lscala/Function1<TT;Lorg/sireum/MOption<TT2;>;>;)Lorg/sireum/MOption<TT2;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean forall(scala.Function1<T, org.sireum.B>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #180                // Method org/sireum/package$.T:()Z
        10: ireturn
      LineNumberTable:
        line 169: 0
        line 170: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/MNone;
            0      11     1     f   Lscala/Function1;
    Signature: #203                         // (Lscala/Function1<TT;Lorg/sireum/B;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean exists(scala.Function1<T, org.sireum.B>);
    descriptor: (Lscala/Function1;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: invokevirtual #184                // Method org/sireum/package$.F:()Z
        10: ireturn
      LineNumberTable:
        line 174: 0
        line 175: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/MNone;
            0      11     1     f   Lscala/Function1;
    Signature: #203                         // (Lscala/Function1<TT;Lorg/sireum/B;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public T getOrElse(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_1
         5: invokeinterface #213,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        10: areturn
      LineNumberTable:
        line 179: 0
        line 180: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/MNone;
            0      11     1 default   Lscala/Function0;
    Signature: #207                         // (Lscala/Function0<TT;>;)TT;
    MethodParameters:
      Name                           Flags
      default                        final

  public T getOrElseEager(T);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: aload_1
         5: areturn
      LineNumberTable:
        line 184: 0
        line 185: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/MNone;
            0       6     1 default   Ljava/lang/Object;
    Signature: #217                         // (TT;)TT;
    MethodParameters:
      Name                           Flags
      default                        final

  public T get();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         7: new           #221                // class org/sireum/String
        10: dup
        11: getstatic     #95                 // Field org/sireum/String$.MODULE$:Lorg/sireum/String$;
        14: ldc           #223                // String Invalid \'MNone\' operation \'get\'.
        16: invokevirtual #100                // Method org/sireum/String$.apply:(Ljava/lang/String;)Ljava/lang/String;
        19: invokespecial #226                // Method org/sireum/String."<init>":(Ljava/lang/String;)V
        22: invokevirtual #230                // Method org/sireum/package$.halt:(Ljava/lang/Object;)Lscala/runtime/Nothing$;
        25: athrow
      LineNumberTable:
        line 189: 0
        line 190: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/sireum/MNone;
    Signature: #219                         // ()TT;

  public org.sireum.MS<org.sireum.Z, T> toMS();
    descriptor: ()Lorg/sireum/MS;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #172                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         3: pop
         4: getstatic     #193                // Field org/sireum/helper$.MODULE$:Lorg/sireum/helper$;
         7: getstatic     #238                // Field org/sireum/MS$.MODULE$:Lorg/sireum/MS$;
        10: getstatic     #243                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        13: getstatic     #177                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        16: invokevirtual #247                // Method org/sireum/package$.$ZCompanion:()Lorg/sireum/$ZCompanion;
        19: invokevirtual #250                // Method org/sireum/MS$.apply:(Lscala/collection/immutable/Seq;Lorg/sireum/$ZCompanion;)Lorg/sireum/MS;
        22: invokevirtual #197                // Method org/sireum/helper$.retMut:(Lorg/sireum/$internal/MutableMarker;)Ljava/lang/Object;
        25: checkcast     #252                // class org/sireum/MS
        28: areturn
      LineNumberTable:
        line 194: 0
        line 195: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/sireum/MNone;
    Signature: #233                         // ()Lorg/sireum/MS<Lorg/sireum/Z;TT;>;

  public <V extends java.lang.Object> void foreach(scala.Function1<T, V>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=0, locals=2, args_size=2
         0: return
      LineNumberTable:
        line 198: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0  this   Lorg/sireum/MNone;
            0       1     1     f   Lscala/Function1;
    Signature: #255                         // <V:Ljava/lang/Object;>(Lscala/Function1<TT;TV;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public final org.sireum.$internal.MutableMarker $owned_$eq(boolean);
    descriptor: (Z)Lorg/sireum/$internal/MutableMarker;
    flags: (0x1051) ACC_PUBLIC, ACC_FINAL, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #258                // Method $owned_$eq:(Z)Lorg/sireum/RecordSig;
         5: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/sireum/MNone;
            0       6     1     b   Z
    MethodParameters:
      Name                           Flags
      b                              final

  public java.lang.Object $clone();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #260                // Method $clone:()Lorg/sireum/MNone;
         4: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public org.sireum.$internal.MutableMarker $clone();
    descriptor: ()Lorg/sireum/$internal/MutableMarker;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #260                // Method $clone:()Lorg/sireum/MNone;
         4: areturn
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/MNone;

  public org.sireum.MNone();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #264                // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #268                // InterfaceMethod org/sireum/Mutable.$init$:(Lorg/sireum/Mutable;)V
         8: aload_0
         9: invokestatic  #271                // InterfaceMethod org/sireum/RecordSig.$init$:(Lorg/sireum/RecordSig;)V
        12: aload_0
        13: invokestatic  #274                // InterfaceMethod org/sireum/MOption.$init$:(Lorg/sireum/MOption;)V
        16: aload_0
        17: aload_0
        18: invokevirtual #107                // Method $hasEquals:()Z
        21: ifeq          31
        24: aload_0
        25: invokespecial #276                // Method java/lang/Object.hashCode:()I
        28: goto          41
        31: aload_0
        32: invokevirtual #280                // Method getClass:()Ljava/lang/Class;
        35: invokevirtual #285                // Method java/lang/Class.getName:()Ljava/lang/String;
        38: invokevirtual #286                // Method java/lang/String.hashCode:()I
        41: putfield      #103                // Field hashCode:I
        44: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class org/sireum/MNone ]
          stack = [ class org/sireum/MNone ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class org/sireum/MNone ]
          stack = [ class org/sireum/MNone, int ]
      LineNumberTable:
        line 146: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/sireum/MNone;
}
Signature: #3                           // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/sireum/MOption<TT;>;
SourceFile: "MOption.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005%v!\u0002\u000e\u001c\u0011\u0003\u0001c!\u0002\u0012\u001c\u0011\u0003\u0019\u0003\"\u0002\u0016\u0002\t\u0003Y\u0003B\u0002\u0017\u0002A\u0003%A\u0005C\u0003.\u0003\u0011\u0005a\u0006C\u0004\u0002\u0018\u0006!\t!!\'\u0007\t\tZ\"!\r\u0005\u0006U\u0019!\t\u0001\u0012\u0005\u0006\r\u001a!\te\u0012\u0005\u0006!\u001a!\t%\u0015\u0005\b)\u001a\u0011\r\u0011\"\u0011V\u0011\u0019If\u0001)A\u0005-\")!L\u0002C!7\")\u0011M\u0002C!E\")!O\u0002C!g\")AO\u0002C!k\")QP\u0002C!k\"1qP\u0002C!\u0003\u0003Aq!!\b\u0007\t\u0003\ny\u0002C\u0004\u00022\u0019!\t%a\r\t\u000f\u0005ub\u0001\"\u0011\u0002@!9\u0011Q\t\u0004\u0005B\u0005\u001d\u0003bBA+\r\u0011\u0005\u0013q\u000b\u0005\b\u0003;2A\u0011IA0\u0011\u001d\t\u0019G\u0002C!\u0003KBq!!\u001e\u0007\t\u0003\t9(A\u0003N\u001d>tWM\u0003\u0002\u001d;\u000511/\u001b:fk6T\u0011AH\u0001\u0004_J<7\u0001\u0001\t\u0003C\u0005i\u0011a\u0007\u0002\u0006\u001b:{g.Z\n\u0003\u0003\u0011\u0002\"!\n\u0015\u000e\u0003\u0019R\u0011aJ\u0001\u0006g\u000e\fG.Y\u0005\u0003S\u0019\u0012a!\u00118z%\u00164\u0017A\u0002\u001fj]&$h\bF\u0001!\u0003\t!c/A\u0003baBd\u00170F\u00020\u0003+#\u0012\u0001\r\t\u0005C\u0019\t\u0019*\u0006\u00023qM!a\u0001J\u001aB!\r\tCGN\u0005\u0003km\u0011q!T(qi&|g\u000e\u0005\u00028q1\u0001A!B\u001d\u0007\u0005\u0004Q$!\u0001+\u0012\u0005mr\u0004CA\u0013=\u0013\tidEA\u0004O_RD\u0017N\\4\u0011\u0005\u0015z\u0014B\u0001!\'\u0005\r\te.\u001f\t\u0003C\tK!aQ\u000e\u0003\u0013I+7m\u001c:e\'&<G#A#\u0011\u0007\u00052a\'\u0001\u0005u_N#(/\u001b8h)\u0005A\u0005CA%O\u001b\u0005Q%BA&M\u0003\u0011a\u0017M\\4\u000b\u00035\u000bAA[1wC&\u0011qJ\u0013\u0002\u0007\'R\u0014\u0018N\\4\u0002\rM$(/\u001b8h+\u0005\u0011\u0006CA\u0011T\u0013\ty5$\u0001\u0005iCND7i\u001c3f+\u00051\u0006CA\u0013X\u0013\tAfEA\u0002J]R\f\u0011\u0002[1tQ\u000e{G-\u001a\u0011\u0002\r\u0015\fX/\u00197t)\tav\f\u0005\u0002&;&\u0011aL\n\u0002\b\u0005>|G.Z1o\u0011\u0015\u0001G\u00021\u0001?\u0003\u0005y\u0017\u0001\u0003\u0013d_:$XM\u001c;\u0016\u0003\r\u00042\u0001\u001a7p\u001d\t)\'N\u0004\u0002gS6\tqM\u0003\u0002i?\u00051AH]8pizJ\u0011aJ\u0005\u0003W\u001a\nq\u0001]1dW\u0006<W-\u0003\u0002n]\n\u00191+Z9\u000b\u0005-4\u0003\u0003B\u0013q\u0011zJ!!\u001d\u0014\u0003\rQ+\b\u000f\\33\u0003\u0019!3\r\\8oKV\tQ)A\u0004jg\u0016k\u0007\u000f^=\u0016\u0003Y\u0004\"!I<\n\u0005a\\\"!\u0001\")\u0005=Q\bCA\u0011|\u0013\ta8D\u0001\u0003qkJ,\u0017\u0001\u00038p]\u0016k\u0007\u000f^=)\u0005AQ\u0018aA7baV!\u00111AA\u0005)\u0011\t)!!\u0004\u0011\t\u0005\"\u0014q\u0001\t\u0004o\u0005%AABA\u0006#\t\u0007!H\u0001\u0002Ue!9\u0011qB\tA\u0002\u0005E\u0011!\u00014\u0011\r\u0015\n\u0019BNA\f\u0013\r\t)B\n\u0002\n\rVt7\r^5p]FRC!a\u0002\u0002\u001a-\n!\u0010\u000b\u0002\u0012u\u00069a\r\\1u\u001b\u0006\u0004X\u0003BA\u0011\u0003O!B!a\t\u0002*A!\u0011\u0005NA\u0013!\r9\u0014q\u0005\u0003\u0007\u0003\u0017\u0011\"\u0019\u0001\u001e\t\u000f\u0005=!\u00031\u0001\u0002,A1Q%a\u00057\u0003[QC!a\t\u0002\u001a!\u0012!C_\u0001\u0007M>\u0014\u0018\r\u001c7\u0015\u0007Y\f)\u0004C\u0004\u0002\u0010M\u0001\r!a\u000e\u0011\r\u0015\n\u0019BNA\u001dU\r1\u0018\u0011\u0004\u0015\u0003\'i\fa!\u001a=jgR\u001cHc\u0001<\u0002B!9\u0011q\u0002\u000bA\u0002\u0005]\u0002F\u0001\u000b{\u0003%9W\r^(s\u000b2\u001cX\rF\u00027\u0003\u0013B\u0001\"a\u0013\u0016\t\u0003\u0007\u0011QJ\u0001\bI\u00164\u0017-\u001e7u!\u0011)\u0013q\n\u001c\n\u0007\u0005EcE\u0001\u0005=Eft\u0017-\\3?Q\t)\"0\u0001\bhKR|%/\u00127tK\u0016\u000bw-\u001a:\u0015\u0007Y\nI\u0006\u0003\u0004\u0002LY\u0001\rA\u000e\u0015\u0003-i\f1aZ3u+\u00051\u0004FA\f{\u0003\u0011!x.T*\u0016\u0005\u0005\u001d\u0004CB\u0011\u0002j\u00055d\'C\u0002\u0002lm\u0011!!T*\u0011\u0007\u0005\ny\'C\u0002\u0002rm\u0011\u0011A\u0017\u0015\u00031i\fqAZ8sK\u0006\u001c\u0007.\u0006\u0003\u0002z\u0005\u001dE\u0003BA>\u0003\u0003\u00032!JA?\u0013\r\tyH\n\u0002\u0005+:LG\u000fC\u0004\u0002\u0010e\u0001\r!a!\u0011\r\u0015\n\u0019BNAC!\r9\u0014q\u0011\u0003\u0007\u0003\u0013K\"\u0019\u0001\u001e\u0003\u0003YC3ABAG!\r\t\u0013qR\u0005\u0004\u0003#[\"A\u0002:fG>\u0014H\rE\u00028\u0003+#Q!\u000f\u0003C\u0002i\nq!\u001e8baBd\u00170\u0006\u0003\u0002\u001c\u0006\u001dF\u0003BAO\u0003C{!!a(\u001a\u0003\u0005Aa\u0001Y\u0003A\u0002\u0005\r\u0006\u0003B\u0011\u0007\u0003K\u00032aNAT\t\u0015ITA1\u0001;\u0001"
    )
  ScalaInlineInfo: length = 0x95 (unknown attribute)
   01 01 00 1D 00 38 00 39 01 00 A4 00 D3 01 00 A4
   01 05 01 00 A4 00 1E 01 00 6F 00 70 01 00 40 00
   23 01 00 45 00 23 01 00 22 00 23 01 00 2B 01 00
   01 00 2B 00 2C 01 00 99 01 06 01 00 68 00 69 01
   00 CC 00 CA 01 00 C7 00 BA 01 00 C9 00 CA 01 00
   FD 00 FE 01 00 DA 00 D3 01 00 CD 00 CE 01 00 D7
   00 D8 01 00 32 00 33 01 00 0C 00 65 01 00 A6 00
   23 01 00 B9 00 BA 01 00 B5 00 23 01 00 0E 00 23
   01 00 4B 00 4C 01 00 5A 00 4F 01 00 E7 00 E8 01
   00 4E 00 4F 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
