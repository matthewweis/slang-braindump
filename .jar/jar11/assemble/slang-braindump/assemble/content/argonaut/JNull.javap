Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/JNull.class
  Last modified May 29, 2022; size 9683 bytes
  SHA-256 checksum cb4a095354012b30ef94b234802434c1400764c44dc22ab938f24ad16627022c
  Compiled from "Json.scala"
public final class argonaut.JNull
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/JNull
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 73, attributes: 3
Constant pool:
    #1 = Utf8               argonaut/JNull
    #2 = Class              #1            // argonaut/JNull
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Json.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005Q;aAC\u0006\t\u0002.iaAB\b\f\u0011\u0003[\u0001\u0003C\u0003(\u0003\u0011\u0005\u0001\u0006C\u0004*\u0003\u0005\u0005I\u0011\t\u0016\t\u000fM\n\u0011\u0011!C\u0001i!9\u0001(AA\u0001\n\u0003I\u0004bB \u0002\u0003\u0003%\t\u0005\u0011\u0005\b\u000f\u0006\t\t\u0011\"\u0001I\u0011\u001di\u0015!!A\u0005B9CqaT\u0001\u0002\u0002\u0013%\u0001+A\u0003K\u001dVdGNC\u0001\r\u0003!\t\'oZ8oCV$\bC\u0001\b\u0002\u001b\u0005Y!!\u0002&Ok2d7\u0003B\u0001\u0012)i\u0001\"A\u0004\n\n\u0005MY!\u0001\u0002&t_:\u0004\"!\u0006\r\u000e\u0003YQ\u0011aF\u0001\u0006g\u000e\fG.Y\u0005\u00033Y\u0011q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002\u001cI9\u0011AD\t\b\u0003;\u0005j\u0011A\b\u0006\u0003?\u0001\na\u0001\u0010:p_Rt4\u0001A\u0005\u0002/%\u00111EF\u0001\ba\u0006\u001c7.Y4f\u0013\t)cE\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u0002$-\u00051A(\u001b8jiz\"\u0012!D\u0001\u000eaJ|G-^2u!J,g-\u001b=\u0016\u0003-\u0002\"\u0001L\u0019\u000e\u00035R!AL\u0018\u0002\t1\fgn\u001a\u0006\u0002a\u0005!!.\u0019<b\u0013\t\u0011TF\u0001\u0004TiJLgnZ\u0001\raJ|G-^2u\u0003JLG/_\u000b\u0002kA\u0011QCN\u0005\u0003oY\u00111!\u00138u\u00039\u0001(o\u001c3vGR,E.Z7f]R$\"AO\u001f\u0011\u0005UY\u0014B\u0001\u001f\u0017\u0005\r\te.\u001f\u0005\b}\u0015\t\t\u00111\u00016\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\t\u0011\tE\u0002C\u000bjj\u0011a\u0011\u0006\u0003\tZ\t!bY8mY\u0016\u001cG/[8o\u0013\t15I\u0001\u0005Ji\u0016\u0014\u0018\r^8s\u0003!\u0019\u0017M\\#rk\u0006dGCA%M!\t)\"*\u0003\u0002L-\t9!i\\8mK\u0006t\u0007b\u0002 \b\u0003\u0003\u0005\rAO\u0001\tQ\u0006\u001c\bnQ8eKR\tQ\'\u0001\u0007xe&$XMU3qY\u0006\u001cW\rF\u0001R!\ta#+\u0003\u0002T[\t1qJ\u00196fGR\u0004
    #9 = Utf8               hashCode
   #10 = Utf8               ()I
   #11 = Utf8               argonaut/JNull$
   #12 = Class              #11           // argonaut/JNull$
   #13 = Utf8               MODULE$
   #14 = Utf8               Largonaut/JNull$;
   #15 = NameAndType        #13:#14       // MODULE$:Largonaut/JNull$;
   #16 = Fieldref           #12.#15       // argonaut/JNull$.MODULE$:Largonaut/JNull$;
   #17 = NameAndType        #9:#10        // hashCode:()I
   #18 = Methodref          #12.#17       // argonaut/JNull$.hashCode:()I
   #19 = Utf8               canEqual
   #20 = Utf8               (Ljava/lang/Object;)Z
   #21 = Utf8               x$1
   #22 = NameAndType        #19:#20       // canEqual:(Ljava/lang/Object;)Z
   #23 = Methodref          #12.#22       // argonaut/JNull$.canEqual:(Ljava/lang/Object;)Z
   #24 = Utf8               productIterator
   #25 = Utf8               ()Lscala/collection/Iterator;
   #26 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #27 = NameAndType        #24:#25       // productIterator:()Lscala/collection/Iterator;
   #28 = Methodref          #12.#27       // argonaut/JNull$.productIterator:()Lscala/collection/Iterator;
   #29 = Utf8               productElement
   #30 = Utf8               (I)Ljava/lang/Object;
   #31 = NameAndType        #29:#30       // productElement:(I)Ljava/lang/Object;
   #32 = Methodref          #12.#31       // argonaut/JNull$.productElement:(I)Ljava/lang/Object;
   #33 = Utf8               productArity
   #34 = NameAndType        #33:#10       // productArity:()I
   #35 = Methodref          #12.#34       // argonaut/JNull$.productArity:()I
   #36 = Utf8               productPrefix
   #37 = Utf8               ()Ljava/lang/String;
   #38 = NameAndType        #36:#37       // productPrefix:()Ljava/lang/String;
   #39 = Methodref          #12.#38       // argonaut/JNull$.productPrefix:()Ljava/lang/String;
   #40 = Utf8               toString
   #41 = NameAndType        #40:#37       // toString:()Ljava/lang/String;
   #42 = Methodref          #12.#41       // argonaut/JNull$.toString:()Ljava/lang/String;
   #43 = Utf8               deepmerge
   #44 = Utf8               (Largonaut/Json;)Largonaut/Json;
   #45 = Utf8               y
   #46 = NameAndType        #43:#44       // deepmerge:(Largonaut/Json;)Largonaut/Json;
   #47 = Methodref          #12.#46       // argonaut/JNull$.deepmerge:(Largonaut/Json;)Largonaut/Json;
   #48 = Utf8               spaces4
   #49 = NameAndType        #48:#37       // spaces4:()Ljava/lang/String;
   #50 = Methodref          #12.#49       // argonaut/JNull$.spaces4:()Ljava/lang/String;
   #51 = Utf8               spaces2
   #52 = NameAndType        #51:#37       // spaces2:()Ljava/lang/String;
   #53 = Methodref          #12.#52       // argonaut/JNull$.spaces2:()Ljava/lang/String;
   #54 = Utf8               nospacesWithOrder
   #55 = NameAndType        #54:#37       // nospacesWithOrder:()Ljava/lang/String;
   #56 = Methodref          #12.#55       // argonaut/JNull$.nospacesWithOrder:()Ljava/lang/String;
   #57 = Utf8               nospaces
   #58 = NameAndType        #57:#37       // nospaces:()Ljava/lang/String;
   #59 = Methodref          #12.#58       // argonaut/JNull$.nospaces:()Ljava/lang/String;
   #60 = Utf8               pretty
   #61 = Utf8               (Largonaut/PrettyParams;)Ljava/lang/String;
   #62 = Utf8               p
   #63 = NameAndType        #60:#61       // pretty:(Largonaut/PrettyParams;)Ljava/lang/String;
   #64 = Methodref          #12.#63       // argonaut/JNull$.pretty:(Largonaut/PrettyParams;)Ljava/lang/String;
   #65 = Utf8               as
   #66 = Utf8               (Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #67 = Utf8               <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<TA;>;
   #68 = Utf8               e
   #69 = NameAndType        #65:#66       // as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #70 = Methodref          #12.#69       // argonaut/JNull$.as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #71 = Utf8               jdecode
   #72 = NameAndType        #71:#66       // jdecode:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #73 = Methodref          #12.#72       // argonaut/JNull$.jdecode:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
   #74 = Utf8               name
   #75 = NameAndType        #74:#37       // name:()Ljava/lang/String;
   #76 = Methodref          #12.#75       // argonaut/JNull$.name:()Ljava/lang/String;
   #77 = Utf8               fieldOrEmptyObject
   #78 = Utf8               (Lscala/Function0;)Largonaut/Json;
   #79 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
   #80 = Utf8               f
   #81 = NameAndType        #77:#78       // fieldOrEmptyObject:(Lscala/Function0;)Largonaut/Json;
   #82 = Methodref          #12.#81       // argonaut/JNull$.fieldOrEmptyObject:(Lscala/Function0;)Largonaut/Json;
   #83 = Utf8               fieldOrEmptyArray
   #84 = NameAndType        #83:#78       // fieldOrEmptyArray:(Lscala/Function0;)Largonaut/Json;
   #85 = Methodref          #12.#84       // argonaut/JNull$.fieldOrEmptyArray:(Lscala/Function0;)Largonaut/Json;
   #86 = Utf8               fieldOrEmptyString
   #87 = NameAndType        #86:#78       // fieldOrEmptyString:(Lscala/Function0;)Largonaut/Json;
   #88 = Methodref          #12.#87       // argonaut/JNull$.fieldOrEmptyString:(Lscala/Function0;)Largonaut/Json;
   #89 = Utf8               fieldOrZero
   #90 = NameAndType        #89:#78       // fieldOrZero:(Lscala/Function0;)Largonaut/Json;
   #91 = Methodref          #12.#90       // argonaut/JNull$.fieldOrZero:(Lscala/Function0;)Largonaut/Json;
   #92 = Utf8               fieldOrFalse
   #93 = NameAndType        #92:#78       // fieldOrFalse:(Lscala/Function0;)Largonaut/Json;
   #94 = Methodref          #12.#93       // argonaut/JNull$.fieldOrFalse:(Lscala/Function0;)Largonaut/Json;
   #95 = Utf8               fieldOrTrue
   #96 = NameAndType        #95:#78       // fieldOrTrue:(Lscala/Function0;)Largonaut/Json;
   #97 = Methodref          #12.#96       // argonaut/JNull$.fieldOrTrue:(Lscala/Function0;)Largonaut/Json;
   #98 = Utf8               fieldOrNull
   #99 = NameAndType        #98:#78       // fieldOrNull:(Lscala/Function0;)Largonaut/Json;
  #100 = Methodref          #12.#99       // argonaut/JNull$.fieldOrNull:(Lscala/Function0;)Largonaut/Json;
  #101 = Utf8               fieldOr
  #102 = Utf8               (Lscala/Function0;Lscala/Function0;)Largonaut/Json;
  #103 = Utf8               (Lscala/Function0<Ljava/lang/String;>;Lscala/Function0<Largonaut/Json;>;)Largonaut/Json;
  #104 = Utf8               j
  #105 = NameAndType        #101:#102     // fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
  #106 = Methodref          #12.#105      // argonaut/JNull$.fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
  #107 = Utf8               field
  #108 = Utf8               (Lscala/Function0;)Lscala/Option;
  #109 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
  #110 = NameAndType        #107:#108     // field:(Lscala/Function0;)Lscala/Option;
  #111 = Methodref          #12.#110      // argonaut/JNull$.field:(Lscala/Function0;)Lscala/Option;
  #112 = Utf8               hasField
  #113 = Utf8               (Lscala/Function0;)Z
  #114 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Z
  #115 = NameAndType        #112:#113     // hasField:(Lscala/Function0;)Z
  #116 = Methodref          #12.#115      // argonaut/JNull$.hasField:(Lscala/Function0;)Z
  #117 = Utf8               objectValuesOrEmpty
  #118 = Utf8               ()Lscala/collection/immutable/List;
  #119 = Utf8               ()Lscala/collection/immutable/List<Largonaut/Json;>;
  #120 = NameAndType        #117:#118     // objectValuesOrEmpty:()Lscala/collection/immutable/List;
  #121 = Methodref          #12.#120      // argonaut/JNull$.objectValuesOrEmpty:()Lscala/collection/immutable/List;
  #122 = Utf8               objectValuesOr
  #123 = Utf8               (Lscala/Function0;)Lscala/collection/immutable/List;
  #124 = Utf8               (Lscala/Function0<Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/collection/immutable/List<Largonaut/Json;>;
  #125 = Utf8               k
  #126 = NameAndType        #122:#123     // objectValuesOr:(Lscala/Function0;)Lscala/collection/immutable/List;
  #127 = Methodref          #12.#126      // argonaut/JNull$.objectValuesOr:(Lscala/Function0;)Lscala/collection/immutable/List;
  #128 = Utf8               objectValues
  #129 = Utf8               ()Lscala/Option;
  #130 = Utf8               ()Lscala/Option<Lscala/collection/immutable/List<Largonaut/Json;>;>;
  #131 = NameAndType        #128:#129     // objectValues:()Lscala/Option;
  #132 = Methodref          #12.#131      // argonaut/JNull$.objectValues:()Lscala/Option;
  #133 = Utf8               objectFieldsOrEmpty
  #134 = Utf8               ()Lscala/collection/immutable/List<Ljava/lang/String;>;
  #135 = NameAndType        #133:#118     // objectFieldsOrEmpty:()Lscala/collection/immutable/List;
  #136 = Methodref          #12.#135      // argonaut/JNull$.objectFieldsOrEmpty:()Lscala/collection/immutable/List;
  #137 = Utf8               objectFieldsOr
  #138 = Utf8               (Lscala/Function0<Lscala/collection/immutable/List<Ljava/lang/String;>;>;)Lscala/collection/immutable/List<Ljava/lang/String;>;
  #139 = NameAndType        #137:#123     // objectFieldsOr:(Lscala/Function0;)Lscala/collection/immutable/List;
  #140 = Methodref          #12.#139      // argonaut/JNull$.objectFieldsOr:(Lscala/Function0;)Lscala/collection/immutable/List;
  #141 = Utf8               objectFields
  #142 = Utf8               ()Lscala/Option<Lscala/collection/immutable/List<Ljava/lang/String;>;>;
  #143 = NameAndType        #141:#129     // objectFields:()Lscala/Option;
  #144 = Methodref          #12.#143      // argonaut/JNull$.objectFields:()Lscala/Option;
  #145 = Utf8               objectOrEmpty
  #146 = Utf8               ()Largonaut/JsonObject;
  #147 = NameAndType        #145:#146     // objectOrEmpty:()Largonaut/JsonObject;
  #148 = Methodref          #12.#147      // argonaut/JNull$.objectOrEmpty:()Largonaut/JsonObject;
  #149 = Utf8               arrayOrEmpty
  #150 = NameAndType        #149:#118     // arrayOrEmpty:()Lscala/collection/immutable/List;
  #151 = Methodref          #12.#150      // argonaut/JNull$.arrayOrEmpty:()Lscala/collection/immutable/List;
  #152 = Utf8               stringOrEmpty
  #153 = NameAndType        #152:#37      // stringOrEmpty:()Ljava/lang/String;
  #154 = Methodref          #12.#153      // argonaut/JNull$.stringOrEmpty:()Ljava/lang/String;
  #155 = Utf8               numberOrZero
  #156 = Utf8               ()Largonaut/JsonNumber;
  #157 = NameAndType        #155:#156     // numberOrZero:()Largonaut/JsonNumber;
  #158 = Methodref          #12.#157      // argonaut/JNull$.numberOrZero:()Largonaut/JsonNumber;
  #159 = Utf8               objectOr
  #160 = Utf8               (Lscala/Function0;)Largonaut/JsonObject;
  #161 = Utf8               (Lscala/Function0<Largonaut/JsonObject;>;)Largonaut/JsonObject;
  #162 = Utf8               d
  #163 = NameAndType        #159:#160     // objectOr:(Lscala/Function0;)Largonaut/JsonObject;
  #164 = Methodref          #12.#163      // argonaut/JNull$.objectOr:(Lscala/Function0;)Largonaut/JsonObject;
  #165 = Utf8               arrayOr
  #166 = NameAndType        #165:#123     // arrayOr:(Lscala/Function0;)Lscala/collection/immutable/List;
  #167 = Methodref          #12.#166      // argonaut/JNull$.arrayOr:(Lscala/Function0;)Lscala/collection/immutable/List;
  #168 = Utf8               stringOr
  #169 = Utf8               (Lscala/Function0;)Ljava/lang/String;
  #170 = Utf8               (Lscala/Function0<Ljava/lang/String;>;)Ljava/lang/String;
  #171 = NameAndType        #168:#169     // stringOr:(Lscala/Function0;)Ljava/lang/String;
  #172 = Methodref          #12.#171      // argonaut/JNull$.stringOr:(Lscala/Function0;)Ljava/lang/String;
  #173 = Utf8               numberOr
  #174 = Utf8               (Lscala/Function0;)Largonaut/JsonNumber;
  #175 = Utf8               (Lscala/Function0<Largonaut/JsonNumber;>;)Largonaut/JsonNumber;
  #176 = NameAndType        #173:#174     // numberOr:(Lscala/Function0;)Largonaut/JsonNumber;
  #177 = Methodref          #12.#176      // argonaut/JNull$.numberOr:(Lscala/Function0;)Largonaut/JsonNumber;
  #178 = Utf8               isObject
  #179 = Utf8               ()Z
  #180 = NameAndType        #178:#179     // isObject:()Z
  #181 = Methodref          #12.#180      // argonaut/JNull$.isObject:()Z
  #182 = Utf8               isArray
  #183 = NameAndType        #182:#179     // isArray:()Z
  #184 = Methodref          #12.#183      // argonaut/JNull$.isArray:()Z
  #185 = Utf8               isString
  #186 = NameAndType        #185:#179     // isString:()Z
  #187 = Methodref          #12.#186      // argonaut/JNull$.isString:()Z
  #188 = Utf8               isNumber
  #189 = NameAndType        #188:#179     // isNumber:()Z
  #190 = Methodref          #12.#189      // argonaut/JNull$.isNumber:()Z
  #191 = Utf8               isBool
  #192 = NameAndType        #191:#179     // isBool:()Z
  #193 = Methodref          #12.#192      // argonaut/JNull$.isBool:()Z
  #194 = Utf8               isFalse
  #195 = NameAndType        #194:#179     // isFalse:()Z
  #196 = Methodref          #12.#195      // argonaut/JNull$.isFalse:()Z
  #197 = Utf8               isTrue
  #198 = NameAndType        #197:#179     // isTrue:()Z
  #199 = Methodref          #12.#198      // argonaut/JNull$.isTrue:()Z
  #200 = Utf8               $minus$bar$bar
  #201 = Utf8               (Lscala/collection/immutable/List;)Lscala/Option;
  #202 = Utf8               (Lscala/collection/immutable/List<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
  #203 = Utf8               fs
  #204 = NameAndType        #200:#201     // $minus$bar$bar:(Lscala/collection/immutable/List;)Lscala/Option;
  #205 = Methodref          #12.#204      // argonaut/JNull$.$minus$bar$bar:(Lscala/collection/immutable/List;)Lscala/Option;
  #206 = Utf8               $minus$bar
  #207 = NameAndType        #206:#108     // $minus$bar:(Lscala/Function0;)Lscala/Option;
  #208 = Methodref          #12.#207      // argonaut/JNull$.$minus$bar:(Lscala/Function0;)Lscala/Option;
  #209 = Utf8               $minus$minus$greater$greater$qmark$colon
  #210 = Utf8               (Lscala/Option;)Largonaut/Json;
  #211 = Utf8               (Lscala/Option<Largonaut/Json;>;)Largonaut/Json;
  #212 = Utf8               o
  #213 = NameAndType        #209:#210     // $minus$minus$greater$greater$qmark$colon:(Lscala/Option;)Largonaut/Json;
  #214 = Methodref          #12.#213      // argonaut/JNull$.$minus$minus$greater$greater$qmark$colon:(Lscala/Option;)Largonaut/Json;
  #215 = Utf8               $minus$minus$greater$greater$colon
  #216 = NameAndType        #215:#44      // $minus$minus$greater$greater$colon:(Largonaut/Json;)Largonaut/Json;
  #217 = Methodref          #12.#216      // argonaut/JNull$.$minus$minus$greater$greater$colon:(Largonaut/Json;)Largonaut/Json;
  #218 = Utf8               $minus$greater$qmark$colon
  #219 = Utf8               (Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
  #220 = NameAndType        #218:#210     // $minus$greater$qmark$colon:(Lscala/Option;)Largonaut/Json;
  #221 = Methodref          #12.#220      // argonaut/JNull$.$minus$greater$qmark$colon:(Lscala/Option;)Largonaut/Json;
  #222 = Utf8               $minus$greater$colon
  #223 = Utf8               (Lscala/Tuple2;)Largonaut/Json;
  #224 = Utf8               (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/Json;
  #225 = NameAndType        #222:#223     // $minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
  #226 = Methodref          #12.#225      // argonaut/JNull$.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
  #227 = Utf8               withObject
  #228 = Utf8               (Lscala/Function1;)Largonaut/Json;
  #229 = Utf8               (Lscala/Function1<Largonaut/JsonObject;Largonaut/JsonObject;>;)Largonaut/Json;
  #230 = NameAndType        #227:#228     // withObject:(Lscala/Function1;)Largonaut/Json;
  #231 = Methodref          #12.#230      // argonaut/JNull$.withObject:(Lscala/Function1;)Largonaut/Json;
  #232 = Utf8               withArray
  #233 = Utf8               (Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;Lscala/collection/immutable/List<Largonaut/Json;>;>;)Largonaut/Json;
  #234 = NameAndType        #232:#228     // withArray:(Lscala/Function1;)Largonaut/Json;
  #235 = Methodref          #12.#234      // argonaut/JNull$.withArray:(Lscala/Function1;)Largonaut/Json;
  #236 = Utf8               withString
  #237 = Utf8               (Lscala/Function1<Ljava/lang/String;Ljava/lang/String;>;)Largonaut/Json;
  #238 = NameAndType        #236:#228     // withString:(Lscala/Function1;)Largonaut/Json;
  #239 = Methodref          #12.#238      // argonaut/JNull$.withString:(Lscala/Function1;)Largonaut/Json;
  #240 = Utf8               withNumber
  #241 = Utf8               (Lscala/Function1<Largonaut/JsonNumber;Largonaut/JsonNumber;>;)Largonaut/Json;
  #242 = NameAndType        #240:#228     // withNumber:(Lscala/Function1;)Largonaut/Json;
  #243 = Methodref          #12.#242      // argonaut/JNull$.withNumber:(Lscala/Function1;)Largonaut/Json;
  #244 = Utf8               not
  #245 = Utf8               ()Largonaut/Json;
  #246 = NameAndType        #244:#245     // not:()Largonaut/Json;
  #247 = Methodref          #12.#246      // argonaut/JNull$.not:()Largonaut/Json;
  #248 = Utf8               assoc
  #249 = Utf8               ()Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;>;
  #250 = NameAndType        #248:#129     // assoc:()Lscala/Option;
  #251 = Methodref          #12.#250      // argonaut/JNull$.assoc:()Lscala/Option;
  #252 = Utf8               obj
  #253 = Utf8               ()Lscala/Option<Largonaut/JsonObject;>;
  #254 = NameAndType        #252:#129     // obj:()Lscala/Option;
  #255 = Methodref          #12.#254      // argonaut/JNull$.obj:()Lscala/Option;
  #256 = Utf8               array
  #257 = NameAndType        #256:#129     // array:()Lscala/Option;
  #258 = Methodref          #12.#257      // argonaut/JNull$.array:()Lscala/Option;
  #259 = Utf8               string
  #260 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
  #261 = NameAndType        #259:#129     // string:()Lscala/Option;
  #262 = Methodref          #12.#261      // argonaut/JNull$.string:()Lscala/Option;
  #263 = Utf8               number
  #264 = Utf8               ()Lscala/Option<Largonaut/JsonNumber;>;
  #265 = NameAndType        #263:#129     // number:()Lscala/Option;
  #266 = Methodref          #12.#265      // argonaut/JNull$.number:()Lscala/Option;
  #267 = Utf8               bool
  #268 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
  #269 = NameAndType        #267:#129     // bool:()Lscala/Option;
  #270 = Methodref          #12.#269      // argonaut/JNull$.bool:()Lscala/Option;
  #271 = Utf8               isNull
  #272 = NameAndType        #271:#179     // isNull:()Z
  #273 = Methodref          #12.#272      // argonaut/JNull$.isNull:()Z
  #274 = Utf8               acursor
  #275 = Utf8               ()Largonaut/ACursor;
  #276 = NameAndType        #274:#275     // acursor:()Largonaut/ACursor;
  #277 = Methodref          #12.#276      // argonaut/JNull$.acursor:()Largonaut/ACursor;
  #278 = Utf8               hcursor
  #279 = Utf8               ()Largonaut/HCursor;
  #280 = NameAndType        #278:#279     // hcursor:()Largonaut/HCursor;
  #281 = Methodref          #12.#280      // argonaut/JNull$.hcursor:()Largonaut/HCursor;
  #282 = Utf8               cursor
  #283 = Utf8               ()Largonaut/Cursor;
  #284 = NameAndType        #282:#283     // cursor:()Largonaut/Cursor;
  #285 = Methodref          #12.#284      // argonaut/JNull$.cursor:()Largonaut/Cursor;
  #286 = Utf8               unary_$plus
  #287 = NameAndType        #286:#283     // unary_$plus:()Largonaut/Cursor;
  #288 = Methodref          #12.#287      // argonaut/JNull$.unary_$plus:()Largonaut/Cursor;
  #289 = Utf8               arrayOrObject
  #290 = Utf8               (Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #291 = Utf8               <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
  #292 = Utf8               or
  #293 = Utf8               jsonArray
  #294 = Utf8               jsonObject
  #295 = NameAndType        #289:#290     // arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #296 = Methodref          #12.#295      // argonaut/JNull$.arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #297 = Utf8               fold
  #298 = Utf8               (Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #299 = Utf8               <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Ljava/lang/Object;TX;>;Lscala/Function1<Largonaut/JsonNumber;TX;>;Lscala/Function1<Ljava/lang/String;TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
  #300 = Utf8               jsonNull
  #301 = Utf8               jsonBool
  #302 = Utf8               jsonNumber
  #303 = Utf8               jsonString
  #304 = NameAndType        #297:#298     // fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #305 = Methodref          #12.#304      // argonaut/JNull$.fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
  #306 = Utf8               productElementNames
  #307 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
  #308 = NameAndType        #306:#25      // productElementNames:()Lscala/collection/Iterator;
  #309 = Methodref          #12.#308      // argonaut/JNull$.productElementNames:()Lscala/collection/Iterator;
  #310 = Utf8               productElementName
  #311 = Utf8               (I)Ljava/lang/String;
  #312 = Utf8               n
  #313 = NameAndType        #310:#311     // productElementName:(I)Ljava/lang/String;
  #314 = Methodref          #12.#313      // argonaut/JNull$.productElementName:(I)Ljava/lang/String;
  #315 = Utf8               Code
  #316 = Utf8               MethodParameters
  #317 = Utf8               Signature
  #318 = Utf8               SourceFile
  #319 = Utf8               RuntimeVisibleAnnotations
  #320 = Utf8               ScalaSig
{
  public static int hashCode();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #18                 // Method argonaut/JNull$.hashCode:()I
         6: ireturn

  public static boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #23                 // Method argonaut/JNull$.canEqual:(Ljava/lang/Object;)Z
         7: ireturn
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #28                 // Method argonaut/JNull$.productIterator:()Lscala/collection/Iterator;
         6: areturn
    Signature: #26                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public static java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: iload_0
         4: invokevirtual #32                 // Method argonaut/JNull$.productElement:(I)Ljava/lang/Object;
         7: areturn
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static int productArity();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #35                 // Method argonaut/JNull$.productArity:()I
         6: ireturn

  public static java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #39                 // Method argonaut/JNull$.productPrefix:()Ljava/lang/String;
         6: areturn

  public static java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #42                 // Method argonaut/JNull$.toString:()Ljava/lang/String;
         6: areturn

  public static argonaut.Json deepmerge(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #47                 // Method argonaut/JNull$.deepmerge:(Largonaut/Json;)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      y                              final

  public static java.lang.String spaces4();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #50                 // Method argonaut/JNull$.spaces4:()Ljava/lang/String;
         6: areturn

  public static java.lang.String spaces2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #53                 // Method argonaut/JNull$.spaces2:()Ljava/lang/String;
         6: areturn

  public static java.lang.String nospacesWithOrder();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #56                 // Method argonaut/JNull$.nospacesWithOrder:()Ljava/lang/String;
         6: areturn

  public static java.lang.String nospaces();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #59                 // Method argonaut/JNull$.nospaces:()Ljava/lang/String;
         6: areturn

  public static java.lang.String pretty(argonaut.PrettyParams);
    descriptor: (Largonaut/PrettyParams;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #64                 // Method argonaut/JNull$.pretty:(Largonaut/PrettyParams;)Ljava/lang/String;
         7: areturn
    MethodParameters:
      Name                           Flags
      p                              final

  public static <A extends java.lang.Object> argonaut.DecodeResult<A> as(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #70                 // Method argonaut/JNull$.as:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
         7: areturn
    Signature: #67                          // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<TA;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static <A extends java.lang.Object> argonaut.DecodeResult<A> jdecode(argonaut.DecodeJson<A>);
    descriptor: (Largonaut/DecodeJson;)Largonaut/DecodeResult;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #73                 // Method argonaut/JNull$.jdecode:(Largonaut/DecodeJson;)Largonaut/DecodeResult;
         7: areturn
    Signature: #67                          // <A:Ljava/lang/Object;>(Largonaut/DecodeJson<TA;>;)Largonaut/DecodeResult<TA;>;
    MethodParameters:
      Name                           Flags
      e                              final

  public static java.lang.String name();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #76                 // Method argonaut/JNull$.name:()Ljava/lang/String;
         6: areturn

  public static argonaut.Json fieldOrEmptyObject(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #82                 // Method argonaut/JNull$.fieldOrEmptyObject:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOrEmptyArray(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #85                 // Method argonaut/JNull$.fieldOrEmptyArray:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOrEmptyString(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #88                 // Method argonaut/JNull$.fieldOrEmptyString:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOrZero(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #91                 // Method argonaut/JNull$.fieldOrZero:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOrFalse(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #94                 // Method argonaut/JNull$.fieldOrFalse:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOrTrue(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #97                 // Method argonaut/JNull$.fieldOrTrue:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOrNull(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #100                // Method argonaut/JNull$.fieldOrNull:(Lscala/Function0;)Largonaut/Json;
         7: areturn
    Signature: #79                          // (Lscala/Function0<Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json fieldOr(scala.Function0<java.lang.String>, scala.Function0<argonaut.Json>);
    descriptor: (Lscala/Function0;Lscala/Function0;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: aload_1
         5: invokevirtual #106                // Method argonaut/JNull$.fieldOr:(Lscala/Function0;Lscala/Function0;)Largonaut/Json;
         8: areturn
    Signature: #103                         // (Lscala/Function0<Ljava/lang/String;>;Lscala/Function0<Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      f                              final
      j                              final

  public static scala.Option<argonaut.Json> field(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #111                // Method argonaut/JNull$.field:(Lscala/Function0;)Lscala/Option;
         7: areturn
    Signature: #109                         // (Lscala/Function0<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static boolean hasField(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #116                // Method argonaut/JNull$.hasField:(Lscala/Function0;)Z
         7: ireturn
    Signature: #114                         // (Lscala/Function0<Ljava/lang/String;>;)Z
    MethodParameters:
      Name                           Flags
      f                              final

  public static scala.collection.immutable.List<argonaut.Json> objectValuesOrEmpty();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #121                // Method argonaut/JNull$.objectValuesOrEmpty:()Lscala/collection/immutable/List;
         6: areturn
    Signature: #119                         // ()Lscala/collection/immutable/List<Largonaut/Json;>;

  public static scala.collection.immutable.List<argonaut.Json> objectValuesOr(scala.Function0<scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Lscala/Function0;)Lscala/collection/immutable/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #127                // Method argonaut/JNull$.objectValuesOr:(Lscala/Function0;)Lscala/collection/immutable/List;
         7: areturn
    Signature: #124                         // (Lscala/Function0<Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/collection/immutable/List<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public static scala.Option<scala.collection.immutable.List<argonaut.Json>> objectValues();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #132                // Method argonaut/JNull$.objectValues:()Lscala/Option;
         6: areturn
    Signature: #130                         // ()Lscala/Option<Lscala/collection/immutable/List<Largonaut/Json;>;>;

  public static scala.collection.immutable.List<java.lang.String> objectFieldsOrEmpty();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #136                // Method argonaut/JNull$.objectFieldsOrEmpty:()Lscala/collection/immutable/List;
         6: areturn
    Signature: #134                         // ()Lscala/collection/immutable/List<Ljava/lang/String;>;

  public static scala.collection.immutable.List<java.lang.String> objectFieldsOr(scala.Function0<scala.collection.immutable.List<java.lang.String>>);
    descriptor: (Lscala/Function0;)Lscala/collection/immutable/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #140                // Method argonaut/JNull$.objectFieldsOr:(Lscala/Function0;)Lscala/collection/immutable/List;
         7: areturn
    Signature: #138                         // (Lscala/Function0<Lscala/collection/immutable/List<Ljava/lang/String;>;>;)Lscala/collection/immutable/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static scala.Option<scala.collection.immutable.List<java.lang.String>> objectFields();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #144                // Method argonaut/JNull$.objectFields:()Lscala/Option;
         6: areturn
    Signature: #142                         // ()Lscala/Option<Lscala/collection/immutable/List<Ljava/lang/String;>;>;

  public static argonaut.JsonObject objectOrEmpty();
    descriptor: ()Largonaut/JsonObject;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #148                // Method argonaut/JNull$.objectOrEmpty:()Largonaut/JsonObject;
         6: areturn

  public static scala.collection.immutable.List<argonaut.Json> arrayOrEmpty();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #151                // Method argonaut/JNull$.arrayOrEmpty:()Lscala/collection/immutable/List;
         6: areturn
    Signature: #119                         // ()Lscala/collection/immutable/List<Largonaut/Json;>;

  public static java.lang.String stringOrEmpty();
    descriptor: ()Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #154                // Method argonaut/JNull$.stringOrEmpty:()Ljava/lang/String;
         6: areturn

  public static argonaut.JsonNumber numberOrZero();
    descriptor: ()Largonaut/JsonNumber;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #158                // Method argonaut/JNull$.numberOrZero:()Largonaut/JsonNumber;
         6: areturn

  public static argonaut.JsonObject objectOr(scala.Function0<argonaut.JsonObject>);
    descriptor: (Lscala/Function0;)Largonaut/JsonObject;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #164                // Method argonaut/JNull$.objectOr:(Lscala/Function0;)Largonaut/JsonObject;
         7: areturn
    Signature: #161                         // (Lscala/Function0<Largonaut/JsonObject;>;)Largonaut/JsonObject;
    MethodParameters:
      Name                           Flags
      d                              final

  public static scala.collection.immutable.List<argonaut.Json> arrayOr(scala.Function0<scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Lscala/Function0;)Lscala/collection/immutable/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #167                // Method argonaut/JNull$.arrayOr:(Lscala/Function0;)Lscala/collection/immutable/List;
         7: areturn
    Signature: #124                         // (Lscala/Function0<Lscala/collection/immutable/List<Largonaut/Json;>;>;)Lscala/collection/immutable/List<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      d                              final

  public static java.lang.String stringOr(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #172                // Method argonaut/JNull$.stringOr:(Lscala/Function0;)Ljava/lang/String;
         7: areturn
    Signature: #170                         // (Lscala/Function0<Ljava/lang/String;>;)Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      d                              final

  public static argonaut.JsonNumber numberOr(scala.Function0<argonaut.JsonNumber>);
    descriptor: (Lscala/Function0;)Largonaut/JsonNumber;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #177                // Method argonaut/JNull$.numberOr:(Lscala/Function0;)Largonaut/JsonNumber;
         7: areturn
    Signature: #175                         // (Lscala/Function0<Largonaut/JsonNumber;>;)Largonaut/JsonNumber;
    MethodParameters:
      Name                           Flags
      d                              final

  public static boolean isObject();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #181                // Method argonaut/JNull$.isObject:()Z
         6: ireturn

  public static boolean isArray();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #184                // Method argonaut/JNull$.isArray:()Z
         6: ireturn

  public static boolean isString();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #187                // Method argonaut/JNull$.isString:()Z
         6: ireturn

  public static boolean isNumber();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #190                // Method argonaut/JNull$.isNumber:()Z
         6: ireturn

  public static boolean isBool();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #193                // Method argonaut/JNull$.isBool:()Z
         6: ireturn

  public static boolean isFalse();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #196                // Method argonaut/JNull$.isFalse:()Z
         6: ireturn

  public static boolean isTrue();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #199                // Method argonaut/JNull$.isTrue:()Z
         6: ireturn

  public static scala.Option<argonaut.Json> $minus$bar$bar(scala.collection.immutable.List<java.lang.String>);
    descriptor: (Lscala/collection/immutable/List;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #205                // Method argonaut/JNull$.$minus$bar$bar:(Lscala/collection/immutable/List;)Lscala/Option;
         7: areturn
    Signature: #202                         // (Lscala/collection/immutable/List<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      fs                             final

  public static scala.Option<argonaut.Json> $minus$bar(scala.Function0<java.lang.String>);
    descriptor: (Lscala/Function0;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #208                // Method argonaut/JNull$.$minus$bar:(Lscala/Function0;)Lscala/Option;
         7: areturn
    Signature: #109                         // (Lscala/Function0<Ljava/lang/String;>;)Lscala/Option<Largonaut/Json;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public static argonaut.Json $minus$minus$greater$greater$qmark$colon(scala.Option<argonaut.Json>);
    descriptor: (Lscala/Option;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #214                // Method argonaut/JNull$.$minus$minus$greater$greater$qmark$colon:(Lscala/Option;)Largonaut/Json;
         7: areturn
    Signature: #211                         // (Lscala/Option<Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      o                              final

  public static argonaut.Json $minus$minus$greater$greater$colon(argonaut.Json);
    descriptor: (Largonaut/Json;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #217                // Method argonaut/JNull$.$minus$minus$greater$greater$colon:(Largonaut/Json;)Largonaut/Json;
         7: areturn
    MethodParameters:
      Name                           Flags
      k                              final

  public static argonaut.Json $minus$greater$qmark$colon(scala.Option<scala.Tuple2<java.lang.String, argonaut.Json>>);
    descriptor: (Lscala/Option;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #221                // Method argonaut/JNull$.$minus$greater$qmark$colon:(Lscala/Option;)Largonaut/Json;
         7: areturn
    Signature: #219                         // (Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      o                              final

  public static argonaut.Json $minus$greater$colon(scala.Tuple2<java.lang.String, argonaut.Json>);
    descriptor: (Lscala/Tuple2;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #226                // Method argonaut/JNull$.$minus$greater$colon:(Lscala/Tuple2;)Largonaut/Json;
         7: areturn
    Signature: #224                         // (Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public static argonaut.Json withObject(scala.Function1<argonaut.JsonObject, argonaut.JsonObject>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #231                // Method argonaut/JNull$.withObject:(Lscala/Function1;)Largonaut/Json;
         7: areturn
    Signature: #229                         // (Lscala/Function1<Largonaut/JsonObject;Largonaut/JsonObject;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public static argonaut.Json withArray(scala.Function1<scala.collection.immutable.List<argonaut.Json>, scala.collection.immutable.List<argonaut.Json>>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #235                // Method argonaut/JNull$.withArray:(Lscala/Function1;)Largonaut/Json;
         7: areturn
    Signature: #233                         // (Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;Lscala/collection/immutable/List<Largonaut/Json;>;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public static argonaut.Json withString(scala.Function1<java.lang.String, java.lang.String>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #239                // Method argonaut/JNull$.withString:(Lscala/Function1;)Largonaut/Json;
         7: areturn
    Signature: #237                         // (Lscala/Function1<Ljava/lang/String;Ljava/lang/String;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public static argonaut.Json withNumber(scala.Function1<argonaut.JsonNumber, argonaut.JsonNumber>);
    descriptor: (Lscala/Function1;)Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: invokevirtual #243                // Method argonaut/JNull$.withNumber:(Lscala/Function1;)Largonaut/Json;
         7: areturn
    Signature: #241                         // (Lscala/Function1<Largonaut/JsonNumber;Largonaut/JsonNumber;>;)Largonaut/Json;
    MethodParameters:
      Name                           Flags
      k                              final

  public static argonaut.Json not();
    descriptor: ()Largonaut/Json;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #247                // Method argonaut/JNull$.not:()Largonaut/Json;
         6: areturn

  public static scala.Option<scala.collection.immutable.List<scala.Tuple2<java.lang.String, argonaut.Json>>> assoc();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #251                // Method argonaut/JNull$.assoc:()Lscala/Option;
         6: areturn
    Signature: #249                         // ()Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Ljava/lang/String;Largonaut/Json;>;>;>;

  public static scala.Option<argonaut.JsonObject> obj();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #255                // Method argonaut/JNull$.obj:()Lscala/Option;
         6: areturn
    Signature: #253                         // ()Lscala/Option<Largonaut/JsonObject;>;

  public static scala.Option<scala.collection.immutable.List<argonaut.Json>> array();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #258                // Method argonaut/JNull$.array:()Lscala/Option;
         6: areturn
    Signature: #130                         // ()Lscala/Option<Lscala/collection/immutable/List<Largonaut/Json;>;>;

  public static scala.Option<java.lang.String> string();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #262                // Method argonaut/JNull$.string:()Lscala/Option;
         6: areturn
    Signature: #260                         // ()Lscala/Option<Ljava/lang/String;>;

  public static scala.Option<argonaut.JsonNumber> number();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #266                // Method argonaut/JNull$.number:()Lscala/Option;
         6: areturn
    Signature: #264                         // ()Lscala/Option<Largonaut/JsonNumber;>;

  public static scala.Option<java.lang.Object> bool();
    descriptor: ()Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #270                // Method argonaut/JNull$.bool:()Lscala/Option;
         6: areturn
    Signature: #268                         // ()Lscala/Option<Ljava/lang/Object;>;

  public static boolean isNull();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #273                // Method argonaut/JNull$.isNull:()Z
         6: ireturn

  public static argonaut.ACursor acursor();
    descriptor: ()Largonaut/ACursor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #277                // Method argonaut/JNull$.acursor:()Largonaut/ACursor;
         6: areturn

  public static argonaut.HCursor hcursor();
    descriptor: ()Largonaut/HCursor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #281                // Method argonaut/JNull$.hcursor:()Largonaut/HCursor;
         6: areturn

  public static argonaut.Cursor cursor();
    descriptor: ()Largonaut/Cursor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #285                // Method argonaut/JNull$.cursor:()Largonaut/Cursor;
         6: areturn

  public static argonaut.Cursor unary_$plus();
    descriptor: ()Largonaut/Cursor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #288                // Method argonaut/JNull$.unary_$plus:()Largonaut/Cursor;
         6: areturn

  public static <X extends java.lang.Object> X arrayOrObject(scala.Function0<X>, scala.Function1<scala.collection.immutable.List<argonaut.Json>, X>, scala.Function1<argonaut.JsonObject, X>);
    descriptor: (Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #296                // Method argonaut/JNull$.arrayOrObject:(Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
         9: areturn
    Signature: #291                         // <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
    MethodParameters:
      Name                           Flags
      or                             final
      jsonArray                      final
      jsonObject                     final

  public static <X extends java.lang.Object> X fold(scala.Function0<X>, scala.Function1<java.lang.Object, X>, scala.Function1<argonaut.JsonNumber, X>, scala.Function1<java.lang.String, X>, scala.Function1<scala.collection.immutable.List<argonaut.Json>, X>, scala.Function1<argonaut.JsonObject, X>);
    descriptor: (Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=6, args_size=6
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: invokevirtual #305                // Method argonaut/JNull$.fold:(Lscala/Function0;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
        14: areturn
    Signature: #299                         // <X:Ljava/lang/Object;>(Lscala/Function0<TX;>;Lscala/Function1<Ljava/lang/Object;TX;>;Lscala/Function1<Largonaut/JsonNumber;TX;>;Lscala/Function1<Ljava/lang/String;TX;>;Lscala/Function1<Lscala/collection/immutable/List<Largonaut/Json;>;TX;>;Lscala/Function1<Largonaut/JsonObject;TX;>;)TX;
    MethodParameters:
      Name                           Flags
      jsonNull                       final
      jsonBool                       final
      jsonNumber                     final
      jsonString                     final
      jsonArray                      final
      jsonObject                     final

  public static scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: invokevirtual #309                // Method argonaut/JNull$.productElementNames:()Lscala/collection/Iterator;
         6: areturn
    Signature: #307                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public static java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #16                 // Field argonaut/JNull$.MODULE$:Largonaut/JNull$;
         3: iload_0
         4: invokevirtual #314                // Method argonaut/JNull$.productElementName:(I)Ljava/lang/String;
         7: areturn
    MethodParameters:
      Name                           Flags
      n                              final
}
SourceFile: "Json.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005Q;aAC\u0006\t\u0002.iaAB\b\f\u0011\u0003[\u0001\u0003C\u0003(\u0003\u0011\u0005\u0001\u0006C\u0004*\u0003\u0005\u0005I\u0011\t\u0016\t\u000fM\n\u0011\u0011!C\u0001i!9\u0001(AA\u0001\n\u0003I\u0004bB \u0002\u0003\u0003%\t\u0005\u0011\u0005\b\u000f\u0006\t\t\u0011\"\u0001I\u0011\u001di\u0015!!A\u0005B9CqaT\u0001\u0002\u0002\u0013%\u0001+A\u0003K\u001dVdGNC\u0001\r\u0003!\t\'oZ8oCV$\bC\u0001\b\u0002\u001b\u0005Y!!\u0002&Ok2d7\u0003B\u0001\u0012)i\u0001\"A\u0004\n\n\u0005MY!\u0001\u0002&t_:\u0004\"!\u0006\r\u000e\u0003YQ\u0011aF\u0001\u0006g\u000e\fG.Y\u0005\u00033Y\u0011q\u0001\u0015:pIV\u001cG\u000f\u0005\u0002\u001cI9\u0011AD\t\b\u0003;\u0005j\u0011A\b\u0006\u0003?\u0001\na\u0001\u0010:p_Rt4\u0001A\u0005\u0002/%\u00111EF\u0001\ba\u0006\u001c7.Y4f\u0013\t)cE\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u0002$-\u00051A(\u001b8jiz\"\u0012!D\u0001\u000eaJ|G-^2u!J,g-\u001b=\u0016\u0003-\u0002\"\u0001L\u0019\u000e\u00035R!AL\u0018\u0002\t1\fgn\u001a\u0006\u0002a\u0005!!.\u0019<b\u0013\t\u0011TF\u0001\u0004TiJLgnZ\u0001\raJ|G-^2u\u0003JLG/_\u000b\u0002kA\u0011QCN\u0005\u0003oY\u00111!\u00138u\u00039\u0001(o\u001c3vGR,E.Z7f]R$\"AO\u001f\u0011\u0005UY\u0014B\u0001\u001f\u0017\u0005\r\te.\u001f\u0005\b}\u0015\t\t\u00111\u00016\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\t\u0011\tE\u0002C\u000bjj\u0011a\u0011\u0006\u0003\tZ\t!bY8mY\u0016\u001cG/[8o\u0013\t15I\u0001\u0005Ji\u0016\u0014\u0018\r^8s\u0003!\u0019\u0017M\\#rk\u0006dGCA%M!\t)\"*\u0003\u0002L-\t9!i\\8mK\u0006t\u0007b\u0002 \b\u0003\u0003\u0005\rAO\u0001\tQ\u0006\u001c\bnQ8eKR\tQ\'\u0001\u0007xe&$XMU3qY\u0006\u001cW\rF\u0001R!\ta#+\u0003\u0002T[\t1qJ\u00196fGR\u0004"
    )
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
