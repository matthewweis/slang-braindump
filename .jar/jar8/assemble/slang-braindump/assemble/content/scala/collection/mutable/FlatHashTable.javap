Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/mutable/FlatHashTable.class
  Last modified May 29, 2022; size 20865 bytes
  SHA-256 checksum b2d451bd52b60cbd0d63b35212d1bc3adab1e7d342606c73bc0bfacfb1e56417
  Compiled from "FlatHashTable.scala"
public interface scala.collection.mutable.FlatHashTable<A extends java.lang.Object> extends scala.collection.mutable.FlatHashTable$HashUtils<A>
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // scala/collection/mutable/FlatHashTable
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 87, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/mutable/FlatHashTable
    #2 = Class              #1            // scala/collection/mutable/FlatHashTable
    #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/mutable/FlatHashTable$HashUtils<TA;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/collection/mutable/FlatHashTable$HashUtils
    #7 = Class              #6            // scala/collection/mutable/FlatHashTable$HashUtils
    #8 = Utf8               FlatHashTable.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\t\u0005f\u0001\u0003*T!\u0003\r\t!V-\t\u000f\u0005\u0005\u0005\u0001\"\u0001\u0002\u0004\"9\u00111\u0017\u0001\u0005\n\u0005U\u0006BCA\u0011\u0001\u0001\u0007I\u0011A+\u0002\u0014!Q\u0011Q\u0018\u0001A\u0002\u0013\u0005Q+a0\t\u0013\u0005U\u0002\u00011A\u0005\u0002\u0005]\u0002\"CAc\u0001\u0001\u0007I\u0011AAd\u0011%\t\t\u0005\u0001a\u0001\n#\t\u0019\u0002C\u0005\u0002L\u0002\u0001\r\u0011\"\u0005\u0002N\"I\u0011Q\t\u0001A\u0002\u0013E\u00111\u0003\u0005\n\u0003#\u0004\u0001\u0019!C\t\u0003\'D\u0011\"!\u0014\u0001\u0001\u0004%\t\"a\u0014\t\u0013\u0005]\u0007\u00011A\u0005\u0012\u0005e\u0007\"CA%\u0001\u0001\u0007I\u0011CA\n\u0011%\ti\u000e\u0001a\u0001\n#\ty\u000eC\u0004\u0002d\u0002!\t\"!:\t\u000f\u0005-\b\u0001\"\u0001\u0002\u0014!9\u0011Q\u0004\u0001\u0005\u0002\u0005M\u0001bBAw\u0001\u0011%\u00111\u0003\u0005\b\u0003_\u0004A\u0011CA\n\u0011\u001d\t\t\u0010\u0001C\t\u0003\'Aq!a=\u0001\t\u0003\t)\u0010C\u0004\u0003\u0012\u0001!\tAa\u0005\t\u000f\t}\u0001\u0001\"\u0001\u0003\"!9!1\u0006\u0001\u0005\u0002\t5\u0002b\u0002B\u0019\u0001\u0011%!1\u0007\u0005\b\u0005o\u0001A\u0011\u0001B\u001d\u0011\u001d\u0011i\u0004\u0001C\t\u0005\u007fAqA!\u0012\u0001\t\u0003\u00119\u0005C\u0004\u0003L\u0001!\tA!\u0014\t\u000f\t]\u0003\u0001\"\u0003\u0002\u0004\"9!\u0011\f\u0001\u0005\n\u0005\r\u0005b\u0002B.\u0001\u0011U!Q\f\u0005\b\u0005G\u0002AQ\u0003B3\u0011\u001d\u0011I\u0007\u0001C\u000b\u0005WB\u0001B!\u001d\u0001\t\u000b)\u00161\u0003\u0005\b\u0005g\u0002AQ\u0003B;\u0011\u001d\u0011I\b\u0001C\u000b\u0005wBqAa \u0001\t+\t\u0019\t\u0003\u0005\u0003\u0002\u0002!\t!VAB\u0011!\u0011\u0019\t\u0001C\u0001+\u0006\r\u0005b\u0002BC\u0001\u0011E\u00111\u0011\u0005\b\u0005\u000f\u0003A\u0011CA[\u0011\u001d\u0011I\t\u0001C\t\u0003kCqAa#\u0001\t#\u0011i\tC\u0004\u0003\u0012\u0002!\t!a!\t\u0011\tM\u0005\u0001\"\u0001V\u0005+CqA!\'\u0001\t#\u0011Yj\u0002\u0004c\'\"\u0005Qk\u0019\u0004\u0007%NC\t!\u00163\t\u000b\u0015\fD\u0011A4\t\u000b!\fDQA5\b\u000ba\f\u0004\u0012B=\u0007\u000bm\f\u0004\u0012\u0002?\t\u000b\u0015,D\u0011A?\t\u000by,D\u0011I@\t\u000f\u0005\u001dQ\u0007\"\u0011\u0002\n!9\u0011\u0011C\u0019\u0005\u0002\u0005M\u0001bBA\u000bc\u0011\u0015\u00111\u0003\u0005\b\u0003/\tD\u0011AA\r\u0011\u001d\t\u0019#\rC\u0001\u0003K1a!a\u000b2\u0001\u00055\u0002BCA\u0019{\t\u0015\r\u0011\"\u0001\u0002\u0014!Q\u00111G\u001f\u0003\u0002\u0003\u0006I!!\u0001\t\u0015\u0005URH!b\u0001\n\u0003\t9\u0004\u0003\u0006\u0002@u\u0012\t\u0011)A\u0005\u0003sA!\"!\u0011>\u0005\u000b\u0007I\u0011AA\n\u0011)\t\u0019%\u0010B\u0001B\u0003%\u0011\u0011\u0001\u0005\u000b\u0003\u000bj$Q1A\u0005\u0002\u0005M\u0001BCA${\t\u0005\t\u0015!\u0003\u0002\u0002!Q\u0011\u0011J\u001f\u0003\u0006\u0004%\t!a\u0005\t\u0015\u0005-SH!A!\u0002\u0013\t\t\u0001\u0003\u0006\u0002Nu\u0012)\u0019!C\u0001\u0003\u001fB!\"a\u0015>\u0005\u0003\u0005\u000b\u0011BA)\u0011\u0019)W\b\"\u0001\u0002V\u0019I\u00111P\u0019\u0011\u0002\u0007\u0005\u0011Q\u0010\u0005\b\u0003\u0003[E\u0011AAB\u0011\u001d\tYi\u0013C\u000b\u0003\'Aq!!$L\t+\t\u0019\u0002C\u0004\u0002\u0010.#)\"!%\t\u000f\u0005m5\n\"\u0006\u0002\u001e\"9\u0011qU&\u0005\u0006\u0005%&!\u0004$mCRD\u0015m\u001d5UC\ndWM\u0003\u0002U+\u00069Q.\u001e;bE2,\'B\u0001,X\u0003)\u0019w\u000e\u001c7fGRLwN\u001c\u0006\u00021\u0006)1oY1mCV\u0019!,!-\u0014\u0007\u0001Yv\f\u0005\u0002];6\tq+\u0003\u0002_/\n1\u0011I\\=SK\u001a\u0004B\u0001Y&\u00020:\u0011\u0011\rM\u0007\u0002\'\u0006ia\t\\1u\u0011\u0006\u001c\b\u000eV1cY\u0016\u0004\"!Y\u0019\u0014\u0005EZ\u0016A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003\r\fQb]3fI\u001e+g.\u001a:bi>\u0014X#\u00016\u0011\u0007-\u0004(/D\u0001m\u0015\tig.\u0001\u0003mC:<\'\"A8\u0002\t)\fg/Y\u0005\u0003c2\u00141\u0002\u00165sK\u0006$Gj\\2bYB\u00111O^\u0007\u0002i*\u0011QoV\u0001\u0005kRLG.\u0003\u0002xi\n1!+\u00198e_6\fABT;mYN+g\u000e^5oK2\u0004\"A_\u001b\u000e\u0003E\u0012ABT;mYN+g\u000e^5oK2\u001c\"!N.\u0015\u0003e\f\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0003\u0003\u0003\u00012\u0001XA\u0002\u0013\r\t)a\u0016\u0002\u0004\u0013:$\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005-\u0001cA6\u0002\u000e%\u0019\u0011q\u00027\u0003\rM#(/\u001b8h\u0003E!WMZ1vYRdu.\u00193GC\u000e$xN]\u000b\u0003\u0003\u0003\tq\u0002\\8bI\u001a\u000b7\r^8s\t\u0016tW/\\\u0001\u0011g&TXMR8s)\"\u0014Xm\u001d5pY\u0012$b!!\u0001\u0002\u001c\u0005}\u0001bBA\u000fw\u0001\u0007\u0011\u0011A\u0001\u0005g&TX\rC\u0004\u0002\"m\u0002\r!!\u0001\u0002\u0017}cw.\u00193GC\u000e$xN]\u0001\r]\u0016<H\u000b\u001b:fg\"|G\u000e\u001a\u000b\u0007\u0003\u0003\t9#!\u000b\t\u000f\u0005\u0005B\b1\u0001\u0002\u0002!9\u0011Q\u0004\u001fA\u0002\u0005\u0005!\u0001C\"p]R,g\u000e^:\u0016\t\u0005=\u0012QL\n\u0003{m\u000b!\u0002\\8bI\u001a\u000b7\r^8s\u0003-aw.\u00193GC\u000e$xN\u001d\u0011\u0002\u000bQ\f\'\r\\3\u0016\u0005\u0005e\u0002\u0003\u0002/\u0002<mK1!!\u0010X\u0005\u0015\t%O]1z\u0003\u0019!\u0018M\u00197fA\u0005IA/\u00192mKNK\'0Z\u0001\u000bi\u0006\u0014G.Z*ju\u0016\u0004\u0013!\u0003;ie\u0016\u001c\bn\u001c7e\u0003)!\bN]3tQ>dG\rI\u0001\ng\u0016,GM^1mk\u0016\f!b]3fIZ\fG.^3!\u0003\u001d\u0019\u0018N_3nCB,\"!!\u0015\u0011\u000bq\u000bY$!\u0001\u0002\u0011ML\'0Z7ba\u0002\"b\"a\u0016\u0002p\u0005E\u00141OA;\u0003o\nI\b\u0005\u0003{{\u0005e\u0003\u0003BA.\u0003;b\u0001\u0001B\u0004\u0002`u\u0012\r!!\u0019\u0003\u0003\u0005\u000bB!a\u0019\u0002jA\u0019A,!\u001a\n\u0007\u0005\u001dtKA\u0004O_RD\u0017N\\4\u0011\u0007q\u000bY\'C\u0002\u0002n]\u00131!\u00118z\u0011\u001d\t\tD\u0013a\u0001\u0003\u0003Aq!!\u000eK\u0001\u0004\tI\u0004C\u0004\u0002B)\u0003\r!!\u0001\t\u000f\u0005\u0015#\n1\u0001\u0002\u0002!9\u0011\u0011\n&A\u0002\u0005\u0005\u0001bBA\'\u0015\u0002\u0007\u0011\u0011\u000b\u0002\n\u0011\u0006\u001c\b.\u0016;jYN,B!a \u0002&N\u00111jW\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0005\u0005\u0015\u0005c\u0001/\u0002\b&\u0019\u0011\u0011R,\u0003\tUs\u0017\u000e^\u0001\u0015g&TX-T1q\u0005V\u001c7.\u001a;CSR\u001c\u0016N_3\u0002#ML\'0Z\'ba\n+8m[3u\'&TX-A\u0004j[B\u0014xN^3\u0015\r\u0005\u0005\u00111SAL\u0011\u001d\t)j\u0014a\u0001\u0003\u0003\tQ\u0001[2pI\u0016Dq!!\'P\u0001\u0004\t\t!\u0001\u0003tK\u0016$\u0017aC3mK6$v.\u00128uef$2aWAP\u0011\u001d\t\t\u000b\u0015a\u0001\u0003G\u000bA!\u001a7f[B!\u00111LAS\t\u001d\tyf\u0013b\u0001\u0003C\n1\"\u001a8uef$v.\u00127f[R!\u00111UAV\u0011\u0019\ti+\u0015a\u00017\u0006)QM\u001c;ssB!\u00111LAY\t\u001d\ty\u0006\u0001b\u0001\u0003C\n!\u0002^1cY\u0016$UMY;h+\t\t9\fE\u0002]\u0003sK1!a/X\u0005\u001d\u0011un\u001c7fC:\fqb\u00187pC\u00124\u0015m\u0019;pe~#S-\u001d\u000b\u0005\u0003\u000b\u000b\t\rC\u0005\u0002D\u0012\t\t\u00111\u0001\u0002\u0002\u0005\u0019\u0001\u0010J\u0019\u0002\u0013Q\f\'\r\\3`I\u0015\fH\u0003BAC\u0003\u0013D\u0011\"a1\u0007\u0003\u0003\u0005\r!!\u000f\u0002\u001bQ\f\'\r\\3TSj,w\fJ3r)\u0011\t))a4\t\u0013\u0005\r\u0007\"!AA\u0002\u0005\u0005\u0011!\u0004;ie\u0016\u001c\bn\u001c7e?\u0012*\u0017\u000f\u0006\u0003\u0002\u0006\u0006U\u0007\"CAb\u0015\u0005\u0005\t\u0019AA\u0001\u0003-\u0019\u0018N_3nCB|F%Z9\u0015\t\u0005\u0015\u00151\u001c\u0005\n\u0003\u0007d\u0011\u0011!a\u0001\u0003#\nQb]3fIZ\fG.^3`I\u0015\fH\u0003BAC\u0003CD\u0011\"a1\u000f\u0003\u0003\u0005\r!!\u0001\u0002\u0011\r\f\u0007/Y2jif$B!!\u0001\u0002h\"9\u0011\u0011^\bA\u0002\u0005\u0005\u0011\u0001D3ya\u0016\u001cG/\u001a3TSj,\u0017aC5oSRL\u0017\r\\*ju\u0016\fq\"\u001b8ji&\fGnQ1qC\u000eLG/_\u0001\u000be\u0006tGm\\7TK\u0016$\u0017!\u0004;bE2,7+\u001b>f\'\u0016,G-\u0001\u0003j]&$HCBAC\u0003o\u00149\u0001C\u0004\u0002zV\u0001\r!a?\u0002\u0005%t\u0007\u0003BA\u007f\u0005\u0007i!!a@\u000b\u0007\t\u0005a.\u0001\u0002j_&!!QAA\u0000\u0005Ey%M[3di&s\u0007/\u001e;TiJ,\u0017-\u001c\u0005\b\u0005\u0013)\u0002\u0019\u0001B\u0006\u0003\u00051\u0007c\u0002/\u0003\u000e\u0005=\u0016QQ\u0005\u0004\u0005\u001f9&!\u0003$v]\u000e$\u0018n\u001c82\u0003-\u0019XM]5bY&TX\rV8\u0015\t\u0005\u0015%Q\u0003\u0005\b\u0005/1\u0002\u0019\u0001B\r\u0003\ryW\u000f\u001e\t\u0005\u0003{\u0014Y\"\u0003\u0003\u0003\u001e\u0005}(AE(cU\u0016\u001cGoT;uaV$8\u000b\u001e:fC6\f\u0011BZ5oI\u0016sGO]=\u0015\t\t\r\"\u0011\u0006\t\u00069\n\u0015\u0012qV\u0005\u0004\u0005O9&AB(qi&|g\u000eC\u0004\u0002\"^\u0001\r!a,\u0002\u0019\r|g\u000e^1j]N,E.Z7\u0015\t\u0005]&q\u0006\u0005\b\u0003CC\u0002\u0019AAX\u000311\u0017N\u001c3FY\u0016l\u0017*\u001c9m)\rY&Q\u0007\u0005\b\u0003CK\u0002\u0019AAX\u0003\u001d\tG\rZ#mK6$B!a.\u0003<!9\u0011\u0011\u0015\u000eA\u0002\u0005=\u0016\u0001C1eI\u0016sGO]=\u0015\t\u0005]&\u0011\t\u0005\u0007\u0005\u0007Z\u0002\u0019A.\u0002\u00119,w/\u00128uef\f!B]3n_Z,W\t\\3n)\u0011\t9L!\u0013\t\u000f\u0005\u0005F\u00041\u0001\u00020\u0006A\u0011\u000e^3sCR|\'/\u0006\u0002\u0003PA1!\u0011\u000bB*\u0003_k\u0011!V\u0005\u0004\u0005+*&\u0001C%uKJ\fGo\u001c:\u0002\u0013\u001d\u0014xn\u001e+bE2,\u0017aD2iK\u000e\\7i\u001c8tSN$XM\u001c;\u0002\u00199t7+\u001b>f\u001b\u0006\u0004\u0018\t\u001a3\u0015\t\u0005\u0015%q\f\u0005\b\u0005C\u0002\u0003\u0019AA\u0001\u0003\u0005A\u0017a\u00048o\'&TX-T1q%\u0016lwN^3\u0015\t\u0005\u0015%q\r\u0005\b\u0005C\n\u0003\u0019AA\u0001\u00039qgnU5{K6\u000b\u0007OU3tKR$B!!\"\u0003n!9!q\u000e\u0012A\u0002\u0005\u0005\u0011a\u0003;bE2,G*\u001a8hi\"\f1\u0003^8uC2\u001c\u0016N_3NCB\u0014UoY6fiN\fqbY1mGNK\'0Z\'baNK\'0\u001a\u000b\u0005\u0003\u0003\u00119\bC\u0004\u0003p\u0011\u0002\r!!\u0001\u0002\u0017ML\'0Z\'ba&s\u0017\u000e\u001e\u000b\u0005\u0003\u000b\u0013i\bC\u0004\u0003p\u0015\u0002\r!!\u0001\u0002+ML\'0Z\'ba&s\u0017\u000e^!oIJ+\'-^5mI\u0006a\u0001O]5oiNK\'0Z\'ba\u0006i\u0001O]5oi\u000e{g\u000e^3oiN\fab]5{K6\u000b\u0007\u000fR5tC\ndW-\u0001\tjgNK\'0Z\'ba\u0012+g-\u001b8fI\u0006\t\u0012\r\\<bsNLe.\u001b;TSj,W*\u00199\u0002\u000b%tG-\u001a=\u0015\t\u0005\u0005!q\u0012\u0005\b\u0003+c\u0003\u0019AA\u0001\u0003)\u0019G.Z1s)\u0006\u0014G.Z\u0001\u0012Q\u0006\u001c\b\u000eV1cY\u0016\u001cuN\u001c;f]R\u001cXC\u0001BL!\u0011\u0001W(a,\u0002!%t\u0017\u000e^,ji\"\u001cuN\u001c;f]R\u001cH\u0003BAC\u0005;CqAa(0\u0001\u0004\u00119*A\u0001d\u0001
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               scala/collection/mutable/ArraySeq$ofInt
   #18 = Class              #17           // scala/collection/mutable/ArraySeq$ofInt
   #19 = Utf8               scala/collection/mutable/ArraySeq
   #20 = Class              #19           // scala/collection/mutable/ArraySeq
   #21 = Utf8               ofInt
   #22 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #23 = Class              #22           // scala/collection/mutable/ArraySeq$ofRef
   #24 = Utf8               ofRef
   #25 = Utf8               scala/collection/mutable/FlatHashTable$$anon$1
   #26 = Class              #25           // scala/collection/mutable/FlatHashTable$$anon$1
   #27 = Utf8               scala/collection/mutable/FlatHashTable$Contents
   #28 = Class              #27           // scala/collection/mutable/FlatHashTable$Contents
   #29 = Utf8               Contents
   #30 = Utf8               HashUtils
   #31 = Utf8               scala/collection/mutable/FlatHashTable$NullSentinel$
   #32 = Class              #31           // scala/collection/mutable/FlatHashTable$NullSentinel$
   #33 = Utf8               NullSentinel$
   #34 = Utf8               newThreshold
   #35 = Utf8               (II)I
   #36 = Utf8               _loadFactor
   #37 = Utf8               size
   #38 = Utf8               scala/collection/mutable/FlatHashTable$
   #39 = Class              #38           // scala/collection/mutable/FlatHashTable$
   #40 = Utf8               MODULE$
   #41 = Utf8               Lscala/collection/mutable/FlatHashTable$;
   #42 = NameAndType        #40:#41       // MODULE$:Lscala/collection/mutable/FlatHashTable$;
   #43 = Fieldref           #39.#42       // scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
   #44 = NameAndType        #34:#35       // newThreshold:(II)I
   #45 = Methodref          #39.#44       // scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
   #46 = Utf8               I
   #47 = Utf8               sizeForThreshold
   #48 = NameAndType        #47:#35       // sizeForThreshold:(II)I
   #49 = Methodref          #39.#48       // scala/collection/mutable/FlatHashTable$.sizeForThreshold:(II)I
   #50 = Utf8               loadFactorDenum
   #51 = Utf8               ()I
   #52 = NameAndType        #50:#51       // loadFactorDenum:()I
   #53 = Methodref          #39.#52       // scala/collection/mutable/FlatHashTable$.loadFactorDenum:()I
   #54 = Utf8               defaultLoadFactor
   #55 = NameAndType        #54:#51       // defaultLoadFactor:()I
   #56 = Methodref          #39.#55       // scala/collection/mutable/FlatHashTable$.defaultLoadFactor:()I
   #57 = Utf8               seedGenerator
   #58 = Utf8               ()Ljava/lang/ThreadLocal;
   #59 = Utf8               ()Ljava/lang/ThreadLocal<Lscala/util/Random;>;
   #60 = NameAndType        #57:#58       // seedGenerator:()Ljava/lang/ThreadLocal;
   #61 = Methodref          #39.#60       // scala/collection/mutable/FlatHashTable$.seedGenerator:()Ljava/lang/ThreadLocal;
   #62 = Utf8               tableDebug
   #63 = Utf8               ()Z
   #64 = Utf8               this
   #65 = Utf8               Lscala/collection/mutable/FlatHashTable;
   #66 = Utf8               _loadFactor_$eq
   #67 = Utf8               (I)V
   #68 = Utf8               x$1
   #69 = Utf8               table
   #70 = Utf8               ()[Ljava/lang/Object;
   #71 = Utf8               table_$eq
   #72 = Utf8               ([Ljava/lang/Object;)V
   #73 = Utf8               tableSize
   #74 = Utf8               tableSize_$eq
   #75 = Utf8               threshold
   #76 = Utf8               threshold_$eq
   #77 = Utf8               sizemap
   #78 = Utf8               ()[I
   #79 = Utf8               sizemap_$eq
   #80 = Utf8               ([I)V
   #81 = Utf8               seedvalue
   #82 = Utf8               seedvalue_$eq
   #83 = Utf8               capacity$
   #84 = Utf8               (Lscala/collection/mutable/FlatHashTable;I)I
   #85 = Utf8               $this
   #86 = Utf8               expectedSize
   #87 = Utf8               capacity
   #88 = Utf8               (I)I
   #89 = NameAndType        #87:#88       // capacity:(I)I
   #90 = InterfaceMethodref #2.#89        // scala/collection/mutable/FlatHashTable.capacity:(I)I
   #91 = Utf8               scala/collection/mutable/HashTable$
   #92 = Class              #91           // scala/collection/mutable/HashTable$
   #93 = Utf8               Lscala/collection/mutable/HashTable$;
   #94 = NameAndType        #40:#93       // MODULE$:Lscala/collection/mutable/HashTable$;
   #95 = Fieldref           #92.#94       // scala/collection/mutable/HashTable$.MODULE$:Lscala/collection/mutable/HashTable$;
   #96 = Utf8               nextPositivePowerOfTwo
   #97 = NameAndType        #96:#88       // nextPositivePowerOfTwo:(I)I
   #98 = Methodref          #92.#97       // scala/collection/mutable/HashTable$.nextPositivePowerOfTwo:(I)I
   #99 = Utf8               initialSize$
  #100 = Utf8               (Lscala/collection/mutable/FlatHashTable;)I
  #101 = Utf8               initialSize
  #102 = NameAndType        #101:#51      // initialSize:()I
  #103 = InterfaceMethodref #2.#102       // scala/collection/mutable/FlatHashTable.initialSize:()I
  #104 = Utf8               size$
  #105 = NameAndType        #37:#51       // size:()I
  #106 = InterfaceMethodref #2.#105       // scala/collection/mutable/FlatHashTable.size:()I
  #107 = NameAndType        #73:#51       // tableSize:()I
  #108 = InterfaceMethodref #2.#107       // scala/collection/mutable/FlatHashTable.tableSize:()I
  #109 = Utf8               initialCapacity
  #110 = Utf8               randomSeed$
  #111 = Utf8               randomSeed
  #112 = NameAndType        #111:#51      // randomSeed:()I
  #113 = InterfaceMethodref #2.#112       // scala/collection/mutable/FlatHashTable.randomSeed:()I
  #114 = Utf8               java/lang/ThreadLocal
  #115 = Class              #114          // java/lang/ThreadLocal
  #116 = Utf8               get
  #117 = Utf8               ()Ljava/lang/Object;
  #118 = NameAndType        #116:#117     // get:()Ljava/lang/Object;
  #119 = Methodref          #115.#118     // java/lang/ThreadLocal.get:()Ljava/lang/Object;
  #120 = Utf8               scala/util/Random
  #121 = Class              #120          // scala/util/Random
  #122 = Utf8               nextInt
  #123 = NameAndType        #122:#51      // nextInt:()I
  #124 = Methodref          #121.#123     // scala/util/Random.nextInt:()I
  #125 = Utf8               tableSizeSeed$
  #126 = Utf8               tableSizeSeed
  #127 = NameAndType        #126:#51      // tableSizeSeed:()I
  #128 = InterfaceMethodref #2.#127       // scala/collection/mutable/FlatHashTable.tableSizeSeed:()I
  #129 = NameAndType        #69:#70       // table:()[Ljava/lang/Object;
  #130 = InterfaceMethodref #2.#129       // scala/collection/mutable/FlatHashTable.table:()[Ljava/lang/Object;
  #131 = Utf8               java/lang/Integer
  #132 = Class              #131          // java/lang/Integer
  #133 = Utf8               bitCount
  #134 = NameAndType        #133:#88      // bitCount:(I)I
  #135 = Methodref          #132.#134     // java/lang/Integer.bitCount:(I)I
  #136 = Utf8               init$
  #137 = Utf8               (Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectInputStream;Lscala/Function1;)V
  #138 = Utf8               in
  #139 = Utf8               f
  #140 = Utf8               init
  #141 = Utf8               (Ljava/io/ObjectInputStream;Lscala/Function1;)V
  #142 = NameAndType        #140:#141     // init:(Ljava/io/ObjectInputStream;Lscala/Function1;)V
  #143 = InterfaceMethodref #2.#142       // scala/collection/mutable/FlatHashTable.init:(Ljava/io/ObjectInputStream;Lscala/Function1;)V
  #144 = Utf8               Ljava/io/ObjectInputStream;
  #145 = Utf8               Lscala/Function1;
  #146 = Utf8               (Ljava/io/ObjectInputStream;Lscala/Function1<TA;Lscala/runtime/BoxedUnit;>;)V
  #147 = Utf8               java/io/ObjectInputStream
  #148 = Class              #147          // java/io/ObjectInputStream
  #149 = Utf8               readInt
  #150 = NameAndType        #149:#51      // readInt:()I
  #151 = Methodref          #148.#150     // java/io/ObjectInputStream.readInt:()I
  #152 = NameAndType        #66:#67       // _loadFactor_$eq:(I)V
  #153 = InterfaceMethodref #2.#152       // scala/collection/mutable/FlatHashTable._loadFactor_$eq:(I)V
  #154 = Utf8               scala/Predef$
  #155 = Class              #154          // scala/Predef$
  #156 = Utf8               Lscala/Predef$;
  #157 = NameAndType        #40:#156      // MODULE$:Lscala/Predef$;
  #158 = Fieldref           #155.#157     // scala/Predef$.MODULE$:Lscala/Predef$;
  #159 = NameAndType        #36:#51       // _loadFactor:()I
  #160 = InterfaceMethodref #2.#159       // scala/collection/mutable/FlatHashTable._loadFactor:()I
  #161 = Utf8               assert
  #162 = Utf8               (Z)V
  #163 = NameAndType        #161:#162     // assert:(Z)V
  #164 = Methodref          #155.#163     // scala/Predef$.assert:(Z)V
  #165 = NameAndType        #74:#67       // tableSize_$eq:(I)V
  #166 = InterfaceMethodref #2.#165       // scala/collection/mutable/FlatHashTable.tableSize_$eq:(I)V
  #167 = NameAndType        #71:#72       // table_$eq:([Ljava/lang/Object;)V
  #168 = InterfaceMethodref #2.#167       // scala/collection/mutable/FlatHashTable.table_$eq:([Ljava/lang/Object;)V
  #169 = NameAndType        #76:#67       // threshold_$eq:(I)V
  #170 = InterfaceMethodref #2.#169       // scala/collection/mutable/FlatHashTable.threshold_$eq:(I)V
  #171 = NameAndType        #82:#67       // seedvalue_$eq:(I)V
  #172 = InterfaceMethodref #2.#171       // scala/collection/mutable/FlatHashTable.seedvalue_$eq:(I)V
  #173 = Utf8               readBoolean
  #174 = NameAndType        #173:#63      // readBoolean:()Z
  #175 = Methodref          #148.#174     // java/io/ObjectInputStream.readBoolean:()Z
  #176 = Utf8               sizeMapInit
  #177 = NameAndType        #176:#67      // sizeMapInit:(I)V
  #178 = InterfaceMethodref #2.#177       // scala/collection/mutable/FlatHashTable.sizeMapInit:(I)V
  #179 = NameAndType        #79:#80       // sizemap_$eq:([I)V
  #180 = InterfaceMethodref #2.#179       // scala/collection/mutable/FlatHashTable.sizemap_$eq:([I)V
  #181 = Utf8               readObject
  #182 = NameAndType        #181:#117     // readObject:()Ljava/lang/Object;
  #183 = Methodref          #148.#182     // java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
  #184 = Utf8               entryToElem
  #185 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #186 = NameAndType        #184:#185     // entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
  #187 = InterfaceMethodref #2.#186       // scala/collection/mutable/FlatHashTable.entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
  #188 = Utf8               scala/Function1
  #189 = Class              #188          // scala/Function1
  #190 = Utf8               apply
  #191 = NameAndType        #190:#185     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #192 = InterfaceMethodref #189.#191     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #193 = Utf8               addElem
  #194 = Utf8               (Ljava/lang/Object;)Z
  #195 = NameAndType        #193:#194     // addElem:(Ljava/lang/Object;)Z
  #196 = InterfaceMethodref #2.#195       // scala/collection/mutable/FlatHashTable.addElem:(Ljava/lang/Object;)Z
  #197 = Utf8               elem
  #198 = Utf8               Ljava/lang/Object;
  #199 = Utf8               smDefined
  #200 = Utf8               Z
  #201 = Utf8               index
  #202 = Utf8               serializeTo$
  #203 = Utf8               (Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
  #204 = Utf8               out
  #205 = Utf8               serializeTo
  #206 = Utf8               (Ljava/io/ObjectOutputStream;)V
  #207 = NameAndType        #205:#206     // serializeTo:(Ljava/io/ObjectOutputStream;)V
  #208 = InterfaceMethodref #2.#207       // scala/collection/mutable/FlatHashTable.serializeTo:(Ljava/io/ObjectOutputStream;)V
  #209 = Utf8               Ljava/io/ObjectOutputStream;
  #210 = Utf8               java/io/ObjectOutputStream
  #211 = Class              #210          // java/io/ObjectOutputStream
  #212 = Utf8               writeInt
  #213 = NameAndType        #212:#67      // writeInt:(I)V
  #214 = Methodref          #211.#213     // java/io/ObjectOutputStream.writeInt:(I)V
  #215 = NameAndType        #81:#51       // seedvalue:()I
  #216 = InterfaceMethodref #2.#215       // scala/collection/mutable/FlatHashTable.seedvalue:()I
  #217 = Utf8               isSizeMapDefined
  #218 = NameAndType        #217:#63      // isSizeMapDefined:()Z
  #219 = InterfaceMethodref #2.#218       // scala/collection/mutable/FlatHashTable.isSizeMapDefined:()Z
  #220 = Utf8               writeBoolean
  #221 = NameAndType        #220:#162     // writeBoolean:(Z)V
  #222 = Methodref          #211.#221     // java/io/ObjectOutputStream.writeBoolean:(Z)V
  #223 = Utf8               iterator
  #224 = Utf8               ()Lscala/collection/Iterator;
  #225 = NameAndType        #223:#224     // iterator:()Lscala/collection/Iterator;
  #226 = InterfaceMethodref #2.#225       // scala/collection/mutable/FlatHashTable.iterator:()Lscala/collection/Iterator;
  #227 = MethodType         #185          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #228 = Utf8               $anonfun$serializeTo$1$adapted
  #229 = Utf8               (Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
  #230 = NameAndType        #228:#229     // $anonfun$serializeTo$1$adapted:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
  #231 = InterfaceMethodref #2.#230       // scala/collection/mutable/FlatHashTable.$anonfun$serializeTo$1$adapted:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
  #232 = MethodHandle       6:#231        // REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$serializeTo$1$adapted:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
  #233 = Integer            1
  #234 = Utf8               java/lang/invoke/LambdaMetafactory
  #235 = Class              #234          // java/lang/invoke/LambdaMetafactory
  #236 = Utf8               altMetafactory
  #237 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #238 = NameAndType        #236:#237     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #239 = Methodref          #235.#238     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #240 = MethodHandle       6:#239        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #241 = Utf8               (Ljava/io/ObjectOutputStream;)Lscala/Function1;
  #242 = NameAndType        #190:#241     // apply:(Ljava/io/ObjectOutputStream;)Lscala/Function1;
  #243 = InvokeDynamic      #0:#242       // #0:apply:(Ljava/io/ObjectOutputStream;)Lscala/Function1;
  #244 = Utf8               scala/collection/Iterator
  #245 = Class              #244          // scala/collection/Iterator
  #246 = Utf8               foreach
  #247 = Utf8               (Lscala/Function1;)V
  #248 = NameAndType        #246:#247     // foreach:(Lscala/Function1;)V
  #249 = InterfaceMethodref #245.#248     // scala/collection/Iterator.foreach:(Lscala/Function1;)V
  #250 = Utf8               findEntry$
  #251 = Utf8               (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Lscala/Option;
  #252 = Utf8               findEntry
  #253 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #254 = NameAndType        #252:#253     // findEntry:(Ljava/lang/Object;)Lscala/Option;
  #255 = InterfaceMethodref #2.#254       // scala/collection/mutable/FlatHashTable.findEntry:(Ljava/lang/Object;)Lscala/Option;
  #256 = Utf8               (TA;)Lscala/Option<TA;>;
  #257 = Utf8               findElemImpl
  #258 = NameAndType        #257:#185     // findElemImpl:(Ljava/lang/Object;)Ljava/lang/Object;
  #259 = InterfaceMethodref #2.#258       // scala/collection/mutable/FlatHashTable.findElemImpl:(Ljava/lang/Object;)Ljava/lang/Object;
  #260 = Utf8               scala/None$
  #261 = Class              #260          // scala/None$
  #262 = Utf8               Lscala/None$;
  #263 = NameAndType        #40:#262      // MODULE$:Lscala/None$;
  #264 = Fieldref           #261.#263     // scala/None$.MODULE$:Lscala/None$;
  #265 = Utf8               scala/Some
  #266 = Class              #265          // scala/Some
  #267 = Utf8               <init>
  #268 = Utf8               (Ljava/lang/Object;)V
  #269 = NameAndType        #267:#268     // "<init>":(Ljava/lang/Object;)V
  #270 = Methodref          #266.#269     // scala/Some."<init>":(Ljava/lang/Object;)V
  #271 = Utf8               scala/Option
  #272 = Class              #271          // scala/Option
  #273 = Utf8               containsElem$
  #274 = Utf8               (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
  #275 = Utf8               containsElem
  #276 = NameAndType        #275:#194     // containsElem:(Ljava/lang/Object;)Z
  #277 = InterfaceMethodref #2.#276       // scala/collection/mutable/FlatHashTable.containsElem:(Ljava/lang/Object;)Z
  #278 = Utf8               (TA;)Z
  #279 = Utf8               (TA;)Ljava/lang/Object;
  #280 = Utf8               elemToEntry
  #281 = NameAndType        #280:#185     // elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
  #282 = InterfaceMethodref #2.#281       // scala/collection/mutable/FlatHashTable.elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
  #283 = Utf8               hashCode
  #284 = NameAndType        #283:#51      // hashCode:()I
  #285 = Methodref          #5.#284       // java/lang/Object.hashCode:()I
  #286 = NameAndType        #201:#88      // index:(I)I
  #287 = InterfaceMethodref #2.#286       // scala/collection/mutable/FlatHashTable.index:(I)I
  #288 = Utf8               scala/runtime/BoxesRunTime
  #289 = Class              #288          // scala/runtime/BoxesRunTime
  #290 = Utf8               equals
  #291 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #292 = NameAndType        #290:#291     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #293 = Methodref          #289.#292     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #294 = Utf8               searchEntry
  #295 = Utf8               h
  #296 = Utf8               curEntry
  #297 = Utf8               addElem$
  #298 = Utf8               addEntry
  #299 = NameAndType        #298:#194     // addEntry:(Ljava/lang/Object;)Z
  #300 = InterfaceMethodref #2.#299       // scala/collection/mutable/FlatHashTable.addEntry:(Ljava/lang/Object;)Z
  #301 = Utf8               addEntry$
  #302 = Utf8               newEntry
  #303 = Utf8               nnSizeMapAdd
  #304 = NameAndType        #303:#67      // nnSizeMapAdd:(I)V
  #305 = InterfaceMethodref #2.#304       // scala/collection/mutable/FlatHashTable.nnSizeMapAdd:(I)V
  #306 = NameAndType        #75:#51       // threshold:()I
  #307 = InterfaceMethodref #2.#306       // scala/collection/mutable/FlatHashTable.threshold:()I
  #308 = Utf8               growTable
  #309 = Utf8               ()V
  #310 = NameAndType        #308:#309     // growTable:()V
  #311 = InterfaceMethodref #2.#310       // scala/collection/mutable/FlatHashTable.growTable:()V
  #312 = Utf8               removeElem$
  #313 = Utf8               removeElem
  #314 = NameAndType        #313:#194     // removeElem:(Ljava/lang/Object;)Z
  #315 = InterfaceMethodref #2.#314       // scala/collection/mutable/FlatHashTable.removeElem:(Ljava/lang/Object;)Z
  #316 = NameAndType        #62:#63       // tableDebug:()Z
  #317 = InterfaceMethodref #2.#316       // scala/collection/mutable/FlatHashTable.tableDebug:()Z
  #318 = Utf8               checkConsistent
  #319 = NameAndType        #318:#309     // checkConsistent:()V
  #320 = InterfaceMethodref #2.#319       // scala/collection/mutable/FlatHashTable.checkConsistent:()V
  #321 = Utf8               precedes$1
  #322 = Utf8               (II)Z
  #323 = NameAndType        #321:#322     // precedes$1:(II)Z
  #324 = InterfaceMethodref #2.#323       // scala/collection/mutable/FlatHashTable.precedes$1:(II)Z
  #325 = Utf8               nnSizeMapRemove
  #326 = NameAndType        #325:#67      // nnSizeMapRemove:(I)V
  #327 = InterfaceMethodref #2.#326       // scala/collection/mutable/FlatHashTable.nnSizeMapRemove:(I)V
  #328 = Utf8               h2
  #329 = Utf8               h0
  #330 = Utf8               h1
  #331 = Utf8               removalEntry
  #332 = Utf8               iterator$
  #333 = Utf8               (Lscala/collection/mutable/FlatHashTable;)Lscala/collection/Iterator;
  #334 = Utf8               ()Lscala/collection/Iterator<TA;>;
  #335 = Utf8               (Lscala/collection/mutable/FlatHashTable;)V
  #336 = NameAndType        #267:#335     // "<init>":(Lscala/collection/mutable/FlatHashTable;)V
  #337 = Methodref          #26.#336      // scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
  #338 = Utf8               nnSizeMapReset
  #339 = NameAndType        #338:#67      // nnSizeMapReset:(I)V
  #340 = InterfaceMethodref #2.#339       // scala/collection/mutable/FlatHashTable.nnSizeMapReset:(I)V
  #341 = Utf8               boxToBoolean
  #342 = Utf8               (Z)Ljava/lang/Boolean;
  #343 = NameAndType        #341:#342     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #344 = Methodref          #289.#343     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #345 = Utf8               scala/runtime/BoxedUnit
  #346 = Class              #345          // scala/runtime/BoxedUnit
  #347 = Utf8               UNIT
  #348 = Utf8               Lscala/runtime/BoxedUnit;
  #349 = NameAndType        #347:#348     // UNIT:Lscala/runtime/BoxedUnit;
  #350 = Fieldref           #346.#349     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #351 = Utf8               entry
  #352 = Utf8               oldtable
  #353 = Utf8               [Ljava/lang/Object;
  #354 = Utf8               i
  #355 = Class              #353          // "[Ljava/lang/Object;"
  #356 = Utf8               scala/runtime/RichInt$
  #357 = Class              #356          // scala/runtime/RichInt$
  #358 = Utf8               Lscala/runtime/RichInt$;
  #359 = NameAndType        #40:#358      // MODULE$:Lscala/runtime/RichInt$;
  #360 = Fieldref           #357.#359     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #361 = Utf8               intWrapper
  #362 = NameAndType        #361:#88      // intWrapper:(I)I
  #363 = Methodref          #155.#362     // scala/Predef$.intWrapper:(I)I
  #364 = Utf8               until$extension
  #365 = Utf8               (II)Lscala/collection/immutable/Range;
  #366 = NameAndType        #364:#365     // until$extension:(II)Lscala/collection/immutable/Range;
  #367 = Methodref          #357.#366     // scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
  #368 = MethodType         #67           //  (I)V
  #369 = Utf8               $anonfun$checkConsistent$1
  #370 = Utf8               (Lscala/collection/mutable/FlatHashTable;I)V
  #371 = NameAndType        #369:#370     // $anonfun$checkConsistent$1:(Lscala/collection/mutable/FlatHashTable;I)V
  #372 = InterfaceMethodref #2.#371       // scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$1:(Lscala/collection/mutable/FlatHashTable;I)V
  #373 = MethodHandle       6:#372        // REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$1:(Lscala/collection/mutable/FlatHashTable;I)V
  #374 = Utf8               apply$mcVI$sp
  #375 = Utf8               (Lscala/collection/mutable/FlatHashTable;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #376 = NameAndType        #374:#375     // apply$mcVI$sp:(Lscala/collection/mutable/FlatHashTable;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #377 = InvokeDynamic      #1:#376       // #1:apply$mcVI$sp:(Lscala/collection/mutable/FlatHashTable;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #378 = Utf8               scala/collection/immutable/Range
  #379 = Class              #378          // scala/collection/immutable/Range
  #380 = Utf8               foreach$mVc$sp
  #381 = NameAndType        #380:#247     // foreach$mVc$sp:(Lscala/Function1;)V
  #382 = Methodref          #379.#381     // scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
  #383 = Utf8               nnSizeMapAdd$
  #384 = NameAndType        #77:#78       // sizemap:()[I
  #385 = InterfaceMethodref #2.#384       // scala/collection/mutable/FlatHashTable.sizemap:()[I
  #386 = Utf8               sizeMapBucketBitSize
  #387 = NameAndType        #386:#51      // sizeMapBucketBitSize:()I
  #388 = InterfaceMethodref #2.#387       // scala/collection/mutable/FlatHashTable.sizeMapBucketBitSize:()I
  #389 = Utf8               p
  #390 = Utf8               nnSizeMapRemove$
  #391 = Utf8               nnSizeMapReset$
  #392 = Utf8               tableLength
  #393 = Utf8               calcSizeMapSize
  #394 = NameAndType        #393:#88      // calcSizeMapSize:(I)I
  #395 = InterfaceMethodref #2.#394       // scala/collection/mutable/FlatHashTable.calcSizeMapSize:(I)I
  #396 = Utf8               java/util/Arrays
  #397 = Class              #396          // java/util/Arrays
  #398 = Utf8               fill
  #399 = Utf8               ([II)V
  #400 = NameAndType        #398:#399     // fill:([II)V
  #401 = Methodref          #397.#400     // java/util/Arrays.fill:([II)V
  #402 = Utf8               nsize
  #403 = Utf8               totalSizeMapBuckets$
  #404 = Utf8               totalSizeMapBuckets
  #405 = NameAndType        #404:#51      // totalSizeMapBuckets:()I
  #406 = InterfaceMethodref #2.#405       // scala/collection/mutable/FlatHashTable.totalSizeMapBuckets:()I
  #407 = Utf8               sizeMapBucketSize
  #408 = NameAndType        #407:#51      // sizeMapBucketSize:()I
  #409 = InterfaceMethodref #2.#408       // scala/collection/mutable/FlatHashTable.sizeMapBucketSize:()I
  #410 = Utf8               calcSizeMapSize$
  #411 = Utf8               sizeMapInit$
  #412 = Utf8               sizeMapInitAndRebuild$
  #413 = Utf8               sizeMapInitAndRebuild
  #414 = NameAndType        #413:#309     // sizeMapInitAndRebuild:()V
  #415 = InterfaceMethodref #2.#414       // scala/collection/mutable/FlatHashTable.sizeMapInitAndRebuild:()V
  #416 = Utf8               min$extension
  #417 = NameAndType        #416:#35      // min$extension:(II)I
  #418 = Methodref          #357.#417     // scala/runtime/RichInt$.min$extension:(II)I
  #419 = Utf8               currbucketsz
  #420 = Utf8               totalbuckets
  #421 = Utf8               bucketidx
  #422 = Utf8               tableidx
  #423 = Utf8               tbl
  #424 = Utf8               tableuntil
  #425 = Utf8               printSizeMap$
  #426 = Utf8               printSizeMap
  #427 = NameAndType        #426:#309     // printSizeMap:()V
  #428 = InterfaceMethodref #2.#427       // scala/collection/mutable/FlatHashTable.printSizeMap:()V
  #429 = Utf8               wrapIntArray
  #430 = Utf8               ([I)Lscala/collection/mutable/ArraySeq$ofInt;
  #431 = NameAndType        #429:#430     // wrapIntArray:([I)Lscala/collection/mutable/ArraySeq$ofInt;
  #432 = Methodref          #155.#431     // scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/ArraySeq$ofInt;
  #433 = Utf8               szmap: [
  #434 = String             #433          // szmap: [
  #435 = Utf8               ,
  #436 = String             #435          // ,
  #437 = Utf8               ]
  #438 = String             #437          // ]
  #439 = Utf8               mkString
  #440 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #441 = NameAndType        #439:#440     // mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #442 = Methodref          #18.#441      // scala/collection/mutable/ArraySeq$ofInt.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #443 = Utf8               println
  #444 = NameAndType        #443:#268     // println:(Ljava/lang/Object;)V
  #445 = Methodref          #155.#444     // scala/Predef$.println:(Ljava/lang/Object;)V
  #446 = Utf8               printContents$
  #447 = Utf8               printContents
  #448 = NameAndType        #447:#309     // printContents:()V
  #449 = InterfaceMethodref #2.#448       // scala/collection/mutable/FlatHashTable.printContents:()V
  #450 = Utf8               wrapRefArray
  #451 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #452 = NameAndType        #450:#451     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #453 = Methodref          #155.#452     // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #454 = Utf8               [
  #455 = String             #454          // [
  #456 = Methodref          #23.#441      // scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
  #457 = Utf8               sizeMapDisable$
  #458 = Utf8               sizeMapDisable
  #459 = NameAndType        #458:#309     // sizeMapDisable:()V
  #460 = InterfaceMethodref #2.#459       // scala/collection/mutable/FlatHashTable.sizeMapDisable:()V
  #461 = Utf8               isSizeMapDefined$
  #462 = Utf8               (Lscala/collection/mutable/FlatHashTable;)Z
  #463 = Utf8               alwaysInitSizeMap$
  #464 = Utf8               alwaysInitSizeMap
  #465 = NameAndType        #464:#63      // alwaysInitSizeMap:()Z
  #466 = InterfaceMethodref #2.#465       // scala/collection/mutable/FlatHashTable.alwaysInitSizeMap:()Z
  #467 = Utf8               index$
  #468 = Utf8               hcode
  #469 = Utf8               improve
  #470 = NameAndType        #469:#35      // improve:(II)I
  #471 = InterfaceMethodref #2.#470       // scala/collection/mutable/FlatHashTable.improve:(II)I
  #472 = Utf8               improved
  #473 = Utf8               ones
  #474 = Utf8               clearTable$
  #475 = Utf8               clearTable
  #476 = NameAndType        #475:#309     // clearTable:()V
  #477 = InterfaceMethodref #2.#476       // scala/collection/mutable/FlatHashTable.clearTable:()V
  #478 = Utf8               hashTableContents$
  #479 = Utf8               (Lscala/collection/mutable/FlatHashTable;)Lscala/collection/mutable/FlatHashTable$Contents;
  #480 = Utf8               hashTableContents
  #481 = Utf8               ()Lscala/collection/mutable/FlatHashTable$Contents;
  #482 = NameAndType        #480:#481     // hashTableContents:()Lscala/collection/mutable/FlatHashTable$Contents;
  #483 = InterfaceMethodref #2.#482       // scala/collection/mutable/FlatHashTable.hashTableContents:()Lscala/collection/mutable/FlatHashTable$Contents;
  #484 = Utf8               ()Lscala/collection/mutable/FlatHashTable$Contents<TA;>;
  #485 = Utf8               (I[Ljava/lang/Object;III[I)V
  #486 = NameAndType        #267:#485     // "<init>":(I[Ljava/lang/Object;III[I)V
  #487 = Methodref          #28.#486      // scala/collection/mutable/FlatHashTable$Contents."<init>":(I[Ljava/lang/Object;III[I)V
  #488 = Utf8               initWithContents$
  #489 = Utf8               (Lscala/collection/mutable/FlatHashTable;Lscala/collection/mutable/FlatHashTable$Contents;)V
  #490 = Utf8               c
  #491 = Utf8               initWithContents
  #492 = Utf8               (Lscala/collection/mutable/FlatHashTable$Contents;)V
  #493 = NameAndType        #491:#492     // initWithContents:(Lscala/collection/mutable/FlatHashTable$Contents;)V
  #494 = InterfaceMethodref #2.#493       // scala/collection/mutable/FlatHashTable.initWithContents:(Lscala/collection/mutable/FlatHashTable$Contents;)V
  #495 = Utf8               Lscala/collection/mutable/FlatHashTable$Contents;
  #496 = Utf8               (Lscala/collection/mutable/FlatHashTable$Contents<TA;>;)V
  #497 = Utf8               loadFactor
  #498 = NameAndType        #497:#51      // loadFactor:()I
  #499 = Methodref          #28.#498      // scala/collection/mutable/FlatHashTable$Contents.loadFactor:()I
  #500 = Methodref          #28.#129      // scala/collection/mutable/FlatHashTable$Contents.table:()[Ljava/lang/Object;
  #501 = Methodref          #28.#107      // scala/collection/mutable/FlatHashTable$Contents.tableSize:()I
  #502 = Methodref          #28.#306      // scala/collection/mutable/FlatHashTable$Contents.threshold:()I
  #503 = Methodref          #28.#215      // scala/collection/mutable/FlatHashTable$Contents.seedvalue:()I
  #504 = Methodref          #28.#384      // scala/collection/mutable/FlatHashTable$Contents.sizemap:()[I
  #505 = Utf8               $anonfun$serializeTo$1
  #506 = Utf8               (Ljava/io/ObjectOutputStream;Ljava/lang/Object;)V
  #507 = Utf8               out$1
  #508 = Utf8               writeObject
  #509 = NameAndType        #508:#268     // writeObject:(Ljava/lang/Object;)V
  #510 = Methodref          #211.#509     // java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
  #511 = Utf8               j
  #512 = Utf8               d
  #513 = Utf8               $anonfun$checkConsistent$2
  #514 = Utf8               (Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
  #515 = Utf8               i$1
  #516 = Utf8               java/lang/StringBuilder
  #517 = Class              #516          // java/lang/StringBuilder
  #518 = Integer            2
  #519 = NameAndType        #267:#67      // "<init>":(I)V
  #520 = Methodref          #517.#519     // java/lang/StringBuilder."<init>":(I)V
  #521 = Utf8               append
  #522 = Utf8               (I)Ljava/lang/StringBuilder;
  #523 = NameAndType        #521:#522     // append:(I)Ljava/lang/StringBuilder;
  #524 = Methodref          #517.#523     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #525 = Utf8
  #526 = String             #525          //
  #527 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #528 = NameAndType        #521:#527     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #529 = Methodref          #517.#528     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #530 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #531 = NameAndType        #521:#530     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #532 = Methodref          #517.#531     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #533 = Utf8               ()Ljava/lang/String;
  #534 = NameAndType        #439:#533     // mkString:()Ljava/lang/String;
  #535 = Methodref          #23.#534      // scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
  #536 = Utf8               toString
  #537 = NameAndType        #536:#533     // toString:()Ljava/lang/String;
  #538 = Methodref          #517.#537     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #539 = MethodType         #117          //  ()Ljava/lang/Object;
  #540 = NameAndType        #513:#514     // $anonfun$checkConsistent$2:(Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
  #541 = InterfaceMethodref #2.#540       // scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$2:(Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
  #542 = MethodHandle       6:#541        // REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$2:(Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
  #543 = MethodType         #533          //  ()Ljava/lang/String;
  #544 = Integer            5
  #545 = Utf8               (Lscala/collection/mutable/FlatHashTable;I)Lscala/Function0;
  #546 = NameAndType        #190:#545     // apply:(Lscala/collection/mutable/FlatHashTable;I)Lscala/Function0;
  #547 = InvokeDynamic      #2:#546       // #2:apply:(Lscala/collection/mutable/FlatHashTable;I)Lscala/Function0;
  #548 = Utf8               (ZLscala/Function0;)V
  #549 = NameAndType        #161:#548     // assert:(ZLscala/Function0;)V
  #550 = Methodref          #155.#549     // scala/Predef$.assert:(ZLscala/Function0;)V
  #551 = Utf8               $init$
  #552 = NameAndType        #109:#51      // initialCapacity:()I
  #553 = InterfaceMethodref #2.#552       // scala/collection/mutable/FlatHashTable.initialCapacity:()I
  #554 = NameAndType        #505:#506     // $anonfun$serializeTo$1:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)V
  #555 = InterfaceMethodref #2.#554       // scala/collection/mutable/FlatHashTable.$anonfun$serializeTo$1:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)V
  #556 = Utf8               $deserializeLambda$
  #557 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #558 = Utf8               scala/runtime/LambdaDeserialize
  #559 = Class              #558          // scala/runtime/LambdaDeserialize
  #560 = Utf8               bootstrap
  #561 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #562 = NameAndType        #560:#561     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #563 = Methodref          #559.#562     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #564 = MethodHandle       6:#563        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #565 = Utf8               lambdaDeserialize
  #566 = NameAndType        #565:#557     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #567 = InvokeDynamic      #3:#566       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #568 = Utf8               Code
  #569 = Utf8               LocalVariableTable
  #570 = Utf8               MethodParameters
  #571 = Utf8               Signature
  #572 = Utf8               LineNumberTable
  #573 = Utf8               StackMapTable
  #574 = Utf8               InnerClasses
  #575 = Utf8               SourceFile
  #576 = Utf8               RuntimeVisibleAnnotations
  #577 = Utf8               BootstrapMethods
  #578 = Utf8               ScalaInlineInfo
  #579 = Utf8               ScalaSig
{
  public static int newThreshold(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         3: iload_0
         4: iload_1
         5: invokevirtual #45                 // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 _loadFactor   I
            0       9     1  size   I
    MethodParameters:
      Name                           Flags
      _loadFactor                    final
      size                           final

  public static int sizeForThreshold(int, int);
    descriptor: (II)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         3: iload_0
         4: iload_1
         5: invokevirtual #49                 // Method scala/collection/mutable/FlatHashTable$.sizeForThreshold:(II)I
         8: ireturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  size   I
            0       9     1 _loadFactor   I
    MethodParameters:
      Name                           Flags
      size                           final
      _loadFactor                    final

  public static int loadFactorDenum();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         3: invokevirtual #53                 // Method scala/collection/mutable/FlatHashTable$.loadFactorDenum:()I
         6: ireturn

  public static int defaultLoadFactor();
    descriptor: ()I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         3: invokevirtual #56                 // Method scala/collection/mutable/FlatHashTable$.defaultLoadFactor:()I
         6: ireturn

  public static java.lang.ThreadLocal<scala.util.Random> seedGenerator();
    descriptor: ()Ljava/lang/ThreadLocal;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         3: invokevirtual #61                 // Method scala/collection/mutable/FlatHashTable$.seedGenerator:()Ljava/lang/ThreadLocal;
         6: areturn
    Signature: #59                          // ()Ljava/lang/ThreadLocal<Lscala/util/Random;>;

  private boolean tableDebug();
    descriptor: ()Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/mutable/FlatHashTable;

  public abstract int _loadFactor();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void _loadFactor_$eq(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract java.lang.Object[] table();
    descriptor: ()[Ljava/lang/Object;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void table_$eq(java.lang.Object[]);
    descriptor: ([Ljava/lang/Object;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract int tableSize();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void tableSize_$eq(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract int threshold();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void threshold_$eq(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract int[] sizemap();
    descriptor: ()[I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void sizemap_$eq(int[]);
    descriptor: ([I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract int seedvalue();
    descriptor: ()I
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  public abstract void seedvalue_$eq(int);
    descriptor: (I)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static int capacity$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #90                 // InterfaceMethod capacity:(I)I
         5: ireturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1 expectedSize   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      expectedSize                   final

  public default int capacity(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #95                 // Field scala/collection/mutable/HashTable$.MODULE$:Lscala/collection/mutable/HashTable$;
         3: iload_1
         4: invokevirtual #98                 // Method scala/collection/mutable/HashTable$.nextPositivePowerOfTwo:(I)I
         7: ireturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/FlatHashTable;
            0       8     1 expectedSize   I
    MethodParameters:
      Name                           Flags
      expectedSize                   final

  public static int initialSize$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #103                // InterfaceMethod initialSize:()I
         4: ireturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int initialSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        32
         2: ireturn
      LineNumberTable:
        line 60: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/collection/mutable/FlatHashTable;

  public static int size$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #106                // InterfaceMethod size:()I
         4: ireturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #108,  1          // InterfaceMethod tableSize:()I
         6: ireturn
      LineNumberTable:
        line 62: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/mutable/FlatHashTable;

  private int initialCapacity();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aload_0
         2: invokeinterface #103,  1          // InterfaceMethod initialSize:()I
         7: invokeinterface #90,  2           // InterfaceMethod capacity:(I)I
        12: ireturn
      LineNumberTable:
        line 64: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/mutable/FlatHashTable;

  public static int randomSeed$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #113                // InterfaceMethod randomSeed:()I
         4: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int randomSeed();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         3: invokevirtual #61                 // Method scala/collection/mutable/FlatHashTable$.seedGenerator:()Ljava/lang/ThreadLocal;
         6: invokevirtual #119                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
         9: checkcast     #121                // class scala/util/Random
        12: invokevirtual #124                // Method scala/util/Random.nextInt:()I
        15: ireturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/collection/mutable/FlatHashTable;

  public static int tableSizeSeed$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #128                // InterfaceMethod tableSizeSeed:()I
         4: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int tableSizeSeed();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         6: arraylength
         7: iconst_1
         8: isub
         9: invokestatic  #135                // Method java/lang/Integer.bitCount:(I)I
        12: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/mutable/FlatHashTable;

  public static void init$(scala.collection.mutable.FlatHashTable, java.io.ObjectInputStream, scala.Function1);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectInputStream;Lscala/Function1;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #143                // InterfaceMethod init:(Ljava/io/ObjectInputStream;Lscala/Function1;)V
         6: return
      LineNumberTable:
        line 77: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       7     1    in   Ljava/io/ObjectInputStream;
            0       7     2     f   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      in                             final
      f                              final

  public default void init(java.io.ObjectInputStream, scala.Function1<A, scala.runtime.BoxedUnit>);
    descriptor: (Ljava/io/ObjectInputStream;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #151                // Method java/io/ObjectInputStream.readInt:()I
         5: invokeinterface #153,  2          // InterfaceMethod _loadFactor_$eq:(I)V
        10: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        13: aload_0
        14: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
        19: iconst_0
        20: if_icmple     27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: invokevirtual #164                // Method scala/Predef$.assert:(Z)V
        31: aload_1
        32: invokevirtual #151                // Method java/io/ObjectInputStream.readInt:()I
        35: istore_3
        36: aload_0
        37: iconst_0
        38: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
        43: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        46: iload_3
        47: iconst_0
        48: if_icmplt     55
        51: iconst_1
        52: goto          56
        55: iconst_0
        56: invokevirtual #164                // Method scala/Predef$.assert:(Z)V
        59: aload_0
        60: aload_0
        61: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
        64: iload_3
        65: aload_0
        66: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
        71: invokevirtual #49                 // Method scala/collection/mutable/FlatHashTable$.sizeForThreshold:(II)I
        74: invokeinterface #90,  2           // InterfaceMethod capacity:(I)I
        79: anewarray     #5                  // class java/lang/Object
        82: invokeinterface #168,  2          // InterfaceMethod table_$eq:([Ljava/lang/Object;)V
        87: aload_0
        88: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
        91: aload_0
        92: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
        97: aload_0
        98: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       103: arraylength
       104: invokevirtual #45                 // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
       107: invokeinterface #170,  2          // InterfaceMethod threshold_$eq:(I)V
       112: aload_0
       113: aload_1
       114: invokevirtual #151                // Method java/io/ObjectInputStream.readInt:()I
       117: invokeinterface #172,  2          // InterfaceMethod seedvalue_$eq:(I)V
       122: aload_1
       123: invokevirtual #175                // Method java/io/ObjectInputStream.readBoolean:()Z
       126: istore        4
       128: iload         4
       130: ifeq          149
       133: aload_0
       134: aload_0
       135: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       140: arraylength
       141: invokeinterface #178,  2          // InterfaceMethod sizeMapInit:(I)V
       146: goto          156
       149: aload_0
       150: aconst_null
       151: invokeinterface #180,  2          // InterfaceMethod sizemap_$eq:([I)V
       156: iconst_0
       157: istore        5
       159: iload         5
       161: iload_3
       162: if_icmpge     204
       165: aload_0
       166: aload_1
       167: invokevirtual #183                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       170: invokeinterface #187,  2          // InterfaceMethod entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
       175: astore        6
       177: aload_2
       178: aload         6
       180: invokeinterface #192,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       185: pop
       186: aload_0
       187: aload         6
       189: invokeinterface #196,  2          // InterfaceMethod addElem:(Ljava/lang/Object;)Z
       194: pop
       195: iload         5
       197: iconst_1
       198: iadd
       199: istore        5
       201: goto          159
       204: return
      StackMapTable: number_of_entries = 8
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/mutable/FlatHashTable, class java/io/ObjectInputStream, class scala/Function1 ]
          stack = [ class scala/Predef$, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/collection/mutable/FlatHashTable, class java/io/ObjectInputStream, class scala/Function1, int ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/mutable/FlatHashTable, class java/io/ObjectInputStream, class scala/Function1, int ]
          stack = [ class scala/Predef$, int ]
        frame_type = 252 /* append */
          offset_delta = 92
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 44 /* same */
      LineNumberTable:
        line 78: 0
        line 79: 10
        line 81: 31
        line 82: 36
        line 83: 43
        line 85: 59
        line 86: 87
        line 88: 112
        line 90: 122
        line 91: 128
        line 93: 156
        line 94: 159
        line 95: 165
        line 96: 177
        line 97: 186
        line 98: 195
        line 94: 201
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          177      24     6  elem   Ljava/lang/Object;
           36     168     3  size   I
          128      76     4 smDefined   Z
          159      45     5 index   I
            0     205     0  this   Lscala/collection/mutable/FlatHashTable;
            0     205     1    in   Ljava/io/ObjectInputStream;
            0     205     2     f   Lscala/Function1;
    Signature: #146                         // (Ljava/io/ObjectInputStream;Lscala/Function1<TA;Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      in                             final
      f                              final

  public static void serializeTo$(scala.collection.mutable.FlatHashTable, java.io.ObjectOutputStream);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/io/ObjectOutputStream;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #208                // InterfaceMethod serializeTo:(Ljava/io/ObjectOutputStream;)V
         5: return
      LineNumberTable:
        line 107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1   out   Ljava/io/ObjectOutputStream;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      out                            final

  public default void serializeTo(java.io.ObjectOutputStream);
    descriptor: (Ljava/io/ObjectOutputStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
         7: invokevirtual #214                // Method java/io/ObjectOutputStream.writeInt:(I)V
        10: aload_1
        11: aload_0
        12: invokeinterface #108,  1          // InterfaceMethod tableSize:()I
        17: invokevirtual #214                // Method java/io/ObjectOutputStream.writeInt:(I)V
        20: aload_1
        21: aload_0
        22: invokeinterface #216,  1          // InterfaceMethod seedvalue:()I
        27: invokevirtual #214                // Method java/io/ObjectOutputStream.writeInt:(I)V
        30: aload_1
        31: aload_0
        32: invokeinterface #219,  1          // InterfaceMethod isSizeMapDefined:()Z
        37: invokevirtual #222                // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
        40: aload_0
        41: invokeinterface #226,  1          // InterfaceMethod iterator:()Lscala/collection/Iterator;
        46: aload_1
        47: invokedynamic #243,  0            // InvokeDynamic #0:apply:(Ljava/io/ObjectOutputStream;)Lscala/Function1;
        52: invokeinterface #249,  2          // InterfaceMethod scala/collection/Iterator.foreach:(Lscala/Function1;)V
        57: return
      LineNumberTable:
        line 108: 0
        line 109: 10
        line 110: 20
        line 111: 30
        line 112: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  this   Lscala/collection/mutable/FlatHashTable;
            0      58     1   out   Ljava/io/ObjectOutputStream;
    MethodParameters:
      Name                           Flags
      out                            final

  public static scala.Option findEntry$(scala.collection.mutable.FlatHashTable, java.lang.Object);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #255                // InterfaceMethod findEntry:(Ljava/lang/Object;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      elem                           final

  public default scala.Option<A> findEntry(A);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #259                // InterfaceMethod findElemImpl:(Ljava/lang/Object;)Ljava/lang/Object;
         5: astore_3
         6: aload_3
         7: ifnonnull     17
        10: getstatic     #264                // Field scala/None$.MODULE$:Lscala/None$;
        13: astore_2
        14: goto          38
        17: goto          20
        20: new           #266                // class scala/Some
        23: dup
        24: aload_0
        25: aload_3
        26: invokeinterface #187,  2          // InterfaceMethod entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
        31: invokespecial #270                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        34: astore_2
        35: goto          38
        38: aload_2
        39: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class scala/collection/mutable/FlatHashTable, class java/lang/Object, class scala/Option, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 117: 0
        line 118: 6
        line 119: 20
        line 117: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0  this   Lscala/collection/mutable/FlatHashTable;
            0      40     1  elem   Ljava/lang/Object;
    Signature: #256                         // (TA;)Lscala/Option<TA;>;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static boolean containsElem$(scala.collection.mutable.FlatHashTable, java.lang.Object);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #277                // InterfaceMethod containsElem:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 124: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      elem                           final

  public default boolean containsElem(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #259                // InterfaceMethod findElemImpl:(Ljava/lang/Object;)Ljava/lang/Object;
         5: ifnull        12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 125: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/collection/mutable/FlatHashTable;
            0      14     1  elem   Ljava/lang/Object;
    Signature: #278                         // (TA;)Z
    MethodParameters:
      Name                           Flags
      elem                           final

  private java.lang.Object findElemImpl(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #282,  2          // InterfaceMethod elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
         7: astore_2
         8: aload_0
         9: aload_2
        10: invokevirtual #285                // Method java/lang/Object.hashCode:()I
        13: invokeinterface #287,  2          // InterfaceMethod index:(I)I
        18: istore_3
        19: aload_0
        20: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        25: iload_3
        26: aaload
        27: astore        4
        29: aload         4
        31: ifnull        68
        34: aload         4
        36: aload_2
        37: invokestatic  #293                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        40: ifne          68
        43: iload_3
        44: iconst_1
        45: iadd
        46: aload_0
        47: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        52: arraylength
        53: irem
        54: istore_3
        55: aload_0
        56: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        61: iload_3
        62: aaload
        63: astore        4
        65: goto          29
        68: aload         4
        70: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 29
          locals = [ class java/lang/Object, int, class java/lang/Object ]
        frame_type = 38 /* same */
      LineNumberTable:
        line 129: 0
        line 130: 8
        line 131: 19
        line 132: 29
        line 133: 43
        line 134: 55
        line 132: 65
        line 136: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      62     2 searchEntry   Ljava/lang/Object;
           19      51     3     h   I
           29      41     4 curEntry   Ljava/lang/Object;
            0      71     0  this   Lscala/collection/mutable/FlatHashTable;
            0      71     1  elem   Ljava/lang/Object;
    Signature: #279                         // (TA;)Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static boolean addElem$(scala.collection.mutable.FlatHashTable, java.lang.Object);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #196                // InterfaceMethod addElem:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      elem                           final

  public default boolean addElem(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: aload_1
         3: invokeinterface #282,  2          // InterfaceMethod elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokeinterface #300,  2          // InterfaceMethod addEntry:(Ljava/lang/Object;)Z
        13: ireturn
      LineNumberTable:
        line 143: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lscala/collection/mutable/FlatHashTable;
            0      14     1  elem   Ljava/lang/Object;
    Signature: #278                         // (TA;)Z
    MethodParameters:
      Name                           Flags
      elem                           final

  public static boolean addEntry$(scala.collection.mutable.FlatHashTable, java.lang.Object);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #300                // InterfaceMethod addEntry:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1 newEntry   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      newEntry                       final

  public default boolean addEntry(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #285                // Method java/lang/Object.hashCode:()I
         5: invokeinterface #287,  2          // InterfaceMethod index:(I)I
        10: istore_2
        11: aload_0
        12: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        17: iload_2
        18: aaload
        19: astore_3
        20: aload_3
        21: ifnull        58
        24: aload_3
        25: aload_1
        26: invokestatic  #293                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        29: ifeq          34
        32: iconst_0
        33: ireturn
        34: iload_2
        35: iconst_1
        36: iadd
        37: aload_0
        38: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        43: arraylength
        44: irem
        45: istore_2
        46: aload_0
        47: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        52: iload_2
        53: aaload
        54: astore_3
        55: goto          20
        58: aload_0
        59: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        64: iload_2
        65: aload_1
        66: aastore
        67: aload_0
        68: aload_0
        69: invokeinterface #108,  1          // InterfaceMethod tableSize:()I
        74: iconst_1
        75: iadd
        76: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
        81: aload_0
        82: iload_2
        83: invokeinterface #305,  2          // InterfaceMethod nnSizeMapAdd:(I)V
        88: aload_0
        89: invokeinterface #108,  1          // InterfaceMethod tableSize:()I
        94: aload_0
        95: invokeinterface #307,  1          // InterfaceMethod threshold:()I
       100: if_icmplt     110
       103: aload_0
       104: invokespecial #311                // InterfaceMethod growTable:()V
       107: goto          110
       110: iconst_1
       111: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ int, class java/lang/Object ]
        frame_type = 13 /* same */
        frame_type = 23 /* same */
        frame_type = 51 /* same */
      LineNumberTable:
        line 152: 0
        line 153: 11
        line 154: 20
        line 155: 24
        line 156: 34
        line 157: 46
        line 154: 55
        line 160: 58
        line 161: 67
        line 162: 81
        line 163: 88
        line 164: 110
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     100     2     h   I
           20      91     3 curEntry   Ljava/lang/Object;
            0     112     0  this   Lscala/collection/mutable/FlatHashTable;
            0     112     1 newEntry   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      newEntry                       final

  public static boolean removeElem$(scala.collection.mutable.FlatHashTable, java.lang.Object);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Ljava/lang/Object;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #315                // InterfaceMethod removeElem:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1  elem   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      elem                           final

  public default boolean removeElem(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=8, args_size=2
         0: aload_0
         1: invokespecial #317                // InterfaceMethod tableDebug:()Z
         4: ifeq          14
         7: aload_0
         8: invokespecial #320                // InterfaceMethod checkConsistent:()V
        11: goto          14
        14: aload_0
        15: aload_1
        16: invokeinterface #282,  2          // InterfaceMethod elemToEntry:(Ljava/lang/Object;)Ljava/lang/Object;
        21: astore_2
        22: aload_0
        23: aload_2
        24: invokevirtual #285                // Method java/lang/Object.hashCode:()I
        27: invokeinterface #287,  2          // InterfaceMethod index:(I)I
        32: istore_3
        33: aload_0
        34: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        39: iload_3
        40: aaload
        41: astore        4
        43: aload         4
        45: ifnull        239
        48: aload         4
        50: aload_2
        51: invokestatic  #293                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        54: ifeq          214
        57: iload_3
        58: istore        5
        60: iload         5
        62: iconst_1
        63: iadd
        64: aload_0
        65: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        70: arraylength
        71: irem
        72: istore        6
        74: aload_0
        75: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        80: iload         6
        82: aaload
        83: ifnull        166
        86: aload_0
        87: aload_0
        88: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        93: iload         6
        95: aaload
        96: invokevirtual #285                // Method java/lang/Object.hashCode:()I
        99: invokeinterface #287,  2          // InterfaceMethod index:(I)I
       104: istore        7
       106: iload         7
       108: iload         6
       110: if_icmpeq     149
       113: aload_0
       114: iload         7
       116: iload         5
       118: invokespecial #324                // InterfaceMethod precedes$1:(II)Z
       121: ifeq          149
       124: aload_0
       125: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       130: iload         5
       132: aload_0
       133: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       138: iload         6
       140: aaload
       141: aastore
       142: iload         6
       144: istore        5
       146: goto          149
       149: iload         6
       151: iconst_1
       152: iadd
       153: aload_0
       154: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       159: arraylength
       160: irem
       161: istore        6
       163: goto          74
       166: aload_0
       167: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       172: iload         5
       174: aconst_null
       175: aastore
       176: aload_0
       177: aload_0
       178: invokeinterface #108,  1          // InterfaceMethod tableSize:()I
       183: iconst_1
       184: isub
       185: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
       190: aload_0
       191: iload         5
       193: invokeinterface #327,  2          // InterfaceMethod nnSizeMapRemove:(I)V
       198: aload_0
       199: invokespecial #317                // InterfaceMethod tableDebug:()Z
       202: ifeq          212
       205: aload_0
       206: invokespecial #320                // InterfaceMethod checkConsistent:()V
       209: goto          212
       212: iconst_1
       213: ireturn
       214: iload_3
       215: iconst_1
       216: iadd
       217: aload_0
       218: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       223: arraylength
       224: irem
       225: istore_3
       226: aload_0
       227: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
       232: iload_3
       233: aaload
       234: astore        4
       236: goto          43
       239: iconst_0
       240: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 14 /* same */
        frame_type = 254 /* append */
          offset_delta = 28
          locals = [ class java/lang/Object, int, class java/lang/Object ]
        frame_type = 253 /* append */
          offset_delta = 30
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 74
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 16
        frame_type = 45 /* same */
        frame_type = 249 /* chop */
          offset_delta = 1
        frame_type = 24 /* same */
      LineNumberTable:
        line 173: 0
        line 179: 14
        line 180: 22
        line 181: 33
        line 182: 43
        line 183: 48
        line 184: 57
        line 185: 60
        line 186: 74
        line 187: 86
        line 189: 106
        line 191: 124
        line 192: 142
        line 194: 149
        line 186: 163
        line 196: 166
        line 197: 176
        line 198: 190
        line 199: 198
        line 200: 212
        line 202: 214
        line 203: 226
        line 182: 236
        line 205: 239
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          106      57     7    h2   I
           60     154     5    h0   I
           74     140     6    h1   I
           22     218     2 removalEntry   Ljava/lang/Object;
           33     207     3     h   I
           43     197     4 curEntry   Ljava/lang/Object;
            0     241     0  this   Lscala/collection/mutable/FlatHashTable;
            0     241     1  elem   Ljava/lang/Object;
    Signature: #278                         // (TA;)Z
    MethodParameters:
      Name                           Flags
      elem                           final

  public static scala.collection.Iterator iterator$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)Lscala/collection/Iterator;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #226                // InterfaceMethod iterator:()Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.Iterator<A> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #26                 // class scala/collection/mutable/FlatHashTable$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #337                // Method scala/collection/mutable/FlatHashTable$$anon$1."<init>":(Lscala/collection/mutable/FlatHashTable;)V
         8: areturn
      LineNumberTable:
        line 208: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/mutable/FlatHashTable;
    Signature: #334                         // ()Lscala/collection/Iterator<TA;>;

  private void growTable();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         6: astore_1
         7: aload_0
         8: aload_0
         9: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        14: arraylength
        15: iconst_2
        16: imul
        17: anewarray     #5                  // class java/lang/Object
        20: invokeinterface #168,  2          // InterfaceMethod table_$eq:([Ljava/lang/Object;)V
        25: aload_0
        26: iconst_0
        27: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
        32: aload_0
        33: aload_0
        34: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        39: arraylength
        40: invokeinterface #340,  2          // InterfaceMethod nnSizeMapReset:(I)V
        45: aload_0
        46: aload_0
        47: invokeinterface #128,  1          // InterfaceMethod tableSizeSeed:()I
        52: invokeinterface #172,  2          // InterfaceMethod seedvalue_$eq:(I)V
        57: aload_0
        58: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
        61: aload_0
        62: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
        67: aload_0
        68: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        73: arraylength
        74: invokevirtual #45                 // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
        77: invokeinterface #170,  2          // InterfaceMethod threshold_$eq:(I)V
        82: iconst_0
        83: istore_2
        84: iload_2
        85: aload_1
        86: arraylength
        87: if_icmpge     122
        90: aload_1
        91: iload_2
        92: aaload
        93: astore_3
        94: aload_3
        95: ifnull        111
        98: aload_0
        99: aload_3
       100: invokeinterface #300,  2          // InterfaceMethod addEntry:(Ljava/lang/Object;)Z
       105: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       108: goto          114
       111: getstatic     #350                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       114: pop
       115: iload_2
       116: iconst_1
       117: iadd
       118: istore_2
       119: goto          84
       122: aload_0
       123: invokespecial #317                // InterfaceMethod tableDebug:()Z
       126: ifeq          136
       129: aload_0
       130: invokespecial #320                // InterfaceMethod checkConsistent:()V
       133: goto          136
       136: return
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 84
          locals = [ class "[Ljava/lang/Object;", int ]
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class java/lang/Object ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 13 /* same */
      LineNumberTable:
        line 220: 0
        line 221: 7
        line 222: 25
        line 223: 32
        line 224: 45
        line 225: 57
        line 226: 82
        line 227: 84
        line 228: 90
        line 229: 94
        line 230: 115
        line 227: 119
        line 232: 122
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           94      25     3 entry   Ljava/lang/Object;
            7     129     1 oldtable   [Ljava/lang/Object;
           84      52     2     i   I
            0     137     0  this   Lscala/collection/mutable/FlatHashTable;

  private void checkConsistent();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #360                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
         3: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iconst_0
         7: invokevirtual #363                // Method scala/Predef$.intWrapper:(I)I
        10: aload_0
        11: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        16: arraylength
        17: invokevirtual #367                // Method scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
        20: aload_0
        21: invokedynamic #377,  0            // InvokeDynamic #1:apply$mcVI$sp:(Lscala/collection/mutable/FlatHashTable;)Lscala/runtime/java8/JFunction1$mcVI$sp;
        26: invokevirtual #382                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
        29: return
      LineNumberTable:
        line 236: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/collection/mutable/FlatHashTable;

  public static void nnSizeMapAdd$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #305                // InterfaceMethod nnSizeMapAdd:(I)V
         5: return
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1     h   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      h                              final

  public default void nnSizeMapAdd(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
         6: ifnull        36
         9: iload_1
        10: aload_0
        11: invokeinterface #388,  1          // InterfaceMethod sizeMapBucketBitSize:()I
        16: ishr
        17: istore_2
        18: aload_0
        19: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        24: astore_3
        25: aload_3
        26: iload_2
        27: aload_3
        28: iload_2
        29: iaload
        30: iconst_1
        31: iadd
        32: iastore
        33: goto          36
        36: return
      StackMapTable: number_of_entries = 1
        frame_type = 36 /* same */
      LineNumberTable:
        line 257: 0
        line 258: 9
        line 259: 18
        line 257: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      15     2     p   I
            0      37     0  this   Lscala/collection/mutable/FlatHashTable;
            0      37     1     h   I
    MethodParameters:
      Name                           Flags
      h                              final

  public static void nnSizeMapRemove$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #327                // InterfaceMethod nnSizeMapRemove:(I)V
         5: return
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1     h   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      h                              final

  public default void nnSizeMapRemove(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
         6: ifnull        36
         9: aload_0
        10: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        15: astore_2
        16: iload_1
        17: aload_0
        18: invokeinterface #388,  1          // InterfaceMethod sizeMapBucketBitSize:()I
        23: ishr
        24: istore_3
        25: aload_2
        26: iload_3
        27: aload_2
        28: iload_3
        29: iaload
        30: iconst_1
        31: isub
        32: iastore
        33: goto          36
        36: return
      StackMapTable: number_of_entries = 1
        frame_type = 36 /* same */
      LineNumberTable:
        line 262: 0
        line 263: 9
        line 262: 36
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lscala/collection/mutable/FlatHashTable;
            0      37     1     h   I
    MethodParameters:
      Name                           Flags
      h                              final

  public static void nnSizeMapReset$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #340                // InterfaceMethod nnSizeMapReset:(I)V
         5: return
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1 tableLength   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tableLength                    final

  public default void nnSizeMapReset(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
         6: ifnull        53
         9: aload_0
        10: iload_1
        11: invokeinterface #395,  2          // InterfaceMethod calcSizeMapSize:(I)I
        16: istore_2
        17: aload_0
        18: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        23: arraylength
        24: iload_2
        25: if_icmpeq     40
        28: aload_0
        29: iload_2
        30: newarray       int
        32: invokeinterface #180,  2          // InterfaceMethod sizemap_$eq:([I)V
        37: goto          50
        40: aload_0
        41: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        46: iconst_0
        47: invokestatic  #401                // Method java/util/Arrays.fill:([II)V
        50: goto          53
        53: return
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 9 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 266: 0
        line 267: 9
        line 268: 17
        line 269: 40
        line 266: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      33     2 nsize   I
            0      54     0  this   Lscala/collection/mutable/FlatHashTable;
            0      54     1 tableLength   I
    MethodParameters:
      Name                           Flags
      tableLength                    final

  public static int totalSizeMapBuckets$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #406                // InterfaceMethod totalSizeMapBuckets:()I
         4: ireturn
      LineNumberTable:
        line 272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default int totalSizeMapBuckets();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         6: arraylength
         7: iconst_1
         8: isub
         9: aload_0
        10: invokeinterface #409,  1          // InterfaceMethod sizeMapBucketSize:()I
        15: idiv
        16: iconst_1
        17: iadd
        18: ireturn
      LineNumberTable:
        line 272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/collection/mutable/FlatHashTable;

  public static int calcSizeMapSize$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #395                // InterfaceMethod calcSizeMapSize:(I)I
         5: ireturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1 tableLength   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tableLength                    final

  public default int calcSizeMapSize(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: aload_0
         2: invokeinterface #388,  1          // InterfaceMethod sizeMapBucketBitSize:()I
         7: ishr
         8: iconst_1
         9: iadd
        10: ireturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/mutable/FlatHashTable;
            0      11     1 tableLength   I
    MethodParameters:
      Name                           Flags
      tableLength                    final

  public static void sizeMapInit$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #178                // InterfaceMethod sizeMapInit:(I)V
         5: return
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1 tableLength   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tableLength                    final

  public default void sizeMapInit(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: iload_1
         3: invokeinterface #395,  2          // InterfaceMethod calcSizeMapSize:(I)I
         8: newarray       int
        10: invokeinterface #180,  2          // InterfaceMethod sizemap_$eq:([I)V
        15: return
      LineNumberTable:
        line 278: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/collection/mutable/FlatHashTable;
            0      16     1 tableLength   I
    MethodParameters:
      Name                           Flags
      tableLength                    final

  public static void sizeMapInitAndRebuild$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #415                // InterfaceMethod sizeMapInitAndRebuild:()V
         4: return
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void sizeMapInitAndRebuild();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=1
         0: aload_0
         1: aload_0
         2: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         7: arraylength
         8: invokeinterface #178,  2          // InterfaceMethod sizeMapInit:(I)V
        13: aload_0
        14: invokeinterface #406,  1          // InterfaceMethod totalSizeMapBuckets:()I
        19: istore_1
        20: iconst_0
        21: istore_2
        22: iconst_0
        23: istore_3
        24: aload_0
        25: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        30: astore        4
        32: getstatic     #360                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
        35: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        38: aload_0
        39: invokeinterface #409,  1          // InterfaceMethod sizeMapBucketSize:()I
        44: invokevirtual #363                // Method scala/Predef$.intWrapper:(I)I
        47: aload         4
        49: arraylength
        50: invokevirtual #418                // Method scala/runtime/RichInt$.min$extension:(II)I
        53: istore        5
        55: iload_2
        56: iload_1
        57: if_icmpge     120
        60: iconst_0
        61: istore        6
        63: iload_3
        64: iload         5
        66: if_icmpge     92
        69: aload         4
        71: iload_3
        72: aaload
        73: ifnull        85
        76: iload         6
        78: iconst_1
        79: iadd
        80: istore        6
        82: goto          85
        85: iload_3
        86: iconst_1
        87: iadd
        88: istore_3
        89: goto          63
        92: aload_0
        93: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        98: iload_2
        99: iload         6
       101: iastore
       102: iload         5
       104: aload_0
       105: invokeinterface #409,  1          // InterfaceMethod sizeMapBucketSize:()I
       110: iadd
       111: istore        5
       113: iload_2
       114: iconst_1
       115: iadd
       116: istore_2
       117: goto          55
       120: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class scala/collection/mutable/FlatHashTable, int, int, int, class "[Ljava/lang/Object;", int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 7
          locals = [ int ]
        frame_type = 21 /* same */
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 27
      LineNumberTable:
        line 284: 0
        line 287: 13
        line 288: 20
        line 289: 22
        line 290: 24
        line 291: 32
        line 292: 55
        line 293: 60
        line 294: 63
        line 295: 69
        line 296: 85
        line 294: 89
        line 298: 92
        line 299: 102
        line 300: 113
        line 292: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           63      54     6 currbucketsz   I
           20     100     1 totalbuckets   I
           22      98     2 bucketidx   I
           24      96     3 tableidx   I
           32      88     4   tbl   [Ljava/lang/Object;
           55      65     5 tableuntil   I
            0     121     0  this   Lscala/collection/mutable/FlatHashTable;

  public static void printSizeMap$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #428                // InterfaceMethod printSizeMap:()V
         4: return
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void printSizeMap();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        12: invokevirtual #432                // Method scala/Predef$.wrapIntArray:([I)Lscala/collection/mutable/ArraySeq$ofInt;
        15: ldc_w         #434                // String szmap: [
        18: ldc_w         #436                // String ,
        21: ldc_w         #438                // String ]
        24: invokevirtual #442                // Method scala/collection/mutable/ArraySeq$ofInt.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        27: invokevirtual #445                // Method scala/Predef$.println:(Ljava/lang/Object;)V
        30: return
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/mutable/FlatHashTable;

  public static void printContents$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #449                // InterfaceMethod printContents:()V
         4: return
      LineNumberTable:
        line 308: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void printContents();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        12: invokevirtual #453                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        15: ldc_w         #455                // String [
        18: ldc_w         #436                // String ,
        21: ldc_w         #438                // String ]
        24: invokevirtual #456                // Method scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        27: invokevirtual #445                // Method scala/Predef$.println:(Ljava/lang/Object;)V
        30: return
      LineNumberTable:
        line 309: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/mutable/FlatHashTable;

  public static void sizeMapDisable$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #460                // InterfaceMethod sizeMapDisable:()V
         4: return
      LineNumberTable:
        line 312: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void sizeMapDisable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: aconst_null
         2: invokeinterface #180,  2          // InterfaceMethod sizemap_$eq:([I)V
         7: return
      LineNumberTable:
        line 312: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/mutable/FlatHashTable;

  public static boolean isSizeMapDefined$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #219                // InterfaceMethod isSizeMapDefined:()Z
         4: ireturn
      LineNumberTable:
        line 314: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean isSizeMapDefined();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
         6: ifnull        13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 314: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/collection/mutable/FlatHashTable;

  public static boolean alwaysInitSizeMap$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #466                // InterfaceMethod alwaysInitSizeMap:()Z
         4: ireturn
      LineNumberTable:
        line 316: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean alwaysInitSizeMap();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 316: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/mutable/FlatHashTable;

  public static int index$(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)I
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokespecial #287                // InterfaceMethod index:(I)I
         5: ireturn
      LineNumberTable:
        line 320: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1 hcode   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      hcode                          final

  public default int index(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_0
         1: iload_1
         2: aload_0
         3: invokeinterface #216,  1          // InterfaceMethod seedvalue:()I
         8: invokeinterface #471,  3          // InterfaceMethod improve:(II)I
        13: istore_2
        14: aload_0
        15: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        20: arraylength
        21: iconst_1
        22: isub
        23: istore_3
        24: iload_2
        25: bipush        32
        27: iload_3
        28: invokestatic  #135                // Method java/lang/Integer.bitCount:(I)I
        31: isub
        32: iushr
        33: iload_3
        34: iand
        35: ireturn
      LineNumberTable:
        line 325: 0
        line 326: 14
        line 327: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      21     2 improved   I
           24      11     3  ones   I
            0      36     0  this   Lscala/collection/mutable/FlatHashTable;
            0      36     1 hcode   I
    MethodParameters:
      Name                           Flags
      hcode                          final

  public static void clearTable$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #477                // InterfaceMethod clearTable:()V
         4: return
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default void clearTable();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         6: arraylength
         7: iconst_1
         8: isub
         9: istore_1
        10: iload_1
        11: iconst_0
        12: if_icmplt     31
        15: aload_0
        16: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        21: iload_1
        22: aconst_null
        23: aastore
        24: iload_1
        25: iconst_1
        26: isub
        27: istore_1
        28: goto          10
        31: aload_0
        32: iconst_0
        33: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
        38: aload_0
        39: aload_0
        40: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        45: arraylength
        46: invokeinterface #340,  2          // InterfaceMethod nnSizeMapReset:(I)V
        51: return
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 10
          locals = [ int ]
        frame_type = 20 /* same */
      LineNumberTable:
        line 342: 0
        line 343: 10
        line 344: 31
        line 345: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      41     1     i   I
            0      52     0  this   Lscala/collection/mutable/FlatHashTable;

  public static scala.collection.mutable.FlatHashTable$Contents hashTableContents$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)Lscala/collection/mutable/FlatHashTable$Contents;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #483                // InterfaceMethod hashTableContents:()Lscala/collection/mutable/FlatHashTable$Contents;
         4: areturn
      LineNumberTable:
        line 348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default scala.collection.mutable.FlatHashTable$Contents<A> hashTableContents();
    descriptor: ()Lscala/collection/mutable/FlatHashTable$Contents;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=1, args_size=1
         0: new           #28                 // class scala/collection/mutable/FlatHashTable$Contents
         3: dup
         4: aload_0
         5: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
        10: aload_0
        11: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        16: aload_0
        17: invokeinterface #108,  1          // InterfaceMethod tableSize:()I
        22: aload_0
        23: invokeinterface #307,  1          // InterfaceMethod threshold:()I
        28: aload_0
        29: invokeinterface #216,  1          // InterfaceMethod seedvalue:()I
        34: aload_0
        35: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        40: invokespecial #487                // Method scala/collection/mutable/FlatHashTable$Contents."<init>":(I[Ljava/lang/Object;III[I)V
        43: areturn
      LineNumberTable:
        line 348: 0
        line 349: 4
        line 350: 10
        line 351: 16
        line 352: 22
        line 353: 28
        line 354: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lscala/collection/mutable/FlatHashTable;
    Signature: #484                         // ()Lscala/collection/mutable/FlatHashTable$Contents<TA;>;

  public static void initWithContents$(scala.collection.mutable.FlatHashTable, scala.collection.mutable.FlatHashTable$Contents);
    descriptor: (Lscala/collection/mutable/FlatHashTable;Lscala/collection/mutable/FlatHashTable$Contents;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #494                // InterfaceMethod initWithContents:(Lscala/collection/mutable/FlatHashTable$Contents;)V
         5: return
      LineNumberTable:
        line 357: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 $this   Lscala/collection/mutable/FlatHashTable;
            0       6     1     c   Lscala/collection/mutable/FlatHashTable$Contents;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      c                              final

  public default void initWithContents(scala.collection.mutable.FlatHashTable$Contents<A>);
    descriptor: (Lscala/collection/mutable/FlatHashTable$Contents;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnull        67
         4: aload_0
         5: aload_1
         6: invokevirtual #499                // Method scala/collection/mutable/FlatHashTable$Contents.loadFactor:()I
         9: invokeinterface #153,  2          // InterfaceMethod _loadFactor_$eq:(I)V
        14: aload_0
        15: aload_1
        16: invokevirtual #500                // Method scala/collection/mutable/FlatHashTable$Contents.table:()[Ljava/lang/Object;
        19: invokeinterface #168,  2          // InterfaceMethod table_$eq:([Ljava/lang/Object;)V
        24: aload_0
        25: aload_1
        26: invokevirtual #501                // Method scala/collection/mutable/FlatHashTable$Contents.tableSize:()I
        29: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
        34: aload_0
        35: aload_1
        36: invokevirtual #502                // Method scala/collection/mutable/FlatHashTable$Contents.threshold:()I
        39: invokeinterface #170,  2          // InterfaceMethod threshold_$eq:(I)V
        44: aload_0
        45: aload_1
        46: invokevirtual #503                // Method scala/collection/mutable/FlatHashTable$Contents.seedvalue:()I
        49: invokeinterface #172,  2          // InterfaceMethod seedvalue_$eq:(I)V
        54: aload_0
        55: aload_1
        56: invokevirtual #504                // Method scala/collection/mutable/FlatHashTable$Contents.sizemap:()[I
        59: invokeinterface #180,  2          // InterfaceMethod sizemap_$eq:([I)V
        64: goto          67
        67: aload_0
        68: invokeinterface #466,  1          // InterfaceMethod alwaysInitSizeMap:()Z
        73: ifeq          95
        76: aload_0
        77: invokeinterface #385,  1          // InterfaceMethod sizemap:()[I
        82: aconst_null
        83: if_acmpne     95
        86: aload_0
        87: invokeinterface #415,  1          // InterfaceMethod sizeMapInitAndRebuild:()V
        92: goto          95
        95: return
      StackMapTable: number_of_entries = 2
        frame_type = 251 /* same_frame_extended */
          offset_delta = 67
        frame_type = 27 /* same */
      LineNumberTable:
        line 358: 0
        line 359: 4
        line 360: 14
        line 361: 24
        line 362: 34
        line 363: 44
        line 364: 54
        line 366: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      96     0  this   Lscala/collection/mutable/FlatHashTable;
            0      96     1     c   Lscala/collection/mutable/FlatHashTable$Contents;
    Signature: #496                         // (Lscala/collection/mutable/FlatHashTable$Contents<TA;>;)V
    MethodParameters:
      Name                           Flags
      c                              final

  public static void $anonfun$serializeTo$1(java.io.ObjectOutputStream, java.lang.Object);
    descriptor: (Ljava/io/ObjectOutputStream;Ljava/lang/Object;)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #510                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
         5: return
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0 out$1   Ljava/io/ObjectOutputStream;
            0       6     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      out$1                          final
      x$1                            final

  private boolean precedes$1(int, int);
    descriptor: (II)Z
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=4, args_size=3
         0: aload_0
         1: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         6: arraylength
         7: iconst_1
         8: ishr
         9: istore_3
        10: iload_1
        11: iload_2
        12: if_icmpgt     30
        15: iload_2
        16: iload_1
        17: isub
        18: iload_3
        19: if_icmpge     26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: goto          42
        30: iload_1
        31: iload_2
        32: isub
        33: iload_3
        34: if_icmple     41
        37: iconst_1
        38: goto          42
        41: iconst_0
        42: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 2 /* same */
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 175: 0
        line 176: 10
        line 177: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      32     3     d   I
            0      43     0  this   Lscala/collection/mutable/FlatHashTable;
            0      43     1     i   I
            0      43     2     j   I
    MethodParameters:
      Name                           Flags
      i                              final
      j                              final

  public static java.lang.String $anonfun$checkConsistent$2(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #517                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #518                // int 2
         7: invokespecial #520                // Method java/lang/StringBuilder."<init>":(I)V
        10: iload_1
        11: invokevirtual #524                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        14: ldc_w         #526                // String
        17: invokevirtual #529                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: aload_0
        21: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        26: iload_1
        27: aaload
        28: invokevirtual #532                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        31: ldc_w         #526                // String
        34: invokevirtual #529                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        40: aload_0
        41: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        46: invokevirtual #453                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        49: invokevirtual #535                // Method scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
        52: invokevirtual #529                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: invokevirtual #538                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        58: areturn
      LineNumberTable:
        line 238: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0 $this   Lscala/collection/mutable/FlatHashTable;
            0      59     1   i$1   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      i$1                            final

  public static void $anonfun$checkConsistent$1(scala.collection.mutable.FlatHashTable, int);
    descriptor: (Lscala/collection/mutable/FlatHashTable;I)V
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
         6: iload_1
         7: aaload
         8: ifnull        51
        11: aload_0
        12: aload_0
        13: aload_0
        14: invokeinterface #130,  1          // InterfaceMethod table:()[Ljava/lang/Object;
        19: iload_1
        20: aaload
        21: invokeinterface #187,  2          // InterfaceMethod entryToElem:(Ljava/lang/Object;)Ljava/lang/Object;
        26: invokeinterface #277,  2          // InterfaceMethod containsElem:(Ljava/lang/Object;)Z
        31: ifne          51
        34: getstatic     #158                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        37: iconst_0
        38: aload_0
        39: iload_1
        40: invokedynamic #547,  0            // InvokeDynamic #2:apply:(Lscala/collection/mutable/FlatHashTable;I)Lscala/Function0;
        45: invokevirtual #550                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        48: goto          51
        51: return
      StackMapTable: number_of_entries = 1
        frame_type = 51 /* same */
      LineNumberTable:
        line 237: 0
        line 238: 34
        line 237: 51
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0 $this   Lscala/collection/mutable/FlatHashTable;
            0      52     1     i   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      i                              final

  public static void $init$(scala.collection.mutable.FlatHashTable);
    descriptor: (Lscala/collection/mutable/FlatHashTable;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
         4: invokevirtual #56                 // Method scala/collection/mutable/FlatHashTable$.defaultLoadFactor:()I
         7: invokeinterface #153,  2          // InterfaceMethod _loadFactor_$eq:(I)V
        12: aload_0
        13: aload_0
        14: invokespecial #553                // InterfaceMethod initialCapacity:()I
        17: anewarray     #5                  // class java/lang/Object
        20: invokeinterface #168,  2          // InterfaceMethod table_$eq:([Ljava/lang/Object;)V
        25: aload_0
        26: iconst_0
        27: invokeinterface #166,  2          // InterfaceMethod tableSize_$eq:(I)V
        32: aload_0
        33: getstatic     #43                 // Field scala/collection/mutable/FlatHashTable$.MODULE$:Lscala/collection/mutable/FlatHashTable$;
        36: aload_0
        37: invokeinterface #160,  1          // InterfaceMethod _loadFactor:()I
        42: aload_0
        43: invokespecial #553                // InterfaceMethod initialCapacity:()I
        46: invokevirtual #45                 // Method scala/collection/mutable/FlatHashTable$.newThreshold:(II)I
        49: invokeinterface #170,  2          // InterfaceMethod threshold_$eq:(I)V
        54: aload_0
        55: aconst_null
        56: invokeinterface #180,  2          // InterfaceMethod sizemap_$eq:([I)V
        61: aload_0
        62: aload_0
        63: invokeinterface #128,  1          // InterfaceMethod tableSizeSeed:()I
        68: invokeinterface #172,  2          // InterfaceMethod seedvalue_$eq:(I)V
        73: return
      LineNumberTable:
        line 36: 0
        line 40: 12
        line 44: 25
        line 48: 32
        line 52: 54
        line 54: 61
        line 31: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      74     0 $this   Lscala/collection/mutable/FlatHashTable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Object $anonfun$serializeTo$1$adapted(java.io.ObjectOutputStream, java.lang.Object);
    descriptor: (Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #555                // InterfaceMethod $anonfun$serializeTo$1:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)V
         5: getstatic     #350                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 out$1   Ljava/io/ObjectOutputStream;
            0       9     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      out$1                          final
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #567,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static final #21= #18 of #20;    // ofInt=class scala/collection/mutable/ArraySeq$ofInt of class scala/collection/mutable/ArraySeq
  public static final #24= #23 of #20;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
  public final #26;                       // class scala/collection/mutable/FlatHashTable$$anon$1
  public static #29= #28 of #2;           // Contents=class scala/collection/mutable/FlatHashTable$Contents of class scala/collection/mutable/FlatHashTable
  public static #30= #7 of #2;            // HashUtils=class scala/collection/mutable/FlatHashTable$HashUtils of class scala/collection/mutable/FlatHashTable
  private static #33= #32 of #2;          // NullSentinel$=class scala/collection/mutable/FlatHashTable$NullSentinel$ of class scala/collection/mutable/FlatHashTable
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;Lscala/collection/mutable/FlatHashTable$HashUtils<TA;>;
SourceFile: "FlatHashTable.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\t\u0005f\u0001\u0003*T!\u0003\r\t!V-\t\u000f\u0005\u0005\u0005\u0001\"\u0001\u0002\u0004\"9\u00111\u0017\u0001\u0005\n\u0005U\u0006BCA\u0011\u0001\u0001\u0007I\u0011A+\u0002\u0014!Q\u0011Q\u0018\u0001A\u0002\u0013\u0005Q+a0\t\u0013\u0005U\u0002\u00011A\u0005\u0002\u0005]\u0002\"CAc\u0001\u0001\u0007I\u0011AAd\u0011%\t\t\u0005\u0001a\u0001\n#\t\u0019\u0002C\u0005\u0002L\u0002\u0001\r\u0011\"\u0005\u0002N\"I\u0011Q\t\u0001A\u0002\u0013E\u00111\u0003\u0005\n\u0003#\u0004\u0001\u0019!C\t\u0003\'D\u0011\"!\u0014\u0001\u0001\u0004%\t\"a\u0014\t\u0013\u0005]\u0007\u00011A\u0005\u0012\u0005e\u0007\"CA%\u0001\u0001\u0007I\u0011CA\n\u0011%\ti\u000e\u0001a\u0001\n#\ty\u000eC\u0004\u0002d\u0002!\t\"!:\t\u000f\u0005-\b\u0001\"\u0001\u0002\u0014!9\u0011Q\u0004\u0001\u0005\u0002\u0005M\u0001bBAw\u0001\u0011%\u00111\u0003\u0005\b\u0003_\u0004A\u0011CA\n\u0011\u001d\t\t\u0010\u0001C\t\u0003\'Aq!a=\u0001\t\u0003\t)\u0010C\u0004\u0003\u0012\u0001!\tAa\u0005\t\u000f\t}\u0001\u0001\"\u0001\u0003\"!9!1\u0006\u0001\u0005\u0002\t5\u0002b\u0002B\u0019\u0001\u0011%!1\u0007\u0005\b\u0005o\u0001A\u0011\u0001B\u001d\u0011\u001d\u0011i\u0004\u0001C\t\u0005\u007fAqA!\u0012\u0001\t\u0003\u00119\u0005C\u0004\u0003L\u0001!\tA!\u0014\t\u000f\t]\u0003\u0001\"\u0003\u0002\u0004\"9!\u0011\f\u0001\u0005\n\u0005\r\u0005b\u0002B.\u0001\u0011U!Q\f\u0005\b\u0005G\u0002AQ\u0003B3\u0011\u001d\u0011I\u0007\u0001C\u000b\u0005WB\u0001B!\u001d\u0001\t\u000b)\u00161\u0003\u0005\b\u0005g\u0002AQ\u0003B;\u0011\u001d\u0011I\b\u0001C\u000b\u0005wBqAa \u0001\t+\t\u0019\t\u0003\u0005\u0003\u0002\u0002!\t!VAB\u0011!\u0011\u0019\t\u0001C\u0001+\u0006\r\u0005b\u0002BC\u0001\u0011E\u00111\u0011\u0005\b\u0005\u000f\u0003A\u0011CA[\u0011\u001d\u0011I\t\u0001C\t\u0003kCqAa#\u0001\t#\u0011i\tC\u0004\u0003\u0012\u0002!\t!a!\t\u0011\tM\u0005\u0001\"\u0001V\u0005+CqA!\'\u0001\t#\u0011Yj\u0002\u0004c\'\"\u0005Qk\u0019\u0004\u0007%NC\t!\u00163\t\u000b\u0015\fD\u0011A4\t\u000b!\fDQA5\b\u000ba\f\u0004\u0012B=\u0007\u000bm\f\u0004\u0012\u0002?\t\u000b\u0015,D\u0011A?\t\u000by,D\u0011I@\t\u000f\u0005\u001dQ\u0007\"\u0011\u0002\n!9\u0011\u0011C\u0019\u0005\u0002\u0005M\u0001bBA\u000bc\u0011\u0015\u00111\u0003\u0005\b\u0003/\tD\u0011AA\r\u0011\u001d\t\u0019#\rC\u0001\u0003K1a!a\u000b2\u0001\u00055\u0002BCA\u0019{\t\u0015\r\u0011\"\u0001\u0002\u0014!Q\u00111G\u001f\u0003\u0002\u0003\u0006I!!\u0001\t\u0015\u0005URH!b\u0001\n\u0003\t9\u0004\u0003\u0006\u0002@u\u0012\t\u0011)A\u0005\u0003sA!\"!\u0011>\u0005\u000b\u0007I\u0011AA\n\u0011)\t\u0019%\u0010B\u0001B\u0003%\u0011\u0011\u0001\u0005\u000b\u0003\u000bj$Q1A\u0005\u0002\u0005M\u0001BCA${\t\u0005\t\u0015!\u0003\u0002\u0002!Q\u0011\u0011J\u001f\u0003\u0006\u0004%\t!a\u0005\t\u0015\u0005-SH!A!\u0002\u0013\t\t\u0001\u0003\u0006\u0002Nu\u0012)\u0019!C\u0001\u0003\u001fB!\"a\u0015>\u0005\u0003\u0005\u000b\u0011BA)\u0011\u0019)W\b\"\u0001\u0002V\u0019I\u00111P\u0019\u0011\u0002\u0007\u0005\u0011Q\u0010\u0005\b\u0003\u0003[E\u0011AAB\u0011\u001d\tYi\u0013C\u000b\u0003\'Aq!!$L\t+\t\u0019\u0002C\u0004\u0002\u0010.#)\"!%\t\u000f\u0005m5\n\"\u0006\u0002\u001e\"9\u0011qU&\u0005\u0006\u0005%&!\u0004$mCRD\u0015m\u001d5UC\ndWM\u0003\u0002U+\u00069Q.\u001e;bE2,\'B\u0001,X\u0003)\u0019w\u000e\u001c7fGRLwN\u001c\u0006\u00021\u0006)1oY1mCV\u0019!,!-\u0014\u0007\u0001Yv\f\u0005\u0002];6\tq+\u0003\u0002_/\n1\u0011I\\=SK\u001a\u0004B\u0001Y&\u00020:\u0011\u0011\rM\u0007\u0002\'\u0006ia\t\\1u\u0011\u0006\u001c\b\u000eV1cY\u0016\u0004\"!Y\u0019\u0014\u0005EZ\u0016A\u0002\u001fj]&$hh\u0001\u0001\u0015\u0003\r\fQb]3fI\u001e+g.\u001a:bi>\u0014X#\u00016\u0011\u0007-\u0004(/D\u0001m\u0015\tig.\u0001\u0003mC:<\'\"A8\u0002\t)\fg/Y\u0005\u0003c2\u00141\u0002\u00165sK\u0006$Gj\\2bYB\u00111O^\u0007\u0002i*\u0011QoV\u0001\u0005kRLG.\u0003\u0002xi\n1!+\u00198e_6\fABT;mYN+g\u000e^5oK2\u0004\"A_\u001b\u000e\u0003E\u0012ABT;mYN+g\u000e^5oK2\u001c\"!N.\u0015\u0003e\f\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0003\u0003\u0003\u00012\u0001XA\u0002\u0013\r\t)a\u0016\u0002\u0004\u0013:$\u0018\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0005\u0005-\u0001cA6\u0002\u000e%\u0019\u0011q\u00027\u0003\rM#(/\u001b8h\u0003E!WMZ1vYRdu.\u00193GC\u000e$xN]\u000b\u0003\u0003\u0003\tq\u0002\\8bI\u001a\u000b7\r^8s\t\u0016tW/\\\u0001\u0011g&TXMR8s)\"\u0014Xm\u001d5pY\u0012$b!!\u0001\u0002\u001c\u0005}\u0001bBA\u000fw\u0001\u0007\u0011\u0011A\u0001\u0005g&TX\rC\u0004\u0002\"m\u0002\r!!\u0001\u0002\u0017}cw.\u00193GC\u000e$xN]\u0001\r]\u0016<H\u000b\u001b:fg\"|G\u000e\u001a\u000b\u0007\u0003\u0003\t9#!\u000b\t\u000f\u0005\u0005B\b1\u0001\u0002\u0002!9\u0011Q\u0004\u001fA\u0002\u0005\u0005!\u0001C\"p]R,g\u000e^:\u0016\t\u0005=\u0012QL\n\u0003{m\u000b!\u0002\\8bI\u001a\u000b7\r^8s\u0003-aw.\u00193GC\u000e$xN\u001d\u0011\u0002\u000bQ\f\'\r\\3\u0016\u0005\u0005e\u0002\u0003\u0002/\u0002<mK1!!\u0010X\u0005\u0015\t%O]1z\u0003\u0019!\u0018M\u00197fA\u0005IA/\u00192mKNK\'0Z\u0001\u000bi\u0006\u0014G.Z*ju\u0016\u0004\u0013!\u0003;ie\u0016\u001c\bn\u001c7e\u0003)!\bN]3tQ>dG\rI\u0001\ng\u0016,GM^1mk\u0016\f!b]3fIZ\fG.^3!\u0003\u001d\u0019\u0018N_3nCB,\"!!\u0015\u0011\u000bq\u000bY$!\u0001\u0002\u0011ML\'0Z7ba\u0002\"b\"a\u0016\u0002p\u0005E\u00141OA;\u0003o\nI\b\u0005\u0003{{\u0005e\u0003\u0003BA.\u0003;b\u0001\u0001B\u0004\u0002`u\u0012\r!!\u0019\u0003\u0003\u0005\u000bB!a\u0019\u0002jA\u0019A,!\u001a\n\u0007\u0005\u001dtKA\u0004O_RD\u0017N\\4\u0011\u0007q\u000bY\'C\u0002\u0002n]\u00131!\u00118z\u0011\u001d\t\tD\u0013a\u0001\u0003\u0003Aq!!\u000eK\u0001\u0004\tI\u0004C\u0004\u0002B)\u0003\r!!\u0001\t\u000f\u0005\u0015#\n1\u0001\u0002\u0002!9\u0011\u0011\n&A\u0002\u0005\u0005\u0001bBA\'\u0015\u0002\u0007\u0011\u0011\u000b\u0002\n\u0011\u0006\u001c\b.\u0016;jYN,B!a \u0002&N\u00111jW\u0001\u0007I%t\u0017\u000e\u001e\u0013\u0015\u0005\u0005\u0015\u0005c\u0001/\u0002\b&\u0019\u0011\u0011R,\u0003\tUs\u0017\u000e^\u0001\u0015g&TX-T1q\u0005V\u001c7.\u001a;CSR\u001c\u0016N_3\u0002#ML\'0Z\'ba\n+8m[3u\'&TX-A\u0004j[B\u0014xN^3\u0015\r\u0005\u0005\u00111SAL\u0011\u001d\t)j\u0014a\u0001\u0003\u0003\tQ\u0001[2pI\u0016Dq!!\'P\u0001\u0004\t\t!\u0001\u0003tK\u0016$\u0017aC3mK6$v.\u00128uef$2aWAP\u0011\u001d\t\t\u000b\u0015a\u0001\u0003G\u000bA!\u001a7f[B!\u00111LAS\t\u001d\tyf\u0013b\u0001\u0003C\n1\"\u001a8uef$v.\u00127f[R!\u00111UAV\u0011\u0019\ti+\u0015a\u00017\u0006)QM\u001c;ssB!\u00111LAY\t\u001d\ty\u0006\u0001b\u0001\u0003C\n!\u0002^1cY\u0016$UMY;h+\t\t9\fE\u0002]\u0003sK1!a/X\u0005\u001d\u0011un\u001c7fC:\fqb\u00187pC\u00124\u0015m\u0019;pe~#S-\u001d\u000b\u0005\u0003\u000b\u000b\t\rC\u0005\u0002D\u0012\t\t\u00111\u0001\u0002\u0002\u0005\u0019\u0001\u0010J\u0019\u0002\u0013Q\f\'\r\\3`I\u0015\fH\u0003BAC\u0003\u0013D\u0011\"a1\u0007\u0003\u0003\u0005\r!!\u000f\u0002\u001bQ\f\'\r\\3TSj,w\fJ3r)\u0011\t))a4\t\u0013\u0005\r\u0007\"!AA\u0002\u0005\u0005\u0011!\u0004;ie\u0016\u001c\bn\u001c7e?\u0012*\u0017\u000f\u0006\u0003\u0002\u0006\u0006U\u0007\"CAb\u0015\u0005\u0005\t\u0019AA\u0001\u0003-\u0019\u0018N_3nCB|F%Z9\u0015\t\u0005\u0015\u00151\u001c\u0005\n\u0003\u0007d\u0011\u0011!a\u0001\u0003#\nQb]3fIZ\fG.^3`I\u0015\fH\u0003BAC\u0003CD\u0011\"a1\u000f\u0003\u0003\u0005\r!!\u0001\u0002\u0011\r\f\u0007/Y2jif$B!!\u0001\u0002h\"9\u0011\u0011^\bA\u0002\u0005\u0005\u0011\u0001D3ya\u0016\u001cG/\u001a3TSj,\u0017aC5oSRL\u0017\r\\*ju\u0016\fq\"\u001b8ji&\fGnQ1qC\u000eLG/_\u0001\u000be\u0006tGm\\7TK\u0016$\u0017!\u0004;bE2,7+\u001b>f\'\u0016,G-\u0001\u0003j]&$HCBAC\u0003o\u00149\u0001C\u0004\u0002zV\u0001\r!a?\u0002\u0005%t\u0007\u0003BA\u007f\u0005\u0007i!!a@\u000b\u0007\t\u0005a.\u0001\u0002j_&!!QAA\u0000\u0005Ey%M[3di&s\u0007/\u001e;TiJ,\u0017-\u001c\u0005\b\u0005\u0013)\u0002\u0019\u0001B\u0006\u0003\u00051\u0007c\u0002/\u0003\u000e\u0005=\u0016QQ\u0005\u0004\u0005\u001f9&!\u0003$v]\u000e$\u0018n\u001c82\u0003-\u0019XM]5bY&TX\rV8\u0015\t\u0005\u0015%Q\u0003\u0005\b\u0005/1\u0002\u0019\u0001B\r\u0003\ryW\u000f\u001e\t\u0005\u0003{\u0014Y\"\u0003\u0003\u0003\u001e\u0005}(AE(cU\u0016\u001cGoT;uaV$8\u000b\u001e:fC6\f\u0011BZ5oI\u0016sGO]=\u0015\t\t\r\"\u0011\u0006\t\u00069\n\u0015\u0012qV\u0005\u0004\u0005O9&AB(qi&|g\u000eC\u0004\u0002\"^\u0001\r!a,\u0002\u0019\r|g\u000e^1j]N,E.Z7\u0015\t\u0005]&q\u0006\u0005\b\u0003CC\u0002\u0019AAX\u000311\u0017N\u001c3FY\u0016l\u0017*\u001c9m)\rY&Q\u0007\u0005\b\u0003CK\u0002\u0019AAX\u0003\u001d\tG\rZ#mK6$B!a.\u0003<!9\u0011\u0011\u0015\u000eA\u0002\u0005=\u0016\u0001C1eI\u0016sGO]=\u0015\t\u0005]&\u0011\t\u0005\u0007\u0005\u0007Z\u0002\u0019A.\u0002\u00119,w/\u00128uef\f!B]3n_Z,W\t\\3n)\u0011\t9L!\u0013\t\u000f\u0005\u0005F\u00041\u0001\u00020\u0006A\u0011\u000e^3sCR|\'/\u0006\u0002\u0003PA1!\u0011\u000bB*\u0003_k\u0011!V\u0005\u0004\u0005+*&\u0001C%uKJ\fGo\u001c:\u0002\u0013\u001d\u0014xn\u001e+bE2,\u0017aD2iK\u000e\\7i\u001c8tSN$XM\u001c;\u0002\u00199t7+\u001b>f\u001b\u0006\u0004\u0018\t\u001a3\u0015\t\u0005\u0015%q\f\u0005\b\u0005C\u0002\u0003\u0019AA\u0001\u0003\u0005A\u0017a\u00048o\'&TX-T1q%\u0016lwN^3\u0015\t\u0005\u0015%q\r\u0005\b\u0005C\n\u0003\u0019AA\u0001\u00039qgnU5{K6\u000b\u0007OU3tKR$B!!\"\u0003n!9!q\u000e\u0012A\u0002\u0005\u0005\u0011a\u0003;bE2,G*\u001a8hi\"\f1\u0003^8uC2\u001c\u0016N_3NCB\u0014UoY6fiN\fqbY1mGNK\'0Z\'baNK\'0\u001a\u000b\u0005\u0003\u0003\u00119\bC\u0004\u0003p\u0011\u0002\r!!\u0001\u0002\u0017ML\'0Z\'ba&s\u0017\u000e\u001e\u000b\u0005\u0003\u000b\u0013i\bC\u0004\u0003p\u0015\u0002\r!!\u0001\u0002+ML\'0Z\'ba&s\u0017\u000e^!oIJ+\'-^5mI\u0006a\u0001O]5oiNK\'0Z\'ba\u0006i\u0001O]5oi\u000e{g\u000e^3oiN\fab]5{K6\u000b\u0007\u000fR5tC\ndW-\u0001\tjgNK\'0Z\'ba\u0012+g-\u001b8fI\u0006\t\u0012\r\\<bsNLe.\u001b;TSj,W*\u00199\u0002\u000b%tG-\u001a=\u0015\t\u0005\u0005!q\u0012\u0005\b\u0003+c\u0003\u0019AA\u0001\u0003)\u0019G.Z1s)\u0006\u0014G.Z\u0001\u0012Q\u0006\u001c\b\u000eV1cY\u0016\u001cuN\u001c;f]R\u001cXC\u0001BL!\u0011\u0001W(a,\u0002!%t\u0017\u000e^,ji\"\u001cuN\u001c;f]R\u001cH\u0003BAC\u0005;CqAa(0\u0001\u0004\u00119*A\u0001d\u0001"
    )
BootstrapMethods:
  0: #240 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #227 (Ljava/lang/Object;)Ljava/lang/Object;
      #232 REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$serializeTo$1$adapted:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
      #227 (Ljava/lang/Object;)Ljava/lang/Object;
      #233 1
  1: #240 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #368 (I)V
      #373 REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$1:(Lscala/collection/mutable/FlatHashTable;I)V
      #368 (I)V
      #233 1
  2: #240 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #539 ()Ljava/lang/Object;
      #542 REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$2:(Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
      #543 ()Ljava/lang/String;
      #544 5
      #233 1
      #543 ()Ljava/lang/String;
  3: #564 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #373 REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$1:(Lscala/collection/mutable/FlatHashTable;I)V
      #542 REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$checkConsistent$2:(Lscala/collection/mutable/FlatHashTable;I)Ljava/lang/String;
      #232 REF_invokeStatic scala/collection/mutable/FlatHashTable.$anonfun$serializeTo$1$adapted:(Ljava/io/ObjectOutputStream;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x199 (unknown attribute)
   01 00 00 51 01 71 01 72 01 02 01 02 02 01 01 F9
   01 FA 01 00 E4 00 E5 01 02 27 01 4F 01 00 24 00
   33 00 00 42 00 43 00 00 C1 00 C2 00 01 29 01 12
   01 01 2A 00 C2 00 01 2D 01 12 01 01 D0 00 3F 00
   01 CF 01 CE 01 01 89 00 58 01 01 9A 00 54 01 00
   57 00 58 00 00 53 00 54 01 01 3E 01 35 01 01 DB
   01 35 00 01 DA 01 4F 01 01 13 00 C2 00 01 11 01
   12 01 01 01 00 B9 01 00 FC 00 FD 00 00 FA 00 FB
   01 01 34 01 35 01 01 E0 01 E1 00 01 DE 01 DF 01
   00 C9 00 58 00 01 D3 00 54 01 00 8C 00 8D 00 00
   88 00 89 01 01 EB 01 EC 00 01 E8 01 E9 01 00 6D
   00 33 01 00 65 00 33 00 00 63 00 64 01 00 D9 00
   3F 00 01 CD 01 CE 01 00 DF 00 E0 00 01 4C 01 4D
   01 01 2F 00 43 01 01 7F 01 72 01 01 45 00 43 01
   01 86 01 72 01 01 52 00 43 01 01 87 01 72 01 01
   41 01 42 01 01 BF 01 35 00 01 BE 01 4F 01 01 AA
   01 35 00 01 A9 01 4F 01 00 6F 00 33 00 00 6E 00
   64 01 01 39 00 C2 00 01 38 01 12 01 00 51 00 33
   00 00 52 00 43 00 00 CD 00 CE 00 00 CA 00 CB 01
   00 25 00 33 00 00 68 00 64 01 01 CA 01 35 00 01
   C9 01 4F 01 00 B0 00 43 01 01 9B 01 72 01 01 9D
   01 35 01 01 9C 01 4F 01 00 4D 00 4E 00 00 4F 00
   50 00 00 45 00 46 00 00 3E 00 3F 01 00 49 00 33
   00 00 7E 00 33 00 00 7D 00 64 01 00 4A 00 43 00
   00 47 00 48 00 00 4B 00 33 00 00 4C 00 43 00 01
   94 00 33 01 01 93 00 64 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
