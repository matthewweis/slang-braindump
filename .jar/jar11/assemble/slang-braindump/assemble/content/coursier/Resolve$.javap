Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/Resolve$.class
  Last modified May 29, 2022; size 23605 bytes
  SHA-256 checksum 638c24bc366c5c8cd900ce8aed9b22989625e5ada1ec2965e627e7305f05c07d
  Compiled from "Resolve.scala"
public final class coursier.Resolve$ extends coursier.PlatformResolve implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/Resolve$
  super_class: #4                         // coursier/PlatformResolve
  interfaces: 1, fields: 1, methods: 31, attributes: 5
Constant pool:
    #1 = Utf8               coursier/Resolve$
    #2 = Class              #1            // coursier/Resolve$
    #3 = Utf8               coursier/PlatformResolve
    #4 = Class              #3            // coursier/PlatformResolve
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Resolve.scala
    #8 = Utf8               coursier/cache/CacheLogger$Using
    #9 = Class              #8            // coursier/cache/CacheLogger$Using
   #10 = Utf8               coursier/cache/CacheLogger
   #11 = Class              #10           // coursier/cache/CacheLogger
   #12 = Utf8               Using
   #13 = Utf8               coursier/core/Activation$Os
   #14 = Class              #13           // coursier/core/Activation$Os
   #15 = Utf8               coursier/core/Activation
   #16 = Class              #15           // coursier/core/Activation
   #17 = Utf8               Os
   #18 = Utf8               coursier/core/Activation$Os$
   #19 = Class              #18           // coursier/core/Activation$Os$
   #20 = Utf8
   #21 = Utf8               coursier/core/Reconciliation$Default$
   #22 = Class              #21           // coursier/core/Reconciliation$Default$
   #23 = Utf8               coursier/core/Reconciliation
   #24 = Class              #23           // coursier/core/Reconciliation
   #25 = Utf8               coursier/error/ResolutionError$CantDownloadModule
   #26 = Class              #25           // coursier/error/ResolutionError$CantDownloadModule
   #27 = Utf8               coursier/error/ResolutionError
   #28 = Class              #27           // coursier/error/ResolutionError
   #29 = Utf8               CantDownloadModule
   #30 = Utf8               coursier/error/ResolutionError$ConflictingDependencies
   #31 = Class              #30           // coursier/error/ResolutionError$ConflictingDependencies
   #32 = Utf8               ConflictingDependencies
   #33 = Utf8               coursier/error/ResolutionError$MaximumIterationReached
   #34 = Class              #33           // coursier/error/ResolutionError$MaximumIterationReached
   #35 = Utf8               MaximumIterationReached
   #36 = Utf8               coursier/package$Module$
   #37 = Class              #36           // coursier/package$Module$
   #38 = Utf8               coursier/package
   #39 = Class              #38           // coursier/package
   #40 = Utf8               coursier/package$Resolution$
   #41 = Class              #40           // coursier/package$Resolution$
   #42 = Utf8               coursier/package$ResolutionExtensions$
   #43 = Class              #42           // coursier/package$ResolutionExtensions$
   #44 = Utf8               coursier/util/ValidationNel$FailureBuilder
   #45 = Class              #44           // coursier/util/ValidationNel$FailureBuilder
   #46 = Utf8               coursier/util/ValidationNel
   #47 = Class              #46           // coursier/util/ValidationNel
   #48 = Utf8               FailureBuilder
   #49 = Utf8               coursier/util/ValidationNel$FailuresBuilder
   #50 = Class              #49           // coursier/util/ValidationNel$FailuresBuilder
   #51 = Utf8               FailuresBuilder
   #52 = Utf8               coursier/util/ValidationNel$SuccessBuilder
   #53 = Class              #52           // coursier/util/ValidationNel$SuccessBuilder
   #54 = Utf8               SuccessBuilder
   #55 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #56 = Class              #55           // java/lang/invoke/MethodHandles$Lookup
   #57 = Utf8               java/lang/invoke/MethodHandles
   #58 = Class              #57           // java/lang/invoke/MethodHandles
   #59 = Utf8               Lookup
   #60 = Utf8               scala/Predef$ArrowAssoc$
   #61 = Class              #60           // scala/Predef$ArrowAssoc$
   #62 = Utf8               scala/Predef
   #63 = Class              #62           // scala/Predef
   #64 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #65 = Class              #64           // scala/collection/SeqFactory$UnapplySeqWrapper
   #66 = Utf8               scala/collection/SeqFactory
   #67 = Class              #66           // scala/collection/SeqFactory
   #68 = Utf8               UnapplySeqWrapper
   #69 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #70 = Class              #69           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #71 = Utf8               MODULE$
   #72 = Utf8               Lcoursier/Resolve$;
   #73 = Utf8               <clinit>
   #74 = Utf8               ()V
   #75 = Utf8               <init>
   #76 = NameAndType        #75:#74       // "<init>":()V
   #77 = Methodref          #2.#76        // coursier/Resolve$."<init>":()V
   #78 = NameAndType        #71:#72       // MODULE$:Lcoursier/Resolve$;
   #79 = Fieldref           #2.#78        // coursier/Resolve$.MODULE$:Lcoursier/Resolve$;
   #80 = Utf8               apply
   #81 = Utf8               ()Lcoursier/Resolve;
   #82 = Utf8               ()Lcoursier/Resolve<Lcoursier/util/Task;>;
   #83 = Utf8               coursier/cache/Cache$
   #84 = Class              #83           // coursier/cache/Cache$
   #85 = Utf8               Lcoursier/cache/Cache$;
   #86 = NameAndType        #71:#85       // MODULE$:Lcoursier/cache/Cache$;
   #87 = Fieldref           #84.#86       // coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
   #88 = Utf8               default
   #89 = Utf8               ()Lcoursier/cache/Cache;
   #90 = NameAndType        #88:#89       // default:()Lcoursier/cache/Cache;
   #91 = Methodref          #84.#90       // coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
   #92 = Utf8               coursier/util/Task$
   #93 = Class              #92           // coursier/util/Task$
   #94 = Utf8               Lcoursier/util/Task$;
   #95 = NameAndType        #71:#94       // MODULE$:Lcoursier/util/Task$;
   #96 = Fieldref           #93.#95       // coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
   #97 = Utf8               sync
   #98 = Utf8               ()Lcoursier/util/Sync;
   #99 = NameAndType        #97:#98       // sync:()Lcoursier/util/Sync;
  #100 = Methodref          #93.#99       // coursier/util/Task$.sync:()Lcoursier/util/Sync;
  #101 = Utf8               (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
  #102 = NameAndType        #80:#101      // apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
  #103 = Methodref          #2.#102       // coursier/Resolve$.apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
  #104 = Utf8               this
  #105 = Utf8               ResolveTaskOps
  #106 = Utf8               (Lcoursier/Resolve;)Lcoursier/Resolve;
  #107 = Utf8               (Lcoursier/Resolve<Lcoursier/util/Task;>;)Lcoursier/Resolve<Lcoursier/util/Task;>;
  #108 = Utf8               resolve
  #109 = Utf8               Lcoursier/Resolve;
  #110 = Utf8               initialResolution
  #111 = Utf8               (Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;)Lcoursier/core/Resolution;
  #112 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lcoursier/core/Resolution;>;)Lcoursier/core/Resolution;
  #113 = Utf8               dependencies
  #114 = Utf8               params
  #115 = Utf8               initialResolutionOpt
  #116 = Utf8               coursier/params/ResolutionParams
  #117 = Class              #116          // coursier/params/ResolutionParams
  #118 = Utf8               doForceScalaVersion
  #119 = Utf8               ()Z
  #120 = NameAndType        #118:#119     // doForceScalaVersion:()Z
  #121 = Methodref          #117.#120     // coursier/params/ResolutionParams.doForceScalaVersion:()Z
  #122 = Utf8               typelevel
  #123 = NameAndType        #122:#119     // typelevel:()Z
  #124 = Methodref          #117.#123     // coursier/params/ResolutionParams.typelevel:()Z
  #125 = Utf8               coursier/package$
  #126 = Class              #125          // coursier/package$
  #127 = Utf8               Lcoursier/package$;
  #128 = NameAndType        #71:#127      // MODULE$:Lcoursier/package$;
  #129 = Fieldref           #126.#128     // coursier/package$.MODULE$:Lcoursier/package$;
  #130 = Utf8               Organization
  #131 = Utf8               ()Lcoursier/core/Organization$;
  #132 = NameAndType        #130:#131     // Organization:()Lcoursier/core/Organization$;
  #133 = Methodref          #126.#132     // coursier/package$.Organization:()Lcoursier/core/Organization$;
  #134 = Utf8               org.typelevel
  #135 = String             #134          // org.typelevel
  #136 = Utf8               coursier/core/Organization$
  #137 = Class              #136          // coursier/core/Organization$
  #138 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #139 = NameAndType        #80:#138      // apply:(Ljava/lang/String;)Ljava/lang/String;
  #140 = Methodref          #137.#139     // coursier/core/Organization$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #141 = Utf8               org.scala-lang
  #142 = String             #141          // org.scala-lang
  #143 = Utf8               java/lang/String
  #144 = Class              #143          // java/lang/String
  #145 = Utf8               selectedScalaVersion
  #146 = Utf8               ()Ljava/lang/String;
  #147 = NameAndType        #145:#146     // selectedScalaVersion:()Ljava/lang/String;
  #148 = Methodref          #117.#147     // coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
  #149 = Utf8               3
  #150 = String             #149          // 3
  #151 = Utf8               startsWith
  #152 = Utf8               (Ljava/lang/String;)Z
  #153 = NameAndType        #151:#152     // startsWith:(Ljava/lang/String;)Z
  #154 = Methodref          #144.#153     // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #155 = Utf8               scala/collection/immutable/$colon$colon
  #156 = Class              #155          // scala/collection/immutable/$colon$colon
  #157 = Utf8               Lscala/Predef$ArrowAssoc$;
  #158 = NameAndType        #71:#157      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #159 = Fieldref           #61.#158      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #160 = Utf8               scala/Predef$
  #161 = Class              #160          // scala/Predef$
  #162 = Utf8               Lscala/Predef$;
  #163 = NameAndType        #71:#162      // MODULE$:Lscala/Predef$;
  #164 = Fieldref           #161.#163     // scala/Predef$.MODULE$:Lscala/Predef$;
  #165 = Utf8               Lcoursier/package$Module$;
  #166 = NameAndType        #71:#165      // MODULE$:Lcoursier/package$Module$;
  #167 = Fieldref           #37.#166      // coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
  #168 = Utf8               ModuleName
  #169 = Utf8               ()Lcoursier/core/ModuleName$;
  #170 = NameAndType        #168:#169     // ModuleName:()Lcoursier/core/ModuleName$;
  #171 = Methodref          #126.#170     // coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
  #172 = Utf8               scala3-library
  #173 = String             #172          // scala3-library
  #174 = Utf8               coursier/core/ModuleName$
  #175 = Class              #174          // coursier/core/ModuleName$
  #176 = Methodref          #175.#139     // coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
  #177 = Utf8               apply$default$3
  #178 = Utf8               ()Lscala/collection/immutable/Map;
  #179 = NameAndType        #177:#178     // apply$default$3:()Lscala/collection/immutable/Map;
  #180 = Methodref          #37.#179      // coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
  #181 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
  #182 = NameAndType        #80:#181      // apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
  #183 = Methodref          #37.#182      // coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
  #184 = Utf8               ArrowAssoc
  #185 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #186 = NameAndType        #184:#185     // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #187 = Methodref          #161.#186     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #188 = Utf8               $minus$greater$extension
  #189 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #190 = NameAndType        #188:#189     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #191 = Methodref          #61.#190      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #192 = Utf8               scala3-compiler
  #193 = String             #192          // scala3-compiler
  #194 = Utf8               scala/collection/immutable/Nil$
  #195 = Class              #194          // scala/collection/immutable/Nil$
  #196 = Utf8               Lscala/collection/immutable/Nil$;
  #197 = NameAndType        #71:#196      // MODULE$:Lscala/collection/immutable/Nil$;
  #198 = Fieldref           #195.#197     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #199 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #200 = NameAndType        #75:#199      // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #201 = Methodref          #156.#200     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #202 = Utf8               scala/collection/immutable/Seq
  #203 = Class              #202          // scala/collection/immutable/Seq
  #204 = Utf8               scala-library
  #205 = String             #204          // scala-library
  #206 = Utf8               scala-compiler
  #207 = String             #206          // scala-compiler
  #208 = Utf8               scala-reflect
  #209 = String             #208          // scala-reflect
  #210 = Utf8               scalap
  #211 = String             #210          // scalap
  #212 = Utf8               coursier/internal/Typelevel$
  #213 = Class              #212          // coursier/internal/Typelevel$
  #214 = Utf8               Lcoursier/internal/Typelevel$;
  #215 = NameAndType        #71:#214      // MODULE$:Lcoursier/internal/Typelevel$;
  #216 = Fieldref           #213.#215     // coursier/internal/Typelevel$.MODULE$:Lcoursier/internal/Typelevel$;
  #217 = Utf8               swap
  #218 = Utf8               ()Lscala/Function1;
  #219 = NameAndType        #217:#218     // swap:()Lscala/Function1;
  #220 = Methodref          #213.#219     // coursier/internal/Typelevel$.swap:()Lscala/Function1;
  #221 = Utf8               scala/collection/immutable/List
  #222 = Class              #221          // scala/collection/immutable/List
  #223 = Utf8               coursier/core/Resolution$
  #224 = Class              #223          // coursier/core/Resolution$
  #225 = Utf8               Lcoursier/core/Resolution$;
  #226 = NameAndType        #71:#225      // MODULE$:Lcoursier/core/Resolution$;
  #227 = Fieldref           #224.#226     // coursier/core/Resolution$.MODULE$:Lcoursier/core/Resolution$;
  #228 = Utf8               forceScalaVersion
  #229 = Utf8               (Ljava/lang/String;)Lscala/Function1;
  #230 = NameAndType        #228:#229     // forceScalaVersion:(Ljava/lang/String;)Lscala/Function1;
  #231 = Methodref          #224.#230     // coursier/core/Resolution$.forceScalaVersion:(Ljava/lang/String;)Lscala/Function1;
  #232 = Utf8               scala/Option
  #233 = Class              #232          // scala/Option
  #234 = Utf8               scala/collection/SeqOps
  #235 = Class              #234          // scala/collection/SeqOps
  #236 = Utf8               $plus$plus
  #237 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #238 = NameAndType        #236:#237     // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #239 = InterfaceMethodref #235.#238     // scala/collection/SeqOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #240 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #241 = MethodType         #240          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #242 = Utf8               $anonfun$initialResolution$1
  #243 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #244 = NameAndType        #242:#243     // $anonfun$initialResolution$1:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #245 = Methodref          #2.#244       // coursier/Resolve$.$anonfun$initialResolution$1:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #246 = MethodHandle       6:#245        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$1:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #247 = MethodType         #243          //  (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #248 = Integer            5
  #249 = Integer            1
  #250 = Utf8               java/lang/invoke/LambdaMetafactory
  #251 = Class              #250          // java/lang/invoke/LambdaMetafactory
  #252 = Utf8               altMetafactory
  #253 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #254 = NameAndType        #252:#253     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #255 = Methodref          #251.#254     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #256 = MethodHandle       6:#255        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #257 = Utf8               ()Lscala/Function2;
  #258 = NameAndType        #80:#257      // apply:()Lscala/Function2;
  #259 = InvokeDynamic      #0:#258       // #0:apply:()Lscala/Function2;
  #260 = Utf8               reduceOption
  #261 = Utf8               (Lscala/Function2;)Lscala/Option;
  #262 = NameAndType        #260:#261     // reduceOption:(Lscala/Function2;)Lscala/Option;
  #263 = InterfaceMethodref #203.#262     // scala/collection/immutable/Seq.reduceOption:(Lscala/Function2;)Lscala/Option;
  #264 = Utf8               actualReconciliation
  #265 = Utf8               ()Lscala/collection/immutable/Seq;
  #266 = NameAndType        #264:#265     // actualReconciliation:()Lscala/collection/immutable/Seq;
  #267 = Methodref          #117.#266     // coursier/params/ResolutionParams.actualReconciliation:()Lscala/collection/immutable/Seq;
  #268 = Utf8               isEmpty
  #269 = NameAndType        #268:#119     // isEmpty:()Z
  #270 = InterfaceMethodref #203.#269     // scala/collection/immutable/Seq.isEmpty:()Z
  #271 = Utf8               scala/None$
  #272 = Class              #271          // scala/None$
  #273 = Utf8               Lscala/None$;
  #274 = NameAndType        #71:#273      // MODULE$:Lscala/None$;
  #275 = Fieldref           #272.#274     // scala/None$.MODULE$:Lscala/None$;
  #276 = Utf8               scala/Some
  #277 = Class              #276          // scala/Some
  #278 = Utf8               java/util/concurrent/ConcurrentHashMap
  #279 = Class              #278          // java/util/concurrent/ConcurrentHashMap
  #280 = Methodref          #279.#76      // java/util/concurrent/ConcurrentHashMap."<init>":()V
  #281 = MethodType         #185          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #282 = Utf8               $anonfun$initialResolution$3
  #283 = Utf8               (Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  #284 = NameAndType        #282:#283     // $anonfun$initialResolution$3:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  #285 = Methodref          #2.#284       // coursier/Resolve$.$anonfun$initialResolution$3:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  #286 = MethodHandle       6:#285        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$3:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  #287 = Utf8               (Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  #288 = MethodType         #287          //  (Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  #289 = Utf8               (Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #290 = NameAndType        #80:#289      // apply:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #291 = InvokeDynamic      #1:#290       // #1:apply:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #292 = Utf8               (Ljava/lang/Object;)V
  #293 = NameAndType        #75:#292      // "<init>":(Ljava/lang/Object;)V
  #294 = Methodref          #277.#293     // scala/Some."<init>":(Ljava/lang/Object;)V
  #295 = Utf8               ()Ljava/lang/Object;
  #296 = MethodType         #295          //  ()Ljava/lang/Object;
  #297 = Utf8               $anonfun$initialResolution$5
  #298 = Utf8               ()Lcoursier/core/Resolution;
  #299 = NameAndType        #297:#298     // $anonfun$initialResolution$5:()Lcoursier/core/Resolution;
  #300 = Methodref          #2.#299       // coursier/Resolve$.$anonfun$initialResolution$5:()Lcoursier/core/Resolution;
  #301 = MethodHandle       6:#300        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$5:()Lcoursier/core/Resolution;
  #302 = MethodType         #298          //  ()Lcoursier/core/Resolution;
  #303 = Utf8               ()Lscala/Function0;
  #304 = NameAndType        #80:#303      // apply:()Lscala/Function0;
  #305 = InvokeDynamic      #2:#304       // #2:apply:()Lscala/Function0;
  #306 = Utf8               getOrElse
  #307 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #308 = NameAndType        #306:#307     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #309 = Methodref          #233.#308     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #310 = Utf8               coursier/core/Resolution
  #311 = Class              #310          // coursier/core/Resolution
  #312 = Utf8               withRootDependencies
  #313 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
  #314 = NameAndType        #312:#313     // withRootDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
  #315 = Methodref          #311.#314     // coursier/core/Resolution.withRootDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
  #316 = Utf8               coursier/core/DependencySet$
  #317 = Class              #316          // coursier/core/DependencySet$
  #318 = Utf8               Lcoursier/core/DependencySet$;
  #319 = NameAndType        #71:#318      // MODULE$:Lcoursier/core/DependencySet$;
  #320 = Fieldref           #317.#319     // coursier/core/DependencySet$.MODULE$:Lcoursier/core/DependencySet$;
  #321 = Utf8               empty
  #322 = Utf8               ()Lcoursier/core/DependencySet;
  #323 = NameAndType        #321:#322     // empty:()Lcoursier/core/DependencySet;
  #324 = Methodref          #317.#323     // coursier/core/DependencySet$.empty:()Lcoursier/core/DependencySet;
  #325 = Utf8               withDependencySet
  #326 = Utf8               (Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
  #327 = NameAndType        #325:#326     // withDependencySet:(Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
  #328 = Methodref          #311.#327     // coursier/core/Resolution.withDependencySet:(Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
  #329 = Utf8               forceVersion
  #330 = NameAndType        #329:#178     // forceVersion:()Lscala/collection/immutable/Map;
  #331 = Methodref          #117.#330     // coursier/params/ResolutionParams.forceVersion:()Lscala/collection/immutable/Map;
  #332 = Utf8               scala/collection/immutable/Map
  #333 = Class              #332          // scala/collection/immutable/Map
  #334 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #335 = NameAndType        #236:#334     // $plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #336 = InterfaceMethodref #333.#335     // scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
  #337 = Utf8               withForceVersions
  #338 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #339 = NameAndType        #337:#338     // withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #340 = Methodref          #311.#339     // coursier/core/Resolution.withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #341 = Utf8               Set
  #342 = Utf8               ()Lscala/collection/immutable/Set$;
  #343 = NameAndType        #341:#342     // Set:()Lscala/collection/immutable/Set$;
  #344 = Methodref          #161.#343     // scala/Predef$.Set:()Lscala/collection/immutable/Set$;
  #345 = Utf8               scala/collection/immutable/Set$
  #346 = Class              #345          // scala/collection/immutable/Set$
  #347 = Utf8               ()Lscala/collection/immutable/Set;
  #348 = NameAndType        #321:#347     // empty:()Lscala/collection/immutable/Set;
  #349 = Methodref          #346.#348     // scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
  #350 = Utf8               withConflicts
  #351 = Utf8               (Lscala/collection/immutable/Set;)Lcoursier/core/Resolution;
  #352 = NameAndType        #350:#351     // withConflicts:(Lscala/collection/immutable/Set;)Lcoursier/core/Resolution;
  #353 = Methodref          #311.#352     // coursier/core/Resolution.withConflicts:(Lscala/collection/immutable/Set;)Lcoursier/core/Resolution;
  #354 = Utf8               $anonfun$initialResolution$6$adapted
  #355 = Utf8               (Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #356 = NameAndType        #354:#355     // $anonfun$initialResolution$6$adapted:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #357 = Methodref          #2.#356       // coursier/Resolve$.$anonfun$initialResolution$6$adapted:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #358 = MethodHandle       6:#357        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$6$adapted:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
  #359 = Utf8               (Lcoursier/core/Dependency;)Ljava/lang/Object;
  #360 = MethodType         #359          //  (Lcoursier/core/Dependency;)Ljava/lang/Object;
  #361 = Utf8               (Lcoursier/params/ResolutionParams;)Lscala/Function1;
  #362 = NameAndType        #80:#361      // apply:(Lcoursier/params/ResolutionParams;)Lscala/Function1;
  #363 = InvokeDynamic      #3:#362       // #3:apply:(Lcoursier/params/ResolutionParams;)Lscala/Function1;
  #364 = Utf8               withFilter
  #365 = Utf8               (Lscala/Option;)Lcoursier/core/Resolution;
  #366 = NameAndType        #364:#365     // withFilter:(Lscala/Option;)Lcoursier/core/Resolution;
  #367 = Methodref          #311.#366     // coursier/core/Resolution.withFilter:(Lscala/Option;)Lcoursier/core/Resolution;
  #368 = Utf8               withReconciliation
  #369 = NameAndType        #368:#365     // withReconciliation:(Lscala/Option;)Lcoursier/core/Resolution;
  #370 = Methodref          #311.#369     // coursier/core/Resolution.withReconciliation:(Lscala/Option;)Lcoursier/core/Resolution;
  #371 = Utf8               osInfoOpt
  #372 = Utf8               ()Lscala/Option;
  #373 = NameAndType        #371:#372     // osInfoOpt:()Lscala/Option;
  #374 = Methodref          #117.#373     // coursier/params/ResolutionParams.osInfoOpt:()Lscala/Option;
  #375 = Utf8               $anonfun$initialResolution$7
  #376 = Utf8               (Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
  #377 = NameAndType        #375:#376     // $anonfun$initialResolution$7:(Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
  #378 = Methodref          #2.#377       // coursier/Resolve$.$anonfun$initialResolution$7:(Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
  #379 = MethodHandle       6:#378        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$7:(Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
  #380 = Utf8               ()Lcoursier/core/Activation$Os;
  #381 = MethodType         #380          //  ()Lcoursier/core/Activation$Os;
  #382 = Utf8               (Lcoursier/params/ResolutionParams;)Lscala/Function0;
  #383 = NameAndType        #80:#382      // apply:(Lcoursier/params/ResolutionParams;)Lscala/Function0;
  #384 = InvokeDynamic      #4:#383       // #4:apply:(Lcoursier/params/ResolutionParams;)Lscala/Function0;
  #385 = Utf8               withOsInfo
  #386 = Utf8               (Lcoursier/core/Activation$Os;)Lcoursier/core/Resolution;
  #387 = NameAndType        #385:#386     // withOsInfo:(Lcoursier/core/Activation$Os;)Lcoursier/core/Resolution;
  #388 = Methodref          #311.#387     // coursier/core/Resolution.withOsInfo:(Lcoursier/core/Activation$Os;)Lcoursier/core/Resolution;
  #389 = Utf8               jdkVersionOpt
  #390 = NameAndType        #389:#372     // jdkVersionOpt:()Lscala/Option;
  #391 = Methodref          #117.#390     // coursier/params/ResolutionParams.jdkVersionOpt:()Lscala/Option;
  #392 = Utf8               $anonfun$initialResolution$8
  #393 = Utf8               (Lcoursier/params/ResolutionParams;)Lscala/Option;
  #394 = NameAndType        #392:#393     // $anonfun$initialResolution$8:(Lcoursier/params/ResolutionParams;)Lscala/Option;
  #395 = Methodref          #2.#394       // coursier/Resolve$.$anonfun$initialResolution$8:(Lcoursier/params/ResolutionParams;)Lscala/Option;
  #396 = MethodHandle       6:#395        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$8:(Lcoursier/params/ResolutionParams;)Lscala/Option;
  #397 = MethodType         #372          //  ()Lscala/Option;
  #398 = InvokeDynamic      #5:#383       // #5:apply:(Lcoursier/params/ResolutionParams;)Lscala/Function0;
  #399 = Utf8               orElse
  #400 = Utf8               (Lscala/Function0;)Lscala/Option;
  #401 = NameAndType        #399:#400     // orElse:(Lscala/Function0;)Lscala/Option;
  #402 = Methodref          #233.#401     // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
  #403 = Utf8               withJdkVersion
  #404 = NameAndType        #403:#365     // withJdkVersion:(Lscala/Option;)Lcoursier/core/Resolution;
  #405 = Methodref          #311.#404     // coursier/core/Resolution.withJdkVersion:(Lscala/Option;)Lcoursier/core/Resolution;
  #406 = Utf8               profiles
  #407 = NameAndType        #406:#347     // profiles:()Lscala/collection/immutable/Set;
  #408 = Methodref          #117.#407     // coursier/params/ResolutionParams.profiles:()Lscala/collection/immutable/Set;
  #409 = Utf8               scala/collection/immutable/Set
  #410 = Class              #409          // scala/collection/immutable/Set
  #411 = InterfaceMethodref #410.#269     // scala/collection/immutable/Set.isEmpty:()Z
  #412 = Utf8               iterator
  #413 = Utf8               ()Lscala/collection/Iterator;
  #414 = NameAndType        #412:#413     // iterator:()Lscala/collection/Iterator;
  #415 = InterfaceMethodref #410.#414     // scala/collection/immutable/Set.iterator:()Lscala/collection/Iterator;
  #416 = Utf8               $anonfun$initialResolution$10
  #417 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
  #418 = NameAndType        #416:#417     // $anonfun$initialResolution$10:(Ljava/lang/String;)Lscala/Tuple2;
  #419 = Methodref          #2.#418       // coursier/Resolve$.$anonfun$initialResolution$10:(Ljava/lang/String;)Lscala/Tuple2;
  #420 = MethodHandle       6:#419        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$10:(Ljava/lang/String;)Lscala/Tuple2;
  #421 = MethodType         #417          //  (Ljava/lang/String;)Lscala/Tuple2;
  #422 = NameAndType        #80:#218      // apply:()Lscala/Function1;
  #423 = InvokeDynamic      #6:#422       // #6:apply:()Lscala/Function1;
  #424 = Utf8               scala/collection/Iterator
  #425 = Class              #424          // scala/collection/Iterator
  #426 = Utf8               map
  #427 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #428 = NameAndType        #426:#427     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #429 = InterfaceMethodref #425.#428     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #430 = Utf8               scala/$less$colon$less$
  #431 = Class              #430          // scala/$less$colon$less$
  #432 = Utf8               Lscala/$less$colon$less$;
  #433 = NameAndType        #71:#432      // MODULE$:Lscala/$less$colon$less$;
  #434 = Fieldref           #431.#433     // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #435 = Utf8               refl
  #436 = Utf8               ()Lscala/$eq$colon$eq;
  #437 = NameAndType        #435:#436     // refl:()Lscala/$eq$colon$eq;
  #438 = Methodref          #431.#437     // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #439 = Utf8               toMap
  #440 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #441 = NameAndType        #439:#440     // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #442 = InterfaceMethodref #425.#441     // scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #443 = Utf8               withUserActivations
  #444 = NameAndType        #443:#365     // withUserActivations:(Lscala/Option;)Lcoursier/core/Resolution;
  #445 = Methodref          #311.#444     // coursier/core/Resolution.withUserActivations:(Lscala/Option;)Lcoursier/core/Resolution;
  #446 = Utf8               withMapDependencies
  #447 = NameAndType        #446:#365     // withMapDependencies:(Lscala/Option;)Lcoursier/core/Resolution;
  #448 = Methodref          #311.#447     // coursier/core/Resolution.withMapDependencies:(Lscala/Option;)Lcoursier/core/Resolution;
  #449 = Utf8               properties
  #450 = NameAndType        #449:#265     // properties:()Lscala/collection/immutable/Seq;
  #451 = Methodref          #117.#450     // coursier/params/ResolutionParams.properties:()Lscala/collection/immutable/Seq;
  #452 = Utf8               withExtraProperties
  #453 = NameAndType        #452:#313     // withExtraProperties:(Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
  #454 = Methodref          #311.#453     // coursier/core/Resolution.withExtraProperties:(Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
  #455 = Utf8               forcedProperties
  #456 = NameAndType        #455:#178     // forcedProperties:()Lscala/collection/immutable/Map;
  #457 = Methodref          #117.#456     // coursier/params/ResolutionParams.forcedProperties:()Lscala/collection/immutable/Map;
  #458 = Utf8               withForceProperties
  #459 = NameAndType        #458:#338     // withForceProperties:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #460 = Methodref          #311.#459     // coursier/core/Resolution.withForceProperties:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
  #461 = Utf8               defaultConfiguration
  #462 = NameAndType        #461:#146     // defaultConfiguration:()Ljava/lang/String;
  #463 = Methodref          #117.#462     // coursier/params/ResolutionParams.defaultConfiguration:()Ljava/lang/String;
  #464 = Utf8               withDefaultConfiguration
  #465 = Utf8               (Ljava/lang/String;)Lcoursier/core/Resolution;
  #466 = NameAndType        #464:#465     // withDefaultConfiguration:(Ljava/lang/String;)Lcoursier/core/Resolution;
  #467 = Methodref          #311.#466     // coursier/core/Resolution.withDefaultConfiguration:(Ljava/lang/String;)Lcoursier/core/Resolution;
  #468 = Utf8               scalaOrg
  #469 = Utf8               Ljava/lang/String;
  #470 = Utf8               l
  #471 = Utf8               Lscala/collection/immutable/Seq;
  #472 = Utf8               cache
  #473 = Utf8               Ljava/util/concurrent/ConcurrentHashMap;
  #474 = Utf8               forceScalaVersions
  #475 = Utf8               mapDependencies
  #476 = Utf8               Lscala/Option;
  #477 = Utf8               reconciliation
  #478 = Utf8               baseRes
  #479 = Utf8               Lcoursier/core/Resolution;
  #480 = Utf8               Lcoursier/params/ResolutionParams;
  #481 = Utf8               initialResolution$default$2
  #482 = Utf8               ()Lcoursier/params/ResolutionParams;
  #483 = Utf8               coursier/params/ResolutionParams$
  #484 = Class              #483          // coursier/params/ResolutionParams$
  #485 = Utf8               Lcoursier/params/ResolutionParams$;
  #486 = NameAndType        #71:#485      // MODULE$:Lcoursier/params/ResolutionParams$;
  #487 = Fieldref           #484.#486     // coursier/params/ResolutionParams$.MODULE$:Lcoursier/params/ResolutionParams$;
  #488 = NameAndType        #80:#482      // apply:()Lcoursier/params/ResolutionParams;
  #489 = Methodref          #484.#488     // coursier/params/ResolutionParams$.apply:()Lcoursier/params/ResolutionParams;
  #490 = Utf8               initialResolution$default$3
  #491 = Utf8               ()Lscala/Option<Lcoursier/core/Resolution;>;
  #492 = Utf8               runProcess
  #493 = Utf8               (Lcoursier/core/Resolution;Lscala/Function1;ILscala/Option;Lcoursier/util/Sync;)Ljava/lang/Object;
  #494 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Resolution;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;ILscala/Option<Lcoursier/cache/CacheLogger;>;Lcoursier/util/Sync<TF;>;)TF;
  #495 = Utf8               fetch
  #496 = Utf8               maxIterations
  #497 = Utf8               loggerOpt
  #498 = Utf8               S
  #499 = Utf8               Lcoursier/package$ResolutionExtensions$;
  #500 = NameAndType        #71:#499      // MODULE$:Lcoursier/package$ResolutionExtensions$;
  #501 = Fieldref           #43.#500      // coursier/package$ResolutionExtensions$.MODULE$:Lcoursier/package$ResolutionExtensions$;
  #502 = Utf8               ResolutionExtensions
  #503 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/core/Resolution;
  #504 = NameAndType        #502:#503     // ResolutionExtensions:(Lcoursier/core/Resolution;)Lcoursier/core/Resolution;
  #505 = Methodref          #126.#504     // coursier/package$.ResolutionExtensions:(Lcoursier/core/Resolution;)Lcoursier/core/Resolution;
  #506 = Utf8               process$extension
  #507 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
  #508 = NameAndType        #506:#507     // process$extension:(Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
  #509 = Methodref          #43.#508      // coursier/package$ResolutionExtensions$.process$extension:(Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
  #510 = Utf8               coursier/core/ResolutionProcess
  #511 = Class              #510          // coursier/core/ResolutionProcess
  #512 = Utf8               run
  #513 = Utf8               (Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
  #514 = NameAndType        #512:#513     // run:(Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
  #515 = Methodref          #511.#514     // coursier/core/ResolutionProcess.run:(Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
  #516 = Utf8               java/lang/Object
  #517 = Class              #516          // java/lang/Object
  #518 = Utf8               equals
  #519 = Utf8               (Ljava/lang/Object;)Z
  #520 = NameAndType        #518:#519     // equals:(Ljava/lang/Object;)Z
  #521 = Methodref          #517.#520     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #522 = Utf8               value
  #523 = NameAndType        #522:#295     // value:()Ljava/lang/Object;
  #524 = Methodref          #277.#523     // scala/Some.value:()Ljava/lang/Object;
  #525 = Utf8               using
  #526 = Utf8               ()Lcoursier/cache/CacheLogger$Using;
  #527 = NameAndType        #525:#526     // using:()Lcoursier/cache/CacheLogger$Using;
  #528 = InterfaceMethodref #11.#527      // coursier/cache/CacheLogger.using:()Lcoursier/cache/CacheLogger$Using;
  #529 = Utf8               (Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
  #530 = NameAndType        #80:#529      // apply:(Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
  #531 = Methodref          #9.#530       // coursier/cache/CacheLogger$Using.apply:(Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
  #532 = Utf8               scala/MatchError
  #533 = Class              #532          // scala/MatchError
  #534 = Methodref          #533.#293     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #535 = Utf8               scala/Function1
  #536 = Class              #535          // scala/Function1
  #537 = Utf8               coursier/util/Sync
  #538 = Class              #537          // coursier/util/Sync
  #539 = Utf8               logger
  #540 = Utf8               Lcoursier/cache/CacheLogger;
  #541 = Utf8               task
  #542 = Utf8               Ljava/lang/Object;
  #543 = Utf8               Lscala/Function1;
  #544 = Utf8               I
  #545 = Utf8               Lcoursier/util/Sync;
  #546 = Utf8               runProcess$default$3
  #547 = Utf8               ()I
  #548 = Utf8               <F:Ljava/lang/Object;>()I
  #549 = Utf8               runProcess$default$4
  #550 = Utf8               <F:Ljava/lang/Object;>()Lscala/Option<Lcoursier/cache/CacheLogger;>;
  #551 = Utf8               validate
  #552 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
  #553 = Utf8               (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel<Lcoursier/error/ResolutionError;Lscala/runtime/BoxedUnit;>;
  #554 = Utf8               res
  #555 = Utf8               isDone
  #556 = NameAndType        #555:#119     // isDone:()Z
  #557 = Methodref          #311.#556     // coursier/core/Resolution.isDone:()Z
  #558 = Utf8               coursier/util/ValidationNel$
  #559 = Class              #558          // coursier/util/ValidationNel$
  #560 = Utf8               Lcoursier/util/ValidationNel$;
  #561 = NameAndType        #71:#560      // MODULE$:Lcoursier/util/ValidationNel$;
  #562 = Fieldref           #559.#561     // coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
  #563 = Utf8               success
  #564 = Utf8               ()Lcoursier/util/ValidationNel$SuccessBuilder;
  #565 = NameAndType        #563:#564     // success:()Lcoursier/util/ValidationNel$SuccessBuilder;
  #566 = Methodref          #559.#565     // coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
  #567 = Utf8               scala/runtime/BoxedUnit
  #568 = Class              #567          // scala/runtime/BoxedUnit
  #569 = Utf8               UNIT
  #570 = Utf8               Lscala/runtime/BoxedUnit;
  #571 = NameAndType        #569:#570     // UNIT:Lscala/runtime/BoxedUnit;
  #572 = Fieldref           #568.#571     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #573 = Utf8               (Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #574 = NameAndType        #80:#573      // apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #575 = Methodref          #53.#574      // coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #576 = Utf8               failure
  #577 = Utf8               ()Lcoursier/util/ValidationNel$FailureBuilder;
  #578 = NameAndType        #576:#577     // failure:()Lcoursier/util/ValidationNel$FailureBuilder;
  #579 = Methodref          #559.#578     // coursier/util/ValidationNel$.failure:()Lcoursier/util/ValidationNel$FailureBuilder;
  #580 = Utf8               (Lcoursier/core/Resolution;)V
  #581 = NameAndType        #75:#580      // "<init>":(Lcoursier/core/Resolution;)V
  #582 = Methodref          #34.#581      // coursier/error/ResolutionError$MaximumIterationReached."<init>":(Lcoursier/core/Resolution;)V
  #583 = Methodref          #45.#574      // coursier/util/ValidationNel$FailureBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
  #584 = Utf8               errors
  #585 = NameAndType        #584:#265     // errors:()Lscala/collection/immutable/Seq;
  #586 = Methodref          #311.#585     // coursier/core/Resolution.errors:()Lscala/collection/immutable/Seq;
  #587 = Utf8               $anonfun$validate$1
  #588 = Utf8               (Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  #589 = NameAndType        #587:#588     // $anonfun$validate$1:(Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  #590 = Methodref          #2.#589       // coursier/Resolve$.$anonfun$validate$1:(Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  #591 = MethodHandle       6:#590        // REF_invokeStatic coursier/Resolve$.$anonfun$validate$1:(Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  #592 = Utf8               (Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  #593 = MethodType         #592          //  (Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  #594 = Utf8               (Lcoursier/core/Resolution;)Lscala/Function1;
  #595 = NameAndType        #80:#594      // apply:(Lcoursier/core/Resolution;)Lscala/Function1;
  #596 = InvokeDynamic      #7:#595       // #7:apply:(Lcoursier/core/Resolution;)Lscala/Function1;
  #597 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #598 = NameAndType        #426:#597     // map:(Lscala/Function1;)Ljava/lang/Object;
  #599 = InterfaceMethodref #203.#598     // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
  #600 = Utf8               scala/collection/immutable/Seq$
  #601 = Class              #600          // scala/collection/immutable/Seq$
  #602 = Utf8               Lscala/collection/immutable/Seq$;
  #603 = NameAndType        #71:#602      // MODULE$:Lscala/collection/immutable/Seq$;
  #604 = Fieldref           #601.#603     // scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
  #605 = Utf8               unapplySeq
  #606 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #607 = NameAndType        #605:#606     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #608 = Methodref          #601.#607     // scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #609 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #610 = NameAndType        #71:#609      // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #611 = Fieldref           #70.#610      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #612 = Utf8               isEmpty$extension
  #613 = Utf8               (Lscala/collection/SeqOps;)Z
  #614 = NameAndType        #612:#613     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #615 = Methodref          #70.#614      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #616 = Utf8               get$extension
  #617 = NameAndType        #616:#606     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #618 = Methodref          #70.#617      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #619 = Utf8               (Lscala/collection/SeqOps;)V
  #620 = NameAndType        #75:#619      // "<init>":(Lscala/collection/SeqOps;)V
  #621 = Methodref          #65.#620      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #622 = Utf8               lengthCompare$extension
  #623 = Utf8               (Lscala/collection/SeqOps;I)I
  #624 = NameAndType        #622:#623     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #625 = Methodref          #70.#624      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #626 = Utf8               apply$extension
  #627 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #628 = NameAndType        #626:#627     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #629 = Methodref          #70.#628      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #630 = Utf8               drop$extension
  #631 = Utf8               (Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
  #632 = NameAndType        #630:#631     // drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
  #633 = Methodref          #70.#632      // scala/collection/SeqFactory$UnapplySeqWrapper$.drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
  #634 = Utf8               failures
  #635 = Utf8               ()Lcoursier/util/ValidationNel$FailuresBuilder;
  #636 = NameAndType        #634:#635     // failures:()Lcoursier/util/ValidationNel$FailuresBuilder;
  #637 = Methodref          #559.#636     // coursier/util/ValidationNel$.failures:()Lcoursier/util/ValidationNel$FailuresBuilder;
  #638 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
  #639 = NameAndType        #80:#638      // apply:(Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
  #640 = Methodref          #50.#639      // coursier/util/ValidationNel$FailuresBuilder.apply:(Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
  #641 = Utf8               conflicts
  #642 = NameAndType        #641:#347     // conflicts:()Lscala/collection/immutable/Set;
  #643 = Methodref          #311.#642     // coursier/core/Resolution.conflicts:()Lscala/collection/immutable/Set;
  #644 = Utf8               (Lcoursier/core/Resolution;Lscala/collection/immutable/Set;)V
  #645 = NameAndType        #75:#644      // "<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Set;)V
  #646 = Methodref          #31.#645      // coursier/error/ResolutionError$ConflictingDependencies."<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Set;)V
  #647 = Utf8               zip
  #648 = Utf8               (Lcoursier/util/ValidationNel;Lcoursier/util/ValidationNel;)Lcoursier/util/ValidationNel;
  #649 = NameAndType        #647:#648     // zip:(Lcoursier/util/ValidationNel;Lcoursier/util/ValidationNel;)Lcoursier/util/ValidationNel;
  #650 = Methodref          #47.#649      // coursier/util/ValidationNel.zip:(Lcoursier/util/ValidationNel;Lcoursier/util/ValidationNel;)Lcoursier/util/ValidationNel;
  #651 = Utf8               $anonfun$validate$2$adapted
  #652 = Utf8               (Lscala/Tuple3;)Ljava/lang/Object;
  #653 = NameAndType        #651:#652     // $anonfun$validate$2$adapted:(Lscala/Tuple3;)Ljava/lang/Object;
  #654 = Methodref          #2.#653       // coursier/Resolve$.$anonfun$validate$2$adapted:(Lscala/Tuple3;)Ljava/lang/Object;
  #655 = MethodHandle       6:#654        // REF_invokeStatic coursier/Resolve$.$anonfun$validate$2$adapted:(Lscala/Tuple3;)Ljava/lang/Object;
  #656 = MethodType         #652          //  (Lscala/Tuple3;)Ljava/lang/Object;
  #657 = InvokeDynamic      #8:#422       // #8:apply:()Lscala/Function1;
  #658 = Utf8               (Lscala/Function1;)Lcoursier/util/ValidationNel;
  #659 = NameAndType        #426:#658     // map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #660 = Methodref          #47.#659      // coursier/util/ValidationNel.map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
  #661 = Utf8               h
  #662 = Utf8               Lcoursier/error/ResolutionError$CantDownloadModule;
  #663 = Utf8               t
  #664 = Utf8               checkDone
  #665 = Utf8               Lcoursier/util/ValidationNel;
  #666 = Utf8               checkErrors
  #667 = Utf8               checkConflicts
  #668 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
  #669 = Utf8               coursier/Resolve
  #670 = Class              #669          // coursier/Resolve
  #671 = Utf8               defaultRepositories
  #672 = NameAndType        #671:#265     // defaultRepositories:()Lscala/collection/immutable/Seq;
  #673 = Methodref          #2.#672       // coursier/Resolve$.defaultRepositories:()Lscala/collection/immutable/Seq;
  #674 = Utf8               defaultMirrorConfFiles
  #675 = NameAndType        #674:#265     // defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
  #676 = Methodref          #2.#675       // coursier/Resolve$.defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
  #677 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
  #678 = NameAndType        #75:#677      // "<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
  #679 = Methodref          #670.#678     // coursier/Resolve."<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
  #680 = Utf8               Lcoursier/cache/Cache;
  #681 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
  #682 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
  #683 = Utf8               repositories
  #684 = Utf8               mirrorConfFiles
  #685 = Utf8               mirrors
  #686 = Utf8               resolutionParams
  #687 = Utf8               throughOpt
  #688 = Utf8               transformFetcherOpt
  #689 = Utf8               (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
  #690 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
  #691 = Utf8               writeReplace
  #692 = Utf8               scala/runtime/ModuleSerializationProxy
  #693 = Class              #692          // scala/runtime/ModuleSerializationProxy
  #694 = Utf8               (Ljava/lang/Class;)V
  #695 = NameAndType        #75:#694      // "<init>":(Ljava/lang/Class;)V
  #696 = Methodref          #693.#695     // scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
  #697 = Utf8               $anonfun$initialResolution$2
  #698 = Utf8               (Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #699 = Utf8               f$3
  #700 = Utf8               g$1
  #701 = Utf8               dep
  #702 = NameAndType        #80:#185      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #703 = InterfaceMethodref #536.#702     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #704 = Utf8               coursier/core/Dependency
  #705 = Class              #704          // coursier/core/Dependency
  #706 = Utf8               Lcoursier/core/Dependency;
  #707 = Utf8               f
  #708 = Utf8               g
  #709 = NameAndType        #697:#698     // $anonfun$initialResolution$2:(Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #710 = Methodref          #2.#709       // coursier/Resolve$.$anonfun$initialResolution$2:(Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #711 = MethodHandle       6:#710        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$2:(Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #712 = Utf8               (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #713 = MethodType         #712          //  (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  #714 = NameAndType        #80:#243      // apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #715 = InvokeDynamic      #9:#714       // #9:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #716 = Utf8               $anonfun$initialResolution$4
  #717 = Utf8               (Lcoursier/core/Module;Lscala/Tuple2;)Z
  #718 = Utf8               m$1
  #719 = Utf8               x$11
  #720 = Utf8               scala/Tuple2
  #721 = Class              #720          // scala/Tuple2
  #722 = Utf8               _1
  #723 = NameAndType        #722:#295     // _1:()Ljava/lang/Object;
  #724 = Methodref          #721.#723     // scala/Tuple2._1:()Ljava/lang/Object;
  #725 = Utf8               coursier/util/ModuleMatchers
  #726 = Class              #725          // coursier/util/ModuleMatchers
  #727 = Utf8               matches
  #728 = Utf8               (Lcoursier/core/Module;)Z
  #729 = NameAndType        #727:#728     // matches:(Lcoursier/core/Module;)Z
  #730 = Methodref          #726.#729     // coursier/util/ModuleMatchers.matches:(Lcoursier/core/Module;)Z
  #731 = Utf8               Lcoursier/core/Module;
  #732 = Utf8               Lscala/Tuple2;
  #733 = Utf8               cache$1
  #734 = Utf8               actualReconciliation$1
  #735 = Utf8               m
  #736 = Utf8               get
  #737 = NameAndType        #736:#185     // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #738 = Methodref          #279.#737     // java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
  #739 = Utf8               $anonfun$initialResolution$4$adapted
  #740 = Utf8               (Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #741 = NameAndType        #739:#740     // $anonfun$initialResolution$4$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #742 = Methodref          #2.#741       // coursier/Resolve$.$anonfun$initialResolution$4$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #743 = MethodHandle       6:#742        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$4$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
  #744 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #745 = MethodType         #744          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #746 = Utf8               (Lcoursier/core/Module;)Lscala/Function1;
  #747 = NameAndType        #80:#746      // apply:(Lcoursier/core/Module;)Lscala/Function1;
  #748 = InvokeDynamic      #10:#747      // #10:apply:(Lcoursier/core/Module;)Lscala/Function1;
  #749 = Utf8               find
  #750 = Utf8               (Lscala/Function1;)Lscala/Option;
  #751 = NameAndType        #749:#750     // find:(Lscala/Function1;)Lscala/Option;
  #752 = InterfaceMethodref #203.#751     // scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
  #753 = Utf8               _2
  #754 = NameAndType        #753:#295     // _2:()Ljava/lang/Object;
  #755 = Methodref          #721.#754     // scala/Tuple2._2:()Ljava/lang/Object;
  #756 = Utf8               coursier/core/Module
  #757 = Class              #756          // coursier/core/Module
  #758 = Utf8               Lcoursier/core/Reconciliation$Default$;
  #759 = NameAndType        #71:#758      // MODULE$:Lcoursier/core/Reconciliation$Default$;
  #760 = Fieldref           #22.#759      // coursier/core/Reconciliation$Default$.MODULE$:Lcoursier/core/Reconciliation$Default$;
  #761 = Utf8               putIfAbsent
  #762 = NameAndType        #761:#240     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #763 = Methodref          #279.#762     // java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #764 = Utf8               r
  #765 = Utf8               Lcoursier/core/Reconciliation;
  #766 = Utf8               rec
  #767 = Utf8               prev
  #768 = Utf8               Lcoursier/package$Resolution$;
  #769 = NameAndType        #71:#768      // MODULE$:Lcoursier/package$Resolution$;
  #770 = Fieldref           #41.#769      // coursier/package$Resolution$.MODULE$:Lcoursier/package$Resolution$;
  #771 = NameAndType        #80:#298      // apply:()Lcoursier/core/Resolution;
  #772 = Methodref          #41.#771      // coursier/package$Resolution$.apply:()Lcoursier/core/Resolution;
  #773 = Utf8               $anonfun$initialResolution$6
  #774 = Utf8               (Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Z
  #775 = Utf8               params$1
  #776 = Utf8               keepOptionalDependencies
  #777 = NameAndType        #776:#119     // keepOptionalDependencies:()Z
  #778 = Methodref          #117.#777     // coursier/params/ResolutionParams.keepOptionalDependencies:()Z
  #779 = Utf8               optional
  #780 = NameAndType        #779:#119     // optional:()Z
  #781 = Methodref          #705.#780     // coursier/core/Dependency.optional:()Z
  #782 = Utf8               useSystemOsInfo
  #783 = NameAndType        #782:#119     // useSystemOsInfo:()Z
  #784 = Methodref          #117.#783     // coursier/params/ResolutionParams.useSystemOsInfo:()Z
  #785 = Utf8               Lcoursier/core/Activation$Os$;
  #786 = NameAndType        #71:#785      // MODULE$:Lcoursier/core/Activation$Os$;
  #787 = Fieldref           #19.#786      // coursier/core/Activation$Os$.MODULE$:Lcoursier/core/Activation$Os$;
  #788 = Utf8               scala/sys/package$
  #789 = Class              #788          // scala/sys/package$
  #790 = Utf8               Lscala/sys/package$;
  #791 = NameAndType        #71:#790      // MODULE$:Lscala/sys/package$;
  #792 = Fieldref           #789.#791     // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #793 = Utf8               props
  #794 = Utf8               ()Lscala/sys/SystemProperties;
  #795 = NameAndType        #793:#794     // props:()Lscala/sys/SystemProperties;
  #796 = Methodref          #789.#795     // scala/sys/package$.props:()Lscala/sys/SystemProperties;
  #797 = Utf8               scala/sys/SystemProperties
  #798 = Class              #797          // scala/sys/SystemProperties
  #799 = Methodref          #798.#441     // scala/sys/SystemProperties.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #800 = Utf8               fromProperties
  #801 = Utf8               (Lscala/collection/immutable/Map;)Lcoursier/core/Activation$Os;
  #802 = NameAndType        #800:#801     // fromProperties:(Lscala/collection/immutable/Map;)Lcoursier/core/Activation$Os;
  #803 = Methodref          #19.#802      // coursier/core/Activation$Os$.fromProperties:(Lscala/collection/immutable/Map;)Lcoursier/core/Activation$Os;
  #804 = NameAndType        #321:#380     // empty:()Lcoursier/core/Activation$Os;
  #805 = Methodref          #19.#804      // coursier/core/Activation$Os$.empty:()Lcoursier/core/Activation$Os;
  #806 = Utf8               $anonfun$initialResolution$9
  #807 = Utf8               (Ljava/lang/String;)Lscala/Option;
  #808 = Utf8               s
  #809 = Utf8               coursier/core/Parse$
  #810 = Class              #809          // coursier/core/Parse$
  #811 = Utf8               Lcoursier/core/Parse$;
  #812 = NameAndType        #71:#811      // MODULE$:Lcoursier/core/Parse$;
  #813 = Fieldref           #810.#812     // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
  #814 = Utf8               version
  #815 = NameAndType        #814:#807     // version:(Ljava/lang/String;)Lscala/Option;
  #816 = Methodref          #810.#815     // coursier/core/Parse$.version:(Ljava/lang/String;)Lscala/Option;
  #817 = Utf8               useSystemJdkVersion
  #818 = NameAndType        #817:#119     // useSystemJdkVersion:()Z
  #819 = Methodref          #117.#818     // coursier/params/ResolutionParams.useSystemJdkVersion:()Z
  #820 = Utf8               java.version
  #821 = String             #820          // java.version
  #822 = NameAndType        #736:#807     // get:(Ljava/lang/String;)Lscala/Option;
  #823 = Methodref          #798.#822     // scala/sys/SystemProperties.get:(Ljava/lang/String;)Lscala/Option;
  #824 = NameAndType        #806:#807     // $anonfun$initialResolution$9:(Ljava/lang/String;)Lscala/Option;
  #825 = Methodref          #2.#824       // coursier/Resolve$.$anonfun$initialResolution$9:(Ljava/lang/String;)Lscala/Option;
  #826 = MethodHandle       6:#825        // REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$9:(Ljava/lang/String;)Lscala/Option;
  #827 = MethodType         #807          //  (Ljava/lang/String;)Lscala/Option;
  #828 = InvokeDynamic      #11:#422      // #11:apply:()Lscala/Function1;
  #829 = Utf8               flatMap
  #830 = NameAndType        #829:#750     // flatMap:(Lscala/Function1;)Lscala/Option;
  #831 = Methodref          #233.#830     // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
  #832 = Utf8               p
  #833 = Utf8               !
  #834 = String             #833          // !
  #835 = Utf8               scala/collection/StringOps$
  #836 = Class              #835          // scala/collection/StringOps$
  #837 = Utf8               Lscala/collection/StringOps$;
  #838 = NameAndType        #71:#837      // MODULE$:Lscala/collection/StringOps$;
  #839 = Fieldref           #836.#838     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #840 = Utf8               augmentString
  #841 = NameAndType        #840:#138     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #842 = Methodref          #161.#841     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #843 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #844 = NameAndType        #630:#843     // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #845 = Methodref          #836.#844     // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #846 = Utf8               scala/runtime/BoxesRunTime
  #847 = Class              #846          // scala/runtime/BoxesRunTime
  #848 = Utf8               boxToBoolean
  #849 = Utf8               (Z)Ljava/lang/Boolean;
  #850 = NameAndType        #848:#849     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #851 = Methodref          #847.#850     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #852 = Utf8               res$1
  #853 = Utf8               x0$1
  #854 = Utf8               (Lcoursier/core/Resolution;Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;)V
  #855 = NameAndType        #75:#854      // "<init>":(Lcoursier/core/Resolution;Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;)V
  #856 = Methodref          #26.#855      // coursier/error/ResolutionError$CantDownloadModule."<init>":(Lcoursier/core/Resolution;Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;)V
  #857 = Utf8               module
  #858 = Utf8               $anonfun$validate$2
  #859 = Utf8               (Lscala/Tuple3;)V
  #860 = Utf8               x0$2
  #861 = Utf8               scala/Tuple3
  #862 = Class              #861          // scala/Tuple3
  #863 = Methodref          #862.#723     // scala/Tuple3._1:()Ljava/lang/Object;
  #864 = Methodref          #862.#754     // scala/Tuple3._2:()Ljava/lang/Object;
  #865 = Utf8               _3
  #866 = NameAndType        #865:#295     // _3:()Ljava/lang/Object;
  #867 = Methodref          #862.#866     // scala/Tuple3._3:()Ljava/lang/Object;
  #868 = Utf8               Lscala/Tuple3;
  #869 = Methodref          #4.#76        // coursier/PlatformResolve."<init>":()V
  #870 = NameAndType        #773:#774     // $anonfun$initialResolution$6:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Z
  #871 = Methodref          #2.#870       // coursier/Resolve$.$anonfun$initialResolution$6:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Z
  #872 = NameAndType        #858:#859     // $anonfun$validate$2:(Lscala/Tuple3;)V
  #873 = Methodref          #2.#872       // coursier/Resolve$.$anonfun$validate$2:(Lscala/Tuple3;)V
  #874 = NameAndType        #716:#717     // $anonfun$initialResolution$4:(Lcoursier/core/Module;Lscala/Tuple2;)Z
  #875 = Methodref          #2.#874       // coursier/Resolve$.$anonfun$initialResolution$4:(Lcoursier/core/Module;Lscala/Tuple2;)Z
  #876 = Utf8               $deserializeLambda$
  #877 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #878 = Utf8               scala/runtime/LambdaDeserialize
  #879 = Class              #878          // scala/runtime/LambdaDeserialize
  #880 = Utf8               bootstrap
  #881 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #882 = NameAndType        #880:#881     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #883 = Methodref          #879.#882     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #884 = MethodHandle       6:#883        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #885 = Utf8               lambdaDeserialize
  #886 = NameAndType        #885:#877     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #887 = InvokeDynamic      #12:#886      // #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #888 = Utf8               Code
  #889 = Utf8               LineNumberTable
  #890 = Utf8               LocalVariableTable
  #891 = Utf8               Signature
  #892 = Utf8               MethodParameters
  #893 = Utf8               StackMapTable
  #894 = Utf8               InnerClasses
  #895 = Utf8               SourceFile
  #896 = Utf8               BootstrapMethods
  #897 = Utf8               ScalaInlineInfo
  #898 = Utf8               Scala
{
  public static final coursier.Resolve$ MODULE$;
    descriptor: Lcoursier/Resolve$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/Resolve$
         3: dup
         4: invokespecial #77                 // Method "<init>":()V
         7: putstatic     #79                 // Field MODULE$:Lcoursier/Resolve$;
        10: return
      LineNumberTable:
        line 21: 0

  public coursier.Resolve<coursier.util.Task> apply();
    descriptor: ()Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #87                 // Field coursier/cache/Cache$.MODULE$:Lcoursier/cache/Cache$;
         4: invokevirtual #91                 // Method coursier/cache/Cache$.default:()Lcoursier/cache/Cache;
         7: getstatic     #96                 // Field coursier/util/Task$.MODULE$:Lcoursier/util/Task$;
        10: invokevirtual #100                // Method coursier/util/Task$.sync:()Lcoursier/util/Sync;
        13: invokevirtual #103                // Method apply:(Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
        16: areturn
      LineNumberTable:
        line 182: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/Resolve$;
    Signature: #82                          // ()Lcoursier/Resolve<Lcoursier/util/Task;>;

  public coursier.Resolve<coursier.util.Task> ResolveTaskOps(coursier.Resolve<coursier.util.Task>);
    descriptor: (Lcoursier/Resolve;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 184: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/Resolve$;
            0       2     1 resolve   Lcoursier/Resolve;
    Signature: #107                         // (Lcoursier/Resolve<Lcoursier/util/Task;>;)Lcoursier/Resolve<Lcoursier/util/Task;>;
    MethodParameters:
      Name                           Flags
      resolve                        final

  public coursier.core.Resolution initialResolution(scala.collection.immutable.Seq<coursier.core.Dependency>, coursier.params.ResolutionParams, scala.Option<coursier.core.Resolution>);
    descriptor: (Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;)Lcoursier/core/Resolution;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=17, locals=12, args_size=4
         0: aload_2
         1: invokevirtual #121                // Method coursier/params/ResolutionParams.doForceScalaVersion:()Z
         4: ifeq          359
         7: aload_2
         8: invokevirtual #124                // Method coursier/params/ResolutionParams.typelevel:()Z
        11: ifeq          28
        14: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
        17: invokevirtual #133                // Method coursier/package$.Organization:()Lcoursier/core/Organization$;
        20: ldc           #135                // String org.typelevel
        22: invokevirtual #140                // Method coursier/core/Organization$.apply:(Ljava/lang/String;)Ljava/lang/String;
        25: goto          39
        28: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
        31: invokevirtual #133                // Method coursier/package$.Organization:()Lcoursier/core/Organization$;
        34: ldc           #142                // String org.scala-lang
        36: invokevirtual #140                // Method coursier/core/Organization$.apply:(Ljava/lang/String;)Ljava/lang/String;
        39: astore        5
        41: aload_2
        42: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
        45: ldc           #150                // String 3
        47: invokevirtual #154                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        50: ifeq          158
        53: new           #156                // class scala/collection/immutable/$colon$colon
        56: dup
        57: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        60: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        63: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
        66: aload         5
        68: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
        71: invokevirtual #171                // Method coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
        74: ldc           #173                // String scala3-library
        76: invokevirtual #176                // Method coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
        79: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
        82: invokevirtual #180                // Method coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
        85: invokevirtual #183                // Method coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
        88: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        91: aload_2
        92: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
        95: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        98: new           #156                // class scala/collection/immutable/$colon$colon
       101: dup
       102: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       105: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       108: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       111: aload         5
       113: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
       116: invokevirtual #171                // Method coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
       119: ldc           #193                // String scala3-compiler
       121: invokevirtual #176                // Method coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
       124: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       127: invokevirtual #180                // Method coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
       130: invokevirtual #183                // Method coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
       133: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       136: aload_2
       137: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
       140: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       143: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       146: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       149: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       152: checkcast     #203                // class scala/collection/immutable/Seq
       155: goto          356
       158: new           #156                // class scala/collection/immutable/$colon$colon
       161: dup
       162: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       165: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       168: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       171: aload         5
       173: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
       176: invokevirtual #171                // Method coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
       179: ldc           #205                // String scala-library
       181: invokevirtual #176                // Method coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
       184: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       187: invokevirtual #180                // Method coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
       190: invokevirtual #183                // Method coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
       193: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       196: aload_2
       197: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
       200: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       203: new           #156                // class scala/collection/immutable/$colon$colon
       206: dup
       207: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       210: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       213: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       216: aload         5
       218: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
       221: invokevirtual #171                // Method coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
       224: ldc           #207                // String scala-compiler
       226: invokevirtual #176                // Method coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
       229: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       232: invokevirtual #180                // Method coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
       235: invokevirtual #183                // Method coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
       238: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       241: aload_2
       242: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
       245: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       248: new           #156                // class scala/collection/immutable/$colon$colon
       251: dup
       252: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       255: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       258: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       261: aload         5
       263: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
       266: invokevirtual #171                // Method coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
       269: ldc           #209                // String scala-reflect
       271: invokevirtual #176                // Method coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
       274: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       277: invokevirtual #180                // Method coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
       280: invokevirtual #183                // Method coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
       283: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       286: aload_2
       287: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
       290: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       293: new           #156                // class scala/collection/immutable/$colon$colon
       296: dup
       297: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
       300: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       303: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       306: aload         5
       308: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
       311: invokevirtual #171                // Method coursier/package$.ModuleName:()Lcoursier/core/ModuleName$;
       314: ldc           #211                // String scalap
       316: invokevirtual #176                // Method coursier/core/ModuleName$.apply:(Ljava/lang/String;)Ljava/lang/String;
       319: getstatic     #167                // Field coursier/package$Module$.MODULE$:Lcoursier/package$Module$;
       322: invokevirtual #180                // Method coursier/package$Module$.apply$default$3:()Lscala/collection/immutable/Map;
       325: invokevirtual #183                // Method coursier/package$Module$.apply:(Ljava/lang/String;Ljava/lang/String;Lscala/collection/immutable/Map;)Lcoursier/core/Module;
       328: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
       331: aload_2
       332: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
       335: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
       338: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       341: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       344: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       347: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       350: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       353: checkcast     #203                // class scala/collection/immutable/Seq
       356: goto          362
       359: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       362: astore        4
       364: aload_2
       365: invokevirtual #124                // Method coursier/params/ResolutionParams.typelevel:()Z
       368: ifeq          390
       371: new           #156                // class scala/collection/immutable/$colon$colon
       374: dup
       375: getstatic     #216                // Field coursier/internal/Typelevel$.MODULE$:Lcoursier/internal/Typelevel$;
       378: invokevirtual #220                // Method coursier/internal/Typelevel$.swap:()Lscala/Function1;
       381: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       384: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       387: goto          393
       390: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       393: aload_2
       394: invokevirtual #121                // Method coursier/params/ResolutionParams.doForceScalaVersion:()Z
       397: ifeq          423
       400: new           #156                // class scala/collection/immutable/$colon$colon
       403: dup
       404: getstatic     #227                // Field coursier/core/Resolution$.MODULE$:Lcoursier/core/Resolution$;
       407: aload_2
       408: invokevirtual #148                // Method coursier/params/ResolutionParams.selectedScalaVersion:()Ljava/lang/String;
       411: invokevirtual #231                // Method coursier/core/Resolution$.forceScalaVersion:(Ljava/lang/String;)Lscala/Function1;
       414: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       417: invokespecial #201                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       420: goto          426
       423: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       426: invokeinterface #239,  2          // InterfaceMethod scala/collection/SeqOps.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       431: checkcast     #203                // class scala/collection/immutable/Seq
       434: astore        7
       436: aload         7
       438: invokedynamic #259,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
       443: invokeinterface #263,  2          // InterfaceMethod scala/collection/immutable/Seq.reduceOption:(Lscala/Function2;)Lscala/Option;
       448: astore        6
       450: aload_2
       451: invokevirtual #267                // Method coursier/params/ResolutionParams.actualReconciliation:()Lscala/collection/immutable/Seq;
       454: astore        9
       456: aload         9
       458: invokeinterface #270,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       463: ifeq          472
       466: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
       469: goto          497
       472: new           #277                // class scala/Some
       475: dup
       476: new           #279                // class java/util/concurrent/ConcurrentHashMap
       479: dup
       480: invokespecial #280                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       483: astore        10
       485: aload         10
       487: aload         9
       489: invokedynamic #291,  0            // InvokeDynamic #1:apply:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;)Lscala/Function1;
       494: invokespecial #294                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       497: astore        8
       499: aload_3
       500: invokedynamic #305,  0            // InvokeDynamic #2:apply:()Lscala/Function0;
       505: invokevirtual #309                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       508: checkcast     #311                // class coursier/core/Resolution
       511: astore        11
       513: aload         11
       515: aload_1
       516: invokevirtual #315                // Method coursier/core/Resolution.withRootDependencies:(Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
       519: getstatic     #320                // Field coursier/core/DependencySet$.MODULE$:Lcoursier/core/DependencySet$;
       522: invokevirtual #324                // Method coursier/core/DependencySet$.empty:()Lcoursier/core/DependencySet;
       525: invokevirtual #328                // Method coursier/core/Resolution.withDependencySet:(Lcoursier/core/DependencySet;)Lcoursier/core/Resolution;
       528: aload_2
       529: invokevirtual #331                // Method coursier/params/ResolutionParams.forceVersion:()Lscala/collection/immutable/Map;
       532: aload         4
       534: invokeinterface #336,  2          // InterfaceMethod scala/collection/immutable/Map.$plus$plus:(Lscala/collection/IterableOnce;)Lscala/collection/IterableOps;
       539: checkcast     #333                // class scala/collection/immutable/Map
       542: invokevirtual #340                // Method coursier/core/Resolution.withForceVersions:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
       545: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       548: invokevirtual #344                // Method scala/Predef$.Set:()Lscala/collection/immutable/Set$;
       551: invokevirtual #349                // Method scala/collection/immutable/Set$.empty:()Lscala/collection/immutable/Set;
       554: invokevirtual #353                // Method coursier/core/Resolution.withConflicts:(Lscala/collection/immutable/Set;)Lcoursier/core/Resolution;
       557: new           #277                // class scala/Some
       560: dup
       561: aload_2
       562: invokedynamic #363,  0            // InvokeDynamic #3:apply:(Lcoursier/params/ResolutionParams;)Lscala/Function1;
       567: invokespecial #294                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       570: invokevirtual #367                // Method coursier/core/Resolution.withFilter:(Lscala/Option;)Lcoursier/core/Resolution;
       573: aload         8
       575: invokevirtual #370                // Method coursier/core/Resolution.withReconciliation:(Lscala/Option;)Lcoursier/core/Resolution;
       578: aload_2
       579: invokevirtual #374                // Method coursier/params/ResolutionParams.osInfoOpt:()Lscala/Option;
       582: aload_2
       583: invokedynamic #384,  0            // InvokeDynamic #4:apply:(Lcoursier/params/ResolutionParams;)Lscala/Function0;
       588: invokevirtual #309                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       591: checkcast     #14                 // class coursier/core/Activation$Os
       594: invokevirtual #388                // Method coursier/core/Resolution.withOsInfo:(Lcoursier/core/Activation$Os;)Lcoursier/core/Resolution;
       597: aload_2
       598: invokevirtual #391                // Method coursier/params/ResolutionParams.jdkVersionOpt:()Lscala/Option;
       601: aload_2
       602: invokedynamic #398,  0            // InvokeDynamic #5:apply:(Lcoursier/params/ResolutionParams;)Lscala/Function0;
       607: invokevirtual #402                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
       610: invokevirtual #405                // Method coursier/core/Resolution.withJdkVersion:(Lscala/Option;)Lcoursier/core/Resolution;
       613: aload_2
       614: invokevirtual #408                // Method coursier/params/ResolutionParams.profiles:()Lscala/collection/immutable/Set;
       617: invokeinterface #411,  1          // InterfaceMethod scala/collection/immutable/Set.isEmpty:()Z
       622: ifeq          631
       625: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
       628: goto          668
       631: new           #277                // class scala/Some
       634: dup
       635: aload_2
       636: invokevirtual #408                // Method coursier/params/ResolutionParams.profiles:()Lscala/collection/immutable/Set;
       639: invokeinterface #415,  1          // InterfaceMethod scala/collection/immutable/Set.iterator:()Lscala/collection/Iterator;
       644: invokedynamic #423,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
       649: invokeinterface #429,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
       654: getstatic     #434                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
       657: invokevirtual #438                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
       660: invokeinterface #442,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
       665: invokespecial #294                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       668: invokevirtual #445                // Method coursier/core/Resolution.withUserActivations:(Lscala/Option;)Lcoursier/core/Resolution;
       671: aload         6
       673: invokevirtual #448                // Method coursier/core/Resolution.withMapDependencies:(Lscala/Option;)Lcoursier/core/Resolution;
       676: aload_2
       677: invokevirtual #451                // Method coursier/params/ResolutionParams.properties:()Lscala/collection/immutable/Seq;
       680: invokevirtual #454                // Method coursier/core/Resolution.withExtraProperties:(Lscala/collection/immutable/Seq;)Lcoursier/core/Resolution;
       683: aload_2
       684: invokevirtual #457                // Method coursier/params/ResolutionParams.forcedProperties:()Lscala/collection/immutable/Map;
       687: invokevirtual #460                // Method coursier/core/Resolution.withForceProperties:(Lscala/collection/immutable/Map;)Lcoursier/core/Resolution;
       690: aload_2
       691: invokevirtual #463                // Method coursier/params/ResolutionParams.defaultConfiguration:()Ljava/lang/String;
       694: invokevirtual #467                // Method coursier/core/Resolution.withDefaultConfiguration:(Ljava/lang/String;)Lcoursier/core/Resolution;
       697: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 28 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 253 /* append */
          offset_delta = 118
          locals = [ top, class java/lang/String ]
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 197
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class scala/collection/immutable/Seq ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/List ]
        frame_type = 93 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/List ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/Resolve$, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/List, class scala/collection/immutable/List ]
        frame_type = 255 /* full_frame */
          offset_delta = 45
          locals = [ class coursier/Resolve$, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/collection/immutable/Seq, top, class scala/Option, class scala/collection/immutable/Seq, top, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 88 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 255 /* full_frame */
          offset_delta = 133
          locals = [ class coursier/Resolve$, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/collection/immutable/Seq, top, class scala/Option, class scala/collection/immutable/Seq, class scala/Option, class scala/collection/immutable/Seq, top, class coursier/core/Resolution ]
          stack = [ class coursier/core/Resolution ]
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class coursier/Resolve$, class scala/collection/immutable/Seq, class coursier/params/ResolutionParams, class scala/Option, class scala/collection/immutable/Seq, top, class scala/Option, class scala/collection/immutable/Seq, class scala/Option, class scala/collection/immutable/Seq, top, class coursier/core/Resolution ]
          stack = [ class coursier/core/Resolution, class scala/Option ]
      LineNumberTable:
        line 214: 0
        line 216: 7
        line 217: 28
        line 218: 41
        line 219: 53
        line 220: 60
        line 219: 98
        line 221: 105
        line 219: 143
        line 224: 158
        line 225: 165
        line 224: 203
        line 226: 210
        line 224: 248
        line 227: 255
        line 224: 293
        line 228: 300
        line 224: 338
        line 231: 359
        line 234: 364
        line 235: 393
        line 237: 436
        line 241: 450
        line 242: 456
        line 244: 472
        line 245: 476
        line 246: 485
        line 263: 499
        line 265: 513
        line 266: 515
        line 267: 519
        line 268: 528
        line 269: 545
        line 270: 557
        line 271: 573
        line 273: 578
        line 274: 582
        line 282: 597
        line 283: 601
        line 291: 613
        line 292: 631
        line 294: 671
        line 295: 676
        line 296: 683
        line 297: 690
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41     315     5 scalaOrg   Ljava/lang/String;
          436      12     7     l   Lscala/collection/immutable/Seq;
          485       9    10 cache   Ljava/util/concurrent/ConcurrentHashMap;
          456      41     9 actualReconciliation   Lscala/collection/immutable/Seq;
          364     333     4 forceScalaVersions   Lscala/collection/immutable/Seq;
          450     247     6 mapDependencies   Lscala/Option;
          499     198     8 reconciliation   Lscala/Option;
          513     184    11 baseRes   Lcoursier/core/Resolution;
            0     698     0  this   Lcoursier/Resolve$;
            0     698     1 dependencies   Lscala/collection/immutable/Seq;
            0     698     2 params   Lcoursier/params/ResolutionParams;
            0     698     3 initialResolutionOpt   Lscala/Option;
    Signature: #112                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lcoursier/core/Resolution;>;)Lcoursier/core/Resolution;
    MethodParameters:
      Name                           Flags
      dependencies                   final
      params                         final
      initialResolutionOpt           final

  public coursier.params.ResolutionParams initialResolution$default$2();
    descriptor: ()Lcoursier/params/ResolutionParams;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #487                // Field coursier/params/ResolutionParams$.MODULE$:Lcoursier/params/ResolutionParams$;
         3: invokevirtual #489                // Method coursier/params/ResolutionParams$.apply:()Lcoursier/params/ResolutionParams;
         6: areturn
      LineNumberTable:
        line 209: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/Resolve$;

  public scala.Option<coursier.core.Resolution> initialResolution$default$3();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/Resolve$;
    Signature: #491                         // ()Lscala/Option<Lcoursier/core/Resolution;>;

  public <F extends java.lang.Object> F runProcess(coursier.core.Resolution, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, int, scala.Option<coursier.cache.CacheLogger>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/core/Resolution;Lscala/Function1;ILscala/Option;Lcoursier/util/Sync;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=6
         0: getstatic     #501                // Field coursier/package$ResolutionExtensions$.MODULE$:Lcoursier/package$ResolutionExtensions$;
         3: getstatic     #129                // Field coursier/package$.MODULE$:Lcoursier/package$;
         6: aload_1
         7: invokevirtual #505                // Method coursier/package$.ResolutionExtensions:(Lcoursier/core/Resolution;)Lcoursier/core/Resolution;
        10: invokevirtual #509                // Method coursier/package$ResolutionExtensions$.process$extension:(Lcoursier/core/Resolution;)Lcoursier/core/ResolutionProcess;
        13: aload_2
        14: iload_3
        15: aload         5
        17: invokevirtual #515                // Method coursier/core/ResolutionProcess.run:(Lscala/Function1;ILcoursier/util/Monad;)Ljava/lang/Object;
        20: astore        7
        22: aload         4
        24: astore        8
        26: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        29: aload         8
        31: invokevirtual #521                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        34: ifeq          44
        37: aload         7
        39: astore        6
        41: goto          104
        44: goto          47
        47: aload         8
        49: instanceof    #277                // class scala/Some
        52: ifeq          91
        55: aload         8
        57: checkcast     #277                // class scala/Some
        60: astore        9
        62: aload         9
        64: invokevirtual #524                // Method scala/Some.value:()Ljava/lang/Object;
        67: checkcast     #11                 // class coursier/cache/CacheLogger
        70: astore        10
        72: aload         10
        74: invokeinterface #528,  1          // InterfaceMethod coursier/cache/CacheLogger.using:()Lcoursier/cache/CacheLogger$Using;
        79: aload         7
        81: aload         5
        83: invokevirtual #531                // Method coursier/cache/CacheLogger$Using.apply:(Ljava/lang/Object;Lcoursier/util/Sync;)Ljava/lang/Object;
        86: astore        6
        88: goto          104
        91: goto          94
        94: new           #533                // class scala/MatchError
        97: dup
        98: aload         8
       100: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       103: athrow
       104: aload         6
       106: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 44
          locals = [ top, class java/lang/Object, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 43 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Resolve$, class coursier/core/Resolution, class scala/Function1, int, class scala/Option, class coursier/util/Sync, class java/lang/Object, class java/lang/Object, class scala/Option ]
          stack = []
      LineNumberTable:
        line 309: 0
        line 307: 3
        line 309: 13
        line 311: 22
        line 312: 26
        line 313: 47
        line 311: 94
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           72      19    10 logger   Lcoursier/cache/CacheLogger;
           22      84     7  task   Ljava/lang/Object;
            0     107     0  this   Lcoursier/Resolve$;
            0     107     1 initialResolution   Lcoursier/core/Resolution;
            0     107     2 fetch   Lscala/Function1;
            0     107     3 maxIterations   I
            0     107     4 loggerOpt   Lscala/Option;
            0     107     5     S   Lcoursier/util/Sync;
    Signature: #494                         // <F:Ljava/lang/Object;>(Lcoursier/core/Resolution;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;ILscala/Option<Lcoursier/cache/CacheLogger;>;Lcoursier/util/Sync<TF;>;)TF;
    MethodParameters:
      Name                           Flags
      initialResolution              final
      fetch                          final
      maxIterations                  final
      loggerOpt                      final
      S                              final

  public <F extends java.lang.Object> int runProcess$default$3();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: sipush        200
         3: ireturn
      LineNumberTable:
        line 303: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/Resolve$;
    Signature: #548                         // <F:Ljava/lang/Object;>()I

  public <F extends java.lang.Object> scala.Option<coursier.cache.CacheLogger> runProcess$default$4();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 304: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/Resolve$;
    Signature: #550                         // <F:Ljava/lang/Object;>()Lscala/Option<Lcoursier/cache/CacheLogger;>;

  public coursier.util.ValidationNel<coursier.error.ResolutionError, scala.runtime.BoxedUnit> validate(coursier.core.Resolution);
    descriptor: (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=2
         0: aload_1
         1: invokevirtual #557                // Method coursier/core/Resolution.isDone:()Z
         4: ifeq          22
         7: getstatic     #562                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
        10: invokevirtual #566                // Method coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
        13: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        16: invokevirtual #575                // Method coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
        19: goto          39
        22: getstatic     #562                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
        25: invokevirtual #579                // Method coursier/util/ValidationNel$.failure:()Lcoursier/util/ValidationNel$FailureBuilder;
        28: new           #34                 // class coursier/error/ResolutionError$MaximumIterationReached
        31: dup
        32: aload_1
        33: invokespecial #582                // Method coursier/error/ResolutionError$MaximumIterationReached."<init>":(Lcoursier/core/Resolution;)V
        36: invokevirtual #583                // Method coursier/util/ValidationNel$FailureBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
        39: astore_3
        40: aload_1
        41: invokevirtual #586                // Method coursier/core/Resolution.errors:()Lscala/collection/immutable/Seq;
        44: aload_1
        45: invokedynamic #596,  0            // InvokeDynamic #7:apply:(Lcoursier/core/Resolution;)Lscala/Function1;
        50: invokeinterface #599,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        55: checkcast     #203                // class scala/collection/immutable/Seq
        58: astore        5
        60: aload         5
        62: ifnull        142
        65: getstatic     #604                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        68: aload         5
        70: invokevirtual #608                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        73: astore        6
        75: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        78: aload         6
        80: invokevirtual #615                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        83: ifne          139
        86: new           #65                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        89: dup
        90: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        93: aload         6
        95: invokevirtual #618                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        98: invokespecial #621                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       101: ifnull        139
       104: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       107: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       110: aload         6
       112: invokevirtual #618                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       115: iconst_0
       116: invokevirtual #625                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       119: iconst_0
       120: if_icmpne     139
       123: getstatic     #562                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       126: invokevirtual #566                // Method coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
       129: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       132: invokevirtual #575                // Method coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
       135: astore_2
       136: goto          278
       139: goto          145
       142: goto          145
       145: aload         5
       147: ifnull        265
       150: getstatic     #604                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
       153: aload         5
       155: invokevirtual #608                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       158: astore        7
       160: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       163: aload         7
       165: invokevirtual #615                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
       168: ifne          262
       171: new           #65                 // class scala/collection/SeqFactory$UnapplySeqWrapper
       174: dup
       175: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       178: aload         7
       180: invokevirtual #618                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       183: invokespecial #621                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
       186: ifnull        262
       189: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       192: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       195: aload         7
       197: invokevirtual #618                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       200: iconst_1
       201: invokevirtual #625                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
       204: iconst_0
       205: if_icmplt     262
       208: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       211: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       214: aload         7
       216: invokevirtual #618                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       219: iconst_0
       220: invokevirtual #629                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
       223: checkcast     #26                 // class coursier/error/ResolutionError$CantDownloadModule
       226: astore        8
       228: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       231: getstatic     #611                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
       234: aload         7
       236: invokevirtual #618                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
       239: iconst_1
       240: invokevirtual #633                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.drop$extension:(Lscala/collection/SeqOps;I)Lscala/collection/immutable/Seq;
       243: astore        9
       245: getstatic     #562                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       248: invokevirtual #637                // Method coursier/util/ValidationNel$.failures:()Lcoursier/util/ValidationNel$FailuresBuilder;
       251: aload         8
       253: aload         9
       255: invokevirtual #640                // Method coursier/util/ValidationNel$FailuresBuilder.apply:(Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lcoursier/util/ValidationNel;
       258: astore_2
       259: goto          278
       262: goto          268
       265: goto          268
       268: new           #533                // class scala/MatchError
       271: dup
       272: aload         5
       274: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       277: athrow
       278: aload_2
       279: astore        4
       281: aload_1
       282: invokevirtual #643                // Method coursier/core/Resolution.conflicts:()Lscala/collection/immutable/Set;
       285: invokeinterface #411,  1          // InterfaceMethod scala/collection/immutable/Set.isEmpty:()Z
       290: ifeq          308
       293: getstatic     #562                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       296: invokevirtual #566                // Method coursier/util/ValidationNel$.success:()Lcoursier/util/ValidationNel$SuccessBuilder;
       299: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       302: invokevirtual #575                // Method coursier/util/ValidationNel$SuccessBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
       305: goto          329
       308: getstatic     #562                // Field coursier/util/ValidationNel$.MODULE$:Lcoursier/util/ValidationNel$;
       311: invokevirtual #579                // Method coursier/util/ValidationNel$.failure:()Lcoursier/util/ValidationNel$FailureBuilder;
       314: new           #31                 // class coursier/error/ResolutionError$ConflictingDependencies
       317: dup
       318: aload_1
       319: aload_1
       320: invokevirtual #643                // Method coursier/core/Resolution.conflicts:()Lscala/collection/immutable/Set;
       323: invokespecial #646                // Method coursier/error/ResolutionError$ConflictingDependencies."<init>":(Lcoursier/core/Resolution;Lscala/collection/immutable/Set;)V
       326: invokevirtual #583                // Method coursier/util/ValidationNel$FailureBuilder.apply:(Ljava/lang/Object;)Lcoursier/util/ValidationNel;
       329: astore        10
       331: aload_3
       332: aload         4
       334: aload         10
       336: invokevirtual #650                // Method coursier/util/ValidationNel.zip:(Lcoursier/util/ValidationNel;Lcoursier/util/ValidationNel;)Lcoursier/util/ValidationNel;
       339: invokedynamic #657,  0            // InvokeDynamic #8:apply:()Lscala/Function1;
       344: invokevirtual #660                // Method coursier/util/ValidationNel.map:(Lscala/Function1;)Lcoursier/util/ValidationNel;
       347: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 22 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class coursier/util/ValidationNel ]
        frame_type = 255 /* full_frame */
          offset_delta = 99
          locals = [ class coursier/Resolve$, class coursier/core/Resolution, top, class coursier/util/ValidationNel, top, class scala/collection/immutable/Seq, class scala/collection/SeqOps ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 116
          locals = [ top, class scala/collection/SeqOps ]
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/Resolve$, class coursier/core/Resolution, class coursier/util/ValidationNel, class coursier/util/ValidationNel, top, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 29
          locals = [ class coursier/Resolve$, class coursier/core/Resolution, class coursier/util/ValidationNel, class coursier/util/ValidationNel, class coursier/util/ValidationNel, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class coursier/util/ValidationNel ]
      LineNumberTable:
        line 320: 0
        line 321: 7
        line 323: 22
        line 325: 40
        line 327: 44
        line 331: 60
        line 332: 123
        line 331: 139
        line 333: 145
        line 334: 245
        line 333: 262
        line 327: 268
        line 338: 281
        line 339: 293
        line 341: 308
        line 342: 314
        line 343: 318
        line 344: 319
        line 348: 331
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          228      34     8     h   Lcoursier/error/ResolutionError$CantDownloadModule;
          245      17     9     t   Lscala/collection/immutable/Seq;
           40     307     3 checkDone   Lcoursier/util/ValidationNel;
          281      66     4 checkErrors   Lcoursier/util/ValidationNel;
          331      16    10 checkConflicts   Lcoursier/util/ValidationNel;
            0     348     0  this   Lcoursier/Resolve$;
            0     348     1   res   Lcoursier/core/Resolution;
    Signature: #553                         // (Lcoursier/core/Resolution;)Lcoursier/util/ValidationNel<Lcoursier/error/ResolutionError;Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      res                            final

  public <F extends java.lang.Object> coursier.Resolve<F> apply(coursier.cache.Cache<F>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=3
         0: new           #670                // class coursier/Resolve
         3: dup
         4: aload_1
         5: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         8: aload_0
         9: invokevirtual #673                // Method defaultRepositories:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #676                // Method defaultMirrorConfFiles:()Lscala/collection/immutable/Seq;
        16: getstatic     #198                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        19: getstatic     #487                // Field coursier/params/ResolutionParams$.MODULE$:Lcoursier/params/ResolutionParams$;
        22: invokevirtual #489                // Method coursier/params/ResolutionParams$.apply:()Lcoursier/params/ResolutionParams;
        25: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        28: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        31: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        34: aload_2
        35: invokespecial #679                // Method coursier/Resolve."<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        38: areturn
      LineNumberTable:
        line 21: 0
        line 23: 5
        line 24: 8
        line 25: 12
        line 26: 16
        line 27: 19
        line 28: 25
        line 29: 28
        line 31: 31
        line 21: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcoursier/Resolve$;
            0      39     1 cache   Lcoursier/cache/Cache;
            0      39     2  sync   Lcoursier/util/Sync;
    Signature: #668                         // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      sync                           final

  public <F extends java.lang.Object> coursier.Resolve<F> apply(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=10, args_size=10
         0: new           #670                // class coursier/Resolve
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: aload         8
        17: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        20: aload         9
        22: invokespecial #679                // Method coursier/Resolve."<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        25: areturn
      LineNumberTable:
        line 21: 0
        line 31: 17
        line 21: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcoursier/Resolve$;
            0      26     1 cache   Lcoursier/cache/Cache;
            0      26     2 dependencies   Lscala/collection/immutable/Seq;
            0      26     3 repositories   Lscala/collection/immutable/Seq;
            0      26     4 mirrorConfFiles   Lscala/collection/immutable/Seq;
            0      26     5 mirrors   Lscala/collection/immutable/Seq;
            0      26     6 resolutionParams   Lcoursier/params/ResolutionParams;
            0      26     7 throughOpt   Lscala/Option;
            0      26     8 transformFetcherOpt   Lscala/Option;
            0      26     9  sync   Lcoursier/util/Sync;
    Signature: #682                         // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      dependencies                   final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      resolutionParams               final
      throughOpt                     final
      transformFetcherOpt            final
      sync                           final

  public <F extends java.lang.Object> coursier.Resolve<F> apply(coursier.cache.Cache<F>, scala.collection.immutable.Seq<coursier.core.Dependency>, scala.collection.immutable.Seq<coursier.core.Repository>, scala.collection.immutable.Seq<coursier.params.MirrorConfFile>, scala.collection.immutable.Seq<coursier.params.Mirror>, coursier.params.ResolutionParams, scala.Option<scala.Function1<F, F>>, scala.Option<scala.Function1<scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>, scala.Function1<scala.collection.immutable.Seq<scala.Tuple2<coursier.core.Module, java.lang.String>>, F>>>, scala.Option<coursier.core.Resolution>, coursier.util.Sync<F>);
    descriptor: (Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)Lcoursier/Resolve;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=11, args_size=11
         0: new           #670                // class coursier/Resolve
         3: dup
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: aload         7
        15: aload         8
        17: aload         9
        19: aload         10
        21: invokespecial #679                // Method coursier/Resolve."<init>":(Lcoursier/cache/Cache;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/params/ResolutionParams;Lscala/Option;Lscala/Option;Lscala/Option;Lcoursier/util/Sync;)V
        24: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lcoursier/Resolve$;
            0      25     1 cache   Lcoursier/cache/Cache;
            0      25     2 dependencies   Lscala/collection/immutable/Seq;
            0      25     3 repositories   Lscala/collection/immutable/Seq;
            0      25     4 mirrorConfFiles   Lscala/collection/immutable/Seq;
            0      25     5 mirrors   Lscala/collection/immutable/Seq;
            0      25     6 resolutionParams   Lcoursier/params/ResolutionParams;
            0      25     7 throughOpt   Lscala/Option;
            0      25     8 transformFetcherOpt   Lscala/Option;
            0      25     9 initialResolution   Lscala/Option;
            0      25    10  sync   Lcoursier/util/Sync;
    Signature: #690                         // <F:Ljava/lang/Object;>(Lcoursier/cache/Cache<TF;>;Lscala/collection/immutable/Seq<Lcoursier/core/Dependency;>;Lscala/collection/immutable/Seq<Lcoursier/core/Repository;>;Lscala/collection/immutable/Seq<Lcoursier/params/MirrorConfFile;>;Lscala/collection/immutable/Seq<Lcoursier/params/Mirror;>;Lcoursier/params/ResolutionParams;Lscala/Option<Lscala/Function1<TF;TF;>;>;Lscala/Option<Lscala/Function1<Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;Lscala/Function1<Lscala/collection/immutable/Seq<Lscala/Tuple2<Lcoursier/core/Module;Ljava/lang/String;>;>;TF;>;>;>;Lscala/Option<Lcoursier/core/Resolution;>;Lcoursier/util/Sync<TF;>;)Lcoursier/Resolve<TF;>;
    MethodParameters:
      Name                           Flags
      cache                          final
      dependencies                   final
      repositories                   final
      mirrorConfFiles                final
      mirrors                        final
      resolutionParams               final
      throughOpt                     final
      transformFetcherOpt            final
      initialResolution              final
      sync                           final

  private java.lang.Object writeReplace();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #693                // class scala/runtime/ModuleSerializationProxy
         3: dup
         4: ldc           #2                  // class coursier/Resolve$
         6: invokespecial #696                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
         9: areturn
      LineNumberTable:
        line 21: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/Resolve$;

  public static final coursier.core.Dependency $anonfun$initialResolution$2(scala.Function1, scala.Function1, coursier.core.Dependency);
    descriptor: (Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokeinterface #703,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         8: invokeinterface #703,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        13: checkcast     #705                // class coursier/core/Dependency
        16: areturn
      LineNumberTable:
        line 237: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0   f$3   Lscala/Function1;
            0      17     1   g$1   Lscala/Function1;
            0      17     2   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      f$3                            final
      g$1                            final
      dep                            final

  public static final scala.Function1 $anonfun$initialResolution$1(scala.Function1, scala.Function1);
    descriptor: (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #715,  0            // InvokeDynamic #9:apply:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 237: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     f   Lscala/Function1;
            0       8     1     g   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      f                              final
      g                              final

  public static final boolean $anonfun$initialResolution$4(coursier.core.Module, scala.Tuple2);
    descriptor: (Lcoursier/core/Module;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: checkcast     #726                // class coursier/util/ModuleMatchers
         7: aload_0
         8: invokevirtual #730                // Method coursier/util/ModuleMatchers.matches:(Lcoursier/core/Module;)Z
        11: ireturn
      LineNumberTable:
        line 249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   m$1   Lcoursier/core/Module;
            0      12     1  x$11   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      m$1                            final
      x$11                           final

  public static final coursier.core.Reconciliation $anonfun$initialResolution$3(java.util.concurrent.ConcurrentHashMap, scala.collection.immutable.Seq, coursier.core.Module);
    descriptor: (Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=11, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #738                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
         5: checkcast     #24                 // class coursier/core/Reconciliation
         8: astore        4
        10: aload         4
        12: ifnonnull     142
        15: aload_1
        16: aload_2
        17: invokedynamic #748,  0            // InvokeDynamic #10:apply:(Lcoursier/core/Module;)Lscala/Function1;
        22: invokeinterface #752,  2          // InterfaceMethod scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
        27: astore        6
        29: aload         6
        31: instanceof    #277                // class scala/Some
        34: ifeq          78
        37: aload         6
        39: checkcast     #277                // class scala/Some
        42: astore        7
        44: aload         7
        46: invokevirtual #524                // Method scala/Some.value:()Ljava/lang/Object;
        49: checkcast     #721                // class scala/Tuple2
        52: astore        8
        54: aload         8
        56: ifnull        75
        59: aload         8
        61: invokevirtual #755                // Method scala/Tuple2._2:()Ljava/lang/Object;
        64: checkcast     #24                 // class coursier/core/Reconciliation
        67: astore        9
        69: aload         9
        71: astore_3
        72: goto          112
        75: goto          81
        78: goto          81
        81: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        84: aload         6
        86: invokevirtual #521                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        89: ifeq          99
        92: getstatic     #760                // Field coursier/core/Reconciliation$Default$.MODULE$:Lcoursier/core/Reconciliation$Default$;
        95: astore_3
        96: goto          112
        99: goto          102
       102: new           #533                // class scala/MatchError
       105: dup
       106: aload         6
       108: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       111: athrow
       112: aload_3
       113: astore        5
       115: aload_0
       116: aload_2
       117: aload         5
       119: invokevirtual #763                // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       122: checkcast     #24                 // class coursier/core/Reconciliation
       125: astore        10
       127: aload         10
       129: ifnonnull     137
       132: aload         5
       134: goto          139
       137: aload         10
       139: goto          144
       142: aload         4
       144: areturn
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 75
          locals = [ class java/util/concurrent/ConcurrentHashMap, class scala/collection/immutable/Seq, class coursier/core/Module, top, class coursier/core/Reconciliation, top, class scala/Option, class scala/Some, class scala/Tuple2 ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 17 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class java/util/concurrent/ConcurrentHashMap, class scala/collection/immutable/Seq, class coursier/core/Module, class coursier/core/Reconciliation, class coursier/core/Reconciliation, top, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class java/util/concurrent/ConcurrentHashMap, class scala/collection/immutable/Seq, class coursier/core/Module, class coursier/core/Reconciliation, class coursier/core/Reconciliation, class coursier/core/Reconciliation, class scala/Option, top, top, top, class coursier/core/Reconciliation ]
          stack = []
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Reconciliation ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/util/concurrent/ConcurrentHashMap, class scala/collection/immutable/Seq, class coursier/core/Module, top, class coursier/core/Reconciliation ]
          stack = []
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Reconciliation ]
      LineNumberTable:
        line 247: 0
        line 248: 10
        line 249: 15
        line 250: 29
        line 251: 81
        line 249: 102
        line 253: 115
        line 254: 127
        line 255: 132
        line 257: 137
        line 259: 142
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           69       6     9     r   Lcoursier/core/Reconciliation;
          115      24     5   rec   Lcoursier/core/Reconciliation;
          127      12    10  prev   Lcoursier/core/Reconciliation;
           10     134     4 reconciliation   Lcoursier/core/Reconciliation;
            0     145     0 cache$1   Ljava/util/concurrent/ConcurrentHashMap;
            0     145     1 actualReconciliation$1   Lscala/collection/immutable/Seq;
            0     145     2     m   Lcoursier/core/Module;
    MethodParameters:
      Name                           Flags
      cache$1                        final
      actualReconciliation$1         final
      m                              final

  public static final coursier.core.Resolution $anonfun$initialResolution$5();
    descriptor: ()Lcoursier/core/Resolution;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #770                // Field coursier/package$Resolution$.MODULE$:Lcoursier/package$Resolution$;
         3: invokevirtual #772                // Method coursier/package$Resolution$.apply:()Lcoursier/core/Resolution;
         6: areturn
      LineNumberTable:
        line 263: 0

  public static final boolean $anonfun$initialResolution$6(coursier.params.ResolutionParams, coursier.core.Dependency);
    descriptor: (Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #778                // Method coursier/params/ResolutionParams.keepOptionalDependencies:()Z
         4: ifne          14
         7: aload_1
         8: invokevirtual #781                // Method coursier/core/Dependency.optional:()Z
        11: ifne          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 14 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 270: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0 params$1   Lcoursier/params/ResolutionParams;
            0      20     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      params$1                       final
      dep                            final

  public static final coursier.core.Activation$Os $anonfun$initialResolution$7(coursier.params.ResolutionParams);
    descriptor: (Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #784                // Method coursier/params/ResolutionParams.useSystemOsInfo:()Z
         4: ifeq          31
         7: getstatic     #787                // Field coursier/core/Activation$Os$.MODULE$:Lcoursier/core/Activation$Os$;
        10: getstatic     #792                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        13: invokevirtual #796                // Method scala/sys/package$.props:()Lscala/sys/SystemProperties;
        16: getstatic     #434                // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        19: invokevirtual #438                // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        22: invokevirtual #799                // Method scala/sys/SystemProperties.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        25: invokevirtual #803                // Method coursier/core/Activation$Os$.fromProperties:(Lscala/collection/immutable/Map;)Lcoursier/core/Activation$Os;
        28: goto          37
        31: getstatic     #787                // Field coursier/core/Activation$Os$.MODULE$:Lcoursier/core/Activation$Os$;
        34: invokevirtual #805                // Method coursier/core/Activation$Os$.empty:()Lcoursier/core/Activation$Os;
        37: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 31 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class coursier/core/Activation$Os ]
      LineNumberTable:
        line 274: 0
        line 276: 7
        line 278: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0 params$1   Lcoursier/params/ResolutionParams;
    MethodParameters:
      Name                           Flags
      params$1                       final

  public static final scala.Option $anonfun$initialResolution$9(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #813                // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #816                // Method coursier/core/Parse$.version:(Ljava/lang/String;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 285: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final scala.Option $anonfun$initialResolution$8(coursier.params.ResolutionParams);
    descriptor: (Lcoursier/params/ResolutionParams;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #819                // Method coursier/params/ResolutionParams.useSystemJdkVersion:()Z
         4: ifeq          30
         7: getstatic     #792                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        10: invokevirtual #796                // Method scala/sys/package$.props:()Lscala/sys/SystemProperties;
        13: ldc_w         #821                // String java.version
        16: invokevirtual #823                // Method scala/sys/SystemProperties.get:(Ljava/lang/String;)Lscala/Option;
        19: invokedynamic #828,  0            // InvokeDynamic #11:apply:()Lscala/Function1;
        24: invokevirtual #831                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        27: goto          33
        30: getstatic     #275                // Field scala/None$.MODULE$:Lscala/None$;
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 30 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 283: 0
        line 285: 7
        line 287: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0 params$1   Lcoursier/params/ResolutionParams;
    MethodParameters:
      Name                           Flags
      params$1                       final

  public static final scala.Tuple2 $anonfun$initialResolution$10(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #834                // String !
         4: invokevirtual #154                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
         7: ifeq          43
        10: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        13: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        16: getstatic     #839                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        19: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        22: aload_0
        23: invokevirtual #842                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        26: iconst_1
        27: invokevirtual #845                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        30: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        33: iconst_0
        34: invokestatic  #851                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        37: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        40: goto          60
        43: getstatic     #159                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
        46: getstatic     #164                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        49: aload_0
        50: invokevirtual #187                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        53: iconst_1
        54: invokestatic  #851                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        57: invokevirtual #191                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        60: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 43 /* same */
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0     p   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      p                              final

  public static final coursier.error.ResolutionError$CantDownloadModule $anonfun$validate$1(coursier.core.Resolution, scala.Tuple2);
    descriptor: (Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=8, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        70
         6: aload_3
         7: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: checkcast     #721                // class scala/Tuple2
        13: astore        4
        15: aload_3
        16: invokevirtual #755                // Method scala/Tuple2._2:()Ljava/lang/Object;
        19: checkcast     #203                // class scala/collection/immutable/Seq
        22: astore        5
        24: aload         4
        26: ifnull        67
        29: aload         4
        31: invokevirtual #724                // Method scala/Tuple2._1:()Ljava/lang/Object;
        34: checkcast     #757                // class coursier/core/Module
        37: astore        6
        39: aload         4
        41: invokevirtual #755                // Method scala/Tuple2._2:()Ljava/lang/Object;
        44: checkcast     #144                // class java/lang/String
        47: astore        7
        49: new           #26                 // class coursier/error/ResolutionError$CantDownloadModule
        52: dup
        53: aload_0
        54: aload         6
        56: aload         7
        58: aload         5
        60: invokespecial #856                // Method coursier/error/ResolutionError$CantDownloadModule."<init>":(Lcoursier/core/Resolution;Lcoursier/core/Module;Ljava/lang/String;Lscala/collection/immutable/Seq;)V
        63: astore_2
        64: goto          82
        67: goto          73
        70: goto          73
        73: new           #533                // class scala/MatchError
        76: dup
        77: aload_3
        78: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        81: athrow
        82: aload_2
        83: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = [ class coursier/core/Resolution, class scala/Tuple2, top, class scala/Tuple2, class scala/Tuple2, class scala/collection/immutable/Seq ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class coursier/core/Resolution, class scala/Tuple2, class coursier/error/ResolutionError$CantDownloadModule, class scala/Tuple2, class scala/Tuple2, class scala/collection/immutable/Seq, class coursier/core/Module, class java/lang/String ]
          stack = []
      LineNumberTable:
        line 327: 0
        line 328: 2
        line 329: 49
        line 328: 67
        line 327: 73
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      28     6 module   Lcoursier/core/Module;
           49      18     7 version   Ljava/lang/String;
           24      46     5 errors   Lscala/collection/immutable/Seq;
            0      84     0 res$1   Lcoursier/core/Resolution;
            0      84     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      res$1                          final
      x0$1                           final

  public static final void $anonfun$validate$2(scala.Tuple3);
    descriptor: (Lscala/Tuple3;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=9, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        125
         6: aload_2
         7: invokevirtual #863                // Method scala/Tuple3._1:()Ljava/lang/Object;
        10: checkcast     #568                // class scala/runtime/BoxedUnit
        13: astore_3
        14: aload_2
        15: invokevirtual #864                // Method scala/Tuple3._2:()Ljava/lang/Object;
        18: checkcast     #568                // class scala/runtime/BoxedUnit
        21: astore        4
        23: aload_2
        24: invokevirtual #867                // Method scala/Tuple3._3:()Ljava/lang/Object;
        27: checkcast     #568                // class scala/runtime/BoxedUnit
        30: astore        5
        32: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        35: aload_3
        36: astore        6
        38: dup
        39: ifnonnull     51
        42: pop
        43: aload         6
        45: ifnull        59
        48: goto          122
        51: aload         6
        53: invokevirtual #521                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          122
        59: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        62: aload         4
        64: astore        7
        66: dup
        67: ifnonnull     79
        70: pop
        71: aload         7
        73: ifnull        87
        76: goto          122
        79: aload         7
        81: invokevirtual #521                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        84: ifeq          122
        87: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        90: aload         5
        92: astore        8
        94: dup
        95: ifnonnull     107
        98: pop
        99: aload         8
       101: ifnull        115
       104: goto          122
       107: aload         8
       109: invokevirtual #521                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       112: ifeq          122
       115: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       118: astore_1
       119: goto          137
       122: goto          128
       125: goto          128
       128: new           #533                // class scala/MatchError
       131: dup
       132: aload_2
       133: invokespecial #534                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       136: athrow
       137: return
      StackMapTable: number_of_entries = 10
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class scala/Tuple3, top, class scala/Tuple3, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit ]
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/Tuple3, top, class scala/Tuple3, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit ]
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/Tuple3, top, class scala/Tuple3, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit ]
          stack = [ class scala/runtime/BoxedUnit ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/Tuple3, top, class scala/Tuple3 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple3, class scala/runtime/BoxedUnit, class scala/Tuple3, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit, class scala/runtime/BoxedUnit ]
          stack = []
      LineNumberTable:
        line 348: 0
        line 349: 2
        line 348: 128
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     138     0  x0$2   Lscala/Tuple3;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  private coursier.Resolve$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #869                // Method coursier/PlatformResolve."<init>":()V
         4: return
      LineNumberTable:
        line 179: 0
        line 21: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/Resolve$;

  public static final java.lang.Object $anonfun$initialResolution$6$adapted(coursier.params.ResolutionParams, coursier.core.Dependency);
    descriptor: (Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #871                // Method $anonfun$initialResolution$6:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Z
         5: invokestatic  #851                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 270: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 params$1   Lcoursier/params/ResolutionParams;
            0       9     1   dep   Lcoursier/core/Dependency;
    MethodParameters:
      Name                           Flags
      params$1                       final
      dep                            final

  public static final java.lang.Object $anonfun$validate$2$adapted(scala.Tuple3);
    descriptor: (Lscala/Tuple3;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #873                // Method $anonfun$validate$2:(Lscala/Tuple3;)V
         4: getstatic     #572                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 348: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$2   Lscala/Tuple3;
    MethodParameters:
      Name                           Flags
      x0$2                           final

  public static final java.lang.Object $anonfun$initialResolution$4$adapted(coursier.core.Module, scala.Tuple2);
    descriptor: (Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #875                // Method $anonfun$initialResolution$4:(Lcoursier/core/Module;Lscala/Tuple2;)Z
         5: invokestatic  #851                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   m$1   Lcoursier/core/Module;
            0       9     1  x$11   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      m$1                            final
      x$11                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #887,  0            // InvokeDynamic #12:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Using=class coursier/cache/CacheLogger$Using of class coursier/cache/CacheLogger
  public static final #17= #14 of #16;    // Os=class coursier/core/Activation$Os of class coursier/core/Activation
  public static #20= #19 of #16;          // =class coursier/core/Activation$Os$ of class coursier/core/Activation
  public static #20= #22 of #24;          // =class coursier/core/Reconciliation$Default$ of class coursier/core/Reconciliation
  public static final #29= #26 of #28;    // CantDownloadModule=class coursier/error/ResolutionError$CantDownloadModule of class coursier/error/ResolutionError
  public static final #32= #31 of #28;    // ConflictingDependencies=class coursier/error/ResolutionError$ConflictingDependencies of class coursier/error/ResolutionError
  public static final #35= #34 of #28;    // MaximumIterationReached=class coursier/error/ResolutionError$MaximumIterationReached of class coursier/error/ResolutionError
  public static #20= #37 of #39;          // =class coursier/package$Module$ of class coursier/package
  public static #20= #41 of #39;          // =class coursier/package$Resolution$ of class coursier/package
  public static #20= #43 of #39;          // =class coursier/package$ResolutionExtensions$ of class coursier/package
  public static final #48= #45 of #47;    // FailureBuilder=class coursier/util/ValidationNel$FailureBuilder of class coursier/util/ValidationNel
  public static final #51= #50 of #47;    // FailuresBuilder=class coursier/util/ValidationNel$FailuresBuilder of class coursier/util/ValidationNel
  public static final #54= #53 of #47;    // SuccessBuilder=class coursier/util/ValidationNel$SuccessBuilder of class coursier/util/ValidationNel
  public static final #59= #56 of #58;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #20= #61 of #63;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
  public static final #68= #65 of #67;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #20= #70 of #67;          // =class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
SourceFile: "Resolve.scala"
BootstrapMethods:
  0: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #241 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #246 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$1:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #247 (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #248 5
      #249 1
      #247 (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  1: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #286 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$3:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
      #288 (Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
      #248 5
      #249 1
      #288 (Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
  2: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #296 ()Ljava/lang/Object;
      #301 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$5:()Lcoursier/core/Resolution;
      #302 ()Lcoursier/core/Resolution;
      #248 5
      #249 1
      #302 ()Lcoursier/core/Resolution;
  3: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #358 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$6$adapted:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #360 (Lcoursier/core/Dependency;)Ljava/lang/Object;
      #248 5
      #249 1
      #360 (Lcoursier/core/Dependency;)Ljava/lang/Object;
  4: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #296 ()Ljava/lang/Object;
      #379 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$7:(Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
      #381 ()Lcoursier/core/Activation$Os;
      #248 5
      #249 1
      #381 ()Lcoursier/core/Activation$Os;
  5: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #296 ()Ljava/lang/Object;
      #396 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$8:(Lcoursier/params/ResolutionParams;)Lscala/Option;
      #397 ()Lscala/Option;
      #248 5
      #249 1
      #397 ()Lscala/Option;
  6: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #420 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$10:(Ljava/lang/String;)Lscala/Tuple2;
      #421 (Ljava/lang/String;)Lscala/Tuple2;
      #248 5
      #249 1
      #421 (Ljava/lang/String;)Lscala/Tuple2;
  7: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #591 REF_invokeStatic coursier/Resolve$.$anonfun$validate$1:(Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
      #593 (Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
      #248 5
      #249 1
      #593 (Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
  8: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #655 REF_invokeStatic coursier/Resolve$.$anonfun$validate$2$adapted:(Lscala/Tuple3;)Ljava/lang/Object;
      #656 (Lscala/Tuple3;)Ljava/lang/Object;
      #248 5
      #249 1
      #656 (Lscala/Tuple3;)Ljava/lang/Object;
  9: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #711 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$2:(Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #713 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #248 5
      #249 1
      #713 (Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
  10: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #743 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$4$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
      #745 (Lscala/Tuple2;)Ljava/lang/Object;
      #248 5
      #249 1
      #745 (Lscala/Tuple2;)Ljava/lang/Object;
  11: #256 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #281 (Ljava/lang/Object;)Ljava/lang/Object;
      #826 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$9:(Ljava/lang/String;)Lscala/Option;
      #827 (Ljava/lang/String;)Lscala/Option;
      #248 5
      #249 1
      #827 (Ljava/lang/String;)Lscala/Option;
  12: #884 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #246 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$1:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      #420 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$10:(Ljava/lang/String;)Lscala/Tuple2;
      #711 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$2:(Lscala/Function1;Lscala/Function1;Lcoursier/core/Dependency;)Lcoursier/core/Dependency;
      #286 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$3:(Ljava/util/concurrent/ConcurrentHashMap;Lscala/collection/immutable/Seq;Lcoursier/core/Module;)Lcoursier/core/Reconciliation;
      #743 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$4$adapted:(Lcoursier/core/Module;Lscala/Tuple2;)Ljava/lang/Object;
      #301 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$5:()Lcoursier/core/Resolution;
      #358 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$6$adapted:(Lcoursier/params/ResolutionParams;Lcoursier/core/Dependency;)Ljava/lang/Object;
      #379 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$7:(Lcoursier/params/ResolutionParams;)Lcoursier/core/Activation$Os;
      #396 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$8:(Lcoursier/params/ResolutionParams;)Lscala/Option;
      #826 REF_invokeStatic coursier/Resolve$.$anonfun$initialResolution$9:(Ljava/lang/String;)Lscala/Option;
      #591 REF_invokeStatic coursier/Resolve$.$anonfun$validate$1:(Lcoursier/core/Resolution;Lscala/Tuple2;)Lcoursier/error/ResolutionError$CantDownloadModule;
      #655 REF_invokeStatic coursier/Resolve$.$anonfun$validate$2$adapted:(Lscala/Tuple3;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x95 (unknown attribute)
   01 01 00 1D 00 F4 00 F5 01 01 A4 01 A5 01 02 BF
   02 C0 01 01 1C 01 1D 01 02 D2 02 D3 01 02 E9 02
   EA 01 01 2B 01 2C 01 03 0B 03 0C 01 01 66 01 67
   01 01 7B 01 7C 01 01 8C 01 8D 01 03 2C 03 2D 01
   02 51 02 52 01 03 60 03 61 01 02 91 02 92 01 00
   51 00 50 01 00 6F 00 70 01 00 56 00 57 01 00 56
   00 6B 01 00 56 02 AF 01 00 56 02 B7 01 00 74 00
   75 01 01 E7 01 E8 01 01 F0 01 78 01 01 F2 01 F3
   01 02 28 02 29 01 02 2B 01 78 01 02 2D 02 2E 01
   02 B9 01 29 01
  Scala: length = 0x0 (unknown attribute)

