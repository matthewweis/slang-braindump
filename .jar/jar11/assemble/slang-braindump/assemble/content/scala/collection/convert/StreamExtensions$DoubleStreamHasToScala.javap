Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.class
  Last modified May 29, 2022; size 3496 bytes
  SHA-256 checksum e9465e6cdea135e681e115fe5e6f82b638f2b70588319ba6ee827afa44acf024
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$DoubleStreamHasToScala
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$DoubleStreamHasToScala
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 4, attributes: 4
Constant pool:
    #1 = Utf8               scala/collection/convert/StreamExtensions$DoubleStreamHasToScala
    #2 = Class              #1            // scala/collection/convert/StreamExtensions$DoubleStreamHasToScala
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               StreamExtensions.scala
    #6 = Utf8               java/util/PrimitiveIterator$OfDouble
    #7 = Class              #6            // java/util/PrimitiveIterator$OfDouble
    #8 = Utf8               java/util/PrimitiveIterator
    #9 = Class              #8            // java/util/PrimitiveIterator
   #10 = Utf8               OfDouble
   #11 = Utf8               scala/collection/convert/AsScalaExtensions$IteratorHasAsScala
   #12 = Class              #11           // scala/collection/convert/AsScalaExtensions$IteratorHasAsScala
   #13 = Utf8               scala/collection/convert/AsScalaExtensions
   #14 = Class              #13           // scala/collection/convert/AsScalaExtensions
   #15 = Utf8               IteratorHasAsScala
   #16 = Utf8               scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo
   #17 = Class              #16           // scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo
   #18 = Utf8               scala/collection/convert/StreamExtensions
   #19 = Class              #18           // scala/collection/convert/StreamExtensions
   #20 = Utf8               AccumulatorFactoryInfo
   #21 = Utf8               DoubleStreamHasToScala
   #22 = Utf8               stream
   #23 = Utf8               Ljava/util/stream/DoubleStream;
   #24 = Utf8               $outer
   #25 = Utf8               Lscala/collection/convert/StreamExtensions;
   #26 = Utf8               toScala
   #27 = Utf8               (Lscala/collection/Factory;Lscala/collection/convert/StreamExtensions$AccumulatorFactoryInfo;)Ljava/lang/Object;
   #28 = Utf8               <C1:Ljava/lang/Object;>(Lscala/collection/Factory<Ljava/lang/Object;TC1;>;Lscala/collection/convert/StreamExtensions$AccumulatorFactoryInfo<Ljava/lang/Object;TC1;>;)TC1;
   #29 = Utf8               factory
   #30 = Utf8               info
   #31 = Utf8               companion
   #32 = Utf8               ()Ljava/lang/Object;
   #33 = NameAndType        #31:#32       // companion:()Ljava/lang/Object;
   #34 = InterfaceMethodref #17.#33       // scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo.companion:()Ljava/lang/Object;
   #35 = Utf8               scala/jdk/AnyAccumulator$
   #36 = Class              #35           // scala/jdk/AnyAccumulator$
   #37 = Utf8               MODULE$
   #38 = Utf8               Lscala/jdk/AnyAccumulator$;
   #39 = NameAndType        #37:#38       // MODULE$:Lscala/jdk/AnyAccumulator$;
   #40 = Fieldref           #36.#39       // scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
   #41 = Utf8               equals
   #42 = Utf8               (Ljava/lang/Object;)Z
   #43 = NameAndType        #41:#42       // equals:(Ljava/lang/Object;)Z
   #44 = Methodref          #4.#43        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #45 = NameAndType        #22:#23       // stream:Ljava/util/stream/DoubleStream;
   #46 = Fieldref           #2.#45        // scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.stream:Ljava/util/stream/DoubleStream;
   #47 = Utf8               supplier
   #48 = Utf8               ()Ljava/util/function/Supplier;
   #49 = NameAndType        #47:#48       // supplier:()Ljava/util/function/Supplier;
   #50 = Methodref          #36.#49       // scala/jdk/AnyAccumulator$.supplier:()Ljava/util/function/Supplier;
   #51 = Utf8               unboxedDoubleAdder
   #52 = Utf8               ()Ljava/util/function/ObjDoubleConsumer;
   #53 = NameAndType        #51:#52       // unboxedDoubleAdder:()Ljava/util/function/ObjDoubleConsumer;
   #54 = Methodref          #36.#53       // scala/jdk/AnyAccumulator$.unboxedDoubleAdder:()Ljava/util/function/ObjDoubleConsumer;
   #55 = Utf8               merger
   #56 = Utf8               ()Ljava/util/function/BiConsumer;
   #57 = NameAndType        #55:#56       // merger:()Ljava/util/function/BiConsumer;
   #58 = Methodref          #36.#57       // scala/jdk/AnyAccumulator$.merger:()Ljava/util/function/BiConsumer;
   #59 = Utf8               java/util/stream/DoubleStream
   #60 = Class              #59           // java/util/stream/DoubleStream
   #61 = Utf8               collect
   #62 = Utf8               (Ljava/util/function/Supplier;Ljava/util/function/ObjDoubleConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
   #63 = NameAndType        #61:#62       // collect:(Ljava/util/function/Supplier;Ljava/util/function/ObjDoubleConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
   #64 = InterfaceMethodref #60.#63       // java/util/stream/DoubleStream.collect:(Ljava/util/function/Supplier;Ljava/util/function/ObjDoubleConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
   #65 = Utf8               scala/jdk/DoubleAccumulator$
   #66 = Class              #65           // scala/jdk/DoubleAccumulator$
   #67 = Utf8               Lscala/jdk/DoubleAccumulator$;
   #68 = NameAndType        #37:#67       // MODULE$:Lscala/jdk/DoubleAccumulator$;
   #69 = Fieldref           #66.#68       // scala/jdk/DoubleAccumulator$.MODULE$:Lscala/jdk/DoubleAccumulator$;
   #70 = Utf8               doubleAcc$1
   #71 = Utf8               ()Lscala/jdk/DoubleAccumulator;
   #72 = NameAndType        #70:#71       // doubleAcc$1:()Lscala/jdk/DoubleAccumulator;
   #73 = Methodref          #2.#72        // scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.doubleAcc$1:()Lscala/jdk/DoubleAccumulator;
   #74 = Utf8               isParallel
   #75 = Utf8               ()Z
   #76 = NameAndType        #74:#75       // isParallel:()Z
   #77 = InterfaceMethodref #60.#76       // java/util/stream/DoubleStream.isParallel:()Z
   #78 = Utf8               scala/jdk/DoubleAccumulator
   #79 = Class              #78           // scala/jdk/DoubleAccumulator
   #80 = Utf8               to
   #81 = Utf8               (Lscala/collection/Factory;)Ljava/lang/Object;
   #82 = NameAndType        #80:#81       // to:(Lscala/collection/Factory;)Ljava/lang/Object;
   #83 = Methodref          #79.#82       // scala/jdk/DoubleAccumulator.to:(Lscala/collection/Factory;)Ljava/lang/Object;
   #84 = Utf8               scala/jdk/CollectionConverters$
   #85 = Class              #84           // scala/jdk/CollectionConverters$
   #86 = Utf8               Lscala/jdk/CollectionConverters$;
   #87 = NameAndType        #37:#86       // MODULE$:Lscala/jdk/CollectionConverters$;
   #88 = Fieldref           #85.#87       // scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
   #89 = Utf8               iterator
   #90 = Utf8               ()Ljava/util/PrimitiveIterator$OfDouble;
   #91 = NameAndType        #89:#90       // iterator:()Ljava/util/PrimitiveIterator$OfDouble;
   #92 = InterfaceMethodref #60.#91       // java/util/stream/DoubleStream.iterator:()Ljava/util/PrimitiveIterator$OfDouble;
   #93 = Utf8               <init>
   #94 = Utf8               (Lscala/collection/convert/AsScalaExtensions;Ljava/util/Iterator;)V
   #95 = NameAndType        #93:#94       // "<init>":(Lscala/collection/convert/AsScalaExtensions;Ljava/util/Iterator;)V
   #96 = Methodref          #12.#95       // scala/collection/convert/AsScalaExtensions$IteratorHasAsScala."<init>":(Lscala/collection/convert/AsScalaExtensions;Ljava/util/Iterator;)V
   #97 = Utf8               asScala
   #98 = Utf8               ()Lscala/collection/Iterator;
   #99 = NameAndType        #97:#98       // asScala:()Lscala/collection/Iterator;
  #100 = Methodref          #12.#99       // scala/collection/convert/AsScalaExtensions$IteratorHasAsScala.asScala:()Lscala/collection/Iterator;
  #101 = Utf8               scala/collection/Factory
  #102 = Class              #101          // scala/collection/Factory
  #103 = Utf8               fromSpecific
  #104 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #105 = NameAndType        #103:#104     // fromSpecific:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #106 = InterfaceMethodref #102.#105     // scala/collection/Factory.fromSpecific:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
  #107 = Utf8               this
  #108 = Utf8               Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
  #109 = Utf8               Lscala/collection/Factory;
  #110 = Utf8               Lscala/collection/convert/StreamExtensions$AccumulatorFactoryInfo;
  #111 = Utf8               IteratorHasAsScala_this
  #112 = Utf8               IteratorHasAsScala_i
  #113 = Utf8               Ljava/util/Iterator;
  #114 = Utf8               scala$collection$convert$StreamExtensions$DoubleStreamHasToScala$$$outer
  #115 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #116 = NameAndType        #24:#25       // $outer:Lscala/collection/convert/StreamExtensions;
  #117 = Fieldref           #2.#116       // scala/collection/convert/StreamExtensions$DoubleStreamHasToScala.$outer:Lscala/collection/convert/StreamExtensions;
  #118 = Methodref          #66.#49       // scala/jdk/DoubleAccumulator$.supplier:()Ljava/util/function/Supplier;
  #119 = Utf8               adder
  #120 = NameAndType        #119:#52      // adder:()Ljava/util/function/ObjDoubleConsumer;
  #121 = Methodref          #66.#120      // scala/jdk/DoubleAccumulator$.adder:()Ljava/util/function/ObjDoubleConsumer;
  #122 = Methodref          #66.#57       // scala/jdk/DoubleAccumulator$.merger:()Ljava/util/function/BiConsumer;
  #123 = Utf8               (Lscala/collection/convert/StreamExtensions;Ljava/util/stream/DoubleStream;)V
  #124 = Utf8               ()V
  #125 = NameAndType        #93:#124      // "<init>":()V
  #126 = Methodref          #4.#125       // java/lang/Object."<init>":()V
  #127 = Utf8               Code
  #128 = Utf8               StackMapTable
  #129 = Utf8               LineNumberTable
  #130 = Utf8               LocalVariableTable
  #131 = Utf8               Signature
  #132 = Utf8               MethodParameters
  #133 = Utf8               InnerClasses
  #134 = Utf8               SourceFile
  #135 = Utf8               ScalaInlineInfo
  #136 = Utf8               Scala
{
  private final java.util.stream.DoubleStream stream;
    descriptor: Ljava/util/stream/DoubleStream;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <C1 extends java.lang.Object> C1 toScala(scala.collection.Factory<java.lang.Object, C1>, scala.collection.convert.StreamExtensions$AccumulatorFactoryInfo<java.lang.Object, C1>);
    descriptor: (Lscala/collection/Factory;Lscala/collection/convert/StreamExtensions$AccumulatorFactoryInfo;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=7, args_size=3
         0: aload_2
         1: invokeinterface #34,  1           // InterfaceMethod scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo.companion:()Ljava/lang/Object;
         6: getstatic     #40                 // Field scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
         9: astore_3
        10: dup
        11: ifnonnull     18
        14: pop
        15: goto          53
        18: aload_3
        19: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        22: ifeq          53
        25: aload_0
        26: getfield      #46                 // Field stream:Ljava/util/stream/DoubleStream;
        29: getstatic     #40                 // Field scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
        32: invokevirtual #50                 // Method scala/jdk/AnyAccumulator$.supplier:()Ljava/util/function/Supplier;
        35: getstatic     #40                 // Field scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
        38: invokevirtual #54                 // Method scala/jdk/AnyAccumulator$.unboxedDoubleAdder:()Ljava/util/function/ObjDoubleConsumer;
        41: getstatic     #40                 // Field scala/jdk/AnyAccumulator$.MODULE$:Lscala/jdk/AnyAccumulator$;
        44: invokevirtual #58                 // Method scala/jdk/AnyAccumulator$.merger:()Ljava/util/function/BiConsumer;
        47: invokeinterface #64,  4           // InterfaceMethod java/util/stream/DoubleStream.collect:(Ljava/util/function/Supplier;Ljava/util/function/ObjDoubleConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
        52: areturn
        53: aload_2
        54: invokeinterface #34,  1           // InterfaceMethod scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo.companion:()Ljava/lang/Object;
        59: getstatic     #69                 // Field scala/jdk/DoubleAccumulator$.MODULE$:Lscala/jdk/DoubleAccumulator$;
        62: astore        4
        64: dup
        65: ifnonnull     72
        68: pop
        69: goto          85
        72: aload         4
        74: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        77: ifeq          85
        80: aload_0
        81: invokespecial #73                 // Method doubleAcc$1:()Lscala/jdk/DoubleAccumulator;
        84: areturn
        85: aload_0
        86: getfield      #46                 // Field stream:Ljava/util/stream/DoubleStream;
        89: invokeinterface #77,  1           // InterfaceMethod java/util/stream/DoubleStream.isParallel:()Z
        94: ifeq          106
        97: aload_0
        98: invokespecial #73                 // Method doubleAcc$1:()Lscala/jdk/DoubleAccumulator;
       101: aload_1
       102: invokevirtual #83                 // Method scala/jdk/DoubleAccumulator.to:(Lscala/collection/Factory;)Ljava/lang/Object;
       105: areturn
       106: aload_1
       107: getstatic     #88                 // Field scala/jdk/CollectionConverters$.MODULE$:Lscala/jdk/CollectionConverters$;
       110: aload_0
       111: getfield      #46                 // Field stream:Ljava/util/stream/DoubleStream;
       114: invokeinterface #92,  1           // InterfaceMethod java/util/stream/DoubleStream.iterator:()Ljava/util/PrimitiveIterator$OfDouble;
       119: astore        6
       121: astore        5
       123: new           #12                 // class scala/collection/convert/AsScalaExtensions$IteratorHasAsScala
       126: dup
       127: aload         5
       129: aload         6
       131: invokespecial #96                 // Method scala/collection/convert/AsScalaExtensions$IteratorHasAsScala."<init>":(Lscala/collection/convert/AsScalaExtensions;Ljava/util/Iterator;)V
       134: aconst_null
       135: astore        5
       137: aconst_null
       138: astore        6
       140: invokevirtual #100                // Method scala/collection/convert/AsScalaExtensions$IteratorHasAsScala.asScala:()Lscala/collection/Iterator;
       143: invokeinterface #106,  2          // InterfaceMethod scala/collection/Factory.fromSpecific:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
       148: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/convert/StreamExtensions$DoubleStreamHasToScala, class scala/collection/Factory, class scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo, class scala/jdk/AnyAccumulator$ ]
          stack = [ class java/lang/Object ]
        frame_type = 34 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/collection/convert/StreamExtensions$DoubleStreamHasToScala, class scala/collection/Factory, class scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo, class scala/jdk/AnyAccumulator$, class scala/jdk/DoubleAccumulator$ ]
          stack = [ class java/lang/Object ]
        frame_type = 12 /* same */
        frame_type = 20 /* same */
      LineNumberTable:
        line 354: 0
        line 355: 53
        line 356: 85
        line 357: 106
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     149     0  this   Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
            0     149     1 factory   Lscala/collection/Factory;
            0     149     2  info   Lscala/collection/convert/StreamExtensions$AccumulatorFactoryInfo;
          123      11     5 IteratorHasAsScala_this   Lscala/jdk/CollectionConverters$;
          123      11     6 IteratorHasAsScala_i   Ljava/util/Iterator;
    Signature: #28                          // <C1:Ljava/lang/Object;>(Lscala/collection/Factory<Ljava/lang/Object;TC1;>;Lscala/collection/convert/StreamExtensions$AccumulatorFactoryInfo<Ljava/lang/Object;TC1;>;)TC1;
    MethodParameters:
      Name                           Flags
      factory                        final
      info                           final

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$DoubleStreamHasToScala$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 334: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;

  private final scala.jdk.DoubleAccumulator doubleAcc$1();
    descriptor: ()Lscala/jdk/DoubleAccumulator;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field stream:Ljava/util/stream/DoubleStream;
         4: getstatic     #69                 // Field scala/jdk/DoubleAccumulator$.MODULE$:Lscala/jdk/DoubleAccumulator$;
         7: invokevirtual #118                // Method scala/jdk/DoubleAccumulator$.supplier:()Ljava/util/function/Supplier;
        10: getstatic     #69                 // Field scala/jdk/DoubleAccumulator$.MODULE$:Lscala/jdk/DoubleAccumulator$;
        13: invokevirtual #121                // Method scala/jdk/DoubleAccumulator$.adder:()Ljava/util/function/ObjDoubleConsumer;
        16: getstatic     #69                 // Field scala/jdk/DoubleAccumulator$.MODULE$:Lscala/jdk/DoubleAccumulator$;
        19: invokevirtual #122                // Method scala/jdk/DoubleAccumulator$.merger:()Ljava/util/function/BiConsumer;
        22: invokeinterface #64,  4           // InterfaceMethod java/util/stream/DoubleStream.collect:(Ljava/util/function/Supplier;Ljava/util/function/ObjDoubleConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;
        27: checkcast     #79                 // class scala/jdk/DoubleAccumulator
        30: areturn
      LineNumberTable:
        line 353: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;

  public scala.collection.convert.StreamExtensions$DoubleStreamHasToScala(scala.collection.convert.StreamExtensions, java.util.stream.DoubleStream);
    descriptor: (Lscala/collection/convert/StreamExtensions;Ljava/util/stream/DoubleStream;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #46                 // Field stream:Ljava/util/stream/DoubleStream;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #117                // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #126                // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 334: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$DoubleStreamHasToScala;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2 stream   Ljava/util/stream/DoubleStream;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      stream                         final
}
InnerClasses:
  public static #10= #7 of #9;            // OfDouble=class java/util/PrimitiveIterator$OfDouble of class java/util/PrimitiveIterator
  public #15= #12 of #14;                 // IteratorHasAsScala=class scala/collection/convert/AsScalaExtensions$IteratorHasAsScala of class scala/collection/convert/AsScalaExtensions
  public static #20= #17 of #19;          // AccumulatorFactoryInfo=class scala/collection/convert/StreamExtensions$AccumulatorFactoryInfo of class scala/collection/convert/StreamExtensions
  public #21= #2 of #19;                  // DoubleStreamHasToScala=class scala/collection/convert/StreamExtensions$DoubleStreamHasToScala of class scala/collection/convert/StreamExtensions
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 5D 00 7B 00 00 46 00 47 01 00 72
   00 73 00 00 1A 00 1B 00
  Scala: length = 0x0 (unknown attribute)

