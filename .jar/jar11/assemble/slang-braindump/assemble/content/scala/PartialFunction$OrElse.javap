Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/PartialFunction$OrElse.class
  Last modified May 29, 2022; size 2907 bytes
  SHA-256 checksum ebf9bb2c0f620445a6bd7ee655c0dedbe5138c2fa00dd0fc4b91a4ff65ad30c2
  Compiled from "PartialFunction.scala"
public class scala.PartialFunction$OrElse<A extends java.lang.Object, B extends java.lang.Object> extends scala.runtime.AbstractPartialFunction<A, B> implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/PartialFunction$OrElse
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 2, methods: 9, attributes: 5
Constant pool:
   #1 = Utf8               scala/PartialFunction$OrElse
   #2 = Class              #1             // scala/PartialFunction$OrElse
   #3 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;>Lscala/runtime/AbstractPartialFunction<TA;TB;>;Ljava/io/Serializable;
   #4 = Utf8               scala/runtime/AbstractPartialFunction
   #5 = Class              #4             // scala/runtime/AbstractPartialFunction
   #6 = Utf8               java/io/Serializable
   #7 = Class              #6             // java/io/Serializable
   #8 = Utf8               PartialFunction.scala
   #9 = Utf8               scala/PartialFunction
  #10 = Class              #9             // scala/PartialFunction
  #11 = Utf8               OrElse
  #12 = Utf8               f1
  #13 = Utf8               Lscala/PartialFunction;
  #14 = Utf8               Lscala/PartialFunction<TA;TB;>;
  #15 = Utf8               f2
  #16 = Utf8               isDefinedAt
  #17 = Utf8               (Ljava/lang/Object;)Z
  #18 = Utf8               (TA;)Z
  #19 = Utf8               x
  #20 = NameAndType        #12:#13        // f1:Lscala/PartialFunction;
  #21 = Fieldref           #2.#20         // scala/PartialFunction$OrElse.f1:Lscala/PartialFunction;
  #22 = NameAndType        #16:#17        // isDefinedAt:(Ljava/lang/Object;)Z
  #23 = InterfaceMethodref #10.#22        // scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
  #24 = NameAndType        #15:#13        // f2:Lscala/PartialFunction;
  #25 = Fieldref           #2.#24         // scala/PartialFunction$OrElse.f2:Lscala/PartialFunction;
  #26 = Utf8               this
  #27 = Utf8               Lscala/PartialFunction$OrElse;
  #28 = Utf8               Ljava/lang/Object;
  #29 = Utf8               apply
  #30 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #31 = Utf8               (TA;)TB;
  #32 = Utf8               applyOrElse
  #33 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #34 = NameAndType        #32:#33        // applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #35 = InterfaceMethodref #10.#34        // scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #36 = Utf8               <A1:TA;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
  #37 = Utf8               default
  #38 = Utf8               scala/PartialFunction$
  #39 = Class              #38            // scala/PartialFunction$
  #40 = Utf8               MODULE$
  #41 = Utf8               Lscala/PartialFunction$;
  #42 = NameAndType        #40:#41        // MODULE$:Lscala/PartialFunction$;
  #43 = Fieldref           #39.#42        // scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
  #44 = Utf8               scala$PartialFunction$$checkFallback
  #45 = Utf8               ()Lscala/Function1;
  #46 = NameAndType        #44:#45        // scala$PartialFunction$$checkFallback:()Lscala/Function1;
  #47 = Methodref          #39.#46        // scala/PartialFunction$.scala$PartialFunction$$checkFallback:()Lscala/Function1;
  #48 = Utf8               scala$PartialFunction$$fallbackOccurred
  #49 = NameAndType        #48:#17        // scala$PartialFunction$$fallbackOccurred:(Ljava/lang/Object;)Z
  #50 = Methodref          #39.#49        // scala/PartialFunction$.scala$PartialFunction$$fallbackOccurred:(Ljava/lang/Object;)Z
  #51 = Utf8               z
  #52 = Utf8               Lscala/Function1;
  #53 = Utf8               java/lang/Object
  #54 = Class              #53            // java/lang/Object
  #55 = Utf8               orElse
  #56 = Utf8               (Lscala/PartialFunction;)Lscala/PartialFunction$OrElse;
  #57 = Utf8               <A1:TA;B1:Ljava/lang/Object;>(Lscala/PartialFunction<TA1;TB1;>;)Lscala/PartialFunction$OrElse<TA1;TB1;>;
  #58 = Utf8               that
  #59 = Utf8               (Lscala/PartialFunction;)Lscala/PartialFunction;
  #60 = NameAndType        #55:#59        // orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
  #61 = InterfaceMethodref #10.#60        // scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
  #62 = Utf8               <init>
  #63 = Utf8               (Lscala/PartialFunction;Lscala/PartialFunction;)V
  #64 = NameAndType        #62:#63        // "<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
  #65 = Methodref          #2.#64         // scala/PartialFunction$OrElse."<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
  #66 = Utf8               andThen
  #67 = Utf8               (Lscala/Function1;)Lscala/PartialFunction$OrElse;
  #68 = Utf8               <C:Ljava/lang/Object;>(Lscala/Function1<TB;TC;>;)Lscala/PartialFunction$OrElse<TA;TC;>;
  #69 = Utf8               k
  #70 = Utf8               (Lscala/Function1;)Lscala/PartialFunction;
  #71 = NameAndType        #66:#70        // andThen:(Lscala/Function1;)Lscala/PartialFunction;
  #72 = InterfaceMethodref #10.#71        // scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
  #73 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #74 = Utf8               g
  #75 = NameAndType        #66:#67        // andThen:(Lscala/Function1;)Lscala/PartialFunction$OrElse;
  #76 = Methodref          #2.#75         // scala/PartialFunction$OrElse.andThen:(Lscala/Function1;)Lscala/PartialFunction$OrElse;
  #77 = NameAndType        #55:#56        // orElse:(Lscala/PartialFunction;)Lscala/PartialFunction$OrElse;
  #78 = Methodref          #2.#77         // scala/PartialFunction$OrElse.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction$OrElse;
  #79 = Utf8               (Lscala/PartialFunction<TA;TB;>;Lscala/PartialFunction<TA;TB;>;)V
  #80 = Utf8               ()V
  #81 = NameAndType        #62:#80        // "<init>":()V
  #82 = Methodref          #5.#81         // scala/runtime/AbstractPartialFunction."<init>":()V
  #83 = Utf8               Signature
  #84 = Utf8               Code
  #85 = Utf8               StackMapTable
  #86 = Utf8               LineNumberTable
  #87 = Utf8               LocalVariableTable
  #88 = Utf8               MethodParameters
  #89 = Utf8               InnerClasses
  #90 = Utf8               SourceFile
  #91 = Utf8               ScalaInlineInfo
  #92 = Utf8               Scala
{
  private final scala.PartialFunction<A, B> f1;
    descriptor: Lscala/PartialFunction;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/PartialFunction<TA;TB;>;

  private final scala.PartialFunction<A, B> f2;
    descriptor: Lscala/PartialFunction;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/PartialFunction<TA;TB;>;

  public boolean isDefinedAt(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #21                 // Field f1:Lscala/PartialFunction;
         4: aload_1
         5: invokeinterface #23,  2           // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
        10: ifne          26
        13: aload_0
        14: getfield      #25                 // Field f2:Lscala/PartialFunction;
        17: aload_1
        18: invokeinterface #23,  2           // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
        23: ifeq          28
        26: iconst_1
        27: ireturn
        28: iconst_0
        29: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 26 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 264: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lscala/PartialFunction$OrElse;
            0      30     1     x   Ljava/lang/Object;
    Signature: #18                          // (TA;)Z
    MethodParameters:
      Name                           Flags
      x                              final

  public B apply(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #21                 // Field f1:Lscala/PartialFunction;
         4: aload_1
         5: aload_0
         6: getfield      #25                 // Field f2:Lscala/PartialFunction;
         9: invokeinterface #35,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        14: areturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/PartialFunction$OrElse;
            0      15     1     x   Ljava/lang/Object;
    Signature: #31                          // (TA;)TB;
    MethodParameters:
      Name                           Flags
      x                              final

  public <A1 extends A, B1 extends java.lang.Object> B1 applyOrElse(A1, scala.Function1<A1, B1>);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: getfield      #21                 // Field f1:Lscala/PartialFunction;
         4: aload_1
         5: getstatic     #43                 // Field scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
         8: invokevirtual #47                 // Method scala/PartialFunction$.scala$PartialFunction$$checkFallback:()Lscala/Function1;
        11: invokeinterface #35,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        16: astore_3
        17: getstatic     #43                 // Field scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
        20: aload_3
        21: invokevirtual #50                 // Method scala/PartialFunction$.scala$PartialFunction$$fallbackOccurred:(Ljava/lang/Object;)Z
        24: ifne          29
        27: aload_3
        28: areturn
        29: aload_0
        30: getfield      #25                 // Field f2:Lscala/PartialFunction;
        33: aload_1
        34: aload_2
        35: invokeinterface #35,  3           // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        40: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 269: 0
        line 270: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      23     3     z   Ljava/lang/Object;
            0      41     0  this   Lscala/PartialFunction$OrElse;
            0      41     1     x   Ljava/lang/Object;
            0      41     2 default   Lscala/Function1;
    Signature: #36                          // <A1:TA;B1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TB1;>;)TB1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public <A1 extends A, B1 extends java.lang.Object> scala.PartialFunction$OrElse<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction$OrElse;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/PartialFunction$OrElse
         3: dup
         4: aload_0
         5: getfield      #21                 // Field f1:Lscala/PartialFunction;
         8: aload_0
         9: getfield      #25                 // Field f2:Lscala/PartialFunction;
        12: aload_1
        13: invokeinterface #61,  2           // InterfaceMethod scala/PartialFunction.orElse:(Lscala/PartialFunction;)Lscala/PartialFunction;
        18: invokespecial #65                 // Method "<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
        21: areturn
      LineNumberTable:
        line 274: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lscala/PartialFunction$OrElse;
            0      22     1  that   Lscala/PartialFunction;
    Signature: #57                          // <A1:TA;B1:Ljava/lang/Object;>(Lscala/PartialFunction<TA1;TB1;>;)Lscala/PartialFunction$OrElse<TA1;TB1;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public <C extends java.lang.Object> scala.PartialFunction$OrElse<A, C> andThen(scala.Function1<B, C>);
    descriptor: (Lscala/Function1;)Lscala/PartialFunction$OrElse;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #2                  // class scala/PartialFunction$OrElse
         3: dup
         4: aload_0
         5: getfield      #21                 // Field f1:Lscala/PartialFunction;
         8: aload_1
         9: invokeinterface #72,  2           // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
        14: aload_0
        15: getfield      #25                 // Field f2:Lscala/PartialFunction;
        18: aload_1
        19: invokeinterface #72,  2           // InterfaceMethod scala/PartialFunction.andThen:(Lscala/Function1;)Lscala/PartialFunction;
        24: invokespecial #65                 // Method "<init>":(Lscala/PartialFunction;Lscala/PartialFunction;)V
        27: areturn
      LineNumberTable:
        line 277: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lscala/PartialFunction$OrElse;
            0      28     1     k   Lscala/Function1;
    Signature: #68                          // <C:Ljava/lang/Object;>(Lscala/Function1<TB;TC;>;)Lscala/PartialFunction$OrElse<TA;TC;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public scala.Function1 andThen(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #76                 // Method andThen:(Lscala/Function1;)Lscala/PartialFunction$OrElse;
         5: areturn
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$OrElse;
            0       6     1     g   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      g                              final

  public scala.PartialFunction andThen(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/PartialFunction;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #76                 // Method andThen:(Lscala/Function1;)Lscala/PartialFunction$OrElse;
         5: areturn
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$OrElse;
            0       6     1     k   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      k                              final

  public scala.PartialFunction orElse(scala.PartialFunction);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #78                 // Method orElse:(Lscala/PartialFunction;)Lscala/PartialFunction$OrElse;
         5: areturn
      LineNumberTable:
        line 262: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$OrElse;
            0       6     1  that   Lscala/PartialFunction;
    MethodParameters:
      Name                           Flags
      that                           final

  public scala.PartialFunction$OrElse(scala.PartialFunction<A, B>, scala.PartialFunction<A, B>);
    descriptor: (Lscala/PartialFunction;Lscala/PartialFunction;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #21                 // Field f1:Lscala/PartialFunction;
         5: aload_0
         6: aload_2
         7: putfield      #25                 // Field f2:Lscala/PartialFunction;
        10: aload_0
        11: invokespecial #82                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
        14: return
      LineNumberTable:
        line 262: 0
        line 263: 10
        line 262: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/PartialFunction$OrElse;
            0      15     1    f1   Lscala/PartialFunction;
            0      15     2    f2   Lscala/PartialFunction;
    Signature: #79                          // (Lscala/PartialFunction<TA;TB;>;Lscala/PartialFunction<TA;TB;>;)V
    MethodParameters:
      Name                           Flags
      f1                             final
      f2                             final
}
InnerClasses:
  private static #11= #2 of #10;          // OrElse=class scala/PartialFunction$OrElse of class scala/PartialFunction
Signature: #3                           // <A:Ljava/lang/Object;B:Ljava/lang/Object;>Lscala/runtime/AbstractPartialFunction<TA;TB;>;Ljava/io/Serializable;
SourceFile: "PartialFunction.scala"
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 00 00 09 00 3E 00 3F 00 00 42 00 49 00 00 42
   00 43 00 00 42 00 46 00 00 1D 00 1E 00 00 20 00
   21 00 00 10 00 11 00 00 37 00 38 00 00 37 00 3B
   00
  Scala: length = 0x0 (unknown attribute)

