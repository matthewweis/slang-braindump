Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/argonaut/JsonNumber.class
  Last modified May 29, 2022; size 9937 bytes
  SHA-256 checksum 057edefacb7aae3ea8c6459d557c114fd287460108e358669641339157f2ccf5
  Compiled from "JsonNumber.scala"
public abstract class argonaut.JsonNumber
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // argonaut/JsonNumber
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 32, attributes: 6
Constant pool:
    #1 = Utf8               argonaut/JsonNumber
    #2 = Class              #1            // argonaut/JsonNumber
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               JsonNumber.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u0005ed!\u0002\u0011\"\u0003C!\u0003\"B\u0016\u0001\t\u0003a\u0003\"B\u0018\u0001\r\u0003\u0001\u0004\u0002C\u001f\u0001\u0011\u000b\u0007I\u0011\u0001 \t\u0011\u0015\u0003\u0001R1A\u0005\u0002\u0019CQa\u0013\u0001\u0005\u00021CQ!\u0015\u0001\u0007\u0002ICQa\u0016\u0001\u0005\u0002aCQ!\u0018\u0001\u0005\u0002yCQa\u0019\u0001\u0005\u0002\u0011DQ!\u001b\u0001\u0005\u0002)DQa\u001b\u0001\u0005\u00021DQ!\u001c\u0001\u0005\u00021CQA\u001c\u0001\u0005\u0002=DQ\u0001\u001d\u0001\u0005\u0002EDQA\u001d\u0001\u0005\u0002MDQ\u0001\u001e\u0001\u0005\u0002UDQA\u001e\u0001\u0005\n]DQa\u001f\u0001\u0005BqDQ! \u0001\u0005ByDq!a\u0004\u0001\t\u0003\t\tbB\u0004\u0002$\u0005B\t!!\n\u0007\r\u0001\n\u0003\u0012AA\u0014\u0011\u0019Yc\u0003\"\u0001\u0002*!9\u00111\u0006\f\u0005\u0002\u00055\u0002bBA\"-\u0011\u0005\u0011Q\t\u0005\n\u0003\u00172\"\u0019!C\u0005\u0003\u001bB\u0001\"!\u0018\u0017A\u0003%\u0011q\n\u0005\n\u0003?2\"\u0019!C\u0005\u0003\u001bB\u0001\"!\u0019\u0017A\u0003%\u0011q\n\u0005\n\u0003G2\"\u0019!C\u0001\u0003KB\u0001\"a\u001e\u0017A\u0003%\u0011q\r\u0002\u000b\u0015N|gNT;nE\u0016\u0014(\"\u0001\u0012\u0002\u0011\u0005\u0014xm\u001c8bkR\u001c\u0001a\u0005\u0002\u0001KA\u0011a%K\u0007\u0002O)\t\u0001&A\u0003tG\u0006d\u0017-\u0003\u0002+O\t1\u0011I\\=SK\u001a\fa\u0001P5oSRtD#A\u0017\u0011\u00059\u0002Q\"A\u0011\u0002\u0019Q|\')[4EK\u000eLW.\u00197\u0016\u0003E\u0002\"A\r\u001e\u000f\u0005MBdB\u0001\u001b8\u001b\u0005)$B\u0001\u001c$\u0003\u0019a$o\\8u}%\t\u0001&\u0003\u0002:O\u00059\u0001/Y2lC\u001e,\u0017BA\u001e=\u0005)\u0011\u0015n\u001a#fG&l\u0017\r\u001c\u0006\u0003s\u001d\n\u0001\u0002^8E_V\u0014G.Z\u000b\u0002\u007fA\u0019a\u0005\u0011\"\n\u0005\u0005;#AB(qi&|g\u000e\u0005\u0002\'\u0007&\u0011Ai\n\u0002\u0007\t>,(\r\\3\u0002\u000fQ|g\t\\8biV\tq\tE\u0002\'\u0001\"\u0003\"AJ%\n\u0005);#!\u0002$m_\u0006$\u0018\u0001\u0003;p\u0005&<\u0017J\u001c;\u0016\u00035\u00032A\n!O!\t\u0011t*\u0003\u0002Qy\t1!)[4J]R\fa\u0001^8M_:<W#A*\u0011\u0007\u0019\u0002E\u000b\u0005\u0002\'+&\u0011ak\n\u0002\u0005\u0019>tw-A\u0003u_&sG/F\u0001Z!\r1\u0003I\u0017\t\u0003MmK!\u0001X\u0014\u0003\u0007%sG/A\u0004u_NCwN\u001d;\u0016\u0003}\u00032A\n!a!\t1\u0013-\u0003\u0002cO\t)1\u000b[8si\u00061Ao\u001c\"zi\u0016,\u0012!\u001a\t\u0004M\u00013\u0007C\u0001\u0014h\u0013\tAwE\u0001\u0003CsR,\u0017\u0001\u0005;sk:\u001c\u0017\r^3U_\u0012{WO\u00197f+\u0005\u0011\u0015a\u0004;sk:\u001c\u0017\r^3U_\u001acw.\u0019;\u0016\u0003!\u000b\u0001\u0003\u001e:v]\u000e\fG/\u001a+p\u0005&<\u0017J\u001c;\u0002\u001dQ\u0014XO\\2bi\u0016$v\u000eT8oOV\tA+A\u0007ueVt7-\u0019;f)>Le\u000e^\u000b\u00025\u0006yAO];oG\u0006$X\rV8TQ>\u0014H/F\u0001a\u00039!(/\u001e8dCR,Gk\u001c\"zi\u0016,\u0012AZ\u0001\u000ei>T5o\u001c8EK\u000eLW.\u00197\u0016\u0003a\u0004\"AL=\n\u0005i\f#a\u0003&t_:$UmY5nC2\f\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u00025\u00061Q-];bYN$2a`A\u0003!\r1\u0013\u0011A\u0005\u0004\u0003\u00079#a\u0002\"p_2,\u0017M\u001c\u0005\b\u0003\u000f\u0019\u0002\u0019AA\u0005\u0003\u0011!\b.\u0019;\u0011\u0007\u0019\nY!C\u0002\u0002\u000e\u001d\u00121!\u00118z\u0003\u0019\t7OS:p]V\u0011\u00111\u0003\t\u0004]\u0005U\u0011bAA\fC\t!!j]8oS\u0019\u0001\u00111D=\u0002 %\u0019\u0011QD\u0011\u0003\u001d)\u001bxN\u001c\"jO\u0012+7-[7bY&\u0019\u0011\u0011E\u0011\u0003\u0011)\u001bxN\u001c\'p]\u001e\f!BS:p]:+XNY3s!\tqcc\u0005\u0002\u0017KQ\u0011\u0011QE\u0001\u000ek:\u001c\u0018MZ3EK\u000eLW.\u00197\u0015\u00075\ny\u0003C\u0004\u00022a\u0001\r!a\r\u0002\u000bY\fG.^3\u0011\t\u0005U\u0012Q\b\b\u0005\u0003o\tI\u0004\u0005\u00025O%\u0019\u00111H\u0014\u0002\rA\u0013X\rZ3g\u0013\u0011\ty$!\u0011\u0003\rM#(/\u001b8h\u0015\r\tYdJ\u0001\u000bMJ|Wn\u0015;sS:<G\u0003BA$\u0003\u0013\u00022A\n!.\u0011\u001d\t\t$\u0007a\u0001\u0003g\tQ\"T1y\u0019>twm\u0015;sS:<WCAA(!\u0011\t\t&a\u0017\u000e\u0005\u0005M#\u0002BA+\u0003/\nA\u0001\\1oO*\u0011\u0011\u0011L\u0001\u0005U\u00064\u0018-\u0003\u0003\u0002@\u0005M\u0013AD\'bq2{gnZ*ue&tw\rI\u0001\u000e\u001b&tGj\u001c8h\'R\u0014\u0018N\\4\u0002\u001d5Kg\u000eT8oON#(/\u001b8hA\u0005y!j]8o\u001dVl\'-\u001a:SK\u001e,\u00070\u0006\u0002\u0002hA!\u0011\u0011NA:\u001b\t\tYG\u0003\u0003\u0002n\u0005=\u0014\u0001C7bi\u000eD\u0017N\\4\u000b\u0007\u0005Et%\u0001\u0003vi&d\u0017\u0002BA;\u0003W\u0012QAU3hKb\f\u0001CS:p]:+XNY3s%\u0016<W\r\u001f\u0011
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               toDouble
   #15 = Utf8               Lscala/Option;
   #16 = Utf8               Lscala/Option<Ljava/lang/Object;>;
   #17 = Utf8               toFloat
   #18 = Utf8               bitmap$0
   #19 = Utf8               B
   #20 = Utf8               JsonNumberRegex
   #21 = Utf8               ()Lscala/util/matching/Regex;
   #22 = Utf8               argonaut/JsonNumber$
   #23 = Class              #22           // argonaut/JsonNumber$
   #24 = Utf8               MODULE$
   #25 = Utf8               Largonaut/JsonNumber$;
   #26 = NameAndType        #24:#25       // MODULE$:Largonaut/JsonNumber$;
   #27 = Fieldref           #23.#26       // argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
   #28 = NameAndType        #20:#21       // JsonNumberRegex:()Lscala/util/matching/Regex;
   #29 = Methodref          #23.#28       // argonaut/JsonNumber$.JsonNumberRegex:()Lscala/util/matching/Regex;
   #30 = Utf8               fromString
   #31 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #32 = Utf8               (Ljava/lang/String;)Lscala/Option<Largonaut/JsonNumber;>;
   #33 = Utf8               value
   #34 = NameAndType        #30:#31       // fromString:(Ljava/lang/String;)Lscala/Option;
   #35 = Methodref          #23.#34       // argonaut/JsonNumber$.fromString:(Ljava/lang/String;)Lscala/Option;
   #36 = Utf8               unsafeDecimal
   #37 = Utf8               (Ljava/lang/String;)Largonaut/JsonNumber;
   #38 = NameAndType        #36:#37       // unsafeDecimal:(Ljava/lang/String;)Largonaut/JsonNumber;
   #39 = Methodref          #23.#38       // argonaut/JsonNumber$.unsafeDecimal:(Ljava/lang/String;)Largonaut/JsonNumber;
   #40 = Utf8               toBigDecimal
   #41 = Utf8               ()Lscala/math/BigDecimal;
   #42 = Utf8               toDouble$lzycompute
   #43 = Utf8               ()Lscala/Option;
   #44 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
   #45 = NameAndType        #18:#19       // bitmap$0:B
   #46 = Fieldref           #2.#45        // argonaut/JsonNumber.bitmap$0:B
   #47 = NameAndType        #40:#41       // toBigDecimal:()Lscala/math/BigDecimal;
   #48 = Methodref          #2.#47        // argonaut/JsonNumber.toBigDecimal:()Lscala/math/BigDecimal;
   #49 = Utf8               scala/math/BigDecimal
   #50 = Class              #49           // scala/math/BigDecimal
   #51 = Utf8               ()D
   #52 = NameAndType        #14:#51       // toDouble:()D
   #53 = Methodref          #50.#52       // scala/math/BigDecimal.toDouble:()D
   #54 = Utf8               scala/package$
   #55 = Class              #54           // scala/package$
   #56 = Utf8               Lscala/package$;
   #57 = NameAndType        #24:#56       // MODULE$:Lscala/package$;
   #58 = Fieldref           #55.#57       // scala/package$.MODULE$:Lscala/package$;
   #59 = Utf8               BigDecimal
   #60 = Utf8               ()Lscala/math/BigDecimal$;
   #61 = NameAndType        #59:#60       // BigDecimal:()Lscala/math/BigDecimal$;
   #62 = Methodref          #55.#61       // scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
   #63 = Utf8               scala/math/BigDecimal$
   #64 = Class              #63           // scala/math/BigDecimal$
   #65 = Utf8               apply
   #66 = Utf8               (D)Lscala/math/BigDecimal;
   #67 = NameAndType        #65:#66       // apply:(D)Lscala/math/BigDecimal;
   #68 = Methodref          #64.#67       // scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
   #69 = Utf8               equals
   #70 = Utf8               (Ljava/lang/Object;)Z
   #71 = NameAndType        #69:#70       // equals:(Ljava/lang/Object;)Z
   #72 = Methodref          #4.#71        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #73 = Utf8               scala/Some
   #74 = Class              #73           // scala/Some
   #75 = Utf8               scala/runtime/BoxesRunTime
   #76 = Class              #75           // scala/runtime/BoxesRunTime
   #77 = Utf8               boxToDouble
   #78 = Utf8               (D)Ljava/lang/Double;
   #79 = NameAndType        #77:#78       // boxToDouble:(D)Ljava/lang/Double;
   #80 = Methodref          #76.#79       // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
   #81 = Utf8               <init>
   #82 = Utf8               (Ljava/lang/Object;)V
   #83 = NameAndType        #81:#82       // "<init>":(Ljava/lang/Object;)V
   #84 = Methodref          #74.#83       // scala/Some."<init>":(Ljava/lang/Object;)V
   #85 = Utf8               scala/None$
   #86 = Class              #85           // scala/None$
   #87 = Utf8               Lscala/None$;
   #88 = NameAndType        #24:#87       // MODULE$:Lscala/None$;
   #89 = Fieldref           #86.#88       // scala/None$.MODULE$:Lscala/None$;
   #90 = NameAndType        #14:#15       // toDouble:Lscala/Option;
   #91 = Fieldref           #2.#90        // argonaut/JsonNumber.toDouble:Lscala/Option;
   #92 = Utf8               asDouble
   #93 = Utf8               D
   #94 = Utf8               this
   #95 = Utf8               Largonaut/JsonNumber;
   #96 = Utf8               scala/Option
   #97 = Class              #96           // scala/Option
   #98 = Utf8               java/lang/Throwable
   #99 = Class              #98           // java/lang/Throwable
  #100 = NameAndType        #42:#43       // toDouble$lzycompute:()Lscala/Option;
  #101 = Methodref          #2.#100       // argonaut/JsonNumber.toDouble$lzycompute:()Lscala/Option;
  #102 = Utf8               toFloat$lzycompute
  #103 = Utf8               ()F
  #104 = NameAndType        #17:#103      // toFloat:()F
  #105 = Methodref          #50.#104      // scala/math/BigDecimal.toFloat:()F
  #106 = Utf8               boxToFloat
  #107 = Utf8               (F)Ljava/lang/Float;
  #108 = NameAndType        #106:#107     // boxToFloat:(F)Ljava/lang/Float;
  #109 = Methodref          #76.#108      // scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
  #110 = NameAndType        #17:#15       // toFloat:Lscala/Option;
  #111 = Fieldref           #2.#110       // argonaut/JsonNumber.toFloat:Lscala/Option;
  #112 = Utf8               asFloat
  #113 = Utf8               F
  #114 = NameAndType        #102:#43      // toFloat$lzycompute:()Lscala/Option;
  #115 = Methodref          #2.#114       // argonaut/JsonNumber.toFloat$lzycompute:()Lscala/Option;
  #116 = Utf8               toBigInt
  #117 = Utf8               ()Lscala/Option<Lscala/math/BigInt;>;
  #118 = Utf8               isWhole
  #119 = Utf8               ()Z
  #120 = NameAndType        #118:#119     // isWhole:()Z
  #121 = Methodref          #50.#120      // scala/math/BigDecimal.isWhole:()Z
  #122 = Utf8               ()Lscala/math/BigInt;
  #123 = NameAndType        #116:#122     // toBigInt:()Lscala/math/BigInt;
  #124 = Methodref          #50.#123      // scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
  #125 = Utf8               n
  #126 = Utf8               Lscala/math/BigDecimal;
  #127 = Utf8               toLong
  #128 = Utf8               toInt
  #129 = NameAndType        #127:#43      // toLong:()Lscala/Option;
  #130 = Methodref          #2.#129       // argonaut/JsonNumber.toLong:()Lscala/Option;
  #131 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #132 = MethodType         #131          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #133 = Utf8               $anonfun$toInt$1$adapted
  #134 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #135 = NameAndType        #133:#134     // $anonfun$toInt$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #136 = Methodref          #2.#135       // argonaut/JsonNumber.$anonfun$toInt$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #137 = MethodHandle       6:#136        // REF_invokeStatic argonaut/JsonNumber.$anonfun$toInt$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #138 = MethodType         #134          //  (Ljava/lang/Object;)Lscala/Option;
  #139 = Integer            5
  #140 = Integer            1
  #141 = Utf8               java/lang/invoke/LambdaMetafactory
  #142 = Class              #141          // java/lang/invoke/LambdaMetafactory
  #143 = Utf8               altMetafactory
  #144 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #145 = NameAndType        #143:#144     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #146 = Methodref          #142.#145     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #147 = MethodHandle       6:#146        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #148 = Utf8               ()Lscala/Function1;
  #149 = NameAndType        #65:#148      // apply:()Lscala/Function1;
  #150 = InvokeDynamic      #0:#149       // #0:apply:()Lscala/Function1;
  #151 = Utf8               flatMap
  #152 = Utf8               (Lscala/Function1;)Lscala/Option;
  #153 = NameAndType        #151:#152     // flatMap:(Lscala/Function1;)Lscala/Option;
  #154 = Methodref          #97.#153      // scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
  #155 = Utf8               toShort
  #156 = Utf8               $anonfun$toShort$1$adapted
  #157 = NameAndType        #156:#134     // $anonfun$toShort$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #158 = Methodref          #2.#157       // argonaut/JsonNumber.$anonfun$toShort$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #159 = MethodHandle       6:#158        // REF_invokeStatic argonaut/JsonNumber.$anonfun$toShort$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #160 = InvokeDynamic      #1:#149       // #1:apply:()Lscala/Function1;
  #161 = Utf8               toByte
  #162 = Utf8               $anonfun$toByte$1$adapted
  #163 = NameAndType        #162:#134     // $anonfun$toByte$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #164 = Methodref          #2.#163       // argonaut/JsonNumber.$anonfun$toByte$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #165 = MethodHandle       6:#164        // REF_invokeStatic argonaut/JsonNumber.$anonfun$toByte$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  #166 = InvokeDynamic      #2:#149       // #2:apply:()Lscala/Function1;
  #167 = Utf8               truncateToDouble
  #168 = Utf8               truncateToFloat
  #169 = Utf8               truncateToBigInt
  #170 = Utf8               underlying
  #171 = Utf8               ()Ljava/math/BigDecimal;
  #172 = NameAndType        #170:#171     // underlying:()Ljava/math/BigDecimal;
  #173 = Methodref          #50.#172      // scala/math/BigDecimal.underlying:()Ljava/math/BigDecimal;
  #174 = Utf8               java/math/BigDecimal
  #175 = Class              #174          // java/math/BigDecimal
  #176 = Utf8               unscaledValue
  #177 = Utf8               ()Ljava/math/BigInteger;
  #178 = NameAndType        #176:#177     // unscaledValue:()Ljava/math/BigInteger;
  #179 = Methodref          #175.#178     // java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
  #180 = Utf8               java/math/BigInteger
  #181 = Class              #180          // java/math/BigInteger
  #182 = Utf8               abs
  #183 = NameAndType        #182:#177     // abs:()Ljava/math/BigInteger;
  #184 = Methodref          #181.#183     // java/math/BigInteger.abs:()Ljava/math/BigInteger;
  #185 = Utf8               toString
  #186 = Utf8               ()Ljava/lang/String;
  #187 = NameAndType        #185:#186     // toString:()Ljava/lang/String;
  #188 = Methodref          #181.#187     // java/math/BigInteger.toString:()Ljava/lang/String;
  #189 = Utf8               java/lang/String
  #190 = Class              #189          // java/lang/String
  #191 = Utf8               length
  #192 = Utf8               ()I
  #193 = NameAndType        #191:#192     // length:()I
  #194 = Methodref          #190.#193     // java/lang/String.length:()I
  #195 = Utf8               scale
  #196 = NameAndType        #195:#192     // scale:()I
  #197 = Methodref          #50.#196      // scala/math/BigDecimal.scale:()I
  #198 = Long               262144l
  #200 = Utf8               asBigDecimal
  #201 = Utf8               digits
  #202 = Utf8               J
  #203 = Utf8               truncateToLong
  #204 = Utf8               ()J
  #205 = NameAndType        #127:#204     // toLong:()J
  #206 = Methodref          #50.#205      // scala/math/BigDecimal.toLong:()J
  #207 = Utf8               truncateToInt
  #208 = NameAndType        #128:#192     // toInt:()I
  #209 = Methodref          #50.#208      // scala/math/BigDecimal.toInt:()I
  #210 = Utf8               truncateToShort
  #211 = Utf8               ()S
  #212 = NameAndType        #207:#192     // truncateToInt:()I
  #213 = Methodref          #2.#212       // argonaut/JsonNumber.truncateToInt:()I
  #214 = Utf8               I
  #215 = Utf8               truncateToByte
  #216 = Utf8               ()B
  #217 = Utf8               toJsonDecimal
  #218 = Utf8               ()Largonaut/JsonDecimal;
  #219 = Utf8               argonaut/JsonDecimal
  #220 = Class              #219          // argonaut/JsonDecimal
  #221 = Utf8               argonaut/JsonBigDecimal
  #222 = Class              #221          // argonaut/JsonBigDecimal
  #223 = NameAndType        #33:#41       // value:()Lscala/math/BigDecimal;
  #224 = Methodref          #222.#223     // argonaut/JsonBigDecimal.value:()Lscala/math/BigDecimal;
  #225 = Utf8               argonaut/JsonDecimal$
  #226 = Class              #225          // argonaut/JsonDecimal$
  #227 = Utf8               Largonaut/JsonDecimal$;
  #228 = NameAndType        #24:#227      // MODULE$:Largonaut/JsonDecimal$;
  #229 = Fieldref           #226.#228     // argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
  #230 = Methodref          #50.#187      // scala/math/BigDecimal.toString:()Ljava/lang/String;
  #231 = Utf8               (Ljava/lang/String;)Largonaut/JsonDecimal;
  #232 = NameAndType        #65:#231      // apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
  #233 = Methodref          #226.#232     // argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
  #234 = Utf8               argonaut/JsonLong
  #235 = Class              #234          // argonaut/JsonLong
  #236 = NameAndType        #33:#204      // value:()J
  #237 = Methodref          #235.#236     // argonaut/JsonLong.value:()J
  #238 = Utf8               boxToLong
  #239 = Utf8               (J)Ljava/lang/Long;
  #240 = NameAndType        #238:#239     // boxToLong:(J)Ljava/lang/Long;
  #241 = Methodref          #76.#240      // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #242 = Methodref          #4.#187       // java/lang/Object.toString:()Ljava/lang/String;
  #243 = Utf8               scala/MatchError
  #244 = Class              #243          // scala/MatchError
  #245 = Methodref          #244.#83      // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #246 = Utf8               hashCode
  #247 = NameAndType        #217:#218     // toJsonDecimal:()Largonaut/JsonDecimal;
  #248 = Methodref          #2.#247       // argonaut/JsonNumber.toJsonDecimal:()Largonaut/JsonDecimal;
  #249 = Utf8               normalized
  #250 = Utf8               ()Lscala/Tuple2;
  #251 = NameAndType        #249:#250     // normalized:()Lscala/Tuple2;
  #252 = Methodref          #220.#251     // argonaut/JsonDecimal.normalized:()Lscala/Tuple2;
  #253 = Utf8               scala/Tuple2
  #254 = Class              #253          // scala/Tuple2
  #255 = NameAndType        #246:#192     // hashCode:()I
  #256 = Methodref          #254.#255     // scala/Tuple2.hashCode:()I
  #257 = Utf8               that
  #258 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #259 = NameAndType        #81:#258      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #260 = Methodref          #254.#259     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #261 = Utf8               _1
  #262 = Utf8               ()Ljava/lang/Object;
  #263 = NameAndType        #261:#262     // _1:()Ljava/lang/Object;
  #264 = Methodref          #254.#263     // scala/Tuple2._1:()Ljava/lang/Object;
  #265 = Utf8               _2
  #266 = NameAndType        #265:#262     // _2:()Ljava/lang/Object;
  #267 = Methodref          #254.#266     // scala/Tuple2._2:()Ljava/lang/Object;
  #268 = Utf8               a
  #269 = Utf8               b
  #270 = Utf8               y
  #271 = Utf8               x
  #272 = Utf8               Ljava/lang/Object;
  #273 = Utf8               asJson
  #274 = Utf8               ()Largonaut/Json;
  #275 = Utf8               argonaut/JNumber
  #276 = Class              #275          // argonaut/JNumber
  #277 = Utf8               (Largonaut/JsonNumber;)V
  #278 = NameAndType        #81:#277      // "<init>":(Largonaut/JsonNumber;)V
  #279 = Methodref          #276.#278     // argonaut/JNumber."<init>":(Largonaut/JsonNumber;)V
  #280 = Utf8               $anonfun$toInt$1
  #281 = Utf8               (J)Lscala/Option;
  #282 = Utf8               boxToInteger
  #283 = Utf8               (I)Ljava/lang/Integer;
  #284 = NameAndType        #282:#283     // boxToInteger:(I)Ljava/lang/Integer;
  #285 = Methodref          #76.#284      // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #286 = Utf8               m
  #287 = Utf8               $anonfun$toShort$1
  #288 = Utf8               boxToShort
  #289 = Utf8               (S)Ljava/lang/Short;
  #290 = NameAndType        #288:#289     // boxToShort:(S)Ljava/lang/Short;
  #291 = Methodref          #76.#290      // scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
  #292 = Utf8               S
  #293 = Utf8               $anonfun$toByte$1
  #294 = Utf8               boxToByte
  #295 = Utf8               (B)Ljava/lang/Byte;
  #296 = NameAndType        #294:#295     // boxToByte:(B)Ljava/lang/Byte;
  #297 = Methodref          #76.#296      // scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
  #298 = Utf8               ()V
  #299 = NameAndType        #81:#298      // "<init>":()V
  #300 = Methodref          #4.#299       // java/lang/Object."<init>":()V
  #301 = Utf8               unboxToLong
  #302 = Utf8               (Ljava/lang/Object;)J
  #303 = NameAndType        #301:#302     // unboxToLong:(Ljava/lang/Object;)J
  #304 = Methodref          #76.#303      // scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
  #305 = NameAndType        #280:#281     // $anonfun$toInt$1:(J)Lscala/Option;
  #306 = Methodref          #2.#305       // argonaut/JsonNumber.$anonfun$toInt$1:(J)Lscala/Option;
  #307 = NameAndType        #287:#281     // $anonfun$toShort$1:(J)Lscala/Option;
  #308 = Methodref          #2.#307       // argonaut/JsonNumber.$anonfun$toShort$1:(J)Lscala/Option;
  #309 = NameAndType        #293:#281     // $anonfun$toByte$1:(J)Lscala/Option;
  #310 = Methodref          #2.#309       // argonaut/JsonNumber.$anonfun$toByte$1:(J)Lscala/Option;
  #311 = Utf8               $deserializeLambda$
  #312 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #313 = Utf8               scala/runtime/LambdaDeserialize
  #314 = Class              #313          // scala/runtime/LambdaDeserialize
  #315 = Utf8               bootstrap
  #316 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #317 = NameAndType        #315:#316     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #318 = Methodref          #314.#317     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #319 = MethodHandle       6:#318        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #320 = Utf8               lambdaDeserialize
  #321 = NameAndType        #320:#312     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #322 = InvokeDynamic      #3:#321       // #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #323 = Utf8               Signature
  #324 = Utf8               Code
  #325 = Utf8               MethodParameters
  #326 = Utf8               StackMapTable
  #327 = Utf8               LineNumberTable
  #328 = Utf8               LocalVariableTable
  #329 = Utf8               InnerClasses
  #330 = Utf8               SourceFile
  #331 = Utf8               RuntimeVisibleAnnotations
  #332 = Utf8               BootstrapMethods
  #333 = Utf8               ScalaInlineInfo
  #334 = Utf8               ScalaSig
{
  private scala.Option<java.lang.Object> toDouble;
    descriptor: Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Signature: #16                          // Lscala/Option<Ljava/lang/Object;>;

  private scala.Option<java.lang.Object> toFloat;
    descriptor: Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Signature: #16                          // Lscala/Option<Ljava/lang/Object;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static scala.util.matching.Regex JsonNumberRegex();
    descriptor: ()Lscala/util/matching/Regex;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #27                 // Field argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
         3: invokevirtual #29                 // Method argonaut/JsonNumber$.JsonNumberRegex:()Lscala/util/matching/Regex;
         6: areturn

  public static scala.Option<argonaut.JsonNumber> fromString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
         3: aload_0
         4: invokevirtual #35                 // Method argonaut/JsonNumber$.fromString:(Ljava/lang/String;)Lscala/Option;
         7: areturn
    Signature: #32                          // (Ljava/lang/String;)Lscala/Option<Largonaut/JsonNumber;>;
    MethodParameters:
      Name                           Flags
      value                          final

  public static argonaut.JsonNumber unsafeDecimal(java.lang.String);
    descriptor: (Ljava/lang/String;)Largonaut/JsonNumber;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #27                 // Field argonaut/JsonNumber$.MODULE$:Largonaut/JsonNumber$;
         3: aload_0
         4: invokevirtual #39                 // Method argonaut/JsonNumber$.unsafeDecimal:(Ljava/lang/String;)Largonaut/JsonNumber;
         7: areturn
    MethodParameters:
      Name                           Flags
      value                          final

  public abstract scala.math.BigDecimal toBigDecimal();
    descriptor: ()Lscala/math/BigDecimal;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT

  private scala.Option<java.lang.Object> toDouble$lzycompute();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=5, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #46                 // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     92
        15: aload_0
        16: aload_0
        17: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
        20: invokevirtual #53                 // Method scala/math/BigDecimal.toDouble:()D
        23: dstore_2
        24: getstatic     #58                 // Field scala/package$.MODULE$:Lscala/package$;
        27: invokevirtual #62                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
        30: dload_2
        31: invokevirtual #68                 // Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
        34: aload_0
        35: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
        38: astore        4
        40: dup
        41: ifnonnull     53
        44: pop
        45: aload         4
        47: ifnull        61
        50: goto          75
        53: aload         4
        55: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        58: ifeq          75
        61: new           #74                 // class scala/Some
        64: dup
        65: dload_2
        66: invokestatic  #80                 // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
        69: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        72: goto          78
        75: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        78: putfield      #91                 // Field toDouble:Lscala/Option;
        81: aload_0
        82: aload_0
        83: getfield      #46                 // Field bitmap$0:B
        86: iconst_1
        87: ior
        88: i2b
        89: putfield      #46                 // Field bitmap$0:B
        92: aload_1
        93: monitorexit
        94: goto          100
        97: aload_1
        98: monitorexit
        99: athrow
       100: aload_0
       101: getfield      #91                 // Field toDouble:Lscala/Option;
       104: areturn
      Exception table:
         from    to  target type
             4    92    97   any
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 53
          locals = [ class argonaut/JsonNumber, class argonaut/JsonNumber, double, class scala/math/BigDecimal ]
          stack = [ class argonaut/JsonNumber, class scala/math/BigDecimal ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class argonaut/JsonNumber ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class argonaut/JsonNumber ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonNumber, class argonaut/JsonNumber, double, class scala/math/BigDecimal ]
          stack = [ class argonaut/JsonNumber, class scala/Option ]
        frame_type = 249 /* chop */
          offset_delta = 13
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 19: 0
        line 20: 16
        line 21: 24
        line 22: 61
        line 24: 75
        line 19: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      55     2 asDouble   D
            0     105     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<java.lang.Object> toDouble();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #101                // Method toDouble$lzycompute:()Lscala/Option;
        15: goto          22
        18: aload_0
        19: getfield      #91                 // Field toDouble:Lscala/Option;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 19: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  private scala.Option<java.lang.Object> toFloat$lzycompute();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #46                 // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     90
        15: aload_0
        16: aload_0
        17: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
        20: invokevirtual #105                // Method scala/math/BigDecimal.toFloat:()F
        23: fstore_2
        24: getstatic     #58                 // Field scala/package$.MODULE$:Lscala/package$;
        27: invokevirtual #62                 // Method scala/package$.BigDecimal:()Lscala/math/BigDecimal$;
        30: fload_2
        31: f2d
        32: invokevirtual #68                 // Method scala/math/BigDecimal$.apply:(D)Lscala/math/BigDecimal;
        35: aload_0
        36: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
        39: astore_3
        40: dup
        41: ifnonnull     52
        44: pop
        45: aload_3
        46: ifnull        59
        49: goto          73
        52: aload_3
        53: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        56: ifeq          73
        59: new           #74                 // class scala/Some
        62: dup
        63: fload_2
        64: invokestatic  #109                // Method scala/runtime/BoxesRunTime.boxToFloat:(F)Ljava/lang/Float;
        67: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        70: goto          76
        73: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        76: putfield      #111                // Field toFloat:Lscala/Option;
        79: aload_0
        80: aload_0
        81: getfield      #46                 // Field bitmap$0:B
        84: iconst_2
        85: ior
        86: i2b
        87: putfield      #46                 // Field bitmap$0:B
        90: aload_1
        91: monitorexit
        92: goto          98
        95: aload_1
        96: monitorexit
        97: athrow
        98: aload_0
        99: getfield      #111                // Field toFloat:Lscala/Option;
       102: areturn
      Exception table:
         from    to  target type
             4    90    95   any
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 52
          locals = [ class argonaut/JsonNumber, class argonaut/JsonNumber, float, class scala/math/BigDecimal ]
          stack = [ class argonaut/JsonNumber, class scala/math/BigDecimal ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class argonaut/JsonNumber ]
        frame_type = 77 /* same_locals_1_stack_item */
          stack = [ class argonaut/JsonNumber ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonNumber, class argonaut/JsonNumber, float, class scala/math/BigDecimal ]
          stack = [ class argonaut/JsonNumber, class scala/Option ]
        frame_type = 249 /* chop */
          offset_delta = 13
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 31: 0
        line 32: 16
        line 33: 24
        line 34: 59
        line 36: 73
        line 31: 76
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      53     2 asFloat   F
            0     103     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<java.lang.Object> toFloat();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #46                 // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #115                // Method toFloat$lzycompute:()Lscala/Option;
        15: goto          22
        18: aload_0
        19: getfield      #111                // Field toFloat:Lscala/Option;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<scala.math.BigInt> toBigInt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: astore_1
         5: aload_1
         6: invokevirtual #121                // Method scala/math/BigDecimal.isWhole:()Z
         9: ifeq          26
        12: new           #74                 // class scala/Some
        15: dup
        16: aload_1
        17: invokevirtual #124                // Method scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
        20: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        23: goto          29
        26: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        29: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class scala/math/BigDecimal ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 44: 0
        line 45: 5
        line 46: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      25     1     n   Lscala/math/BigDecimal;
            0      30     0  this   Largonaut/JsonNumber;
    Signature: #117                         // ()Lscala/Option<Lscala/math/BigInt;>;

  public abstract scala.Option<java.lang.Object> toLong();
    descriptor: ()Lscala/Option;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<java.lang.Object> toInt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method toLong:()Lscala/Option;
         4: invokedynamic #150,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
         9: invokevirtual #154                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<java.lang.Object> toShort();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method toLong:()Lscala/Option;
         4: invokedynamic #160,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
         9: invokevirtual #154                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public scala.Option<java.lang.Object> toByte();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #130                // Method toLong:()Lscala/Option;
         4: invokedynamic #166,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
         9: invokevirtual #154                // Method scala/Option.flatMap:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Largonaut/JsonNumber;
    Signature: #44                          // ()Lscala/Option<Ljava/lang/Object;>;

  public double truncateToDouble();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: invokevirtual #53                 // Method scala/math/BigDecimal.toDouble:()D
         7: dreturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonNumber;

  public float truncateToFloat();
    descriptor: ()F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: invokevirtual #105                // Method scala/math/BigDecimal.toFloat:()F
         7: freturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonNumber;

  public scala.Option<scala.math.BigInt> truncateToBigInt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: astore_1
         5: aload_1
         6: invokevirtual #173                // Method scala/math/BigDecimal.underlying:()Ljava/math/BigDecimal;
         9: invokevirtual #179                // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
        12: invokevirtual #184                // Method java/math/BigInteger.abs:()Ljava/math/BigInteger;
        15: invokevirtual #188                // Method java/math/BigInteger.toString:()Ljava/lang/String;
        18: invokevirtual #194                // Method java/lang/String.length:()I
        21: i2l
        22: aload_1
        23: invokevirtual #197                // Method scala/math/BigDecimal.scale:()I
        26: i2l
        27: lsub
        28: lstore_2
        29: lload_2
        30: ldc2_w        #198                // long 262144l
        33: lcmp
        34: ifgt          51
        37: new           #74                 // class scala/Some
        40: dup
        41: aload_1
        42: invokevirtual #124                // Method scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
        45: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        48: goto          54
        51: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        54: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 51
          locals = [ class scala/math/BigDecimal, long ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 103: 0
        line 104: 5
        line 106: 29
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      50     1 asBigDecimal   Lscala/math/BigDecimal;
           28      26     2 digits   J
            0      55     0  this   Largonaut/JsonNumber;
    Signature: #117                         // ()Lscala/Option<Lscala/math/BigInt;>;

  public long truncateToLong();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: invokevirtual #206                // Method scala/math/BigDecimal.toLong:()J
         7: lreturn
      LineNumberTable:
        line 114: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonNumber;

  public int truncateToInt();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
         4: invokevirtual #209                // Method scala/math/BigDecimal.toInt:()I
         7: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Largonaut/JsonNumber;

  public short truncateToShort();
    descriptor: ()S
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #213                // Method truncateToInt:()I
         4: istore_1
         5: iload_1
         6: sipush        32767
         9: if_icmple     18
        12: sipush        32767
        15: goto          33
        18: iload_1
        19: sipush        -32768
        22: if_icmpge     31
        25: sipush        -32768
        28: goto          33
        31: iload_1
        32: i2s
        33: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
        frame_type = 12 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 129: 0
        line 130: 5
        line 131: 18
        line 132: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      29     1     n   I
            0      34     0  this   Largonaut/JsonNumber;

  public byte truncateToByte();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #213                // Method truncateToInt:()I
         4: istore_1
         5: iload_1
         6: bipush        127
         8: if_icmple     16
        11: bipush        127
        13: goto          29
        16: iload_1
        17: bipush        -128
        19: if_icmpge     27
        22: bipush        -128
        24: goto          29
        27: iload_1
        28: i2b
        29: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ int ]
        frame_type = 10 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 141: 0
        line 142: 5
        line 143: 16
        line 144: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            4      25     1     n   I
            0      30     0  this   Largonaut/JsonNumber;

  private argonaut.JsonDecimal toJsonDecimal();
    descriptor: ()Largonaut/JsonDecimal;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=9, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #220                // class argonaut/JsonDecimal
         6: ifeq          19
         9: aload_2
        10: checkcast     #220                // class argonaut/JsonDecimal
        13: astore_3
        14: aload_3
        15: astore_1
        16: goto          110
        19: goto          22
        22: aload_2
        23: instanceof    #222                // class argonaut/JsonBigDecimal
        26: ifeq          57
        29: aload_2
        30: checkcast     #222                // class argonaut/JsonBigDecimal
        33: astore        4
        35: aload         4
        37: invokevirtual #224                // Method argonaut/JsonBigDecimal.value:()Lscala/math/BigDecimal;
        40: astore        5
        42: getstatic     #229                // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
        45: aload         5
        47: invokevirtual #230                // Method scala/math/BigDecimal.toString:()Ljava/lang/String;
        50: invokevirtual #233                // Method argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
        53: astore_1
        54: goto          110
        57: goto          60
        60: aload_2
        61: instanceof    #235                // class argonaut/JsonLong
        64: ifeq          98
        67: aload_2
        68: checkcast     #235                // class argonaut/JsonLong
        71: astore        6
        73: aload         6
        75: invokevirtual #237                // Method argonaut/JsonLong.value:()J
        78: lstore        7
        80: getstatic     #229                // Field argonaut/JsonDecimal$.MODULE$:Largonaut/JsonDecimal$;
        83: lload         7
        85: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        88: invokevirtual #242                // Method java/lang/Object.toString:()Ljava/lang/String;
        91: invokevirtual #233                // Method argonaut/JsonDecimal$.apply:(Ljava/lang/String;)Largonaut/JsonDecimal;
        94: astore_1
        95: goto          110
        98: goto          101
       101: new           #244                // class scala/MatchError
       104: dup
       105: aload_2
       106: invokespecial #245                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       109: athrow
       110: aload_1
       111: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class argonaut/JsonNumber ]
        frame_type = 2 /* same */
        frame_type = 34 /* same */
        frame_type = 2 /* same */
        frame_type = 37 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class argonaut/JsonNumber, class argonaut/JsonDecimal, class argonaut/JsonNumber ]
          stack = []
      LineNumberTable:
        line 149: 0
        line 150: 2
        line 151: 22
        line 152: 60
        line 149: 101
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      17     5     n   Lscala/math/BigDecimal;
           78      20     7     n   J
            0     112     0  this   Largonaut/JsonNumber;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #248                // Method toJsonDecimal:()Largonaut/JsonDecimal;
         4: invokevirtual #252                // Method argonaut/JsonDecimal.normalized:()Lscala/Tuple2;
         7: invokevirtual #256                // Method scala/Tuple2.hashCode:()I
        10: ireturn
      LineNumberTable:
        line 155: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Largonaut/JsonNumber;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=26, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #2                  // class argonaut/JsonNumber
         8: ifeq          392
        11: aload         4
        13: checkcast     #2                  // class argonaut/JsonNumber
        16: astore        5
        18: new           #254                // class scala/Tuple2
        21: dup
        22: aload_0
        23: aload         5
        25: invokespecial #260                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        28: astore        6
        30: aload         6
        32: ifnull        118
        35: aload         6
        37: invokevirtual #264                // Method scala/Tuple2._1:()Ljava/lang/Object;
        40: checkcast     #2                  // class argonaut/JsonNumber
        43: astore        7
        45: aload         6
        47: invokevirtual #267                // Method scala/Tuple2._2:()Ljava/lang/Object;
        50: checkcast     #2                  // class argonaut/JsonNumber
        53: astore        8
        55: aload         7
        57: instanceof    #220                // class argonaut/JsonDecimal
        60: ifeq          115
        63: aload         7
        65: checkcast     #220                // class argonaut/JsonDecimal
        68: astore        9
        70: aload         9
        72: invokevirtual #252                // Method argonaut/JsonDecimal.normalized:()Lscala/Tuple2;
        75: aload         8
        77: invokespecial #248                // Method toJsonDecimal:()Largonaut/JsonDecimal;
        80: invokevirtual #252                // Method argonaut/JsonDecimal.normalized:()Lscala/Tuple2;
        83: astore        10
        85: dup
        86: ifnonnull     98
        89: pop
        90: aload         10
        92: ifnull        106
        95: goto          110
        98: aload         10
       100: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       103: ifeq          110
       106: iconst_1
       107: goto          111
       110: iconst_0
       111: istore_3
       112: goto          387
       115: goto          121
       118: goto          121
       121: aload         6
       123: ifnull        209
       126: aload         6
       128: invokevirtual #264                // Method scala/Tuple2._1:()Ljava/lang/Object;
       131: checkcast     #2                  // class argonaut/JsonNumber
       134: astore        11
       136: aload         6
       138: invokevirtual #267                // Method scala/Tuple2._2:()Ljava/lang/Object;
       141: checkcast     #2                  // class argonaut/JsonNumber
       144: astore        12
       146: aload         12
       148: instanceof    #220                // class argonaut/JsonDecimal
       151: ifeq          206
       154: aload         12
       156: checkcast     #220                // class argonaut/JsonDecimal
       159: astore        13
       161: aload         11
       163: invokespecial #248                // Method toJsonDecimal:()Largonaut/JsonDecimal;
       166: invokevirtual #252                // Method argonaut/JsonDecimal.normalized:()Lscala/Tuple2;
       169: aload         13
       171: invokevirtual #252                // Method argonaut/JsonDecimal.normalized:()Lscala/Tuple2;
       174: astore        14
       176: dup
       177: ifnonnull     189
       180: pop
       181: aload         14
       183: ifnull        197
       186: goto          201
       189: aload         14
       191: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       194: ifeq          201
       197: iconst_1
       198: goto          202
       201: iconst_0
       202: istore_3
       203: goto          387
       206: goto          212
       209: goto          212
       212: aload         6
       214: ifnull        304
       217: aload         6
       219: invokevirtual #264                // Method scala/Tuple2._1:()Ljava/lang/Object;
       222: checkcast     #2                  // class argonaut/JsonNumber
       225: astore        15
       227: aload         6
       229: invokevirtual #267                // Method scala/Tuple2._2:()Ljava/lang/Object;
       232: checkcast     #2                  // class argonaut/JsonNumber
       235: astore        16
       237: aload         15
       239: instanceof    #235                // class argonaut/JsonLong
       242: ifeq          301
       245: aload         15
       247: checkcast     #235                // class argonaut/JsonLong
       250: astore        17
       252: aload         17
       254: invokevirtual #237                // Method argonaut/JsonLong.value:()J
       257: lstore        18
       259: aload         16
       261: instanceof    #235                // class argonaut/JsonLong
       264: ifeq          298
       267: aload         16
       269: checkcast     #235                // class argonaut/JsonLong
       272: astore        20
       274: aload         20
       276: invokevirtual #237                // Method argonaut/JsonLong.value:()J
       279: lstore        21
       281: lload         18
       283: lload         21
       285: lcmp
       286: ifne          293
       289: iconst_1
       290: goto          294
       293: iconst_0
       294: istore_3
       295: goto          387
       298: goto          307
       301: goto          307
       304: goto          307
       307: aload         6
       309: ifnull        374
       312: aload         6
       314: invokevirtual #264                // Method scala/Tuple2._1:()Ljava/lang/Object;
       317: checkcast     #2                  // class argonaut/JsonNumber
       320: astore        23
       322: aload         6
       324: invokevirtual #267                // Method scala/Tuple2._2:()Ljava/lang/Object;
       327: checkcast     #2                  // class argonaut/JsonNumber
       330: astore        24
       332: aload         23
       334: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
       337: aload         24
       339: invokevirtual #48                 // Method toBigDecimal:()Lscala/math/BigDecimal;
       342: astore        25
       344: dup
       345: ifnonnull     357
       348: pop
       349: aload         25
       351: ifnull        365
       354: goto          369
       357: aload         25
       359: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       362: ifeq          369
       365: iconst_1
       366: goto          370
       369: iconst_0
       370: istore_3
       371: goto          387
       374: goto          377
       377: new           #244                // class scala/MatchError
       380: dup
       381: aload         6
       383: invokespecial #245                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       386: athrow
       387: iload_3
       388: istore_2
       389: goto          400
       392: goto          395
       395: iconst_0
       396: istore_2
       397: goto          400
       400: iload_2
       401: ireturn
      StackMapTable: number_of_entries = 30
        frame_type = 255 /* full_frame */
          offset_delta = 98
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2, class argonaut/JsonNumber, class argonaut/JsonNumber, class argonaut/JsonDecimal, class scala/Tuple2 ]
          stack = [ class scala/Tuple2 ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2, top, top, top, top, class argonaut/JsonNumber, class argonaut/JsonNumber, class argonaut/JsonDecimal, class scala/Tuple2 ]
          stack = [ class scala/Tuple2 ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 80
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2, top, top, top, top, top, top, top, top, class argonaut/JsonNumber, class argonaut/JsonNumber, class argonaut/JsonLong, long, class argonaut/JsonLong, long ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class argonaut/JsonNumber, class argonaut/JsonNumber, class scala/math/BigDecimal ]
          stack = [ class scala/math/BigDecimal ]
        frame_type = 7 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, int, class java/lang/Object, class argonaut/JsonNumber, class scala/Tuple2 ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/JsonNumber, class java/lang/Object, top, top, class java/lang/Object ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class argonaut/JsonNumber, class java/lang/Object, int, top, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 157: 0
        line 158: 3
        line 159: 18
        line 160: 30
        line 161: 121
        line 162: 212
        line 163: 307
        line 159: 377
        line 158: 392
        line 166: 395
        line 157: 400
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      75     7     a   Largonaut/JsonNumber;
           53      65     8     b   Largonaut/JsonNumber;
          134      75    11     a   Largonaut/JsonNumber;
          144      65    12     b   Largonaut/JsonNumber;
          279      19    21     y   J
          257      44    18     x   J
          320      54    23     a   Largonaut/JsonNumber;
          330      44    24     b   Largonaut/JsonNumber;
            0     402     0  this   Largonaut/JsonNumber;
            0     402     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public argonaut.Json asJson();
    descriptor: ()Largonaut/Json;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #276                // class argonaut/JNumber
         3: dup
         4: aload_0
         5: invokespecial #279                // Method argonaut/JNumber."<init>":(Largonaut/JsonNumber;)V
         8: areturn
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Largonaut/JsonNumber;

  public static final scala.Option $anonfun$toInt$1(long);
    descriptor: (J)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=1
         0: lload_0
         1: l2i
         2: istore_2
         3: lload_0
         4: iload_2
         5: i2l
         6: lcmp
         7: ifne          24
        10: new           #74                 // class scala/Some
        13: dup
        14: iload_2
        15: invokestatic  #285                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        18: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        21: goto          27
        24: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 58: 0
        line 59: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      25     2     m   I
            0      28     0     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.Option $anonfun$toShort$1(long);
    descriptor: (J)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=1
         0: lload_0
         1: l2i
         2: i2s
         3: istore_2
         4: lload_0
         5: iload_2
         6: i2l
         7: lcmp
         8: ifne          25
        11: new           #74                 // class scala/Some
        14: dup
        15: iload_2
        16: invokestatic  #291                // Method scala/runtime/BoxesRunTime.boxToShort:(S)Ljava/lang/Short;
        19: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        22: goto          28
        25: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        28: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 66: 0
        line 67: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      25     2     m   S
            0      29     0     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.Option $anonfun$toByte$1(long);
    descriptor: (J)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=1
         0: lload_0
         1: l2i
         2: i2b
         3: istore_2
         4: lload_0
         5: iload_2
         6: i2l
         7: lcmp
         8: ifne          25
        11: new           #74                 // class scala/Some
        14: dup
        15: iload_2
        16: invokestatic  #297                // Method scala/runtime/BoxesRunTime.boxToByte:(B)Ljava/lang/Byte;
        19: invokespecial #84                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
        22: goto          28
        25: getstatic     #89                 // Field scala/None$.MODULE$:Lscala/None$;
        28: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 74: 0
        line 75: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            3      25     2     m   B
            0      29     0     n   J
    MethodParameters:
      Name                           Flags
      n                              final

  public argonaut.JsonNumber();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #300                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 179: 0
        line 9: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/JsonNumber;

  public static final scala.Option $anonfun$toInt$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #304                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
         4: invokestatic  #306                // Method $anonfun$toInt$1:(J)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.Option $anonfun$toShort$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #304                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
         4: invokestatic  #308                // Method $anonfun$toShort$1:(J)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      n                              final

  public static final scala.Option $anonfun$toByte$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #304                // Method scala/runtime/BoxesRunTime.unboxToLong:(Ljava/lang/Object;)J
         4: invokestatic  #310                // Method $anonfun$toByte$1:(J)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     n   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      n                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #322,  0            // InvokeDynamic #3:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "JsonNumber.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005ed!\u0002\u0011\"\u0003C!\u0003\"B\u0016\u0001\t\u0003a\u0003\"B\u0018\u0001\r\u0003\u0001\u0004\u0002C\u001f\u0001\u0011\u000b\u0007I\u0011\u0001 \t\u0011\u0015\u0003\u0001R1A\u0005\u0002\u0019CQa\u0013\u0001\u0005\u00021CQ!\u0015\u0001\u0007\u0002ICQa\u0016\u0001\u0005\u0002aCQ!\u0018\u0001\u0005\u0002yCQa\u0019\u0001\u0005\u0002\u0011DQ!\u001b\u0001\u0005\u0002)DQa\u001b\u0001\u0005\u00021DQ!\u001c\u0001\u0005\u00021CQA\u001c\u0001\u0005\u0002=DQ\u0001\u001d\u0001\u0005\u0002EDQA\u001d\u0001\u0005\u0002MDQ\u0001\u001e\u0001\u0005\u0002UDQA\u001e\u0001\u0005\n]DQa\u001f\u0001\u0005BqDQ! \u0001\u0005ByDq!a\u0004\u0001\t\u0003\t\tbB\u0004\u0002$\u0005B\t!!\n\u0007\r\u0001\n\u0003\u0012AA\u0014\u0011\u0019Yc\u0003\"\u0001\u0002*!9\u00111\u0006\f\u0005\u0002\u00055\u0002bBA\"-\u0011\u0005\u0011Q\t\u0005\n\u0003\u00172\"\u0019!C\u0005\u0003\u001bB\u0001\"!\u0018\u0017A\u0003%\u0011q\n\u0005\n\u0003?2\"\u0019!C\u0005\u0003\u001bB\u0001\"!\u0019\u0017A\u0003%\u0011q\n\u0005\n\u0003G2\"\u0019!C\u0001\u0003KB\u0001\"a\u001e\u0017A\u0003%\u0011q\r\u0002\u000b\u0015N|gNT;nE\u0016\u0014(\"\u0001\u0012\u0002\u0011\u0005\u0014xm\u001c8bkR\u001c\u0001a\u0005\u0002\u0001KA\u0011a%K\u0007\u0002O)\t\u0001&A\u0003tG\u0006d\u0017-\u0003\u0002+O\t1\u0011I\\=SK\u001a\fa\u0001P5oSRtD#A\u0017\u0011\u00059\u0002Q\"A\u0011\u0002\u0019Q|\')[4EK\u000eLW.\u00197\u0016\u0003E\u0002\"A\r\u001e\u000f\u0005MBdB\u0001\u001b8\u001b\u0005)$B\u0001\u001c$\u0003\u0019a$o\\8u}%\t\u0001&\u0003\u0002:O\u00059\u0001/Y2lC\u001e,\u0017BA\u001e=\u0005)\u0011\u0015n\u001a#fG&l\u0017\r\u001c\u0006\u0003s\u001d\n\u0001\u0002^8E_V\u0014G.Z\u000b\u0002\u007fA\u0019a\u0005\u0011\"\n\u0005\u0005;#AB(qi&|g\u000e\u0005\u0002\'\u0007&\u0011Ai\n\u0002\u0007\t>,(\r\\3\u0002\u000fQ|g\t\\8biV\tq\tE\u0002\'\u0001\"\u0003\"AJ%\n\u0005);#!\u0002$m_\u0006$\u0018\u0001\u0003;p\u0005&<\u0017J\u001c;\u0016\u00035\u00032A\n!O!\t\u0011t*\u0003\u0002Qy\t1!)[4J]R\fa\u0001^8M_:<W#A*\u0011\u0007\u0019\u0002E\u000b\u0005\u0002\'+&\u0011ak\n\u0002\u0005\u0019>tw-A\u0003u_&sG/F\u0001Z!\r1\u0003I\u0017\t\u0003MmK!\u0001X\u0014\u0003\u0007%sG/A\u0004u_NCwN\u001d;\u0016\u0003}\u00032A\n!a!\t1\u0013-\u0003\u0002cO\t)1\u000b[8si\u00061Ao\u001c\"zi\u0016,\u0012!\u001a\t\u0004M\u00013\u0007C\u0001\u0014h\u0013\tAwE\u0001\u0003CsR,\u0017\u0001\u0005;sk:\u001c\u0017\r^3U_\u0012{WO\u00197f+\u0005\u0011\u0015a\u0004;sk:\u001c\u0017\r^3U_\u001acw.\u0019;\u0016\u0003!\u000b\u0001\u0003\u001e:v]\u000e\fG/\u001a+p\u0005&<\u0017J\u001c;\u0002\u001dQ\u0014XO\\2bi\u0016$v\u000eT8oOV\tA+A\u0007ueVt7-\u0019;f)>Le\u000e^\u000b\u00025\u0006yAO];oG\u0006$X\rV8TQ>\u0014H/F\u0001a\u00039!(/\u001e8dCR,Gk\u001c\"zi\u0016,\u0012AZ\u0001\u000ei>T5o\u001c8EK\u000eLW.\u00197\u0016\u0003a\u0004\"AL=\n\u0005i\f#a\u0003&t_:$UmY5nC2\f\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u00025\u00061Q-];bYN$2a`A\u0003!\r1\u0013\u0011A\u0005\u0004\u0003\u00079#a\u0002\"p_2,\u0017M\u001c\u0005\b\u0003\u000f\u0019\u0002\u0019AA\u0005\u0003\u0011!\b.\u0019;\u0011\u0007\u0019\nY!C\u0002\u0002\u000e\u001d\u00121!\u00118z\u0003\u0019\t7OS:p]V\u0011\u00111\u0003\t\u0004]\u0005U\u0011bAA\fC\t!!j]8oS\u0019\u0001\u00111D=\u0002 %\u0019\u0011QD\u0011\u0003\u001d)\u001bxN\u001c\"jO\u0012+7-[7bY&\u0019\u0011\u0011E\u0011\u0003\u0011)\u001bxN\u001c\'p]\u001e\f!BS:p]:+XNY3s!\tqcc\u0005\u0002\u0017KQ\u0011\u0011QE\u0001\u000ek:\u001c\u0018MZ3EK\u000eLW.\u00197\u0015\u00075\ny\u0003C\u0004\u00022a\u0001\r!a\r\u0002\u000bY\fG.^3\u0011\t\u0005U\u0012Q\b\b\u0005\u0003o\tI\u0004\u0005\u00025O%\u0019\u00111H\u0014\u0002\rA\u0013X\rZ3g\u0013\u0011\ty$!\u0011\u0003\rM#(/\u001b8h\u0015\r\tYdJ\u0001\u000bMJ|Wn\u0015;sS:<G\u0003BA$\u0003\u0013\u00022A\n!.\u0011\u001d\t\t$\u0007a\u0001\u0003g\tQ\"T1y\u0019>twm\u0015;sS:<WCAA(!\u0011\t\t&a\u0017\u000e\u0005\u0005M#\u0002BA+\u0003/\nA\u0001\\1oO*\u0011\u0011\u0011L\u0001\u0005U\u00064\u0018-\u0003\u0003\u0002@\u0005M\u0013AD\'bq2{gnZ*ue&tw\rI\u0001\u000e\u001b&tGj\u001c8h\'R\u0014\u0018N\\4\u0002\u001d5Kg\u000eT8oON#(/\u001b8hA\u0005y!j]8o\u001dVl\'-\u001a:SK\u001e,\u00070\u0006\u0002\u0002hA!\u0011\u0011NA:\u001b\t\tYG\u0003\u0003\u0002n\u0005=\u0014\u0001C7bi\u000eD\u0017N\\4\u000b\u0007\u0005Et%\u0001\u0003vi&d\u0017\u0002BA;\u0003W\u0012QAU3hKb\f\u0001CS:p]:+XNY3s%\u0016<W\r\u001f\u0011"
    )
BootstrapMethods:
  0: #147 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #132 (Ljava/lang/Object;)Ljava/lang/Object;
      #137 REF_invokeStatic argonaut/JsonNumber.$anonfun$toInt$1$adapted:(Ljava/lang/Object;)Lscala/Option;
      #138 (Ljava/lang/Object;)Lscala/Option;
      #139 5
      #140 1
      #138 (Ljava/lang/Object;)Lscala/Option;
  1: #147 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #132 (Ljava/lang/Object;)Ljava/lang/Object;
      #159 REF_invokeStatic argonaut/JsonNumber.$anonfun$toShort$1$adapted:(Ljava/lang/Object;)Lscala/Option;
      #138 (Ljava/lang/Object;)Lscala/Option;
      #139 5
      #140 1
      #138 (Ljava/lang/Object;)Lscala/Option;
  2: #147 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #132 (Ljava/lang/Object;)Ljava/lang/Object;
      #165 REF_invokeStatic argonaut/JsonNumber.$anonfun$toByte$1$adapted:(Ljava/lang/Object;)Lscala/Option;
      #138 (Ljava/lang/Object;)Lscala/Option;
      #139 5
      #140 1
      #138 (Ljava/lang/Object;)Lscala/Option;
  3: #319 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #165 REF_invokeStatic argonaut/JsonNumber.$anonfun$toByte$1$adapted:(Ljava/lang/Object;)Lscala/Option;
      #137 REF_invokeStatic argonaut/JsonNumber.$anonfun$toInt$1$adapted:(Ljava/lang/Object;)Lscala/Option;
      #159 REF_invokeStatic argonaut/JsonNumber.$anonfun$toShort$1$adapted:(Ljava/lang/Object;)Lscala/Option;
  ScalaInlineInfo: length = 0x90 (unknown attribute)
   01 00 00 1C 01 25 01 19 01 00 A2 00 86 01 01 18
   01 19 01 00 85 00 86 01 01 1F 01 19 01 00 9C 00
   86 01 00 51 01 2A 00 01 11 01 12 00 00 45 00 46
   00 00 F6 00 C0 00 00 28 00 29 00 00 74 00 2B 00
   00 A1 00 2B 00 00 0E 00 2B 00 00 2A 00 2B 01 00
   11 00 2B 00 00 66 00 2B 01 00 80 00 2B 00 00 D9
   00 DA 01 00 7F 00 2B 00 00 9B 00 2B 00 00 A9 00
   2B 00 00 D7 00 D8 00 00 A7 00 33 00 00 A8 00 67
   00 00 CF 00 C0 00 00 CB 00 CC 00 00 D2 00 D3 00

  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
