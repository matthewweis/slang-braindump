Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/filefilter/NotFileFilter.class
  Last modified May 29, 2022; size 1460 bytes
  SHA-256 checksum e8500be806634c64f980a4373f115ae8b608df164b51a3bd7a865662e6769a07
  Compiled from "NotFileFilter.java"
public class org.apache.commons.io.filefilter.NotFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #16                         // org/apache/commons/io/filefilter/NotFileFilter
  super_class: #17                        // org/apache/commons/io/filefilter/AbstractFileFilter
  interfaces: 1, fields: 2, methods: 4, attributes: 1
Constant pool:
   #1 = Methodref          #17.#47        // org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
   #2 = Class              #48            // java/lang/IllegalArgumentException
   #3 = String             #49            // The filter must not be null
   #4 = Methodref          #2.#50         // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #5 = Fieldref           #16.#51        // org/apache/commons/io/filefilter/NotFileFilter.filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
   #6 = InterfaceMethodref #52.#53        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z
   #7 = InterfaceMethodref #52.#54        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
   #8 = Class              #55            // java/lang/StringBuilder
   #9 = Methodref          #8.#47         // java/lang/StringBuilder."<init>":()V
  #10 = Methodref          #17.#56        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
  #11 = Methodref          #8.#57         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #12 = String             #58            // (
  #13 = Methodref          #59.#56        // java/lang/Object.toString:()Ljava/lang/String;
  #14 = String             #60            // )
  #15 = Methodref          #8.#56         // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #16 = Class              #61            // org/apache/commons/io/filefilter/NotFileFilter
  #17 = Class              #62            // org/apache/commons/io/filefilter/AbstractFileFilter
  #18 = Class              #63            // java/io/Serializable
  #19 = Utf8               serialVersionUID
  #20 = Utf8               J
  #21 = Utf8               ConstantValue
  #22 = Long               6131563330944994230l
  #24 = Utf8               filter
  #25 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;
  #26 = Utf8               <init>
  #27 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V
  #28 = Utf8               Code
  #29 = Utf8               LineNumberTable
  #30 = Utf8               LocalVariableTable
  #31 = Utf8               this
  #32 = Utf8               Lorg/apache/commons/io/filefilter/NotFileFilter;
  #33 = Utf8               StackMapTable
  #34 = Class              #61            // org/apache/commons/io/filefilter/NotFileFilter
  #35 = Class              #64            // org/apache/commons/io/filefilter/IOFileFilter
  #36 = Utf8               accept
  #37 = Utf8               (Ljava/io/File;)Z
  #38 = Utf8               file
  #39 = Utf8               Ljava/io/File;
  #40 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z
  #41 = Utf8               name
  #42 = Utf8               Ljava/lang/String;
  #43 = Utf8               toString
  #44 = Utf8               ()Ljava/lang/String;
  #45 = Utf8               SourceFile
  #46 = Utf8               NotFileFilter.java
  #47 = NameAndType        #26:#65        // "<init>":()V
  #48 = Utf8               java/lang/IllegalArgumentException
  #49 = Utf8               The filter must not be null
  #50 = NameAndType        #26:#66        // "<init>":(Ljava/lang/String;)V
  #51 = NameAndType        #24:#25        // filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
  #52 = Class              #64            // org/apache/commons/io/filefilter/IOFileFilter
  #53 = NameAndType        #36:#37        // accept:(Ljava/io/File;)Z
  #54 = NameAndType        #36:#40        // accept:(Ljava/io/File;Ljava/lang/String;)Z
  #55 = Utf8               java/lang/StringBuilder
  #56 = NameAndType        #43:#44        // toString:()Ljava/lang/String;
  #57 = NameAndType        #67:#68        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #58 = Utf8               (
  #59 = Class              #69            // java/lang/Object
  #60 = Utf8               )
  #61 = Utf8               org/apache/commons/io/filefilter/NotFileFilter
  #62 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter
  #63 = Utf8               java/io/Serializable
  #64 = Utf8               org/apache/commons/io/filefilter/IOFileFilter
  #65 = Utf8               ()V
  #66 = Utf8               (Ljava/lang/String;)V
  #67 = Utf8               append
  #68 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #69 = Utf8               java/lang/Object
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 6131563330944994230l

  private final org.apache.commons.io.filefilter.IOFileFilter filter;
    descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter);
    descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter."<init>":()V
         4: aload_1
         5: ifnonnull     18
         8: new           #2                  // class java/lang/IllegalArgumentException
        11: dup
        12: ldc           #3                  // String The filter must not be null
        14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        17: athrow
        18: aload_0
        19: aload_1
        20: putfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
        23: return
      LineNumberTable:
        line 41: 0
        line 42: 4
        line 43: 8
        line 45: 18
        line 46: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;
            0      24     1 filter   Lorg/apache/commons/io/filefilter/IOFileFilter;
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class org/apache/commons/io/filefilter/NotFileFilter, class org/apache/commons/io/filefilter/IOFileFilter ]
          stack = []

  public boolean accept(java.io.File);
    descriptor: (Ljava/io/File;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
         4: aload_1
         5: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z
        10: ifne          17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: ireturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;
            0      19     1  file   Ljava/io/File;
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean accept(java.io.File, java.lang.String);
    descriptor: (Ljava/io/File;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
         4: aload_1
         5: aload_2
         6: invokeinterface #7,  3            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z
        11: ifne          18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: ireturn
      LineNumberTable:
        line 68: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;
            0      20     1  file   Ljava/io/File;
            0      20     2  name   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: new           #8                  // class java/lang/StringBuilder
         3: dup
         4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
         7: aload_0
         8: invokespecial #10                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;
        11: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        14: ldc           #12                 // String (
        16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        19: aload_0
        20: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;
        23: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: ldc           #14                 // String )
        31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        37: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      38     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;
}
SourceFile: "NotFileFilter.java"
