Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/xml/parsing/FactoryAdapter.class
  Last modified May 29, 2022; size 19349 bytes
  SHA-256 checksum e1dbea359fed77ba66c26a3886272149c263965701dcdc5ead03ce8319e76fce
  Compiled from "FactoryAdapter.scala"
public abstract class scala.xml.parsing.FactoryAdapter extends org.xml.sax.helpers.DefaultHandler implements scala.xml.factory.XMLLoader<scala.xml.Node>
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/xml/parsing/FactoryAdapter
  super_class: #5                         // org/xml/sax/helpers/DefaultHandler
  interfaces: 1, fields: 11, methods: 50, attributes: 7
Constant pool:
    #1 = Utf8               scala/xml/parsing/FactoryAdapter
    #2 = Class              #1            // scala/xml/parsing/FactoryAdapter
    #3 = Utf8               Lorg/xml/sax/helpers/DefaultHandler;Lscala/xml/factory/XMLLoader<Lscala/xml/Node;>;
    #4 = Utf8               org/xml/sax/helpers/DefaultHandler
    #5 = Class              #4            // org/xml/sax/helpers/DefaultHandler
    #6 = Utf8               scala/xml/factory/XMLLoader
    #7 = Class              #6            // scala/xml/factory/XMLLoader
    #8 = Utf8               FactoryAdapter.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005\u0005]h!B\u0013\'\u0003\u0003i\u0003\"B\"\u0001\t\u0003!\u0005bB$\u0001\u0001\u0004%\t\u0001\u0013\u0005\b\u0013\u0002\u0001\r\u0011\"\u0001K\u0011\u0019\t\u0006\u0001)Q\u0005\u007f!9!\u000b\u0001b\u0001\n\u0003\u0019\u0006B\u0002/\u0001A\u0003%A\u000bC\u0004^\u0001\u0001\u0007I\u0011\u00010\t\u000f!\u0004\u0001\u0019!C\u0001S\"11\u000e\u0001Q!\n}Cq\u0001\u001c\u0001A\u0002\u0013\u0005Q\u000eC\u0004p\u0001\u0001\u0007I\u0011\u00019\t\rI\u0004\u0001\u0015)\u0003o\u0011\u001d\u0019\b\u00011A\u0005\u0002QD\u0011\"a\u0001\u0001\u0001\u0004%\t!!\u0002\t\u000f\u0005%\u0001\u0001)Q\u0005k\"I\u00111\u0002\u0001A\u0002\u0013\u0005\u0011Q\u0002\u0005\n\u0003/\u0001\u0001\u0019!C\u0001\u00033A\u0001\"!\b\u0001A\u0003&\u0011q\u0002\u0005\n\u0003?\u0001\u0001\u0019!C\u0001\u0003CA\u0011\"a\t\u0001\u0001\u0004%\t!!\n\t\u000f\u0005%\u0002\u0001)Q\u0005m\"I\u00111\u0006\u0001A\u0002\u0013\u0005\u0011Q\u0006\u0005\n\u0003k\u0001\u0001\u0019!C\u0001\u0003oA\u0001\"a\u000f\u0001A\u0003&\u0011q\u0006\u0005\b\u0003{\u0001a\u0011AA \u0011\u001d\t)\u0005\u0001D\u0001\u0003\u000fBq!!\u001b\u0001\r\u0003\tY\u0007C\u0004\u0002x\u00011\t!!\u001f\t\u0013\u0005E\u0005A1A\u0005\u0002\u00055\u0002\u0002CAJ\u0001\u0001\u0006I!a\f\t\u000f\u0005U\u0005\u0001\"\u0011\u0002\u0018\"9\u0011q\u0017\u0001\u0005\n\u0005e\u0006bBAc\u0001\u0011\u0005\u0013q\u0019\u0005\b\u0003C\u0004A\u0011AAr\u0011\u001d\t)\u000f\u0001C!\u0003ODq!a<\u0001\t\u0003\n\tP\u0001\bGC\u000e$xN]=BI\u0006\u0004H/\u001a:\u000b\u0005\u001dB\u0013a\u00029beNLgn\u001a\u0006\u0003S)\n1\u0001_7m\u0015\u0005Y\u0013!B:dC2\f7\u0001A\n\u0004\u00019J\u0004CA\u00188\u001b\u0005\u0001$BA\u00193\u0003\u001dAW\r\u001c9feNT!a\r\u001b\u0002\u0007M\f\u0007P\u0003\u0002*k)\ta\'A\u0002pe\u001eL!\u0001\u000f\u0019\u0003\u001d\u0011+g-Y;mi\"\u000bg\u000e\u001a7feB\u0019!(P \u000e\u0003mR!\u0001\u0010\u0015\u0002\u000f\u0019\f7\r^8ss&\u0011ah\u000f\u0002\n16cEj\\1eKJ\u0004\"\u0001Q!\u000e\u0003!J!A\u0011\u0015\u0003\t9{G-Z\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\u0015\u0003\"A\u0012\u0001\u000e\u0003\u0019\n\u0001B]8pi\u0016cW-\\\u000b\u0002\u007f\u0005a!o\\8u\u000b2,Wn\u0018\u0013fcR\u00111j\u0014\t\u0003\u00196k\u0011AK\u0005\u0003\u001d*\u0012A!\u00168ji\"9\u0001kAA\u0001\u0002\u0004y\u0014a\u0001=%c\u0005I!o\\8u\u000b2,W\u000eI\u0001\u0007EV4g-\u001a:\u0016\u0003Q\u0003\"!\u0016.\u000e\u0003YS!a\u0016-\u0002\u000f5,H/\u00192mK*\u0011\u0011LK\u0001\u000bG>dG.Z2uS>t\u0017BA.W\u00055\u0019FO]5oO\n+\u0018\u000e\u001c3fe\u00069!-\u001e4gKJ\u0004\u0013aC1uiJL\'m\u0015;bG.,\u0012a\u0018\t\u0004A\u000e,W\"A1\u000b\u0005\tD\u0016!C5n[V$\u0018M\u00197f\u0013\t!\u0017M\u0001\u0003MSN$\bC\u0001!g\u0013\t9\u0007F\u0001\u0005NKR\fG)\u0019;b\u0003=\tG\u000f\u001e:jEN#\u0018mY6`I\u0015\fHCA&k\u0011\u001d\u0001\u0006\"!AA\u0002}\u000bA\"\u0019;ue&\u00147\u000b^1dW\u0002\na\u0001[*uC\u000e\\W#\u00018\u0011\u0007\u0001\u001cw(\u0001\u0006i\'R\f7m[0%KF$\"aS9\t\u000fA[\u0011\u0011!a\u0001]\u00069\u0001n\u0015;bG.\u0004\u0013\u0001\u0003;bON#\u0018mY6\u0016\u0003U\u00042\u0001Y2w!\t9hP\u0004\u0002yyB\u0011\u0011PK\u0007\u0002u*\u00111\u0010L\u0001\u0007yI|w\u000e\u001e \n\u0005uT\u0013A\u0002)sK\u0012,g-C\u0002\u0000\u0003\u0003\u0011aa\u0015;sS:<\'BA?+\u00031!\u0018mZ*uC\u000e\\w\fJ3r)\rY\u0015q\u0001\u0005\b!:\t\t\u00111\u0001v\u0003%!\u0018mZ*uC\u000e\\\u0007%\u0001\u0006tG>\u0004Xm\u0015;bG.,\"!a\u0004\u0011\t\u0001\u001c\u0017\u0011\u0003\t\u0004\u0001\u0006M\u0011bAA\u000bQ\t\u0001b*Y7fgB\f7-\u001a\"j]\u0012LgnZ\u0001\u000fg\u000e|\u0007/Z*uC\u000e\\w\fJ3r)\rY\u00151\u0004\u0005\t!F\t\t\u00111\u0001\u0002\u0010\u0005Y1oY8qKN#\u0018mY6!\u0003\u0019\u0019WO\u001d+bOV\ta/\u0001\u0006dkJ$\u0016mZ0%KF$2aSA\u0014\u0011\u001d\u0001F#!AA\u0002Y\fqaY;s)\u0006<\u0007%A\u0004dCB$XO]3\u0016\u0005\u0005=\u0002c\u0001\'\u00022%\u0019\u00111\u0007\u0016\u0003\u000f\t{w\u000e\\3b]\u0006Y1-\u00199ukJ,w\fJ3r)\rY\u0015\u0011\b\u0005\t!^\t\t\u00111\u0001\u00020\u0005A1-\u00199ukJ,\u0007%\u0001\to_\u0012,7i\u001c8uC&t7\u000fV3yiR!\u0011qFA!\u0011\u0019\t\u0019%\u0007a\u0001m\u0006IAn\\2bY:\u000bW.Z\u0001\u000bGJ,\u0017\r^3O_\u0012,GcC \u0002J\u00055\u0013\u0011KA+\u00033Ba!a\u0013\u001b\u0001\u00041\u0018a\u00019sK\"1\u0011q\n\u000eA\u0002Y\f\u0001\"\u001a7f[:\u000bW.\u001a\u0005\u0007\u0003\'R\u0002\u0019A3\u0002\u000f\u0005$HO]5cg\"9\u0011q\u000b\u000eA\u0002\u0005E\u0011!B:d_B,\u0007bBA.5\u0001\u0007\u0011QL\u0001\u0007G\"LE/\u001a:\u0011\u000b\u0005}\u0013QM \u000f\u00071\u000b\t\'C\u0002\u0002d)\nq\u0001]1dW\u0006<W-C\u0002e\u0003OR1!a\u0019+\u0003)\u0019\'/Z1uKR+\u0007\u0010\u001e\u000b\u0005\u0003[\n\u0019\bE\u0002A\u0003_J1!!\u001d)\u0005\u0011!V\r\u001f;\t\r\u0005U4\u00041\u0001w\u0003\u0011!X\r\u001f;\u0002\u001f\r\u0014X-\u0019;f!J|7-\u00138tiJ$b!a\u001f\u0002\n\u00065\u0005CBA?\u0003\u007f\n\u0019)D\u0001Y\u0013\r\t\t\t\u0017\u0002\u0004\'\u0016\f\bc\u0001!\u0002\u0006&\u0019\u0011q\u0011\u0015\u0003\u0013A\u0013xnY%ogR\u0014\bBBAF9\u0001\u0007a/\u0001\u0004uCJ<W\r\u001e\u0005\u0007\u0003\u001fc\u0002\u0019\u0001<\u0002\t\u0011\fG/Y\u0001\u0014]>\u0014X.\u00197ju\u0016<\u0006.\u001b;fgB\f7-Z\u0001\u0015]>\u0014X.\u00197ju\u0016<\u0006.\u001b;fgB\f7-\u001a\u0011\u0002\u0015\rD\u0017M]1di\u0016\u00148\u000fF\u0004L\u00033\u000bI+a-\t\u000f\u0005mu\u00041\u0001\u0002\u001e\u0006\u00111\r\u001b\t\u0006\u0019\u0006}\u00151U\u0005\u0004\u0003CS#!B!se\u0006L\bc\u0001\'\u0002&&\u0019\u0011q\u0015\u0016\u0003\t\rC\u0017M\u001d\u0005\b\u0003W{\u0002\u0019AAW\u0003\u0019ygMZ:fiB\u0019A*a,\n\u0007\u0005E&FA\u0002J]RDq!!. \u0001\u0004\ti+\u0001\u0004mK:<G\u000f[\u0001\ngBd\u0017\u000e\u001e(b[\u0016$B!a/\u0002BB)A*!0wm&\u0019\u0011q\u0018\u0016\u0003\rQ+\b\u000f\\33\u0011\u0019\t\u0019\r\ta\u0001m\u0006\t1/\u0001\u0007ti\u0006\u0014H/\u00127f[\u0016tG\u000fF\u0005L\u0003\u0013\fi-!5\u0002V\"1\u00111Z\u0011A\u0002Y\f1!\u001e:j\u0011\u0019\ty-\ta\u0001m\u0006Qq\f\\8dC2t\u0015-\\3\t\r\u0005M\u0017\u00051\u0001w\u0003\u0015\th.Y7f\u0011\u001d\t9.\ta\u0001\u00033\f!\"\u0019;ue&\u0014W\u000f^3t!\u0011\tY.!8\u000e\u0003IJ1!a83\u0005)\tE\u000f\u001e:jEV$Xm]\u0001\fG\u0006\u0004H/\u001e:f)\u0016DH\u000fF\u0001L\u0003))g\u000eZ#mK6,g\u000e\u001e\u000b\b\u0017\u0006%\u00181^Aw\u0011\u0019\tYm\ta\u0001m\"1\u0011qZ\u0012A\u0002YDa!a5$\u0001\u00041\u0018!\u00069s_\u000e,7o]5oO&s7\u000f\u001e:vGRLwN\u001c\u000b\u0006\u0017\u0006M\u0018Q\u001f\u0005\u0007\u0003\u0017#\u0003\u0019\u0001<\t\r\u0005=E\u00051\u0001w\u0001
   #12 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #13 = Class              #12           // java/lang/invoke/MethodHandles$Lookup
   #14 = Utf8               java/lang/invoke/MethodHandles
   #15 = Class              #14           // java/lang/invoke/MethodHandles
   #16 = Utf8               Lookup
   #17 = Utf8               rootElem
   #18 = Utf8               Lscala/xml/Node;
   #19 = Utf8               buffer
   #20 = Utf8               Lscala/collection/mutable/StringBuilder;
   #21 = Utf8               attribStack
   #22 = Utf8               Lscala/collection/immutable/List;
   #23 = Utf8               Lscala/collection/immutable/List<Lscala/xml/MetaData;>;
   #24 = Utf8               hStack
   #25 = Utf8               Lscala/collection/immutable/List<Lscala/xml/Node;>;
   #26 = Utf8               tagStack
   #27 = Utf8               Lscala/collection/immutable/List<Ljava/lang/String;>;
   #28 = Utf8               scopeStack
   #29 = Utf8               Lscala/collection/immutable/List<Lscala/xml/NamespaceBinding;>;
   #30 = Utf8               curTag
   #31 = Utf8               Ljava/lang/String;
   #32 = Utf8               capture
   #33 = Utf8               Z
   #34 = Utf8               normalizeWhitespace
   #35 = Utf8               scala$xml$factory$XMLLoader$$parserInstance
   #36 = Utf8               Ljava/lang/ThreadLocal;
   #37 = Utf8               Ljava/lang/ThreadLocal<Ljavax/xml/parsers/SAXParser;>;
   #38 = Utf8               bitmap$0
   #39 = Utf8               adapter
   #40 = Utf8               ()Lscala/xml/parsing/FactoryAdapter;
   #41 = Utf8               adapter$
   #42 = Utf8               (Lscala/xml/factory/XMLLoader;)Lscala/xml/parsing/FactoryAdapter;
   #43 = NameAndType        #41:#42       // adapter$:(Lscala/xml/factory/XMLLoader;)Lscala/xml/parsing/FactoryAdapter;
   #44 = InterfaceMethodref #7.#43        // scala/xml/factory/XMLLoader.adapter$:(Lscala/xml/factory/XMLLoader;)Lscala/xml/parsing/FactoryAdapter;
   #45 = Utf8               this
   #46 = Utf8               Lscala/xml/parsing/FactoryAdapter;
   #47 = Utf8               parser
   #48 = Utf8               ()Ljavax/xml/parsers/SAXParser;
   #49 = Utf8               parser$
   #50 = Utf8               (Lscala/xml/factory/XMLLoader;)Ljavax/xml/parsers/SAXParser;
   #51 = NameAndType        #49:#50       // parser$:(Lscala/xml/factory/XMLLoader;)Ljavax/xml/parsers/SAXParser;
   #52 = InterfaceMethodref #7.#51        // scala/xml/factory/XMLLoader.parser$:(Lscala/xml/factory/XMLLoader;)Ljavax/xml/parsers/SAXParser;
   #53 = Utf8               loadXML
   #54 = Utf8               (Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
   #55 = Utf8               source
   #56 = Utf8               loadXML$
   #57 = Utf8               (Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
   #58 = NameAndType        #56:#57       // loadXML$:(Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
   #59 = InterfaceMethodref #7.#58        // scala/xml/factory/XMLLoader.loadXML$:(Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
   #60 = Utf8               Lorg/xml/sax/InputSource;
   #61 = Utf8               Ljavax/xml/parsers/SAXParser;
   #62 = Utf8               loadFile
   #63 = Utf8               (Ljava/io/File;)Lscala/xml/Node;
   #64 = Utf8               file
   #65 = Utf8               loadFile$
   #66 = Utf8               (Lscala/xml/factory/XMLLoader;Ljava/io/File;)Lscala/xml/Node;
   #67 = NameAndType        #65:#66       // loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/io/File;)Lscala/xml/Node;
   #68 = InterfaceMethodref #7.#67        // scala/xml/factory/XMLLoader.loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/io/File;)Lscala/xml/Node;
   #69 = Utf8               Ljava/io/File;
   #70 = Utf8               (Ljava/io/FileDescriptor;)Lscala/xml/Node;
   #71 = Utf8               fd
   #72 = Utf8               (Lscala/xml/factory/XMLLoader;Ljava/io/FileDescriptor;)Lscala/xml/Node;
   #73 = NameAndType        #65:#72       // loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/io/FileDescriptor;)Lscala/xml/Node;
   #74 = InterfaceMethodref #7.#73        // scala/xml/factory/XMLLoader.loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/io/FileDescriptor;)Lscala/xml/Node;
   #75 = Utf8               Ljava/io/FileDescriptor;
   #76 = Utf8               (Ljava/lang/String;)Lscala/xml/Node;
   #77 = Utf8               name
   #78 = Utf8               (Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
   #79 = NameAndType        #65:#78       // loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
   #80 = InterfaceMethodref #7.#79        // scala/xml/factory/XMLLoader.loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
   #81 = Utf8               load
   #82 = Utf8               (Ljava/io/InputStream;)Lscala/xml/Node;
   #83 = Utf8               is
   #84 = Utf8               load$
   #85 = Utf8               (Lscala/xml/factory/XMLLoader;Ljava/io/InputStream;)Lscala/xml/Node;
   #86 = NameAndType        #84:#85       // load$:(Lscala/xml/factory/XMLLoader;Ljava/io/InputStream;)Lscala/xml/Node;
   #87 = InterfaceMethodref #7.#86        // scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/io/InputStream;)Lscala/xml/Node;
   #88 = Utf8               Ljava/io/InputStream;
   #89 = Utf8               (Ljava/io/Reader;)Lscala/xml/Node;
   #90 = Utf8               reader
   #91 = Utf8               (Lscala/xml/factory/XMLLoader;Ljava/io/Reader;)Lscala/xml/Node;
   #92 = NameAndType        #84:#91       // load$:(Lscala/xml/factory/XMLLoader;Ljava/io/Reader;)Lscala/xml/Node;
   #93 = InterfaceMethodref #7.#92        // scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/io/Reader;)Lscala/xml/Node;
   #94 = Utf8               Ljava/io/Reader;
   #95 = Utf8               sysID
   #96 = NameAndType        #84:#78       // load$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
   #97 = InterfaceMethodref #7.#96        // scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
   #98 = Utf8               (Lorg/xml/sax/InputSource;)Lscala/xml/Node;
   #99 = Utf8               (Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;)Lscala/xml/Node;
  #100 = NameAndType        #84:#99       // load$:(Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;)Lscala/xml/Node;
  #101 = InterfaceMethodref #7.#100       // scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;)Lscala/xml/Node;
  #102 = Utf8               (Ljava/net/URL;)Lscala/xml/Node;
  #103 = Utf8               url
  #104 = Utf8               (Lscala/xml/factory/XMLLoader;Ljava/net/URL;)Lscala/xml/Node;
  #105 = NameAndType        #84:#104      // load$:(Lscala/xml/factory/XMLLoader;Ljava/net/URL;)Lscala/xml/Node;
  #106 = InterfaceMethodref #7.#105       // scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/net/URL;)Lscala/xml/Node;
  #107 = Utf8               Ljava/net/URL;
  #108 = Utf8               loadString
  #109 = Utf8               string
  #110 = Utf8               loadString$
  #111 = NameAndType        #110:#78      // loadString$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
  #112 = InterfaceMethodref #7.#111       // scala/xml/factory/XMLLoader.loadString$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
  #113 = Utf8               scala$xml$factory$XMLLoader$$parserInstance$lzycompute
  #114 = Utf8               ()Ljava/lang/ThreadLocal;
  #115 = Utf8               ()Ljava/lang/ThreadLocal<Ljavax/xml/parsers/SAXParser;>;
  #116 = NameAndType        #38:#33       // bitmap$0:Z
  #117 = Fieldref           #2.#116       // scala/xml/parsing/FactoryAdapter.bitmap$0:Z
  #118 = Utf8               scala$xml$factory$XMLLoader$$parserInstance$
  #119 = Utf8               (Lscala/xml/factory/XMLLoader;)Ljava/lang/ThreadLocal;
  #120 = NameAndType        #118:#119     // scala$xml$factory$XMLLoader$$parserInstance$:(Lscala/xml/factory/XMLLoader;)Ljava/lang/ThreadLocal;
  #121 = InterfaceMethodref #7.#120       // scala/xml/factory/XMLLoader.scala$xml$factory$XMLLoader$$parserInstance$:(Lscala/xml/factory/XMLLoader;)Ljava/lang/ThreadLocal;
  #122 = NameAndType        #35:#36       // scala$xml$factory$XMLLoader$$parserInstance:Ljava/lang/ThreadLocal;
  #123 = Fieldref           #2.#122       // scala/xml/parsing/FactoryAdapter.scala$xml$factory$XMLLoader$$parserInstance:Ljava/lang/ThreadLocal;
  #124 = Utf8               java/lang/Throwable
  #125 = Class              #124          // java/lang/Throwable
  #126 = NameAndType        #113:#114     // scala$xml$factory$XMLLoader$$parserInstance$lzycompute:()Ljava/lang/ThreadLocal;
  #127 = Methodref          #2.#126       // scala/xml/parsing/FactoryAdapter.scala$xml$factory$XMLLoader$$parserInstance$lzycompute:()Ljava/lang/ThreadLocal;
  #128 = Utf8               java/lang/ThreadLocal
  #129 = Class              #128          // java/lang/ThreadLocal
  #130 = Utf8               ()Lscala/xml/Node;
  #131 = NameAndType        #17:#18       // rootElem:Lscala/xml/Node;
  #132 = Fieldref           #2.#131       // scala/xml/parsing/FactoryAdapter.rootElem:Lscala/xml/Node;
  #133 = Utf8               rootElem_$eq
  #134 = Utf8               (Lscala/xml/Node;)V
  #135 = Utf8               x$1
  #136 = Utf8               ()Lscala/collection/mutable/StringBuilder;
  #137 = NameAndType        #19:#20       // buffer:Lscala/collection/mutable/StringBuilder;
  #138 = Fieldref           #2.#137       // scala/xml/parsing/FactoryAdapter.buffer:Lscala/collection/mutable/StringBuilder;
  #139 = Utf8               ()Lscala/collection/immutable/List;
  #140 = Utf8               ()Lscala/collection/immutable/List<Lscala/xml/MetaData;>;
  #141 = NameAndType        #21:#22       // attribStack:Lscala/collection/immutable/List;
  #142 = Fieldref           #2.#141       // scala/xml/parsing/FactoryAdapter.attribStack:Lscala/collection/immutable/List;
  #143 = Utf8               attribStack_$eq
  #144 = Utf8               (Lscala/collection/immutable/List;)V
  #145 = Utf8               (Lscala/collection/immutable/List<Lscala/xml/MetaData;>;)V
  #146 = Utf8               ()Lscala/collection/immutable/List<Lscala/xml/Node;>;
  #147 = NameAndType        #24:#22       // hStack:Lscala/collection/immutable/List;
  #148 = Fieldref           #2.#147       // scala/xml/parsing/FactoryAdapter.hStack:Lscala/collection/immutable/List;
  #149 = Utf8               hStack_$eq
  #150 = Utf8               (Lscala/collection/immutable/List<Lscala/xml/Node;>;)V
  #151 = Utf8               ()Lscala/collection/immutable/List<Ljava/lang/String;>;
  #152 = NameAndType        #26:#22       // tagStack:Lscala/collection/immutable/List;
  #153 = Fieldref           #2.#152       // scala/xml/parsing/FactoryAdapter.tagStack:Lscala/collection/immutable/List;
  #154 = Utf8               tagStack_$eq
  #155 = Utf8               (Lscala/collection/immutable/List<Ljava/lang/String;>;)V
  #156 = Utf8               ()Lscala/collection/immutable/List<Lscala/xml/NamespaceBinding;>;
  #157 = NameAndType        #28:#22       // scopeStack:Lscala/collection/immutable/List;
  #158 = Fieldref           #2.#157       // scala/xml/parsing/FactoryAdapter.scopeStack:Lscala/collection/immutable/List;
  #159 = Utf8               scopeStack_$eq
  #160 = Utf8               (Lscala/collection/immutable/List<Lscala/xml/NamespaceBinding;>;)V
  #161 = Utf8               ()Ljava/lang/String;
  #162 = NameAndType        #30:#31       // curTag:Ljava/lang/String;
  #163 = Fieldref           #2.#162       // scala/xml/parsing/FactoryAdapter.curTag:Ljava/lang/String;
  #164 = Utf8               curTag_$eq
  #165 = Utf8               (Ljava/lang/String;)V
  #166 = Utf8               ()Z
  #167 = NameAndType        #32:#33       // capture:Z
  #168 = Fieldref           #2.#167       // scala/xml/parsing/FactoryAdapter.capture:Z
  #169 = Utf8               capture_$eq
  #170 = Utf8               (Z)V
  #171 = Utf8               nodeContainsText
  #172 = Utf8               (Ljava/lang/String;)Z
  #173 = Utf8               localName
  #174 = Utf8               createNode
  #175 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List;)Lscala/xml/Node;
  #176 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List<Lscala/xml/Node;>;)Lscala/xml/Node;
  #177 = Utf8               pre
  #178 = Utf8               elemName
  #179 = Utf8               attribs
  #180 = Utf8               scope
  #181 = Utf8               chIter
  #182 = Utf8               createText
  #183 = Utf8               (Ljava/lang/String;)Lscala/xml/Text;
  #184 = Utf8               text
  #185 = Utf8               createProcInstr
  #186 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq;
  #187 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq<Lscala/xml/ProcInstr;>;
  #188 = Utf8               target
  #189 = Utf8               data
  #190 = NameAndType        #34:#33       // normalizeWhitespace:Z
  #191 = Fieldref           #2.#190       // scala/xml/parsing/FactoryAdapter.normalizeWhitespace:Z
  #192 = Utf8               characters
  #193 = Utf8               ([CII)V
  #194 = Utf8               ch
  #195 = Utf8               offset
  #196 = Utf8               length
  #197 = NameAndType        #32:#166      // capture:()Z
  #198 = Methodref          #2.#197       // scala/xml/parsing/FactoryAdapter.capture:()Z
  #199 = NameAndType        #34:#166      // normalizeWhitespace:()Z
  #200 = Methodref          #2.#199       // scala/xml/parsing/FactoryAdapter.normalizeWhitespace:()Z
  #201 = NameAndType        #19:#136      // buffer:()Lscala/collection/mutable/StringBuilder;
  #202 = Methodref          #2.#201       // scala/xml/parsing/FactoryAdapter.buffer:()Lscala/collection/mutable/StringBuilder;
  #203 = Utf8               scala/collection/mutable/StringBuilder
  #204 = Class              #203          // scala/collection/mutable/StringBuilder
  #205 = Utf8               appendAll
  #206 = Utf8               ([CII)Lscala/collection/mutable/StringBuilder;
  #207 = NameAndType        #205:#206     // appendAll:([CII)Lscala/collection/mutable/StringBuilder;
  #208 = Methodref          #204.#207     // scala/collection/mutable/StringBuilder.appendAll:([CII)Lscala/collection/mutable/StringBuilder;
  #209 = Utf8               scala/collection/ArrayOps$
  #210 = Class              #209          // scala/collection/ArrayOps$
  #211 = Utf8               MODULE$
  #212 = Utf8               Lscala/collection/ArrayOps$;
  #213 = NameAndType        #211:#212     // MODULE$:Lscala/collection/ArrayOps$;
  #214 = Fieldref           #210.#213     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #215 = Utf8               scala/Predef$
  #216 = Class              #215          // scala/Predef$
  #217 = Utf8               Lscala/Predef$;
  #218 = NameAndType        #211:#217     // MODULE$:Lscala/Predef$;
  #219 = Fieldref           #216.#218     // scala/Predef$.MODULE$:Lscala/Predef$;
  #220 = Utf8               charArrayOps
  #221 = Utf8               ([C)Ljava/lang/Object;
  #222 = NameAndType        #220:#221     // charArrayOps:([C)Ljava/lang/Object;
  #223 = Methodref          #216.#222     // scala/Predef$.charArrayOps:([C)Ljava/lang/Object;
  #224 = Utf8               slice$extension
  #225 = Utf8               (Ljava/lang/Object;II)Ljava/lang/Object;
  #226 = NameAndType        #224:#225     // slice$extension:(Ljava/lang/Object;II)Ljava/lang/Object;
  #227 = Methodref          #210.#226     // scala/collection/ArrayOps$.slice$extension:(Ljava/lang/Object;II)Ljava/lang/Object;
  #228 = Utf8               [C
  #229 = Class              #228          // "[C"
  #230 = Utf8               iterator$extension
  #231 = Utf8               (Ljava/lang/Object;)Lscala/collection/Iterator;
  #232 = NameAndType        #230:#231     // iterator$extension:(Ljava/lang/Object;)Lscala/collection/Iterator;
  #233 = Methodref          #210.#232     // scala/collection/ArrayOps$.iterator$extension:(Ljava/lang/Object;)Lscala/collection/Iterator;
  #234 = Utf8               scala/collection/Iterator
  #235 = Class              #234          // scala/collection/Iterator
  #236 = Utf8               hasNext
  #237 = NameAndType        #236:#166     // hasNext:()Z
  #238 = InterfaceMethodref #235.#237     // scala/collection/Iterator.hasNext:()Z
  #239 = Utf8               next
  #240 = Utf8               ()Ljava/lang/Object;
  #241 = NameAndType        #239:#240     // next:()Ljava/lang/Object;
  #242 = InterfaceMethodref #235.#241     // scala/collection/Iterator.next:()Ljava/lang/Object;
  #243 = Utf8               scala/runtime/BoxesRunTime
  #244 = Class              #243          // scala/runtime/BoxesRunTime
  #245 = Utf8               unboxToChar
  #246 = Utf8               (Ljava/lang/Object;)C
  #247 = NameAndType        #245:#246     // unboxToChar:(Ljava/lang/Object;)C
  #248 = Methodref          #244.#247     // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #249 = Utf8               scala/runtime/RichChar$
  #250 = Class              #249          // scala/runtime/RichChar$
  #251 = Utf8               Lscala/runtime/RichChar$;
  #252 = NameAndType        #211:#251     // MODULE$:Lscala/runtime/RichChar$;
  #253 = Fieldref           #250.#252     // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
  #254 = Utf8               charWrapper
  #255 = Utf8               (C)C
  #256 = NameAndType        #254:#255     // charWrapper:(C)C
  #257 = Methodref          #216.#256     // scala/Predef$.charWrapper:(C)C
  #258 = Utf8               isWhitespace$extension
  #259 = Utf8               (C)Z
  #260 = NameAndType        #258:#259     // isWhitespace$extension:(C)Z
  #261 = Methodref          #250.#260     // scala/runtime/RichChar$.isWhitespace$extension:(C)Z
  #262 = Utf8               append
  #263 = Utf8               (C)Lscala/collection/mutable/StringBuilder;
  #264 = NameAndType        #262:#263     // append:(C)Lscala/collection/mutable/StringBuilder;
  #265 = Methodref          #204.#264     // scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
  #266 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #267 = MethodType         #266          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #268 = Utf8               $anonfun$characters$1$adapted
  #269 = NameAndType        #268:#266     // $anonfun$characters$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #270 = Methodref          #2.#269       // scala/xml/parsing/FactoryAdapter.$anonfun$characters$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #271 = MethodHandle       6:#270        // REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$characters$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #272 = Integer            1
  #273 = Utf8               java/lang/invoke/LambdaMetafactory
  #274 = Class              #273          // java/lang/invoke/LambdaMetafactory
  #275 = Utf8               altMetafactory
  #276 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #277 = NameAndType        #275:#276     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #278 = Methodref          #274.#277     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #279 = MethodHandle       6:#278        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #280 = Utf8               apply
  #281 = Utf8               ()Lscala/Function1;
  #282 = NameAndType        #280:#281     // apply:()Lscala/Function1;
  #283 = InvokeDynamic      #0:#282       // #0:apply:()Lscala/Function1;
  #284 = Utf8               dropWhile
  #285 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #286 = NameAndType        #284:#285     // dropWhile:(Lscala/Function1;)Lscala/collection/Iterator;
  #287 = InterfaceMethodref #235.#286     // scala/collection/Iterator.dropWhile:(Lscala/Function1;)Lscala/collection/Iterator;
  #288 = Utf8               c
  #289 = Utf8               C
  #290 = Utf8               isSpace
  #291 = Utf8               it
  #292 = Utf8               Lscala/collection/Iterator;
  #293 = Utf8               I
  #294 = Utf8               splitName
  #295 = Utf8               (Ljava/lang/String;)Lscala/Tuple2;
  #296 = Utf8               (Ljava/lang/String;)Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;
  #297 = Utf8               s
  #298 = Utf8               java/lang/String
  #299 = Class              #298          // java/lang/String
  #300 = Utf8               indexOf
  #301 = Utf8               (I)I
  #302 = NameAndType        #300:#301     // indexOf:(I)I
  #303 = Methodref          #299.#302     // java/lang/String.indexOf:(I)I
  #304 = Utf8               scala/Tuple2
  #305 = Class              #304          // scala/Tuple2
  #306 = Utf8               <init>
  #307 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #308 = NameAndType        #306:#307     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #309 = Methodref          #305.#308     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #310 = Utf8               scala/collection/StringOps$
  #311 = Class              #310          // scala/collection/StringOps$
  #312 = Utf8               Lscala/collection/StringOps$;
  #313 = NameAndType        #211:#312     // MODULE$:Lscala/collection/StringOps$;
  #314 = Fieldref           #311.#313     // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
  #315 = Utf8               augmentString
  #316 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #317 = NameAndType        #315:#316     // augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #318 = Methodref          #216.#317     // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
  #319 = Utf8               take$extension
  #320 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
  #321 = NameAndType        #319:#320     // take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #322 = Methodref          #311.#321     // scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #323 = Utf8               drop$extension
  #324 = NameAndType        #323:#320     // drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #325 = Methodref          #311.#324     // scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
  #326 = Utf8               idx
  #327 = Utf8               startElement
  #328 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
  #329 = Utf8               uri
  #330 = Utf8               _localName
  #331 = Utf8               qname
  #332 = Utf8               attributes
  #333 = Utf8               captureText
  #334 = Utf8               ()V
  #335 = NameAndType        #333:#334     // captureText:()V
  #336 = Methodref          #2.#335       // scala/xml/parsing/FactoryAdapter.captureText:()V
  #337 = NameAndType        #30:#161      // curTag:()Ljava/lang/String;
  #338 = Methodref          #2.#337       // scala/xml/parsing/FactoryAdapter.curTag:()Ljava/lang/String;
  #339 = NameAndType        #26:#139      // tagStack:()Lscala/collection/immutable/List;
  #340 = Methodref          #2.#339       // scala/xml/parsing/FactoryAdapter.tagStack:()Lscala/collection/immutable/List;
  #341 = Utf8               scala/collection/immutable/List
  #342 = Class              #341          // scala/collection/immutable/List
  #343 = Utf8               $colon$colon
  #344 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/List;
  #345 = NameAndType        #343:#344     // $colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
  #346 = Methodref          #342.#345     // scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
  #347 = NameAndType        #154:#144     // tagStack_$eq:(Lscala/collection/immutable/List;)V
  #348 = Methodref          #2.#347       // scala/xml/parsing/FactoryAdapter.tagStack_$eq:(Lscala/collection/immutable/List;)V
  #349 = NameAndType        #164:#165     // curTag_$eq:(Ljava/lang/String;)V
  #350 = Methodref          #2.#349       // scala/xml/parsing/FactoryAdapter.curTag_$eq:(Ljava/lang/String;)V
  #351 = NameAndType        #294:#295     // splitName:(Ljava/lang/String;)Lscala/Tuple2;
  #352 = Methodref          #2.#351       // scala/xml/parsing/FactoryAdapter.splitName:(Ljava/lang/String;)Lscala/Tuple2;
  #353 = Utf8               _2
  #354 = NameAndType        #353:#240     // _2:()Ljava/lang/Object;
  #355 = Methodref          #305.#354     // scala/Tuple2._2:()Ljava/lang/Object;
  #356 = NameAndType        #171:#172     // nodeContainsText:(Ljava/lang/String;)Z
  #357 = Methodref          #2.#356       // scala/xml/parsing/FactoryAdapter.nodeContainsText:(Ljava/lang/String;)Z
  #358 = NameAndType        #169:#170     // capture_$eq:(Z)V
  #359 = Methodref          #2.#358       // scala/xml/parsing/FactoryAdapter.capture_$eq:(Z)V
  #360 = NameAndType        #24:#139      // hStack:()Lscala/collection/immutable/List;
  #361 = Methodref          #2.#360       // scala/xml/parsing/FactoryAdapter.hStack:()Lscala/collection/immutable/List;
  #362 = NameAndType        #149:#144     // hStack_$eq:(Lscala/collection/immutable/List;)V
  #363 = Methodref          #2.#362       // scala/xml/parsing/FactoryAdapter.hStack_$eq:(Lscala/collection/immutable/List;)V
  #364 = Utf8               scala/xml/Null$
  #365 = Class              #364          // scala/xml/Null$
  #366 = Utf8               Lscala/xml/Null$;
  #367 = NameAndType        #211:#366     // MODULE$:Lscala/xml/Null$;
  #368 = Fieldref           #365.#367     // scala/xml/Null$.MODULE$:Lscala/xml/Null$;
  #369 = Utf8               scala/runtime/ObjectRef
  #370 = Class              #369          // scala/runtime/ObjectRef
  #371 = Utf8               create
  #372 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #373 = NameAndType        #371:#372     // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #374 = Methodref          #370.#373     // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
  #375 = NameAndType        #28:#139      // scopeStack:()Lscala/collection/immutable/List;
  #376 = Methodref          #2.#375       // scala/xml/parsing/FactoryAdapter.scopeStack:()Lscala/collection/immutable/List;
  #377 = Utf8               isEmpty
  #378 = NameAndType        #377:#166     // isEmpty:()Z
  #379 = Methodref          #342.#378     // scala/collection/immutable/List.isEmpty:()Z
  #380 = Utf8               scala/xml/TopScope$
  #381 = Class              #380          // scala/xml/TopScope$
  #382 = Utf8               Lscala/xml/TopScope$;
  #383 = NameAndType        #211:#382     // MODULE$:Lscala/xml/TopScope$;
  #384 = Fieldref           #381.#383     // scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
  #385 = Utf8               head
  #386 = NameAndType        #385:#240     // head:()Ljava/lang/Object;
  #387 = Methodref          #342.#386     // scala/collection/immutable/List.head:()Ljava/lang/Object;
  #388 = Utf8               scala/xml/NamespaceBinding
  #389 = Class              #388          // scala/xml/NamespaceBinding
  #390 = Utf8               scala/runtime/RichInt$
  #391 = Class              #390          // scala/runtime/RichInt$
  #392 = Utf8               Lscala/runtime/RichInt$;
  #393 = NameAndType        #211:#392     // MODULE$:Lscala/runtime/RichInt$;
  #394 = Fieldref           #391.#393     // scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
  #395 = Utf8               intWrapper
  #396 = NameAndType        #395:#301     // intWrapper:(I)I
  #397 = Methodref          #216.#396     // scala/Predef$.intWrapper:(I)I
  #398 = Utf8               org/xml/sax/Attributes
  #399 = Class              #398          // org/xml/sax/Attributes
  #400 = Utf8               getLength
  #401 = Utf8               ()I
  #402 = NameAndType        #400:#401     // getLength:()I
  #403 = InterfaceMethodref #399.#402     // org/xml/sax/Attributes.getLength:()I
  #404 = Utf8               until$extension
  #405 = Utf8               (II)Lscala/collection/immutable/Range;
  #406 = NameAndType        #404:#405     // until$extension:(II)Lscala/collection/immutable/Range;
  #407 = Methodref          #391.#406     // scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
  #408 = Utf8               scala/collection/immutable/Range
  #409 = Class              #408          // scala/collection/immutable/Range
  #410 = Utf8               reverse
  #411 = Utf8               ()Lscala/collection/immutable/Range;
  #412 = NameAndType        #410:#411     // reverse:()Lscala/collection/immutable/Range;
  #413 = Methodref          #409.#412     // scala/collection/immutable/Range.reverse:()Lscala/collection/immutable/Range;
  #414 = Utf8               (I)V
  #415 = MethodType         #414          //  (I)V
  #416 = Utf8               $anonfun$startElement$1
  #417 = Utf8               (Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
  #418 = NameAndType        #416:#417     // $anonfun$startElement$1:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
  #419 = Methodref          #2.#418       // scala/xml/parsing/FactoryAdapter.$anonfun$startElement$1:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
  #420 = MethodHandle       6:#419        // REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$startElement$1:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
  #421 = Utf8               apply$mcVI$sp
  #422 = Utf8               (Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #423 = NameAndType        #421:#422     // apply$mcVI$sp:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #424 = InvokeDynamic      #1:#423       // #1:apply$mcVI$sp:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #425 = Utf8               foreach$mVc$sp
  #426 = Utf8               (Lscala/Function1;)V
  #427 = NameAndType        #425:#426     // foreach$mVc$sp:(Lscala/Function1;)V
  #428 = Methodref          #409.#427     // scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
  #429 = Utf8               elem
  #430 = Utf8               Ljava/lang/Object;
  #431 = NameAndType        #429:#430     // elem:Ljava/lang/Object;
  #432 = Fieldref           #370.#431     // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
  #433 = NameAndType        #159:#144     // scopeStack_$eq:(Lscala/collection/immutable/List;)V
  #434 = Methodref          #2.#433       // scala/xml/parsing/FactoryAdapter.scopeStack_$eq:(Lscala/collection/immutable/List;)V
  #435 = Utf8               scala/xml/MetaData
  #436 = Class              #435          // scala/xml/MetaData
  #437 = NameAndType        #21:#139      // attribStack:()Lscala/collection/immutable/List;
  #438 = Methodref          #2.#437       // scala/xml/parsing/FactoryAdapter.attribStack:()Lscala/collection/immutable/List;
  #439 = NameAndType        #143:#144     // attribStack_$eq:(Lscala/collection/immutable/List;)V
  #440 = Methodref          #2.#439       // scala/xml/parsing/FactoryAdapter.attribStack_$eq:(Lscala/collection/immutable/List;)V
  #441 = Utf8               m
  #442 = Utf8               Lscala/runtime/ObjectRef;
  #443 = Utf8               scpe
  #444 = Utf8               Lorg/xml/sax/Attributes;
  #445 = NameAndType        #196:#401     // length:()I
  #446 = Methodref          #204.#445     // scala/collection/mutable/StringBuilder.length:()I
  #447 = Utf8               toString
  #448 = NameAndType        #447:#161     // toString:()Ljava/lang/String;
  #449 = Methodref          #204.#448     // scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
  #450 = NameAndType        #182:#183     // createText:(Ljava/lang/String;)Lscala/xml/Text;
  #451 = Methodref          #2.#450       // scala/xml/parsing/FactoryAdapter.createText:(Ljava/lang/String;)Lscala/xml/Text;
  #452 = Utf8               clear
  #453 = NameAndType        #452:#334     // clear:()V
  #454 = Methodref          #204.#453     // scala/collection/mutable/StringBuilder.clear:()V
  #455 = Utf8               endElement
  #456 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
  #457 = Utf8               tail
  #458 = NameAndType        #457:#240     // tail:()Ljava/lang/Object;
  #459 = Methodref          #342.#458     // scala/collection/immutable/List.tail:()Ljava/lang/Object;
  #460 = Utf8               $anonfun$endElement$1$adapted
  #461 = Utf8               (Lscala/xml/Node;)Ljava/lang/Object;
  #462 = NameAndType        #460:#461     // $anonfun$endElement$1$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
  #463 = Methodref          #2.#462       // scala/xml/parsing/FactoryAdapter.$anonfun$endElement$1$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
  #464 = MethodHandle       6:#463        // REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$endElement$1$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
  #465 = MethodType         #461          //  (Lscala/xml/Node;)Ljava/lang/Object;
  #466 = Integer            5
  #467 = InvokeDynamic      #2:#282       // #2:apply:()Lscala/Function1;
  #468 = Utf8               takeWhile
  #469 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/List;
  #470 = NameAndType        #468:#469     // takeWhile:(Lscala/Function1;)Lscala/collection/immutable/List;
  #471 = Methodref          #342.#470     // scala/collection/immutable/List.takeWhile:(Lscala/Function1;)Lscala/collection/immutable/List;
  #472 = NameAndType        #410:#139     // reverse:()Lscala/collection/immutable/List;
  #473 = Methodref          #342.#472     // scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
  #474 = Utf8               $anonfun$endElement$2$adapted
  #475 = NameAndType        #474:#461     // $anonfun$endElement$2$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
  #476 = Methodref          #2.#475       // scala/xml/parsing/FactoryAdapter.$anonfun$endElement$2$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
  #477 = MethodHandle       6:#476        // REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$endElement$2$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
  #478 = InvokeDynamic      #3:#282       // #3:apply:()Lscala/Function1;
  #479 = Utf8               (Lscala/Function1;)Lscala/collection/LinearSeq;
  #480 = NameAndType        #284:#479     // dropWhile:(Lscala/Function1;)Lscala/collection/LinearSeq;
  #481 = Methodref          #342.#480     // scala/collection/immutable/List.dropWhile:(Lscala/Function1;)Lscala/collection/LinearSeq;
  #482 = Utf8               scala/collection/immutable/$colon$colon
  #483 = Class              #482          // scala/collection/immutable/$colon$colon
  #484 = Methodref          #483.#386     // scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
  #485 = Utf8               scala/xml/Node
  #486 = Class              #485          // scala/xml/Node
  #487 = Utf8               next$access$1
  #488 = NameAndType        #487:#139     // next$access$1:()Lscala/collection/immutable/List;
  #489 = Methodref          #483.#488     // scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
  #490 = Utf8               _1
  #491 = NameAndType        #490:#240     // _1:()Ljava/lang/Object;
  #492 = Methodref          #305.#491     // scala/Tuple2._1:()Ljava/lang/Object;
  #493 = Utf8               scala/MatchError
  #494 = Class              #493          // scala/MatchError
  #495 = Utf8               (Ljava/lang/Object;)V
  #496 = NameAndType        #306:#495     // "<init>":(Ljava/lang/Object;)V
  #497 = Methodref          #494.#496     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #498 = NameAndType        #174:#175     // createNode:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List;)Lscala/xml/Node;
  #499 = Methodref          #2.#498       // scala/xml/parsing/FactoryAdapter.createNode:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List;)Lscala/xml/Node;
  #500 = NameAndType        #133:#134     // rootElem_$eq:(Lscala/xml/Node;)V
  #501 = Methodref          #2.#500       // scala/xml/parsing/FactoryAdapter.rootElem_$eq:(Lscala/xml/Node;)V
  #502 = NameAndType        #17:#130      // rootElem:()Lscala/xml/Node;
  #503 = Methodref          #2.#502       // scala/xml/parsing/FactoryAdapter.rootElem:()Lscala/xml/Node;
  #504 = Utf8               hs
  #505 = Utf8               metaData
  #506 = Utf8               Lscala/xml/MetaData;
  #507 = Utf8               v
  #508 = Utf8               scp
  #509 = Utf8               Lscala/xml/NamespaceBinding;
  #510 = Utf8               processingInstruction
  #511 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #512 = NameAndType        #185:#186     // createProcInstr:(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq;
  #513 = Methodref          #2.#512       // scala/xml/parsing/FactoryAdapter.createProcInstr:(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq;
  #514 = Utf8               scala/collection/Seq
  #515 = Class              #514          // scala/collection/Seq
  #516 = Utf8               toList
  #517 = NameAndType        #516:#139     // toList:()Lscala/collection/immutable/List;
  #518 = InterfaceMethodref #515.#517     // scala/collection/Seq.toList:()Lscala/collection/immutable/List;
  #519 = Utf8               reverse_$colon$colon$colon
  #520 = Utf8               (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #521 = NameAndType        #519:#520     // reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #522 = Methodref          #342.#521     // scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #523 = Utf8               $anonfun$characters$1
  #524 = Utf8               nullIfEmpty$1
  #525 = Utf8
  #526 = String             #525          //
  #527 = Utf8               java/lang/Object
  #528 = Class              #527          // java/lang/Object
  #529 = Utf8               equals
  #530 = Utf8               (Ljava/lang/Object;)Z
  #531 = NameAndType        #529:#530     // equals:(Ljava/lang/Object;)Z
  #532 = Methodref          #528.#531     // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #533 = Utf8               $this
  #534 = Utf8               attributes$1
  #535 = Utf8               scpe$1
  #536 = Utf8               m$1
  #537 = Utf8               i
  #538 = Utf8               getQName
  #539 = Utf8               (I)Ljava/lang/String;
  #540 = NameAndType        #538:#539     // getQName:(I)Ljava/lang/String;
  #541 = InterfaceMethodref #399.#540     // org/xml/sax/Attributes.getQName:(I)Ljava/lang/String;
  #542 = Utf8               getValue
  #543 = NameAndType        #542:#539     // getValue:(I)Ljava/lang/String;
  #544 = InterfaceMethodref #399.#543     // org/xml/sax/Attributes.getValue:(I)Ljava/lang/String;
  #545 = Utf8               xmlns
  #546 = String             #545          // xmlns
  #547 = NameAndType        #524:#316     // nullIfEmpty$1:(Ljava/lang/String;)Ljava/lang/String;
  #548 = Methodref          #2.#547       // scala/xml/parsing/FactoryAdapter.nullIfEmpty$1:(Ljava/lang/String;)Ljava/lang/String;
  #549 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lscala/xml/NamespaceBinding;)V
  #550 = NameAndType        #306:#549     // "<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/NamespaceBinding;)V
  #551 = Methodref          #389.#550     // scala/xml/NamespaceBinding."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/NamespaceBinding;)V
  #552 = Utf8               scala/xml/Attribute$
  #553 = Class              #552          // scala/xml/Attribute$
  #554 = Utf8               Lscala/xml/Attribute$;
  #555 = NameAndType        #211:#554     // MODULE$:Lscala/xml/Attribute$;
  #556 = Fieldref           #553.#555     // scala/xml/Attribute$.MODULE$:Lscala/xml/Attribute$;
  #557 = Utf8               scala/Option$
  #558 = Class              #557          // scala/Option$
  #559 = Utf8               Lscala/Option$;
  #560 = NameAndType        #211:#559     // MODULE$:Lscala/Option$;
  #561 = Fieldref           #558.#560     // scala/Option$.MODULE$:Lscala/Option$;
  #562 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #563 = NameAndType        #280:#562     // apply:(Ljava/lang/Object;)Lscala/Option;
  #564 = Methodref          #558.#563     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #565 = Utf8               scala/xml/Text$
  #566 = Class              #565          // scala/xml/Text$
  #567 = Utf8               Lscala/xml/Text$;
  #568 = NameAndType        #211:#567     // MODULE$:Lscala/xml/Text$;
  #569 = Fieldref           #566.#568     // scala/xml/Text$.MODULE$:Lscala/xml/Text$;
  #570 = NameAndType        #280:#183     // apply:(Ljava/lang/String;)Lscala/xml/Text;
  #571 = Methodref          #566.#570     // scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
  #572 = Utf8               (Lscala/Option;Ljava/lang/String;Lscala/collection/Seq;Lscala/xml/MetaData;)Lscala/xml/Attribute;
  #573 = NameAndType        #280:#572     // apply:(Lscala/Option;Ljava/lang/String;Lscala/collection/Seq;Lscala/xml/MetaData;)Lscala/xml/Attribute;
  #574 = Methodref          #553.#573     // scala/xml/Attribute$.apply:(Lscala/Option;Ljava/lang/String;Lscala/collection/Seq;Lscala/xml/MetaData;)Lscala/xml/Attribute;
  #575 = Utf8               key
  #576 = Utf8               arg
  #577 = Utf8               value
  #578 = Utf8               $anonfun$endElement$1
  #579 = Utf8               (Lscala/xml/Node;)Z
  #580 = Utf8               x$3
  #581 = Utf8               $anonfun$endElement$2
  #582 = Utf8               x$4
  #583 = NameAndType        #306:#334     // "<init>":()V
  #584 = Methodref          #5.#583       // org/xml/sax/helpers/DefaultHandler."<init>":()V
  #585 = Utf8               $init$
  #586 = Utf8               (Lscala/xml/factory/XMLLoader;)V
  #587 = NameAndType        #585:#586     // $init$:(Lscala/xml/factory/XMLLoader;)V
  #588 = InterfaceMethodref #7.#587       // scala/xml/factory/XMLLoader.$init$:(Lscala/xml/factory/XMLLoader;)V
  #589 = Methodref          #204.#583     // scala/collection/mutable/StringBuilder."<init>":()V
  #590 = Utf8               scala/package$
  #591 = Class              #590          // scala/package$
  #592 = Utf8               Lscala/package$;
  #593 = NameAndType        #211:#592     // MODULE$:Lscala/package$;
  #594 = Fieldref           #591.#593     // scala/package$.MODULE$:Lscala/package$;
  #595 = Utf8               List
  #596 = Utf8               ()Lscala/collection/immutable/List$;
  #597 = NameAndType        #595:#596     // List:()Lscala/collection/immutable/List$;
  #598 = Methodref          #591.#597     // scala/package$.List:()Lscala/collection/immutable/List$;
  #599 = Utf8               scala/collection/immutable/List$
  #600 = Class              #599          // scala/collection/immutable/List$
  #601 = Utf8               empty
  #602 = NameAndType        #601:#139     // empty:()Lscala/collection/immutable/List;
  #603 = Methodref          #600.#602     // scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
  #604 = NameAndType        #523:#259     // $anonfun$characters$1:(C)Z
  #605 = Methodref          #2.#604       // scala/xml/parsing/FactoryAdapter.$anonfun$characters$1:(C)Z
  #606 = Utf8               boxToBoolean
  #607 = Utf8               (Z)Ljava/lang/Boolean;
  #608 = NameAndType        #606:#607     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #609 = Methodref          #244.#608     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #610 = NameAndType        #578:#579     // $anonfun$endElement$1:(Lscala/xml/Node;)Z
  #611 = Methodref          #2.#610       // scala/xml/parsing/FactoryAdapter.$anonfun$endElement$1:(Lscala/xml/Node;)Z
  #612 = NameAndType        #581:#579     // $anonfun$endElement$2:(Lscala/xml/Node;)Z
  #613 = Methodref          #2.#612       // scala/xml/parsing/FactoryAdapter.$anonfun$endElement$2:(Lscala/xml/Node;)Z
  #614 = Utf8               $deserializeLambda$
  #615 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #616 = Utf8               scala/runtime/LambdaDeserialize
  #617 = Class              #616          // scala/runtime/LambdaDeserialize
  #618 = Utf8               bootstrap
  #619 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #620 = NameAndType        #618:#619     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #621 = Methodref          #617.#620     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #622 = MethodHandle       6:#621        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #623 = Utf8               lambdaDeserialize
  #624 = NameAndType        #623:#615     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #625 = InvokeDynamic      #4:#624       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #626 = Utf8               Signature
  #627 = Utf8               Code
  #628 = Utf8               LineNumberTable
  #629 = Utf8               LocalVariableTable
  #630 = Utf8               MethodParameters
  #631 = Utf8               StackMapTable
  #632 = Utf8               InnerClasses
  #633 = Utf8               SourceFile
  #634 = Utf8               RuntimeVisibleAnnotations
  #635 = Utf8               BootstrapMethods
  #636 = Utf8               ScalaInlineInfo
  #637 = Utf8               ScalaSig
{
  private scala.xml.Node rootElem;
    descriptor: Lscala/xml/Node;
    flags: (0x0002) ACC_PRIVATE

  private final scala.collection.mutable.StringBuilder buffer;
    descriptor: Lscala/collection/mutable/StringBuilder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.collection.immutable.List<scala.xml.MetaData> attribStack;
    descriptor: Lscala/collection/immutable/List;
    flags: (0x0002) ACC_PRIVATE
    Signature: #23                          // Lscala/collection/immutable/List<Lscala/xml/MetaData;>;

  private scala.collection.immutable.List<scala.xml.Node> hStack;
    descriptor: Lscala/collection/immutable/List;
    flags: (0x0002) ACC_PRIVATE
    Signature: #25                          // Lscala/collection/immutable/List<Lscala/xml/Node;>;

  private scala.collection.immutable.List<java.lang.String> tagStack;
    descriptor: Lscala/collection/immutable/List;
    flags: (0x0002) ACC_PRIVATE
    Signature: #27                          // Lscala/collection/immutable/List<Ljava/lang/String;>;

  private scala.collection.immutable.List<scala.xml.NamespaceBinding> scopeStack;
    descriptor: Lscala/collection/immutable/List;
    flags: (0x0002) ACC_PRIVATE
    Signature: #29                          // Lscala/collection/immutable/List<Lscala/xml/NamespaceBinding;>;

  private java.lang.String curTag;
    descriptor: Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE

  private boolean capture;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  private final boolean normalizeWhitespace;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.lang.ThreadLocal<javax.xml.parsers.SAXParser> scala$xml$factory$XMLLoader$$parserInstance;
    descriptor: Ljava/lang/ThreadLocal;
    flags: (0x0002) ACC_PRIVATE
    Signature: #37                          // Ljava/lang/ThreadLocal<Ljavax/xml/parsers/SAXParser;>;

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public scala.xml.parsing.FactoryAdapter adapter();
    descriptor: ()Lscala/xml/parsing/FactoryAdapter;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod scala/xml/factory/XMLLoader.adapter$:(Lscala/xml/factory/XMLLoader;)Lscala/xml/parsing/FactoryAdapter;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public javax.xml.parsers.SAXParser parser();
    descriptor: ()Ljavax/xml/parsers/SAXParser;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #52                 // InterfaceMethod scala/xml/factory/XMLLoader.parser$:(Lscala/xml/factory/XMLLoader;)Ljavax/xml/parsers/SAXParser;
         4: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public scala.xml.Node loadXML(org.xml.sax.InputSource, javax.xml.parsers.SAXParser);
    descriptor: (Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #59                 // InterfaceMethod scala/xml/factory/XMLLoader.loadXML$:(Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;Ljavax/xml/parsers/SAXParser;)Lscala/xml/Node;
         6: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       7     1 source   Lorg/xml/sax/InputSource;
            0       7     2 parser   Ljavax/xml/parsers/SAXParser;
    MethodParameters:
      Name                           Flags
      source                         final
      parser                         final

  public scala.xml.Node loadFile(java.io.File);
    descriptor: (Ljava/io/File;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #68                 // InterfaceMethod scala/xml/factory/XMLLoader.loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/io/File;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1  file   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      file                           final

  public scala.xml.Node loadFile(java.io.FileDescriptor);
    descriptor: (Ljava/io/FileDescriptor;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #74                 // InterfaceMethod scala/xml/factory/XMLLoader.loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/io/FileDescriptor;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1    fd   Ljava/io/FileDescriptor;
    MethodParameters:
      Name                           Flags
      fd                             final

  public scala.xml.Node loadFile(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #80                 // InterfaceMethod scala/xml/factory/XMLLoader.loadFile$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1  name   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name                           final

  public scala.xml.Node load(java.io.InputStream);
    descriptor: (Ljava/io/InputStream;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #87                 // InterfaceMethod scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/io/InputStream;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1    is   Ljava/io/InputStream;
    MethodParameters:
      Name                           Flags
      is                             final

  public scala.xml.Node load(java.io.Reader);
    descriptor: (Ljava/io/Reader;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #93                 // InterfaceMethod scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/io/Reader;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1 reader   Ljava/io/Reader;
    MethodParameters:
      Name                           Flags
      reader                         final

  public scala.xml.Node load(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #97                 // InterfaceMethod scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1 sysID   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      sysID                          final

  public scala.xml.Node load(org.xml.sax.InputSource);
    descriptor: (Lorg/xml/sax/InputSource;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #101                // InterfaceMethod scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Lorg/xml/sax/InputSource;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1 source   Lorg/xml/sax/InputSource;
    MethodParameters:
      Name                           Flags
      source                         final

  public scala.xml.Node load(java.net.URL);
    descriptor: (Ljava/net/URL;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #106                // InterfaceMethod scala/xml/factory/XMLLoader.load$:(Lscala/xml/factory/XMLLoader;Ljava/net/URL;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   url   Ljava/net/URL;
    MethodParameters:
      Name                           Flags
      url                            final

  public scala.xml.Node loadString(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #112                // InterfaceMethod scala/xml/factory/XMLLoader.loadString$:(Lscala/xml/factory/XMLLoader;Ljava/lang/String;)Lscala/xml/Node;
         5: areturn
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1 string   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      string                         final

  private java.lang.ThreadLocal<javax.xml.parsers.SAXParser> scala$xml$factory$XMLLoader$$parserInstance$lzycompute();
    descriptor: ()Ljava/lang/ThreadLocal;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #117                // Field bitmap$0:Z
         8: ifne          24
        11: aload_0
        12: aload_0
        13: invokestatic  #121                // InterfaceMethod scala/xml/factory/XMLLoader.scala$xml$factory$XMLLoader$$parserInstance$:(Lscala/xml/factory/XMLLoader;)Ljava/lang/ThreadLocal;
        16: putfield      #123                // Field scala$xml$factory$XMLLoader$$parserInstance:Ljava/lang/ThreadLocal;
        19: aload_0
        20: iconst_1
        21: putfield      #117                // Field bitmap$0:Z
        24: aload_1
        25: monitorexit
        26: goto          32
        29: aload_1
        30: monitorexit
        31: athrow
        32: aload_0
        33: getfield      #123                // Field scala$xml$factory$XMLLoader$$parserInstance:Ljava/lang/ThreadLocal;
        36: areturn
      Exception table:
         from    to  target type
             4    24    29   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class scala/xml/parsing/FactoryAdapter ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Lscala/xml/parsing/FactoryAdapter;
    Signature: #115                         // ()Ljava/lang/ThreadLocal<Ljavax/xml/parsers/SAXParser;>;

  public java.lang.ThreadLocal<javax.xml.parsers.SAXParser> scala$xml$factory$XMLLoader$$parserInstance();
    descriptor: ()Ljava/lang/ThreadLocal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #117                // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #127                // Method scala$xml$factory$XMLLoader$$parserInstance$lzycompute:()Ljava/lang/ThreadLocal;
        11: goto          18
        14: aload_0
        15: getfield      #123                // Field scala$xml$factory$XMLLoader$$parserInstance:Ljava/lang/ThreadLocal;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class java/lang/ThreadLocal ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lscala/xml/parsing/FactoryAdapter;
    Signature: #115                         // ()Ljava/lang/ThreadLocal<Ljavax/xml/parsers/SAXParser;>;

  public scala.xml.Node rootElem();
    descriptor: ()Lscala/xml/Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #132                // Field rootElem:Lscala/xml/Node;
         4: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public void rootElem_$eq(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #132                // Field rootElem:Lscala/xml/Node;
         5: return
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.mutable.StringBuilder buffer();
    descriptor: ()Lscala/collection/mutable/StringBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #138                // Field buffer:Lscala/collection/mutable/StringBuilder;
         4: areturn
      LineNumberTable:
        line 45: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public scala.collection.immutable.List<scala.xml.MetaData> attribStack();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #142                // Field attribStack:Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;
    Signature: #140                         // ()Lscala/collection/immutable/List<Lscala/xml/MetaData;>;

  public void attribStack_$eq(scala.collection.immutable.List<scala.xml.MetaData>);
    descriptor: (Lscala/collection/immutable/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #142                // Field attribStack:Lscala/collection/immutable/List;
         5: return
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Lscala/collection/immutable/List;
    Signature: #145                         // (Lscala/collection/immutable/List<Lscala/xml/MetaData;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.immutable.List<scala.xml.Node> hStack();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #148                // Field hStack:Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;
    Signature: #146                         // ()Lscala/collection/immutable/List<Lscala/xml/Node;>;

  public void hStack_$eq(scala.collection.immutable.List<scala.xml.Node>);
    descriptor: (Lscala/collection/immutable/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #148                // Field hStack:Lscala/collection/immutable/List;
         5: return
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Lscala/collection/immutable/List;
    Signature: #150                         // (Lscala/collection/immutable/List<Lscala/xml/Node;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.immutable.List<java.lang.String> tagStack();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #153                // Field tagStack:Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;
    Signature: #151                         // ()Lscala/collection/immutable/List<Ljava/lang/String;>;

  public void tagStack_$eq(scala.collection.immutable.List<java.lang.String>);
    descriptor: (Lscala/collection/immutable/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #153                // Field tagStack:Lscala/collection/immutable/List;
         5: return
      LineNumberTable:
        line 66: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Lscala/collection/immutable/List;
    Signature: #155                         // (Lscala/collection/immutable/List<Ljava/lang/String;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.immutable.List<scala.xml.NamespaceBinding> scopeStack();
    descriptor: ()Lscala/collection/immutable/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #158                // Field scopeStack:Lscala/collection/immutable/List;
         4: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;
    Signature: #156                         // ()Lscala/collection/immutable/List<Lscala/xml/NamespaceBinding;>;

  public void scopeStack_$eq(scala.collection.immutable.List<scala.xml.NamespaceBinding>);
    descriptor: (Lscala/collection/immutable/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #158                // Field scopeStack:Lscala/collection/immutable/List;
         5: return
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Lscala/collection/immutable/List;
    Signature: #160                         // (Lscala/collection/immutable/List<Lscala/xml/NamespaceBinding;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String curTag();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #163                // Field curTag:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public void curTag_$eq(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #163                // Field curTag:Ljava/lang/String;
         5: return
      LineNumberTable:
        line 75: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public boolean capture();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #168                // Field capture:Z
         4: ireturn
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public void capture_$eq(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: putfield      #168                // Field capture:Z
         5: return
      LineNumberTable:
        line 76: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/xml/parsing/FactoryAdapter;
            0       6     1   x$1   Z
    MethodParameters:
      Name                           Flags
      x$1                            final

  public abstract boolean nodeContainsText(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      localName                      final

  public abstract scala.xml.Node createNode(java.lang.String, java.lang.String, scala.xml.MetaData, scala.xml.NamespaceBinding, scala.collection.immutable.List<scala.xml.Node>);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List;)Lscala/xml/Node;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #176                         // (Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List<Lscala/xml/Node;>;)Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      pre                            final
      elemName                       final
      attribs                        final
      scope                          final
      chIter                         final

  public abstract scala.xml.Text createText(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/xml/Text;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    MethodParameters:
      Name                           Flags
      text                           final

  public abstract scala.collection.Seq<scala.xml.ProcInstr> createProcInstr(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #187                         // (Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq<Lscala/xml/ProcInstr;>;
    MethodParameters:
      Name                           Flags
      target                         final
      data                           final

  public boolean normalizeWhitespace();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #191                // Field normalizeWhitespace:Z
         4: ireturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/parsing/FactoryAdapter;

  public void characters(char[], int, int);
    descriptor: ([CII)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=7, args_size=4
         0: aload_0
         1: invokevirtual #198                // Method capture:()Z
         4: ifne          8
         7: return
         8: aload_0
         9: invokevirtual #200                // Method normalizeWhitespace:()Z
        12: ifne          29
        15: aload_0
        16: invokevirtual #202                // Method buffer:()Lscala/collection/mutable/StringBuilder;
        19: aload_1
        20: iload_2
        21: iload_3
        22: invokevirtual #208                // Method scala/collection/mutable/StringBuilder.appendAll:([CII)Lscala/collection/mutable/StringBuilder;
        25: pop
        26: goto          146
        29: getstatic     #214                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        32: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        35: getstatic     #214                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        38: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        41: aload_1
        42: invokevirtual #223                // Method scala/Predef$.charArrayOps:([C)Ljava/lang/Object;
        45: iload_2
        46: iload_2
        47: iload_3
        48: iadd
        49: invokevirtual #227                // Method scala/collection/ArrayOps$.slice$extension:(Ljava/lang/Object;II)Ljava/lang/Object;
        52: checkcast     #229                // class "[C"
        55: invokevirtual #223                // Method scala/Predef$.charArrayOps:([C)Ljava/lang/Object;
        58: invokevirtual #233                // Method scala/collection/ArrayOps$.iterator$extension:(Ljava/lang/Object;)Lscala/collection/Iterator;
        61: astore        4
        63: aload         4
        65: invokeinterface #238,  1          // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        70: ifeq          146
        73: aload         4
        75: invokeinterface #242,  1          // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        80: invokestatic  #248                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
        83: istore        5
        85: getstatic     #253                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
        88: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        91: iload         5
        93: invokevirtual #257                // Method scala/Predef$.charWrapper:(C)C
        96: invokevirtual #261                // Method scala/runtime/RichChar$.isWhitespace$extension:(C)Z
        99: istore        6
       101: aload_0
       102: invokevirtual #202                // Method buffer:()Lscala/collection/mutable/StringBuilder;
       105: iload         6
       107: ifeq          115
       110: bipush        32
       112: goto          117
       115: iload         5
       117: invokevirtual #265                // Method scala/collection/mutable/StringBuilder.append:(C)Lscala/collection/mutable/StringBuilder;
       120: pop
       121: iload         6
       123: ifeq          143
       126: aload         4
       128: invokedynamic #283,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
       133: invokeinterface #287,  2          // InterfaceMethod scala/collection/Iterator.dropWhile:(Lscala/Function1;)Lscala/collection/Iterator;
       138: astore        4
       140: goto          143
       143: goto          63
       146: return
      StackMapTable: number_of_entries = 7
        frame_type = 8 /* same */
        frame_type = 20 /* same */
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ class scala/collection/Iterator ]
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = [ class scala/xml/parsing/FactoryAdapter, class "[C", int, int, class scala/collection/Iterator, int, int ]
          stack = [ class scala/collection/mutable/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/xml/parsing/FactoryAdapter, class "[C", int, int, class scala/collection/Iterator, int, int ]
          stack = [ class scala/collection/mutable/StringBuilder, int ]
        frame_type = 25 /* same */
        frame_type = 248 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 121: 0
        line 123: 8
        line 126: 29
        line 127: 63
        line 128: 73
        line 129: 85
        line 130: 101
        line 131: 121
        line 132: 126
        line 127: 143
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           85      58     5     c   C
          101      42     6 isSpace   Z
           63      83     4    it   Lscala/collection/Iterator;
            0     147     0  this   Lscala/xml/parsing/FactoryAdapter;
            0     147     1    ch   [C
            0     147     2 offset   I
            0     147     3 length   I
    MethodParameters:
      Name                           Flags
      ch                             final
      offset                         final
      length                         final

  private scala.Tuple2<java.lang.String, java.lang.String> splitName(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Tuple2;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=3, args_size=2
         0: aload_1
         1: bipush        58
         3: invokevirtual #303                // Method java/lang/String.indexOf:(I)I
         6: istore_2
         7: iload_2
         8: iconst_0
         9: if_icmpge     24
        12: new           #305                // class scala/Tuple2
        15: dup
        16: aconst_null
        17: aload_1
        18: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        21: goto          61
        24: new           #305                // class scala/Tuple2
        27: dup
        28: getstatic     #314                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        31: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        34: aload_1
        35: invokevirtual #318                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        38: iload_2
        39: invokevirtual #322                // Method scala/collection/StringOps$.take$extension:(Ljava/lang/String;I)Ljava/lang/String;
        42: getstatic     #314                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        45: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        48: aload_1
        49: invokevirtual #318                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        52: iload_2
        53: iconst_1
        54: iadd
        55: invokevirtual #325                // Method scala/collection/StringOps$.drop$extension:(Ljava/lang/String;I)Ljava/lang/String;
        58: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        61: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 100 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
      LineNumberTable:
        line 138: 0
        line 139: 7
        line 140: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      54     2   idx   I
            0      62     0  this   Lscala/xml/parsing/FactoryAdapter;
            0      62     1     s   Ljava/lang/String;
    Signature: #296                         // (Ljava/lang/String;)Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/xml/sax/Attributes;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=5
         0: aload_0
         1: invokevirtual #336                // Method captureText:()V
         4: aload_0
         5: aload_0
         6: invokevirtual #338                // Method curTag:()Ljava/lang/String;
         9: astore        5
        11: aload_0
        12: invokevirtual #340                // Method tagStack:()Lscala/collection/immutable/List;
        15: aload         5
        17: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
        20: invokevirtual #348                // Method tagStack_$eq:(Lscala/collection/immutable/List;)V
        23: aload_0
        24: aload_3
        25: invokevirtual #350                // Method curTag_$eq:(Ljava/lang/String;)V
        28: aload_0
        29: aload_3
        30: invokespecial #352                // Method splitName:(Ljava/lang/String;)Lscala/Tuple2;
        33: invokevirtual #355                // Method scala/Tuple2._2:()Ljava/lang/Object;
        36: checkcast     #299                // class java/lang/String
        39: astore        6
        41: aload_0
        42: aload_0
        43: aload         6
        45: invokevirtual #357                // Method nodeContainsText:(Ljava/lang/String;)Z
        48: invokevirtual #359                // Method capture_$eq:(Z)V
        51: aload_0
        52: aload_0
        53: invokevirtual #361                // Method hStack:()Lscala/collection/immutable/List;
        56: aconst_null
        57: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
        60: invokevirtual #363                // Method hStack_$eq:(Lscala/collection/immutable/List;)V
        63: getstatic     #368                // Field scala/xml/Null$.MODULE$:Lscala/xml/Null$;
        66: invokestatic  #374                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        69: astore        7
        71: aload_0
        72: invokevirtual #376                // Method scopeStack:()Lscala/collection/immutable/List;
        75: invokevirtual #379                // Method scala/collection/immutable/List.isEmpty:()Z
        78: ifeq          87
        81: getstatic     #384                // Field scala/xml/TopScope$.MODULE$:Lscala/xml/TopScope$;
        84: goto          97
        87: aload_0
        88: invokevirtual #376                // Method scopeStack:()Lscala/collection/immutable/List;
        91: invokevirtual #387                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
        94: checkcast     #389                // class scala/xml/NamespaceBinding
        97: invokestatic  #374                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
       100: astore        8
       102: getstatic     #394                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       105: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       108: iconst_0
       109: invokevirtual #397                // Method scala/Predef$.intWrapper:(I)I
       112: aload         4
       114: invokeinterface #403,  1          // InterfaceMethod org/xml/sax/Attributes.getLength:()I
       119: invokevirtual #407                // Method scala/runtime/RichInt$.until$extension:(II)Lscala/collection/immutable/Range;
       122: invokevirtual #413                // Method scala/collection/immutable/Range.reverse:()Lscala/collection/immutable/Range;
       125: aload_0
       126: aload         4
       128: aload         8
       130: aload         7
       132: invokedynamic #424,  0            // InvokeDynamic #1:apply$mcVI$sp:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;)Lscala/runtime/java8/JFunction1$mcVI$sp;
       137: invokevirtual #428                // Method scala/collection/immutable/Range.foreach$mVc$sp:(Lscala/Function1;)V
       140: aload_0
       141: aload         8
       143: getfield      #432                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       146: checkcast     #389                // class scala/xml/NamespaceBinding
       149: astore        9
       151: aload_0
       152: invokevirtual #376                // Method scopeStack:()Lscala/collection/immutable/List;
       155: aload         9
       157: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       160: invokevirtual #434                // Method scopeStack_$eq:(Lscala/collection/immutable/List;)V
       163: aload_0
       164: aload         7
       166: getfield      #432                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       169: checkcast     #436                // class scala/xml/MetaData
       172: astore        10
       174: aload_0
       175: invokevirtual #438                // Method attribStack:()Lscala/collection/immutable/List;
       178: aload         10
       180: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       183: invokevirtual #440                // Method attribStack_$eq:(Lscala/collection/immutable/List;)V
       186: return
      StackMapTable: number_of_entries = 2
        frame_type = 254 /* append */
          offset_delta = 87
          locals = [ class java/lang/String, class java/lang/String, class scala/runtime/ObjectRef ]
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class scala/xml/NamespaceBinding ]
      LineNumberTable:
        line 152: 0
        line 153: 4
        line 154: 23
        line 156: 28
        line 157: 41
        line 159: 51
        line 160: 63
        line 162: 71
        line 163: 87
        line 165: 102
        line 178: 140
        line 179: 163
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41     145     6 localName   Ljava/lang/String;
           71     115     7     m   Lscala/runtime/ObjectRef;
          102      84     8  scpe   Lscala/runtime/ObjectRef;
            0     187     0  this   Lscala/xml/parsing/FactoryAdapter;
            0     187     1   uri   Ljava/lang/String;
            0     187     2 _localName   Ljava/lang/String;
            0     187     3 qname   Ljava/lang/String;
            0     187     4 attributes   Lorg/xml/sax/Attributes;
    MethodParameters:
      Name                           Flags
      uri                            final
      _localName                     final
      qname                          final
      attributes                     final

  public void captureText();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method capture:()Z
         4: ifeq          45
         7: aload_0
         8: invokevirtual #202                // Method buffer:()Lscala/collection/mutable/StringBuilder;
        11: invokevirtual #446                // Method scala/collection/mutable/StringBuilder.length:()I
        14: iconst_0
        15: if_icmple     45
        18: aload_0
        19: aload_0
        20: aload_0
        21: invokevirtual #202                // Method buffer:()Lscala/collection/mutable/StringBuilder;
        24: invokevirtual #449                // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
        27: invokevirtual #451                // Method createText:(Ljava/lang/String;)Lscala/xml/Text;
        30: astore_1
        31: aload_0
        32: invokevirtual #361                // Method hStack:()Lscala/collection/immutable/List;
        35: aload_1
        36: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
        39: invokevirtual #363                // Method hStack_$eq:(Lscala/collection/immutable/List;)V
        42: goto          45
        45: aload_0
        46: invokevirtual #202                // Method buffer:()Lscala/collection/mutable/StringBuilder;
        49: invokevirtual #454                // Method scala/collection/mutable/StringBuilder.clear:()V
        52: return
      StackMapTable: number_of_entries = 1
        frame_type = 45 /* same */
      LineNumberTable:
        line 186: 0
        line 187: 18
        line 189: 45
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lscala/xml/parsing/FactoryAdapter;

  public void endElement(java.lang.String, java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=20, args_size=4
         0: aload_0
         1: invokevirtual #336                // Method captureText:()V
         4: aload_0
         5: invokevirtual #438                // Method attribStack:()Lscala/collection/immutable/List;
         8: invokevirtual #387                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
        11: checkcast     #436                // class scala/xml/MetaData
        14: astore        6
        16: aload_0
        17: aload_0
        18: invokevirtual #438                // Method attribStack:()Lscala/collection/immutable/List;
        21: invokevirtual #459                // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
        24: checkcast     #342                // class scala/collection/immutable/List
        27: invokevirtual #440                // Method attribStack_$eq:(Lscala/collection/immutable/List;)V
        30: aload_0
        31: invokevirtual #361                // Method hStack:()Lscala/collection/immutable/List;
        34: invokedynamic #467,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        39: invokevirtual #471                // Method scala/collection/immutable/List.takeWhile:(Lscala/Function1;)Lscala/collection/immutable/List;
        42: invokevirtual #473                // Method scala/collection/immutable/List.reverse:()Lscala/collection/immutable/List;
        45: astore        7
        47: aload_0
        48: aload_0
        49: invokevirtual #361                // Method hStack:()Lscala/collection/immutable/List;
        52: invokedynamic #478,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        57: invokevirtual #481                // Method scala/collection/immutable/List.dropWhile:(Lscala/Function1;)Lscala/collection/LinearSeq;
        60: checkcast     #342                // class scala/collection/immutable/List
        63: astore        8
        65: aload         8
        67: instanceof    #483                // class scala/collection/immutable/$colon$colon
        70: ifeq          112
        73: aload         8
        75: checkcast     #483                // class scala/collection/immutable/$colon$colon
        78: astore        9
        80: aload         9
        82: invokevirtual #484                // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
        85: checkcast     #486                // class scala/xml/Node
        88: astore        10
        90: aload         9
        92: invokevirtual #489                // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
        95: astore        11
        97: aload         10
        99: ifnonnull     109
       102: aload         11
       104: astore        5
       106: goto          122
       109: goto          115
       112: goto          115
       115: aload         8
       117: astore        5
       119: goto          122
       122: aload         5
       124: invokevirtual #363                // Method hStack_$eq:(Lscala/collection/immutable/List;)V
       127: aload_0
       128: aload_3
       129: invokespecial #352                // Method splitName:(Ljava/lang/String;)Lscala/Tuple2;
       132: astore        13
       134: aload         13
       136: ifnull        175
       139: aload         13
       141: invokevirtual #492                // Method scala/Tuple2._1:()Ljava/lang/Object;
       144: checkcast     #299                // class java/lang/String
       147: astore        14
       149: aload         13
       151: invokevirtual #355                // Method scala/Tuple2._2:()Ljava/lang/Object;
       154: checkcast     #299                // class java/lang/String
       157: astore        15
       159: new           #305                // class scala/Tuple2
       162: dup
       163: aload         14
       165: aload         15
       167: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       170: astore        4
       172: goto          188
       175: goto          178
       178: new           #494                // class scala/MatchError
       181: dup
       182: aload         13
       184: invokespecial #497                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       187: athrow
       188: aload         4
       190: astore        12
       192: aload         12
       194: invokevirtual #492                // Method scala/Tuple2._1:()Ljava/lang/Object;
       197: checkcast     #299                // class java/lang/String
       200: astore        16
       202: aload         12
       204: invokevirtual #355                // Method scala/Tuple2._2:()Ljava/lang/Object;
       207: checkcast     #299                // class java/lang/String
       210: astore        17
       212: aload_0
       213: invokevirtual #376                // Method scopeStack:()Lscala/collection/immutable/List;
       216: invokevirtual #387                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
       219: checkcast     #389                // class scala/xml/NamespaceBinding
       222: astore        18
       224: aload_0
       225: aload_0
       226: invokevirtual #376                // Method scopeStack:()Lscala/collection/immutable/List;
       229: invokevirtual #459                // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
       232: checkcast     #342                // class scala/collection/immutable/List
       235: invokevirtual #434                // Method scopeStack_$eq:(Lscala/collection/immutable/List;)V
       238: aload_0
       239: aload_0
       240: aload         16
       242: aload         17
       244: aload         6
       246: aload         18
       248: aload         7
       250: invokevirtual #499                // Method createNode:(Ljava/lang/String;Ljava/lang/String;Lscala/xml/MetaData;Lscala/xml/NamespaceBinding;Lscala/collection/immutable/List;)Lscala/xml/Node;
       253: invokevirtual #501                // Method rootElem_$eq:(Lscala/xml/Node;)V
       256: aload_0
       257: aload_0
       258: invokevirtual #503                // Method rootElem:()Lscala/xml/Node;
       261: astore        19
       263: aload_0
       264: invokevirtual #361                // Method hStack:()Lscala/collection/immutable/List;
       267: aload         19
       269: invokevirtual #346                // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       272: invokevirtual #363                // Method hStack_$eq:(Lscala/collection/immutable/List;)V
       275: aload_0
       276: aload_0
       277: invokevirtual #340                // Method tagStack:()Lscala/collection/immutable/List;
       280: invokevirtual #387                // Method scala/collection/immutable/List.head:()Ljava/lang/Object;
       283: checkcast     #299                // class java/lang/String
       286: invokevirtual #350                // Method curTag_$eq:(Ljava/lang/String;)V
       289: aload_0
       290: aload_0
       291: invokevirtual #340                // Method tagStack:()Lscala/collection/immutable/List;
       294: invokevirtual #459                // Method scala/collection/immutable/List.tail:()Ljava/lang/Object;
       297: checkcast     #342                // class scala/collection/immutable/List
       300: invokevirtual #348                // Method tagStack_$eq:(Lscala/collection/immutable/List;)V
       303: aload_0
       304: aload_0
       305: invokevirtual #338                // Method curTag:()Ljava/lang/String;
       308: ifnull        326
       311: aload_0
       312: aload_0
       313: invokevirtual #338                // Method curTag:()Ljava/lang/String;
       316: invokevirtual #357                // Method nodeContainsText:(Ljava/lang/String;)Z
       319: ifeq          326
       322: iconst_1
       323: goto          327
       326: iconst_0
       327: invokevirtual #359                // Method capture_$eq:(Z)V
       330: return
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 109
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, top, top, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List, class scala/collection/immutable/$colon$colon, class scala/xml/Node, class scala/collection/immutable/List ]
          stack = [ class scala/xml/parsing/FactoryAdapter ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, top, top, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List ]
          stack = [ class scala/xml/parsing/FactoryAdapter ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/xml/parsing/FactoryAdapter ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, top, class scala/collection/immutable/List, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List ]
          stack = [ class scala/xml/parsing/FactoryAdapter ]
        frame_type = 255 /* full_frame */
          offset_delta = 52
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, top, class scala/collection/immutable/List, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Tuple2, class scala/collection/immutable/List, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List, top, top, top, top, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 137
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Tuple2, class scala/collection/immutable/List, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List, top, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/xml/NamespaceBinding, class scala/xml/Node ]
          stack = [ class scala/xml/parsing/FactoryAdapter ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/xml/parsing/FactoryAdapter, class java/lang/String, class java/lang/String, class java/lang/String, class scala/Tuple2, class scala/collection/immutable/List, class scala/xml/MetaData, class scala/collection/immutable/List, class scala/collection/immutable/List, top, top, top, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class scala/xml/NamespaceBinding, class scala/xml/Node ]
          stack = [ class scala/xml/parsing/FactoryAdapter, int ]
      LineNumberTable:
        line 200: 0
        line 201: 4
        line 202: 16
        line 205: 30
        line 206: 47
        line 207: 65
        line 208: 115
        line 206: 122
        line 210: 127
        line 211: 212
        line 212: 224
        line 215: 238
        line 216: 256
        line 217: 275
        line 218: 289
        line 219: 303
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           97      15    11    hs   Lscala/collection/immutable/List;
          149      26    14   pre   Ljava/lang/String;
          159      16    15 localName   Ljava/lang/String;
           16     314     6 metaData   Lscala/xml/MetaData;
           47     283     7     v   Lscala/collection/immutable/List;
          202     128    16   pre   Ljava/lang/String;
          212     118    17 localName   Ljava/lang/String;
          224     106    18   scp   Lscala/xml/NamespaceBinding;
            0     331     0  this   Lscala/xml/parsing/FactoryAdapter;
            0     331     1   uri   Ljava/lang/String;
            0     331     2 _localName   Ljava/lang/String;
            0     331     3 qname   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      uri                            final
      _localName                     final
      qname                          final

  public void processingInstruction(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #336                // Method captureText:()V
         4: aload_0
         5: aload_0
         6: invokevirtual #361                // Method hStack:()Lscala/collection/immutable/List;
         9: aload_0
        10: aload_1
        11: aload_2
        12: invokevirtual #513                // Method createProcInstr:(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Seq;
        15: invokeinterface #518,  1          // InterfaceMethod scala/collection/Seq.toList:()Lscala/collection/immutable/List;
        20: invokevirtual #522                // Method scala/collection/immutable/List.reverse_$colon$colon$colon:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
        23: invokevirtual #363                // Method hStack_$eq:(Lscala/collection/immutable/List;)V
        26: return
      LineNumberTable:
        line 226: 0
        line 227: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lscala/xml/parsing/FactoryAdapter;
            0      27     1 target   Ljava/lang/String;
            0      27     2  data   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      target                         final
      data                           final

  public static final boolean $anonfun$characters$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #253                // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
         3: getstatic     #219                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: iload_0
         7: invokevirtual #257                // Method scala/Predef$.charWrapper:(C)C
        10: invokevirtual #261                // Method scala/runtime/RichChar$.isWhitespace$extension:(C)Z
        13: ireturn
      LineNumberTable:
        line 132: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$1   C
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static final java.lang.String nullIfEmpty$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #526                // String
         4: astore_1
         5: dup
         6: ifnonnull     17
         9: pop
        10: aload_1
        11: ifnull        24
        14: goto          28
        17: aload_1
        18: invokevirtual #532                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        21: ifeq          28
        24: aconst_null
        25: goto          29
        28: aload_0
        29: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 169: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final void $anonfun$startElement$1(scala.xml.parsing.FactoryAdapter, org.xml.sax.Attributes, scala.runtime.ObjectRef, scala.runtime.ObjectRef, int);
    descriptor: (Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=17, args_size=5
         0: aload_1
         1: iload         4
         3: invokeinterface #541,  2          // InterfaceMethod org/xml/sax/Attributes.getQName:(I)Ljava/lang/String;
         8: astore        6
        10: aload_1
        11: iload         4
        13: invokeinterface #544,  2          // InterfaceMethod org/xml/sax/Attributes.getValue:(I)Ljava/lang/String;
        18: astore        7
        20: aload_0
        21: aload         6
        23: invokespecial #352                // Method splitName:(Ljava/lang/String;)Lscala/Tuple2;
        26: astore        9
        28: aload         9
        30: ifnull        69
        33: aload         9
        35: invokevirtual #492                // Method scala/Tuple2._1:()Ljava/lang/Object;
        38: checkcast     #299                // class java/lang/String
        41: astore        10
        43: aload         9
        45: invokevirtual #355                // Method scala/Tuple2._2:()Ljava/lang/Object;
        48: checkcast     #299                // class java/lang/String
        51: astore        11
        53: new           #305                // class scala/Tuple2
        56: dup
        57: aload         10
        59: aload         11
        61: invokespecial #309                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        64: astore        5
        66: goto          82
        69: goto          72
        72: new           #494                // class scala/MatchError
        75: dup
        76: aload         9
        78: invokespecial #497                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        81: athrow
        82: aload         5
        84: astore        8
        86: aload         8
        88: invokevirtual #492                // Method scala/Tuple2._1:()Ljava/lang/Object;
        91: checkcast     #299                // class java/lang/String
        94: astore        12
        96: aload         8
        98: invokevirtual #355                // Method scala/Tuple2._2:()Ljava/lang/Object;
       101: checkcast     #299                // class java/lang/String
       104: astore        13
       106: aload         12
       108: ldc_w         #546                // String xmlns
       111: astore        14
       113: dup
       114: ifnonnull     126
       117: pop
       118: aload         14
       120: ifnull        167
       123: goto          134
       126: aload         14
       128: invokevirtual #532                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       131: ifne          167
       134: aload         12
       136: ifnonnull     208
       139: aload         6
       141: ldc_w         #546                // String xmlns
       144: astore        15
       146: dup
       147: ifnonnull     159
       150: pop
       151: aload         15
       153: ifnull        167
       156: goto          208
       159: aload         15
       161: invokevirtual #532                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       164: ifeq          208
       167: aload         12
       169: ifnonnull     176
       172: aconst_null
       173: goto          178
       176: aload         13
       178: astore        16
       180: aload_2
       181: new           #389                // class scala/xml/NamespaceBinding
       184: dup
       185: aload         16
       187: aload         7
       189: invokestatic  #548                // Method nullIfEmpty$1:(Ljava/lang/String;)Ljava/lang/String;
       192: aload_2
       193: getfield      #432                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       196: checkcast     #389                // class scala/xml/NamespaceBinding
       199: invokespecial #551                // Method scala/xml/NamespaceBinding."<init>":(Ljava/lang/String;Ljava/lang/String;Lscala/xml/NamespaceBinding;)V
       202: putfield      #432                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       205: goto          246
       208: aload_3
       209: getstatic     #556                // Field scala/xml/Attribute$.MODULE$:Lscala/xml/Attribute$;
       212: getstatic     #561                // Field scala/Option$.MODULE$:Lscala/Option$;
       215: aload         12
       217: invokevirtual #564                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
       220: aload         13
       222: getstatic     #569                // Field scala/xml/Text$.MODULE$:Lscala/xml/Text$;
       225: aload         7
       227: invokevirtual #571                // Method scala/xml/Text$.apply:(Ljava/lang/String;)Lscala/xml/Text;
       230: aload_3
       231: getfield      #432                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       234: checkcast     #436                // class scala/xml/MetaData
       237: invokevirtual #574                // Method scala/xml/Attribute$.apply:(Lscala/Option;Ljava/lang/String;Lscala/collection/Seq;Lscala/xml/MetaData;)Lscala/xml/Attribute;
       240: checkcast     #436                // class scala/xml/MetaData
       243: putfield      #432                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
       246: return
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 69
          locals = [ class scala/xml/parsing/FactoryAdapter, class org/xml/sax/Attributes, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, int, top, class java/lang/String, class java/lang/String, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/xml/parsing/FactoryAdapter, class org/xml/sax/Attributes, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, int, class scala/Tuple2, class java/lang/String, class java/lang/String, top, class scala/Tuple2, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class scala/xml/parsing/FactoryAdapter, class org/xml/sax/Attributes, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, int, class scala/Tuple2, class java/lang/String, class java/lang/String, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class scala/xml/parsing/FactoryAdapter, class org/xml/sax/Attributes, class scala/runtime/ObjectRef, class scala/runtime/ObjectRef, int, class scala/Tuple2, class java/lang/String, class java/lang/String, class scala/Tuple2, class scala/Tuple2, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 7
        frame_type = 8 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 29 /* same */
        frame_type = 37 /* same */
      LineNumberTable:
        line 166: 0
        line 167: 10
        line 168: 20
        line 171: 106
        line 172: 167
        line 173: 180
        line 175: 208
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           43      26    10   pre   Ljava/lang/String;
           53      16    11   key   Ljava/lang/String;
          180      25    16   arg   Ljava/lang/String;
           10     236     6 qname   Ljava/lang/String;
           20     226     7 value   Ljava/lang/String;
           96     150    12   pre   Ljava/lang/String;
          106     140    13   key   Ljava/lang/String;
            0     247     0 $this   Lscala/xml/parsing/FactoryAdapter;
            0     247     1 attributes$1   Lorg/xml/sax/Attributes;
            0     247     2 scpe$1   Lscala/runtime/ObjectRef;
            0     247     3   m$1   Lscala/runtime/ObjectRef;
            0     247     4     i   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      attributes$1                   final
      scpe$1                         final
      m$1                            final
      i                              final

  public static final boolean $anonfun$endElement$1(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 205: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   x$3   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$endElement$2(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: ifnull        8
         4: iconst_1
         5: goto          9
         8: iconst_0
         9: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   x$4   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public scala.xml.parsing.FactoryAdapter();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokespecial #584                // Method org/xml/sax/helpers/DefaultHandler."<init>":()V
         4: aload_0
         5: invokestatic  #588                // InterfaceMethod scala/xml/factory/XMLLoader.$init$:(Lscala/xml/factory/XMLLoader;)V
         8: aload_0
         9: aconst_null
        10: putfield      #132                // Field rootElem:Lscala/xml/Node;
        13: aload_0
        14: new           #204                // class scala/collection/mutable/StringBuilder
        17: dup
        18: invokespecial #589                // Method scala/collection/mutable/StringBuilder."<init>":()V
        21: putfield      #138                // Field buffer:Lscala/collection/mutable/StringBuilder;
        24: aload_0
        25: getstatic     #594                // Field scala/package$.MODULE$:Lscala/package$;
        28: invokevirtual #598                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        31: invokevirtual #603                // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
        34: putfield      #142                // Field attribStack:Lscala/collection/immutable/List;
        37: aload_0
        38: getstatic     #594                // Field scala/package$.MODULE$:Lscala/package$;
        41: invokevirtual #598                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        44: invokevirtual #603                // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
        47: putfield      #148                // Field hStack:Lscala/collection/immutable/List;
        50: aload_0
        51: getstatic     #594                // Field scala/package$.MODULE$:Lscala/package$;
        54: invokevirtual #598                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        57: invokevirtual #603                // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
        60: putfield      #153                // Field tagStack:Lscala/collection/immutable/List;
        63: aload_0
        64: getstatic     #594                // Field scala/package$.MODULE$:Lscala/package$;
        67: invokevirtual #598                // Method scala/package$.List:()Lscala/collection/immutable/List$;
        70: invokevirtual #603                // Method scala/collection/immutable/List$.empty:()Lscala/collection/immutable/List;
        73: putfield      #158                // Field scopeStack:Lscala/collection/immutable/List;
        76: aload_0
        77: aconst_null
        78: putfield      #163                // Field curTag:Ljava/lang/String;
        81: aload_0
        82: iconst_0
        83: putfield      #168                // Field capture:Z
        86: aload_0
        87: iconst_0
        88: putfield      #191                // Field normalizeWhitespace:Z
        91: return
      LineNumberTable:
        line 42: 0
        line 43: 8
        line 45: 13
        line 52: 24
        line 59: 37
        line 66: 50
        line 73: 63
        line 75: 76
        line 76: 81
        line 112: 86
        line 42: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Lscala/xml/parsing/FactoryAdapter;

  public static final java.lang.Object $anonfun$characters$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #248                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #605                // Method $anonfun$characters$1:(C)Z
         7: invokestatic  #609                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 132: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final java.lang.Object $anonfun$endElement$1$adapted(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #611                // Method $anonfun$endElement$1:(Lscala/xml/Node;)Z
         4: invokestatic  #609                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 205: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.Object $anonfun$endElement$2$adapted(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #613                // Method $anonfun$endElement$2:(Lscala/xml/Node;)Z
         4: invokestatic  #609                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 206: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$4   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      x$4                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #625,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #16= #13 of #15;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // Lorg/xml/sax/helpers/DefaultHandler;Lscala/xml/factory/XMLLoader<Lscala/xml/Node;>;
SourceFile: "FactoryAdapter.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005]h!B\u0013\'\u0003\u0003i\u0003\"B\"\u0001\t\u0003!\u0005bB$\u0001\u0001\u0004%\t\u0001\u0013\u0005\b\u0013\u0002\u0001\r\u0011\"\u0001K\u0011\u0019\t\u0006\u0001)Q\u0005\u007f!9!\u000b\u0001b\u0001\n\u0003\u0019\u0006B\u0002/\u0001A\u0003%A\u000bC\u0004^\u0001\u0001\u0007I\u0011\u00010\t\u000f!\u0004\u0001\u0019!C\u0001S\"11\u000e\u0001Q!\n}Cq\u0001\u001c\u0001A\u0002\u0013\u0005Q\u000eC\u0004p\u0001\u0001\u0007I\u0011\u00019\t\rI\u0004\u0001\u0015)\u0003o\u0011\u001d\u0019\b\u00011A\u0005\u0002QD\u0011\"a\u0001\u0001\u0001\u0004%\t!!\u0002\t\u000f\u0005%\u0001\u0001)Q\u0005k\"I\u00111\u0002\u0001A\u0002\u0013\u0005\u0011Q\u0002\u0005\n\u0003/\u0001\u0001\u0019!C\u0001\u00033A\u0001\"!\b\u0001A\u0003&\u0011q\u0002\u0005\n\u0003?\u0001\u0001\u0019!C\u0001\u0003CA\u0011\"a\t\u0001\u0001\u0004%\t!!\n\t\u000f\u0005%\u0002\u0001)Q\u0005m\"I\u00111\u0006\u0001A\u0002\u0013\u0005\u0011Q\u0006\u0005\n\u0003k\u0001\u0001\u0019!C\u0001\u0003oA\u0001\"a\u000f\u0001A\u0003&\u0011q\u0006\u0005\b\u0003{\u0001a\u0011AA \u0011\u001d\t)\u0005\u0001D\u0001\u0003\u000fBq!!\u001b\u0001\r\u0003\tY\u0007C\u0004\u0002x\u00011\t!!\u001f\t\u0013\u0005E\u0005A1A\u0005\u0002\u00055\u0002\u0002CAJ\u0001\u0001\u0006I!a\f\t\u000f\u0005U\u0005\u0001\"\u0011\u0002\u0018\"9\u0011q\u0017\u0001\u0005\n\u0005e\u0006bBAc\u0001\u0011\u0005\u0013q\u0019\u0005\b\u0003C\u0004A\u0011AAr\u0011\u001d\t)\u000f\u0001C!\u0003ODq!a<\u0001\t\u0003\n\tP\u0001\bGC\u000e$xN]=BI\u0006\u0004H/\u001a:\u000b\u0005\u001dB\u0013a\u00029beNLgn\u001a\u0006\u0003S)\n1\u0001_7m\u0015\u0005Y\u0013!B:dC2\f7\u0001A\n\u0004\u00019J\u0004CA\u00188\u001b\u0005\u0001$BA\u00193\u0003\u001dAW\r\u001c9feNT!a\r\u001b\u0002\u0007M\f\u0007P\u0003\u0002*k)\ta\'A\u0002pe\u001eL!\u0001\u000f\u0019\u0003\u001d\u0011+g-Y;mi\"\u000bg\u000e\u001a7feB\u0019!(P \u000e\u0003mR!\u0001\u0010\u0015\u0002\u000f\u0019\f7\r^8ss&\u0011ah\u000f\u0002\n16cEj\\1eKJ\u0004\"\u0001Q!\u000e\u0003!J!A\u0011\u0015\u0003\t9{G-Z\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\u0015\u0003\"A\u0012\u0001\u000e\u0003\u0019\n\u0001B]8pi\u0016cW-\\\u000b\u0002\u007f\u0005a!o\\8u\u000b2,Wn\u0018\u0013fcR\u00111j\u0014\t\u0003\u00196k\u0011AK\u0005\u0003\u001d*\u0012A!\u00168ji\"9\u0001kAA\u0001\u0002\u0004y\u0014a\u0001=%c\u0005I!o\\8u\u000b2,W\u000eI\u0001\u0007EV4g-\u001a:\u0016\u0003Q\u0003\"!\u0016.\u000e\u0003YS!a\u0016-\u0002\u000f5,H/\u00192mK*\u0011\u0011LK\u0001\u000bG>dG.Z2uS>t\u0017BA.W\u00055\u0019FO]5oO\n+\u0018\u000e\u001c3fe\u00069!-\u001e4gKJ\u0004\u0013aC1uiJL\'m\u0015;bG.,\u0012a\u0018\t\u0004A\u000e,W\"A1\u000b\u0005\tD\u0016!C5n[V$\u0018M\u00197f\u0013\t!\u0017M\u0001\u0003MSN$\bC\u0001!g\u0013\t9\u0007F\u0001\u0005NKR\fG)\u0019;b\u0003=\tG\u000f\u001e:jEN#\u0018mY6`I\u0015\fHCA&k\u0011\u001d\u0001\u0006\"!AA\u0002}\u000bA\"\u0019;ue&\u00147\u000b^1dW\u0002\na\u0001[*uC\u000e\\W#\u00018\u0011\u0007\u0001\u001cw(\u0001\u0006i\'R\f7m[0%KF$\"aS9\t\u000fA[\u0011\u0011!a\u0001]\u00069\u0001n\u0015;bG.\u0004\u0013\u0001\u0003;bON#\u0018mY6\u0016\u0003U\u00042\u0001Y2w!\t9hP\u0004\u0002yyB\u0011\u0011PK\u0007\u0002u*\u00111\u0010L\u0001\u0007yI|w\u000e\u001e \n\u0005uT\u0013A\u0002)sK\u0012,g-C\u0002\u0000\u0003\u0003\u0011aa\u0015;sS:<\'BA?+\u00031!\u0018mZ*uC\u000e\\w\fJ3r)\rY\u0015q\u0001\u0005\b!:\t\t\u00111\u0001v\u0003%!\u0018mZ*uC\u000e\\\u0007%\u0001\u0006tG>\u0004Xm\u0015;bG.,\"!a\u0004\u0011\t\u0001\u001c\u0017\u0011\u0003\t\u0004\u0001\u0006M\u0011bAA\u000bQ\t\u0001b*Y7fgB\f7-\u001a\"j]\u0012LgnZ\u0001\u000fg\u000e|\u0007/Z*uC\u000e\\w\fJ3r)\rY\u00151\u0004\u0005\t!F\t\t\u00111\u0001\u0002\u0010\u0005Y1oY8qKN#\u0018mY6!\u0003\u0019\u0019WO\u001d+bOV\ta/\u0001\u0006dkJ$\u0016mZ0%KF$2aSA\u0014\u0011\u001d\u0001F#!AA\u0002Y\fqaY;s)\u0006<\u0007%A\u0004dCB$XO]3\u0016\u0005\u0005=\u0002c\u0001\'\u00022%\u0019\u00111\u0007\u0016\u0003\u000f\t{w\u000e\\3b]\u0006Y1-\u00199ukJ,w\fJ3r)\rY\u0015\u0011\b\u0005\t!^\t\t\u00111\u0001\u00020\u0005A1-\u00199ukJ,\u0007%\u0001\to_\u0012,7i\u001c8uC&t7\u000fV3yiR!\u0011qFA!\u0011\u0019\t\u0019%\u0007a\u0001m\u0006IAn\\2bY:\u000bW.Z\u0001\u000bGJ,\u0017\r^3O_\u0012,GcC \u0002J\u00055\u0013\u0011KA+\u00033Ba!a\u0013\u001b\u0001\u00041\u0018a\u00019sK\"1\u0011q\n\u000eA\u0002Y\f\u0001\"\u001a7f[:\u000bW.\u001a\u0005\u0007\u0003\'R\u0002\u0019A3\u0002\u000f\u0005$HO]5cg\"9\u0011q\u000b\u000eA\u0002\u0005E\u0011!B:d_B,\u0007bBA.5\u0001\u0007\u0011QL\u0001\u0007G\"LE/\u001a:\u0011\u000b\u0005}\u0013QM \u000f\u00071\u000b\t\'C\u0002\u0002d)\nq\u0001]1dW\u0006<W-C\u0002e\u0003OR1!a\u0019+\u0003)\u0019\'/Z1uKR+\u0007\u0010\u001e\u000b\u0005\u0003[\n\u0019\bE\u0002A\u0003_J1!!\u001d)\u0005\u0011!V\r\u001f;\t\r\u0005U4\u00041\u0001w\u0003\u0011!X\r\u001f;\u0002\u001f\r\u0014X-\u0019;f!J|7-\u00138tiJ$b!a\u001f\u0002\n\u00065\u0005CBA?\u0003\u007f\n\u0019)D\u0001Y\u0013\r\t\t\t\u0017\u0002\u0004\'\u0016\f\bc\u0001!\u0002\u0006&\u0019\u0011q\u0011\u0015\u0003\u0013A\u0013xnY%ogR\u0014\bBBAF9\u0001\u0007a/\u0001\u0004uCJ<W\r\u001e\u0005\u0007\u0003\u001fc\u0002\u0019\u0001<\u0002\t\u0011\fG/Y\u0001\u0014]>\u0014X.\u00197ju\u0016<\u0006.\u001b;fgB\f7-Z\u0001\u0015]>\u0014X.\u00197ju\u0016<\u0006.\u001b;fgB\f7-\u001a\u0011\u0002\u0015\rD\u0017M]1di\u0016\u00148\u000fF\u0004L\u00033\u000bI+a-\t\u000f\u0005mu\u00041\u0001\u0002\u001e\u0006\u00111\r\u001b\t\u0006\u0019\u0006}\u00151U\u0005\u0004\u0003CS#!B!se\u0006L\bc\u0001\'\u0002&&\u0019\u0011q\u0015\u0016\u0003\t\rC\u0017M\u001d\u0005\b\u0003W{\u0002\u0019AAW\u0003\u0019ygMZ:fiB\u0019A*a,\n\u0007\u0005E&FA\u0002J]RDq!!. \u0001\u0004\ti+\u0001\u0004mK:<G\u000f[\u0001\ngBd\u0017\u000e\u001e(b[\u0016$B!a/\u0002BB)A*!0wm&\u0019\u0011q\u0018\u0016\u0003\rQ+\b\u000f\\33\u0011\u0019\t\u0019\r\ta\u0001m\u0006\t1/\u0001\u0007ti\u0006\u0014H/\u00127f[\u0016tG\u000fF\u0005L\u0003\u0013\fi-!5\u0002V\"1\u00111Z\u0011A\u0002Y\f1!\u001e:j\u0011\u0019\ty-\ta\u0001m\u0006Qq\f\\8dC2t\u0015-\\3\t\r\u0005M\u0017\u00051\u0001w\u0003\u0015\th.Y7f\u0011\u001d\t9.\ta\u0001\u00033\f!\"\u0019;ue&\u0014W\u000f^3t!\u0011\tY.!8\u000e\u0003IJ1!a83\u0005)\tE\u000f\u001e:jEV$Xm]\u0001\fG\u0006\u0004H/\u001e:f)\u0016DH\u000fF\u0001L\u0003))g\u000eZ#mK6,g\u000e\u001e\u000b\b\u0017\u0006%\u00181^Aw\u0011\u0019\tYm\ta\u0001m\"1\u0011qZ\u0012A\u0002YDa!a5$\u0001\u00041\u0018!\u00069s_\u000e,7o]5oO&s7\u000f\u001e:vGRLwN\u001c\u000b\u0006\u0017\u0006M\u0018Q\u001f\u0005\u0007\u0003\u0017#\u0003\u0019\u0001<\t\r\u0005=E\u00051\u0001w\u0001"
    )
BootstrapMethods:
  0: #279 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #267 (Ljava/lang/Object;)Ljava/lang/Object;
      #271 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$characters$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #267 (Ljava/lang/Object;)Ljava/lang/Object;
      #272 1
  1: #279 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #415 (I)V
      #420 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$startElement$1:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
      #415 (I)V
      #272 1
  2: #279 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #267 (Ljava/lang/Object;)Ljava/lang/Object;
      #464 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$endElement$1$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
      #465 (Lscala/xml/Node;)Ljava/lang/Object;
      #466 5
      #272 1
      #465 (Lscala/xml/Node;)Ljava/lang/Object;
  3: #279 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #267 (Ljava/lang/Object;)Ljava/lang/Object;
      #477 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$endElement$2$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
      #465 (Lscala/xml/Node;)Ljava/lang/Object;
      #466 5
      #272 1
      #465 (Lscala/xml/Node;)Ljava/lang/Object;
  4: #622 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #271 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$characters$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #464 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$endElement$1$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
      #477 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$endElement$2$adapted:(Lscala/xml/Node;)Ljava/lang/Object;
      #420 REF_invokeStatic scala/xml/parsing/FactoryAdapter.$anonfun$startElement$1:(Lscala/xml/parsing/FactoryAdapter;Lorg/xml/sax/Attributes;Lscala/runtime/ObjectRef;Lscala/runtime/ObjectRef;I)V
  ScalaInlineInfo: length = 0xF9 (unknown attribute)
   01 00 00 31 02 0B 01 03 01 01 0C 01 0A 01 02 42
   02 43 01 01 CC 01 CD 01 02 45 02 43 01 01 DA 01
   CD 01 01 A0 01 A1 01 01 32 01 4E 00 00 27 00 28
   00 00 15 00 8B 00 00 8F 00 90 00 00 13 00 88 00
   00 20 00 A6 00 01 4D 01 4E 00 00 A9 00 AA 00 00
   C0 00 C1 00 00 AE 00 AF 00 00 B9 00 BA 00 00 B6
   00 B7 00 00 1E 00 A1 00 00 A4 00 A5 00 01 C7 01
   C8 00 00 18 00 8B 00 00 95 00 90 00 00 51 00 52
   00 00 51 00 59 00 00 51 00 4C 00 00 51 00 66 00
   00 51 00 62 00 00 3E 00 3F 00 00 3E 00 46 00 00
   3E 00 4C 00 00 6C 00 4C 00 00 35 00 36 00 00 AB
   00 AC 00 00 22 00 A6 00 02 0C 01 3C 01 00 2F 00
   30 00 01 FE 01 FF 00 00 11 00 82 00 00 85 00 86
   00 00 23 00 72 01 00 71 00 72 01 00 1C 00 8B 00
   00 9F 00 90 00 01 26 01 27 01 01 47 01 48 00 00
   1A 00 8B 00 00 9A 00 90 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
