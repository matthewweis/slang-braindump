Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/Collection$.class
  Last modified May 29, 2022; size 4331 bytes
  SHA-256 checksum 90c41c3174301492f27e837da5872ed0ae5dc62812ad75b99768d3ccbe7f425c
  Compiled from "Collection.scala"
public final class org.sireum.conversions.Collection$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/Collection$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 10, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/conversions/Collection$
    #2 = Class              #1            // org/sireum/conversions/Collection$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Collection.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/package$$Arrow$
   #12 = Class              #11           // org/sireum/package$$Arrow$
   #13 = Utf8               org/sireum/package
   #14 = Class              #13           // org/sireum/package
   #15 = Utf8               $Arrow$
   #16 = Utf8               MODULE$
   #17 = Utf8               Lorg/sireum/conversions/Collection$;
   #18 = Utf8               <clinit>
   #19 = Utf8               ()V
   #20 = Utf8               <init>
   #21 = NameAndType        #20:#19       // "<init>":()V
   #22 = Methodref          #2.#21        // org/sireum/conversions/Collection$."<init>":()V
   #23 = NameAndType        #16:#17       // MODULE$:Lorg/sireum/conversions/Collection$;
   #24 = Fieldref           #2.#23        // org/sireum/conversions/Collection$.MODULE$:Lorg/sireum/conversions/Collection$;
   #25 = Utf8               mapToHashMap
   #26 = Utf8               (Lorg/sireum/Map;)Lorg/sireum/HashMap;
   #27 = Utf8               <K:Ljava/lang/Object;W:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TW;>;)Lorg/sireum/HashMap<TK;TW;>;
   #28 = Utf8               map
   #29 = Utf8               org/sireum/HashMap$
   #30 = Class              #29           // org/sireum/HashMap$
   #31 = Utf8               Lorg/sireum/HashMap$;
   #32 = NameAndType        #16:#31       // MODULE$:Lorg/sireum/HashMap$;
   #33 = Fieldref           #30.#32       // org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
   #34 = Utf8               org/sireum/Map
   #35 = Class              #34           // org/sireum/Map
   #36 = Utf8               size
   #37 = Utf8               ()Lorg/sireum/Z;
   #38 = NameAndType        #36:#37       // size:()Lorg/sireum/Z;
   #39 = Methodref          #35.#38       // org/sireum/Map.size:()Lorg/sireum/Z;
   #40 = Utf8               emptyInit
   #41 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #42 = NameAndType        #40:#41       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #43 = Methodref          #30.#42       // org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #44 = Utf8               scala/runtime/ObjectRef
   #45 = Class              #44           // scala/runtime/ObjectRef
   #46 = Utf8               create
   #47 = Utf8               (Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #48 = NameAndType        #46:#47       // create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #49 = Methodref          #45.#48       // scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
   #50 = Utf8               entries
   #51 = Utf8               ()Lorg/sireum/IS;
   #52 = NameAndType        #50:#51       // entries:()Lorg/sireum/IS;
   #53 = Methodref          #35.#52       // org/sireum/Map.entries:()Lorg/sireum/IS;
   #54 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #55 = MethodType         #54           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #56 = Utf8               $anonfun$mapToHashMap$1$adapted
   #57 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #58 = NameAndType        #56:#57       // $anonfun$mapToHashMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #59 = Methodref          #2.#58        // org/sireum/conversions/Collection$.$anonfun$mapToHashMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #60 = MethodHandle       6:#59         // REF_invokeStatic org/sireum/conversions/Collection$.$anonfun$mapToHashMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
   #61 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
   #62 = MethodType         #61           //  (Lscala/Tuple2;)Ljava/lang/Object;
   #63 = Integer            5
   #64 = Integer            1
   #65 = Utf8               java/lang/invoke/LambdaMetafactory
   #66 = Class              #65           // java/lang/invoke/LambdaMetafactory
   #67 = Utf8               altMetafactory
   #68 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #69 = NameAndType        #67:#68       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #70 = Methodref          #66.#69       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #71 = MethodHandle       6:#70         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #72 = Utf8               apply
   #73 = Utf8               (Lscala/runtime/ObjectRef;)Lscala/Function1;
   #74 = NameAndType        #72:#73       // apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
   #75 = InvokeDynamic      #0:#74        // #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
   #76 = Utf8               org/sireum/IS
   #77 = Class              #76           // org/sireum/IS
   #78 = Utf8               foreach
   #79 = Utf8               (Lscala/Function1;)V
   #80 = NameAndType        #78:#79       // foreach:(Lscala/Function1;)V
   #81 = Methodref          #77.#80       // org/sireum/IS.foreach:(Lscala/Function1;)V
   #82 = Utf8               elem
   #83 = Utf8               Ljava/lang/Object;
   #84 = NameAndType        #82:#83       // elem:Ljava/lang/Object;
   #85 = Fieldref           #45.#84       // scala/runtime/ObjectRef.elem:Ljava/lang/Object;
   #86 = Utf8               org/sireum/HashMap
   #87 = Class              #86           // org/sireum/HashMap
   #88 = Utf8               r
   #89 = Utf8               Lscala/runtime/ObjectRef;
   #90 = Utf8               this
   #91 = Utf8               Lorg/sireum/Map;
   #92 = Utf8               mapToHashSMap
   #93 = Utf8               (Lorg/sireum/Map;)Lorg/sireum/HashSMap;
   #94 = Utf8               <K:Ljava/lang/Object;W:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TW;>;)Lorg/sireum/HashSMap<TK;TW;>;
   #95 = Utf8               org/sireum/HashSMap$
   #96 = Class              #95           // org/sireum/HashSMap$
   #97 = Utf8               Lorg/sireum/HashSMap$;
   #98 = NameAndType        #16:#97       // MODULE$:Lorg/sireum/HashSMap$;
   #99 = Fieldref           #96.#98       // org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
  #100 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashSMap;
  #101 = NameAndType        #40:#100      // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
  #102 = Methodref          #96.#101      // org/sireum/HashSMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
  #103 = Utf8               $anonfun$mapToHashSMap$1$adapted
  #104 = NameAndType        #103:#57      // $anonfun$mapToHashSMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #105 = Methodref          #2.#104       // org/sireum/conversions/Collection$.$anonfun$mapToHashSMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #106 = MethodHandle       6:#105        // REF_invokeStatic org/sireum/conversions/Collection$.$anonfun$mapToHashSMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  #107 = InvokeDynamic      #1:#74        // #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
  #108 = Utf8               org/sireum/HashSMap
  #109 = Class              #108          // org/sireum/HashSMap
  #110 = Utf8               bagToHashBag
  #111 = Utf8               (Lorg/sireum/Bag;)Lorg/sireum/HashBag;
  #112 = Utf8               <T:Ljava/lang/Object;>(Lorg/sireum/Bag<TT;>;)Lorg/sireum/HashBag<TT;>;
  #113 = Utf8               bag
  #114 = Utf8               org/sireum/HashBag$
  #115 = Class              #114          // org/sireum/HashBag$
  #116 = Utf8               Lorg/sireum/HashBag$;
  #117 = NameAndType        #16:#116      // MODULE$:Lorg/sireum/HashBag$;
  #118 = Fieldref           #115.#117     // org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
  #119 = Utf8               org/sireum/Bag
  #120 = Class              #119          // org/sireum/Bag
  #121 = Utf8               ()Lorg/sireum/Map;
  #122 = NameAndType        #28:#121      // map:()Lorg/sireum/Map;
  #123 = Methodref          #120.#122     // org/sireum/Bag.map:()Lorg/sireum/Map;
  #124 = NameAndType        #25:#26       // mapToHashMap:(Lorg/sireum/Map;)Lorg/sireum/HashMap;
  #125 = Methodref          #2.#124       // org/sireum/conversions/Collection$.mapToHashMap:(Lorg/sireum/Map;)Lorg/sireum/HashMap;
  #126 = Utf8               (Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
  #127 = NameAndType        #72:#126      // apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
  #128 = Methodref          #115.#127     // org/sireum/HashBag$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
  #129 = Utf8               Lorg/sireum/Bag;
  #130 = Utf8               $anonfun$mapToHashMap$1
  #131 = Utf8               (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #132 = Utf8               r$1
  #133 = Utf8               kv
  #134 = Utf8               Lorg/sireum/package$$Arrow$;
  #135 = NameAndType        #16:#134      // MODULE$:Lorg/sireum/package$$Arrow$;
  #136 = Fieldref           #12.#135      // org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
  #137 = Utf8               org/sireum/package$
  #138 = Class              #137          // org/sireum/package$
  #139 = Utf8               Lorg/sireum/package$;
  #140 = NameAndType        #16:#139      // MODULE$:Lorg/sireum/package$;
  #141 = Fieldref           #138.#140     // org/sireum/package$.MODULE$:Lorg/sireum/package$;
  #142 = Utf8               scala/Tuple2
  #143 = Class              #142          // scala/Tuple2
  #144 = Utf8               _1
  #145 = Utf8               ()Ljava/lang/Object;
  #146 = NameAndType        #144:#145     // _1:()Ljava/lang/Object;
  #147 = Methodref          #143.#146     // scala/Tuple2._1:()Ljava/lang/Object;
  #148 = Utf8               $Arrow
  #149 = NameAndType        #148:#54      // $Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #150 = Methodref          #138.#149     // org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
  #151 = Utf8               _2
  #152 = NameAndType        #151:#145     // _2:()Ljava/lang/Object;
  #153 = Methodref          #143.#152     // scala/Tuple2._2:()Ljava/lang/Object;
  #154 = Utf8               $tilde$greater$extension
  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #156 = NameAndType        #154:#155     // $tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #157 = Methodref          #12.#156      // org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #158 = Utf8               $plus
  #159 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashMap;
  #160 = NameAndType        #158:#159     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #161 = Methodref          #87.#160      // org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
  #162 = Utf8               Lscala/Tuple2;
  #163 = Utf8               $anonfun$mapToHashSMap$1
  #164 = Utf8               r$2
  #165 = Utf8               (Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #166 = NameAndType        #158:#165     // $plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #167 = Methodref          #109.#166     // org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
  #168 = Methodref          #4.#21        // java/lang/Object."<init>":()V
  #169 = NameAndType        #130:#131     // $anonfun$mapToHashMap$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #170 = Methodref          #2.#169       // org/sireum/conversions/Collection$.$anonfun$mapToHashMap$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #171 = Utf8               scala/runtime/BoxedUnit
  #172 = Class              #171          // scala/runtime/BoxedUnit
  #173 = Utf8               UNIT
  #174 = Utf8               Lscala/runtime/BoxedUnit;
  #175 = NameAndType        #173:#174     // UNIT:Lscala/runtime/BoxedUnit;
  #176 = Fieldref           #172.#175     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #177 = NameAndType        #163:#131     // $anonfun$mapToHashSMap$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #178 = Methodref          #2.#177       // org/sireum/conversions/Collection$.$anonfun$mapToHashSMap$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
  #179 = Utf8               $deserializeLambda$
  #180 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #181 = Utf8               scala/runtime/LambdaDeserialize
  #182 = Class              #181          // scala/runtime/LambdaDeserialize
  #183 = Utf8               bootstrap
  #184 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #185 = NameAndType        #183:#184     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #186 = Methodref          #182.#185     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #187 = MethodHandle       6:#186        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #188 = Utf8               lambdaDeserialize
  #189 = NameAndType        #188:#180     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #190 = InvokeDynamic      #2:#189       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #191 = Utf8               Code
  #192 = Utf8               LineNumberTable
  #193 = Utf8               LocalVariableTable
  #194 = Utf8               Signature
  #195 = Utf8               MethodParameters
  #196 = Utf8               InnerClasses
  #197 = Utf8               SourceFile
  #198 = Utf8               BootstrapMethods
  #199 = Utf8               ScalaInlineInfo
  #200 = Utf8               Scala
{
  public static final org.sireum.conversions.Collection$ MODULE$;
    descriptor: Lorg/sireum/conversions/Collection$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/Collection$
         3: dup
         4: invokespecial #22                 // Method "<init>":()V
         7: putstatic     #24                 // Field MODULE$:Lorg/sireum/conversions/Collection$;
        10: return
      LineNumberTable:
        line 31: 0

  public <K extends java.lang.Object, W extends java.lang.Object> org.sireum.HashMap<K, W> mapToHashMap(org.sireum.Map<K, W>);
    descriptor: (Lorg/sireum/Map;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #33                 // Field org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
         3: aload_1
         4: invokevirtual #39                 // Method org/sireum/Map.size:()Lorg/sireum/Z;
         7: invokevirtual #43                 // Method org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
        10: invokestatic  #49                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        13: astore_2
        14: aload_1
        15: invokevirtual #53                 // Method org/sireum/Map.entries:()Lorg/sireum/IS;
        18: aload_2
        19: invokedynamic #75,  0             // InvokeDynamic #0:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        24: invokevirtual #81                 // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        27: aload_2
        28: getfield      #85                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: checkcast     #87                 // class org/sireum/HashMap
        34: areturn
      LineNumberTable:
        line 34: 0
        line 35: 14
        line 38: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      21     2     r   Lscala/runtime/ObjectRef;
            0      35     0  this   Lorg/sireum/conversions/Collection$;
            0      35     1   map   Lorg/sireum/Map;
    Signature: #27                          // <K:Ljava/lang/Object;W:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TW;>;)Lorg/sireum/HashMap<TK;TW;>;
    MethodParameters:
      Name                           Flags
      map                            final

  public <K extends java.lang.Object, W extends java.lang.Object> org.sireum.HashSMap<K, W> mapToHashSMap(org.sireum.Map<K, W>);
    descriptor: (Lorg/sireum/Map;)Lorg/sireum/HashSMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: getstatic     #99                 // Field org/sireum/HashSMap$.MODULE$:Lorg/sireum/HashSMap$;
         3: aload_1
         4: invokevirtual #39                 // Method org/sireum/Map.size:()Lorg/sireum/Z;
         7: invokevirtual #102                // Method org/sireum/HashSMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashSMap;
        10: invokestatic  #49                 // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
        13: astore_2
        14: aload_1
        15: invokevirtual #53                 // Method org/sireum/Map.entries:()Lorg/sireum/IS;
        18: aload_2
        19: invokedynamic #107,  0            // InvokeDynamic #1:apply:(Lscala/runtime/ObjectRef;)Lscala/Function1;
        24: invokevirtual #81                 // Method org/sireum/IS.foreach:(Lscala/Function1;)V
        27: aload_2
        28: getfield      #85                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        31: checkcast     #109                // class org/sireum/HashSMap
        34: areturn
      LineNumberTable:
        line 42: 0
        line 43: 14
        line 46: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14      21     2     r   Lscala/runtime/ObjectRef;
            0      35     0  this   Lorg/sireum/conversions/Collection$;
            0      35     1   map   Lorg/sireum/Map;
    Signature: #94                          // <K:Ljava/lang/Object;W:Ljava/lang/Object;>(Lorg/sireum/Map<TK;TW;>;)Lorg/sireum/HashSMap<TK;TW;>;
    MethodParameters:
      Name                           Flags
      map                            final

  public <T extends java.lang.Object> org.sireum.HashBag<T> bagToHashBag(org.sireum.Bag<T>);
    descriptor: (Lorg/sireum/Bag;)Lorg/sireum/HashBag;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #118                // Field org/sireum/HashBag$.MODULE$:Lorg/sireum/HashBag$;
         3: aload_0
         4: aload_1
         5: invokevirtual #123                // Method org/sireum/Bag.map:()Lorg/sireum/Map;
         8: invokevirtual #125                // Method mapToHashMap:(Lorg/sireum/Map;)Lorg/sireum/HashMap;
        11: invokevirtual #128                // Method org/sireum/HashBag$.apply:(Lorg/sireum/HashMap;)Lorg/sireum/HashBag;
        14: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/sireum/conversions/Collection$;
            0      15     1   bag   Lorg/sireum/Bag;
    Signature: #112                         // <T:Ljava/lang/Object;>(Lorg/sireum/Bag<TT;>;)Lorg/sireum/HashBag<TT;>;
    MethodParameters:
      Name                           Flags
      bag                            final

  public static final void $anonfun$mapToHashMap$1(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #85                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #87                 // class org/sireum/HashMap
         8: getstatic     #136                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        11: getstatic     #141                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        14: aload_1
        15: invokevirtual #147                // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: invokevirtual #150                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        21: aload_1
        22: invokevirtual #153                // Method scala/Tuple2._2:()Ljava/lang/Object;
        25: invokevirtual #157                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        28: invokevirtual #161                // Method org/sireum/HashMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashMap;
        31: putfield      #85                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: return
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$1   Lscala/runtime/ObjectRef;
            0      35     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$1                            final
      kv                             final

  public static final void $anonfun$mapToHashSMap$1(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: getfield      #85                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
         5: checkcast     #109                // class org/sireum/HashSMap
         8: getstatic     #136                // Field org/sireum/package$$Arrow$.MODULE$:Lorg/sireum/package$$Arrow$;
        11: getstatic     #141                // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        14: aload_1
        15: invokevirtual #147                // Method scala/Tuple2._1:()Ljava/lang/Object;
        18: invokevirtual #150                // Method org/sireum/package$.$Arrow:(Ljava/lang/Object;)Ljava/lang/Object;
        21: aload_1
        22: invokevirtual #153                // Method scala/Tuple2._2:()Ljava/lang/Object;
        25: invokevirtual #157                // Method org/sireum/package$$Arrow$.$tilde$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        28: invokevirtual #167                // Method org/sireum/HashSMap.$plus:(Lscala/Tuple2;)Lorg/sireum/HashSMap;
        31: putfield      #85                 // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
        34: return
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0   r$2   Lscala/runtime/ObjectRef;
            0      35     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$2                            final
      kv                             final

  private org.sireum.conversions.Collection$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #168                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/Collection$;

  public static final java.lang.Object $anonfun$mapToHashMap$1$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #170                // Method $anonfun$mapToHashMap$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #176                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$1   Lscala/runtime/ObjectRef;
            0       9     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$1                            final
      kv                             final

  public static final java.lang.Object $anonfun$mapToHashSMap$1$adapted(scala.runtime.ObjectRef, scala.Tuple2);
    descriptor: (Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #178                // Method $anonfun$mapToHashSMap$1:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)V
         5: getstatic     #176                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   r$2   Lscala/runtime/ObjectRef;
            0       9     1    kv   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      r$2                            final
      kv                             final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #190,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // $Arrow$=class org/sireum/package$$Arrow$ of class org/sireum/package
SourceFile: "Collection.scala"
BootstrapMethods:
  0: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #55 (Ljava/lang/Object;)Ljava/lang/Object;
      #60 REF_invokeStatic org/sireum/conversions/Collection$.$anonfun$mapToHashMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #62 (Lscala/Tuple2;)Ljava/lang/Object;
      #63 5
      #64 1
      #62 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #55 (Ljava/lang/Object;)Ljava/lang/Object;
      #106 REF_invokeStatic org/sireum/conversions/Collection$.$anonfun$mapToHashSMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #62 (Lscala/Tuple2;)Ljava/lang/Object;
      #63 5
      #64 1
      #62 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #187 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #60 REF_invokeStatic org/sireum/conversions/Collection$.$anonfun$mapToHashMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
      #106 REF_invokeStatic org/sireum/conversions/Collection$.$anonfun$mapToHashSMap$1$adapted:(Lscala/runtime/ObjectRef;Lscala/Tuple2;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 01 00 08 00 82 00 83 01 00 38 00 39 01 00 A3
   00 83 01 00 67 00 39 01 00 14 00 13 01 00 6E 00
   6F 01 00 19 00 1A 01 00 5C 00 5D 01
  Scala: length = 0x0 (unknown attribute)

