Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/tools/ConcurrentConfig.class
  Last modified May 29, 2022; size 5538 bytes
  SHA-256 checksum c80bb29be86954f19b3cf9497680371acee345a99bdadcc9804f3b0a1007cd89
  Compiled from "Runner.scala"
public class org.scalatest.tools.ConcurrentConfig implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/tools/ConcurrentConfig
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 2, methods: 20, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/tools/ConcurrentConfig
    #2 = Class              #1            // org/scalatest/tools/ConcurrentConfig
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               Runner.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005-c!B\r\u001b\u0001r\u0001\u0003\u0002C\u001c\u0001\u0005+\u0007I\u0011\u0001\u001d\t\u0011q\u0002!\u0011#Q\u0001\neB\u0001\"\u0010\u0001\u0003\u0016\u0004%\tA\u0010\u0005\t\u0005\u0002\u0011\t\u0012)A\u0005\u007f!)1\t\u0001C\u0001\t\"9\u0011\nAA\u0001\n\u0003Q\u0005bB\'\u0001#\u0003%\tA\u0014\u0005\b3\u0002\t\n\u0011\"\u0001[\u0011\u001da\u0006!!A\u0005BuCqA\u001a\u0001\u0002\u0002\u0013\u0005\u0001\bC\u0004h\u0001\u0005\u0005I\u0011\u00015\t\u000f9\u0004\u0011\u0011!C!_\"9a\u000fAA\u0001\n\u00039\bbB=\u0001\u0003\u0003%\tE\u001f\u0005\by\u0002\t\t\u0011\"\u0011~\u0011\u001dq\b!!A\u0005B}D\u0011\"!\u0001\u0001\u0003\u0003%\t%a\u0001\b\u0015\u0005\u001d!$!A\t\u0002q\tIAB\u0005\u001a5\u0005\u0005\t\u0012\u0001\u000f\u0002\f!11i\u0005C\u0001\u0003GAqA`\n\u0002\u0002\u0013\u0015s\u0010C\u0005\u0002&M\t\t\u0011\"!\u0002(!I\u0011QF\n\u0002\u0002\u0013\u0005\u0015q\u0006\u0005\n\u0003\u0003\u001a\u0012\u0011!C\u0005\u0003\u0007\u0012\u0001cQ8oGV\u0014(/\u001a8u\u0007>tg-[4\u000b\u0005ma\u0012!\u0002;p_2\u001c(BA\u000f\u001f\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001 \u0003\ry\'oZ\n\u0005\u0001\u0005:#\u0006\u0005\u0002#K5\t1EC\u0001%\u0003\u0015\u00198-\u00197b\u0013\t13E\u0001\u0004B]f\u0014VM\u001a\t\u0003E!J!!K\u0012\u0003\u000fA\u0013x\u000eZ;diB\u00111\u0006\u000e\b\u0003YIr!!L\u0019\u000e\u00039R!a\f\u0019\u0002\rq\u0012xn\u001c;?\u0007\u0001I\u0011\u0001J\u0005\u0003g\r\nq\u0001]1dW\u0006<W-\u0003\u00026m\ta1+\u001a:jC2L\'0\u00192mK*\u00111gI\u0001\u000b]VlG\u000b\u001b:fC\u0012\u001cX#A\u001d\u0011\u0005\tR\u0014BA\u001e$\u0005\rIe\u000e^\u0001\f]VlG\u000b\u001b:fC\u0012\u001c\b%\u0001\u000ef]\u0006\u0014G.Z*vSR,7k\u001c:uS:<\'+\u001a9peR,\'/F\u0001@!\t\u0011\u0003)\u0003\u0002BG\t9!i\\8mK\u0006t\u0017aG3oC\ndWmU;ji\u0016\u001cvN\u001d;j]\u001e\u0014V\r]8si\u0016\u0014\b%\u0001\u0004=S:LGO\u0010\u000b\u0004\u000b\u001eC\u0005C\u0001$\u0001\u001b\u0005Q\u0002\"B\u001c\u0006\u0001\u0004I\u0004\"B\u001f\u0006\u0001\u0004y\u0014\u0001B2paf$2!R&M\u0011\u001d9d\u0001%AA\u0002eBq!\u0010\u0004\u0011\u0002\u0003\u0007q(\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0003=S#!\u000f),\u0003E\u0003\"AU,\u000e\u0003MS!\u0001V+\u0002\u0013Ut7\r[3dW\u0016$\'B\u0001,$\u0003)\tgN\\8uCRLwN\\\u0005\u00031N\u0013\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII*\u0012a\u0017\u0016\u0003\u007fA\u000bQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DX#\u00010\u0011\u0005}#W\"\u00011\u000b\u0005\u0005\u0014\u0017\u0001\u00027b]\u001eT\u0011aY\u0001\u0005U\u00064\u0018-\u0003\u0002fA\n11\u000b\u001e:j]\u001e\fA\u0002\u001d:pIV\u001cG/\u0011:jif\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0002jYB\u0011!E[\u0005\u0003W\u000e\u00121!\u00118z\u0011\u001di7\"!AA\u0002e\n1\u0001\u001f\u00132\u0003=\u0001(o\u001c3vGRLE/\u001a:bi>\u0014X#\u00019\u0011\u0007E$\u0018.D\u0001s\u0015\t\u00198%\u0001\u0006d_2dWm\u0019;j_:L!!\u001e:\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0003\u007faDq!\\\u0007\u0002\u0002\u0003\u0007\u0011.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,GC\u00010|\u0011\u001dig\"!AA\u0002e\n\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0002s\u0005AAo\\*ue&tw\rF\u0001_\u0003\u0019)\u0017/^1mgR\u0019q(!\u0002\t\u000f5\f\u0012\u0011!a\u0001S\u0006\u00012i\u001c8dkJ\u0014XM\u001c;D_:4\u0017n\u001a\t\u0003\rN\u0019RaEA\u0007\u00033\u0001r!a\u0004\u0002\u0016ezT)\u0004\u0002\u0002\u0012)\u0019\u00111C\u0012\u0002\u000fI,h\u000e^5nK&!\u0011qCA\t\u0005E\t%m\u001d;sC\u000e$h)\u001e8di&|gN\r\t\u0005\u00037\t\t#\u0004\u0002\u0002\u001e)\u0019\u0011q\u00042\u0002\u0005%|\u0017bA\u001b\u0002\u001eQ\u0011\u0011\u0011B\u0001\u0006CB\u0004H.\u001f\u000b\u0006\u000b\u0006%\u00121\u0006\u0005\u0006oY\u0001\r!\u000f\u0005\u0006{Y\u0001\raP\u0001\bk:\f\u0007\u000f\u001d7z)\u0011\t\t$!\u0010\u0011\u000b\t\n\u0019$a\u000e\n\u0007\u0005U2E\u0001\u0004PaRLwN\u001c\t\u0006E\u0005e\u0012hP\u0005\u0004\u0003w\u0019#A\u0002+va2,\'\u0007\u0003\u0005\u0002@]\t\t\u00111\u0001F\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003\u000b\u00022aXA$\u0013\r\tI\u0005\u0019\u0002\u0007\u001f\nTWm\u0019;
   #13 = Utf8               numThreads
   #14 = Utf8               I
   #15 = Utf8               enableSuiteSortingReporter
   #16 = Utf8               Z
   #17 = Utf8               unapply
   #18 = Utf8               (Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option;
   #19 = Utf8               (Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option<Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;
   #20 = Utf8               x$0
   #21 = Utf8               org/scalatest/tools/ConcurrentConfig$
   #22 = Class              #21           // org/scalatest/tools/ConcurrentConfig$
   #23 = Utf8               MODULE$
   #24 = Utf8               Lorg/scalatest/tools/ConcurrentConfig$;
   #25 = NameAndType        #23:#24       // MODULE$:Lorg/scalatest/tools/ConcurrentConfig$;
   #26 = Fieldref           #22.#25       // org/scalatest/tools/ConcurrentConfig$.MODULE$:Lorg/scalatest/tools/ConcurrentConfig$;
   #27 = NameAndType        #17:#18       // unapply:(Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option;
   #28 = Methodref          #22.#27       // org/scalatest/tools/ConcurrentConfig$.unapply:(Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option;
   #29 = Utf8               Lorg/scalatest/tools/ConcurrentConfig;
   #30 = Utf8               apply
   #31 = Utf8               (IZ)Lorg/scalatest/tools/ConcurrentConfig;
   #32 = NameAndType        #30:#31       // apply:(IZ)Lorg/scalatest/tools/ConcurrentConfig;
   #33 = Methodref          #22.#32       // org/scalatest/tools/ConcurrentConfig$.apply:(IZ)Lorg/scalatest/tools/ConcurrentConfig;
   #34 = Utf8               tupled
   #35 = Utf8               ()Lscala/Function1;
   #36 = Utf8               ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;Lorg/scalatest/tools/ConcurrentConfig;>;
   #37 = NameAndType        #34:#35       // tupled:()Lscala/Function1;
   #38 = Methodref          #22.#37       // org/scalatest/tools/ConcurrentConfig$.tupled:()Lscala/Function1;
   #39 = Utf8               curried
   #40 = Utf8               ()Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/tools/ConcurrentConfig;>;>;
   #41 = NameAndType        #39:#35       // curried:()Lscala/Function1;
   #42 = Methodref          #22.#41       // org/scalatest/tools/ConcurrentConfig$.curried:()Lscala/Function1;
   #43 = Utf8               productElementNames
   #44 = Utf8               ()Lscala/collection/Iterator;
   #45 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #46 = Utf8               productElementNames$
   #47 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #48 = NameAndType        #46:#47       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #49 = InterfaceMethodref #6.#48        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #50 = Utf8               this
   #51 = Utf8               ()I
   #52 = NameAndType        #13:#14       // numThreads:I
   #53 = Fieldref           #2.#52        // org/scalatest/tools/ConcurrentConfig.numThreads:I
   #54 = Utf8               ()Z
   #55 = NameAndType        #15:#16       // enableSuiteSortingReporter:Z
   #56 = Fieldref           #2.#55        // org/scalatest/tools/ConcurrentConfig.enableSuiteSortingReporter:Z
   #57 = Utf8               copy
   #58 = Utf8               <init>
   #59 = Utf8               (IZ)V
   #60 = NameAndType        #58:#59       // "<init>":(IZ)V
   #61 = Methodref          #2.#60        // org/scalatest/tools/ConcurrentConfig."<init>":(IZ)V
   #62 = Utf8               copy$default$1
   #63 = NameAndType        #13:#51       // numThreads:()I
   #64 = Methodref          #2.#63        // org/scalatest/tools/ConcurrentConfig.numThreads:()I
   #65 = Utf8               copy$default$2
   #66 = NameAndType        #15:#54       // enableSuiteSortingReporter:()Z
   #67 = Methodref          #2.#66        // org/scalatest/tools/ConcurrentConfig.enableSuiteSortingReporter:()Z
   #68 = Utf8               productPrefix
   #69 = Utf8               ()Ljava/lang/String;
   #70 = Utf8               ConcurrentConfig
   #71 = String             #70           // ConcurrentConfig
   #72 = Utf8               productArity
   #73 = Utf8               productElement
   #74 = Utf8               (I)Ljava/lang/Object;
   #75 = Utf8               x$1
   #76 = Utf8               scala/runtime/BoxesRunTime
   #77 = Class              #76           // scala/runtime/BoxesRunTime
   #78 = Utf8               boxToInteger
   #79 = Utf8               (I)Ljava/lang/Integer;
   #80 = NameAndType        #78:#79       // boxToInteger:(I)Ljava/lang/Integer;
   #81 = Methodref          #77.#80       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #82 = Utf8               boxToBoolean
   #83 = Utf8               (Z)Ljava/lang/Boolean;
   #84 = NameAndType        #82:#83       // boxToBoolean:(Z)Ljava/lang/Boolean;
   #85 = Methodref          #77.#84       // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #86 = Utf8               scala/runtime/Statics
   #87 = Class              #86           // scala/runtime/Statics
   #88 = Utf8               ioobe
   #89 = NameAndType        #88:#74       // ioobe:(I)Ljava/lang/Object;
   #90 = Methodref          #87.#89       // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
   #91 = Utf8               productIterator
   #92 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #93 = Utf8               scala/runtime/ScalaRunTime$
   #94 = Class              #93           // scala/runtime/ScalaRunTime$
   #95 = Utf8               Lscala/runtime/ScalaRunTime$;
   #96 = NameAndType        #23:#95       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #97 = Fieldref           #94.#96       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #98 = Utf8               typedProductIterator
   #99 = NameAndType        #98:#47       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #100 = Methodref          #94.#99       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #101 = Utf8               canEqual
  #102 = Utf8               (Ljava/lang/Object;)Z
  #103 = Utf8               Ljava/lang/Object;
  #104 = Utf8               productElementName
  #105 = Utf8               (I)Ljava/lang/String;
  #106 = String             #13           // numThreads
  #107 = String             #15           // enableSuiteSortingReporter
  #108 = Utf8               java/lang/String
  #109 = Class              #108          // java/lang/String
  #110 = Utf8               hashCode
  #111 = Integer            -889275714
  #112 = NameAndType        #68:#69       // productPrefix:()Ljava/lang/String;
  #113 = Methodref          #2.#112       // org/scalatest/tools/ConcurrentConfig.productPrefix:()Ljava/lang/String;
  #114 = NameAndType        #110:#51      // hashCode:()I
  #115 = Methodref          #109.#114     // java/lang/String.hashCode:()I
  #116 = Utf8               mix
  #117 = Utf8               (II)I
  #118 = NameAndType        #116:#117     // mix:(II)I
  #119 = Methodref          #87.#118      // scala/runtime/Statics.mix:(II)I
  #120 = Utf8               finalizeHash
  #121 = NameAndType        #120:#117     // finalizeHash:(II)I
  #122 = Methodref          #87.#121      // scala/runtime/Statics.finalizeHash:(II)I
  #123 = Utf8               toString
  #124 = Utf8               _toString
  #125 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #126 = NameAndType        #124:#125     // _toString:(Lscala/Product;)Ljava/lang/String;
  #127 = Methodref          #94.#126      // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #128 = Utf8               equals
  #129 = NameAndType        #101:#102     // canEqual:(Ljava/lang/Object;)Z
  #130 = Methodref          #2.#129       // org/scalatest/tools/ConcurrentConfig.canEqual:(Ljava/lang/Object;)Z
  #131 = Utf8               ()V
  #132 = NameAndType        #58:#131      // "<init>":()V
  #133 = Methodref          #4.#132       // java/lang/Object."<init>":()V
  #134 = Utf8               $init$
  #135 = Utf8               (Lscala/Product;)V
  #136 = NameAndType        #134:#135     // $init$:(Lscala/Product;)V
  #137 = InterfaceMethodref #6.#136       // scala/Product.$init$:(Lscala/Product;)V
  #138 = Utf8               Code
  #139 = Utf8               LocalVariableTable
  #140 = Utf8               Signature
  #141 = Utf8               MethodParameters
  #142 = Utf8               LineNumberTable
  #143 = Utf8               StackMapTable
  #144 = Utf8               SourceFile
  #145 = Utf8               RuntimeVisibleAnnotations
  #146 = Utf8               ScalaInlineInfo
  #147 = Utf8               ScalaSig
{
  private final int numThreads;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean enableSuiteSortingReporter;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> unapply(org.scalatest.tools.ConcurrentConfig);
    descriptor: (Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #26                 // Field org/scalatest/tools/ConcurrentConfig$.MODULE$:Lorg/scalatest/tools/ConcurrentConfig$;
         3: aload_0
         4: invokevirtual #28                 // Method org/scalatest/tools/ConcurrentConfig$.unapply:(Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalatest/tools/ConcurrentConfig;
    Signature: #19                          // (Lorg/scalatest/tools/ConcurrentConfig;)Lscala/Option<Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static org.scalatest.tools.ConcurrentConfig apply(int, boolean);
    descriptor: (IZ)Lorg/scalatest/tools/ConcurrentConfig;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #26                 // Field org/scalatest/tools/ConcurrentConfig$.MODULE$:Lorg/scalatest/tools/ConcurrentConfig$;
         3: iload_0
         4: iload_1
         5: invokevirtual #33                 // Method org/scalatest/tools/ConcurrentConfig$.apply:(IZ)Lorg/scalatest/tools/ConcurrentConfig;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 numThreads   I
            0       9     1 enableSuiteSortingReporter   Z
    MethodParameters:
      Name                           Flags
      numThreads                     final
      enableSuiteSortingReporter     final

  public static scala.Function1<scala.Tuple2<java.lang.Object, java.lang.Object>, org.scalatest.tools.ConcurrentConfig> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #26                 // Field org/scalatest/tools/ConcurrentConfig$.MODULE$:Lorg/scalatest/tools/ConcurrentConfig$;
         3: invokevirtual #38                 // Method org/scalatest/tools/ConcurrentConfig$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #36                          // ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;Lorg/scalatest/tools/ConcurrentConfig;>;

  public static scala.Function1<java.lang.Object, scala.Function1<java.lang.Object, org.scalatest.tools.ConcurrentConfig>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #26                 // Field org/scalatest/tools/ConcurrentConfig$.MODULE$:Lorg/scalatest/tools/ConcurrentConfig$;
         3: invokevirtual #42                 // Method org/scalatest/tools/ConcurrentConfig$.curried:()Lscala/Function1;
         6: areturn
    Signature: #40                          // ()Lscala/Function1<Ljava/lang/Object;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/tools/ConcurrentConfig;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #49                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/ConcurrentConfig;
    Signature: #45                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public int numThreads();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #53                 // Field numThreads:I
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public boolean enableSuiteSortingReporter();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field enableSuiteSortingReporter:Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public org.scalatest.tools.ConcurrentConfig copy(int, boolean);
    descriptor: (IZ)Lorg/scalatest/tools/ConcurrentConfig;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/scalatest/tools/ConcurrentConfig
         3: dup
         4: iload_1
         5: iload_2
         6: invokespecial #61                 // Method "<init>":(IZ)V
         9: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalatest/tools/ConcurrentConfig;
            0      10     1 numThreads   I
            0      10     2 enableSuiteSortingReporter   Z
    MethodParameters:
      Name                           Flags
      numThreads                     final
      enableSuiteSortingReporter     final

  public int copy$default$1();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #64                 // Method numThreads:()I
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public boolean copy$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #67                 // Method enableSuiteSortingReporter:()Z
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #71                 // String ConcurrentConfig
         2: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 34
                 default: 44
            }
        24: aload_0
        25: invokevirtual #64                 // Method numThreads:()I
        28: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        31: goto          51
        34: aload_0
        35: invokevirtual #67                 // Method enableSuiteSortingReporter:()Z
        38: invokestatic  #85                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        41: goto          51
        44: iload_1
        45: invokestatic  #90                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        48: goto          51
        51: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lorg/scalatest/tools/ConcurrentConfig;
            0      52     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #97                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #100                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/ConcurrentConfig;
    Signature: #92                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/tools/ConcurrentConfig
         4: ireturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/ConcurrentConfig;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #106                // String numThreads
        26: goto          44
        29: ldc           #107                // String enableSuiteSortingReporter
        31: goto          44
        34: iload_1
        35: invokestatic  #90                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #109                // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/scalatest/tools/ConcurrentConfig;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: ldc           #111                // int -889275714
         2: istore_1
         3: iload_1
         4: aload_0
         5: invokevirtual #113                // Method productPrefix:()Ljava/lang/String;
         8: invokevirtual #115                // Method java/lang/String.hashCode:()I
        11: invokestatic  #119                // Method scala/runtime/Statics.mix:(II)I
        14: istore_1
        15: iload_1
        16: aload_0
        17: invokevirtual #64                 // Method numThreads:()I
        20: invokestatic  #119                // Method scala/runtime/Statics.mix:(II)I
        23: istore_1
        24: iload_1
        25: aload_0
        26: invokevirtual #67                 // Method enableSuiteSortingReporter:()Z
        29: ifeq          38
        32: sipush        1231
        35: goto          41
        38: sipush        1237
        41: invokestatic  #119                // Method scala/runtime/Statics.mix:(II)I
        44: istore_1
        45: iload_1
        46: iconst_2
        47: invokestatic  #122                // Method scala/runtime/Statics.finalizeHash:(II)I
        50: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class org/scalatest/tools/ConcurrentConfig, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/tools/ConcurrentConfig, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #97                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #127                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/ConcurrentConfig;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     78
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/tools/ConcurrentConfig
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          82
        31: aload_1
        32: checkcast     #2                  // class org/scalatest/tools/ConcurrentConfig
        35: astore        4
        37: aload_0
        38: invokevirtual #64                 // Method numThreads:()I
        41: aload         4
        43: invokevirtual #64                 // Method numThreads:()I
        46: if_icmpne     74
        49: aload_0
        50: invokevirtual #67                 // Method enableSuiteSortingReporter:()Z
        53: aload         4
        55: invokevirtual #67                 // Method enableSuiteSortingReporter:()Z
        58: if_icmpne     74
        61: aload         4
        63: aload_0
        64: invokevirtual #130                // Method canEqual:(Ljava/lang/Object;)Z
        67: ifeq          74
        70: iconst_1
        71: goto          75
        74: iconst_0
        75: ifeq          82
        78: iconst_1
        79: goto          83
        82: iconst_0
        83: ireturn
      StackMapTable: number_of_entries = 8
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/tools/ConcurrentConfig, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 46
          locals = [ class org/scalatest/tools/ConcurrentConfig ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/tools/ConcurrentConfig, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      84     0  this   Lorg/scalatest/tools/ConcurrentConfig;
            0      84     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalatest.tools.ConcurrentConfig(int, boolean);
    descriptor: (IZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: putfield      #53                 // Field numThreads:I
         5: aload_0
         6: iload_2
         7: putfield      #56                 // Field enableSuiteSortingReporter:Z
        10: aload_0
        11: invokespecial #133                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #137                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        18: return
      LineNumberTable:
        line 127: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/scalatest/tools/ConcurrentConfig;
            0      19     1 numThreads   I
            0      19     2 enableSuiteSortingReporter   Z
    MethodParameters:
      Name                           Flags
      numThreads                     final
      enableSuiteSortingReporter     final
}
SourceFile: "Runner.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005-c!B\r\u001b\u0001r\u0001\u0003\u0002C\u001c\u0001\u0005+\u0007I\u0011\u0001\u001d\t\u0011q\u0002!\u0011#Q\u0001\neB\u0001\"\u0010\u0001\u0003\u0016\u0004%\tA\u0010\u0005\t\u0005\u0002\u0011\t\u0012)A\u0005\u007f!)1\t\u0001C\u0001\t\"9\u0011\nAA\u0001\n\u0003Q\u0005bB\'\u0001#\u0003%\tA\u0014\u0005\b3\u0002\t\n\u0011\"\u0001[\u0011\u001da\u0006!!A\u0005BuCqA\u001a\u0001\u0002\u0002\u0013\u0005\u0001\bC\u0004h\u0001\u0005\u0005I\u0011\u00015\t\u000f9\u0004\u0011\u0011!C!_\"9a\u000fAA\u0001\n\u00039\bbB=\u0001\u0003\u0003%\tE\u001f\u0005\by\u0002\t\t\u0011\"\u0011~\u0011\u001dq\b!!A\u0005B}D\u0011\"!\u0001\u0001\u0003\u0003%\t%a\u0001\b\u0015\u0005\u001d!$!A\t\u0002q\tIAB\u0005\u001a5\u0005\u0005\t\u0012\u0001\u000f\u0002\f!11i\u0005C\u0001\u0003GAqA`\n\u0002\u0002\u0013\u0015s\u0010C\u0005\u0002&M\t\t\u0011\"!\u0002(!I\u0011QF\n\u0002\u0002\u0013\u0005\u0015q\u0006\u0005\n\u0003\u0003\u001a\u0012\u0011!C\u0005\u0003\u0007\u0012\u0001cQ8oGV\u0014(/\u001a8u\u0007>tg-[4\u000b\u0005ma\u0012!\u0002;p_2\u001c(BA\u000f\u001f\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001 \u0003\ry\'oZ\n\u0005\u0001\u0005:#\u0006\u0005\u0002#K5\t1EC\u0001%\u0003\u0015\u00198-\u00197b\u0013\t13E\u0001\u0004B]f\u0014VM\u001a\t\u0003E!J!!K\u0012\u0003\u000fA\u0013x\u000eZ;diB\u00111\u0006\u000e\b\u0003YIr!!L\u0019\u000e\u00039R!a\f\u0019\u0002\rq\u0012xn\u001c;?\u0007\u0001I\u0011\u0001J\u0005\u0003g\r\nq\u0001]1dW\u0006<W-\u0003\u00026m\ta1+\u001a:jC2L\'0\u00192mK*\u00111gI\u0001\u000b]VlG\u000b\u001b:fC\u0012\u001cX#A\u001d\u0011\u0005\tR\u0014BA\u001e$\u0005\rIe\u000e^\u0001\f]VlG\u000b\u001b:fC\u0012\u001c\b%\u0001\u000ef]\u0006\u0014G.Z*vSR,7k\u001c:uS:<\'+\u001a9peR,\'/F\u0001@!\t\u0011\u0003)\u0003\u0002BG\t9!i\\8mK\u0006t\u0017aG3oC\ndWmU;ji\u0016\u001cvN\u001d;j]\u001e\u0014V\r]8si\u0016\u0014\b%\u0001\u0004=S:LGO\u0010\u000b\u0004\u000b\u001eC\u0005C\u0001$\u0001\u001b\u0005Q\u0002\"B\u001c\u0006\u0001\u0004I\u0004\"B\u001f\u0006\u0001\u0004y\u0014\u0001B2paf$2!R&M\u0011\u001d9d\u0001%AA\u0002eBq!\u0010\u0004\u0011\u0002\u0003\u0007q(\u0001\bd_BLH\u0005Z3gCVdG\u000fJ\u0019\u0016\u0003=S#!\u000f),\u0003E\u0003\"AU,\u000e\u0003MS!\u0001V+\u0002\u0013Ut7\r[3dW\u0016$\'B\u0001,$\u0003)\tgN\\8uCRLwN\\\u0005\u00031N\u0013\u0011#\u001e8dQ\u0016\u001c7.\u001a3WCJL\u0017M\\2f\u00039\u0019w\u000e]=%I\u00164\u0017-\u001e7uII*\u0012a\u0017\u0016\u0003\u007fA\u000bQ\u0002\u001d:pIV\u001cG\u000f\u0015:fM&DX#\u00010\u0011\u0005}#W\"\u00011\u000b\u0005\u0005\u0014\u0017\u0001\u00027b]\u001eT\u0011aY\u0001\u0005U\u00064\u0018-\u0003\u0002fA\n11\u000b\u001e:j]\u001e\fA\u0002\u001d:pIV\u001cG/\u0011:jif\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0002jYB\u0011!E[\u0005\u0003W\u000e\u00121!\u00118z\u0011\u001di7\"!AA\u0002e\n1\u0001\u001f\u00132\u0003=\u0001(o\u001c3vGRLE/\u001a:bi>\u0014X#\u00019\u0011\u0007E$\u0018.D\u0001s\u0015\t\u00198%\u0001\u0006d_2dWm\u0019;j_:L!!\u001e:\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0003\u007faDq!\\\u0007\u0002\u0002\u0003\u0007\u0011.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,GC\u00010|\u0011\u001dig\"!AA\u0002e\n\u0001\u0002[1tQ\u000e{G-\u001a\u000b\u0002s\u0005AAo\\*ue&tw\rF\u0001_\u0003\u0019)\u0017/^1mgR\u0019q(!\u0002\t\u000f5\f\u0012\u0011!a\u0001S\u0006\u00012i\u001c8dkJ\u0014XM\u001c;D_:4\u0017n\u001a\t\u0003\rN\u0019RaEA\u0007\u00033\u0001r!a\u0004\u0002\u0016ezT)\u0004\u0002\u0002\u0012)\u0019\u00111C\u0012\u0002\u000fI,h\u000e^5nK&!\u0011qCA\t\u0005E\t%m\u001d;sC\u000e$h)\u001e8di&|gN\r\t\u0005\u00037\t\t#\u0004\u0002\u0002\u001e)\u0019\u0011q\u00042\u0002\u0005%|\u0017bA\u001b\u0002\u001eQ\u0011\u0011\u0011B\u0001\u0006CB\u0004H.\u001f\u000b\u0006\u000b\u0006%\u00121\u0006\u0005\u0006oY\u0001\r!\u000f\u0005\u0006{Y\u0001\raP\u0001\bk:\f\u0007\u000f\u001d7z)\u0011\t\t$!\u0010\u0011\u000b\t\n\u0019$a\u000e\n\u0007\u0005U2E\u0001\u0004PaRLwN\u001c\t\u0006E\u0005e\u0012hP\u0005\u0004\u0003w\u0019#A\u0002+va2,\'\u0007\u0003\u0005\u0002@]\t\t\u00111\u0001F\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003\u000b\u00022aXA$\u0013\r\tI\u0005\u0019\u0002\u0007\u001f\nTWm\u0019;"
    )
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 00 00 10 00 3A 00 3B 00 00 65 00 66 00 00 39
   00 1F 00 00 3E 00 33 00 00 41 00 36 00 00 0F 00
   36 00 00 80 00 66 00 00 6E 00 33 00 00 0D 00 33
   00 00 48 00 33 00 00 49 00 4A 00 00 68 00 69 00
   00 2B 00 2C 00 00 5B 00 2C 00 00 44 00 45 00 00
   7B 00 45 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
