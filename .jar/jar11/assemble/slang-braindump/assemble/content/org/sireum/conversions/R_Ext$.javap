Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/sireum/conversions/R_Ext$.class
  Last modified May 29, 2022; size 1915 bytes
  SHA-256 checksum 76bd734b4f9d893775f29880fc1ab36b7889228ce15ba65b648cca3964014984
  Compiled from "extension.scala"
public final class org.sireum.conversions.R_Ext$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/R_Ext$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/conversions/R_Ext$
    #2 = Class              #1            // org/sireum/conversions/R_Ext$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               extension.scala
    #6 = Utf8               org/sireum/R$$String$
    #7 = Class              #6            // org/sireum/R$$String$
    #8 = Utf8               org/sireum/R
    #9 = Class              #8            // org/sireum/R
   #10 = Utf8               $String$
   #11 = Utf8               MODULE$
   #12 = Utf8               Lorg/sireum/conversions/R_Ext$;
   #13 = Utf8               <clinit>
   #14 = Utf8               ()V
   #15 = Utf8               <init>
   #16 = NameAndType        #15:#14       // "<init>":()V
   #17 = Methodref          #2.#16        // org/sireum/conversions/R_Ext$."<init>":()V
   #18 = NameAndType        #11:#12       // MODULE$:Lorg/sireum/conversions/R_Ext$;
   #19 = Fieldref           #2.#18        // org/sireum/conversions/R_Ext$.MODULE$:Lorg/sireum/conversions/R_Ext$;
   #20 = Utf8               toB
   #21 = Utf8               (Lscala/math/BigDecimal;)Z
   #22 = Utf8               n
   #23 = Utf8               org/sireum/B$
   #24 = Class              #23           // org/sireum/B$
   #25 = Utf8               Lorg/sireum/B$;
   #26 = NameAndType        #11:#25       // MODULE$:Lorg/sireum/B$;
   #27 = Fieldref           #24.#26       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #28 = Utf8               Lorg/sireum/R$$String$;
   #29 = NameAndType        #11:#28       // MODULE$:Lorg/sireum/R$$String$;
   #30 = Fieldref           #7.#29        // org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
   #31 = Utf8               0.0
   #32 = String             #31           // 0.0
   #33 = Utf8               apply
   #34 = Utf8               (Ljava/lang/String;)Lscala/math/BigDecimal;
   #35 = NameAndType        #33:#34       // apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
   #36 = Methodref          #7.#35        // org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
   #37 = Utf8               equals
   #38 = Utf8               (Ljava/lang/Object;)Z
   #39 = NameAndType        #37:#38       // equals:(Ljava/lang/Object;)Z
   #40 = Methodref          #4.#39        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #41 = Utf8               (Z)Z
   #42 = NameAndType        #33:#41       // apply:(Z)Z
   #43 = Methodref          #24.#42       // org/sireum/B$.apply:(Z)Z
   #44 = Utf8               this
   #45 = Utf8               Lscala/math/BigDecimal;
   #46 = Utf8               scala/math/BigDecimal
   #47 = Class              #46           // scala/math/BigDecimal
   #48 = Utf8               toZ
   #49 = Utf8               (Lscala/math/BigDecimal;)Lorg/sireum/Z;
   #50 = Utf8               org/sireum/Z$
   #51 = Class              #50           // org/sireum/Z$
   #52 = Utf8               Lorg/sireum/Z$;
   #53 = NameAndType        #11:#52       // MODULE$:Lorg/sireum/Z$;
   #54 = Fieldref           #51.#53       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #55 = Utf8               toBigInt
   #56 = Utf8               ()Lscala/math/BigInt;
   #57 = NameAndType        #55:#56       // toBigInt:()Lscala/math/BigInt;
   #58 = Methodref          #47.#57       // scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
   #59 = Utf8               (Lscala/math/BigInt;)Lorg/sireum/Z;
   #60 = NameAndType        #33:#59       // apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
   #61 = Methodref          #51.#60       // org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
   #62 = Utf8               toN
   #63 = Utf8               scala/Predef$
   #64 = Class              #63           // scala/Predef$
   #65 = Utf8               Lscala/Predef$;
   #66 = NameAndType        #11:#65       // MODULE$:Lscala/Predef$;
   #67 = Fieldref           #64.#66       // scala/Predef$.MODULE$:Lscala/Predef$;
   #68 = Utf8               org/sireum/R$
   #69 = Class              #68           // org/sireum/R$
   #70 = Utf8               Lorg/sireum/R$;
   #71 = NameAndType        #11:#70       // MODULE$:Lorg/sireum/R$;
   #72 = Fieldref           #69.#71       // org/sireum/R$.MODULE$:Lorg/sireum/R$;
   #73 = Utf8               $greater$eq$extension
   #74 = Utf8               (Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
   #75 = NameAndType        #73:#74       // $greater$eq$extension:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
   #76 = Methodref          #69.#75       // org/sireum/R$.$greater$eq$extension:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
   #77 = Utf8               $4B
   #78 = NameAndType        #77:#41       // $4B:(Z)Z
   #79 = Methodref          #24.#78       // org/sireum/B$.$4B:(Z)Z
   #80 = Utf8               require
   #81 = Utf8               (Z)V
   #82 = NameAndType        #80:#81       // require:(Z)V
   #83 = Methodref          #64.#82       // scala/Predef$.require:(Z)V
   #84 = Utf8               org/sireum/N$
   #85 = Class              #84           // org/sireum/N$
   #86 = Utf8               Lorg/sireum/N$;
   #87 = NameAndType        #11:#86       // MODULE$:Lorg/sireum/N$;
   #88 = Fieldref           #85.#87       // org/sireum/N$.MODULE$:Lorg/sireum/N$;
   #89 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #90 = NameAndType        #33:#89       // apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #91 = Methodref          #85.#90       // org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #92 = Utf8               toR
   #93 = Utf8               (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
   #94 = Methodref          #4.#16        // java/lang/Object."<init>":()V
   #95 = Utf8               Code
   #96 = Utf8               LineNumberTable
   #97 = Utf8               StackMapTable
   #98 = Utf8               LocalVariableTable
   #99 = Utf8               MethodParameters
  #100 = Utf8               InnerClasses
  #101 = Utf8               SourceFile
  #102 = Utf8               ScalaInlineInfo
  #103 = Utf8               Scala
{
  public static final org.sireum.conversions.R_Ext$ MODULE$;
    descriptor: Lorg/sireum/conversions/R_Ext$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/R_Ext$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Lorg/sireum/conversions/R_Ext$;
        10: return
      LineNumberTable:
        line 2105: 0

  public boolean toB(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #27                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: getstatic     #30                 // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
         7: ldc           #32                 // String 0.0
         9: invokevirtual #36                 // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        12: astore_2
        13: dup
        14: ifnonnull     25
        17: pop
        18: aload_2
        19: ifnull        36
        22: goto          32
        25: aload_2
        26: invokevirtual #40                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        29: ifne          36
        32: iconst_1
        33: goto          37
        36: iconst_0
        37: invokevirtual #43                 // Method org/sireum/B$.apply:(Z)Z
        40: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class org/sireum/conversions/R_Ext$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, class scala/math/BigDecimal ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/conversions/R_Ext$, class scala/math/BigDecimal, class scala/math/BigDecimal ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 2107: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lorg/sireum/conversions/R_Ext$;
            0      41     1     n   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toZ(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #54                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         3: aload_1
         4: invokevirtual #58                 // Method scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
         7: invokevirtual #61                 // Method org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        10: areturn
      LineNumberTable:
        line 2109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/sireum/conversions/R_Ext$;
            0      11     1     n   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      n                              final

  public org.sireum.Z toN(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: getstatic     #67                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: getstatic     #27                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         6: getstatic     #72                 // Field org/sireum/R$.MODULE$:Lorg/sireum/R$;
         9: aload_1
        10: getstatic     #30                 // Field org/sireum/R$$String$.MODULE$:Lorg/sireum/R$$String$;
        13: ldc           #32                 // String 0.0
        15: invokevirtual #36                 // Method org/sireum/R$$String$.apply:(Ljava/lang/String;)Lscala/math/BigDecimal;
        18: invokevirtual #76                 // Method org/sireum/R$.$greater$eq$extension:(Lscala/math/BigDecimal;Lscala/math/BigDecimal;)Z
        21: invokevirtual #79                 // Method org/sireum/B$.$4B:(Z)Z
        24: invokevirtual #83                 // Method scala/Predef$.require:(Z)V
        27: getstatic     #88                 // Field org/sireum/N$.MODULE$:Lorg/sireum/N$;
        30: getstatic     #54                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        33: aload_1
        34: invokevirtual #58                 // Method scala/math/BigDecimal.toBigInt:()Lscala/math/BigInt;
        37: invokevirtual #61                 // Method org/sireum/Z$.apply:(Lscala/math/BigInt;)Lorg/sireum/Z;
        40: invokevirtual #91                 // Method org/sireum/N$.apply:(Lorg/sireum/Z;)Lorg/sireum/Z;
        43: areturn
      LineNumberTable:
        line 2112: 0
        line 2113: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      44     0  this   Lorg/sireum/conversions/R_Ext$;
            0      44     1     n   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal toR(scala.math.BigDecimal);
    descriptor: (Lscala/math/BigDecimal;)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 2116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/sireum/conversions/R_Ext$;
            0       2     1     n   Lscala/math/BigDecimal;
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.conversions.R_Ext$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #94                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 2105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/R_Ext$;
}
InnerClasses:
  public static #10= #7 of #9;            // $String$=class org/sireum/R$$String$ of class org/sireum/R
SourceFile: "extension.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 0F 00 0E 01 00 14 00 15 01 00 3E
   00 31 01 00 5C 00 5D 01 00 30 00 31 01
  Scala: length = 0x0 (unknown attribute)

