Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/runtime/AbstractPartialFunction$mcVF$sp.class
  Last modified May 29, 2022; size 1412 bytes
  SHA-256 checksum 5e51c2ea287459cc324f277557edccc8b4ae085ca08a64ce584368feee290ce5
  Compiled from "AbstractPartialFunction.scala"
public abstract class scala.runtime.AbstractPartialFunction$mcVF$sp extends scala.runtime.AbstractPartialFunction<java.lang.Object, scala.runtime.BoxedUnit> implements scala.Function1$mcVF$sp
  minor version: 0
  major version: 52
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #2                          // scala/runtime/AbstractPartialFunction$mcVF$sp
  super_class: #5                         // scala/runtime/AbstractPartialFunction
  interfaces: 1, fields: 0, methods: 4, attributes: 4
Constant pool:
   #1 = Utf8               scala/runtime/AbstractPartialFunction$mcVF$sp
   #2 = Class              #1             // scala/runtime/AbstractPartialFunction$mcVF$sp
   #3 = Utf8               Lscala/runtime/AbstractPartialFunction<Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;Lscala/Function1$mcVF$sp;
   #4 = Utf8               scala/runtime/AbstractPartialFunction
   #5 = Class              #4             // scala/runtime/AbstractPartialFunction
   #6 = Utf8               scala/Function1$mcVF$sp
   #7 = Class              #6             // scala/Function1$mcVF$sp
   #8 = Utf8               AbstractPartialFunction.scala
   #9 = Utf8               apply
  #10 = Utf8               (F)V
  #11 = Utf8               x
  #12 = Utf8               apply$mcVF$sp
  #13 = NameAndType        #12:#10        // apply$mcVF$sp:(F)V
  #14 = Methodref          #2.#13         // scala/runtime/AbstractPartialFunction$mcVF$sp.apply$mcVF$sp:(F)V
  #15 = Utf8               this
  #16 = Utf8               Lscala/runtime/AbstractPartialFunction$mcVF$sp;
  #17 = Utf8               F
  #18 = Utf8               java/lang/Float
  #19 = Class              #18            // java/lang/Float
  #20 = Utf8               valueOf
  #21 = Utf8               (F)Ljava/lang/Float;
  #22 = NameAndType        #20:#21        // valueOf:(F)Ljava/lang/Float;
  #23 = Methodref          #19.#22        // java/lang/Float.valueOf:(F)Ljava/lang/Float;
  #24 = Utf8               scala/PartialFunction$
  #25 = Class              #24            // scala/PartialFunction$
  #26 = Utf8               MODULE$
  #27 = Utf8               Lscala/PartialFunction$;
  #28 = NameAndType        #26:#27        // MODULE$:Lscala/PartialFunction$;
  #29 = Fieldref           #25.#28        // scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
  #30 = Utf8               empty
  #31 = Utf8               ()Lscala/PartialFunction;
  #32 = NameAndType        #30:#31        // empty:()Lscala/PartialFunction;
  #33 = Methodref          #25.#32        // scala/PartialFunction$.empty:()Lscala/PartialFunction;
  #34 = Utf8               applyOrElse
  #35 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #36 = NameAndType        #34:#35        // applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #37 = Methodref          #2.#36         // scala/runtime/AbstractPartialFunction$mcVF$sp.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #38 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #39 = Utf8               scala/runtime/BoxesRunTime
  #40 = Class              #39            // scala/runtime/BoxesRunTime
  #41 = Utf8               unboxToFloat
  #42 = Utf8               (Ljava/lang/Object;)F
  #43 = NameAndType        #41:#42        // unboxToFloat:(Ljava/lang/Object;)F
  #44 = Methodref          #40.#43        // scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
  #45 = NameAndType        #9:#10         // apply:(F)V
  #46 = Methodref          #2.#45         // scala/runtime/AbstractPartialFunction$mcVF$sp.apply:(F)V
  #47 = Utf8               scala/runtime/BoxedUnit
  #48 = Class              #47            // scala/runtime/BoxedUnit
  #49 = Utf8               UNIT
  #50 = Utf8               Lscala/runtime/BoxedUnit;
  #51 = NameAndType        #49:#50        // UNIT:Lscala/runtime/BoxedUnit;
  #52 = Fieldref           #48.#51        // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #53 = Utf8               Ljava/lang/Object;
  #54 = Utf8               <init>
  #55 = Utf8               ()V
  #56 = NameAndType        #54:#55        // "<init>":()V
  #57 = Methodref          #5.#56         // scala/runtime/AbstractPartialFunction."<init>":()V
  #58 = Utf8               Code
  #59 = Utf8               LineNumberTable
  #60 = Utf8               LocalVariableTable
  #61 = Utf8               MethodParameters
  #62 = Utf8               Signature
  #63 = Utf8               SourceFile
  #64 = Utf8               ScalaInlineInfo
  #65 = Utf8               Scala
{
  public void apply(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokevirtual #14                 // Method apply$mcVF$sp:(F)V
         5: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/runtime/AbstractPartialFunction$mcVF$sp;
            0       6     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #23                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
         5: getstatic     #29                 // Field scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
         8: invokevirtual #33                 // Method scala/PartialFunction$.empty:()Lscala/PartialFunction;
        11: invokevirtual #37                 // Method applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        14: pop
        15: return
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/runtime/AbstractPartialFunction$mcVF$sp;
            0      16     1     x   F
    MethodParameters:
      Name                           Flags
      x                              final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #44                 // Method scala/runtime/BoxesRunTime.unboxToFloat:(Ljava/lang/Object;)F
         5: invokevirtual #46                 // Method apply:(F)V
         8: getstatic     #52                 // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        11: areturn
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/AbstractPartialFunction$mcVF$sp;
            0      12     1     x   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x                              final

  public scala.runtime.AbstractPartialFunction$mcVF$sp();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #57                 // Method scala/runtime/AbstractPartialFunction."<init>":()V
         4: return
      LineNumberTable:
        line 27: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/AbstractPartialFunction$mcVF$sp;
}
Signature: #3                           // Lscala/runtime/AbstractPartialFunction<Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;Lscala/Function1$mcVF$sp;
SourceFile: "AbstractPartialFunction.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 36 00 37 00 00 09 00 0A 00 00 09
   00 26 00 00 0C 00 0A 00
  Scala: length = 0x0 (unknown attribute)

