Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.class
  Last modified May 29, 2022; size 1533 bytes
  SHA-256 checksum 105262a944a44af5ba8ab1ac047c9fcbfa5671cc7c5f30088f1bd1c01b37955f
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$AnyArrayHasSeqParStream<A extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 4, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream
   #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamExtensions.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions
   #8 = Class              #7             // scala/collection/convert/StreamExtensions
   #9 = Utf8               AnyArrayHasSeqParStream
  #10 = Utf8               a
  #11 = Utf8               [Ljava/lang/Object;
  #12 = Utf8               [TA;
  #13 = Utf8               $outer
  #14 = Utf8               Lscala/collection/convert/StreamExtensions;
  #15 = Utf8               asJavaSeqStream
  #16 = Utf8               ()Ljava/util/stream/Stream;
  #17 = Utf8               ()Ljava/util/stream/Stream<TA;>;
  #18 = NameAndType        #10:#11        // a:[Ljava/lang/Object;
  #19 = Fieldref           #2.#18         // scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.a:[Ljava/lang/Object;
  #20 = Utf8               java/util/Arrays
  #21 = Class              #20            // java/util/Arrays
  #22 = Utf8               stream
  #23 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #24 = NameAndType        #22:#23        // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #25 = Methodref          #21.#24        // java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #26 = Utf8               this
  #27 = Utf8               Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
  #28 = Utf8               asJavaParStream
  #29 = NameAndType        #15:#16        // asJavaSeqStream:()Ljava/util/stream/Stream;
  #30 = Methodref          #2.#29         // scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.asJavaSeqStream:()Ljava/util/stream/Stream;
  #31 = Utf8               java/util/stream/Stream
  #32 = Class              #31            // java/util/stream/Stream
  #33 = Utf8               parallel
  #34 = Utf8               ()Ljava/util/stream/BaseStream;
  #35 = NameAndType        #33:#34        // parallel:()Ljava/util/stream/BaseStream;
  #36 = InterfaceMethodref #32.#35        // java/util/stream/Stream.parallel:()Ljava/util/stream/BaseStream;
  #37 = Utf8               scala$collection$convert$StreamExtensions$AnyArrayHasSeqParStream$$$outer
  #38 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #39 = NameAndType        #13:#14        // $outer:Lscala/collection/convert/StreamExtensions;
  #40 = Fieldref           #2.#39         // scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream.$outer:Lscala/collection/convert/StreamExtensions;
  #41 = Utf8               <init>
  #42 = Utf8               (Lscala/collection/convert/StreamExtensions;[Ljava/lang/Object;)V
  #43 = Utf8               ([TA;)V
  #44 = Utf8               ()V
  #45 = NameAndType        #41:#44        // "<init>":()V
  #46 = Methodref          #5.#45         // java/lang/Object."<init>":()V
  #47 = Utf8               Signature
  #48 = Utf8               Code
  #49 = Utf8               LineNumberTable
  #50 = Utf8               LocalVariableTable
  #51 = Utf8               StackMapTable
  #52 = Utf8               MethodParameters
  #53 = Utf8               InnerClasses
  #54 = Utf8               SourceFile
  #55 = Utf8               ScalaInlineInfo
  #56 = Utf8               Scala
{
  private final A[] a;
    descriptor: [Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #12                          // [TA;

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public java.util.stream.Stream<A> asJavaSeqStream();
    descriptor: ()Ljava/util/stream/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #19                 // Field a:[Ljava/lang/Object;
         4: invokestatic  #25                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
         7: areturn
      LineNumberTable:
        line 183: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
    Signature: #17                          // ()Ljava/util/stream/Stream<TA;>;

  public java.util.stream.Stream<A> asJavaParStream();
    descriptor: ()Ljava/util/stream/Stream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #30                 // Method asJavaSeqStream:()Ljava/util/stream/Stream;
         4: invokeinterface #36,  1           // InterfaceMethod java/util/stream/Stream.parallel:()Ljava/util/stream/BaseStream;
         9: checkcast     #32                 // class java/util/stream/Stream
        12: areturn
      LineNumberTable:
        line 185: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
    Signature: #17                          // ()Ljava/util/stream/Stream<TA;>;

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$AnyArrayHasSeqParStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;

  public scala.collection.convert.StreamExtensions$AnyArrayHasSeqParStream(A[]);
    descriptor: (Lscala/collection/convert/StreamExtensions;[Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #19                 // Field a:[Ljava/lang/Object;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #40                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #46                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 181: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2     a   [Ljava/lang/Object;
    Signature: #43                          // ([TA;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      a                              final
}
InnerClasses:
  public #9= #2 of #8;                    // AnyArrayHasSeqParStream=class scala/collection/convert/StreamExtensions$AnyArrayHasSeqParStream of class scala/collection/convert/StreamExtensions
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x18 (unknown attribute)
   01 00 00 04 00 29 00 2A 00 00 1C 00 10 00 00 0F
   00 10 00 00 25 00 26 00
  Scala: length = 0x0 (unknown attribute)

