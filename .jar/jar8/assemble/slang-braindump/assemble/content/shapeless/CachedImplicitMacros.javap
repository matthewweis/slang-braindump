Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/CachedImplicitMacros.class
  Last modified May 29, 2022; size 5676 bytes
  SHA-256 checksum ff644909647a3fcb38d9db86064cc56bc6ae6bb8b6cb6a8c01f6c46e1b5c34c6
  Compiled from "package.scala"
public class shapeless.CachedImplicitMacros
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/CachedImplicitMacros
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/CachedImplicitMacros
    #2 = Class              #1            // shapeless/CachedImplicitMacros
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               package.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005\u00193A!\u0002\u0004\u0001\u0013!A\u0001\u0003\u0001BC\u0002\u0013\u0005\u0011\u0003\u0003\u0005\u001d\u0001\t\u0005\t\u0015!\u0003\u0013\u0011\u0015i\u0002\u0001\"\u0001\u001f\u0011\u0015\u0011\u0003\u0001\"\u0001$\u0005Q\u0019\u0015m\u00195fI&k\u0007\u000f\\5dSRl\u0015m\u0019:pg*\tq!A\u0005tQ\u0006\u0004X\r\\3tg\u000e\u00011C\u0001\u0001\u000b!\tYa\"D\u0001\r\u0015\u0005i\u0011!B:dC2\f\u0017BA\b\r\u0005\u0019\te.\u001f*fM\u0006\t1-F\u0001\u0013!\t\u0019\"$D\u0001\u0015\u0015\t)b#\u0001\u0005xQ&$XMY8y\u0015\t9\u0002$\u0001\u0004nC\u000e\u0014xn\u001d\u0006\u000331\tqA]3gY\u0016\u001cG/\u0003\u0002\u001c)\t91i\u001c8uKb$\u0018AA2!\u0003\u0019a\u0014N\\5u}Q\u0011q$\t\t\u0003A\u0001i\u0011A\u0002\u0005\u0006!\r\u0001\rAE\u0001\u0013G\u0006\u001c\u0007.\u001a3J[Bd\u0017nY5u\u00136\u0004H.\u0006\u0002%{Q\u0011Q\u0005\u000e\t\u0003M9r!aJ\u0015\u000f\u0005!\nQ\"\u0001\u0001\n\u0005)Z\u0013\u0001C;oSZ,\'o]3\n\u0005ma#BA\u0017\u0017\u0003!\u0011G.Y2lE>D\u0018BA\u00181\u0005\u0011!&/Z3\n\u0005E\u0012$!\u0002+sK\u0016\u001c(BA\u001a\u0019\u0003\r\t\u0007/\u001b\u0005\u0006k\u0011\u0001\u001dAN\u0001\u0005iR\u000bw\rE\u0002\'omJ!\u0001O\u001d\u0003\u0017]+\u0017m\u001b+za\u0016$\u0016mZ\u0005\u0003uI\u0012\u0001\u0002V=qKR\u000bwm\u001d\t\u0003yub\u0001\u0001B\u0003?\t\t\u0007qHA\u0001U#\t\u00015\t\u0005\u0002\f\u0003&\u0011!\t\u0004\u0002\b\u001d>$\b.\u001b8h!\tYA)\u0003\u0002F\u0019\t\u0019\u0011I\\=
    #9 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #10 = Class              #9            // scala/reflect/api/Symbols$SymbolApi
   #11 = Utf8               scala/reflect/api/Symbols
   #12 = Class              #11           // scala/reflect/api/Symbols
   #13 = Utf8               SymbolApi
   #14 = Utf8               scala/reflect/api/Trees$TreeApi
   #15 = Class              #14           // scala/reflect/api/Trees$TreeApi
   #16 = Utf8               scala/reflect/api/Trees
   #17 = Class              #16           // scala/reflect/api/Trees
   #18 = Utf8               TreeApi
   #19 = Utf8               scala/reflect/api/TypeTags$WeakTypeTag
   #20 = Class              #19           // scala/reflect/api/TypeTags$WeakTypeTag
   #21 = Utf8               scala/reflect/api/TypeTags
   #22 = Class              #21           // scala/reflect/api/TypeTags
   #23 = Utf8               WeakTypeTag
   #24 = Utf8               scala/reflect/api/Types$TypeApi
   #25 = Class              #24           // scala/reflect/api/Types$TypeApi
   #26 = Utf8               scala/reflect/api/Types
   #27 = Class              #26           // scala/reflect/api/Types
   #28 = Utf8               TypeApi
   #29 = Utf8               scala/reflect/internal/Symbols$Symbol
   #30 = Class              #29           // scala/reflect/internal/Symbols$Symbol
   #31 = Utf8               scala/reflect/internal/Symbols
   #32 = Class              #31           // scala/reflect/internal/Symbols
   #33 = Utf8               Symbol
   #34 = Utf8               scala/reflect/internal/Trees$Tree
   #35 = Class              #34           // scala/reflect/internal/Trees$Tree
   #36 = Utf8               scala/reflect/internal/Trees
   #37 = Class              #36           // scala/reflect/internal/Trees
   #38 = Utf8               Tree
   #39 = Utf8               scala/reflect/internal/Types$Type
   #40 = Class              #39           // scala/reflect/internal/Types$Type
   #41 = Utf8               scala/reflect/internal/Types
   #42 = Class              #41           // scala/reflect/internal/Types
   #43 = Utf8               Type
   #44 = Utf8               scala/tools/nsc/typechecker/Contexts$Context
   #45 = Class              #44           // scala/tools/nsc/typechecker/Contexts$Context
   #46 = Utf8               scala/tools/nsc/typechecker/Contexts
   #47 = Class              #46           // scala/tools/nsc/typechecker/Contexts
   #48 = Utf8               Context
   #49 = Utf8               scala/tools/nsc/typechecker/Implicits$ImplicitSearch
   #50 = Class              #49           // scala/tools/nsc/typechecker/Implicits$ImplicitSearch
   #51 = Utf8               scala/tools/nsc/typechecker/Implicits
   #52 = Class              #51           // scala/tools/nsc/typechecker/Implicits
   #53 = Utf8               ImplicitSearch
   #54 = Utf8               scala/tools/nsc/typechecker/Implicits$SearchResult
   #55 = Class              #54           // scala/tools/nsc/typechecker/Implicits$SearchResult
   #56 = Utf8               SearchResult
   #57 = Utf8               scala/tools/nsc/typechecker/Typers$Typer
   #58 = Class              #57           // scala/tools/nsc/typechecker/Typers$Typer
   #59 = Utf8               scala/tools/nsc/typechecker/Typers
   #60 = Class              #59           // scala/tools/nsc/typechecker/Typers
   #61 = Utf8               Typer
   #62 = Utf8               shapeless/CachedImplicitMacros$$anon$3
   #63 = Class              #62           // shapeless/CachedImplicitMacros$$anon$3
   #64 = Utf8               c
   #65 = Utf8               Lscala/reflect/macros/whitebox/Context;
   #66 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
   #67 = NameAndType        #64:#65       // c:Lscala/reflect/macros/whitebox/Context;
   #68 = Fieldref           #2.#67        // shapeless/CachedImplicitMacros.c:Lscala/reflect/macros/whitebox/Context;
   #69 = Utf8               this
   #70 = Utf8               Lshapeless/CachedImplicitMacros;
   #71 = Utf8               cachedImplicitImpl
   #72 = Utf8               (Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Trees$TreeApi;
   #73 = Utf8               <T:Ljava/lang/Object;>(Lscala/reflect/api/TypeTags$WeakTypeTag<TT;>;)Lscala/reflect/api/Trees$TreeApi;
   #74 = Utf8               tTag
   #75 = NameAndType        #64:#66       // c:()Lscala/reflect/macros/whitebox/Context;
   #76 = Methodref          #2.#75        // shapeless/CachedImplicitMacros.c:()Lscala/reflect/macros/whitebox/Context;
   #77 = Utf8               scala/reflect/macros/contexts/Context
   #78 = Class              #77           // scala/reflect/macros/contexts/Context
   #79 = Utf8               callsiteTyper
   #80 = Utf8               ()Lscala/tools/nsc/typechecker/Typers$Typer;
   #81 = NameAndType        #79:#80       // callsiteTyper:()Lscala/tools/nsc/typechecker/Typers$Typer;
   #82 = Methodref          #78.#81       // scala/reflect/macros/contexts/Context.callsiteTyper:()Lscala/tools/nsc/typechecker/Typers$Typer;
   #83 = Utf8               universe
   #84 = Utf8               ()Lscala/tools/nsc/Global;
   #85 = NameAndType        #83:#84       // universe:()Lscala/tools/nsc/Global;
   #86 = Methodref          #78.#85       // scala/reflect/macros/contexts/Context.universe:()Lscala/tools/nsc/Global;
   #87 = Utf8               scala/tools/nsc/Global
   #88 = Class              #87           // scala/tools/nsc/Global
   #89 = Utf8               analyzer
   #90 = Utf8               ()Lscala/tools/nsc/typechecker/Analyzer;
   #91 = NameAndType        #89:#90       // analyzer:()Lscala/tools/nsc/typechecker/Analyzer;
   #92 = Methodref          #88.#91       // scala/tools/nsc/Global.analyzer:()Lscala/tools/nsc/typechecker/Analyzer;
   #93 = Utf8               context
   #94 = Utf8               ()Lscala/tools/nsc/typechecker/Contexts$Context;
   #95 = NameAndType        #93:#94       // context:()Lscala/tools/nsc/typechecker/Contexts$Context;
   #96 = Methodref          #58.#95       // scala/tools/nsc/typechecker/Typers$Typer.context:()Lscala/tools/nsc/typechecker/Contexts$Context;
   #97 = Utf8               owner
   #98 = Utf8               ()Lscala/reflect/internal/Symbols$Symbol;
   #99 = NameAndType        #97:#98       // owner:()Lscala/reflect/internal/Symbols$Symbol;
  #100 = Methodref          #45.#99       // scala/tools/nsc/typechecker/Contexts$Context.owner:()Lscala/reflect/internal/Symbols$Symbol;
  #101 = Utf8               isVal
  #102 = Utf8               ()Z
  #103 = NameAndType        #101:#102     // isVal:()Z
  #104 = Methodref          #30.#103      // scala/reflect/internal/Symbols$Symbol.isVal:()Z
  #105 = Utf8               isLazy
  #106 = NameAndType        #105:#102     // isLazy:()Z
  #107 = Methodref          #30.#106      // scala/reflect/internal/Symbols$Symbol.isLazy:()Z
  #108 = Utf8               scala/reflect/macros/whitebox/Context
  #109 = Class              #108          // scala/reflect/macros/whitebox/Context
  #110 = Utf8               enclosingPosition
  #111 = Utf8               ()Lscala/reflect/api/Position;
  #112 = NameAndType        #110:#111     // enclosingPosition:()Lscala/reflect/api/Position;
  #113 = InterfaceMethodref #109.#112     // scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
  #114 = Utf8               cachedImplicit should only be used to initialize vals and lazy vals
  #115 = String             #114          // cachedImplicit should only be used to initialize vals and lazy vals
  #116 = Utf8               abort
  #117 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #118 = NameAndType        #116:#117     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #119 = InterfaceMethodref #109.#118     // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #120 = Utf8               ()Lscala/reflect/macros/Universe;
  #121 = NameAndType        #83:#120      // universe:()Lscala/reflect/macros/Universe;
  #122 = InterfaceMethodref #109.#121     // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #123 = Utf8               scala/reflect/macros/Universe
  #124 = Class              #123          // scala/reflect/macros/Universe
  #125 = Utf8               weakTypeOf
  #126 = Utf8               (Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Types$TypeApi;
  #127 = NameAndType        #125:#126     // weakTypeOf:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Types$TypeApi;
  #128 = Methodref          #124.#127     // scala/reflect/macros/Universe.weakTypeOf:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Types$TypeApi;
  #129 = Utf8               macroApplication
  #130 = Utf8               ()Lscala/reflect/internal/Trees$Tree;
  #131 = NameAndType        #129:#130     // macroApplication:()Lscala/reflect/internal/Trees$Tree;
  #132 = Methodref          #78.#131      // scala/reflect/macros/contexts/Context.macroApplication:()Lscala/reflect/internal/Trees$Tree;
  #133 = Utf8               typeSymbol
  #134 = Utf8               ()Lscala/reflect/api/Symbols$SymbolApi;
  #135 = NameAndType        #133:#134     // typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
  #136 = Methodref          #25.#135      // scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
  #137 = Utf8               isParameter
  #138 = NameAndType        #137:#102     // isParameter:()Z
  #139 = InterfaceMethodref #10.#138      // scala/reflect/api/Symbols$SymbolApi.isParameter:()Z
  #140 = Utf8               tpe
  #141 = Utf8               ()Lscala/reflect/internal/Types$Type;
  #142 = NameAndType        #140:#141     // tpe:()Lscala/reflect/internal/Types$Type;
  #143 = Methodref          #30.#142      // scala/reflect/internal/Symbols$Symbol.tpe:()Lscala/reflect/internal/Types$Type;
  #144 = Utf8               finalResultType
  #145 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #146 = NameAndType        #144:#145     // finalResultType:()Lscala/reflect/api/Types$TypeApi;
  #147 = Methodref          #25.#146      // scala/reflect/api/Types$TypeApi.finalResultType:()Lscala/reflect/api/Types$TypeApi;
  #148 = Utf8               makeImplicit
  #149 = Utf8               (Z)Lscala/tools/nsc/typechecker/Contexts$Context;
  #150 = NameAndType        #148:#149     // makeImplicit:(Z)Lscala/tools/nsc/typechecker/Contexts$Context;
  #151 = Methodref          #45.#150      // scala/tools/nsc/typechecker/Contexts$Context.makeImplicit:(Z)Lscala/tools/nsc/typechecker/Contexts$Context;
  #152 = Utf8               <init>
  #153 = Utf8               (Lshapeless/CachedImplicitMacros;Lscala/tools/nsc/typechecker/Analyzer;Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Types$Type;Lscala/tools/nsc/typechecker/Contexts$Context;Lscala/reflect/internal/Symbols$Symbol;)V
  #154 = NameAndType        #152:#153     // "<init>":(Lshapeless/CachedImplicitMacros;Lscala/tools/nsc/typechecker/Analyzer;Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Types$Type;Lscala/tools/nsc/typechecker/Contexts$Context;Lscala/reflect/internal/Symbols$Symbol;)V
  #155 = Methodref          #63.#154      // shapeless/CachedImplicitMacros$$anon$3."<init>":(Lshapeless/CachedImplicitMacros;Lscala/tools/nsc/typechecker/Analyzer;Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Types$Type;Lscala/tools/nsc/typechecker/Contexts$Context;Lscala/reflect/internal/Symbols$Symbol;)V
  #156 = Utf8               bestImplicit
  #157 = Utf8               ()Lscala/tools/nsc/typechecker/Implicits$SearchResult;
  #158 = NameAndType        #156:#157     // bestImplicit:()Lscala/tools/nsc/typechecker/Implicits$SearchResult;
  #159 = Methodref          #50.#158      // scala/tools/nsc/typechecker/Implicits$ImplicitSearch.bestImplicit:()Lscala/tools/nsc/typechecker/Implicits$SearchResult;
  #160 = Utf8               isFailure
  #161 = NameAndType        #160:#102     // isFailure:()Z
  #162 = Methodref          #55.#161      // scala/tools/nsc/typechecker/Implicits$SearchResult.isFailure:()Z
  #163 = Utf8               shapeless/package$
  #164 = Class              #163          // shapeless/package$
  #165 = Utf8               MODULE$
  #166 = Utf8               Lshapeless/package$;
  #167 = NameAndType        #165:#166     // MODULE$:Lshapeless/package$;
  #168 = Fieldref           #164.#167     // shapeless/package$.MODULE$:Lshapeless/package$;
  #169 = Utf8               implicitNotFoundMessage
  #170 = Utf8               (Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
  #171 = NameAndType        #169:#170     // implicitNotFoundMessage:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
  #172 = Methodref          #164.#171     // shapeless/package$.implicitNotFoundMessage:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
  #173 = Utf8               tree
  #174 = NameAndType        #173:#130     // tree:()Lscala/reflect/internal/Trees$Tree;
  #175 = Methodref          #55.#174      // scala/tools/nsc/typechecker/Implicits$SearchResult.tree:()Lscala/reflect/internal/Trees$Tree;
  #176 = Utf8               tpe0
  #177 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #178 = Utf8               errorMsg
  #179 = Utf8               Ljava/lang/String;
  #180 = Utf8               casted
  #181 = Utf8               Lscala/reflect/macros/contexts/Context;
  #182 = Utf8               typer
  #183 = Utf8               Lscala/tools/nsc/typechecker/Typers$Typer;
  #184 = Utf8               global
  #185 = Utf8               Lscala/tools/nsc/Global;
  #186 = Utf8               Lscala/tools/nsc/typechecker/Analyzer;
  #187 = Utf8               tCtx
  #188 = Utf8               Lscala/tools/nsc/typechecker/Contexts$Context;
  #189 = Utf8               Lscala/reflect/internal/Symbols$Symbol;
  #190 = Utf8               tTpe
  #191 = Utf8               application
  #192 = Utf8               Lscala/reflect/internal/Trees$Tree;
  #193 = Utf8               gTpe
  #194 = Utf8               Lscala/reflect/internal/Types$Type;
  #195 = Utf8               sCtx
  #196 = Utf8               is
  #197 = Utf8               Lscala/tools/nsc/typechecker/Implicits$ImplicitSearch;
  #198 = Utf8               best
  #199 = Utf8               Lscala/tools/nsc/typechecker/Implicits$SearchResult;
  #200 = Utf8               Lscala/reflect/api/TypeTags$WeakTypeTag;
  #201 = Utf8               scala/tools/nsc/typechecker/Analyzer
  #202 = Class              #201          // scala/tools/nsc/typechecker/Analyzer
  #203 = Utf8               (Lscala/reflect/macros/whitebox/Context;)V
  #204 = Utf8               ()V
  #205 = NameAndType        #152:#204     // "<init>":()V
  #206 = Methodref          #4.#205       // java/lang/Object."<init>":()V
  #207 = Utf8               Code
  #208 = Utf8               LineNumberTable
  #209 = Utf8               LocalVariableTable
  #210 = Utf8               StackMapTable
  #211 = Utf8               Signature
  #212 = Utf8               MethodParameters
  #213 = Utf8               InnerClasses
  #214 = Utf8               SourceFile
  #215 = Utf8               RuntimeVisibleAnnotations
  #216 = Utf8               ScalaInlineInfo
  #217 = Utf8               ScalaSig
{
  private final scala.reflect.macros.whitebox.Context c;
    descriptor: Lscala/reflect/macros/whitebox/Context;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.reflect.macros.whitebox.Context c();
    descriptor: ()Lscala/reflect/macros/whitebox/Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #68                 // Field c:Lscala/reflect/macros/whitebox/Context;
         4: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lshapeless/CachedImplicitMacros;

  public <T extends java.lang.Object> scala.reflect.api.Trees$TreeApi cachedImplicitImpl(scala.reflect.api.TypeTags$WeakTypeTag<T>);
    descriptor: (Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=17, args_size=2
         0: aload_0
         1: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
         4: checkcast     #78                 // class scala/reflect/macros/contexts/Context
         7: astore_2
         8: aload_2
         9: invokevirtual #82                 // Method scala/reflect/macros/contexts/Context.callsiteTyper:()Lscala/tools/nsc/typechecker/Typers$Typer;
        12: astore_3
        13: aload_2
        14: invokevirtual #86                 // Method scala/reflect/macros/contexts/Context.universe:()Lscala/tools/nsc/Global;
        17: astore        4
        19: aload         4
        21: invokevirtual #92                 // Method scala/tools/nsc/Global.analyzer:()Lscala/tools/nsc/typechecker/Analyzer;
        24: astore        5
        26: aload_3
        27: invokevirtual #96                 // Method scala/tools/nsc/typechecker/Typers$Typer.context:()Lscala/tools/nsc/typechecker/Contexts$Context;
        30: astore        6
        32: aload         6
        34: invokevirtual #100                // Method scala/tools/nsc/typechecker/Contexts$Context.owner:()Lscala/reflect/internal/Symbols$Symbol;
        37: astore        7
        39: aload         7
        41: invokevirtual #104                // Method scala/reflect/internal/Symbols$Symbol.isVal:()Z
        44: ifne          76
        47: aload         7
        49: invokevirtual #107                // Method scala/reflect/internal/Symbols$Symbol.isLazy:()Z
        52: ifne          76
        55: aload_0
        56: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        59: aload_0
        60: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        63: invokeinterface #113,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
        68: ldc           #115                // String cachedImplicit should only be used to initialize vals and lazy vals
        70: invokeinterface #119,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
        75: athrow
        76: aload_0
        77: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
        80: invokeinterface #122,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        85: aload_1
        86: invokevirtual #128                // Method scala/reflect/macros/Universe.weakTypeOf:(Lscala/reflect/api/TypeTags$WeakTypeTag;)Lscala/reflect/api/Types$TypeApi;
        89: astore        8
        91: aload_2
        92: invokevirtual #132                // Method scala/reflect/macros/contexts/Context.macroApplication:()Lscala/reflect/internal/Trees$Tree;
        95: astore        9
        97: aload         8
        99: invokevirtual #136                // Method scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
       102: invokeinterface #139,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.isParameter:()Z
       107: ifeq          118
       110: aload         7
       112: invokevirtual #143                // Method scala/reflect/internal/Symbols$Symbol.tpe:()Lscala/reflect/internal/Types$Type;
       115: goto          120
       118: aload         8
       120: astore        11
       122: aload         11
       124: invokevirtual #147                // Method scala/reflect/api/Types$TypeApi.finalResultType:()Lscala/reflect/api/Types$TypeApi;
       127: astore        10
       129: aload         10
       131: checkcast     #40                 // class scala/reflect/internal/Types$Type
       134: astore        12
       136: aload         6
       138: iconst_0
       139: invokevirtual #151                // Method scala/tools/nsc/typechecker/Contexts$Context.makeImplicit:(Z)Lscala/tools/nsc/typechecker/Contexts$Context;
       142: astore        13
       144: new           #63                 // class shapeless/CachedImplicitMacros$$anon$3
       147: dup
       148: aload_0
       149: aload         5
       151: aload         9
       153: aload         12
       155: aload         13
       157: aload         7
       159: invokespecial #155                // Method shapeless/CachedImplicitMacros$$anon$3."<init>":(Lshapeless/CachedImplicitMacros;Lscala/tools/nsc/typechecker/Analyzer;Lscala/reflect/internal/Trees$Tree;Lscala/reflect/internal/Types$Type;Lscala/tools/nsc/typechecker/Contexts$Context;Lscala/reflect/internal/Symbols$Symbol;)V
       162: astore        14
       164: aload         14
       166: invokevirtual #159                // Method scala/tools/nsc/typechecker/Implicits$ImplicitSearch.bestImplicit:()Lscala/tools/nsc/typechecker/Implicits$SearchResult;
       169: astore        15
       171: aload         15
       173: invokevirtual #162                // Method scala/tools/nsc/typechecker/Implicits$SearchResult.isFailure:()Z
       176: ifeq          214
       179: getstatic     #168                // Field shapeless/package$.MODULE$:Lshapeless/package$;
       182: aload_0
       183: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       186: aload         10
       188: invokevirtual #172                // Method shapeless/package$.implicitNotFoundMessage:(Lscala/reflect/macros/whitebox/Context;Lscala/reflect/api/Types$TypeApi;)Ljava/lang/String;
       191: astore        16
       193: aload_0
       194: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       197: aload_0
       198: invokevirtual #76                 // Method c:()Lscala/reflect/macros/whitebox/Context;
       201: invokeinterface #113,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       206: aload         16
       208: invokeinterface #119,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       213: athrow
       214: aload         15
       216: invokevirtual #175                // Method scala/tools/nsc/typechecker/Implicits$SearchResult.tree:()Lscala/reflect/internal/Trees$Tree;
       219: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 76
          locals = [ class shapeless/CachedImplicitMacros, class scala/reflect/api/TypeTags$WeakTypeTag, class scala/reflect/macros/contexts/Context, class scala/tools/nsc/typechecker/Typers$Typer, class scala/tools/nsc/Global, class scala/tools/nsc/typechecker/Analyzer, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$Symbol ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ class scala/reflect/api/Types$TypeApi, class scala/reflect/internal/Trees$Tree ]
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class scala/reflect/api/Types$TypeApi ]
        frame_type = 255 /* full_frame */
          offset_delta = 93
          locals = [ class shapeless/CachedImplicitMacros, class scala/reflect/api/TypeTags$WeakTypeTag, class scala/reflect/macros/contexts/Context, class scala/tools/nsc/typechecker/Typers$Typer, class scala/tools/nsc/Global, class scala/tools/nsc/typechecker/Analyzer, class scala/tools/nsc/typechecker/Contexts$Context, class scala/reflect/internal/Symbols$Symbol, class scala/reflect/api/Types$TypeApi, class scala/reflect/internal/Trees$Tree, class scala/reflect/api/Types$TypeApi, class scala/reflect/api/Types$TypeApi, class scala/reflect/internal/Types$Type, class scala/tools/nsc/typechecker/Contexts$Context, class shapeless/CachedImplicitMacros$$anon$3, class scala/tools/nsc/typechecker/Implicits$SearchResult ]
          stack = []
      LineNumberTable:
        line 120: 0
        line 121: 8
        line 122: 13
        line 123: 19
        line 124: 26
        line 125: 32
        line 126: 39
        line 127: 55
        line 128: 76
        line 129: 91
        line 132: 97
        line 133: 118
        line 134: 122
        line 136: 129
        line 140: 136
        line 141: 144
        line 161: 164
        line 162: 171
        line 163: 179
        line 164: 193
        line 166: 214
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          120       7    11  tpe0   Lscala/reflect/api/Types$TypeApi;
          191      23    16 errorMsg   Ljava/lang/String;
            7     212     2 casted   Lscala/reflect/macros/contexts/Context;
           12     207     3 typer   Lscala/tools/nsc/typechecker/Typers$Typer;
           17     202     4 global   Lscala/tools/nsc/Global;
           24     195     5 analyzer   Lscala/tools/nsc/typechecker/Analyzer;
           30     189     6  tCtx   Lscala/tools/nsc/typechecker/Contexts$Context;
           37     182     7 owner   Lscala/reflect/internal/Symbols$Symbol;
           89     130     8  tTpe   Lscala/reflect/api/Types$TypeApi;
           95     124     9 application   Lscala/reflect/internal/Trees$Tree;
          127      92    10   tpe   Lscala/reflect/api/Types$TypeApi;
          134      85    12  gTpe   Lscala/reflect/internal/Types$Type;
          142      77    13  sCtx   Lscala/tools/nsc/typechecker/Contexts$Context;
          162      57    14    is   Lscala/tools/nsc/typechecker/Implicits$ImplicitSearch;
          169      50    15  best   Lscala/tools/nsc/typechecker/Implicits$SearchResult;
            0     220     0  this   Lshapeless/CachedImplicitMacros;
            0     220     1  tTag   Lscala/reflect/api/TypeTags$WeakTypeTag;
    Signature: #73                          // <T:Ljava/lang/Object;>(Lscala/reflect/api/TypeTags$WeakTypeTag<TT;>;)Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      tTag                           final

  public shapeless.CachedImplicitMacros(scala.reflect.macros.whitebox.Context);
    descriptor: (Lscala/reflect/macros/whitebox/Context;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #68                 // Field c:Lscala/reflect/macros/whitebox/Context;
         5: aload_0
         6: invokespecial #206                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 116: 0
        line 170: 5
        line 116: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/CachedImplicitMacros;
            0      10     1     c   Lscala/reflect/macros/whitebox/Context;
    MethodParameters:
      Name                           Flags
      c                              final
}
InnerClasses:
  public #13= #10 of #12;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #18= #15 of #17;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public #23= #20 of #22;                 // WeakTypeTag=class scala/reflect/api/TypeTags$WeakTypeTag of class scala/reflect/api/TypeTags
  public abstract #28= #25 of #27;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public abstract #33= #30 of #32;        // Symbol=class scala/reflect/internal/Symbols$Symbol of class scala/reflect/internal/Symbols
  public abstract #38= #35 of #37;        // Tree=class scala/reflect/internal/Trees$Tree of class scala/reflect/internal/Trees
  public abstract #43= #40 of #42;        // Type=class scala/reflect/internal/Types$Type of class scala/reflect/internal/Types
  public #48= #45 of #47;                 // Context=class scala/tools/nsc/typechecker/Contexts$Context of class scala/tools/nsc/typechecker/Contexts
  public #53= #50 of #52;                 // ImplicitSearch=class scala/tools/nsc/typechecker/Implicits$ImplicitSearch of class scala/tools/nsc/typechecker/Implicits
  public #56= #55 of #52;                 // SearchResult=class scala/tools/nsc/typechecker/Implicits$SearchResult of class scala/tools/nsc/typechecker/Implicits
  public abstract #61= #58 of #60;        // Typer=class scala/tools/nsc/typechecker/Typers$Typer of class scala/tools/nsc/typechecker/Typers
  public final #63;                       // class shapeless/CachedImplicitMacros$$anon$3
SourceFile: "package.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u00193A!\u0002\u0004\u0001\u0013!A\u0001\u0003\u0001BC\u0002\u0013\u0005\u0011\u0003\u0003\u0005\u001d\u0001\t\u0005\t\u0015!\u0003\u0013\u0011\u0015i\u0002\u0001\"\u0001\u001f\u0011\u0015\u0011\u0003\u0001\"\u0001$\u0005Q\u0019\u0015m\u00195fI&k\u0007\u000f\\5dSRl\u0015m\u0019:pg*\tq!A\u0005tQ\u0006\u0004X\r\\3tg\u000e\u00011C\u0001\u0001\u000b!\tYa\"D\u0001\r\u0015\u0005i\u0011!B:dC2\f\u0017BA\b\r\u0005\u0019\te.\u001f*fM\u0006\t1-F\u0001\u0013!\t\u0019\"$D\u0001\u0015\u0015\t)b#\u0001\u0005xQ&$XMY8y\u0015\t9\u0002$\u0001\u0004nC\u000e\u0014xn\u001d\u0006\u000331\tqA]3gY\u0016\u001cG/\u0003\u0002\u001c)\t91i\u001c8uKb$\u0018AA2!\u0003\u0019a\u0014N\\5u}Q\u0011q$\t\t\u0003A\u0001i\u0011A\u0002\u0005\u0006!\r\u0001\rAE\u0001\u0013G\u0006\u001c\u0007.\u001a3J[Bd\u0017nY5u\u00136\u0004H.\u0006\u0002%{Q\u0011Q\u0005\u000e\t\u0003M9r!aJ\u0015\u000f\u0005!\nQ\"\u0001\u0001\n\u0005)Z\u0013\u0001C;oSZ,\'o]3\n\u0005ma#BA\u0017\u0017\u0003!\u0011G.Y2lE>D\u0018BA\u00181\u0005\u0011!&/Z3\n\u0005E\u0012$!\u0002+sK\u0016\u001c(BA\u001a\u0019\u0003\r\t\u0007/\u001b\u0005\u0006k\u0011\u0001\u001dAN\u0001\u0005iR\u000bw\rE\u0002\'omJ!\u0001O\u001d\u0003\u0017]+\u0017m\u001b+za\u0016$\u0016mZ\u0005\u0003uI\u0012\u0001\u0002V=qKR\u000bwm\u001d\t\u0003yub\u0001\u0001B\u0003?\t\t\u0007qHA\u0001U#\t\u00015\t\u0005\u0002\f\u0003&\u0011!\t\u0004\u0002\b\u001d>$\b.\u001b8h!\tYA)\u0003\u0002F\u0019\t\u0019\u0011I\\="
    )
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 98 00 CB 00 00 40 00 42 00 00 47
   00 48 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
