Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalatest/tools/TestSpec.class
  Last modified May 29, 2022; size 5528 bytes
  SHA-256 checksum 1c4bc908e11824cee397b1afbe287e34e1ed6cdb6cd3680f120d927762f6bd0f
  Compiled from "TestSpec.scala"
public class org.scalatest.tools.TestSpec implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalatest/tools/TestSpec
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 2, methods: 20, attributes: 4
Constant pool:
    #1 = Utf8               org/scalatest/tools/TestSpec
    #2 = Class              #1            // org/scalatest/tools/TestSpec
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               TestSpec.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005mc!B\r\u001b\u0001j\u0001\u0003\u0002C\u001c\u0001\u0005+\u0007I\u0011\u0001\u001d\t\u0011\u0005\u0003!\u0011#Q\u0001\neB\u0001B\u0011\u0001\u0003\u0016\u0004%\ta\u0011\u0005\t\u000f\u0002\u0011\t\u0012)A\u0005\t\")\u0001\n\u0001C\u0001\u0013\"9a\nAA\u0001\n\u0003y\u0005b\u0002*\u0001#\u0003%\ta\u0015\u0005\b=\u0002\t\n\u0011\"\u0001`\u0011\u001d\t\u0007!!A\u0005B\tDqA\u001b\u0001\u0002\u0002\u0013\u00051\u000eC\u0004p\u0001\u0005\u0005I\u0011\u00019\t\u000fY\u0004\u0011\u0011!C!o\"9a\u0010AA\u0001\n\u0003y\b\"CA\u0002\u0001\u0005\u0005I\u0011IA\u0003\u0011%\tI\u0001AA\u0001\n\u0003\nY\u0001C\u0005\u0002\u000e\u0001\t\t\u0011\"\u0011\u0002\u0010!I\u0011\u0011\u0003\u0001\u0002\u0002\u0013\u0005\u00131C\u0004\u000b\u0003/Q\u0012\u0011!E\u00015\u0005ea!C\r\u001b\u0003\u0003E\tAGA\u000e\u0011\u0019A5\u0003\"\u0001\u00024!I\u0011QB\n\u0002\u0002\u0013\u0015\u0013q\u0002\u0005\n\u0003k\u0019\u0012\u0011!CA\u0003oA\u0011\"!\u0010\u0014\u0003\u0003%\t)a\u0010\t\u0013\u0005E3#!A\u0005\n\u0005M#\u0001\u0003+fgR\u001c\u0006/Z2\u000b\u0005ma\u0012!\u0002;p_2\u001c(BA\u000f\u001f\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001 \u0003\ry\'oZ\n\u0005\u0001\u0005:#\u0006\u0005\u0002#K5\t1EC\u0001%\u0003\u0015\u00198-\u00197b\u0013\t13E\u0001\u0004B]f\u0014VM\u001a\t\u0003E!J!!K\u0012\u0003\u000fA\u0013x\u000eZ;diB\u00111\u0006\u000e\b\u0003YIr!!L\u0019\u000e\u00039R!a\f\u0019\u0002\rq\u0012xn\u001c;?\u0007\u0001I\u0011\u0001J\u0005\u0003g\r\nq\u0001]1dW\u0006<W-\u0003\u00026m\ta1+\u001a:jC2L\'0\u00192mK*\u00111gI\u0001\u0005gB,7-F\u0001:!\tQdH\u0004\u0002<yA\u0011QfI\u0005\u0003{\r\na\u0001\u0015:fI\u00164\u0017BA A\u0005\u0019\u0019FO]5oO*\u0011QhI\u0001\u0006gB,7\rI\u0001\fSN\u001cVOY:ue&tw-F\u0001E!\t\u0011S)\u0003\u0002GG\t9!i\\8mK\u0006t\u0017\u0001D5t\'V\u00147\u000f\u001e:j]\u001e\u0004\u0013A\u0002\u001fj]&$h\bF\u0002K\u00196\u0003\"a\u0013\u0001\u000e\u0003iAQaN\u0003A\u0002eBQAQ\u0003A\u0002\u0011\u000bAaY8qsR\u0019!\nU)\t\u000f]2\u0001\u0013!a\u0001s!9!I\u0002I\u0001\u0002\u0004!\u0015AD2paf$C-\u001a4bk2$H%M\u000b\u0002)*\u0012\u0011(V\u0016\u0002-B\u0011q\u000bX\u0007\u00021*\u0011\u0011LW\u0001\nk:\u001c\u0007.Z2lK\u0012T!aW\u0012\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002^1\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%eU\t\u0001M\u000b\u0002E+\u0006i\u0001O]8ek\u000e$\bK]3gSb,\u0012a\u0019\t\u0003I&l\u0011!\u001a\u0006\u0003M\u001e\fA\u0001\\1oO*\t\u0001.\u0001\u0003kCZ\f\u0017BA f\u00031\u0001(o\u001c3vGR\f%/\u001b;z+\u0005a\u0007C\u0001\u0012n\u0013\tq7EA\u0002J]R\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0002riB\u0011!E]\u0005\u0003g\u000e\u00121!\u00118z\u0011\u001d)8\"!AA\u00021\f1\u0001\u001f\u00132\u0003=\u0001(o\u001c3vGRLE/\u001a:bi>\u0014X#\u0001=\u0011\u0007ed\u0018/D\u0001{\u0015\tY8%\u0001\u0006d_2dWm\u0019;j_:L!! >\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0004\t\u0006\u0005\u0001bB;\u000e\u0003\u0003\u0005\r!]\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\rF\u0002d\u0003\u000fAq!\u001e\b\u0002\u0002\u0003\u0007A.\u0001\u0005iCND7i\u001c3f)\u0005a\u0017\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003\r\fa!Z9vC2\u001cHc\u0001#\u0002\u0016!9Q/EA\u0001\u0002\u0004\t\u0018\u0001\u0003+fgR\u001c\u0006/Z2\u0011\u0005-\u001b2#B\n\u0002\u001e\u0005%\u0002cBA\u0010\u0003KIDIS\u0007\u0003\u0003CQ1!a\t$\u0003\u001d\u0011XO\u001c;j[\u0016LA!a\n\u0002\"\t\t\u0012IY:ue\u0006\u001cGOR;oGRLwN\u001c\u001a\u0011\t\u0005-\u0012\u0011G\u0007\u0003\u0003[Q1!a\fh\u0003\tIw.C\u00026\u0003[!\"!!\u0007\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u000b)\u000bI$a\u000f\t\u000b]2\u0002\u0019A\u001d\t\u000b\t3\u0002\u0019\u0001#\u0002\u000fUt\u0017\r\u001d9msR!\u0011\u0011IA\'!\u0015\u0011\u00131IA$\u0013\r\t)e\t\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u000b\t\nI%\u000f#\n\u0007\u0005-3E\u0001\u0004UkBdWM\r\u0005\t\u0003\u001f:\u0012\u0011!a\u0001\u0015\u0006\u0019\u0001\u0010\n\u0019\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\u0005U\u0003c\u00013\u0002X%\u0019\u0011\u0011L3\u0003\r=\u0013\'.Z2u\u0001
   #13 = Utf8               spec
   #14 = Utf8               Ljava/lang/String;
   #15 = Utf8               isSubstring
   #16 = Utf8               Z
   #17 = Utf8               unapply
   #18 = Utf8               (Lorg/scalatest/tools/TestSpec;)Lscala/Option;
   #19 = Utf8               (Lorg/scalatest/tools/TestSpec;)Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
   #20 = Utf8               x$0
   #21 = Utf8               org/scalatest/tools/TestSpec$
   #22 = Class              #21           // org/scalatest/tools/TestSpec$
   #23 = Utf8               MODULE$
   #24 = Utf8               Lorg/scalatest/tools/TestSpec$;
   #25 = NameAndType        #23:#24       // MODULE$:Lorg/scalatest/tools/TestSpec$;
   #26 = Fieldref           #22.#25       // org/scalatest/tools/TestSpec$.MODULE$:Lorg/scalatest/tools/TestSpec$;
   #27 = NameAndType        #17:#18       // unapply:(Lorg/scalatest/tools/TestSpec;)Lscala/Option;
   #28 = Methodref          #22.#27       // org/scalatest/tools/TestSpec$.unapply:(Lorg/scalatest/tools/TestSpec;)Lscala/Option;
   #29 = Utf8               Lorg/scalatest/tools/TestSpec;
   #30 = Utf8               apply
   #31 = Utf8               (Ljava/lang/String;Z)Lorg/scalatest/tools/TestSpec;
   #32 = NameAndType        #30:#31       // apply:(Ljava/lang/String;Z)Lorg/scalatest/tools/TestSpec;
   #33 = Methodref          #22.#32       // org/scalatest/tools/TestSpec$.apply:(Ljava/lang/String;Z)Lorg/scalatest/tools/TestSpec;
   #34 = Utf8               tupled
   #35 = Utf8               ()Lscala/Function1;
   #36 = Utf8               ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;Lorg/scalatest/tools/TestSpec;>;
   #37 = NameAndType        #34:#35       // tupled:()Lscala/Function1;
   #38 = Methodref          #22.#37       // org/scalatest/tools/TestSpec$.tupled:()Lscala/Function1;
   #39 = Utf8               curried
   #40 = Utf8               ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/tools/TestSpec;>;>;
   #41 = NameAndType        #39:#35       // curried:()Lscala/Function1;
   #42 = Methodref          #22.#41       // org/scalatest/tools/TestSpec$.curried:()Lscala/Function1;
   #43 = Utf8               productElementNames
   #44 = Utf8               ()Lscala/collection/Iterator;
   #45 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #46 = Utf8               productElementNames$
   #47 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #48 = NameAndType        #46:#47       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #49 = InterfaceMethodref #6.#48        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #50 = Utf8               this
   #51 = Utf8               ()Ljava/lang/String;
   #52 = NameAndType        #13:#14       // spec:Ljava/lang/String;
   #53 = Fieldref           #2.#52        // org/scalatest/tools/TestSpec.spec:Ljava/lang/String;
   #54 = Utf8               ()Z
   #55 = NameAndType        #15:#16       // isSubstring:Z
   #56 = Fieldref           #2.#55        // org/scalatest/tools/TestSpec.isSubstring:Z
   #57 = Utf8               copy
   #58 = Utf8               <init>
   #59 = Utf8               (Ljava/lang/String;Z)V
   #60 = NameAndType        #58:#59       // "<init>":(Ljava/lang/String;Z)V
   #61 = Methodref          #2.#60        // org/scalatest/tools/TestSpec."<init>":(Ljava/lang/String;Z)V
   #62 = Utf8               copy$default$1
   #63 = NameAndType        #13:#51       // spec:()Ljava/lang/String;
   #64 = Methodref          #2.#63        // org/scalatest/tools/TestSpec.spec:()Ljava/lang/String;
   #65 = Utf8               copy$default$2
   #66 = NameAndType        #15:#54       // isSubstring:()Z
   #67 = Methodref          #2.#66        // org/scalatest/tools/TestSpec.isSubstring:()Z
   #68 = Utf8               productPrefix
   #69 = Utf8               TestSpec
   #70 = String             #69           // TestSpec
   #71 = Utf8               productArity
   #72 = Utf8               ()I
   #73 = Utf8               productElement
   #74 = Utf8               (I)Ljava/lang/Object;
   #75 = Utf8               x$1
   #76 = Utf8               scala/runtime/BoxesRunTime
   #77 = Class              #76           // scala/runtime/BoxesRunTime
   #78 = Utf8               boxToBoolean
   #79 = Utf8               (Z)Ljava/lang/Boolean;
   #80 = NameAndType        #78:#79       // boxToBoolean:(Z)Ljava/lang/Boolean;
   #81 = Methodref          #77.#80       // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #82 = Utf8               scala/runtime/Statics
   #83 = Class              #82           // scala/runtime/Statics
   #84 = Utf8               ioobe
   #85 = NameAndType        #84:#74       // ioobe:(I)Ljava/lang/Object;
   #86 = Methodref          #83.#85       // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
   #87 = Utf8               I
   #88 = Utf8               productIterator
   #89 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #90 = Utf8               scala/runtime/ScalaRunTime$
   #91 = Class              #90           // scala/runtime/ScalaRunTime$
   #92 = Utf8               Lscala/runtime/ScalaRunTime$;
   #93 = NameAndType        #23:#92       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #94 = Fieldref           #91.#93       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #95 = Utf8               typedProductIterator
   #96 = NameAndType        #95:#47       // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #97 = Methodref          #91.#96       // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
   #98 = Utf8               canEqual
   #99 = Utf8               (Ljava/lang/Object;)Z
  #100 = Utf8               Ljava/lang/Object;
  #101 = Utf8               productElementName
  #102 = Utf8               (I)Ljava/lang/String;
  #103 = String             #13           // spec
  #104 = String             #15           // isSubstring
  #105 = Utf8               java/lang/String
  #106 = Class              #105          // java/lang/String
  #107 = Utf8               hashCode
  #108 = Integer            -889275714
  #109 = NameAndType        #68:#51       // productPrefix:()Ljava/lang/String;
  #110 = Methodref          #2.#109       // org/scalatest/tools/TestSpec.productPrefix:()Ljava/lang/String;
  #111 = NameAndType        #107:#72      // hashCode:()I
  #112 = Methodref          #106.#111     // java/lang/String.hashCode:()I
  #113 = Utf8               mix
  #114 = Utf8               (II)I
  #115 = NameAndType        #113:#114     // mix:(II)I
  #116 = Methodref          #83.#115      // scala/runtime/Statics.mix:(II)I
  #117 = Utf8               anyHash
  #118 = Utf8               (Ljava/lang/Object;)I
  #119 = NameAndType        #117:#118     // anyHash:(Ljava/lang/Object;)I
  #120 = Methodref          #83.#119      // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #121 = Utf8               finalizeHash
  #122 = NameAndType        #121:#114     // finalizeHash:(II)I
  #123 = Methodref          #83.#122      // scala/runtime/Statics.finalizeHash:(II)I
  #124 = Utf8               toString
  #125 = Utf8               _toString
  #126 = Utf8               (Lscala/Product;)Ljava/lang/String;
  #127 = NameAndType        #125:#126     // _toString:(Lscala/Product;)Ljava/lang/String;
  #128 = Methodref          #91.#127      // scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
  #129 = Utf8               equals
  #130 = NameAndType        #129:#99      // equals:(Ljava/lang/Object;)Z
  #131 = Methodref          #4.#130       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #132 = NameAndType        #98:#99       // canEqual:(Ljava/lang/Object;)Z
  #133 = Methodref          #2.#132       // org/scalatest/tools/TestSpec.canEqual:(Ljava/lang/Object;)Z
  #134 = Utf8               ()V
  #135 = NameAndType        #58:#134      // "<init>":()V
  #136 = Methodref          #4.#135       // java/lang/Object."<init>":()V
  #137 = Utf8               $init$
  #138 = Utf8               (Lscala/Product;)V
  #139 = NameAndType        #137:#138     // $init$:(Lscala/Product;)V
  #140 = InterfaceMethodref #6.#139       // scala/Product.$init$:(Lscala/Product;)V
  #141 = Utf8               Code
  #142 = Utf8               LocalVariableTable
  #143 = Utf8               Signature
  #144 = Utf8               MethodParameters
  #145 = Utf8               LineNumberTable
  #146 = Utf8               StackMapTable
  #147 = Utf8               SourceFile
  #148 = Utf8               RuntimeVisibleAnnotations
  #149 = Utf8               ScalaInlineInfo
  #150 = Utf8               ScalaSig
{
  private final java.lang.String spec;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean isSubstring;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Option<scala.Tuple2<java.lang.String, java.lang.Object>> unapply(org.scalatest.tools.TestSpec);
    descriptor: (Lorg/scalatest/tools/TestSpec;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #26                 // Field org/scalatest/tools/TestSpec$.MODULE$:Lorg/scalatest/tools/TestSpec$;
         3: aload_0
         4: invokevirtual #28                 // Method org/scalatest/tools/TestSpec$.unapply:(Lorg/scalatest/tools/TestSpec;)Lscala/Option;
         7: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$0   Lorg/scalatest/tools/TestSpec;
    Signature: #19                          // (Lorg/scalatest/tools/TestSpec;)Lscala/Option<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      x$0                            final

  public static org.scalatest.tools.TestSpec apply(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)Lorg/scalatest/tools/TestSpec;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #26                 // Field org/scalatest/tools/TestSpec$.MODULE$:Lorg/scalatest/tools/TestSpec$;
         3: aload_0
         4: iload_1
         5: invokevirtual #33                 // Method org/scalatest/tools/TestSpec$.apply:(Ljava/lang/String;Z)Lorg/scalatest/tools/TestSpec;
         8: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  spec   Ljava/lang/String;
            0       9     1 isSubstring   Z
    MethodParameters:
      Name                           Flags
      spec                           final
      isSubstring                    final

  public static scala.Function1<scala.Tuple2<java.lang.String, java.lang.Object>, org.scalatest.tools.TestSpec> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #26                 // Field org/scalatest/tools/TestSpec$.MODULE$:Lorg/scalatest/tools/TestSpec$;
         3: invokevirtual #38                 // Method org/scalatest/tools/TestSpec$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #36                          // ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/Object;>;Lorg/scalatest/tools/TestSpec;>;

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.Object, org.scalatest.tools.TestSpec>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #26                 // Field org/scalatest/tools/TestSpec$.MODULE$:Lorg/scalatest/tools/TestSpec$;
         3: invokevirtual #42                 // Method org/scalatest/tools/TestSpec$.curried:()Lscala/Function1;
         6: areturn
    Signature: #40                          // ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/Object;Lorg/scalatest/tools/TestSpec;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #49                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/TestSpec;
    Signature: #45                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String spec();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #53                 // Field spec:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/TestSpec;

  public boolean isSubstring();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #56                 // Field isSubstring:Z
         4: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/TestSpec;

  public org.scalatest.tools.TestSpec copy(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)Lorg/scalatest/tools/TestSpec;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class org/scalatest/tools/TestSpec
         3: dup
         4: aload_1
         5: iload_2
         6: invokespecial #61                 // Method "<init>":(Ljava/lang/String;Z)V
         9: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/scalatest/tools/TestSpec;
            0      10     1  spec   Ljava/lang/String;
            0      10     2 isSubstring   Z
    MethodParameters:
      Name                           Flags
      spec                           final
      isSubstring                    final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #64                 // Method spec:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/TestSpec;

  public boolean copy$default$2();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #67                 // Method isSubstring:()Z
         4: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/TestSpec;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #70                 // String TestSpec
         2: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lorg/scalatest/tools/TestSpec;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lorg/scalatest/tools/TestSpec;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 41
            }
        24: aload_0
        25: invokevirtual #64                 // Method spec:()Ljava/lang/String;
        28: goto          48
        31: aload_0
        32: invokevirtual #67                 // Method isSubstring:()Z
        35: invokestatic  #81                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        38: goto          48
        41: iload_1
        42: invokestatic  #86                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        45: goto          48
        48: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/scalatest/tools/TestSpec;
            0      49     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #97                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/TestSpec;
    Signature: #89                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: instanceof    #2                  // class org/scalatest/tools/TestSpec
         4: ireturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalatest/tools/TestSpec;
            0       5     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #103                // String spec
        26: goto          44
        29: ldc           #104                // String isSubstring
        31: goto          44
        34: iload_1
        35: invokestatic  #86                 // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #106                // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/scalatest/tools/TestSpec;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: ldc           #108                // int -889275714
         2: istore_1
         3: iload_1
         4: aload_0
         5: invokevirtual #110                // Method productPrefix:()Ljava/lang/String;
         8: invokevirtual #112                // Method java/lang/String.hashCode:()I
        11: invokestatic  #116                // Method scala/runtime/Statics.mix:(II)I
        14: istore_1
        15: iload_1
        16: aload_0
        17: invokevirtual #64                 // Method spec:()Ljava/lang/String;
        20: invokestatic  #120                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        23: invokestatic  #116                // Method scala/runtime/Statics.mix:(II)I
        26: istore_1
        27: iload_1
        28: aload_0
        29: invokevirtual #67                 // Method isSubstring:()Z
        32: ifeq          41
        35: sipush        1231
        38: goto          44
        41: sipush        1237
        44: invokestatic  #116                // Method scala/runtime/Statics.mix:(II)I
        47: istore_1
        48: iload_1
        49: iconst_2
        50: invokestatic  #123                // Method scala/runtime/Statics.finalizeHash:(II)I
        53: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class org/scalatest/tools/TestSpec, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class org/scalatest/tools/TestSpec, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lorg/scalatest/tools/TestSpec;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #128                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/scalatest/tools/TestSpec;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     98
         5: aload_1
         6: astore_3
         7: aload_3
         8: instanceof    #2                  // class org/scalatest/tools/TestSpec
        11: ifeq          19
        14: iconst_1
        15: istore_2
        16: goto          27
        19: goto          22
        22: iconst_0
        23: istore_2
        24: goto          27
        27: iload_2
        28: ifeq          102
        31: aload_1
        32: checkcast     #2                  // class org/scalatest/tools/TestSpec
        35: astore        4
        37: aload_0
        38: invokevirtual #67                 // Method isSubstring:()Z
        41: aload         4
        43: invokevirtual #67                 // Method isSubstring:()Z
        46: if_icmpne     94
        49: aload_0
        50: invokevirtual #64                 // Method spec:()Ljava/lang/String;
        53: aload         4
        55: invokevirtual #64                 // Method spec:()Ljava/lang/String;
        58: astore        5
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         5
        67: ifnull        81
        70: goto          94
        73: aload         5
        75: invokevirtual #131                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          94
        81: aload         4
        83: aload_0
        84: invokevirtual #133                // Method canEqual:(Ljava/lang/Object;)Z
        87: ifeq          94
        90: iconst_1
        91: goto          95
        94: iconst_0
        95: ifeq          102
        98: iconst_1
        99: goto          103
       102: iconst_0
       103: ireturn
      StackMapTable: number_of_entries = 10
        frame_type = 253 /* append */
          offset_delta = 19
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class org/scalatest/tools/TestSpec, class java/lang/Object, int, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 45
          locals = [ class org/scalatest/tools/TestSpec, class java/lang/Object, int, class java/lang/Object, class org/scalatest/tools/TestSpec, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 248 /* chop */
          offset_delta = 2
        frame_type = 253 /* append */
          offset_delta = 3
          locals = [ int, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalatest/tools/TestSpec, class java/lang/Object ]
          stack = [ int ]
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     104     0  this   Lorg/scalatest/tools/TestSpec;
            0     104     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public org.scalatest.tools.TestSpec(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #53                 // Field spec:Ljava/lang/String;
         5: aload_0
         6: iload_2
         7: putfield      #56                 // Field isSubstring:Z
        10: aload_0
        11: invokespecial #136                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #140                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        18: return
      LineNumberTable:
        line 18: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/scalatest/tools/TestSpec;
            0      19     1  spec   Ljava/lang/String;
            0      19     2 isSubstring   Z
    MethodParameters:
      Name                           Flags
      spec                           final
      isSubstring                    final
}
SourceFile: "TestSpec.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005mc!B\r\u001b\u0001j\u0001\u0003\u0002C\u001c\u0001\u0005+\u0007I\u0011\u0001\u001d\t\u0011\u0005\u0003!\u0011#Q\u0001\neB\u0001B\u0011\u0001\u0003\u0016\u0004%\ta\u0011\u0005\t\u000f\u0002\u0011\t\u0012)A\u0005\t\")\u0001\n\u0001C\u0001\u0013\"9a\nAA\u0001\n\u0003y\u0005b\u0002*\u0001#\u0003%\ta\u0015\u0005\b=\u0002\t\n\u0011\"\u0001`\u0011\u001d\t\u0007!!A\u0005B\tDqA\u001b\u0001\u0002\u0002\u0013\u00051\u000eC\u0004p\u0001\u0005\u0005I\u0011\u00019\t\u000fY\u0004\u0011\u0011!C!o\"9a\u0010AA\u0001\n\u0003y\b\"CA\u0002\u0001\u0005\u0005I\u0011IA\u0003\u0011%\tI\u0001AA\u0001\n\u0003\nY\u0001C\u0005\u0002\u000e\u0001\t\t\u0011\"\u0011\u0002\u0010!I\u0011\u0011\u0003\u0001\u0002\u0002\u0013\u0005\u00131C\u0004\u000b\u0003/Q\u0012\u0011!E\u00015\u0005ea!C\r\u001b\u0003\u0003E\tAGA\u000e\u0011\u0019A5\u0003\"\u0001\u00024!I\u0011QB\n\u0002\u0002\u0013\u0015\u0013q\u0002\u0005\n\u0003k\u0019\u0012\u0011!CA\u0003oA\u0011\"!\u0010\u0014\u0003\u0003%\t)a\u0010\t\u0013\u0005E3#!A\u0005\n\u0005M#\u0001\u0003+fgR\u001c\u0006/Z2\u000b\u0005ma\u0012!\u0002;p_2\u001c(BA\u000f\u001f\u0003%\u00198-\u00197bi\u0016\u001cHOC\u0001 \u0003\ry\'oZ\n\u0005\u0001\u0005:#\u0006\u0005\u0002#K5\t1EC\u0001%\u0003\u0015\u00198-\u00197b\u0013\t13E\u0001\u0004B]f\u0014VM\u001a\t\u0003E!J!!K\u0012\u0003\u000fA\u0013x\u000eZ;diB\u00111\u0006\u000e\b\u0003YIr!!L\u0019\u000e\u00039R!a\f\u0019\u0002\rq\u0012xn\u001c;?\u0007\u0001I\u0011\u0001J\u0005\u0003g\r\nq\u0001]1dW\u0006<W-\u0003\u00026m\ta1+\u001a:jC2L\'0\u00192mK*\u00111gI\u0001\u0005gB,7-F\u0001:!\tQdH\u0004\u0002<yA\u0011QfI\u0005\u0003{\r\na\u0001\u0015:fI\u00164\u0017BA A\u0005\u0019\u0019FO]5oO*\u0011QhI\u0001\u0006gB,7\rI\u0001\fSN\u001cVOY:ue&tw-F\u0001E!\t\u0011S)\u0003\u0002GG\t9!i\\8mK\u0006t\u0017\u0001D5t\'V\u00147\u000f\u001e:j]\u001e\u0004\u0013A\u0002\u001fj]&$h\bF\u0002K\u00196\u0003\"a\u0013\u0001\u000e\u0003iAQaN\u0003A\u0002eBQAQ\u0003A\u0002\u0011\u000bAaY8qsR\u0019!\nU)\t\u000f]2\u0001\u0013!a\u0001s!9!I\u0002I\u0001\u0002\u0004!\u0015AD2paf$C-\u001a4bk2$H%M\u000b\u0002)*\u0012\u0011(V\u0016\u0002-B\u0011q\u000bX\u0007\u00021*\u0011\u0011LW\u0001\nk:\u001c\u0007.Z2lK\u0012T!aW\u0012\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002^1\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u001d\r|\u0007/\u001f\u0013eK\u001a\fW\u000f\u001c;%eU\t\u0001M\u000b\u0002E+\u0006i\u0001O]8ek\u000e$\bK]3gSb,\u0012a\u0019\t\u0003I&l\u0011!\u001a\u0006\u0003M\u001e\fA\u0001\\1oO*\t\u0001.\u0001\u0003kCZ\f\u0017BA f\u00031\u0001(o\u001c3vGR\f%/\u001b;z+\u0005a\u0007C\u0001\u0012n\u0013\tq7EA\u0002J]R\fa\u0002\u001d:pIV\u001cG/\u00127f[\u0016tG\u000f\u0006\u0002riB\u0011!E]\u0005\u0003g\u000e\u00121!\u00118z\u0011\u001d)8\"!AA\u00021\f1\u0001\u001f\u00132\u0003=\u0001(o\u001c3vGRLE/\u001a:bi>\u0014X#\u0001=\u0011\u0007ed\u0018/D\u0001{\u0015\tY8%\u0001\u0006d_2dWm\u0019;j_:L!! >\u0003\u0011%#XM]1u_J\f\u0001bY1o\u000bF,\u0018\r\u001c\u000b\u0004\t\u0006\u0005\u0001bB;\u000e\u0003\u0003\u0005\r!]\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\rF\u0002d\u0003\u000fAq!\u001e\b\u0002\u0002\u0003\u0007A.\u0001\u0005iCND7i\u001c3f)\u0005a\u0017\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003\r\fa!Z9vC2\u001cHc\u0001#\u0002\u0016!9Q/EA\u0001\u0002\u0004\t\u0018\u0001\u0003+fgR\u001c\u0006/Z2\u0011\u0005-\u001b2#B\n\u0002\u001e\u0005%\u0002cBA\u0010\u0003KIDIS\u0007\u0003\u0003CQ1!a\t$\u0003\u001d\u0011XO\u001c;j[\u0016LA!a\n\u0002\"\t\t\u0012IY:ue\u0006\u001cGOR;oGRLwN\u001c\u001a\u0011\t\u0005-\u0012\u0011G\u0007\u0003\u0003[Q1!a\fh\u0003\tIw.C\u00026\u0003[!\"!!\u0007\u0002\u000b\u0005\u0004\b\u000f\\=\u0015\u000b)\u000bI$a\u000f\t\u000b]2\u0002\u0019A\u001d\t\u000b\t3\u0002\u0019\u0001#\u0002\u000fUt\u0017\r\u001d9msR!\u0011\u0011IA\'!\u0015\u0011\u00131IA$\u0013\r\t)e\t\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u000b\t\nI%\u000f#\n\u0007\u0005-3E\u0001\u0004UkBdWM\r\u0005\t\u0003\u001f:\u0012\u0011!a\u0001\u0015\u0006\u0019\u0001\u0010\n\u0019\u0002\u0019]\u0014\u0018\u000e^3SKBd\u0017mY3\u0015\u0005\u0005U\u0003c\u00013\u0002X%\u0019\u0011\u0011L3\u0003\r=\u0013\'.Z2u\u0001"
    )
  ScalaInlineInfo: length = 0x54 (unknown attribute)
   01 00 00 10 00 3A 00 3B 00 00 62 00 63 00 00 39
   00 1F 00 00 3E 00 33 00 00 41 00 36 00 00 81 00
   63 00 00 6B 00 48 00 00 0F 00 36 00 00 47 00 48
   00 00 49 00 4A 00 00 65 00 66 00 00 2B 00 2C 00
   00 58 00 2C 00 00 44 00 33 00 00 0D 00 33 00 00
   7C 00 33 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
