Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/PartialFunction$AndThen.class
  Last modified May 29, 2022; size 8361 bytes
  SHA-256 checksum 4415c6831ea11d558763104052921888d8f9a256a6a50b27c913aecdc246f488
  Compiled from "PartialFunction.scala"
public class scala.PartialFunction$AndThen<A extends java.lang.Object, B extends java.lang.Object, C extends java.lang.Object> extends java.lang.Object implements scala.PartialFunction<A, C>, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/PartialFunction$AndThen
  super_class: #5                         // java/lang/Object
  interfaces: 2, fields: 2, methods: 39, attributes: 5
Constant pool:
    #1 = Utf8               scala/PartialFunction$AndThen
    #2 = Class              #1            // scala/PartialFunction$AndThen
    #3 = Utf8               <A:Ljava/lang/Object;B:Ljava/lang/Object;C:Ljava/lang/Object;>Ljava/lang/Object;Lscala/PartialFunction<TA;TC;>;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/PartialFunction
    #7 = Class              #6            // scala/PartialFunction
    #8 = Utf8               java/io/Serializable
    #9 = Class              #8            // java/io/Serializable
   #10 = Utf8               PartialFunction.scala
   #11 = Utf8               AndThen
   #12 = Utf8               pf
   #13 = Utf8               Lscala/PartialFunction;
   #14 = Utf8               Lscala/PartialFunction<TA;TB;>;
   #15 = Utf8               k
   #16 = Utf8               Lscala/Function1;
   #17 = Utf8               Lscala/Function1<TB;TC;>;
   #18 = Utf8               unapply
   #19 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #20 = Utf8               (TA;)Lscala/Option<TC;>;
   #21 = Utf8               a
   #22 = Utf8               unapply$
   #23 = Utf8               (Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
   #24 = NameAndType        #22:#23       // unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
   #25 = InterfaceMethodref #7.#24        // scala/PartialFunction.unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
   #26 = Utf8               this
   #27 = Utf8               Lscala/PartialFunction$AndThen;
   #28 = Utf8               Ljava/lang/Object;
   #29 = Utf8               elementWise
   #30 = Utf8               ()Lscala/PartialFunction;
   #31 = Utf8               ()Lscala/PartialFunction<TA;TC;>;
   #32 = Utf8               elementWise$
   #33 = Utf8               (Lscala/PartialFunction;)Lscala/PartialFunction;
   #34 = NameAndType        #32:#33       // elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
   #35 = InterfaceMethodref #7.#34        // scala/PartialFunction.elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
   #36 = Utf8               orElse
   #37 = Utf8               <A1:TA;B1:Ljava/lang/Object;>(Lscala/PartialFunction<TA1;TB1;>;)Lscala/PartialFunction<TA1;TB1;>;
   #38 = Utf8               that
   #39 = Utf8               orElse$
   #40 = Utf8               (Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #41 = NameAndType        #39:#40       // orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #42 = InterfaceMethodref #7.#41        // scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #43 = Utf8               andThen
   #44 = Utf8               (Lscala/Function1;)Lscala/PartialFunction;
   #45 = Utf8               <C$:Ljava/lang/Object;>(Lscala/Function1<TC;TC$;>;)Lscala/PartialFunction<TA;TC$;>;
   #46 = Utf8               andThen$
   #47 = Utf8               (Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   #48 = NameAndType        #46:#47       // andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   #49 = InterfaceMethodref #7.#48        // scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
   #50 = Utf8               <C$:Ljava/lang/Object;>(Lscala/PartialFunction<TC;TC$;>;)Lscala/PartialFunction<TA;TC$;>;
   #51 = NameAndType        #46:#40       // andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #52 = InterfaceMethodref #7.#51        // scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #53 = Utf8               compose
   #54 = Utf8               <R$:Ljava/lang/Object;>(Lscala/PartialFunction<TR$;TA;>;)Lscala/PartialFunction<TR$;TC;>;
   #55 = Utf8               compose$
   #56 = NameAndType        #55:#40       // compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #57 = InterfaceMethodref #7.#56        // scala/PartialFunction.compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
   #58 = Utf8               lift
   #59 = Utf8               ()Lscala/Function1;
   #60 = Utf8               ()Lscala/Function1<TA;Lscala/Option<TC;>;>;
   #61 = Utf8               lift$
   #62 = Utf8               (Lscala/PartialFunction;)Lscala/Function1;
   #63 = NameAndType        #61:#62       // lift$:(Lscala/PartialFunction;)Lscala/Function1;
   #64 = InterfaceMethodref #7.#63        // scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
   #65 = Utf8               runWith
   #66 = Utf8               (Lscala/Function1;)Lscala/Function1;
   #67 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<TC;TU;>;)Lscala/Function1<TA;Ljava/lang/Object;>;
   #68 = Utf8               action
   #69 = Utf8               runWith$
   #70 = Utf8               (Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
   #71 = NameAndType        #69:#70       // runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
   #72 = InterfaceMethodref #7.#71        // scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
   #73 = Utf8               apply$mcZD$sp
   #74 = Utf8               (D)Z
   #75 = Utf8               v1
   #76 = Utf8               scala/Function1
   #77 = Class              #76           // scala/Function1
   #78 = Utf8               apply$mcZD$sp$
   #79 = Utf8               (Lscala/Function1;D)Z
   #80 = NameAndType        #78:#79       // apply$mcZD$sp$:(Lscala/Function1;D)Z
   #81 = InterfaceMethodref #77.#80       // scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
   #82 = Utf8               D
   #83 = Utf8               apply$mcDD$sp
   #84 = Utf8               (D)D
   #85 = Utf8               apply$mcDD$sp$
   #86 = Utf8               (Lscala/Function1;D)D
   #87 = NameAndType        #85:#86       // apply$mcDD$sp$:(Lscala/Function1;D)D
   #88 = InterfaceMethodref #77.#87       // scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
   #89 = Utf8               apply$mcFD$sp
   #90 = Utf8               (D)F
   #91 = Utf8               apply$mcFD$sp$
   #92 = Utf8               (Lscala/Function1;D)F
   #93 = NameAndType        #91:#92       // apply$mcFD$sp$:(Lscala/Function1;D)F
   #94 = InterfaceMethodref #77.#93       // scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
   #95 = Utf8               apply$mcID$sp
   #96 = Utf8               (D)I
   #97 = Utf8               apply$mcID$sp$
   #98 = Utf8               (Lscala/Function1;D)I
   #99 = NameAndType        #97:#98       // apply$mcID$sp$:(Lscala/Function1;D)I
  #100 = InterfaceMethodref #77.#99       // scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
  #101 = Utf8               apply$mcJD$sp
  #102 = Utf8               (D)J
  #103 = Utf8               apply$mcJD$sp$
  #104 = Utf8               (Lscala/Function1;D)J
  #105 = NameAndType        #103:#104     // apply$mcJD$sp$:(Lscala/Function1;D)J
  #106 = InterfaceMethodref #77.#105      // scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
  #107 = Utf8               apply$mcVD$sp
  #108 = Utf8               (D)V
  #109 = Utf8               apply$mcVD$sp$
  #110 = Utf8               (Lscala/Function1;D)V
  #111 = NameAndType        #109:#110     // apply$mcVD$sp$:(Lscala/Function1;D)V
  #112 = InterfaceMethodref #77.#111      // scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
  #113 = Utf8               apply$mcZF$sp
  #114 = Utf8               (F)Z
  #115 = Utf8               apply$mcZF$sp$
  #116 = Utf8               (Lscala/Function1;F)Z
  #117 = NameAndType        #115:#116     // apply$mcZF$sp$:(Lscala/Function1;F)Z
  #118 = InterfaceMethodref #77.#117      // scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
  #119 = Utf8               F
  #120 = Utf8               apply$mcDF$sp
  #121 = Utf8               (F)D
  #122 = Utf8               apply$mcDF$sp$
  #123 = Utf8               (Lscala/Function1;F)D
  #124 = NameAndType        #122:#123     // apply$mcDF$sp$:(Lscala/Function1;F)D
  #125 = InterfaceMethodref #77.#124      // scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
  #126 = Utf8               apply$mcFF$sp
  #127 = Utf8               (F)F
  #128 = Utf8               apply$mcFF$sp$
  #129 = Utf8               (Lscala/Function1;F)F
  #130 = NameAndType        #128:#129     // apply$mcFF$sp$:(Lscala/Function1;F)F
  #131 = InterfaceMethodref #77.#130      // scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
  #132 = Utf8               apply$mcIF$sp
  #133 = Utf8               (F)I
  #134 = Utf8               apply$mcIF$sp$
  #135 = Utf8               (Lscala/Function1;F)I
  #136 = NameAndType        #134:#135     // apply$mcIF$sp$:(Lscala/Function1;F)I
  #137 = InterfaceMethodref #77.#136      // scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
  #138 = Utf8               apply$mcJF$sp
  #139 = Utf8               (F)J
  #140 = Utf8               apply$mcJF$sp$
  #141 = Utf8               (Lscala/Function1;F)J
  #142 = NameAndType        #140:#141     // apply$mcJF$sp$:(Lscala/Function1;F)J
  #143 = InterfaceMethodref #77.#142      // scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
  #144 = Utf8               apply$mcVF$sp
  #145 = Utf8               (F)V
  #146 = Utf8               apply$mcVF$sp$
  #147 = Utf8               (Lscala/Function1;F)V
  #148 = NameAndType        #146:#147     // apply$mcVF$sp$:(Lscala/Function1;F)V
  #149 = InterfaceMethodref #77.#148      // scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
  #150 = Utf8               apply$mcZI$sp
  #151 = Utf8               (I)Z
  #152 = Utf8               apply$mcZI$sp$
  #153 = Utf8               (Lscala/Function1;I)Z
  #154 = NameAndType        #152:#153     // apply$mcZI$sp$:(Lscala/Function1;I)Z
  #155 = InterfaceMethodref #77.#154      // scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
  #156 = Utf8               I
  #157 = Utf8               apply$mcDI$sp
  #158 = Utf8               (I)D
  #159 = Utf8               apply$mcDI$sp$
  #160 = Utf8               (Lscala/Function1;I)D
  #161 = NameAndType        #159:#160     // apply$mcDI$sp$:(Lscala/Function1;I)D
  #162 = InterfaceMethodref #77.#161      // scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
  #163 = Utf8               apply$mcFI$sp
  #164 = Utf8               (I)F
  #165 = Utf8               apply$mcFI$sp$
  #166 = Utf8               (Lscala/Function1;I)F
  #167 = NameAndType        #165:#166     // apply$mcFI$sp$:(Lscala/Function1;I)F
  #168 = InterfaceMethodref #77.#167      // scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
  #169 = Utf8               apply$mcII$sp
  #170 = Utf8               (I)I
  #171 = Utf8               apply$mcII$sp$
  #172 = Utf8               (Lscala/Function1;I)I
  #173 = NameAndType        #171:#172     // apply$mcII$sp$:(Lscala/Function1;I)I
  #174 = InterfaceMethodref #77.#173      // scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
  #175 = Utf8               apply$mcJI$sp
  #176 = Utf8               (I)J
  #177 = Utf8               apply$mcJI$sp$
  #178 = Utf8               (Lscala/Function1;I)J
  #179 = NameAndType        #177:#178     // apply$mcJI$sp$:(Lscala/Function1;I)J
  #180 = InterfaceMethodref #77.#179      // scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
  #181 = Utf8               apply$mcVI$sp
  #182 = Utf8               (I)V
  #183 = Utf8               apply$mcVI$sp$
  #184 = Utf8               (Lscala/Function1;I)V
  #185 = NameAndType        #183:#184     // apply$mcVI$sp$:(Lscala/Function1;I)V
  #186 = InterfaceMethodref #77.#185      // scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
  #187 = Utf8               apply$mcZJ$sp
  #188 = Utf8               (J)Z
  #189 = Utf8               apply$mcZJ$sp$
  #190 = Utf8               (Lscala/Function1;J)Z
  #191 = NameAndType        #189:#190     // apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #192 = InterfaceMethodref #77.#191      // scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #193 = Utf8               J
  #194 = Utf8               apply$mcDJ$sp
  #195 = Utf8               (J)D
  #196 = Utf8               apply$mcDJ$sp$
  #197 = Utf8               (Lscala/Function1;J)D
  #198 = NameAndType        #196:#197     // apply$mcDJ$sp$:(Lscala/Function1;J)D
  #199 = InterfaceMethodref #77.#198      // scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
  #200 = Utf8               apply$mcFJ$sp
  #201 = Utf8               (J)F
  #202 = Utf8               apply$mcFJ$sp$
  #203 = Utf8               (Lscala/Function1;J)F
  #204 = NameAndType        #202:#203     // apply$mcFJ$sp$:(Lscala/Function1;J)F
  #205 = InterfaceMethodref #77.#204      // scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
  #206 = Utf8               apply$mcIJ$sp
  #207 = Utf8               (J)I
  #208 = Utf8               apply$mcIJ$sp$
  #209 = Utf8               (Lscala/Function1;J)I
  #210 = NameAndType        #208:#209     // apply$mcIJ$sp$:(Lscala/Function1;J)I
  #211 = InterfaceMethodref #77.#210      // scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
  #212 = Utf8               apply$mcJJ$sp
  #213 = Utf8               (J)J
  #214 = Utf8               apply$mcJJ$sp$
  #215 = Utf8               (Lscala/Function1;J)J
  #216 = NameAndType        #214:#215     // apply$mcJJ$sp$:(Lscala/Function1;J)J
  #217 = InterfaceMethodref #77.#216      // scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
  #218 = Utf8               apply$mcVJ$sp
  #219 = Utf8               (J)V
  #220 = Utf8               apply$mcVJ$sp$
  #221 = Utf8               (Lscala/Function1;J)V
  #222 = NameAndType        #220:#221     // apply$mcVJ$sp$:(Lscala/Function1;J)V
  #223 = InterfaceMethodref #77.#222      // scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
  #224 = Utf8               <A$:Ljava/lang/Object;>(Lscala/Function1<TA$;TA;>;)Lscala/Function1<TA$;TC;>;
  #225 = Utf8               g
  #226 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #227 = NameAndType        #55:#226      // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #228 = InterfaceMethodref #77.#227      // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #229 = Utf8               toString
  #230 = Utf8               ()Ljava/lang/String;
  #231 = Utf8               toString$
  #232 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #233 = NameAndType        #231:#232     // toString$:(Lscala/Function1;)Ljava/lang/String;
  #234 = InterfaceMethodref #77.#233      // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
  #235 = Utf8               isDefinedAt
  #236 = Utf8               (Ljava/lang/Object;)Z
  #237 = Utf8               (TA;)Z
  #238 = Utf8               x
  #239 = NameAndType        #12:#13       // pf:Lscala/PartialFunction;
  #240 = Fieldref           #2.#239       // scala/PartialFunction$AndThen.pf:Lscala/PartialFunction;
  #241 = NameAndType        #235:#236     // isDefinedAt:(Ljava/lang/Object;)Z
  #242 = InterfaceMethodref #7.#241       // scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
  #243 = Utf8               apply
  #244 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #245 = Utf8               (TA;)TC;
  #246 = NameAndType        #15:#16       // k:Lscala/Function1;
  #247 = Fieldref           #2.#246       // scala/PartialFunction$AndThen.k:Lscala/Function1;
  #248 = NameAndType        #243:#244     // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #249 = InterfaceMethodref #7.#248       // scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #250 = InterfaceMethodref #77.#248      // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #251 = Utf8               applyOrElse
  #252 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #253 = Utf8               <A1:TA;C1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TC1;>;)TC1;
  #254 = Utf8               default
  #255 = Utf8               scala/PartialFunction$
  #256 = Class              #255          // scala/PartialFunction$
  #257 = Utf8               MODULE$
  #258 = Utf8               Lscala/PartialFunction$;
  #259 = NameAndType        #257:#258     // MODULE$:Lscala/PartialFunction$;
  #260 = Fieldref           #256.#259     // scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
  #261 = Utf8               scala$PartialFunction$$checkFallback
  #262 = NameAndType        #261:#59      // scala$PartialFunction$$checkFallback:()Lscala/Function1;
  #263 = Methodref          #256.#262     // scala/PartialFunction$.scala$PartialFunction$$checkFallback:()Lscala/Function1;
  #264 = NameAndType        #251:#252     // applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #265 = InterfaceMethodref #7.#264       // scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #266 = Utf8               scala$PartialFunction$$fallbackOccurred
  #267 = NameAndType        #266:#236     // scala$PartialFunction$$fallbackOccurred:(Ljava/lang/Object;)Z
  #268 = Methodref          #256.#267     // scala/PartialFunction$.scala$PartialFunction$$fallbackOccurred:(Ljava/lang/Object;)Z
  #269 = Utf8               z
  #270 = NameAndType        #43:#44       // andThen:(Lscala/Function1;)Lscala/PartialFunction;
  #271 = Methodref          #2.#270       // scala/PartialFunction$AndThen.andThen:(Lscala/Function1;)Lscala/PartialFunction;
  #272 = Utf8               <init>
  #273 = Utf8               (Lscala/PartialFunction;Lscala/Function1;)V
  #274 = Utf8               (Lscala/PartialFunction<TA;TB;>;Lscala/Function1<TB;TC;>;)V
  #275 = Utf8               ()V
  #276 = NameAndType        #272:#275     // "<init>":()V
  #277 = Methodref          #5.#276       // java/lang/Object."<init>":()V
  #278 = Utf8               Signature
  #279 = Utf8               Code
  #280 = Utf8               LineNumberTable
  #281 = Utf8               LocalVariableTable
  #282 = Utf8               MethodParameters
  #283 = Utf8               StackMapTable
  #284 = Utf8               InnerClasses
  #285 = Utf8               SourceFile
  #286 = Utf8               ScalaInlineInfo
  #287 = Utf8               Scala
{
  private final scala.PartialFunction<A, B> pf;
    descriptor: Lscala/PartialFunction;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #14                          // Lscala/PartialFunction<TA;TB;>;

  private final scala.Function1<B, C> k;
    descriptor: Lscala/Function1;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #17                          // Lscala/Function1<TB;TC;>;

  public scala.Option<C> unapply(A);
    descriptor: (Ljava/lang/Object;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #25                 // InterfaceMethod scala/PartialFunction.unapply$:(Lscala/PartialFunction;Ljava/lang/Object;)Lscala/Option;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1     a   Ljava/lang/Object;
    Signature: #20                          // (TA;)Lscala/Option<TC;>;
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.PartialFunction<A, C> elementWise();
    descriptor: ()Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #35                 // InterfaceMethod scala/PartialFunction.elementWise$:(Lscala/PartialFunction;)Lscala/PartialFunction;
         4: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/PartialFunction$AndThen;
    Signature: #31                          // ()Lscala/PartialFunction<TA;TC;>;

  public <A1 extends A, B1 extends java.lang.Object> scala.PartialFunction<A1, B1> orElse(scala.PartialFunction<A1, B1>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #42                 // InterfaceMethod scala/PartialFunction.orElse$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1  that   Lscala/PartialFunction;
    Signature: #37                          // <A1:TA;B1:Ljava/lang/Object;>(Lscala/PartialFunction<TA1;TB1;>;)Lscala/PartialFunction<TA1;TB1;>;
    MethodParameters:
      Name                           Flags
      that                           final

  public <C$ extends java.lang.Object> scala.PartialFunction<A, C$> andThen(scala.Function1<C, C$>);
    descriptor: (Lscala/Function1;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #49                 // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1     k   Lscala/Function1;
    Signature: #45                          // <C$:Ljava/lang/Object;>(Lscala/Function1<TC;TC$;>;)Lscala/PartialFunction<TA;TC$;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public <C$ extends java.lang.Object> scala.PartialFunction<A, C$> andThen(scala.PartialFunction<C, C$>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #52                 // InterfaceMethod scala/PartialFunction.andThen$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1     k   Lscala/PartialFunction;
    Signature: #50                          // <C$:Ljava/lang/Object;>(Lscala/PartialFunction<TC;TC$;>;)Lscala/PartialFunction<TA;TC$;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public <R$ extends java.lang.Object> scala.PartialFunction<R$, C> compose(scala.PartialFunction<R$, A>);
    descriptor: (Lscala/PartialFunction;)Lscala/PartialFunction;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #57                 // InterfaceMethod scala/PartialFunction.compose$:(Lscala/PartialFunction;Lscala/PartialFunction;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1     k   Lscala/PartialFunction;
    Signature: #54                          // <R$:Ljava/lang/Object;>(Lscala/PartialFunction<TR$;TA;>;)Lscala/PartialFunction<TR$;TC;>;
    MethodParameters:
      Name                           Flags
      k                              final

  public scala.Function1<A, scala.Option<C>> lift();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/PartialFunction.lift$:(Lscala/PartialFunction;)Lscala/Function1;
         4: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/PartialFunction$AndThen;
    Signature: #60                          // ()Lscala/Function1<TA;Lscala/Option<TC;>;>;

  public <U extends java.lang.Object> scala.Function1<A, java.lang.Object> runWith(scala.Function1<C, U>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #72                 // InterfaceMethod scala/PartialFunction.runWith$:(Lscala/PartialFunction;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1 action   Lscala/Function1;
    Signature: #67                          // <U:Ljava/lang/Object;>(Lscala/Function1<TC;TU;>;)Lscala/Function1<TA;Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      action                         final

  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #81                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #88                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
         5: dreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #94                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
         5: freturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #100                // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #106                // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
         5: lreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #112                // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
         5: return
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #118                // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #125                // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
         5: dreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #131                // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
         5: freturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #137                // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #143                // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
         5: lreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #149                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
         5: return
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #155                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #162                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
         5: dreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #168                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
         5: freturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #174                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #180                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
         5: lreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #186                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
         5: return
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #192                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #199                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
         5: dreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #205                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
         5: freturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #211                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
         5: ireturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #217                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
         5: lreturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #223                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
         5: return
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public <A$ extends java.lang.Object> scala.Function1<A$, C> compose(scala.Function1<A$, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #228                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1     g   Lscala/Function1;
    Signature: #224                         // <A$:Ljava/lang/Object;>(Lscala/Function1<TA$;TA;>;)Lscala/Function1<TA$;TC;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #234                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/PartialFunction$AndThen;

  public boolean isDefinedAt(A);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #240                // Field pf:Lscala/PartialFunction;
         4: aload_1
         5: invokeinterface #242,  2          // InterfaceMethod scala/PartialFunction.isDefinedAt:(Ljava/lang/Object;)Z
        10: ireturn
      LineNumberTable:
        line 283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/PartialFunction$AndThen;
            0      11     1     x   Ljava/lang/Object;
    Signature: #237                         // (TA;)Z
    MethodParameters:
      Name                           Flags
      x                              final

  public C apply(A);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #247                // Field k:Lscala/Function1;
         4: aload_0
         5: getfield      #240                // Field pf:Lscala/PartialFunction;
         8: aload_1
         9: invokeinterface #249,  2          // InterfaceMethod scala/PartialFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        14: invokeinterface #250,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        19: areturn
      LineNumberTable:
        line 285: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/PartialFunction$AndThen;
            0      20     1     x   Ljava/lang/Object;
    Signature: #245                         // (TA;)TC;
    MethodParameters:
      Name                           Flags
      x                              final

  public <A1 extends A, C1 extends java.lang.Object> C1 applyOrElse(A1, scala.Function1<A1, C1>);
    descriptor: (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_0
         1: getfield      #240                // Field pf:Lscala/PartialFunction;
         4: aload_1
         5: getstatic     #260                // Field scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
         8: invokevirtual #263                // Method scala/PartialFunction$.scala$PartialFunction$$checkFallback:()Lscala/Function1;
        11: invokeinterface #265,  3          // InterfaceMethod scala/PartialFunction.applyOrElse:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        16: astore_3
        17: getstatic     #260                // Field scala/PartialFunction$.MODULE$:Lscala/PartialFunction$;
        20: aload_3
        21: invokevirtual #268                // Method scala/PartialFunction$.scala$PartialFunction$$fallbackOccurred:(Ljava/lang/Object;)Z
        24: ifne          38
        27: aload_0
        28: getfield      #247                // Field k:Lscala/Function1;
        31: aload_3
        32: invokeinterface #250,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        37: areturn
        38: aload_2
        39: aload_1
        40: invokeinterface #250,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        45: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 38
          locals = [ class java/lang/Object ]
      LineNumberTable:
        line 288: 0
        line 289: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      28     3     z   Ljava/lang/Object;
            0      46     0  this   Lscala/PartialFunction$AndThen;
            0      46     1     x   Ljava/lang/Object;
            0      46     2 default   Lscala/Function1;
    Signature: #253                         // <A1:TA;C1:Ljava/lang/Object;>(TA1;Lscala/Function1<TA1;TC1;>;)TC1;
    MethodParameters:
      Name                           Flags
      x                              final
      default                        final

  public scala.Function1 andThen(scala.Function1);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #271                // Method andThen:(Lscala/Function1;)Lscala/PartialFunction;
         5: areturn
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/PartialFunction$AndThen;
            0       6     1     g   Lscala/Function1;
    MethodParameters:
      Name                           Flags
      g                              final

  public scala.PartialFunction$AndThen(scala.PartialFunction<A, B>, scala.Function1<B, C>);
    descriptor: (Lscala/PartialFunction;Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #240                // Field pf:Lscala/PartialFunction;
         5: aload_0
         6: aload_2
         7: putfield      #247                // Field k:Lscala/Function1;
        10: aload_0
        11: invokespecial #277                // Method java/lang/Object."<init>":()V
        14: return
      LineNumberTable:
        line 282: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lscala/PartialFunction$AndThen;
            0      15     1    pf   Lscala/PartialFunction;
            0      15     2     k   Lscala/Function1;
    Signature: #274                         // (Lscala/PartialFunction<TA;TB;>;Lscala/Function1<TB;TC;>;)V
    MethodParameters:
      Name                           Flags
      pf                             final
      k                              final
}
InnerClasses:
  private static #11= #2 of #7;           // AndThen=class scala/PartialFunction$AndThen of class scala/PartialFunction
Signature: #3                           // <A:Ljava/lang/Object;B:Ljava/lang/Object;C:Ljava/lang/Object;>Ljava/lang/Object;Lscala/PartialFunction<TA;TC;>;Ljava/io/Serializable;
SourceFile: "PartialFunction.scala"
  ScalaInlineInfo: length = 0xC7 (unknown attribute)
   01 00 00 27 01 10 01 11 00 00 2B 00 42 00 00 2B
   00 2C 00 00 2B 00 21 00 00 F3 00 F4 00 00 53 00
   54 00 00 78 00 79 00 00 9D 00 9E 00 00 C2 00 C3
   00 00 59 00 5A 00 00 7E 00 7F 00 00 A3 00 A4 00
   00 C8 00 C9 00 00 5F 00 60 00 00 84 00 85 00 00
   A9 00 AA 00 00 CE 00 CF 00 00 65 00 66 00 00 8A
   00 8B 00 00 AF 00 B0 00 00 D4 00 D5 00 00 6B 00
   6C 00 00 90 00 91 00 00 B5 00 B6 00 00 DA 00 DB
   00 00 49 00 4A 00 00 71 00 72 00 00 96 00 97 00
   00 BB 00 BC 00 00 FB 00 FC 00 00 35 00 42 00 00
   35 00 21 00 00 1D 00 1E 00 00 EB 00 EC 00 00 3A
   00 3B 00 00 24 00 21 00 00 41 00 42 00 00 E5 00
   E6 00 00 12 00 13 00
  Scala: length = 0x0 (unknown attribute)

