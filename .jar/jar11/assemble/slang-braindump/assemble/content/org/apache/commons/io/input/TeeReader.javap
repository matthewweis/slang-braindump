Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/TeeReader.class
  Last modified May 29, 2022; size 2159 bytes
  SHA-256 checksum 5566d0d005919106a349ff629b2e99f00f498b421d65af347bd0b6c286e44b4c
  Compiled from "TeeReader.java"
public class org.apache.commons.io.input.TeeReader extends org.apache.commons.io.input.ProxyReader
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #19                         // org/apache/commons/io/input/TeeReader
  super_class: #20                        // org/apache/commons/io/input/ProxyReader
  interfaces: 0, fields: 2, methods: 7, attributes: 1
Constant pool:
   #1 = Class              #62            // org/apache/commons/io/IOUtils
   #2 = Methodref          #19.#63        // org/apache/commons/io/input/TeeReader."<init>":(Ljava/io/Reader;Ljava/io/Writer;Z)V
   #3 = Methodref          #20.#64        // org/apache/commons/io/input/ProxyReader."<init>":(Ljava/io/Reader;)V
   #4 = Fieldref           #19.#65        // org/apache/commons/io/input/TeeReader.branch:Ljava/io/Writer;
   #5 = Fieldref           #19.#66        // org/apache/commons/io/input/TeeReader.closeBranch:Z
   #6 = Methodref          #20.#67        // org/apache/commons/io/input/ProxyReader.close:()V
   #7 = Methodref          #68.#67        // java/io/Writer.close:()V
   #8 = Methodref          #20.#69        // org/apache/commons/io/input/ProxyReader.read:()I
   #9 = Methodref          #68.#70        // java/io/Writer.write:(I)V
  #10 = Methodref          #20.#71        // org/apache/commons/io/input/ProxyReader.read:([C)I
  #11 = Methodref          #68.#72        // java/io/Writer.write:([CII)V
  #12 = Methodref          #20.#73        // org/apache/commons/io/input/ProxyReader.read:([CII)I
  #13 = Methodref          #74.#75        // java/nio/CharBuffer.position:()I
  #14 = Methodref          #20.#76        // org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I
  #15 = Methodref          #74.#77        // java/nio/CharBuffer.limit:()I
  #16 = Methodref          #74.#78        // java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
  #17 = Methodref          #79.#80        // java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
  #18 = Methodref          #68.#81        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
  #19 = Class              #82            // org/apache/commons/io/input/TeeReader
  #20 = Class              #83            // org/apache/commons/io/input/ProxyReader
  #21 = Utf8               branch
  #22 = Utf8               Ljava/io/Writer;
  #23 = Utf8               closeBranch
  #24 = Utf8               Z
  #25 = Utf8               <init>
  #26 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)V
  #27 = Utf8               Code
  #28 = Utf8               LineNumberTable
  #29 = Utf8               LocalVariableTable
  #30 = Utf8               this
  #31 = Utf8               Lorg/apache/commons/io/input/TeeReader;
  #32 = Utf8               input
  #33 = Utf8               Ljava/io/Reader;
  #34 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;Z)V
  #35 = Utf8               close
  #36 = Utf8               ()V
  #37 = Utf8               StackMapTable
  #38 = Class              #84            // java/lang/Throwable
  #39 = Utf8               Exceptions
  #40 = Class              #85            // java/io/IOException
  #41 = Utf8               read
  #42 = Utf8               ()I
  #43 = Utf8               ch
  #44 = Utf8               I
  #45 = Utf8               ([C)I
  #46 = Utf8               chr
  #47 = Utf8               [C
  #48 = Utf8               n
  #49 = Utf8               ([CII)I
  #50 = Utf8               st
  #51 = Utf8               end
  #52 = Utf8               (Ljava/nio/CharBuffer;)I
  #53 = Utf8               newPosition
  #54 = Utf8               newLimit
  #55 = Utf8               target
  #56 = Utf8               Ljava/nio/CharBuffer;
  #57 = Utf8               originalPosition
  #58 = Class              #82            // org/apache/commons/io/input/TeeReader
  #59 = Class              #86            // java/nio/CharBuffer
  #60 = Utf8               SourceFile
  #61 = Utf8               TeeReader.java
  #62 = Utf8               org/apache/commons/io/IOUtils
  #63 = NameAndType        #25:#34        // "<init>":(Ljava/io/Reader;Ljava/io/Writer;Z)V
  #64 = NameAndType        #25:#87        // "<init>":(Ljava/io/Reader;)V
  #65 = NameAndType        #21:#22        // branch:Ljava/io/Writer;
  #66 = NameAndType        #23:#24        // closeBranch:Z
  #67 = NameAndType        #35:#36        // close:()V
  #68 = Class              #88            // java/io/Writer
  #69 = NameAndType        #41:#42        // read:()I
  #70 = NameAndType        #89:#90        // write:(I)V
  #71 = NameAndType        #41:#45        // read:([C)I
  #72 = NameAndType        #89:#91        // write:([CII)V
  #73 = NameAndType        #41:#49        // read:([CII)I
  #74 = Class              #86            // java/nio/CharBuffer
  #75 = NameAndType        #92:#42        // position:()I
  #76 = NameAndType        #41:#52        // read:(Ljava/nio/CharBuffer;)I
  #77 = NameAndType        #93:#42        // limit:()I
  #78 = NameAndType        #92:#94        // position:(I)Ljava/nio/Buffer;
  #79 = Class              #95            // java/nio/Buffer
  #80 = NameAndType        #93:#94        // limit:(I)Ljava/nio/Buffer;
  #81 = NameAndType        #96:#97        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
  #82 = Utf8               org/apache/commons/io/input/TeeReader
  #83 = Utf8               org/apache/commons/io/input/ProxyReader
  #84 = Utf8               java/lang/Throwable
  #85 = Utf8               java/io/IOException
  #86 = Utf8               java/nio/CharBuffer
  #87 = Utf8               (Ljava/io/Reader;)V
  #88 = Utf8               java/io/Writer
  #89 = Utf8               write
  #90 = Utf8               (I)V
  #91 = Utf8               ([CII)V
  #92 = Utf8               position
  #93 = Utf8               limit
  #94 = Utf8               (I)Ljava/nio/Buffer;
  #95 = Utf8               java/nio/Buffer
  #96 = Utf8               append
  #97 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;
{
  private final java.io.Writer branch;
    descriptor: Ljava/io/Writer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean closeBranch;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public org.apache.commons.io.input.TeeReader(java.io.Reader, java.io.Writer);
    descriptor: (Ljava/io/Reader;Ljava/io/Writer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: invokespecial #2                  // Method "<init>":(Ljava/io/Reader;Ljava/io/Writer;Z)V
         7: return
      LineNumberTable:
        line 57: 0
        line 58: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/input/TeeReader;
            0       8     1 input   Ljava/io/Reader;
            0       8     2 branch   Ljava/io/Writer;

  public org.apache.commons.io.input.TeeReader(java.io.Reader, java.io.Writer, boolean);
    descriptor: (Ljava/io/Reader;Ljava/io/Writer;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyReader."<init>":(Ljava/io/Reader;)V
         5: aload_0
         6: aload_2
         7: putfield      #4                  // Field branch:Ljava/io/Writer;
        10: aload_0
        11: iload_3
        12: putfield      #5                  // Field closeBranch:Z
        15: return
      LineNumberTable:
        line 70: 0
        line 71: 5
        line 72: 10
        line 73: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/apache/commons/io/input/TeeReader;
            0      16     1 input   Ljava/io/Reader;
            0      16     2 branch   Ljava/io/Writer;
            0      16     3 closeBranch   Z

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=1
         0: aload_0
         1: invokespecial #6                  // Method org/apache/commons/io/input/ProxyReader.close:()V
         4: aload_0
         5: getfield      #5                  // Field closeBranch:Z
         8: ifeq          38
        11: aload_0
        12: getfield      #4                  // Field branch:Ljava/io/Writer;
        15: invokevirtual #7                  // Method java/io/Writer.close:()V
        18: goto          38
        21: astore_1
        22: aload_0
        23: getfield      #5                  // Field closeBranch:Z
        26: ifeq          36
        29: aload_0
        30: getfield      #4                  // Field branch:Ljava/io/Writer;
        33: invokevirtual #7                  // Method java/io/Writer.close:()V
        36: aload_1
        37: athrow
        38: return
      Exception table:
         from    to  target type
             0     4    21   any
      LineNumberTable:
        line 84: 0
        line 86: 4
        line 87: 11
        line 86: 21
        line 87: 29
        line 89: 36
        line 90: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lorg/apache/commons/io/input/TeeReader;
      StackMapTable: number_of_entries = 3
        frame_type = 85 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 1
    Exceptions:
      throws java.io.IOException

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method org/apache/commons/io/input/ProxyReader.read:()I
         4: istore_1
         5: iload_1
         6: iconst_m1
         7: if_icmpeq     18
        10: aload_0
        11: getfield      #4                  // Field branch:Ljava/io/Writer;
        14: iload_1
        15: invokevirtual #9                  // Method java/io/Writer.write:(I)V
        18: iload_1
        19: ireturn
      LineNumberTable:
        line 100: 0
        line 101: 5
        line 102: 10
        line 104: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/apache/commons/io/input/TeeReader;
            5      15     1    ch   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(char[]) throws java.io.IOException;
    descriptor: ([C)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #10                 // Method org/apache/commons/io/input/ProxyReader.read:([C)I
         5: istore_2
         6: iload_2
         7: iconst_m1
         8: if_icmpeq     21
        11: aload_0
        12: getfield      #4                  // Field branch:Ljava/io/Writer;
        15: aload_1
        16: iconst_0
        17: iload_2
        18: invokevirtual #11                 // Method java/io/Writer.write:([CII)V
        21: iload_2
        22: ireturn
      LineNumberTable:
        line 116: 0
        line 117: 6
        line 118: 11
        line 120: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/io/input/TeeReader;
            0      23     1   chr   [C
            6      17     2     n   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(char[], int, int) throws java.io.IOException;
    descriptor: ([CII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=5, args_size=4
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: invokespecial #12                 // Method org/apache/commons/io/input/ProxyReader.read:([CII)I
         7: istore        4
         9: iload         4
        11: iconst_m1
        12: if_icmpeq     26
        15: aload_0
        16: getfield      #4                  // Field branch:Ljava/io/Writer;
        19: aload_1
        20: iload_2
        21: iload         4
        23: invokevirtual #11                 // Method java/io/Writer.write:([CII)V
        26: iload         4
        28: ireturn
      LineNumberTable:
        line 134: 0
        line 135: 9
        line 136: 15
        line 138: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0  this   Lorg/apache/commons/io/input/TeeReader;
            0      29     1   chr   [C
            0      29     2    st   I
            0      29     3   end   I
            9      20     4     n   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(java.nio.CharBuffer) throws java.io.IOException;
    descriptor: (Ljava/nio/CharBuffer;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=2
         0: aload_1
         1: invokevirtual #13                 // Method java/nio/CharBuffer.position:()I
         4: istore_2
         5: aload_0
         6: aload_1
         7: invokespecial #14                 // Method org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I
        10: istore_3
        11: iload_3
        12: iconst_m1
        13: if_icmpeq     80
        16: aload_1
        17: invokevirtual #13                 // Method java/nio/CharBuffer.position:()I
        20: istore        4
        22: aload_1
        23: invokevirtual #15                 // Method java/nio/CharBuffer.limit:()I
        26: istore        5
        28: aload_1
        29: iload_2
        30: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
        33: iload         4
        35: invokevirtual #17                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
        38: pop
        39: aload_0
        40: getfield      #4                  // Field branch:Ljava/io/Writer;
        43: aload_1
        44: invokevirtual #18                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;
        47: pop
        48: aload_1
        49: iload         4
        51: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
        54: iload         5
        56: invokevirtual #17                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
        59: pop
        60: goto          80
        63: astore        6
        65: aload_1
        66: iload         4
        68: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
        71: iload         5
        73: invokevirtual #17                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
        76: pop
        77: aload         6
        79: athrow
        80: iload_3
        81: ireturn
      Exception table:
         from    to  target type
            28    48    63   any
            63    65    63   any
      LineNumberTable:
        line 150: 0
        line 151: 5
        line 152: 11
        line 155: 16
        line 156: 22
        line 158: 28
        line 159: 39
        line 162: 48
        line 163: 60
        line 162: 63
        line 163: 77
        line 165: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           22      58     4 newPosition   I
           28      52     5 newLimit   I
            0      82     0  this   Lorg/apache/commons/io/input/TeeReader;
            0      82     1 target   Ljava/nio/CharBuffer;
            5      77     2 originalPosition   I
           11      71     3     n   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 63
          locals = [ class org/apache/commons/io/input/TeeReader, class java/nio/CharBuffer, int, int, int, int ]
          stack = [ class java/lang/Throwable ]
        frame_type = 249 /* chop */
          offset_delta = 16
    Exceptions:
      throws java.io.IOException
}
SourceFile: "TeeReader.java"
