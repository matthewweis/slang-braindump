Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/DoubleVectorStepper.class
  Last modified May 29, 2022; size 6006 bytes
  SHA-256 checksum ea654d56a575b8636afacccd757f6d53006de019ff8382747399f3a8ca8b7aad
  Compiled from "VectorStepper.scala"
public class scala.collection.convert.impl.DoubleVectorStepper extends scala.collection.convert.impl.VectorStepperBase<scala.collection.DoubleStepper, scala.collection.convert.impl.DoubleVectorStepper> implements scala.collection.DoubleStepper
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/DoubleVectorStepper
  super_class: #5                         // scala/collection/convert/impl/VectorStepperBase
  interfaces: 1, fields: 0, methods: 24, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/DoubleVectorStepper
    #2 = Class              #1            // scala/collection/convert/impl/DoubleVectorStepper
    #3 = Utf8               Lscala/collection/convert/impl/VectorStepperBase<Lscala/collection/DoubleStepper;Lscala/collection/convert/impl/DoubleVectorStepper;>;Lscala/collection/DoubleStepper;
    #4 = Utf8               scala/collection/convert/impl/VectorStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/VectorStepperBase
    #6 = Utf8               scala/collection/DoubleStepper
    #7 = Class              #6            // scala/collection/DoubleStepper
    #8 = Utf8               VectorStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005u2Q\u0001C\u0005\u0001\u001bEA\u0001b\u0007\u0001\u0003\u0002\u0003\u0006I!\b\u0005\tC\u0001\u0011\t\u0011)A\u0005;!I!\u0005\u0001B\u0001B\u0003%Qd\t\u0005\nK\u0001\u0011\t\u0011)A\u0005M1BQA\f\u0001\u0005\u0002=BQ\u0001\u000e\u0001\u0005\u0002UBQ!\u000f\u0001\u0005\u0002i\u00121\u0003R8vE2,g+Z2u_J\u001cF/\u001a9qKJT!AC\u0006\u0002\t%l\u0007\u000f\u001c\u0006\u0003\u00195\tqaY8om\u0016\u0014HO\u0003\u0002\u000f\u001f\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003A\tQa]2bY\u0006\u001c2\u0001\u0001\n\u0017!\u0011\u0019BC\u0006\u000e\u000e\u0003%I!!F\u0005\u0003#Y+7\r^8s\'R,\u0007\u000f]3s\u0005\u0006\u001cX\r\u0005\u0002\u001815\tQ\"\u0003\u0002\u001a\u001b\tiAi\\;cY\u0016\u001cF/\u001a9qKJ\u0004\"a\u0005\u0001\u0002\u0007}K\u0007g\u0001\u0001\u0011\u0005yyR\"A\b\n\u0005\u0001z!aA%oi\u0006\u0019q,\u001b(\u0002\u0013}#\u0017n\u001d9mCft\u0015B\u0001\u0013\u0015\u0003!!\u0017n\u001d9mCft\u0015AB0ueVt7\u000eE\u0002\u001fO%J!\u0001K\b\u0003\u000b\u0005\u0013(/Y=\u0011\u0005yQ\u0013BA\u0016\u0010\u0005\u0019\te.\u001f*fM&\u0011Q\u0006F\u0001\u0006iJ,hn[\u0001\u0007y%t\u0017\u000e\u001e \u0015\u000bi\u0001\u0014GM\u001a\t\u000bm)\u0001\u0019A\u000f\t\u000b\u0005*\u0001\u0019A\u000f\t\u000b\t*\u0001\u0019A\u000f\t\u000b\u0015*\u0001\u0019\u0001\u0014\u0002\u00119,\u0007\u0010^*uKB$\u0012A\u000e\t\u0003=]J!\u0001O\b\u0003\r\u0011{WO\u00197f\u0003%\u0019X-\\5dY>tW\r\u0006\u0002\u001bw!)Ah\u0002a\u0001;\u0005!\u0001.\u00197g\u0001
   #12 = Utf8               java/util/PrimitiveIterator$OfDouble
   #13 = Class              #12           // java/util/PrimitiveIterator$OfDouble
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfDouble
   #17 = Utf8               java/util/Spliterator$OfDouble
   #18 = Class              #17           // java/util/Spliterator$OfDouble
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               spliterator
   #22 = Utf8               ()Ljava/util/Spliterator$OfDouble;
   #23 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfDouble;
   #24 = Utf8               spliterator$
   #25 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
   #26 = NameAndType        #24:#25       // spliterator$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
   #27 = InterfaceMethodref #7.#26        // scala/collection/DoubleStepper.spliterator$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
   #28 = Utf8               this
   #29 = Utf8               Lscala/collection/convert/impl/DoubleVectorStepper;
   #30 = Utf8               javaIterator
   #31 = Utf8               ()Ljava/util/PrimitiveIterator$OfDouble;
   #32 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfDouble;
   #33 = Utf8               javaIterator$
   #34 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #35 = NameAndType        #33:#34       // javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #36 = InterfaceMethodref #7.#35        // scala/collection/DoubleStepper.javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
   #37 = Utf8               spliterator$mcD$sp
   #38 = Utf8               ()Ljava/util/Spliterator;
   #39 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #40 = Utf8               spliterator$mcD$sp$
   #41 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
   #42 = NameAndType        #40:#41       // spliterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
   #43 = InterfaceMethodref #7.#42        // scala/collection/DoubleStepper.spliterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
   #44 = Utf8               javaIterator$mcD$sp
   #45 = Utf8               ()Ljava/util/Iterator;
   #46 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #47 = Utf8               javaIterator$mcD$sp$
   #48 = Utf8               (Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #49 = NameAndType        #47:#48       // javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #50 = InterfaceMethodref #7.#49        // scala/collection/DoubleStepper.javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
   #51 = Utf8               nextStep$mcI$sp
   #52 = Utf8               ()I
   #53 = Utf8               scala/collection/Stepper
   #54 = Class              #53           // scala/collection/Stepper
   #55 = Utf8               nextStep$mcI$sp$
   #56 = Utf8               (Lscala/collection/Stepper;)I
   #57 = NameAndType        #55:#56       // nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #58 = InterfaceMethodref #54.#57       // scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
   #59 = Utf8               nextStep$mcJ$sp
   #60 = Utf8               ()J
   #61 = Utf8               nextStep$mcJ$sp$
   #62 = Utf8               (Lscala/collection/Stepper;)J
   #63 = NameAndType        #61:#62       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #64 = InterfaceMethodref #54.#63       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #65 = Utf8               trySplit$mcD$sp
   #66 = Utf8               ()Lscala/collection/Stepper;
   #67 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #68 = Utf8               trySplit$mcD$sp$
   #69 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #70 = NameAndType        #68:#69       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #71 = InterfaceMethodref #54.#70       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #72 = Utf8               trySplit$mcI$sp
   #73 = Utf8               trySplit$mcI$sp$
   #74 = NameAndType        #73:#69       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #75 = InterfaceMethodref #54.#74       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #76 = Utf8               trySplit$mcJ$sp
   #77 = Utf8               trySplit$mcJ$sp$
   #78 = NameAndType        #77:#69       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #79 = InterfaceMethodref #54.#78       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #80 = Utf8               spliterator$mcI$sp
   #81 = Utf8               spliterator$mcI$sp$
   #82 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #83 = NameAndType        #81:#82       // spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #84 = InterfaceMethodref #54.#83       // scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #85 = Utf8               spliterator$mcJ$sp
   #86 = Utf8               spliterator$mcJ$sp$
   #87 = NameAndType        #86:#82       // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #88 = InterfaceMethodref #54.#87       // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #89 = Utf8               javaIterator$mcI$sp
   #90 = Utf8               javaIterator$mcI$sp$
   #91 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
   #92 = NameAndType        #90:#91       // javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #93 = InterfaceMethodref #54.#92       // scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #94 = Utf8               javaIterator$mcJ$sp
   #95 = Utf8               javaIterator$mcJ$sp$
   #96 = NameAndType        #95:#91       // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #97 = InterfaceMethodref #54.#96       // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #98 = Utf8               iterator
   #99 = Utf8               ()Lscala/collection/Iterator;
  #100 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #101 = Utf8               iterator$
  #102 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #103 = NameAndType        #101:#102     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #104 = InterfaceMethodref #54.#103      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #105 = Utf8               nextStep
  #106 = Utf8               ()D
  #107 = Utf8               nextStep$mcD$sp
  #108 = NameAndType        #107:#106     // nextStep$mcD$sp:()D
  #109 = Methodref          #2.#108       // scala/collection/convert/impl/DoubleVectorStepper.nextStep$mcD$sp:()D
  #110 = Utf8               semiclone
  #111 = Utf8               (I)Lscala/collection/convert/impl/DoubleVectorStepper;
  #112 = Utf8               half
  #113 = Utf8               i0
  #114 = NameAndType        #113:#52      // i0:()I
  #115 = Methodref          #2.#114       // scala/collection/convert/impl/DoubleVectorStepper.i0:()I
  #116 = Utf8               displayN
  #117 = NameAndType        #116:#52      // displayN:()I
  #118 = Methodref          #2.#117       // scala/collection/convert/impl/DoubleVectorStepper.displayN:()I
  #119 = Utf8               trunk
  #120 = Utf8               ()[Ljava/lang/Object;
  #121 = NameAndType        #119:#120     // trunk:()[Ljava/lang/Object;
  #122 = Methodref          #2.#121       // scala/collection/convert/impl/DoubleVectorStepper.trunk:()[Ljava/lang/Object;
  #123 = Utf8               <init>
  #124 = Utf8               (III[Ljava/lang/Object;)V
  #125 = NameAndType        #123:#124     // "<init>":(III[Ljava/lang/Object;)V
  #126 = Methodref          #2.#125       // scala/collection/convert/impl/DoubleVectorStepper."<init>":(III[Ljava/lang/Object;)V
  #127 = Utf8               index_$eq
  #128 = Utf8               (I)V
  #129 = NameAndType        #127:#128     // index_$eq:(I)V
  #130 = Methodref          #2.#129       // scala/collection/convert/impl/DoubleVectorStepper.index_$eq:(I)V
  #131 = Utf8               index1_$eq
  #132 = NameAndType        #131:#128     // index1_$eq:(I)V
  #133 = Methodref          #2.#132       // scala/collection/convert/impl/DoubleVectorStepper.index1_$eq:(I)V
  #134 = Utf8               i0_$eq
  #135 = NameAndType        #134:#128     // i0_$eq:(I)V
  #136 = Methodref          #2.#135       // scala/collection/convert/impl/DoubleVectorStepper.i0_$eq:(I)V
  #137 = Utf8               ans
  #138 = Utf8               I
  #139 = Utf8               hasStep
  #140 = Utf8               ()Z
  #141 = NameAndType        #139:#140     // hasStep:()Z
  #142 = Methodref          #2.#141       // scala/collection/convert/impl/DoubleVectorStepper.hasStep:()Z
  #143 = Utf8               index
  #144 = NameAndType        #143:#52      // index:()I
  #145 = Methodref          #2.#144       // scala/collection/convert/impl/DoubleVectorStepper.index:()I
  #146 = Utf8               advanceData
  #147 = NameAndType        #146:#128     // advanceData:(I)V
  #148 = Methodref          #2.#147       // scala/collection/convert/impl/DoubleVectorStepper.advanceData:(I)V
  #149 = Utf8               leaves
  #150 = NameAndType        #149:#120     // leaves:()[Ljava/lang/Object;
  #151 = Methodref          #2.#150       // scala/collection/convert/impl/DoubleVectorStepper.leaves:()[Ljava/lang/Object;
  #152 = Utf8               scala/runtime/BoxesRunTime
  #153 = Class              #152          // scala/runtime/BoxesRunTime
  #154 = Utf8               unboxToDouble
  #155 = Utf8               (Ljava/lang/Object;)D
  #156 = NameAndType        #154:#155     // unboxToDouble:(Ljava/lang/Object;)D
  #157 = Methodref          #153.#156     // scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
  #158 = Utf8               scala/collection/Stepper$
  #159 = Class              #158          // scala/collection/Stepper$
  #160 = Utf8               MODULE$
  #161 = Utf8               Lscala/collection/Stepper$;
  #162 = NameAndType        #160:#161     // MODULE$:Lscala/collection/Stepper$;
  #163 = Fieldref           #159.#162     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #164 = Utf8               java/util/NoSuchElementException
  #165 = Class              #164          // java/util/NoSuchElementException
  #166 = Utf8               Empty Stepper
  #167 = String             #166          // Empty Stepper
  #168 = Utf8               (Ljava/lang/String;)V
  #169 = NameAndType        #123:#168     // "<init>":(Ljava/lang/String;)V
  #170 = Methodref          #165.#169     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #171 = Utf8               trySplit
  #172 = Utf8               ()Ljava/lang/Object;
  #173 = NameAndType        #171:#172     // trySplit:()Ljava/lang/Object;
  #174 = Methodref          #2.#173       // scala/collection/convert/impl/DoubleVectorStepper.trySplit:()Ljava/lang/Object;
  #175 = Utf8               ()Lscala/collection/DoubleStepper;
  #176 = NameAndType        #30:#31       // javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
  #177 = Methodref          #2.#176       // scala/collection/convert/impl/DoubleVectorStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
  #178 = NameAndType        #21:#22       // spliterator:()Ljava/util/Spliterator$OfDouble;
  #179 = Methodref          #2.#178       // scala/collection/convert/impl/DoubleVectorStepper.spliterator:()Ljava/util/Spliterator$OfDouble;
  #180 = Utf8               (I)Ljava/lang/Object;
  #181 = NameAndType        #110:#111     // semiclone:(I)Lscala/collection/convert/impl/DoubleVectorStepper;
  #182 = Methodref          #2.#181       // scala/collection/convert/impl/DoubleVectorStepper.semiclone:(I)Lscala/collection/convert/impl/DoubleVectorStepper;
  #183 = NameAndType        #105:#106     // nextStep:()D
  #184 = Methodref          #2.#183       // scala/collection/convert/impl/DoubleVectorStepper.nextStep:()D
  #185 = Utf8               boxToDouble
  #186 = Utf8               (D)Ljava/lang/Double;
  #187 = NameAndType        #185:#186     // boxToDouble:(D)Ljava/lang/Double;
  #188 = Methodref          #153.#187     // scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
  #189 = Utf8               _i0
  #190 = Utf8               _iN
  #191 = Utf8               _displayN
  #192 = Utf8               _trunk
  #193 = Methodref          #5.#125       // scala/collection/convert/impl/VectorStepperBase."<init>":(III[Ljava/lang/Object;)V
  #194 = Utf8               [Ljava/lang/Object;
  #195 = Utf8               Code
  #196 = Utf8               LineNumberTable
  #197 = Utf8               LocalVariableTable
  #198 = Utf8               Signature
  #199 = Utf8               MethodParameters
  #200 = Utf8               StackMapTable
  #201 = Utf8               InnerClasses
  #202 = Utf8               SourceFile
  #203 = Utf8               RuntimeVisibleAnnotations
  #204 = Utf8               ScalaInlineInfo
  #205 = Utf8               ScalaSig
{
  public <B extends java.lang.Object> java.util.Spliterator$OfDouble spliterator();
    descriptor: ()Ljava/util/Spliterator$OfDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #27                 // InterfaceMethod scala/collection/DoubleStepper.spliterator$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #23                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfDouble;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfDouble javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfDouble;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #36                 // InterfaceMethod scala/collection/DoubleStepper.javaIterator$:(Lscala/collection/DoubleStepper;)Ljava/util/PrimitiveIterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #32                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfDouble;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod scala/collection/DoubleStepper.spliterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod scala/collection/DoubleStepper.javaIterator$mcD$sp$:(Lscala/collection/DoubleStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #46                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/collection/Stepper.nextStep$mcI$sp$:(Lscala/collection/Stepper;)I
         4: ireturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #84                 // InterfaceMethod scala/collection/Stepper.spliterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcI$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #46                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #97                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #46                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #104                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
    Signature: #100                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public double nextStep();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method nextStep$mcD$sp:()D
         4: dreturn
      LineNumberTable:
        line 82: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public scala.collection.convert.impl.DoubleVectorStepper semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/DoubleVectorStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: new           #2                  // class scala/collection/convert/impl/DoubleVectorStepper
         3: dup
         4: aload_0
         5: invokevirtual #115                // Method i0:()I
         8: iload_1
         9: aload_0
        10: invokevirtual #118                // Method displayN:()I
        13: aload_0
        14: invokevirtual #122                // Method trunk:()[Ljava/lang/Object;
        17: invokespecial #126                // Method "<init>":(III[Ljava/lang/Object;)V
        20: astore_2
        21: aload_0
        22: bipush        32
        24: invokevirtual #130                // Method index_$eq:(I)V
        27: aload_0
        28: bipush        32
        30: invokevirtual #133                // Method index1_$eq:(I)V
        33: aload_0
        34: iload_1
        35: invokevirtual #136                // Method i0_$eq:(I)V
        38: aload_2
        39: areturn
      LineNumberTable:
        line 89: 0
        line 90: 21
        line 91: 27
        line 92: 33
        line 93: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      18     2   ans   Lscala/collection/convert/impl/DoubleVectorStepper;
            0      40     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
            0      40     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #142                // Method hasStep:()Z
         4: ifeq          57
         7: aload_0
         8: aload_0
         9: invokevirtual #145                // Method index:()I
        12: iconst_1
        13: iadd
        14: invokevirtual #130                // Method index_$eq:(I)V
        17: aload_0
        18: invokevirtual #145                // Method index:()I
        21: bipush        32
        23: if_icmplt     34
        26: aload_0
        27: aload_0
        28: invokevirtual #115                // Method i0:()I
        31: invokevirtual #148                // Method advanceData:(I)V
        34: aload_0
        35: aload_0
        36: invokevirtual #115                // Method i0:()I
        39: iconst_1
        40: iadd
        41: invokevirtual #136                // Method i0_$eq:(I)V
        44: aload_0
        45: invokevirtual #151                // Method leaves:()[Ljava/lang/Object;
        48: aload_0
        49: invokevirtual #145                // Method index:()I
        52: aaload
        53: invokestatic  #157                // Method scala/runtime/BoxesRunTime.unboxToDouble:(Ljava/lang/Object;)D
        56: dreturn
        57: getstatic     #163                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        60: pop
        61: new           #165                // class java/util/NoSuchElementException
        64: dup
        65: ldc           #167                // String Empty Stepper
        67: invokespecial #170                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        70: athrow
      StackMapTable: number_of_entries = 2
        frame_type = 34 /* same */
        frame_type = 22 /* same */
      LineNumberTable:
        line 82: 0
        line 83: 7
        line 84: 17
        line 85: 34
        line 86: 44
        line 87: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #174                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #54                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public scala.collection.DoubleStepper trySplit();
    descriptor: ()Lscala/collection/DoubleStepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #174                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/DoubleStepper
         7: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #177                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #179                // Method spliterator:()Ljava/util/Spliterator$OfDouble;
         4: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public java.lang.Object semiclone(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #182                // Method semiclone:(I)Lscala/collection/convert/impl/DoubleVectorStepper;
         5: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
            0       6     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #184                // Method nextStep:()D
         4: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToDouble:(D)Ljava/lang/Double;
         7: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;

  public scala.collection.convert.impl.DoubleVectorStepper(int, int, int, java.lang.Object[]);
    descriptor: (III[Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: iload_1
         2: iload_2
         3: iload_3
         4: aload         4
         6: invokespecial #193                // Method scala/collection/convert/impl/VectorStepperBase."<init>":(III[Ljava/lang/Object;)V
         9: return
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/impl/DoubleVectorStepper;
            0      10     1   _i0   I
            0      10     2   _iN   I
            0      10     3 _displayN   I
            0      10     4 _trunk   [Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      _i0                            final
      _iN                            final
      _displayN                      final
      _trunk                         final
}
InnerClasses:
  public static #16= #13 of #15;          // OfDouble=class java/util/PrimitiveIterator$OfDouble of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfDouble=class java/util/Spliterator$OfDouble of class java/util/Spliterator
Signature: #3                           // Lscala/collection/convert/impl/VectorStepperBase<Lscala/collection/DoubleStepper;Lscala/collection/convert/impl/DoubleVectorStepper;>;Lscala/collection/DoubleStepper;
SourceFile: "VectorStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005u2Q\u0001C\u0005\u0001\u001bEA\u0001b\u0007\u0001\u0003\u0002\u0003\u0006I!\b\u0005\tC\u0001\u0011\t\u0011)A\u0005;!I!\u0005\u0001B\u0001B\u0003%Qd\t\u0005\nK\u0001\u0011\t\u0011)A\u0005M1BQA\f\u0001\u0005\u0002=BQ\u0001\u000e\u0001\u0005\u0002UBQ!\u000f\u0001\u0005\u0002i\u00121\u0003R8vE2,g+Z2u_J\u001cF/\u001a9qKJT!AC\u0006\u0002\t%l\u0007\u000f\u001c\u0006\u0003\u00195\tqaY8om\u0016\u0014HO\u0003\u0002\u000f\u001f\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\u000b\u0003A\tQa]2bY\u0006\u001c2\u0001\u0001\n\u0017!\u0011\u0019BC\u0006\u000e\u000e\u0003%I!!F\u0005\u0003#Y+7\r^8s\'R,\u0007\u000f]3s\u0005\u0006\u001cX\r\u0005\u0002\u001815\tQ\"\u0003\u0002\u001a\u001b\tiAi\\;cY\u0016\u001cF/\u001a9qKJ\u0004\"a\u0005\u0001\u0002\u0007}K\u0007g\u0001\u0001\u0011\u0005yyR\"A\b\n\u0005\u0001z!aA%oi\u0006\u0019q,\u001b(\u0002\u0013}#\u0017n\u001d9mCft\u0015B\u0001\u0013\u0015\u0003!!\u0017n\u001d9mCft\u0015AB0ueVt7\u000eE\u0002\u001fO%J!\u0001K\b\u0003\u000b\u0005\u0013(/Y=\u0011\u0005yQ\u0013BA\u0016\u0010\u0005\u0019\te.\u001f*fM&\u0011Q\u0006F\u0001\u0006iJ,hn[\u0001\u0007y%t\u0017\u000e\u001e \u0015\u000bi\u0001\u0014GM\u001a\t\u000bm)\u0001\u0019A\u000f\t\u000b\u0005*\u0001\u0019A\u000f\t\u000b\t*\u0001\u0019A\u000f\t\u000b\u0015*\u0001\u0019\u0001\u0014\u0002\u00119,\u0007\u0010^*uKB$\u0012A\u000e\t\u0003=]J!\u0001O\b\u0003\r\u0011{WO\u00197f\u0003%\u0019X-\\5dY>tW\r\u0006\u0002\u001bw!)Ah\u0002a\u0001;\u0005!\u0001.\u00197g\u0001"
    )
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 00 00 18 00 7B 00 7C 00 00 62 00 63 00 00 1E
   00 2D 00 00 1E 00 1F 00 00 2C 00 2D 00 00 59 00
   2D 00 00 5E 00 2D 00 00 69 00 6A 00 00 69 00 AC
   00 00 6B 00 6A 00 00 33 00 34 00 00 3B 00 3C 00
   00 6E 00 B4 00 00 6E 00 6F 00 00 15 00 16 00 00
   15 00 26 00 00 25 00 26 00 00 50 00 26 00 00 55
   00 26 00 00 AB 00 AF 00 00 AB 00 42 00 00 41 00
   42 00 00 48 00 42 00 00 4C 00 42 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
