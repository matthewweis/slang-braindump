Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/sys/process/BasicIO$LazilyListed$.class
  Last modified May 29, 2022; size 5386 bytes
  SHA-256 checksum b3b8b4d100bb026d1415406343896c044844f594bc1b0d8a86d7689a4dfdc2d3
  Compiled from "BasicIO.scala"
public class scala.sys.process.BasicIO$LazilyListed$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/sys/process/BasicIO$LazilyListed$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 8, attributes: 5
Constant pool:
    #1 = Utf8               scala/sys/process/BasicIO$LazilyListed$
    #2 = Class              #1            // scala/sys/process/BasicIO$LazilyListed$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               BasicIO.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/collection/immutable/LazyList$State
   #12 = Class              #11           // scala/collection/immutable/LazyList$State
   #13 = Utf8               scala/collection/immutable/LazyList
   #14 = Class              #13           // scala/collection/immutable/LazyList
   #15 = Utf8               State
   #16 = Utf8               scala/sys/process/BasicIO$LazilyListed
   #17 = Class              #16           // scala/sys/process/BasicIO$LazilyListed
   #18 = Utf8               scala/sys/process/BasicIO
   #19 = Class              #18           // scala/sys/process/BasicIO
   #20 = Utf8               LazilyListed
   #21 = Utf8               LazilyListed$
   #22 = Utf8               MODULE$
   #23 = Utf8               Lscala/sys/process/BasicIO$LazilyListed$;
   #24 = Utf8               <clinit>
   #25 = Utf8               ()V
   #26 = Utf8               <init>
   #27 = NameAndType        #26:#25       // "<init>":()V
   #28 = Methodref          #2.#27        // scala/sys/process/BasicIO$LazilyListed$."<init>":()V
   #29 = NameAndType        #22:#23       // MODULE$:Lscala/sys/process/BasicIO$LazilyListed$;
   #30 = Fieldref           #2.#29        // scala/sys/process/BasicIO$LazilyListed$.MODULE$:Lscala/sys/process/BasicIO$LazilyListed$;
   #31 = Utf8               apply
   #32 = Utf8               (ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed;
   #33 = Utf8               <T:Ljava/lang/Object;>(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed<TT;>;
   #34 = Utf8               nonzeroException
   #35 = Utf8               capacity
   #36 = Utf8               java/util/concurrent/LinkedBlockingQueue
   #37 = Class              #36           // java/util/concurrent/LinkedBlockingQueue
   #38 = Utf8               scala/runtime/BoxesRunTime
   #39 = Class              #38           // scala/runtime/BoxesRunTime
   #40 = Utf8               unboxToInt
   #41 = Utf8               (Ljava/lang/Object;)I
   #42 = NameAndType        #40:#41       // unboxToInt:(Ljava/lang/Object;)I
   #43 = Methodref          #39.#42       // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
   #44 = Utf8               (I)V
   #45 = NameAndType        #26:#44       // "<init>":(I)V
   #46 = Methodref          #37.#45       // java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
   #47 = Utf8               scala/package$
   #48 = Class              #47           // scala/package$
   #49 = Utf8               Lscala/package$;
   #50 = NameAndType        #22:#49       // MODULE$:Lscala/package$;
   #51 = Fieldref           #48.#50       // scala/package$.MODULE$:Lscala/package$;
   #52 = Utf8               LazyList
   #53 = Utf8               ()Lscala/collection/immutable/LazyList$;
   #54 = NameAndType        #52:#53       // LazyList:()Lscala/collection/immutable/LazyList$;
   #55 = Methodref          #48.#54       // scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
   #56 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #57 = MethodType         #56           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #58 = Utf8               $anonfun$apply$1
   #59 = Utf8               (ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
   #60 = NameAndType        #58:#59       // $anonfun$apply$1:(ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
   #61 = Methodref          #2.#60        // scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$1:(ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
   #62 = MethodHandle       6:#61         // REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$1:(ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
   #63 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
   #64 = MethodType         #63           //  (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
   #65 = Integer            5
   #66 = Integer            1
   #67 = Utf8               java/lang/invoke/LambdaMetafactory
   #68 = Class              #67           // java/lang/invoke/LambdaMetafactory
   #69 = Utf8               altMetafactory
   #70 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #71 = NameAndType        #69:#70       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #72 = Methodref          #68.#71       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #73 = MethodHandle       6:#72         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #74 = Utf8               (Z)Lscala/Function1;
   #75 = NameAndType        #31:#74       // apply:(Z)Lscala/Function1;
   #76 = InvokeDynamic      #0:#75        // #0:apply:(Z)Lscala/Function1;
   #77 = Utf8               ()Ljava/lang/Object;
   #78 = MethodType         #77           //  ()Ljava/lang/Object;
   #79 = Utf8               scala/collection/immutable/LazyList$
   #80 = Class              #79           // scala/collection/immutable/LazyList$
   #81 = Utf8               $anonfun$unfold$1
   #82 = Utf8               (Lscala/Function1;Ljava/lang/Object;)Lscala/collection/immutable/LazyList$State;
   #83 = NameAndType        #81:#82       // $anonfun$unfold$1:(Lscala/Function1;Ljava/lang/Object;)Lscala/collection/immutable/LazyList$State;
   #84 = Methodref          #80.#83       // scala/collection/immutable/LazyList$.$anonfun$unfold$1:(Lscala/Function1;Ljava/lang/Object;)Lscala/collection/immutable/LazyList$State;
   #85 = MethodHandle       6:#84         // REF_invokeStatic scala/collection/immutable/LazyList$.$anonfun$unfold$1:(Lscala/Function1;Ljava/lang/Object;)Lscala/collection/immutable/LazyList$State;
   #86 = Utf8               ()Lscala/collection/immutable/LazyList$State;
   #87 = MethodType         #86           //  ()Lscala/collection/immutable/LazyList$State;
   #88 = Utf8               (Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
   #89 = NameAndType        #31:#88       // apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
   #90 = InvokeDynamic      #1:#89        // #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
   #91 = Utf8               (Lscala/Function0;)V
   #92 = NameAndType        #26:#91       // "<init>":(Lscala/Function0;)V
   #93 = Methodref          #14.#92       // scala/collection/immutable/LazyList."<init>":(Lscala/Function0;)V
   #94 = Utf8               $anonfun$apply$2$adapted
   #95 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
   #96 = NameAndType        #94:#95       // $anonfun$apply$2$adapted:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
   #97 = Methodref          #2.#96        // scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$2$adapted:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
   #98 = MethodHandle       6:#97         // REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$2$adapted:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
   #99 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function1;
  #100 = NameAndType        #31:#99       // apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function1;
  #101 = InvokeDynamic      #2:#100       // #2:apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function1;
  #102 = MethodType         #44           //  (I)V
  #103 = Utf8               $anonfun$apply$3
  #104 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;I)V
  #105 = NameAndType        #103:#104     // $anonfun$apply$3:(Ljava/util/concurrent/LinkedBlockingQueue;I)V
  #106 = Methodref          #2.#105       // scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$3:(Ljava/util/concurrent/LinkedBlockingQueue;I)V
  #107 = MethodHandle       6:#106        // REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$3:(Ljava/util/concurrent/LinkedBlockingQueue;I)V
  #108 = Utf8               apply$mcVI$sp
  #109 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #110 = NameAndType        #108:#109     // apply$mcVI$sp:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #111 = InvokeDynamic      #3:#110       // #3:apply$mcVI$sp:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #112 = Utf8               (Lscala/Function1;Lscala/Function1;Lscala/collection/immutable/LazyList;)V
  #113 = NameAndType        #26:#112      // "<init>":(Lscala/Function1;Lscala/Function1;Lscala/collection/immutable/LazyList;)V
  #114 = Methodref          #17.#113      // scala/sys/process/BasicIO$LazilyListed."<init>":(Lscala/Function1;Lscala/Function1;Lscala/collection/immutable/LazyList;)V
  #115 = Utf8               queue
  #116 = Utf8               Ljava/util/concurrent/LinkedBlockingQueue;
  #117 = Utf8               ll
  #118 = Utf8               Lscala/collection/immutable/LazyList;
  #119 = Utf8               this
  #120 = Utf8               Z
  #121 = Utf8               Ljava/lang/Integer;
  #122 = Utf8               unfold_f
  #123 = Utf8               Lscala/Function1;
  #124 = Utf8               unfold_scala$collection$immutable$LazyList$$newLL_state
  #125 = Utf8               Lscala/Function0;
  #126 = Utf8               scala/Function1
  #127 = Class              #126          // scala/Function1
  #128 = Utf8               nonzeroException$1
  #129 = Utf8               q
  #130 = Utf8               take
  #131 = NameAndType        #130:#77      // take:()Ljava/lang/Object;
  #132 = Methodref          #37.#131      // java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
  #133 = Utf8               scala/util/Either
  #134 = Class              #133          // scala/util/Either
  #135 = Utf8               scala/util/Left
  #136 = Class              #135          // scala/util/Left
  #137 = Utf8               value
  #138 = NameAndType        #137:#77      // value:()Ljava/lang/Object;
  #139 = Methodref          #136.#138     // scala/util/Left.value:()Ljava/lang/Object;
  #140 = Utf8               scala/None$
  #141 = Class              #140          // scala/None$
  #142 = Utf8               Lscala/None$;
  #143 = NameAndType        #22:#142      // MODULE$:Lscala/None$;
  #144 = Fieldref           #141.#143     // scala/None$.MODULE$:Lscala/None$;
  #145 = Utf8               scala/sys/package$
  #146 = Class              #145          // scala/sys/package$
  #147 = Utf8               Lscala/sys/package$;
  #148 = NameAndType        #22:#147      // MODULE$:Lscala/sys/package$;
  #149 = Fieldref           #146.#148     // scala/sys/package$.MODULE$:Lscala/sys/package$;
  #150 = Utf8               java/lang/StringBuilder
  #151 = Class              #150          // java/lang/StringBuilder
  #152 = Integer            19
  #153 = Methodref          #151.#45      // java/lang/StringBuilder."<init>":(I)V
  #154 = Utf8               Nonzero exit code:
  #155 = String             #154          // Nonzero exit code:
  #156 = Utf8               append
  #157 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #158 = NameAndType        #156:#157     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #159 = Methodref          #151.#158     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #160 = Utf8               (I)Ljava/lang/StringBuilder;
  #161 = NameAndType        #156:#160     // append:(I)Ljava/lang/StringBuilder;
  #162 = Methodref          #151.#161     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #163 = Utf8               toString
  #164 = Utf8               ()Ljava/lang/String;
  #165 = NameAndType        #163:#164     // toString:()Ljava/lang/String;
  #166 = Methodref          #151.#165     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #167 = Utf8               java/lang/RuntimeException
  #168 = Class              #167          // java/lang/RuntimeException
  #169 = Utf8               (Ljava/lang/String;)V
  #170 = NameAndType        #26:#169      // "<init>":(Ljava/lang/String;)V
  #171 = Methodref          #168.#170     // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
  #172 = Utf8               scala/util/Right
  #173 = Class              #172          // scala/util/Right
  #174 = Methodref          #173.#138     // scala/util/Right.value:()Ljava/lang/Object;
  #175 = Utf8               scala/Some
  #176 = Class              #175          // scala/Some
  #177 = Utf8               scala/Tuple2
  #178 = Class              #177          // scala/Tuple2
  #179 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #180 = NameAndType        #26:#179      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #181 = Methodref          #178.#180     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #182 = Utf8               (Ljava/lang/Object;)V
  #183 = NameAndType        #26:#182      // "<init>":(Ljava/lang/Object;)V
  #184 = Methodref          #176.#183     // scala/Some."<init>":(Ljava/lang/Object;)V
  #185 = Utf8               scala/MatchError
  #186 = Class              #185          // scala/MatchError
  #187 = Methodref          #186.#183     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #188 = Utf8               code
  #189 = Utf8               I
  #190 = Utf8               s
  #191 = Utf8               Ljava/lang/Object;
  #192 = Utf8               error_message
  #193 = Utf8               Ljava/lang/String;
  #194 = Utf8               scala/Option
  #195 = Class              #194          // scala/Option
  #196 = Utf8               $anonfun$apply$2
  #197 = Utf8               (Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)V
  #198 = Utf8               queue$1
  #199 = Utf8               Right
  #200 = Utf8               ()Lscala/util/Right$;
  #201 = NameAndType        #199:#200     // Right:()Lscala/util/Right$;
  #202 = Methodref          #48.#201      // scala/package$.Right:()Lscala/util/Right$;
  #203 = Methodref          #173.#183     // scala/util/Right."<init>":(Ljava/lang/Object;)V
  #204 = Utf8               put
  #205 = NameAndType        #204:#182     // put:(Ljava/lang/Object;)V
  #206 = Methodref          #37.#205      // java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
  #207 = Utf8               Left
  #208 = Utf8               ()Lscala/util/Left$;
  #209 = NameAndType        #207:#208     // Left:()Lscala/util/Left$;
  #210 = Methodref          #48.#209      // scala/package$.Left:()Lscala/util/Left$;
  #211 = Utf8               java/lang/Integer
  #212 = Class              #211          // java/lang/Integer
  #213 = Utf8               valueOf
  #214 = Utf8               (I)Ljava/lang/Integer;
  #215 = NameAndType        #213:#214     // valueOf:(I)Ljava/lang/Integer;
  #216 = Methodref          #212.#215     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #217 = Methodref          #136.#183     // scala/util/Left."<init>":(Ljava/lang/Object;)V
  #218 = Utf8               apply_value
  #219 = Methodref          #4.#27        // java/lang/Object."<init>":()V
  #220 = NameAndType        #196:#197     // $anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)V
  #221 = Methodref          #2.#220       // scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)V
  #222 = Utf8               scala/runtime/BoxedUnit
  #223 = Class              #222          // scala/runtime/BoxedUnit
  #224 = Utf8               UNIT
  #225 = Utf8               Lscala/runtime/BoxedUnit;
  #226 = NameAndType        #224:#225     // UNIT:Lscala/runtime/BoxedUnit;
  #227 = Fieldref           #223.#226     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #228 = Utf8               $deserializeLambda$
  #229 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #230 = Utf8               scala/runtime/LambdaDeserialize
  #231 = Class              #230          // scala/runtime/LambdaDeserialize
  #232 = Utf8               bootstrap
  #233 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #234 = NameAndType        #232:#233     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #235 = Methodref          #231.#234     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #236 = MethodHandle       6:#235        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #237 = Utf8               lambdaDeserialize
  #238 = NameAndType        #237:#229     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #239 = InvokeDynamic      #4:#238       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #240 = Utf8               Code
  #241 = Utf8               LineNumberTable
  #242 = Utf8               StackMapTable
  #243 = Utf8               LocalVariableTable
  #244 = Utf8               Signature
  #245 = Utf8               MethodParameters
  #246 = Utf8               InnerClasses
  #247 = Utf8               SourceFile
  #248 = Utf8               BootstrapMethods
  #249 = Utf8               ScalaInlineInfo
  #250 = Utf8               Scala
{
  public static final scala.sys.process.BasicIO$LazilyListed$ MODULE$;
    descriptor: Lscala/sys/process/BasicIO$LazilyListed$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/sys/process/BasicIO$LazilyListed$
         3: dup
         4: invokespecial #28                 // Method "<init>":()V
         7: putstatic     #30                 // Field MODULE$:Lscala/sys/process/BasicIO$LazilyListed$;
        10: return
      LineNumberTable:
        line 47: 0

  public <T extends java.lang.Object> scala.sys.process.BasicIO$LazilyListed<T> apply(boolean, java.lang.Integer);
    descriptor: (ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=3
         0: new           #37                 // class java/util/concurrent/LinkedBlockingQueue
         3: dup
         4: aload_2
         5: invokestatic  #43                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
         8: invokespecial #46                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
        11: astore_3
        12: getstatic     #51                 // Field scala/package$.MODULE$:Lscala/package$;
        15: invokevirtual #55                 // Method scala/package$.LazyList:()Lscala/collection/immutable/LazyList$;
        18: iload_1
        19: invokedynamic #76,  0             // InvokeDynamic #0:apply:(Z)Lscala/Function1;
        24: astore        5
        26: ifnonnull     31
        29: aconst_null
        30: athrow
        31: aload         5
        33: aload_3
        34: invokedynamic #90,  0             // InvokeDynamic #1:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function0;
        39: astore        6
        41: new           #14                 // class scala/collection/immutable/LazyList
        44: dup
        45: aload         6
        47: invokespecial #93                 // Method scala/collection/immutable/LazyList."<init>":(Lscala/Function0;)V
        50: astore        7
        52: aload         7
        54: aconst_null
        55: astore        6
        57: aconst_null
        58: astore        7
        60: astore        8
        62: aload         8
        64: aconst_null
        65: astore        5
        67: aconst_null
        68: astore        8
        70: astore        4
        72: new           #17                 // class scala/sys/process/BasicIO$LazilyListed
        75: dup
        76: aload_3
        77: invokedynamic #101,  0            // InvokeDynamic #2:apply:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Function1;
        82: aload_3
        83: invokedynamic #111,  0            // InvokeDynamic #3:apply$mcVI$sp:(Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/runtime/java8/JFunction1$mcVI$sp;
        88: aload         4
        90: invokespecial #114                // Method scala/sys/process/BasicIO$LazilyListed."<init>":(Lscala/Function1;Lscala/Function1;Lscala/collection/immutable/LazyList;)V
        93: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 254 /* append */
          offset_delta = 31
          locals = [ class java/util/concurrent/LinkedBlockingQueue, top, class scala/Function1 ]
      LineNumberTable:
        line 49: 0
        line 50: 12
        line 57: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      81     3 queue   Ljava/util/concurrent/LinkedBlockingQueue;
           72      21     4    ll   Lscala/collection/immutable/LazyList;
            0      94     0  this   Lscala/sys/process/BasicIO$LazilyListed$;
            0      94     1 nonzeroException   Z
            0      94     2 capacity   Ljava/lang/Integer;
           31      31     5 unfold_f   Lscala/Function1;
           41      11     6 unfold_scala$collection$immutable$LazyList$$newLL_state   Lscala/Function0;
    Signature: #33                          // <T:Ljava/lang/Object;>(ZLjava/lang/Integer;)Lscala/sys/process/BasicIO$LazilyListed<TT;>;
    MethodParameters:
      Name                           Flags
      nonzeroException               final
      capacity                       final

  public static final scala.Option $anonfun$apply$1(boolean, java.util.concurrent.LinkedBlockingQueue);
    descriptor: (ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=10, args_size=2
         0: iconst_0
         1: istore_3
         2: aconst_null
         3: astore        4
         5: aload_1
         6: invokevirtual #132                // Method java/util/concurrent/LinkedBlockingQueue.take:()Ljava/lang/Object;
         9: checkcast     #134                // class scala/util/Either
        12: astore        5
        14: aload         5
        16: instanceof    #136                // class scala/util/Left
        19: ifeq          54
        22: iconst_1
        23: istore_3
        24: aload         5
        26: checkcast     #136                // class scala/util/Left
        29: astore        4
        31: aload         4
        33: invokevirtual #139                // Method scala/util/Left.value:()Ljava/lang/Object;
        36: invokestatic  #43                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        39: istore        6
        41: iconst_0
        42: iload         6
        44: if_icmpne     54
        47: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
        50: astore_2
        51: goto          166
        54: iload_3
        55: ifeq          117
        58: aload         4
        60: invokevirtual #139                // Method scala/util/Left.value:()Ljava/lang/Object;
        63: invokestatic  #43                 // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        66: istore        7
        68: iload_0
        69: ifeq          110
        72: getstatic     #149                // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
        75: pop
        76: new           #151                // class java/lang/StringBuilder
        79: dup
        80: ldc           #152                // int 19
        82: invokespecial #153                // Method java/lang/StringBuilder."<init>":(I)V
        85: ldc           #155                // String Nonzero exit code:
        87: invokevirtual #159                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: iload         7
        92: invokevirtual #162                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        95: invokevirtual #166                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        98: astore        9
       100: new           #168                // class java/lang/RuntimeException
       103: dup
       104: aload         9
       106: invokespecial #171                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       109: athrow
       110: getstatic     #144                // Field scala/None$.MODULE$:Lscala/None$;
       113: astore_2
       114: goto          166
       117: aload         5
       119: instanceof    #173                // class scala/util/Right
       122: ifeq          156
       125: aload         5
       127: checkcast     #173                // class scala/util/Right
       130: invokevirtual #174                // Method scala/util/Right.value:()Ljava/lang/Object;
       133: astore        8
       135: new           #176                // class scala/Some
       138: dup
       139: new           #178                // class scala/Tuple2
       142: dup
       143: aload         8
       145: aload_1
       146: invokespecial #181                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       149: invokespecial #184                // Method scala/Some."<init>":(Ljava/lang/Object;)V
       152: astore_2
       153: goto          166
       156: new           #186                // class scala/MatchError
       159: dup
       160: aload         5
       162: invokespecial #187                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       165: athrow
       166: aload_2
       167: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ int, class java/util/concurrent/LinkedBlockingQueue, top, int, class scala/util/Left, class scala/util/Either ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 55
          locals = [ top, int ]
        frame_type = 249 /* chop */
          offset_delta = 6
        frame_type = 38 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ int, class java/util/concurrent/LinkedBlockingQueue, class scala/Option, int, class scala/util/Left, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 51: 0
        line 52: 14
        line 53: 54
        line 54: 117
        line 51: 156
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           68      49     7  code   I
          135      21     8     s   Ljava/lang/Object;
            0     168     0 nonzeroException$1   Z
            0     168     1     q   Ljava/util/concurrent/LinkedBlockingQueue;
          100      10     9 error_message   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      nonzeroException$1             final
      q                              final

  public static final void $anonfun$apply$2(java.util.concurrent.LinkedBlockingQueue, java.lang.Object);
    descriptor: (Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: getstatic     #51                 // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #202                // Method scala/package$.Right:()Lscala/util/Right$;
         7: ifnonnull     12
        10: aconst_null
        11: athrow
        12: new           #173                // class scala/util/Right
        15: dup
        16: aload_1
        17: invokespecial #203                // Method scala/util/Right."<init>":(Ljava/lang/Object;)V
        20: invokevirtual #206                // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
        23: return
      StackMapTable: number_of_entries = 1
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/util/concurrent/LinkedBlockingQueue ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 queue$1   Ljava/util/concurrent/LinkedBlockingQueue;
            0      24     1     s   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      queue$1                        final
      s                              final

  public static final void $anonfun$apply$3(java.util.concurrent.LinkedBlockingQueue, int);
    descriptor: (Ljava/util/concurrent/LinkedBlockingQueue;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: getstatic     #51                 // Field scala/package$.MODULE$:Lscala/package$;
         4: invokevirtual #210                // Method scala/package$.Left:()Lscala/util/Left$;
         7: iload_1
         8: invokestatic  #216                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        11: astore_2
        12: aload_2
        13: aconst_null
        14: astore_2
        15: astore_3
        16: ifnonnull     21
        19: aconst_null
        20: athrow
        21: new           #136                // class scala/util/Left
        24: dup
        25: aload_3
        26: invokespecial #217                // Method scala/util/Left."<init>":(Ljava/lang/Object;)V
        29: aconst_null
        30: astore_3
        31: invokevirtual #206                // Method java/util/concurrent/LinkedBlockingQueue.put:(Ljava/lang/Object;)V
        34: return
      StackMapTable: number_of_entries = 1
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class java/util/concurrent/LinkedBlockingQueue, int, null, class java/lang/Integer ]
          stack = [ class java/util/concurrent/LinkedBlockingQueue ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 queue$1   Ljava/util/concurrent/LinkedBlockingQueue;
            0      35     1  code   I
           21       8     3 apply_value   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      queue$1                        final
      code                           final

  public scala.sys.process.BasicIO$LazilyListed$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #219                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 47: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/sys/process/BasicIO$LazilyListed$;

  public static final java.lang.Object $anonfun$apply$2$adapted(java.util.concurrent.LinkedBlockingQueue, java.lang.Object);
    descriptor: (Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #221                // Method $anonfun$apply$2:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)V
         5: getstatic     #227                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         8: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 queue$1   Ljava/util/concurrent/LinkedBlockingQueue;
            0       9     1     s   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      queue$1                        final
      s                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #239,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  private static #15= #12 of #14;         // State=class scala/collection/immutable/LazyList$State of class scala/collection/immutable/LazyList
  public static final #20= #17 of #19;    // LazilyListed=class scala/sys/process/BasicIO$LazilyListed of class scala/sys/process/BasicIO
  public static #21= #2 of #19;           // LazilyListed$=class scala/sys/process/BasicIO$LazilyListed$ of class scala/sys/process/BasicIO
SourceFile: "BasicIO.scala"
BootstrapMethods:
  0: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #62 REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$1:(ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
      #64 (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
      #65 5
      #66 1
      #64 (Ljava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
  1: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #78 ()Ljava/lang/Object;
      #85 REF_invokeStatic scala/collection/immutable/LazyList$.$anonfun$unfold$1:(Lscala/Function1;Ljava/lang/Object;)Lscala/collection/immutable/LazyList$State;
      #87 ()Lscala/collection/immutable/LazyList$State;
      #65 5
      #66 1
      #87 ()Lscala/collection/immutable/LazyList$State;
  2: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #98 REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$2$adapted:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
      #57 (Ljava/lang/Object;)Ljava/lang/Object;
      #66 1
  3: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #102 (I)V
      #107 REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$3:(Ljava/util/concurrent/LinkedBlockingQueue;I)V
      #102 (I)V
      #66 1
  4: #236 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #85 REF_invokeStatic scala/collection/immutable/LazyList$.$anonfun$unfold$1:(Lscala/Function1;Ljava/lang/Object;)Lscala/collection/immutable/LazyList$State;
      #62 REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$1:(ZLjava/util/concurrent/LinkedBlockingQueue;)Lscala/Option;
      #98 REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$2$adapted:(Ljava/util/concurrent/LinkedBlockingQueue;Ljava/lang/Object;)Ljava/lang/Object;
      #107 REF_invokeStatic scala/sys/process/BasicIO$LazilyListed$.$anonfun$apply$3:(Ljava/util/concurrent/LinkedBlockingQueue;I)V
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 3A 00 3B 01 00 C4 00 C5 01 00 5E
   00 5F 01 00 67 00 68 01 00 1A 00 19 01 00 1F 00
   20 01
  Scala: length = 0x0 (unknown attribute)

