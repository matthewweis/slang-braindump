Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/TheMacros.class
  Last modified May 29, 2022; size 12844 bytes
  SHA-256 checksum c8ed6aff524d0dada779ee7dfba5a3a42e6866d2a60ddeab7916c31cbff2e24d
  Compiled from "typeoperators.scala"
public class shapeless.TheMacros
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/TheMacros
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 12, attributes: 6
Constant pool:
    #1 = Utf8               shapeless/TheMacros
    #2 = Class              #1            // shapeless/TheMacros
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               typeoperators.scala
    #6 = Utf8               Lscala/reflect/ScalaSignature;
    #7 = Utf8               bytes
    #8 = Utf8               \u0006\u0005i2AAB\u0004\u0001\u0015!A\u0011\u0003\u0001BC\u0002\u0013\u0005!\u0003\u0003\u0005\u001e\u0001\t\u0005\t\u0015!\u0003\u0014\u0011\u0015q\u0002\u0001\"\u0001 \u0011\u0015\u0019\u0003\u0001\"\u0001%\u0011\u00151\u0004\u0001\"\u00018\u0005%!\u0006.Z\'bGJ|7OC\u0001\t\u0003%\u0019\b.\u00199fY\u0016\u001c8o\u0001\u0001\u0014\u0005\u0001Y\u0001C\u0001\u0007\u0010\u001b\u0005i!\"\u0001\b\u0002\u000bM\u001c\u0017\r\\1\n\u0005Ai!AB!osJ+g-A\u0001d+\u0005\u0019\u0002C\u0001\u000b\u001c\u001b\u0005)\"B\u0001\f\u0018\u0003!9\b.\u001b;fE>D(B\u0001\r\u001a\u0003\u0019i\u0017m\u0019:pg*\u0011!$D\u0001\be\u00164G.Z2u\u0013\taRCA\u0004D_:$X\r\u001f;\u0002\u0005\r\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002!EA\u0011\u0011\u0005A\u0007\u0002\u000f!)\u0011c\u0001a\u0001\'\u0005I\u0011\r\u001d9ms&k\u0007\u000f\u001c\u000b\u0003KQ\u0002\"A\n\u0018\u000f\u0005\u001dJcB\u0001\u0015\u0002\u001b\u0005\u0001\u0011B\u0001\u0016,\u0003!)h.\u001b<feN,\u0017B\u0001\u000f-\u0015\tis#\u0001\u0005cY\u0006\u001c7NY8y\u0013\ty\u0003G\u0001\u0003Ue\u0016,\u0017BA\u00193\u0005\u0015!&/Z3t\u0015\t\u0019\u0014$A\u0002ba&DQ!\u000e\u0003A\u0002\u0015\n\u0011\u0001^\u0001\u000fS6\u0004H.[2ji2L\u0018*\u001c9m)\t)\u0003\bC\u0003:\u000b\u0001\u0007Q%A\u0006ua\u0016\u001cV\r\\3di>\u0014\b
    #9 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #10 = Class              #9            // java/lang/invoke/MethodHandles$Lookup
   #11 = Utf8               java/lang/invoke/MethodHandles
   #12 = Class              #11           // java/lang/invoke/MethodHandles
   #13 = Utf8               Lookup
   #14 = Utf8               scala/Option$WithFilter
   #15 = Class              #14           // scala/Option$WithFilter
   #16 = Utf8               scala/Option
   #17 = Class              #16           // scala/Option
   #18 = Utf8               WithFilter
   #19 = Utf8               scala/reflect/api/Constants$ConstantApi
   #20 = Class              #19           // scala/reflect/api/Constants$ConstantApi
   #21 = Utf8               scala/reflect/api/Constants
   #22 = Class              #21           // scala/reflect/api/Constants
   #23 = Utf8               ConstantApi
   #24 = Utf8               scala/reflect/api/Constants$ConstantExtractor
   #25 = Class              #24           // scala/reflect/api/Constants$ConstantExtractor
   #26 = Utf8               ConstantExtractor
   #27 = Utf8               scala/reflect/api/Internals$InternalApi
   #28 = Class              #27           // scala/reflect/api/Internals$InternalApi
   #29 = Utf8               scala/reflect/api/Internals
   #30 = Class              #29           // scala/reflect/api/Internals
   #31 = Utf8               InternalApi
   #32 = Utf8               scala/reflect/api/Internals$InternalApi$DecoratorApi
   #33 = Class              #32           // scala/reflect/api/Internals$InternalApi$DecoratorApi
   #34 = Utf8               DecoratorApi
   #35 = Utf8               scala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi
   #36 = Class              #35           // scala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi
   #37 = Utf8               TreeDecoratorApi
   #38 = Utf8               scala/reflect/api/Internals$ReificationSupportApi
   #39 = Class              #38           // scala/reflect/api/Internals$ReificationSupportApi
   #40 = Utf8               ReificationSupportApi
   #41 = Utf8               scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor
   #42 = Class              #41           // scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor
   #43 = Utf8               SyntacticSelectTermExtractor
   #44 = Utf8               scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor
   #45 = Class              #44           // scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor
   #46 = Utf8               SyntacticTermIdentExtractor
   #47 = Utf8               scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor
   #48 = Class              #47           // scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor
   #49 = Utf8               SyntacticTypeAppliedExtractor
   #50 = Utf8               scala/reflect/api/Liftables$Liftable
   #51 = Class              #50           // scala/reflect/api/Liftables$Liftable
   #52 = Utf8               scala/reflect/api/Liftables
   #53 = Class              #52           // scala/reflect/api/Liftables
   #54 = Utf8               Liftable
   #55 = Utf8               scala/reflect/api/Liftables$Liftable$
   #56 = Class              #55           // scala/reflect/api/Liftables$Liftable$
   #57 = Utf8               Liftable$
   #58 = Utf8               scala/reflect/api/Names$TermNameApi
   #59 = Class              #58           // scala/reflect/api/Names$TermNameApi
   #60 = Utf8               scala/reflect/api/Names
   #61 = Class              #60           // scala/reflect/api/Names
   #62 = Utf8               TermNameApi
   #63 = Utf8               scala/reflect/api/Names$TermNameExtractor
   #64 = Class              #63           // scala/reflect/api/Names$TermNameExtractor
   #65 = Utf8               TermNameExtractor
   #66 = Utf8               scala/reflect/api/Names$TypeNameApi
   #67 = Class              #66           // scala/reflect/api/Names$TypeNameApi
   #68 = Utf8               TypeNameApi
   #69 = Utf8               scala/reflect/api/Symbols$ClassSymbolApi
   #70 = Class              #69           // scala/reflect/api/Symbols$ClassSymbolApi
   #71 = Utf8               scala/reflect/api/Symbols
   #72 = Class              #71           // scala/reflect/api/Symbols
   #73 = Utf8               ClassSymbolApi
   #74 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #75 = Class              #74           // scala/reflect/api/Symbols$SymbolApi
   #76 = Utf8               SymbolApi
   #77 = Utf8               scala/reflect/api/Trees$IdentApi
   #78 = Class              #77           // scala/reflect/api/Trees$IdentApi
   #79 = Utf8               scala/reflect/api/Trees
   #80 = Class              #79           // scala/reflect/api/Trees
   #81 = Utf8               IdentApi
   #82 = Utf8               scala/reflect/api/Trees$LiteralApi
   #83 = Class              #82           // scala/reflect/api/Trees$LiteralApi
   #84 = Utf8               LiteralApi
   #85 = Utf8               scala/reflect/api/Trees$LiteralExtractor
   #86 = Class              #85           // scala/reflect/api/Trees$LiteralExtractor
   #87 = Utf8               LiteralExtractor
   #88 = Utf8               scala/reflect/api/Trees$SelectApi
   #89 = Class              #88           // scala/reflect/api/Trees$SelectApi
   #90 = Utf8               SelectApi
   #91 = Utf8               scala/reflect/api/Trees$TreeApi
   #92 = Class              #91           // scala/reflect/api/Trees$TreeApi
   #93 = Utf8               TreeApi
   #94 = Utf8               scala/reflect/api/Types$TypeApi
   #95 = Class              #94           // scala/reflect/api/Types$TypeApi
   #96 = Utf8               scala/reflect/api/Types
   #97 = Class              #96           // scala/reflect/api/Types
   #98 = Utf8               TypeApi
   #99 = Utf8               scala/reflect/macros/Universe$MacroInternalApi
  #100 = Class              #99           // scala/reflect/macros/Universe$MacroInternalApi
  #101 = Utf8               scala/reflect/macros/Universe
  #102 = Class              #101          // scala/reflect/macros/Universe
  #103 = Utf8               MacroInternalApi
  #104 = Utf8               scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi
  #105 = Class              #104          // scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi
  #106 = Utf8               MacroDecoratorApi
  #107 = Utf8               scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi
  #108 = Class              #107          // scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi
  #109 = Utf8               MacroTreeDecoratorApi
  #110 = Utf8               shapeless/TheMacros$$anon$1
  #111 = Class              #110          // shapeless/TheMacros$$anon$1
  #112 = Utf8               shapeless/TheMacros$$anon$2
  #113 = Class              #112          // shapeless/TheMacros$$anon$2
  #114 = Utf8               c
  #115 = Utf8               Lscala/reflect/macros/whitebox/Context;
  #116 = Utf8               ()Lscala/reflect/macros/whitebox/Context;
  #117 = NameAndType        #114:#115     // c:Lscala/reflect/macros/whitebox/Context;
  #118 = Fieldref           #2.#117       // shapeless/TheMacros.c:Lscala/reflect/macros/whitebox/Context;
  #119 = Utf8               this
  #120 = Utf8               Lshapeless/TheMacros;
  #121 = Utf8               applyImpl
  #122 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
  #123 = Utf8               t
  #124 = Utf8               Lscala/reflect/api/Trees$TreeApi;
  #125 = Utf8               implicitlyImpl
  #126 = Utf8               tpeSelector
  #127 = Utf8               <init>
  #128 = Utf8               (Lshapeless/TheMacros;)V
  #129 = NameAndType        #127:#128     // "<init>":(Lshapeless/TheMacros;)V
  #130 = Methodref          #111.#129     // shapeless/TheMacros$$anon$1."<init>":(Lshapeless/TheMacros;)V
  #131 = Utf8               unapply
  #132 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #133 = NameAndType        #131:#132     // unapply:(Ljava/lang/Object;)Lscala/Option;
  #134 = Methodref          #111.#133     // shapeless/TheMacros$$anon$1.unapply:(Ljava/lang/Object;)Lscala/Option;
  #135 = Utf8               isEmpty
  #136 = Utf8               ()Z
  #137 = NameAndType        #135:#136     // isEmpty:()Z
  #138 = Methodref          #17.#137      // scala/Option.isEmpty:()Z
  #139 = Utf8               get
  #140 = Utf8               ()Ljava/lang/Object;
  #141 = NameAndType        #139:#140     // get:()Ljava/lang/Object;
  #142 = Methodref          #17.#141      // scala/Option.get:()Ljava/lang/Object;
  #143 = Utf8               java/lang/String
  #144 = Class              #143          // java/lang/String
  #145 = Utf8               scala/MatchError
  #146 = Class              #145          // scala/MatchError
  #147 = Utf8               (Ljava/lang/Object;)V
  #148 = NameAndType        #127:#147     // "<init>":(Ljava/lang/Object;)V
  #149 = Methodref          #146.#148     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #150 = NameAndType        #114:#116     // c:()Lscala/reflect/macros/whitebox/Context;
  #151 = Methodref          #2.#150       // shapeless/TheMacros.c:()Lscala/reflect/macros/whitebox/Context;
  #152 = Utf8               scala/reflect/macros/whitebox/Context
  #153 = Class              #152          // scala/reflect/macros/whitebox/Context
  #154 = Utf8               freshName
  #155 = Utf8               ()Ljava/lang/String;
  #156 = NameAndType        #154:#155     // freshName:()Ljava/lang/String;
  #157 = InterfaceMethodref #153.#156     // scala/reflect/macros/whitebox/Context.freshName:()Ljava/lang/String;
  #158 = Utf8               scala/util/Try$
  #159 = Class              #158          // scala/util/Try$
  #160 = Utf8               MODULE$
  #161 = Utf8               Lscala/util/Try$;
  #162 = NameAndType        #160:#161     // MODULE$:Lscala/util/Try$;
  #163 = Fieldref           #159.#162     // scala/util/Try$.MODULE$:Lscala/util/Try$;
  #164 = MethodType         #140          //  ()Ljava/lang/Object;
  #165 = Utf8               $anonfun$implicitlyImpl$1
  #166 = Utf8               (Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #167 = NameAndType        #165:#166     // $anonfun$implicitlyImpl$1:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #168 = Methodref          #2.#167       // shapeless/TheMacros.$anonfun$implicitlyImpl$1:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #169 = MethodHandle       6:#168        // REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$1:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #170 = Utf8               ()Lscala/reflect/api/Trees$TreeApi;
  #171 = MethodType         #170          //  ()Lscala/reflect/api/Trees$TreeApi;
  #172 = Integer            5
  #173 = Integer            1
  #174 = Utf8               java/lang/invoke/LambdaMetafactory
  #175 = Class              #174          // java/lang/invoke/LambdaMetafactory
  #176 = Utf8               altMetafactory
  #177 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #178 = NameAndType        #176:#177     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #179 = Methodref          #175.#178     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #180 = MethodHandle       6:#179        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #181 = Utf8               apply
  #182 = Utf8               (Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/Function0;
  #183 = NameAndType        #181:#182     // apply:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/Function0;
  #184 = InvokeDynamic      #0:#183       // #0:apply:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/Function0;
  #185 = Utf8               (Lscala/Function0;)Lscala/util/Try;
  #186 = NameAndType        #181:#185     // apply:(Lscala/Function0;)Lscala/util/Try;
  #187 = Methodref          #159.#186     // scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
  #188 = Utf8               scala/util/Try
  #189 = Class              #188          // scala/util/Try
  #190 = Utf8               toOption
  #191 = Utf8               ()Lscala/Option;
  #192 = NameAndType        #190:#191     // toOption:()Lscala/Option;
  #193 = Methodref          #189.#192     // scala/util/Try.toOption:()Lscala/Option;
  #194 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #195 = MethodType         #194          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #196 = Utf8               $anonfun$implicitlyImpl$2
  #197 = Utf8               (Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  #198 = NameAndType        #196:#197     // $anonfun$implicitlyImpl$2:(Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  #199 = Methodref          #2.#198       // shapeless/TheMacros.$anonfun$implicitlyImpl$2:(Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  #200 = MethodHandle       6:#199        // REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$2:(Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  #201 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  #202 = MethodType         #201          //  (Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  #203 = Utf8               (Lshapeless/TheMacros;)Lscala/Function1;
  #204 = NameAndType        #181:#203     // apply:(Lshapeless/TheMacros;)Lscala/Function1;
  #205 = InvokeDynamic      #1:#204       // #1:apply:(Lshapeless/TheMacros;)Lscala/Function1;
  #206 = Utf8               map
  #207 = Utf8               (Lscala/Function1;)Lscala/Option;
  #208 = NameAndType        #206:#207     // map:(Lscala/Function1;)Lscala/Option;
  #209 = Methodref          #17.#208      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #210 = Utf8               $anonfun$implicitlyImpl$3$adapted
  #211 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #212 = NameAndType        #210:#211     // $anonfun$implicitlyImpl$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #213 = Methodref          #2.#212       // shapeless/TheMacros.$anonfun$implicitlyImpl$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #214 = MethodHandle       6:#213        // REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #215 = MethodType         #211          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #216 = Utf8               ()Lscala/Function1;
  #217 = NameAndType        #181:#216     // apply:()Lscala/Function1;
  #218 = InvokeDynamic      #2:#217       // #2:apply:()Lscala/Function1;
  #219 = Utf8               withFilter
  #220 = Utf8               (Lscala/Function1;)Lscala/Option$WithFilter;
  #221 = NameAndType        #219:#220     // withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #222 = Methodref          #17.#221      // scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
  #223 = Utf8               $anonfun$implicitlyImpl$4
  #224 = Utf8               (Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #225 = NameAndType        #223:#224     // $anonfun$implicitlyImpl$4:(Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #226 = Methodref          #2.#225       // shapeless/TheMacros.$anonfun$implicitlyImpl$4:(Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #227 = MethodHandle       6:#226        // REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$4:(Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #228 = Utf8               (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #229 = MethodType         #228          //  (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  #230 = InvokeDynamic      #3:#204       // #3:apply:(Lshapeless/TheMacros;)Lscala/Function1;
  #231 = Methodref          #15.#208      // scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
  #232 = Utf8               $anonfun$implicitlyImpl$5
  #233 = Utf8               (Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #234 = NameAndType        #232:#233     // $anonfun$implicitlyImpl$5:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #235 = Methodref          #2.#234       // shapeless/TheMacros.$anonfun$implicitlyImpl$5:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #236 = MethodHandle       6:#235        // REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$5:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #237 = Utf8               ()Lscala/runtime/Nothing$;
  #238 = MethodType         #237          //  ()Lscala/runtime/Nothing$;
  #239 = Utf8               (Lshapeless/TheMacros;Ljava/lang/String;)Lscala/Function0;
  #240 = NameAndType        #181:#239     // apply:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/Function0;
  #241 = InvokeDynamic      #4:#240       // #4:apply:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/Function0;
  #242 = Utf8               getOrElse
  #243 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #244 = NameAndType        #242:#243     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #245 = Methodref          #17.#244      // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #246 = Utf8               typeSymbol
  #247 = Utf8               ()Lscala/reflect/api/Symbols$SymbolApi;
  #248 = NameAndType        #246:#247     // typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
  #249 = Methodref          #95.#248      // scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
  #250 = Utf8               asClass
  #251 = Utf8               ()Lscala/reflect/api/Symbols$ClassSymbolApi;
  #252 = NameAndType        #250:#251     // asClass:()Lscala/reflect/api/Symbols$ClassSymbolApi;
  #253 = InterfaceMethodref #75.#252      // scala/reflect/api/Symbols$SymbolApi.asClass:()Lscala/reflect/api/Symbols$ClassSymbolApi;
  #254 = Utf8               isPrimitive
  #255 = NameAndType        #254:#136     // isPrimitive:()Z
  #256 = InterfaceMethodref #70.#255      // scala/reflect/api/Symbols$ClassSymbolApi.isPrimitive:()Z
  #257 = Utf8               enclosingPosition
  #258 = Utf8               ()Lscala/reflect/api/Position;
  #259 = NameAndType        #257:#258     // enclosingPosition:()Lscala/reflect/api/Position;
  #260 = InterfaceMethodref #153.#259     // scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
  #261 = Utf8               java/lang/StringBuilder
  #262 = Class              #261          // java/lang/StringBuilder
  #263 = Integer            47
  #264 = Utf8               (I)V
  #265 = NameAndType        #127:#264     // "<init>":(I)V
  #266 = Methodref          #262.#265     // java/lang/StringBuilder."<init>":(I)V
  #267 = Utf8               Primitive type
  #268 = String             #267          // Primitive type
  #269 = Utf8               append
  #270 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #271 = NameAndType        #269:#270     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #272 = Methodref          #262.#271     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #273 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #274 = NameAndType        #269:#273     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #275 = Methodref          #262.#274     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #276 = Utf8                may not be used in this context
  #277 = String             #276          //  may not be used in this context
  #278 = Utf8               toString
  #279 = NameAndType        #278:#155     // toString:()Ljava/lang/String;
  #280 = Methodref          #262.#279     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #281 = Utf8               abort
  #282 = Utf8               (Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #283 = NameAndType        #281:#282     // abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #284 = InterfaceMethodref #153.#283     // scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
  #285 = Utf8               $anonfun$implicitlyImpl$6
  #286 = Utf8               (Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #287 = NameAndType        #285:#286     // $anonfun$implicitlyImpl$6:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #288 = Methodref          #2.#287       // shapeless/TheMacros.$anonfun$implicitlyImpl$6:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #289 = MethodHandle       6:#288        // REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$6:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #290 = Utf8               (Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/Function0;
  #291 = NameAndType        #181:#290     // apply:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/Function0;
  #292 = InvokeDynamic      #5:#291       // #5:apply:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/Function0;
  #293 = Utf8               scala/util/Success
  #294 = Class              #293          // scala/util/Success
  #295 = Utf8               value
  #296 = NameAndType        #295:#140     // value:()Ljava/lang/Object;
  #297 = Methodref          #294.#296     // scala/util/Success.value:()Ljava/lang/Object;
  #298 = Utf8               universe
  #299 = Utf8               ()Lscala/reflect/macros/Universe;
  #300 = NameAndType        #298:#299     // universe:()Lscala/reflect/macros/Universe;
  #301 = InterfaceMethodref #153.#300     // scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
  #302 = Utf8               internal
  #303 = Utf8               ()Lscala/reflect/api/Internals$InternalApi;
  #304 = NameAndType        #302:#303     // internal:()Lscala/reflect/api/Internals$InternalApi;
  #305 = Methodref          #102.#304     // scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
  #306 = Utf8               decorators
  #307 = Utf8               ()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
  #308 = NameAndType        #306:#307     // decorators:()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
  #309 = InterfaceMethodref #28.#308      // scala/reflect/api/Internals$InternalApi.decorators:()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
  #310 = Utf8               Literal
  #311 = Utf8               ()Lscala/reflect/api/Trees$LiteralExtractor;
  #312 = NameAndType        #310:#311     // Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #313 = Methodref          #102.#312     // scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
  #314 = Utf8               Constant
  #315 = Utf8               ()Lscala/reflect/api/Constants$ConstantExtractor;
  #316 = NameAndType        #314:#315     // Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
  #317 = Methodref          #102.#316     // scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
  #318 = Utf8               scala/runtime/BoxedUnit
  #319 = Class              #318          // scala/runtime/BoxedUnit
  #320 = Utf8               UNIT
  #321 = Utf8               Lscala/runtime/BoxedUnit;
  #322 = NameAndType        #320:#321     // UNIT:Lscala/runtime/BoxedUnit;
  #323 = Fieldref           #319.#322     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #324 = Utf8               (Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #325 = NameAndType        #181:#324     // apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #326 = Methodref          #25.#325      // scala/reflect/api/Constants$ConstantExtractor.apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
  #327 = Utf8               (Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #328 = NameAndType        #181:#327     // apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #329 = Methodref          #86.#328      // scala/reflect/api/Trees$LiteralExtractor.apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
  #330 = Utf8               treeDecorator
  #331 = Utf8               (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
  #332 = NameAndType        #330:#331     // treeDecorator:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
  #333 = InterfaceMethodref #33.#332      // scala/reflect/api/Internals$InternalApi$DecoratorApi.treeDecorator:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
  #334 = Utf8               tpe
  #335 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #336 = NameAndType        #334:#335     // tpe:()Lscala/reflect/api/Types$TypeApi;
  #337 = InterfaceMethodref #92.#336      // scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
  #338 = Utf8               setType
  #339 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #340 = NameAndType        #338:#339     // setType:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #341 = Methodref          #108.#340     // scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi.setType:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  #342 = Utf8               scala/util/Failure
  #343 = Class              #342          // scala/util/Failure
  #344 = Utf8               exception
  #345 = Utf8               ()Ljava/lang/Throwable;
  #346 = NameAndType        #344:#345     // exception:()Ljava/lang/Throwable;
  #347 = Methodref          #343.#346     // scala/util/Failure.exception:()Ljava/lang/Throwable;
  #348 = Utf8               java/lang/Throwable
  #349 = Class              #348          // java/lang/Throwable
  #350 = Utf8               getMessage
  #351 = NameAndType        #350:#155     // getMessage:()Ljava/lang/String;
  #352 = Methodref          #349.#351     // java/lang/Throwable.getMessage:()Ljava/lang/String;
  #353 = Utf8               tpeString
  #354 = Utf8               Ljava/lang/String;
  #355 = Utf8               x
  #356 = Utf8               e
  #357 = Utf8               Ljava/lang/Throwable;
  #358 = Utf8               dummyNme
  #359 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #360 = Utf8               $this
  #361 = Utf8               dummyNme$1
  #362 = Utf8               tpeString$1
  #363 = Integer            2
  #364 = Integer            10
  #365 = Utf8               { type
  #366 = String             #365          // { type
  #367 = Utf8                =
  #368 = String             #367          //  =
  #369 = Utf8                }
  #370 = String             #369          //  }
  #371 = Utf8               parse
  #372 = Utf8               (Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #373 = NameAndType        #371:#372     // parse:(Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #374 = InterfaceMethodref #153.#373     // scala/reflect/macros/whitebox/Context.parse:(Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
  #375 = Utf8               parsed
  #376 = Utf8               typecheck$default$2
  #377 = NameAndType        #376:#140     // typecheck$default$2:()Ljava/lang/Object;
  #378 = InterfaceMethodref #153.#377     // scala/reflect/macros/whitebox/Context.typecheck$default$2:()Ljava/lang/Object;
  #379 = Utf8               typecheck$default$3
  #380 = NameAndType        #379:#335     // typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
  #381 = InterfaceMethodref #153.#380     // scala/reflect/macros/whitebox/Context.typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
  #382 = Utf8               typecheck$default$5
  #383 = NameAndType        #382:#136     // typecheck$default$5:()Z
  #384 = InterfaceMethodref #153.#383     // scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
  #385 = Utf8               typecheck$default$6
  #386 = NameAndType        #385:#136     // typecheck$default$6:()Z
  #387 = InterfaceMethodref #153.#386     // scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
  #388 = Utf8               typecheck
  #389 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #390 = NameAndType        #388:#389     // typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #391 = InterfaceMethodref #153.#390     // scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
  #392 = Utf8               scala/Tuple2
  #393 = Class              #392          // scala/Tuple2
  #394 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #395 = NameAndType        #127:#394     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #396 = Methodref          #393.#395     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #397 = Utf8               x$1
  #398 = Utf8               x$2
  #399 = Utf8               Z
  #400 = Utf8               x$3
  #401 = Utf8               Ljava/lang/Object;
  #402 = Utf8               x$4
  #403 = Utf8               x$5
  #404 = Utf8               x$6
  #405 = Utf8               checked
  #406 = Utf8               $anonfun$implicitlyImpl$3
  #407 = Utf8               (Lscala/Tuple2;)Z
  #408 = Utf8               _2
  #409 = NameAndType        #408:#140     // _2:()Ljava/lang/Object;
  #410 = Methodref          #393.#409     // scala/Tuple2._2:()Ljava/lang/Object;
  #411 = Utf8               nonEmpty
  #412 = NameAndType        #411:#136     // nonEmpty:()Z
  #413 = InterfaceMethodref #92.#412      // scala/reflect/api/Trees$TreeApi.nonEmpty:()Z
  #414 = Utf8               Lscala/Tuple2;
  #415 = Methodref          #113.#129     // shapeless/TheMacros$$anon$2."<init>":(Lshapeless/TheMacros;)V
  #416 = Methodref          #113.#133     // shapeless/TheMacros$$anon$2.unapply:(Ljava/lang/Object;)Lscala/Option;
  #417 = Utf8               _1
  #418 = NameAndType        #417:#140     // _1:()Ljava/lang/Object;
  #419 = Methodref          #393.#418     // scala/Tuple2._1:()Ljava/lang/Object;
  #420 = Utf8               Lscala/reflect/api/Names$TypeNameApi;
  #421 = Utf8               tpt
  #422 = Integer            15
  #423 = Utf8               Malformed type
  #424 = String             #423          // Malformed type
  #425 = Utf8               tpe$1
  #426 = Utf8               reificationSupport
  #427 = Utf8               ()Lscala/reflect/api/Internals$ReificationSupportApi;
  #428 = NameAndType        #426:#427     // reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
  #429 = InterfaceMethodref #28.#428      // scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
  #430 = Utf8               SyntacticTypeApplied
  #431 = Utf8               ()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor;
  #432 = NameAndType        #430:#431     // SyntacticTypeApplied:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor;
  #433 = InterfaceMethodref #39.#432      // scala/reflect/api/Internals$ReificationSupportApi.SyntacticTypeApplied:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor;
  #434 = Utf8               SyntacticSelectTerm
  #435 = Utf8               ()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor;
  #436 = NameAndType        #434:#435     // SyntacticSelectTerm:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor;
  #437 = InterfaceMethodref #39.#436      // scala/reflect/api/Internals$ReificationSupportApi.SyntacticSelectTerm:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor;
  #438 = Utf8               SyntacticTermIdent
  #439 = Utf8               ()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor;
  #440 = NameAndType        #438:#439     // SyntacticTermIdent:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor;
  #441 = InterfaceMethodref #39.#440      // scala/reflect/api/Internals$ReificationSupportApi.SyntacticTermIdent:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor;
  #442 = Utf8               TermName
  #443 = Utf8               ()Lscala/reflect/api/Names$TermNameExtractor;
  #444 = NameAndType        #442:#443     // TermName:()Lscala/reflect/api/Names$TermNameExtractor;
  #445 = Methodref          #102.#444     // scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
  #446 = Utf8               _root_
  #447 = String             #446          // _root_
  #448 = Utf8               (Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #449 = NameAndType        #181:#448     // apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #450 = Methodref          #64.#449      // scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
  #451 = Utf8               (Lscala/reflect/api/Names$TermNameApi;Z)Lscala/reflect/api/Trees$IdentApi;
  #452 = NameAndType        #181:#451     // apply:(Lscala/reflect/api/Names$TermNameApi;Z)Lscala/reflect/api/Trees$IdentApi;
  #453 = InterfaceMethodref #45.#452      // scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor.apply:(Lscala/reflect/api/Names$TermNameApi;Z)Lscala/reflect/api/Trees$IdentApi;
  #454 = Utf8               shapeless
  #455 = String             #454          // shapeless
  #456 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$TermNameApi;)Lscala/reflect/api/Trees$SelectApi;
  #457 = NameAndType        #181:#456     // apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$TermNameApi;)Lscala/reflect/api/Trees$SelectApi;
  #458 = InterfaceMethodref #42.#457      // scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$TermNameApi;)Lscala/reflect/api/Trees$SelectApi;
  #459 = Utf8               the
  #460 = String             #459          // the
  #461 = String             #181          // apply
  #462 = Utf8               scala/collection/immutable/$colon$colon
  #463 = Class              #462          // scala/collection/immutable/$colon$colon
  #464 = Utf8               ()Lscala/reflect/api/Liftables$Liftable$;
  #465 = NameAndType        #54:#464      // Liftable:()Lscala/reflect/api/Liftables$Liftable$;
  #466 = Methodref          #102.#465     // scala/reflect/macros/Universe.Liftable:()Lscala/reflect/api/Liftables$Liftable$;
  #467 = Utf8               liftType
  #468 = Utf8               ()Lscala/reflect/api/Liftables$Liftable;
  #469 = NameAndType        #467:#468     // liftType:()Lscala/reflect/api/Liftables$Liftable;
  #470 = Methodref          #56.#469      // scala/reflect/api/Liftables$Liftable$.liftType:()Lscala/reflect/api/Liftables$Liftable;
  #471 = Utf8               (Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
  #472 = NameAndType        #181:#471     // apply:(Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
  #473 = InterfaceMethodref #51.#472      // scala/reflect/api/Liftables$Liftable.apply:(Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
  #474 = Utf8               scala/collection/immutable/Nil$
  #475 = Class              #474          // scala/collection/immutable/Nil$
  #476 = Utf8               Lscala/collection/immutable/Nil$;
  #477 = NameAndType        #160:#476     // MODULE$:Lscala/collection/immutable/Nil$;
  #478 = Fieldref           #475.#477     // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
  #479 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #480 = NameAndType        #127:#479     // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #481 = Methodref          #463.#480     // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
  #482 = Utf8               scala/collection/immutable/List
  #483 = Class              #482          // scala/collection/immutable/List
  #484 = Utf8               (Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$TreeApi;
  #485 = NameAndType        #181:#484     // apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$TreeApi;
  #486 = InterfaceMethodref #48.#485      // scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$TreeApi;
  #487 = Utf8               typecheck$default$4
  #488 = NameAndType        #487:#136     // typecheck$default$4:()Z
  #489 = InterfaceMethodref #153.#488     // scala/reflect/macros/whitebox/Context.typecheck$default$4:()Z
  #490 = Utf8               (Lscala/reflect/macros/whitebox/Context;)V
  #491 = Utf8               ()V
  #492 = NameAndType        #127:#491     // "<init>":()V
  #493 = Methodref          #4.#492       // java/lang/Object."<init>":()V
  #494 = NameAndType        #406:#407     // $anonfun$implicitlyImpl$3:(Lscala/Tuple2;)Z
  #495 = Methodref          #2.#494       // shapeless/TheMacros.$anonfun$implicitlyImpl$3:(Lscala/Tuple2;)Z
  #496 = Utf8               scala/runtime/BoxesRunTime
  #497 = Class              #496          // scala/runtime/BoxesRunTime
  #498 = Utf8               boxToBoolean
  #499 = Utf8               (Z)Ljava/lang/Boolean;
  #500 = NameAndType        #498:#499     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #501 = Methodref          #497.#500     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #502 = Utf8               $deserializeLambda$
  #503 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #504 = Utf8               scala/runtime/LambdaDeserialize
  #505 = Class              #504          // scala/runtime/LambdaDeserialize
  #506 = Utf8               bootstrap
  #507 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #508 = NameAndType        #506:#507     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #509 = Methodref          #505.#508     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #510 = MethodHandle       6:#509        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #511 = Utf8               lambdaDeserialize
  #512 = NameAndType        #511:#503     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #513 = InvokeDynamic      #6:#512       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #514 = Utf8               Code
  #515 = Utf8               LineNumberTable
  #516 = Utf8               LocalVariableTable
  #517 = Utf8               MethodParameters
  #518 = Utf8               StackMapTable
  #519 = Utf8               InnerClasses
  #520 = Utf8               SourceFile
  #521 = Utf8               RuntimeVisibleAnnotations
  #522 = Utf8               BootstrapMethods
  #523 = Utf8               ScalaInlineInfo
  #524 = Utf8               ScalaSig
{
  private final scala.reflect.macros.whitebox.Context c;
    descriptor: Lscala/reflect/macros/whitebox/Context;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public scala.reflect.macros.whitebox.Context c();
    descriptor: ()Lscala/reflect/macros/whitebox/Context;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #118                // Field c:Lscala/reflect/macros/whitebox/Context;
         4: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lshapeless/TheMacros;

  public scala.reflect.api.Trees$TreeApi applyImpl(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lshapeless/TheMacros;
            0       2     1     t   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      t                              final

  public scala.reflect.api.Trees$TreeApi implicitlyImpl(scala.reflect.api.Trees$TreeApi);
    descriptor: (Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=16, args_size=2
         0: aload_1
         1: astore        5
         3: aload         5
         5: ifnull        62
         8: new           #111                // class shapeless/TheMacros$$anon$1
        11: dup
        12: aload_0
        13: invokespecial #130                // Method shapeless/TheMacros$$anon$1."<init>":(Lshapeless/TheMacros;)V
        16: aload         5
        18: invokevirtual #134                // Method shapeless/TheMacros$$anon$1.unapply:(Ljava/lang/Object;)Lscala/Option;
        21: astore        6
        23: aload         6
        25: invokevirtual #138                // Method scala/Option.isEmpty:()Z
        28: ifne          59
        31: aload         6
        33: invokevirtual #142                // Method scala/Option.get:()Ljava/lang/Object;
        36: checkcast     #144                // class java/lang/String
        39: astore        7
        41: aload         7
        43: ifnull        56
        46: aload         7
        48: astore        8
        50: aload         8
        52: astore_3
        53: goto          75
        56: goto          65
        59: goto          65
        62: goto          65
        65: new           #146                // class scala/MatchError
        68: dup
        69: aload         5
        71: invokespecial #149                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        74: athrow
        75: aload_3
        76: astore        4
        78: aload_0
        79: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        82: invokeinterface #157,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.freshName:()Ljava/lang/String;
        87: astore        9
        89: getstatic     #163                // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
        92: aload_0
        93: aload         9
        95: aload         4
        97: invokedynamic #184,  0            // InvokeDynamic #0:apply:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/Function0;
       102: invokevirtual #187                // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
       105: invokevirtual #193                // Method scala/util/Try.toOption:()Lscala/Option;
       108: aload_0
       109: invokedynamic #205,  0            // InvokeDynamic #1:apply:(Lshapeless/TheMacros;)Lscala/Function1;
       114: invokevirtual #209                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       117: invokedynamic #218,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
       122: invokevirtual #222                // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
       125: aload_0
       126: invokedynamic #230,  0            // InvokeDynamic #3:apply:(Lshapeless/TheMacros;)Lscala/Function1;
       131: invokevirtual #231                // Method scala/Option$WithFilter.map:(Lscala/Function1;)Lscala/Option;
       134: aload_0
       135: aload         4
       137: invokedynamic #241,  0            // InvokeDynamic #4:apply:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/Function0;
       142: invokevirtual #245                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       145: checkcast     #95                 // class scala/reflect/api/Types$TypeApi
       148: astore        10
       150: aload         10
       152: invokevirtual #249                // Method scala/reflect/api/Types$TypeApi.typeSymbol:()Lscala/reflect/api/Symbols$SymbolApi;
       155: invokeinterface #253,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.asClass:()Lscala/reflect/api/Symbols$ClassSymbolApi;
       160: invokeinterface #256,  1          // InterfaceMethod scala/reflect/api/Symbols$ClassSymbolApi.isPrimitive:()Z
       165: ifeq          217
       168: aload_0
       169: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       172: aload_0
       173: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       176: invokeinterface #260,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       181: new           #262                // class java/lang/StringBuilder
       184: dup
       185: ldc_w         #263                // int 47
       188: invokespecial #266                // Method java/lang/StringBuilder."<init>":(I)V
       191: ldc_w         #268                // String Primitive type
       194: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       197: aload         10
       199: invokevirtual #275                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       202: ldc_w         #277                // String  may not be used in this context
       205: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       208: invokevirtual #280                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       211: invokeinterface #284,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       216: athrow
       217: getstatic     #163                // Field scala/util/Try$.MODULE$:Lscala/util/Try$;
       220: aload_0
       221: aload         10
       223: invokedynamic #292,  0            // InvokeDynamic #5:apply:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/Function0;
       228: invokevirtual #187                // Method scala/util/Try$.apply:(Lscala/Function0;)Lscala/util/Try;
       231: astore        11
       233: aload         11
       235: instanceof    #294                // class scala/util/Success
       238: ifeq          330
       241: aload         11
       243: checkcast     #294                // class scala/util/Success
       246: astore        12
       248: aload         12
       250: invokevirtual #297                // Method scala/util/Success.value:()Ljava/lang/Object;
       253: checkcast     #92                 // class scala/reflect/api/Trees$TreeApi
       256: astore        13
       258: aload_0
       259: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       262: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       267: invokevirtual #305                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
       270: invokeinterface #309,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.decorators:()Lscala/reflect/api/Internals$InternalApi$DecoratorApi;
       275: aload_0
       276: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       279: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       284: invokevirtual #313                // Method scala/reflect/macros/Universe.Literal:()Lscala/reflect/api/Trees$LiteralExtractor;
       287: aload_0
       288: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       291: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       296: invokevirtual #317                // Method scala/reflect/macros/Universe.Constant:()Lscala/reflect/api/Constants$ConstantExtractor;
       299: getstatic     #323                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       302: invokevirtual #326                // Method scala/reflect/api/Constants$ConstantExtractor.apply:(Ljava/lang/Object;)Lscala/reflect/api/Constants$ConstantApi;
       305: invokevirtual #329                // Method scala/reflect/api/Trees$LiteralExtractor.apply:(Lscala/reflect/api/Constants$ConstantApi;)Lscala/reflect/api/Trees$LiteralApi;
       308: invokeinterface #333,  2          // InterfaceMethod scala/reflect/api/Internals$InternalApi$DecoratorApi.treeDecorator:(Lscala/reflect/api/Trees$TreeApi;)Lscala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi;
       313: checkcast     #108                // class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi
       316: aload         13
       318: invokeinterface #337,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
       323: invokevirtual #341                // Method scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi.setType:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
       326: astore_2
       327: goto          392
       330: goto          333
       333: aload         11
       335: instanceof    #343                // class scala/util/Failure
       338: ifeq          379
       341: aload         11
       343: checkcast     #343                // class scala/util/Failure
       346: astore        14
       348: aload         14
       350: invokevirtual #347                // Method scala/util/Failure.exception:()Ljava/lang/Throwable;
       353: astore        15
       355: aload_0
       356: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       359: aload_0
       360: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       363: invokeinterface #260,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
       368: aload         15
       370: invokevirtual #352                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       373: invokeinterface #284,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
       378: athrow
       379: goto          382
       382: new           #146                // class scala/MatchError
       385: dup
       386: aload         11
       388: invokespecial #149                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       391: athrow
       392: aload_2
       393: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 255 /* full_frame */
          offset_delta = 56
          locals = [ class shapeless/TheMacros, class scala/reflect/api/Trees$TreeApi, top, top, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/TheMacros, class scala/reflect/api/Trees$TreeApi, top, class java/lang/String, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 141
          locals = [ class shapeless/TheMacros, class scala/reflect/api/Trees$TreeApi, top, class java/lang/String, class java/lang/String, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class scala/reflect/api/Types$TypeApi ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 112
          locals = [ class scala/util/Try ]
        frame_type = 2 /* same */
        frame_type = 45 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/TheMacros, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Trees$TreeApi, class java/lang/String, class java/lang/String, class scala/reflect/api/Trees$TreeApi, class scala/Option, class java/lang/String, class java/lang/String, class java/lang/String, class scala/reflect/api/Types$TypeApi, class scala/util/Try, class scala/util/Success, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 123: 0
        line 124: 78
        line 128: 89
        line 134: 134
        line 138: 150
        line 139: 168
        line 142: 217
        line 143: 233
        line 146: 258
        line 143: 330
        line 147: 333
        line 142: 382
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           39      20     7 tpeString   Ljava/lang/String;
          256      74    13     x   Lscala/reflect/api/Trees$TreeApi;
          353      26    15     e   Ljava/lang/Throwable;
           76     317     4 tpeString   Ljava/lang/String;
           87     306     9 dummyNme   Ljava/lang/String;
          148     245    10   tpe   Lscala/reflect/api/Types$TypeApi;
            0     394     0  this   Lshapeless/TheMacros;
            0     394     1 tpeSelector   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      tpeSelector                    final

  public static final scala.reflect.api.Trees$TreeApi $anonfun$implicitlyImpl$1(shapeless.TheMacros, java.lang.String, java.lang.String);
    descriptor: (Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
         4: new           #262                // class java/lang/StringBuilder
         7: dup
         8: ldc_w         #363                // int 2
        11: invokespecial #266                // Method java/lang/StringBuilder."<init>":(I)V
        14: new           #262                // class java/lang/StringBuilder
        17: dup
        18: ldc_w         #364                // int 10
        21: invokespecial #266                // Method java/lang/StringBuilder."<init>":(I)V
        24: ldc_w         #366                // String { type
        27: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: aload_1
        31: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: ldc_w         #368                // String  =
        37: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: invokevirtual #280                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        43: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        46: aload_2
        47: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: ldc_w         #370                // String  }
        53: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        56: invokevirtual #280                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        59: invokeinterface #374,  2          // InterfaceMethod scala/reflect/macros/whitebox/Context.parse:(Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
        64: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      65     0 $this   Lshapeless/TheMacros;
            0      65     1 dummyNme$1   Ljava/lang/String;
            0      65     2 tpeString$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      dummyNme$1                     final
      tpeString$1                    final

  public static final scala.Tuple2 $anonfun$implicitlyImpl$2(shapeless.TheMacros, scala.reflect.api.Trees$TreeApi);
    descriptor: (Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=7, locals=9, args_size=2
         0: aload_1
         1: astore_3
         2: iconst_1
         3: istore        4
         5: aload_0
         6: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
         9: invokeinterface #378,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$2:()Ljava/lang/Object;
        14: astore        5
        16: aload_0
        17: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        20: invokeinterface #381,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
        25: astore        6
        27: aload_0
        28: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        31: invokeinterface #384,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
        36: istore        7
        38: aload_0
        39: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        42: invokeinterface #387,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
        47: istore        8
        49: aload_0
        50: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        53: aload_3
        54: aload         5
        56: aload         6
        58: iconst_1
        59: iload         7
        61: iload         8
        63: invokeinterface #391,  7          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
        68: astore_2
        69: new           #393                // class scala/Tuple2
        72: dup
        73: aload_1
        74: aload_2
        75: invokespecial #396                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        78: areturn
      LineNumberTable:
        line 129: 0
        line 128: 69
        line 129: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            1      67     3   x$1   Lscala/reflect/api/Trees$TreeApi;
            3      65     4   x$2   Z
           14      54     5   x$3   Ljava/lang/Object;
           25      43     6   x$4   Lscala/reflect/api/Types$TypeApi;
           36      32     7   x$5   Z
           47      21     8   x$6   Z
           68      10     2 checked   Lscala/reflect/api/Trees$TreeApi;
            0      79     0 $this   Lshapeless/TheMacros;
            0      79     1 parsed   Lscala/reflect/api/Trees$TreeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      parsed                         final

  public static final boolean $anonfun$implicitlyImpl$3(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        24
         6: aload_2
         7: invokevirtual #410                // Method scala/Tuple2._2:()Ljava/lang/Object;
        10: checkcast     #92                 // class scala/reflect/api/Trees$TreeApi
        13: astore_3
        14: aload_3
        15: invokeinterface #413,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.nonEmpty:()Z
        20: istore_1
        21: goto          36
        24: goto          27
        27: new           #146                // class scala/MatchError
        30: dup
        31: aload_2
        32: invokespecial #149                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        35: athrow
        36: iload_1
        37: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 24
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, int, class scala/Tuple2, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 128: 0
        line 129: 6
        line 130: 14
        line 128: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           13      11     3 checked   Lscala/reflect/api/Trees$TreeApi;
            0      38     0   x$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final scala.reflect.api.Types$TypeApi $anonfun$implicitlyImpl$4(shapeless.TheMacros, scala.Tuple2);
    descriptor: (Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=13, args_size=2
         0: aload_1
         1: astore        4
         3: aload         4
         5: ifnull        147
         8: aload         4
        10: invokevirtual #410                // Method scala/Tuple2._2:()Ljava/lang/Object;
        13: checkcast     #92                 // class scala/reflect/api/Trees$TreeApi
        16: astore        5
        18: aload         5
        20: astore        7
        22: aload         7
        24: ifnull        100
        27: new           #113                // class shapeless/TheMacros$$anon$2
        30: dup
        31: aload_0
        32: invokespecial #415                // Method shapeless/TheMacros$$anon$2."<init>":(Lshapeless/TheMacros;)V
        35: aload         7
        37: invokevirtual #416                // Method shapeless/TheMacros$$anon$2.unapply:(Ljava/lang/Object;)Lscala/Option;
        40: astore        8
        42: aload         8
        44: invokevirtual #138                // Method scala/Option.isEmpty:()Z
        47: ifne          97
        50: aload         8
        52: invokevirtual #142                // Method scala/Option.get:()Ljava/lang/Object;
        55: checkcast     #393                // class scala/Tuple2
        58: invokevirtual #419                // Method scala/Tuple2._1:()Ljava/lang/Object;
        61: checkcast     #67                 // class scala/reflect/api/Names$TypeNameApi
        64: astore        9
        66: aload         8
        68: invokevirtual #142                // Method scala/Option.get:()Ljava/lang/Object;
        71: checkcast     #393                // class scala/Tuple2
        74: invokevirtual #410                // Method scala/Tuple2._2:()Ljava/lang/Object;
        77: checkcast     #92                 // class scala/reflect/api/Trees$TreeApi
        80: astore        10
        82: new           #393                // class scala/Tuple2
        85: dup
        86: aload         9
        88: aload         10
        90: invokespecial #396                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        93: astore_3
        94: goto          113
        97: goto          103
       100: goto          103
       103: new           #146                // class scala/MatchError
       106: dup
       107: aload         7
       109: invokespecial #149                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       112: athrow
       113: aload_3
       114: astore        6
       116: aload         6
       118: invokevirtual #419                // Method scala/Tuple2._1:()Ljava/lang/Object;
       121: checkcast     #67                 // class scala/reflect/api/Names$TypeNameApi
       124: astore        11
       126: aload         6
       128: invokevirtual #410                // Method scala/Tuple2._2:()Ljava/lang/Object;
       131: checkcast     #92                 // class scala/reflect/api/Trees$TreeApi
       134: astore        12
       136: aload         12
       138: invokeinterface #337,  1          // InterfaceMethod scala/reflect/api/Trees$TreeApi.tpe:()Lscala/reflect/api/Types$TypeApi;
       143: astore_2
       144: goto          160
       147: goto          150
       150: new           #146                // class scala/MatchError
       153: dup
       154: aload         4
       156: invokespecial #149                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       159: athrow
       160: aload_2
       161: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 97
          locals = [ class shapeless/TheMacros, class scala/Tuple2, top, top, class scala/Tuple2, class scala/reflect/api/Trees$TreeApi, top, class scala/reflect/api/Trees$TreeApi, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/TheMacros, class scala/Tuple2, top, class scala/Tuple2, class scala/Tuple2, class scala/reflect/api/Trees$TreeApi, top, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Names$TypeNameApi, class scala/reflect/api/Trees$TreeApi ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class shapeless/TheMacros, class scala/Tuple2, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/TheMacros, class scala/Tuple2, class scala/reflect/api/Types$TypeApi, class scala/Tuple2, class scala/Tuple2, class scala/reflect/api/Trees$TreeApi, class scala/Tuple2, class scala/reflect/api/Trees$TreeApi, class scala/Option, class scala/reflect/api/Names$TypeNameApi, class scala/reflect/api/Trees$TreeApi, class scala/reflect/api/Names$TypeNameApi, class scala/reflect/api/Trees$TreeApi ]
          stack = []
      LineNumberTable:
        line 128: 0
        line 129: 8
        line 132: 18
        line 133: 136
        line 128: 147
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64      33     9 dummyNme   Lscala/reflect/api/Names$TypeNameApi;
           80      17    10   tpt   Lscala/reflect/api/Trees$TreeApi;
          124      19    11 dummyNme   Lscala/reflect/api/Names$TypeNameApi;
          134       9    12   tpt   Lscala/reflect/api/Trees$TreeApi;
           16     131     5 checked   Lscala/reflect/api/Trees$TreeApi;
            0     162     0 $this   Lshapeless/TheMacros;
            0     162     1   x$3   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$3                            final

  public static final scala.runtime.Nothing$ $anonfun$implicitlyImpl$5(shapeless.TheMacros, java.lang.String);
    descriptor: (Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
         4: aload_0
         5: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
         8: invokeinterface #260,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.enclosingPosition:()Lscala/reflect/api/Position;
        13: new           #262                // class java/lang/StringBuilder
        16: dup
        17: ldc_w         #422                // int 15
        20: invokespecial #266                // Method java/lang/StringBuilder."<init>":(I)V
        23: ldc_w         #424                // String Malformed type
        26: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: aload_1
        30: invokevirtual #272                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        33: invokevirtual #280                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        36: invokeinterface #284,  3          // InterfaceMethod scala/reflect/macros/whitebox/Context.abort:(Lscala/reflect/api/Position;Ljava/lang/String;)Lscala/runtime/Nothing$;
        41: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      42     0 $this   Lshapeless/TheMacros;
            0      42     1 tpeString$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tpeString$1                    final

  public static final scala.reflect.api.Trees$TreeApi $anonfun$implicitlyImpl$6(shapeless.TheMacros, scala.reflect.api.Types$TypeApi);
    descriptor: (Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
         4: aload_0
         5: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
         8: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        13: invokevirtual #305                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
        16: invokeinterface #429,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
        21: invokeinterface #433,  1          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi.SyntacticTypeApplied:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor;
        26: aload_0
        27: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        30: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        35: invokevirtual #305                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
        38: invokeinterface #429,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
        43: invokeinterface #437,  1          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi.SyntacticSelectTerm:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor;
        48: aload_0
        49: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        52: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        57: invokevirtual #305                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
        60: invokeinterface #429,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
        65: invokeinterface #437,  1          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi.SyntacticSelectTerm:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor;
        70: aload_0
        71: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        74: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
        79: invokevirtual #305                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
        82: invokeinterface #429,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
        87: invokeinterface #437,  1          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi.SyntacticSelectTerm:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor;
        92: aload_0
        93: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
        96: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       101: invokevirtual #305                // Method scala/reflect/macros/Universe.internal:()Lscala/reflect/api/Internals$InternalApi;
       104: invokeinterface #429,  1          // InterfaceMethod scala/reflect/api/Internals$InternalApi.reificationSupport:()Lscala/reflect/api/Internals$ReificationSupportApi;
       109: invokeinterface #441,  1          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi.SyntacticTermIdent:()Lscala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor;
       114: aload_0
       115: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       118: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       123: invokevirtual #445                // Method scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
       126: ldc_w         #447                // String _root_
       129: invokevirtual #450                // Method scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       132: iconst_0
       133: invokeinterface #453,  3          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor.apply:(Lscala/reflect/api/Names$TermNameApi;Z)Lscala/reflect/api/Trees$IdentApi;
       138: aload_0
       139: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       142: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       147: invokevirtual #445                // Method scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
       150: ldc_w         #455                // String shapeless
       153: invokevirtual #450                // Method scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       156: invokeinterface #458,  3          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$TermNameApi;)Lscala/reflect/api/Trees$SelectApi;
       161: aload_0
       162: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       165: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       170: invokevirtual #445                // Method scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
       173: ldc_w         #460                // String the
       176: invokevirtual #450                // Method scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       179: invokeinterface #458,  3          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$TermNameApi;)Lscala/reflect/api/Trees$SelectApi;
       184: aload_0
       185: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       188: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       193: invokevirtual #445                // Method scala/reflect/macros/Universe.TermName:()Lscala/reflect/api/Names$TermNameExtractor;
       196: ldc_w         #461                // String apply
       199: invokevirtual #450                // Method scala/reflect/api/Names$TermNameExtractor.apply:(Ljava/lang/String;)Lscala/reflect/api/Names$TermNameApi;
       202: invokeinterface #458,  3          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/reflect/api/Names$TermNameApi;)Lscala/reflect/api/Trees$SelectApi;
       207: new           #463                // class scala/collection/immutable/$colon$colon
       210: dup
       211: aload_0
       212: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       215: invokeinterface #301,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.universe:()Lscala/reflect/macros/Universe;
       220: invokevirtual #466                // Method scala/reflect/macros/Universe.Liftable:()Lscala/reflect/api/Liftables$Liftable$;
       223: invokevirtual #470                // Method scala/reflect/api/Liftables$Liftable$.liftType:()Lscala/reflect/api/Liftables$Liftable;
       226: aload_1
       227: invokeinterface #473,  2          // InterfaceMethod scala/reflect/api/Liftables$Liftable.apply:(Ljava/lang/Object;)Lscala/reflect/api/Trees$TreeApi;
       232: getstatic     #478                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       235: invokespecial #481                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       238: checkcast     #483                // class scala/collection/immutable/List
       241: invokeinterface #486,  3          // InterfaceMethod scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor.apply:(Lscala/reflect/api/Trees$TreeApi;Lscala/collection/immutable/List;)Lscala/reflect/api/Trees$TreeApi;
       246: aload_0
       247: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       250: invokeinterface #378,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$2:()Ljava/lang/Object;
       255: aload_0
       256: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       259: invokeinterface #381,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$3:()Lscala/reflect/api/Types$TypeApi;
       264: aload_0
       265: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       268: invokeinterface #489,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$4:()Z
       273: aload_0
       274: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       277: invokeinterface #384,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$5:()Z
       282: aload_0
       283: invokevirtual #151                // Method c:()Lscala/reflect/macros/whitebox/Context;
       286: invokeinterface #387,  1          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck$default$6:()Z
       291: invokeinterface #391,  7          // InterfaceMethod scala/reflect/macros/whitebox/Context.typecheck:(Lscala/reflect/api/Trees$TreeApi;Ljava/lang/Object;Lscala/reflect/api/Types$TypeApi;ZZZ)Lscala/reflect/api/Trees$TreeApi;
       296: areturn
      LineNumberTable:
        line 142: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     297     0 $this   Lshapeless/TheMacros;
            0     297     1 tpe$1   Lscala/reflect/api/Types$TypeApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tpe$1                          final

  public shapeless.TheMacros(scala.reflect.macros.whitebox.Context);
    descriptor: (Lscala/reflect/macros/whitebox/Context;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #118                // Field c:Lscala/reflect/macros/whitebox/Context;
         5: aload_0
         6: invokespecial #493                // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 115: 0
        line 153: 5
        line 115: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lshapeless/TheMacros;
            0      10     1     c   Lscala/reflect/macros/whitebox/Context;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.Object $anonfun$implicitlyImpl$3$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #495                // Method $anonfun$implicitlyImpl$3:(Lscala/Tuple2;)Z
         4: invokestatic  #501                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x$2                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #513,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #10 of #12;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #18= #15 of #17;                 // WithFilter=class scala/Option$WithFilter of class scala/Option
  public abstract #23= #20 of #22;        // ConstantApi=class scala/reflect/api/Constants$ConstantApi of class scala/reflect/api/Constants
  public abstract #26= #25 of #22;        // ConstantExtractor=class scala/reflect/api/Constants$ConstantExtractor of class scala/reflect/api/Constants
  public #31= #28 of #30;                 // InternalApi=class scala/reflect/api/Internals$InternalApi of class scala/reflect/api/Internals
  public #34= #33 of #28;                 // DecoratorApi=class scala/reflect/api/Internals$InternalApi$DecoratorApi of class scala/reflect/api/Internals$InternalApi
  public #37= #36 of #33;                 // TreeDecoratorApi=class scala/reflect/api/Internals$InternalApi$DecoratorApi$TreeDecoratorApi of class scala/reflect/api/Internals$InternalApi$DecoratorApi
  public #40= #39 of #30;                 // ReificationSupportApi=class scala/reflect/api/Internals$ReificationSupportApi of class scala/reflect/api/Internals
  public #43= #42 of #39;                 // SyntacticSelectTermExtractor=class scala/reflect/api/Internals$ReificationSupportApi$SyntacticSelectTermExtractor of class scala/reflect/api/Internals$ReificationSupportApi
  public #46= #45 of #39;                 // SyntacticTermIdentExtractor=class scala/reflect/api/Internals$ReificationSupportApi$SyntacticTermIdentExtractor of class scala/reflect/api/Internals$ReificationSupportApi
  public #49= #48 of #39;                 // SyntacticTypeAppliedExtractor=class scala/reflect/api/Internals$ReificationSupportApi$SyntacticTypeAppliedExtractor of class scala/reflect/api/Internals$ReificationSupportApi
  public #54= #51 of #53;                 // Liftable=class scala/reflect/api/Liftables$Liftable of class scala/reflect/api/Liftables
  public #57= #56 of #53;                 // Liftable$=class scala/reflect/api/Liftables$Liftable$ of class scala/reflect/api/Liftables
  public #62= #59 of #61;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public abstract #65= #64 of #61;        // TermNameExtractor=class scala/reflect/api/Names$TermNameExtractor of class scala/reflect/api/Names
  public #68= #67 of #61;                 // TypeNameApi=class scala/reflect/api/Names$TypeNameApi of class scala/reflect/api/Names
  public #73= #70 of #72;                 // ClassSymbolApi=class scala/reflect/api/Symbols$ClassSymbolApi of class scala/reflect/api/Symbols
  public #76= #75 of #72;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public #81= #78 of #80;                 // IdentApi=class scala/reflect/api/Trees$IdentApi of class scala/reflect/api/Trees
  public #84= #83 of #80;                 // LiteralApi=class scala/reflect/api/Trees$LiteralApi of class scala/reflect/api/Trees
  public abstract #87= #86 of #80;        // LiteralExtractor=class scala/reflect/api/Trees$LiteralExtractor of class scala/reflect/api/Trees
  public #90= #89 of #80;                 // SelectApi=class scala/reflect/api/Trees$SelectApi of class scala/reflect/api/Trees
  public #93= #92 of #80;                 // TreeApi=class scala/reflect/api/Trees$TreeApi of class scala/reflect/api/Trees
  public abstract #98= #95 of #97;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #103= #100 of #102;              // MacroInternalApi=class scala/reflect/macros/Universe$MacroInternalApi of class scala/reflect/macros/Universe
  public #106= #105 of #100;              // MacroDecoratorApi=class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi of class scala/reflect/macros/Universe$MacroInternalApi
  public #109= #108 of #105;              // MacroTreeDecoratorApi=class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi$MacroTreeDecoratorApi of class scala/reflect/macros/Universe$MacroInternalApi$MacroDecoratorApi
  public final #111;                      // class shapeless/TheMacros$$anon$1
  public final #113;                      // class shapeless/TheMacros$$anon$2
SourceFile: "typeoperators.scala"
RuntimeVisibleAnnotations:
  0: #6(#7=s#8)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i2AAB\u0004\u0001\u0015!A\u0011\u0003\u0001BC\u0002\u0013\u0005!\u0003\u0003\u0005\u001e\u0001\t\u0005\t\u0015!\u0003\u0014\u0011\u0015q\u0002\u0001\"\u0001 \u0011\u0015\u0019\u0003\u0001\"\u0001%\u0011\u00151\u0004\u0001\"\u00018\u0005%!\u0006.Z\'bGJ|7OC\u0001\t\u0003%\u0019\b.\u00199fY\u0016\u001c8o\u0001\u0001\u0014\u0005\u0001Y\u0001C\u0001\u0007\u0010\u001b\u0005i!\"\u0001\b\u0002\u000bM\u001c\u0017\r\\1\n\u0005Ai!AB!osJ+g-A\u0001d+\u0005\u0019\u0002C\u0001\u000b\u001c\u001b\u0005)\"B\u0001\f\u0018\u0003!9\b.\u001b;fE>D(B\u0001\r\u001a\u0003\u0019i\u0017m\u0019:pg*\u0011!$D\u0001\be\u00164G.Z2u\u0013\taRCA\u0004D_:$X\r\u001f;\u0002\u0005\r\u0004\u0013A\u0002\u001fj]&$h\b\u0006\u0002!EA\u0011\u0011\u0005A\u0007\u0002\u000f!)\u0011c\u0001a\u0001\'\u0005I\u0011\r\u001d9ms&k\u0007\u000f\u001c\u000b\u0003KQ\u0002\"A\n\u0018\u000f\u0005\u001dJcB\u0001\u0015\u0002\u001b\u0005\u0001\u0011B\u0001\u0016,\u0003!)h.\u001b<feN,\u0017B\u0001\u000f-\u0015\tis#\u0001\u0005cY\u0006\u001c7NY8y\u0013\ty\u0003G\u0001\u0003Ue\u0016,\u0017BA\u00193\u0005\u0015!&/Z3t\u0015\t\u0019\u0014$A\u0002ba&DQ!\u000e\u0003A\u0002\u0015\n\u0011\u0001^\u0001\u000fS6\u0004H.[2ji2L\u0018*\u001c9m)\t)\u0003\bC\u0003:\u000b\u0001\u0007Q%A\u0006ua\u0016\u001cV\r\\3di>\u0014\b"
    )
BootstrapMethods:
  0: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #169 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$1:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
      #171 ()Lscala/reflect/api/Trees$TreeApi;
      #172 5
      #173 1
      #171 ()Lscala/reflect/api/Trees$TreeApi;
  1: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #195 (Ljava/lang/Object;)Ljava/lang/Object;
      #200 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$2:(Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
      #202 (Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
      #172 5
      #173 1
      #202 (Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
  2: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #195 (Ljava/lang/Object;)Ljava/lang/Object;
      #214 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #215 (Lscala/Tuple2;)Ljava/lang/Object;
      #172 5
      #173 1
      #215 (Lscala/Tuple2;)Ljava/lang/Object;
  3: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #195 (Ljava/lang/Object;)Ljava/lang/Object;
      #227 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$4:(Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
      #229 (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
      #172 5
      #173 1
      #229 (Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
  4: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #236 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$5:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
      #238 ()Lscala/runtime/Nothing$;
      #172 5
      #173 1
      #238 ()Lscala/runtime/Nothing$;
  5: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 ()Ljava/lang/Object;
      #289 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$6:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
      #171 ()Lscala/reflect/api/Trees$TreeApi;
      #172 5
      #173 1
      #171 ()Lscala/reflect/api/Trees$TreeApi;
  6: #510 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #169 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$1:(Lshapeless/TheMacros;Ljava/lang/String;Ljava/lang/String;)Lscala/reflect/api/Trees$TreeApi;
      #200 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$2:(Lshapeless/TheMacros;Lscala/reflect/api/Trees$TreeApi;)Lscala/Tuple2;
      #214 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$3$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #227 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$4:(Lshapeless/TheMacros;Lscala/Tuple2;)Lscala/reflect/api/Types$TypeApi;
      #236 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$5:(Lshapeless/TheMacros;Ljava/lang/String;)Lscala/runtime/Nothing$;
      #289 REF_invokeStatic shapeless/TheMacros.$anonfun$implicitlyImpl$6:(Lshapeless/TheMacros;Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Trees$TreeApi;
  ScalaInlineInfo: length = 0x3B (unknown attribute)
   01 00 00 0B 00 A5 00 A6 01 00 C4 00 C5 01 00 D2
   00 D3 01 01 96 01 97 01 00 DF 00 E0 01 00 E8 00
   E9 01 01 1D 01 1E 01 00 7F 01 EA 00 00 79 00 7A
   00 00 72 00 74 00 00 7D 00 7A 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
