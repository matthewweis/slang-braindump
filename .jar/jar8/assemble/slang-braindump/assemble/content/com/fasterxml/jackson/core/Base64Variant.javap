Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/core/Base64Variant.class
  Last modified May 29, 2022; size 12905 bytes
  SHA-256 checksum 08f3d38905c858d97ecd8aa4c2421df428e9e29a98d21cfaef1a26fae711814f
  Compiled from "Base64Variant.java"
public final class com.fasterxml.jackson.core.Base64Variant implements java.io.Serializable
  minor version: 0
  major version: 50
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #20                         // com/fasterxml/jackson/core/Base64Variant
  super_class: #77                        // java/lang/Object
  interfaces: 1, fields: 13, methods: 45, attributes: 2
Constant pool:
    #1 = Methodref          #77.#243      // java/lang/Object."<init>":()V
    #2 = Fieldref           #20.#244      // com/fasterxml/jackson/core/Base64Variant._asciiToBase64:[I
    #3 = Fieldref           #20.#245      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiC:[C
    #4 = Fieldref           #20.#246      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiB:[B
    #5 = Fieldref           #20.#247      // com/fasterxml/jackson/core/Base64Variant._name:Ljava/lang/String;
    #6 = Fieldref           #20.#248      // com/fasterxml/jackson/core/Base64Variant._writePadding:Z
    #7 = Fieldref           #20.#249      // com/fasterxml/jackson/core/Base64Variant._paddingChar:C
    #8 = Fieldref           #20.#250      // com/fasterxml/jackson/core/Base64Variant._maxLineLength:I
    #9 = Methodref          #251.#252     // java/lang/String.length:()I
   #10 = Class              #253          // java/lang/IllegalArgumentException
   #11 = Class              #254          // java/lang/StringBuilder
   #12 = Methodref          #11.#243      // java/lang/StringBuilder."<init>":()V
   #13 = String             #255          // Base64Alphabet length must be exactly 64 (was
   #14 = Methodref          #11.#256      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #15 = Methodref          #11.#257      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #16 = String             #258          // )
   #17 = Methodref          #11.#259      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #18 = Methodref          #10.#260      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #19 = Methodref          #251.#261     // java/lang/String.getChars:(II[CI)V
   #20 = Class              #262          // com/fasterxml/jackson/core/Base64Variant
   #21 = Methodref          #263.#264     // java/util/Arrays.fill:([II)V
   #22 = Fieldref           #83.#265      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
   #23 = Fieldref           #83.#266      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
   #24 = Fieldref           #20.#267      // com/fasterxml/jackson/core/Base64Variant._paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
   #25 = Methodref          #20.#268      // com/fasterxml/jackson/core/Base64Variant."<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
   #26 = Methodref          #20.#269      // com/fasterxml/jackson/core/Base64Variant."<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
   #27 = Methodref          #270.#271     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
   #28 = Fieldref           #83.#272      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
   #29 = Methodref          #20.#273      // com/fasterxml/jackson/core/Base64Variant.withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
   #30 = Methodref          #20.#274      // com/fasterxml/jackson/core/Base64Variant."<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V
   #31 = Methodref          #275.#276     // com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;
   #32 = Methodref          #11.#277      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #33 = Methodref          #20.#278      // com/fasterxml/jackson/core/Base64Variant.usesPadding:()Z
   #34 = Methodref          #20.#279      // com/fasterxml/jackson/core/Base64Variant.encode:([BZ)Ljava/lang/String;
   #35 = Methodref          #11.#280      // java/lang/StringBuilder."<init>":(I)V
   #36 = Methodref          #20.#281      // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I
   #37 = Methodref          #20.#282      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V
   #38 = Methodref          #20.#283      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(Ljava/lang/StringBuilder;II)V
   #39 = Class              #284          // com/fasterxml/jackson/core/util/ByteArrayBuilder
   #40 = Methodref          #39.#243      // com/fasterxml/jackson/core/util/ByteArrayBuilder."<init>":()V
   #41 = Methodref          #20.#285      // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V
   #42 = Methodref          #39.#286      // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B
   #43 = Methodref          #251.#287     // java/lang/String.charAt:(I)C
   #44 = Methodref          #20.#288      // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(C)I
   #45 = Methodref          #20.#289      // com/fasterxml/jackson/core/Base64Variant._reportInvalidBase64:(CILjava/lang/String;)V
   #46 = Methodref          #20.#290      // com/fasterxml/jackson/core/Base64Variant._reportBase64EOF:()V
   #47 = Methodref          #20.#291      // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z
   #48 = Methodref          #39.#292      // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V
   #49 = Methodref          #20.#293      // com/fasterxml/jackson/core/Base64Variant.acceptsPaddingOnRead:()Z
   #50 = Methodref          #20.#294      // com/fasterxml/jackson/core/Base64Variant._reportBase64UnexpectedPadding:()V
   #51 = Methodref          #20.#295      // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(C)Z
   #52 = String             #296          // expected padding character \'
   #53 = Methodref          #20.#297      // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C
   #54 = String             #298          // \'
   #55 = Methodref          #39.#299      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V
   #56 = Methodref          #39.#300      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V
   #57 = Methodref          #77.#301      // java/lang/Object.getClass:()Ljava/lang/Class;
   #58 = Methodref          #251.#302     // java/lang/String.equals:(Ljava/lang/Object;)Z
   #59 = Methodref          #251.#303     // java/lang/String.hashCode:()I
   #60 = String             #304          // Illegal white space character (code 0x
   #61 = Methodref          #305.#306     // java/lang/Integer.toHexString:(I)Ljava/lang/String;
   #62 = String             #307          // ) as character #
   #63 = String             #308          //  of 4-char base64 unit: can only used between units
   #64 = String             #309          // Unexpected padding character (\'
   #65 = String             #310          // \') as character #
   #66 = String             #311          //  of 4-char base64 unit: padding only legal as 3rd or 4th character
   #67 = Methodref          #312.#313     // java/lang/Character.isDefined:(C)Z
   #68 = Methodref          #312.#314     // java/lang/Character.isISOControl:(C)Z
   #69 = String             #315          // Illegal character (code 0x
   #70 = String             #316          // ) in base64 content
   #71 = String             #317          // Illegal character \'
   #72 = String             #318          // \' (code 0x
   #73 = String             #319          // :
   #74 = Methodref          #20.#320      // com/fasterxml/jackson/core/Base64Variant.missingPaddingMessage:()Ljava/lang/String;
   #75 = Methodref          #20.#321      // com/fasterxml/jackson/core/Base64Variant.unexpectedPaddingMessage:()Ljava/lang/String;
   #76 = String             #322          // Unexpected end of base64-encoded String: base64 variant \'%s\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured
   #77 = Class              #323          // java/lang/Object
   #78 = Methodref          #20.#324      // com/fasterxml/jackson/core/Base64Variant.getName:()Ljava/lang/String;
   #79 = Methodref          #251.#325     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   #80 = String             #326          // Unexpected end of base64-encoded String: base64 variant \'%s\' expects padding (one or more \'%c\' characters) at the end. This Base64Variant might have been incorrectly configured
   #81 = Methodref          #312.#327     // java/lang/Character.valueOf:(C)Ljava/lang/Character;
   #82 = Class              #328          // java/io/Serializable
   #83 = Class              #329          // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour
   #84 = Utf8               PaddingReadBehaviour
   #85 = Utf8               InnerClasses
   #86 = Utf8               INT_SPACE
   #87 = Utf8               I
   #88 = Utf8               ConstantValue
   #89 = Integer            32
   #90 = Utf8               serialVersionUID
   #91 = Utf8               J
   #92 = Long               1l
   #94 = Utf8               PADDING_CHAR_NONE
   #95 = Utf8               C
   #96 = Integer            0
   #97 = Utf8               BASE64_VALUE_INVALID
   #98 = Integer            -1
   #99 = Utf8               BASE64_VALUE_PADDING
  #100 = Integer            -2
  #101 = Utf8               _asciiToBase64
  #102 = Utf8               [I
  #103 = Utf8               _base64ToAsciiC
  #104 = Utf8               [C
  #105 = Utf8               _base64ToAsciiB
  #106 = Utf8               [B
  #107 = Utf8               _name
  #108 = Utf8               Ljava/lang/String;
  #109 = Utf8               _paddingChar
  #110 = Utf8               _maxLineLength
  #111 = Utf8               _writePadding
  #112 = Utf8               Z
  #113 = Utf8               _paddingReadBehaviour
  #114 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
  #115 = Utf8               <init>
  #116 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZCI)V
  #117 = Utf8               Code
  #118 = Utf8               LineNumberTable
  #119 = Utf8               LocalVariableTable
  #120 = Utf8               alpha
  #121 = Utf8               i
  #122 = Utf8               this
  #123 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;
  #124 = Utf8               name
  #125 = Utf8               base64Alphabet
  #126 = Utf8               writePadding
  #127 = Utf8               paddingChar
  #128 = Utf8               maxLineLength
  #129 = Utf8               alphaLen
  #130 = Utf8               StackMapTable
  #131 = Class              #262          // com/fasterxml/jackson/core/Base64Variant
  #132 = Class              #330          // java/lang/String
  #133 = Class              #329          // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour
  #134 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V
  #135 = Utf8               base
  #136 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
  #137 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
  #138 = Utf8               paddingReadBehaviour
  #139 = Utf8               srcB
  #140 = Utf8               srcC
  #141 = Utf8               srcV
  #142 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V
  #143 = Utf8               withPaddingAllowed
  #144 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;
  #145 = Utf8               withPaddingRequired
  #146 = Utf8               withPaddingForbidden
  #147 = Utf8               withReadPadding
  #148 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
  #149 = Utf8               readPadding
  #150 = Utf8               withWritePadding
  #151 = Utf8               (Z)Lcom/fasterxml/jackson/core/Base64Variant;
  #152 = Utf8               readResolve
  #153 = Utf8               ()Ljava/lang/Object;
  #154 = Utf8               getName
  #155 = Utf8               ()Ljava/lang/String;
  #156 = Utf8               usesPadding
  #157 = Utf8               ()Z
  #158 = Utf8               requiresPaddingOnRead
  #159 = Utf8               acceptsPaddingOnRead
  #160 = Utf8               usesPaddingChar
  #161 = Utf8               (C)Z
  #162 = Utf8               c
  #163 = Utf8               (I)Z
  #164 = Utf8               ch
  #165 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
  #166 = Utf8               getPaddingChar
  #167 = Utf8               ()C
  #168 = Utf8               getPaddingByte
  #169 = Utf8               ()B
  #170 = Utf8               getMaxLineLength
  #171 = Utf8               ()I
  #172 = Utf8               decodeBase64Char
  #173 = Utf8               (C)I
  #174 = Utf8               (I)I
  #175 = Utf8               decodeBase64Byte
  #176 = Utf8               (B)I
  #177 = Utf8               b
  #178 = Utf8               B
  #179 = Utf8               encodeBase64BitsAsChar
  #180 = Utf8               (I)C
  #181 = Utf8               value
  #182 = Utf8               encodeBase64Chunk
  #183 = Utf8               (I[CI)I
  #184 = Utf8               b24
  #185 = Utf8               buffer
  #186 = Utf8               outPtr
  #187 = Utf8               (Ljava/lang/StringBuilder;I)V
  #188 = Utf8               sb
  #189 = Utf8               Ljava/lang/StringBuilder;
  #190 = Utf8               encodeBase64Partial
  #191 = Utf8               (II[CI)I
  #192 = Utf8               bits
  #193 = Utf8               outputBytes
  #194 = Class              #104          // "[C"
  #195 = Utf8               (Ljava/lang/StringBuilder;II)V
  #196 = Class              #254          // java/lang/StringBuilder
  #197 = Utf8               encodeBase64BitsAsByte
  #198 = Utf8               (I)B
  #199 = Utf8               (I[BI)I
  #200 = Utf8               (II[BI)I
  #201 = Utf8               pb
  #202 = Class              #106          // "[B"
  #203 = Utf8               encode
  #204 = Utf8               ([B)Ljava/lang/String;
  #205 = Utf8               input
  #206 = Utf8               ([BZ)Ljava/lang/String;
  #207 = Utf8               addQuotes
  #208 = Utf8               inputEnd
  #209 = Utf8               chunksBeforeLF
  #210 = Utf8               inputPtr
  #211 = Utf8               safeInputEnd
  #212 = Utf8               inputLeft
  #213 = Utf8               ([BZLjava/lang/String;)Ljava/lang/String;
  #214 = Utf8               linefeed
  #215 = Utf8               decode
  #216 = Utf8               (Ljava/lang/String;)[B
  #217 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;
  #218 = Utf8               Exceptions
  #219 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V
  #220 = Utf8               decodedData
  #221 = Utf8               str
  #222 = Utf8               builder
  #223 = Utf8               ptr
  #224 = Utf8               len
  #225 = Utf8               toString
  #226 = Utf8               equals
  #227 = Utf8               (Ljava/lang/Object;)Z
  #228 = Utf8               o
  #229 = Utf8               Ljava/lang/Object;
  #230 = Utf8               other
  #231 = Utf8               hashCode
  #232 = Utf8               _reportInvalidBase64
  #233 = Utf8               (CILjava/lang/String;)V
  #234 = Utf8               bindex
  #235 = Utf8               msg
  #236 = Utf8               _reportBase64EOF
  #237 = Utf8               ()V
  #238 = Utf8               _reportBase64UnexpectedPadding
  #239 = Utf8               unexpectedPaddingMessage
  #240 = Utf8               missingPaddingMessage
  #241 = Utf8               SourceFile
  #242 = Utf8               Base64Variant.java
  #243 = NameAndType        #115:#237     // "<init>":()V
  #244 = NameAndType        #101:#102     // _asciiToBase64:[I
  #245 = NameAndType        #103:#104     // _base64ToAsciiC:[C
  #246 = NameAndType        #105:#106     // _base64ToAsciiB:[B
  #247 = NameAndType        #107:#108     // _name:Ljava/lang/String;
  #248 = NameAndType        #111:#112     // _writePadding:Z
  #249 = NameAndType        #109:#95      // _paddingChar:C
  #250 = NameAndType        #110:#87      // _maxLineLength:I
  #251 = Class              #330          // java/lang/String
  #252 = NameAndType        #331:#171     // length:()I
  #253 = Utf8               java/lang/IllegalArgumentException
  #254 = Utf8               java/lang/StringBuilder
  #255 = Utf8               Base64Alphabet length must be exactly 64 (was
  #256 = NameAndType        #332:#333     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #257 = NameAndType        #332:#334     // append:(I)Ljava/lang/StringBuilder;
  #258 = Utf8               )
  #259 = NameAndType        #225:#155     // toString:()Ljava/lang/String;
  #260 = NameAndType        #115:#335     // "<init>":(Ljava/lang/String;)V
  #261 = NameAndType        #336:#337     // getChars:(II[CI)V
  #262 = Utf8               com/fasterxml/jackson/core/Base64Variant
  #263 = Class              #338          // java/util/Arrays
  #264 = NameAndType        #339:#340     // fill:([II)V
  #265 = NameAndType        #341:#114     // PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
  #266 = NameAndType        #342:#114     // PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
  #267 = NameAndType        #113:#114     // _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
  #268 = NameAndType        #115:#136     // "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
  #269 = NameAndType        #115:#137     // "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
  #270 = Class              #343          // java/lang/System
  #271 = NameAndType        #344:#345     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #272 = NameAndType        #346:#114     // PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
  #273 = NameAndType        #147:#148     // withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
  #274 = NameAndType        #115:#142     // "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V
  #275 = Class              #347          // com/fasterxml/jackson/core/Base64Variants
  #276 = NameAndType        #348:#349     // valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;
  #277 = NameAndType        #332:#350     // append:(C)Ljava/lang/StringBuilder;
  #278 = NameAndType        #156:#157     // usesPadding:()Z
  #279 = NameAndType        #203:#206     // encode:([BZ)Ljava/lang/String;
  #280 = NameAndType        #115:#351     // "<init>":(I)V
  #281 = NameAndType        #170:#171     // getMaxLineLength:()I
  #282 = NameAndType        #182:#187     // encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V
  #283 = NameAndType        #190:#195     // encodeBase64Partial:(Ljava/lang/StringBuilder;II)V
  #284 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder
  #285 = NameAndType        #215:#219     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V
  #286 = NameAndType        #352:#353     // toByteArray:()[B
  #287 = NameAndType        #354:#180     // charAt:(I)C
  #288 = NameAndType        #172:#173     // decodeBase64Char:(C)I
  #289 = NameAndType        #232:#233     // _reportInvalidBase64:(CILjava/lang/String;)V
  #290 = NameAndType        #236:#237     // _reportBase64EOF:()V
  #291 = NameAndType        #158:#157     // requiresPaddingOnRead:()Z
  #292 = NameAndType        #332:#351     // append:(I)V
  #293 = NameAndType        #159:#157     // acceptsPaddingOnRead:()Z
  #294 = NameAndType        #238:#237     // _reportBase64UnexpectedPadding:()V
  #295 = NameAndType        #160:#161     // usesPaddingChar:(C)Z
  #296 = Utf8               expected padding character \'
  #297 = NameAndType        #166:#167     // getPaddingChar:()C
  #298 = Utf8               \'
  #299 = NameAndType        #355:#351     // appendTwoBytes:(I)V
  #300 = NameAndType        #356:#351     // appendThreeBytes:(I)V
  #301 = NameAndType        #357:#358     // getClass:()Ljava/lang/Class;
  #302 = NameAndType        #226:#227     // equals:(Ljava/lang/Object;)Z
  #303 = NameAndType        #231:#171     // hashCode:()I
  #304 = Utf8               Illegal white space character (code 0x
  #305 = Class              #359          // java/lang/Integer
  #306 = NameAndType        #360:#361     // toHexString:(I)Ljava/lang/String;
  #307 = Utf8               ) as character #
  #308 = Utf8                of 4-char base64 unit: can only used between units
  #309 = Utf8               Unexpected padding character (\'
  #310 = Utf8               \') as character #
  #311 = Utf8                of 4-char base64 unit: padding only legal as 3rd or 4th character
  #312 = Class              #362          // java/lang/Character
  #313 = NameAndType        #363:#161     // isDefined:(C)Z
  #314 = NameAndType        #364:#161     // isISOControl:(C)Z
  #315 = Utf8               Illegal character (code 0x
  #316 = Utf8               ) in base64 content
  #317 = Utf8               Illegal character \'
  #318 = Utf8               \' (code 0x
  #319 = Utf8               :
  #320 = NameAndType        #240:#155     // missingPaddingMessage:()Ljava/lang/String;
  #321 = NameAndType        #239:#155     // unexpectedPaddingMessage:()Ljava/lang/String;
  #322 = Utf8               Unexpected end of base64-encoded String: base64 variant \'%s\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured
  #323 = Utf8               java/lang/Object
  #324 = NameAndType        #154:#155     // getName:()Ljava/lang/String;
  #325 = NameAndType        #365:#366     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #326 = Utf8               Unexpected end of base64-encoded String: base64 variant \'%s\' expects padding (one or more \'%c\' characters) at the end. This Base64Variant might have been incorrectly configured
  #327 = NameAndType        #348:#367     // valueOf:(C)Ljava/lang/Character;
  #328 = Utf8               java/io/Serializable
  #329 = Utf8               com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour
  #330 = Utf8               java/lang/String
  #331 = Utf8               length
  #332 = Utf8               append
  #333 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #334 = Utf8               (I)Ljava/lang/StringBuilder;
  #335 = Utf8               (Ljava/lang/String;)V
  #336 = Utf8               getChars
  #337 = Utf8               (II[CI)V
  #338 = Utf8               java/util/Arrays
  #339 = Utf8               fill
  #340 = Utf8               ([II)V
  #341 = Utf8               PADDING_REQUIRED
  #342 = Utf8               PADDING_FORBIDDEN
  #343 = Utf8               java/lang/System
  #344 = Utf8               arraycopy
  #345 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #346 = Utf8               PADDING_ALLOWED
  #347 = Utf8               com/fasterxml/jackson/core/Base64Variants
  #348 = Utf8               valueOf
  #349 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;
  #350 = Utf8               (C)Ljava/lang/StringBuilder;
  #351 = Utf8               (I)V
  #352 = Utf8               toByteArray
  #353 = Utf8               ()[B
  #354 = Utf8               charAt
  #355 = Utf8               appendTwoBytes
  #356 = Utf8               appendThreeBytes
  #357 = Utf8               getClass
  #358 = Utf8               ()Ljava/lang/Class;
  #359 = Utf8               java/lang/Integer
  #360 = Utf8               toHexString
  #361 = Utf8               (I)Ljava/lang/String;
  #362 = Utf8               java/lang/Character
  #363 = Utf8               isDefined
  #364 = Utf8               isISOControl
  #365 = Utf8               format
  #366 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
  #367 = Utf8               (C)Ljava/lang/Character;
{
  private static final int INT_SPACE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 32

  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1l

  protected static final char PADDING_CHAR_NONE;
    descriptor: C
    flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL
    ConstantValue: int 0

  public static final int BASE64_VALUE_INVALID;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int -1

  public static final int BASE64_VALUE_PADDING;
    descriptor: I
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: int -2

  private final transient int[] _asciiToBase64;
    descriptor: [I
    flags: (0x0092) ACC_PRIVATE, ACC_FINAL, ACC_TRANSIENT

  private final transient char[] _base64ToAsciiC;
    descriptor: [C
    flags: (0x0092) ACC_PRIVATE, ACC_FINAL, ACC_TRANSIENT

  private final transient byte[] _base64ToAsciiB;
    descriptor: [B
    flags: (0x0092) ACC_PRIVATE, ACC_FINAL, ACC_TRANSIENT

  final java.lang.String _name;
    descriptor: Ljava/lang/String;
    flags: (0x0010) ACC_FINAL

  private final char _paddingChar;
    descriptor: C
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int _maxLineLength;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean _writePadding;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour _paddingReadBehaviour;
    descriptor: Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public com.fasterxml.jackson.core.Base64Variant(java.lang.String, java.lang.String, boolean, char, int);
    descriptor: (Ljava/lang/String;Ljava/lang/String;ZCI)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=6
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: sipush        128
         8: newarray       int
        10: putfield      #2                  // Field _asciiToBase64:[I
        13: aload_0
        14: bipush        64
        16: newarray       char
        18: putfield      #3                  // Field _base64ToAsciiC:[C
        21: aload_0
        22: bipush        64
        24: newarray       byte
        26: putfield      #4                  // Field _base64ToAsciiB:[B
        29: aload_0
        30: aload_1
        31: putfield      #5                  // Field _name:Ljava/lang/String;
        34: aload_0
        35: iload_3
        36: putfield      #6                  // Field _writePadding:Z
        39: aload_0
        40: iload         4
        42: putfield      #7                  // Field _paddingChar:C
        45: aload_0
        46: iload         5
        48: putfield      #8                  // Field _maxLineLength:I
        51: aload_2
        52: invokevirtual #9                  // Method java/lang/String.length:()I
        55: istore        6
        57: iload         6
        59: bipush        64
        61: if_icmpeq     97
        64: new           #10                 // class java/lang/IllegalArgumentException
        67: dup
        68: new           #11                 // class java/lang/StringBuilder
        71: dup
        72: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
        75: ldc           #13                 // String Base64Alphabet length must be exactly 64 (was
        77: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        80: iload         6
        82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        85: ldc           #16                 // String )
        87: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        93: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        96: athrow
        97: aload_2
        98: iconst_0
        99: iload         6
       101: aload_0
       102: getfield      #3                  // Field _base64ToAsciiC:[C
       105: iconst_0
       106: invokevirtual #19                 // Method java/lang/String.getChars:(II[CI)V
       109: aload_0
       110: getfield      #2                  // Field _asciiToBase64:[I
       113: iconst_m1
       114: invokestatic  #21                 // Method java/util/Arrays.fill:([II)V
       117: iconst_0
       118: istore        7
       120: iload         7
       122: iload         6
       124: if_icmpge     161
       127: aload_0
       128: getfield      #3                  // Field _base64ToAsciiC:[C
       131: iload         7
       133: caload
       134: istore        8
       136: aload_0
       137: getfield      #4                  // Field _base64ToAsciiB:[B
       140: iload         7
       142: iload         8
       144: i2b
       145: bastore
       146: aload_0
       147: getfield      #2                  // Field _asciiToBase64:[I
       150: iload         8
       152: iload         7
       154: iastore
       155: iinc          7, 1
       158: goto          120
       161: iload_3
       162: ifeq          174
       165: aload_0
       166: getfield      #2                  // Field _asciiToBase64:[I
       169: iload         4
       171: bipush        -2
       173: iastore
       174: aload_0
       175: iload_3
       176: ifeq          185
       179: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       182: goto          188
       185: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       188: putfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       191: return
      LineNumberTable:
        line 148: 0
        line 82: 4
        line 88: 13
        line 94: 21
        line 149: 29
        line 150: 34
        line 151: 39
        line 152: 45
        line 157: 51
        line 158: 57
        line 159: 64
        line 163: 97
        line 164: 109
        line 165: 117
        line 166: 127
        line 167: 136
        line 168: 146
        line 165: 155
        line 172: 161
        line 173: 165
        line 178: 174
        line 181: 191
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          136      19     8 alpha   C
          120      41     7     i   I
            0     192     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     192     1  name   Ljava/lang/String;
            0     192     2 base64Alphabet   Ljava/lang/String;
            0     192     3 writePadding   Z
            0     192     4 paddingChar   C
            0     192     5 maxLineLength   I
           57     135     6 alphaLen   I
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 97
          locals = [ class com/fasterxml/jackson/core/Base64Variant, class java/lang/String, class java/lang/String, int, int, int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 40
        frame_type = 12 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class com/fasterxml/jackson/core/Base64Variant ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class com/fasterxml/jackson/core/Base64Variant, class java/lang/String, class java/lang/String, int, int, int, int ]
          stack = [ class com/fasterxml/jackson/core/Base64Variant, class com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour ]

  public com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, int);
    descriptor: (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_1
         4: getfield      #6                  // Field _writePadding:Z
         7: aload_1
         8: getfield      #7                  // Field _paddingChar:C
        11: iload_3
        12: invokespecial #25                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
        15: return
      LineNumberTable:
        line 196: 0
        line 197: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      16     1  base   Lcom/fasterxml/jackson/core/Base64Variant;
            0      16     2  name   Ljava/lang/String;
            0      16     3 maxLineLength   I

  public com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, int);
    descriptor: (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: iload         4
         6: aload_1
         7: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
        10: iload         5
        12: invokespecial #26                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
        15: return
      LineNumberTable:
        line 214: 0
        line 215: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      16     1  base   Lcom/fasterxml/jackson/core/Base64Variant;
            0      16     2  name   Ljava/lang/String;
            0      16     3 writePadding   Z
            0      16     4 paddingChar   C
            0      16     5 maxLineLength   I

  private com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, java.lang.String, boolean, char, com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour, int);
    descriptor: (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=10, args_size=7
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: sipush        128
         8: newarray       int
        10: putfield      #2                  // Field _asciiToBase64:[I
        13: aload_0
        14: bipush        64
        16: newarray       char
        18: putfield      #3                  // Field _base64ToAsciiC:[C
        21: aload_0
        22: bipush        64
        24: newarray       byte
        26: putfield      #4                  // Field _base64ToAsciiB:[B
        29: aload_0
        30: aload_2
        31: putfield      #5                  // Field _name:Ljava/lang/String;
        34: aload_1
        35: getfield      #4                  // Field _base64ToAsciiB:[B
        38: astore        7
        40: aload         7
        42: iconst_0
        43: aload_0
        44: getfield      #4                  // Field _base64ToAsciiB:[B
        47: iconst_0
        48: aload         7
        50: arraylength
        51: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        54: aload_1
        55: getfield      #3                  // Field _base64ToAsciiC:[C
        58: astore        8
        60: aload         8
        62: iconst_0
        63: aload_0
        64: getfield      #3                  // Field _base64ToAsciiC:[C
        67: iconst_0
        68: aload         8
        70: arraylength
        71: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        74: aload_1
        75: getfield      #2                  // Field _asciiToBase64:[I
        78: astore        9
        80: aload         9
        82: iconst_0
        83: aload_0
        84: getfield      #2                  // Field _asciiToBase64:[I
        87: iconst_0
        88: aload         9
        90: arraylength
        91: invokestatic  #27                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
        94: aload_0
        95: iload_3
        96: putfield      #6                  // Field _writePadding:Z
        99: aload_0
       100: iload         4
       102: putfield      #7                  // Field _paddingChar:C
       105: aload_0
       106: iload         6
       108: putfield      #8                  // Field _maxLineLength:I
       111: aload_0
       112: aload         5
       114: putfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
       117: return
      LineNumberTable:
        line 219: 0
        line 82: 4
        line 88: 13
        line 94: 21
        line 220: 29
        line 221: 34
        line 222: 40
        line 223: 54
        line 224: 60
        line 225: 74
        line 226: 80
        line 228: 94
        line 229: 99
        line 230: 105
        line 231: 111
        line 232: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     118     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     118     1  base   Lcom/fasterxml/jackson/core/Base64Variant;
            0     118     2  name   Ljava/lang/String;
            0     118     3 writePadding   Z
            0     118     4 paddingChar   C
            0     118     5 paddingReadBehaviour   Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
            0     118     6 maxLineLength   I
           40      78     7  srcB   [B
           60      58     8  srcC   [C
           80      38     9  srcV   [I

  private com.fasterxml.jackson.core.Base64Variant(com.fasterxml.jackson.core.Base64Variant, com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour);
    descriptor: (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=7, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_1
         3: getfield      #5                  // Field _name:Ljava/lang/String;
         6: aload_1
         7: getfield      #6                  // Field _writePadding:Z
        10: aload_1
        11: getfield      #7                  // Field _paddingChar:C
        14: aload_2
        15: aload_1
        16: getfield      #8                  // Field _maxLineLength:I
        19: invokespecial #26                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
        22: return
      LineNumberTable:
        line 235: 0
        line 236: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      23     1  base   Lcom/fasterxml/jackson/core/Base64Variant;
            0      23     2 paddingReadBehaviour   Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;

  public com.fasterxml.jackson.core.Base64Variant withPaddingAllowed();
    descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #28                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
         7: areturn
      LineNumberTable:
        line 244: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public com.fasterxml.jackson.core.Base64Variant withPaddingRequired();
    descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
         7: areturn
      LineNumberTable:
        line 252: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public com.fasterxml.jackson.core.Base64Variant withPaddingForbidden();
    descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         4: invokevirtual #29                 // Method withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
         7: areturn
      LineNumberTable:
        line 260: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public com.fasterxml.jackson.core.Base64Variant withReadPadding(com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour);
    descriptor: (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         5: if_acmpne     12
         8: aload_0
         9: goto          21
        12: new           #20                 // class com/fasterxml/jackson/core/Base64Variant
        15: dup
        16: aload_0
        17: aload_1
        18: invokespecial #30                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V
        21: areturn
      LineNumberTable:
        line 272: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      22     1 readPadding   Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class com/fasterxml/jackson/core/Base64Variant ]

  public com.fasterxml.jackson.core.Base64Variant withWritePadding(boolean);
    descriptor: (Z)Lcom/fasterxml/jackson/core/Base64Variant;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=2, args_size=2
         0: iload_1
         1: aload_0
         2: getfield      #6                  // Field _writePadding:Z
         5: if_icmpne     12
         8: aload_0
         9: goto          33
        12: new           #20                 // class com/fasterxml/jackson/core/Base64Variant
        15: dup
        16: aload_0
        17: aload_0
        18: getfield      #5                  // Field _name:Ljava/lang/String;
        21: iload_1
        22: aload_0
        23: getfield      #7                  // Field _paddingChar:C
        26: aload_0
        27: getfield      #8                  // Field _maxLineLength:I
        30: invokespecial #25                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V
        33: areturn
      LineNumberTable:
        line 284: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      34     1 writePadding   Z
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class com/fasterxml/jackson/core/Base64Variant ]

  protected java.lang.Object readResolve();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=8, locals=2, args_size=1
         0: aload_0
         1: getfield      #5                  // Field _name:Ljava/lang/String;
         4: invokestatic  #31                 // Method com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;
         7: astore_1
         8: aload_0
         9: getfield      #6                  // Field _writePadding:Z
        12: aload_1
        13: getfield      #6                  // Field _writePadding:Z
        16: if_icmpne     63
        19: aload_0
        20: getfield      #7                  // Field _paddingChar:C
        23: aload_1
        24: getfield      #7                  // Field _paddingChar:C
        27: if_icmpne     63
        30: aload_0
        31: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
        34: aload_1
        35: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
        38: if_acmpne     63
        41: aload_0
        42: getfield      #8                  // Field _maxLineLength:I
        45: aload_1
        46: getfield      #8                  // Field _maxLineLength:I
        49: if_icmpne     63
        52: aload_0
        53: getfield      #6                  // Field _writePadding:Z
        56: aload_1
        57: getfield      #6                  // Field _writePadding:Z
        60: if_icmpeq     92
        63: new           #20                 // class com/fasterxml/jackson/core/Base64Variant
        66: dup
        67: aload_1
        68: aload_0
        69: getfield      #5                  // Field _name:Ljava/lang/String;
        72: aload_0
        73: getfield      #6                  // Field _writePadding:Z
        76: aload_0
        77: getfield      #7                  // Field _paddingChar:C
        80: aload_0
        81: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
        84: aload_0
        85: getfield      #8                  // Field _maxLineLength:I
        88: invokespecial #26                 // Method "<init>":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V
        91: areturn
        92: aload_1
        93: areturn
      LineNumberTable:
        line 299: 0
        line 300: 8
        line 306: 63
        line 309: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            8      86     1  base   Lcom/fasterxml/jackson/core/Base64Variant;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 63
          locals = [ class com/fasterxml/jackson/core/Base64Variant ]
        frame_type = 28 /* same */

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 318: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public boolean usesPadding();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #6                  // Field _writePadding:Z
         4: ireturn
      LineNumberTable:
        line 324: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public boolean requiresPaddingOnRead();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         4: getstatic     #22                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         7: if_acmpne     14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      LineNumberTable:
        line 332: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean acceptsPaddingOnRead();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         4: getstatic     #23                 // Field com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         7: if_acmpeq     14
        10: iconst_1
        11: goto          15
        14: iconst_0
        15: ireturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean usesPaddingChar(char);
    descriptor: (C)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: aload_0
         2: getfield      #7                  // Field _paddingChar:C
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 344: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      14     1     c   C
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean usesPaddingChar(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: aload_0
         2: getfield      #7                  // Field _paddingChar:C
         5: if_icmpne     12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: ireturn
      LineNumberTable:
        line 345: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      14     1    ch   I
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public com.fasterxml.jackson.core.Base64Variant$PaddingReadBehaviour paddingReadBehaviour();
    descriptor: ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
         4: areturn
      LineNumberTable:
        line 353: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public char getPaddingChar();
    descriptor: ()C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field _paddingChar:C
         4: ireturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public byte getPaddingByte();
    descriptor: ()B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field _paddingChar:C
         4: i2b
         5: ireturn
      LineNumberTable:
        line 356: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public int getMaxLineLength();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #8                  // Field _maxLineLength:I
         4: ireturn
      LineNumberTable:
        line 358: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public int decodeBase64Char(char);
    descriptor: (C)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: bipush        127
         5: if_icmpgt     17
         8: aload_0
         9: getfield      #2                  // Field _asciiToBase64:[I
        12: iload_2
        13: iaload
        14: goto          18
        17: iconst_m1
        18: ireturn
      LineNumberTable:
        line 373: 0
        line 374: 2
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      19     1     c   C
            2      17     2    ch   I
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int decodeBase64Char(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: iload_1
         1: bipush        127
         3: if_icmpgt     15
         6: aload_0
         7: getfield      #2                  // Field _asciiToBase64:[I
        10: iload_1
        11: iaload
        12: goto          16
        15: iconst_m1
        16: ireturn
      LineNumberTable:
        line 379: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      17     1    ch   I
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int decodeBase64Byte(byte);
    descriptor: (B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: ifge          8
         6: iconst_m1
         7: ireturn
         8: aload_0
         9: getfield      #2                  // Field _asciiToBase64:[I
        12: iload_2
        13: iaload
        14: ireturn
      LineNumberTable:
        line 384: 0
        line 386: 2
        line 387: 6
        line 389: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      15     1     b   B
            2      13     2    ch   I
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ int ]

  public char encodeBase64BitsAsChar(int);
    descriptor: (I)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #3                  // Field _base64ToAsciiC:[C
         4: iload_1
         5: caload
         6: ireturn
      LineNumberTable:
        line 402: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0       7     1 value   I

  public int encodeBase64Chunk(int, char[], int);
    descriptor: (I[CI)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_2
         1: iload_3
         2: iinc          3, 1
         5: aload_0
         6: getfield      #3                  // Field _base64ToAsciiC:[C
         9: iload_1
        10: bipush        18
        12: ishr
        13: bipush        63
        15: iand
        16: caload
        17: castore
        18: aload_2
        19: iload_3
        20: iinc          3, 1
        23: aload_0
        24: getfield      #3                  // Field _base64ToAsciiC:[C
        27: iload_1
        28: bipush        12
        30: ishr
        31: bipush        63
        33: iand
        34: caload
        35: castore
        36: aload_2
        37: iload_3
        38: iinc          3, 1
        41: aload_0
        42: getfield      #3                  // Field _base64ToAsciiC:[C
        45: iload_1
        46: bipush        6
        48: ishr
        49: bipush        63
        51: iand
        52: caload
        53: castore
        54: aload_2
        55: iload_3
        56: iinc          3, 1
        59: aload_0
        60: getfield      #3                  // Field _base64ToAsciiC:[C
        63: iload_1
        64: bipush        63
        66: iand
        67: caload
        68: castore
        69: iload_3
        70: ireturn
      LineNumberTable:
        line 419: 0
        line 420: 18
        line 421: 36
        line 422: 54
        line 423: 69
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      71     1   b24   I
            0      71     2 buffer   [C
            0      71     3 outPtr   I

  public void encodeBase64Chunk(java.lang.StringBuilder, int);
    descriptor: (Ljava/lang/StringBuilder;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #3                  // Field _base64ToAsciiC:[C
         5: iload_2
         6: bipush        18
         8: ishr
         9: bipush        63
        11: iand
        12: caload
        13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        16: pop
        17: aload_1
        18: aload_0
        19: getfield      #3                  // Field _base64ToAsciiC:[C
        22: iload_2
        23: bipush        12
        25: ishr
        26: bipush        63
        28: iand
        29: caload
        30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        33: pop
        34: aload_1
        35: aload_0
        36: getfield      #3                  // Field _base64ToAsciiC:[C
        39: iload_2
        40: bipush        6
        42: ishr
        43: bipush        63
        45: iand
        46: caload
        47: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: getfield      #3                  // Field _base64ToAsciiC:[C
        56: iload_2
        57: bipush        63
        59: iand
        60: caload
        61: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        64: pop
        65: return
      LineNumberTable:
        line 428: 0
        line 429: 17
        line 430: 34
        line 431: 51
        line 432: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      66     1    sb   Ljava/lang/StringBuilder;
            0      66     2   b24   I

  public int encodeBase64Partial(int, int, char[], int);
    descriptor: (II[CI)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_3
         1: iload         4
         3: iinc          4, 1
         6: aload_0
         7: getfield      #3                  // Field _base64ToAsciiC:[C
        10: iload_1
        11: bipush        18
        13: ishr
        14: bipush        63
        16: iand
        17: caload
        18: castore
        19: aload_3
        20: iload         4
        22: iinc          4, 1
        25: aload_0
        26: getfield      #3                  // Field _base64ToAsciiC:[C
        29: iload_1
        30: bipush        12
        32: ishr
        33: bipush        63
        35: iand
        36: caload
        37: castore
        38: aload_0
        39: invokevirtual #33                 // Method usesPadding:()Z
        42: ifeq          90
        45: aload_3
        46: iload         4
        48: iinc          4, 1
        51: iload_2
        52: iconst_2
        53: if_icmpne     71
        56: aload_0
        57: getfield      #3                  // Field _base64ToAsciiC:[C
        60: iload_1
        61: bipush        6
        63: ishr
        64: bipush        63
        66: iand
        67: caload
        68: goto          75
        71: aload_0
        72: getfield      #7                  // Field _paddingChar:C
        75: castore
        76: aload_3
        77: iload         4
        79: iinc          4, 1
        82: aload_0
        83: getfield      #7                  // Field _paddingChar:C
        86: castore
        87: goto          114
        90: iload_2
        91: iconst_2
        92: if_icmpne     114
        95: aload_3
        96: iload         4
        98: iinc          4, 1
       101: aload_0
       102: getfield      #3                  // Field _base64ToAsciiC:[C
       105: iload_1
       106: bipush        6
       108: ishr
       109: bipush        63
       111: iand
       112: caload
       113: castore
       114: iload         4
       116: ireturn
      LineNumberTable:
        line 449: 0
        line 450: 19
        line 451: 38
        line 452: 45
        line 454: 76
        line 456: 90
        line 457: 95
        line 460: 114
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     117     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     117     1  bits   I
            0     117     2 outputBytes   I
            0     117     3 buffer   [C
            0     117     4 outPtr   I
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 71
          locals = [ class com/fasterxml/jackson/core/Base64Variant, int, int, class "[C", int ]
          stack = [ class "[C", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class com/fasterxml/jackson/core/Base64Variant, int, int, class "[C", int ]
          stack = [ class "[C", int, int ]
        frame_type = 14 /* same */
        frame_type = 23 /* same */

  public void encodeBase64Partial(java.lang.StringBuilder, int, int);
    descriptor: (Ljava/lang/StringBuilder;II)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #3                  // Field _base64ToAsciiC:[C
         5: iload_2
         6: bipush        18
         8: ishr
         9: bipush        63
        11: iand
        12: caload
        13: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        16: pop
        17: aload_1
        18: aload_0
        19: getfield      #3                  // Field _base64ToAsciiC:[C
        22: iload_2
        23: bipush        12
        25: ishr
        26: bipush        63
        28: iand
        29: caload
        30: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        33: pop
        34: aload_0
        35: invokevirtual #33                 // Method usesPadding:()Z
        38: ifeq          82
        41: aload_1
        42: iload_3
        43: iconst_2
        44: if_icmpne     62
        47: aload_0
        48: getfield      #3                  // Field _base64ToAsciiC:[C
        51: iload_2
        52: bipush        6
        54: ishr
        55: bipush        63
        57: iand
        58: caload
        59: goto          66
        62: aload_0
        63: getfield      #7                  // Field _paddingChar:C
        66: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        69: pop
        70: aload_1
        71: aload_0
        72: getfield      #7                  // Field _paddingChar:C
        75: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        78: pop
        79: goto          104
        82: iload_3
        83: iconst_2
        84: if_icmpne     104
        87: aload_1
        88: aload_0
        89: getfield      #3                  // Field _base64ToAsciiC:[C
        92: iload_2
        93: bipush        6
        95: ishr
        96: bipush        63
        98: iand
        99: caload
       100: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       103: pop
       104: return
      LineNumberTable:
        line 465: 0
        line 466: 17
        line 467: 34
        line 468: 41
        line 470: 70
        line 472: 82
        line 473: 87
        line 476: 104
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     105     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     105     1    sb   Ljava/lang/StringBuilder;
            0     105     2  bits   I
            0     105     3 outputBytes   I
      StackMapTable: number_of_entries = 4
        frame_type = 126 /* same_locals_1_stack_item */
          stack = [ class java/lang/StringBuilder ]
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class com/fasterxml/jackson/core/Base64Variant, class java/lang/StringBuilder, int, int ]
          stack = [ class java/lang/StringBuilder, int ]
        frame_type = 15 /* same */
        frame_type = 21 /* same */

  public byte encodeBase64BitsAsByte(int);
    descriptor: (I)B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #4                  // Field _base64ToAsciiB:[B
         4: iload_1
         5: baload
         6: ireturn
      LineNumberTable:
        line 481: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0       7     1 value   I

  public int encodeBase64Chunk(int, byte[], int);
    descriptor: (I[BI)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_2
         1: iload_3
         2: iinc          3, 1
         5: aload_0
         6: getfield      #4                  // Field _base64ToAsciiB:[B
         9: iload_1
        10: bipush        18
        12: ishr
        13: bipush        63
        15: iand
        16: baload
        17: bastore
        18: aload_2
        19: iload_3
        20: iinc          3, 1
        23: aload_0
        24: getfield      #4                  // Field _base64ToAsciiB:[B
        27: iload_1
        28: bipush        12
        30: ishr
        31: bipush        63
        33: iand
        34: baload
        35: bastore
        36: aload_2
        37: iload_3
        38: iinc          3, 1
        41: aload_0
        42: getfield      #4                  // Field _base64ToAsciiB:[B
        45: iload_1
        46: bipush        6
        48: ishr
        49: bipush        63
        51: iand
        52: baload
        53: bastore
        54: aload_2
        55: iload_3
        56: iinc          3, 1
        59: aload_0
        60: getfield      #4                  // Field _base64ToAsciiB:[B
        63: iload_1
        64: bipush        63
        66: iand
        67: baload
        68: bastore
        69: iload_3
        70: ireturn
      LineNumberTable:
        line 496: 0
        line 497: 18
        line 498: 36
        line 499: 54
        line 500: 69
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      71     1   b24   I
            0      71     2 buffer   [B
            0      71     3 outPtr   I

  public int encodeBase64Partial(int, int, byte[], int);
    descriptor: (II[BI)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=5
         0: aload_3
         1: iload         4
         3: iinc          4, 1
         6: aload_0
         7: getfield      #4                  // Field _base64ToAsciiB:[B
        10: iload_1
        11: bipush        18
        13: ishr
        14: bipush        63
        16: iand
        17: baload
        18: bastore
        19: aload_3
        20: iload         4
        22: iinc          4, 1
        25: aload_0
        26: getfield      #4                  // Field _base64ToAsciiB:[B
        29: iload_1
        30: bipush        12
        32: ishr
        33: bipush        63
        35: iand
        36: baload
        37: bastore
        38: aload_0
        39: invokevirtual #33                 // Method usesPadding:()Z
        42: ifeq          93
        45: aload_0
        46: getfield      #7                  // Field _paddingChar:C
        49: i2b
        50: istore        5
        52: aload_3
        53: iload         4
        55: iinc          4, 1
        58: iload_2
        59: iconst_2
        60: if_icmpne     78
        63: aload_0
        64: getfield      #4                  // Field _base64ToAsciiB:[B
        67: iload_1
        68: bipush        6
        70: ishr
        71: bipush        63
        73: iand
        74: baload
        75: goto          80
        78: iload         5
        80: bastore
        81: aload_3
        82: iload         4
        84: iinc          4, 1
        87: iload         5
        89: bastore
        90: goto          117
        93: iload_2
        94: iconst_2
        95: if_icmpne     117
        98: aload_3
        99: iload         4
       101: iinc          4, 1
       104: aload_0
       105: getfield      #4                  // Field _base64ToAsciiB:[B
       108: iload_1
       109: bipush        6
       111: ishr
       112: bipush        63
       114: iand
       115: baload
       116: bastore
       117: iload         4
       119: ireturn
      LineNumberTable:
        line 518: 0
        line 519: 19
        line 520: 38
        line 521: 45
        line 522: 52
        line 524: 81
        line 525: 90
        line 526: 93
        line 527: 98
        line 530: 117
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           52      38     5    pb   B
            0     120     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     120     1  bits   I
            0     120     2 outputBytes   I
            0     120     3 buffer   [B
            0     120     4 outPtr   I
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 78
          locals = [ class com/fasterxml/jackson/core/Base64Variant, int, int, class "[B", int, int ]
          stack = [ class "[B", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class com/fasterxml/jackson/core/Base64Variant, int, int, class "[B", int, int ]
          stack = [ class "[B", int, int ]
        frame_type = 250 /* chop */
          offset_delta = 12
        frame_type = 23 /* same */

  public java.lang.String encode(byte[]);
    descriptor: ([B)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: invokevirtual #34                 // Method encode:([BZ)Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 550: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0       7     1 input   [B

  public java.lang.String encode(byte[], boolean);
    descriptor: ([BZ)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=10, args_size=3
         0: aload_1
         1: arraylength
         2: istore_3
         3: new           #11                 // class java/lang/StringBuilder
         6: dup
         7: iload_3
         8: iload_3
         9: iconst_2
        10: ishr
        11: iadd
        12: iload_3
        13: iconst_3
        14: ishr
        15: iadd
        16: invokespecial #35                 // Method java/lang/StringBuilder."<init>":(I)V
        19: astore        4
        21: iload_2
        22: ifeq          33
        25: aload         4
        27: bipush        34
        29: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        32: pop
        33: aload_0
        34: invokevirtual #36                 // Method getMaxLineLength:()I
        37: iconst_2
        38: ishr
        39: istore        5
        41: iconst_0
        42: istore        6
        44: iload_3
        45: iconst_3
        46: isub
        47: istore        7
        49: iload         6
        51: iload         7
        53: if_icmpgt     146
        56: aload_1
        57: iload         6
        59: iinc          6, 1
        62: baload
        63: bipush        8
        65: ishl
        66: istore        8
        68: iload         8
        70: aload_1
        71: iload         6
        73: iinc          6, 1
        76: baload
        77: sipush        255
        80: iand
        81: ior
        82: istore        8
        84: iload         8
        86: bipush        8
        88: ishl
        89: aload_1
        90: iload         6
        92: iinc          6, 1
        95: baload
        96: sipush        255
        99: iand
       100: ior
       101: istore        8
       103: aload_0
       104: aload         4
       106: iload         8
       108: invokevirtual #37                 // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V
       111: iinc          5, -1
       114: iload         5
       116: ifgt          143
       119: aload         4
       121: bipush        92
       123: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       126: pop
       127: aload         4
       129: bipush        110
       131: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       134: pop
       135: aload_0
       136: invokevirtual #36                 // Method getMaxLineLength:()I
       139: iconst_2
       140: ishr
       141: istore        5
       143: goto          49
       146: iload_3
       147: iload         6
       149: isub
       150: istore        8
       152: iload         8
       154: ifle          204
       157: aload_1
       158: iload         6
       160: iinc          6, 1
       163: baload
       164: bipush        16
       166: ishl
       167: istore        9
       169: iload         8
       171: iconst_2
       172: if_icmpne     194
       175: iload         9
       177: aload_1
       178: iload         6
       180: iinc          6, 1
       183: baload
       184: sipush        255
       187: iand
       188: bipush        8
       190: ishl
       191: ior
       192: istore        9
       194: aload_0
       195: aload         4
       197: iload         9
       199: iload         8
       201: invokevirtual #38                 // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V
       204: iload_2
       205: ifeq          216
       208: aload         4
       210: bipush        34
       212: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       215: pop
       216: aload         4
       218: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       221: areturn
      LineNumberTable:
        line 567: 0
        line 568: 3
        line 569: 21
        line 570: 25
        line 573: 33
        line 576: 41
        line 577: 44
        line 579: 49
        line 581: 56
        line 582: 68
        line 583: 84
        line 584: 103
        line 585: 111
        line 587: 119
        line 588: 127
        line 589: 135
        line 591: 143
        line 594: 146
        line 595: 152
        line 596: 157
        line 597: 169
        line 598: 175
        line 600: 194
        line 603: 204
        line 604: 208
        line 606: 216
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           68      75     8   b24   I
          169      35     9   b24   I
            0     222     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     222     1 input   [B
            0     222     2 addQuotes   Z
            3     219     3 inputEnd   I
           21     201     4    sb   Ljava/lang/StringBuilder;
           41     181     5 chunksBeforeLF   I
           44     178     6 inputPtr   I
           49     173     7 safeInputEnd   I
          152      70     8 inputLeft   I
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ int, class java/lang/StringBuilder ]
        frame_type = 254 /* append */
          offset_delta = 15
          locals = [ int, int, int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 93
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 47
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 11 /* same */

  public java.lang.String encode(byte[], boolean, java.lang.String);
    descriptor: ([BZLjava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=4
         0: aload_1
         1: arraylength
         2: istore        4
         4: new           #11                 // class java/lang/StringBuilder
         7: dup
         8: iload         4
        10: iload         4
        12: iconst_2
        13: ishr
        14: iadd
        15: iload         4
        17: iconst_3
        18: ishr
        19: iadd
        20: invokespecial #35                 // Method java/lang/StringBuilder."<init>":(I)V
        23: astore        5
        25: iload_2
        26: ifeq          37
        29: aload         5
        31: bipush        34
        33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        36: pop
        37: aload_0
        38: invokevirtual #36                 // Method getMaxLineLength:()I
        41: iconst_2
        42: ishr
        43: istore        6
        45: iconst_0
        46: istore        7
        48: iload         4
        50: iconst_3
        51: isub
        52: istore        8
        54: iload         7
        56: iload         8
        58: if_icmpgt     142
        61: aload_1
        62: iload         7
        64: iinc          7, 1
        67: baload
        68: bipush        8
        70: ishl
        71: istore        9
        73: iload         9
        75: aload_1
        76: iload         7
        78: iinc          7, 1
        81: baload
        82: sipush        255
        85: iand
        86: ior
        87: istore        9
        89: iload         9
        91: bipush        8
        93: ishl
        94: aload_1
        95: iload         7
        97: iinc          7, 1
       100: baload
       101: sipush        255
       104: iand
       105: ior
       106: istore        9
       108: aload_0
       109: aload         5
       111: iload         9
       113: invokevirtual #37                 // Method encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V
       116: iinc          6, -1
       119: iload         6
       121: ifgt          139
       124: aload         5
       126: aload_3
       127: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_0
       132: invokevirtual #36                 // Method getMaxLineLength:()I
       135: iconst_2
       136: ishr
       137: istore        6
       139: goto          54
       142: iload         4
       144: iload         7
       146: isub
       147: istore        9
       149: iload         9
       151: ifle          201
       154: aload_1
       155: iload         7
       157: iinc          7, 1
       160: baload
       161: bipush        16
       163: ishl
       164: istore        10
       166: iload         9
       168: iconst_2
       169: if_icmpne     191
       172: iload         10
       174: aload_1
       175: iload         7
       177: iinc          7, 1
       180: baload
       181: sipush        255
       184: iand
       185: bipush        8
       187: ishl
       188: ior
       189: istore        10
       191: aload_0
       192: aload         5
       194: iload         10
       196: iload         9
       198: invokevirtual #38                 // Method encodeBase64Partial:(Ljava/lang/StringBuilder;II)V
       201: iload_2
       202: ifeq          213
       205: aload         5
       207: bipush        34
       209: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       212: pop
       213: aload         5
       215: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       218: areturn
      LineNumberTable:
        line 624: 0
        line 625: 4
        line 626: 25
        line 627: 29
        line 630: 37
        line 632: 45
        line 633: 48
        line 635: 54
        line 636: 61
        line 637: 73
        line 638: 89
        line 639: 108
        line 640: 116
        line 641: 124
        line 642: 131
        line 644: 139
        line 645: 142
        line 646: 149
        line 647: 154
        line 648: 166
        line 649: 172
        line 651: 191
        line 654: 201
        line 655: 205
        line 657: 213
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           73      66     9   b24   I
          166      35    10   b24   I
            0     219     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     219     1 input   [B
            0     219     2 addQuotes   Z
            0     219     3 linefeed   Ljava/lang/String;
            4     215     4 inputEnd   I
           25     194     5    sb   Ljava/lang/StringBuilder;
           45     174     6 chunksBeforeLF   I
           48     171     7 inputPtr   I
           54     165     8 safeInputEnd   I
          149      70     9 inputLeft   I
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ int, class java/lang/StringBuilder ]
        frame_type = 254 /* append */
          offset_delta = 16
          locals = [ int, int, int ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 84
        frame_type = 2 /* same */
        frame_type = 253 /* append */
          offset_delta = 48
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 11 /* same */

  public byte[] decode(java.lang.String) throws java.lang.IllegalArgumentException;
    descriptor: (Ljava/lang/String;)[B
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: new           #39                 // class com/fasterxml/jackson/core/util/ByteArrayBuilder
         3: dup
         4: invokespecial #40                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder."<init>":()V
         7: astore_2
         8: aload_0
         9: aload_1
        10: aload_2
        11: invokevirtual #41                 // Method decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V
        14: aload_2
        15: invokevirtual #42                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B
        18: areturn
      LineNumberTable:
        line 675: 0
        line 676: 8
        line 677: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      19     1 input   Ljava/lang/String;
            8      11     2     b   Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;
    Exceptions:
      throws java.lang.IllegalArgumentException

  public void decode(java.lang.String, com.fasterxml.jackson.core.util.ByteArrayBuilder) throws java.lang.IllegalArgumentException;
    descriptor: (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=3
         0: iconst_0
         1: istore_3
         2: aload_1
         3: invokevirtual #9                  // Method java/lang/String.length:()I
         6: istore        4
         8: iload_3
         9: iload         4
        11: if_icmplt     17
        14: goto          394
        17: aload_1
        18: iload_3
        19: iinc          3, 1
        22: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
        25: istore        5
        27: iload         5
        29: bipush        32
        31: if_icmple     8
        34: aload_0
        35: iload         5
        37: invokevirtual #44                 // Method decodeBase64Char:(C)I
        40: istore        6
        42: iload         6
        44: ifge          55
        47: aload_0
        48: iload         5
        50: iconst_0
        51: aconst_null
        52: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
        55: iload         6
        57: istore        7
        59: iload_3
        60: iload         4
        62: if_icmplt     69
        65: aload_0
        66: invokevirtual #46                 // Method _reportBase64EOF:()V
        69: aload_1
        70: iload_3
        71: iinc          3, 1
        74: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
        77: istore        5
        79: aload_0
        80: iload         5
        82: invokevirtual #44                 // Method decodeBase64Char:(C)I
        85: istore        6
        87: iload         6
        89: ifge          100
        92: aload_0
        93: iload         5
        95: iconst_1
        96: aconst_null
        97: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
       100: iload         7
       102: bipush        6
       104: ishl
       105: iload         6
       107: ior
       108: istore        7
       110: iload_3
       111: iload         4
       113: if_icmplt     142
       116: aload_0
       117: invokevirtual #47                 // Method requiresPaddingOnRead:()Z
       120: ifne          138
       123: iload         7
       125: iconst_4
       126: ishr
       127: istore        7
       129: aload_2
       130: iload         7
       132: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V
       135: goto          394
       138: aload_0
       139: invokevirtual #46                 // Method _reportBase64EOF:()V
       142: aload_1
       143: iload_3
       144: iinc          3, 1
       147: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
       150: istore        5
       152: aload_0
       153: iload         5
       155: invokevirtual #44                 // Method decodeBase64Char:(C)I
       158: istore        6
       160: iload         6
       162: ifge          269
       165: iload         6
       167: bipush        -2
       169: if_icmpeq     180
       172: aload_0
       173: iload         5
       175: iconst_2
       176: aconst_null
       177: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
       180: aload_0
       181: invokevirtual #49                 // Method acceptsPaddingOnRead:()Z
       184: ifne          191
       187: aload_0
       188: invokevirtual #50                 // Method _reportBase64UnexpectedPadding:()V
       191: iload_3
       192: iload         4
       194: if_icmplt     201
       197: aload_0
       198: invokevirtual #46                 // Method _reportBase64EOF:()V
       201: aload_1
       202: iload_3
       203: iinc          3, 1
       206: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
       209: istore        5
       211: aload_0
       212: iload         5
       214: invokevirtual #51                 // Method usesPaddingChar:(C)Z
       217: ifne          254
       220: aload_0
       221: iload         5
       223: iconst_3
       224: new           #11                 // class java/lang/StringBuilder
       227: dup
       228: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       231: ldc           #52                 // String expected padding character \'
       233: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       236: aload_0
       237: invokevirtual #53                 // Method getPaddingChar:()C
       240: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       243: ldc           #54                 // String \'
       245: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       248: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       251: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
       254: iload         7
       256: iconst_4
       257: ishr
       258: istore        7
       260: aload_2
       261: iload         7
       263: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V
       266: goto          8
       269: iload         7
       271: bipush        6
       273: ishl
       274: iload         6
       276: ior
       277: istore        7
       279: iload_3
       280: iload         4
       282: if_icmplt     311
       285: aload_0
       286: invokevirtual #47                 // Method requiresPaddingOnRead:()Z
       289: ifne          307
       292: iload         7
       294: iconst_2
       295: ishr
       296: istore        7
       298: aload_2
       299: iload         7
       301: invokevirtual #55                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V
       304: goto          394
       307: aload_0
       308: invokevirtual #46                 // Method _reportBase64EOF:()V
       311: aload_1
       312: iload_3
       313: iinc          3, 1
       316: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
       319: istore        5
       321: aload_0
       322: iload         5
       324: invokevirtual #44                 // Method decodeBase64Char:(C)I
       327: istore        6
       329: iload         6
       331: ifge          375
       334: iload         6
       336: bipush        -2
       338: if_icmpeq     349
       341: aload_0
       342: iload         5
       344: iconst_3
       345: aconst_null
       346: invokevirtual #45                 // Method _reportInvalidBase64:(CILjava/lang/String;)V
       349: aload_0
       350: invokevirtual #49                 // Method acceptsPaddingOnRead:()Z
       353: ifne          360
       356: aload_0
       357: invokevirtual #50                 // Method _reportBase64UnexpectedPadding:()V
       360: iload         7
       362: iconst_2
       363: ishr
       364: istore        7
       366: aload_2
       367: iload         7
       369: invokevirtual #55                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V
       372: goto          391
       375: iload         7
       377: bipush        6
       379: ishl
       380: iload         6
       382: ior
       383: istore        7
       385: aload_2
       386: iload         7
       388: invokevirtual #56                 // Method com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V
       391: goto          8
       394: return
      LineNumberTable:
        line 698: 0
        line 699: 2
        line 706: 8
        line 707: 14
        line 709: 17
        line 710: 27
        line 711: 34
        line 712: 42
        line 713: 47
        line 715: 55
        line 717: 59
        line 718: 65
        line 720: 69
        line 721: 79
        line 722: 87
        line 723: 92
        line 725: 100
        line 727: 110
        line 729: 116
        line 730: 123
        line 731: 129
        line 732: 135
        line 734: 138
        line 736: 142
        line 737: 152
        line 740: 160
        line 741: 165
        line 742: 172
        line 744: 180
        line 745: 187
        line 748: 191
        line 749: 197
        line 751: 201
        line 752: 211
        line 753: 220
        line 756: 254
        line 757: 260
        line 758: 266
        line 761: 269
        line 763: 279
        line 765: 285
        line 766: 292
        line 767: 298
        line 768: 304
        line 770: 307
        line 772: 311
        line 773: 321
        line 774: 329
        line 775: 334
        line 776: 341
        line 778: 349
        line 779: 356
        line 781: 360
        line 782: 366
        line 785: 375
        line 786: 385
        line 788: 391
        line 789: 394
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27     364     5    ch   C
           42     349     6  bits   I
           59     332     7 decodedData   I
            0     395     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     395     1   str   Ljava/lang/String;
            0     395     2 builder   Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;
            2     393     3   ptr   I
            8     387     4   len   I
      StackMapTable: number_of_entries = 19
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ int, int ]
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 37
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ int ]
        frame_type = 30 /* same */
        frame_type = 37 /* same */
        frame_type = 3 /* same */
        frame_type = 37 /* same */
        frame_type = 10 /* same */
        frame_type = 9 /* same */
        frame_type = 52 /* same */
        frame_type = 14 /* same */
        frame_type = 37 /* same */
        frame_type = 3 /* same */
        frame_type = 37 /* same */
        frame_type = 10 /* same */
        frame_type = 14 /* same */
        frame_type = 248 /* chop */
          offset_delta = 15
        frame_type = 2 /* same */
    Exceptions:
      throws java.lang.IllegalArgumentException

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field _name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 798: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     7
         5: iconst_1
         6: ireturn
         7: aload_1
         8: ifnull        22
        11: aload_1
        12: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        15: aload_0
        16: invokevirtual #57                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        19: if_acmpeq     24
        22: iconst_0
        23: ireturn
        24: aload_1
        25: checkcast     #20                 // class com/fasterxml/jackson/core/Base64Variant
        28: astore_2
        29: aload_2
        30: getfield      #7                  // Field _paddingChar:C
        33: aload_0
        34: getfield      #7                  // Field _paddingChar:C
        37: if_icmpne     91
        40: aload_2
        41: getfield      #8                  // Field _maxLineLength:I
        44: aload_0
        45: getfield      #8                  // Field _maxLineLength:I
        48: if_icmpne     91
        51: aload_2
        52: getfield      #6                  // Field _writePadding:Z
        55: aload_0
        56: getfield      #6                  // Field _writePadding:Z
        59: if_icmpne     91
        62: aload_2
        63: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
        66: aload_0
        67: getfield      #24                 // Field _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;
        70: if_acmpne     91
        73: aload_0
        74: getfield      #5                  // Field _name:Ljava/lang/String;
        77: aload_2
        78: getfield      #5                  // Field _name:Ljava/lang/String;
        81: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        84: ifeq          91
        87: iconst_1
        88: goto          92
        91: iconst_0
        92: ireturn
      LineNumberTable:
        line 804: 0
        line 805: 7
        line 807: 24
        line 808: 29
        line 812: 81
        line 808: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      93     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0      93     1     o   Ljava/lang/Object;
           29      64     2 other   Lcom/fasterxml/jackson/core/Base64Variant;
      StackMapTable: number_of_entries = 5
        frame_type = 7 /* same */
        frame_type = 14 /* same */
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 66
          locals = [ class com/fasterxml/jackson/core/Base64Variant ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field _name:Ljava/lang/String;
         4: invokevirtual #59                 // Method java/lang/String.hashCode:()I
         7: ireturn
      LineNumberTable:
        line 818: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  protected void _reportInvalidBase64(char, int, java.lang.String) throws java.lang.IllegalArgumentException;
    descriptor: (CILjava/lang/String;)V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=5, args_size=4
         0: iload_1
         1: bipush        32
         3: if_icmpgt     49
         6: new           #11                 // class java/lang/StringBuilder
         9: dup
        10: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
        13: ldc           #60                 // String Illegal white space character (code 0x
        15: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        18: iload_1
        19: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
        22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: ldc           #62                 // String ) as character #
        27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: iload_2
        31: iconst_1
        32: iadd
        33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        36: ldc           #63                 // String  of 4-char base64 unit: can only used between units
        38: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: astore        4
        46: goto          184
        49: aload_0
        50: iload_1
        51: invokevirtual #51                 // Method usesPaddingChar:(C)Z
        54: ifeq          100
        57: new           #11                 // class java/lang/StringBuilder
        60: dup
        61: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
        64: ldc           #64                 // String Unexpected padding character (\'
        66: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        69: aload_0
        70: invokevirtual #53                 // Method getPaddingChar:()C
        73: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
        76: ldc           #65                 // String \') as character #
        78: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        81: iload_2
        82: iconst_1
        83: iadd
        84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        87: ldc           #66                 // String  of 4-char base64 unit: padding only legal as 3rd or 4th character
        89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        92: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        95: astore        4
        97: goto          184
       100: iload_1
       101: invokestatic  #67                 // Method java/lang/Character.isDefined:(C)Z
       104: ifeq          114
       107: iload_1
       108: invokestatic  #68                 // Method java/lang/Character.isISOControl:(C)Z
       111: ifeq          146
       114: new           #11                 // class java/lang/StringBuilder
       117: dup
       118: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       121: ldc           #69                 // String Illegal character (code 0x
       123: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       126: iload_1
       127: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
       130: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       133: ldc           #70                 // String ) in base64 content
       135: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       138: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       141: astore        4
       143: goto          184
       146: new           #11                 // class java/lang/StringBuilder
       149: dup
       150: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       153: ldc           #71                 // String Illegal character \'
       155: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       158: iload_1
       159: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       162: ldc           #72                 // String \' (code 0x
       164: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       167: iload_1
       168: invokestatic  #61                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
       171: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       174: ldc           #70                 // String ) in base64 content
       176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       179: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       182: astore        4
       184: aload_3
       185: ifnull        214
       188: new           #11                 // class java/lang/StringBuilder
       191: dup
       192: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
       195: aload         4
       197: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       200: ldc           #73                 // String :
       202: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       205: aload_3
       206: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       209: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       212: astore        4
       214: new           #10                 // class java/lang/IllegalArgumentException
       217: dup
       218: aload         4
       220: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       223: athrow
      LineNumberTable:
        line 837: 0
        line 838: 6
        line 839: 49
        line 840: 57
        line 841: 100
        line 843: 114
        line 845: 146
        line 847: 184
        line 848: 188
        line 850: 214
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           46       3     4  base   Ljava/lang/String;
           97       3     4  base   Ljava/lang/String;
          143       3     4  base   Ljava/lang/String;
            0     224     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
            0     224     1    ch   C
            0     224     2 bindex   I
            0     224     3   msg   Ljava/lang/String;
          184      40     4  base   Ljava/lang/String;
      StackMapTable: number_of_entries = 6
        frame_type = 49 /* same */
        frame_type = 50 /* same */
        frame_type = 13 /* same */
        frame_type = 31 /* same */
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class java/lang/String ]
        frame_type = 29 /* same */
    Exceptions:
      throws java.lang.IllegalArgumentException

  protected void _reportBase64EOF() throws java.lang.IllegalArgumentException;
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=1, args_size=1
         0: new           #10                 // class java/lang/IllegalArgumentException
         3: dup
         4: aload_0
         5: invokevirtual #74                 // Method missingPaddingMessage:()Ljava/lang/String;
         8: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        11: athrow
      LineNumberTable:
        line 854: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
    Exceptions:
      throws java.lang.IllegalArgumentException

  protected void _reportBase64UnexpectedPadding() throws java.lang.IllegalArgumentException;
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=1, args_size=1
         0: new           #10                 // class java/lang/IllegalArgumentException
         3: dup
         4: aload_0
         5: invokevirtual #75                 // Method unexpectedPaddingMessage:()Ljava/lang/String;
         8: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        11: athrow
      LineNumberTable:
        line 858: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
    Exceptions:
      throws java.lang.IllegalArgumentException

  protected java.lang.String unexpectedPaddingMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=5, locals=1, args_size=1
         0: ldc           #76                 // String Unexpected end of base64-encoded String: base64 variant \'%s\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured
         2: iconst_1
         3: anewarray     #77                 // class java/lang/Object
         6: dup
         7: iconst_0
         8: aload_0
         9: invokevirtual #78                 // Method getName:()Ljava/lang/String;
        12: aastore
        13: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        16: areturn
      LineNumberTable:
        line 870: 0
        line 871: 9
        line 870: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcom/fasterxml/jackson/core/Base64Variant;

  public java.lang.String missingPaddingMessage();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: ldc           #80                 // String Unexpected end of base64-encoded String: base64 variant \'%s\' expects padding (one or more \'%c\' characters) at the end. This Base64Variant might have been incorrectly configured
         2: iconst_2
         3: anewarray     #77                 // class java/lang/Object
         6: dup
         7: iconst_0
         8: aload_0
         9: invokevirtual #78                 // Method getName:()Ljava/lang/String;
        12: aastore
        13: dup
        14: iconst_1
        15: aload_0
        16: invokevirtual #53                 // Method getPaddingChar:()C
        19: invokestatic  #81                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
        22: aastore
        23: invokestatic  #79                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 883: 0
        line 884: 9
        line 883: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lcom/fasterxml/jackson/core/Base64Variant;
}
SourceFile: "Base64Variant.java"
InnerClasses:
  public static final #84= #83 of #20;    // PaddingReadBehaviour=class com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour of class com/fasterxml/jackson/core/Base64Variant
