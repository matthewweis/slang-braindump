Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/input/ReaderInputStream.class
  Last modified May 29, 2022; size 4696 bytes
  SHA-256 checksum eae7ac1d7cdf80b477677c32930bf3dd3497bd09f72caf2defeb637824322d49
  Compiled from "ReaderInputStream.java"
public class org.apache.commons.io.input.ReaderInputStream extends java.io.InputStream
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/apache/commons/io/input/ReaderInputStream
  super_class: #53                        // java/io/InputStream
  interfaces: 0, fields: 7, methods: 12, attributes: 1
Constant pool:
    #1 = Class              #110          // org/apache/commons/io/IOUtils
    #2 = Class              #111          // org/apache/commons/io/input/ReaderInputStream
    #3 = Methodref          #2.#112       // org/apache/commons/io/input/ReaderInputStream."<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
    #4 = Methodref          #53.#113      // java/io/InputStream."<init>":()V
    #5 = Fieldref           #2.#114       // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;
    #6 = Fieldref           #2.#115       // org/apache/commons/io/input/ReaderInputStream.encoder:Ljava/nio/charset/CharsetEncoder;
    #7 = Methodref          #116.#117     // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
    #8 = Fieldref           #2.#118       // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;
    #9 = Methodref          #116.#119     // java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
   #10 = Methodref          #120.#121     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
   #11 = Fieldref           #2.#122       // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;
   #12 = Methodref          #120.#119     // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
   #13 = Methodref          #123.#124     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
   #14 = Fieldref           #125.#126     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
   #15 = Methodref          #127.#128     // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
   #16 = Methodref          #127.#129     // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
   #17 = Methodref          #2.#130       // org/apache/commons/io/input/ReaderInputStream."<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
   #18 = Methodref          #123.#131     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #19 = Methodref          #2.#132       // org/apache/commons/io/input/ReaderInputStream."<init>":(Ljava/io/Reader;Ljava/lang/String;I)V
   #20 = Methodref          #123.#133     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
   #21 = Methodref          #2.#134       // org/apache/commons/io/input/ReaderInputStream."<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V
   #22 = Fieldref           #2.#135       // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z
   #23 = Fieldref           #2.#136       // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;
   #24 = Methodref          #137.#138     // java/nio/charset/CoderResult.isUnderflow:()Z
   #25 = Methodref          #116.#139     // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
   #26 = Methodref          #116.#140     // java/nio/CharBuffer.position:()I
   #27 = Methodref          #116.#141     // java/nio/CharBuffer.array:()[C
   #28 = Methodref          #116.#142     // java/nio/CharBuffer.remaining:()I
   #29 = Methodref          #143.#144     // java/io/Reader.read:([CII)I
   #30 = Methodref          #116.#145     // java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
   #31 = Methodref          #120.#146     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
   #32 = Methodref          #127.#147     // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
   #33 = String             #100          // array
   #34 = Methodref          #148.#149     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #35 = Class              #150          // java/lang/IndexOutOfBoundsException
   #36 = Class              #151          // java/lang/StringBuilder
   #37 = Methodref          #36.#113      // java/lang/StringBuilder."<init>":()V
   #38 = String             #152          // Array Size=
   #39 = Methodref          #36.#153      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #40 = Methodref          #36.#154      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
   #41 = String             #155          // , offset=
   #42 = String             #156          // , length=
   #43 = Methodref          #36.#157      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #44 = Methodref          #35.#158      // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #45 = Methodref          #120.#159     // java/nio/ByteBuffer.hasRemaining:()Z
   #46 = Methodref          #120.#142     // java/nio/ByteBuffer.remaining:()I
   #47 = Methodref          #160.#161     // java/lang/Math.min:(II)I
   #48 = Methodref          #120.#162     // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
   #49 = Methodref          #2.#163       // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V
   #50 = Methodref          #2.#164       // org/apache/commons/io/input/ReaderInputStream.read:([BII)I
   #51 = Methodref          #120.#165     // java/nio/ByteBuffer.get:()B
   #52 = Methodref          #143.#166     // java/io/Reader.close:()V
   #53 = Class              #167          // java/io/InputStream
   #54 = Utf8               DEFAULT_BUFFER_SIZE
   #55 = Utf8               I
   #56 = Utf8               ConstantValue
   #57 = Integer            1024
   #58 = Utf8               reader
   #59 = Utf8               Ljava/io/Reader;
   #60 = Utf8               encoder
   #61 = Utf8               Ljava/nio/charset/CharsetEncoder;
   #62 = Utf8               encoderIn
   #63 = Utf8               Ljava/nio/CharBuffer;
   #64 = Utf8               encoderOut
   #65 = Utf8               Ljava/nio/ByteBuffer;
   #66 = Utf8               lastCoderResult
   #67 = Utf8               Ljava/nio/charset/CoderResult;
   #68 = Utf8               endOfInput
   #69 = Utf8               Z
   #70 = Utf8               <init>
   #71 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V
   #72 = Utf8               Code
   #73 = Utf8               LineNumberTable
   #74 = Utf8               LocalVariableTable
   #75 = Utf8               this
   #76 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;
   #77 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
   #78 = Utf8               bufferSize
   #79 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
   #80 = Utf8               charset
   #81 = Utf8               Ljava/nio/charset/Charset;
   #82 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V
   #83 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V
   #84 = Utf8               charsetName
   #85 = Utf8               Ljava/lang/String;
   #86 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V
   #87 = Utf8               (Ljava/io/Reader;)V
   #88 = Utf8               Deprecated
   #89 = Utf8               RuntimeVisibleAnnotations
   #90 = Utf8               Ljava/lang/Deprecated;
   #91 = Utf8               fillBuffer
   #92 = Utf8               ()V
   #93 = Utf8               position
   #94 = Utf8               c
   #95 = Utf8               StackMapTable
   #96 = Utf8               Exceptions
   #97 = Class              #168          // java/io/IOException
   #98 = Utf8               read
   #99 = Utf8               ([BII)I
  #100 = Utf8               array
  #101 = Utf8               [B
  #102 = Utf8               off
  #103 = Utf8               len
  #104 = Utf8               ([B)I
  #105 = Utf8               b
  #106 = Utf8               ()I
  #107 = Utf8               close
  #108 = Utf8               SourceFile
  #109 = Utf8               ReaderInputStream.java
  #110 = Utf8               org/apache/commons/io/IOUtils
  #111 = Utf8               org/apache/commons/io/input/ReaderInputStream
  #112 = NameAndType        #70:#77       // "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
  #113 = NameAndType        #70:#92       // "<init>":()V
  #114 = NameAndType        #58:#59       // reader:Ljava/io/Reader;
  #115 = NameAndType        #60:#61       // encoder:Ljava/nio/charset/CharsetEncoder;
  #116 = Class              #169          // java/nio/CharBuffer
  #117 = NameAndType        #170:#171     // allocate:(I)Ljava/nio/CharBuffer;
  #118 = NameAndType        #62:#63       // encoderIn:Ljava/nio/CharBuffer;
  #119 = NameAndType        #172:#173     // flip:()Ljava/nio/Buffer;
  #120 = Class              #174          // java/nio/ByteBuffer
  #121 = NameAndType        #170:#175     // allocate:(I)Ljava/nio/ByteBuffer;
  #122 = NameAndType        #64:#65       // encoderOut:Ljava/nio/ByteBuffer;
  #123 = Class              #176          // java/nio/charset/Charset
  #124 = NameAndType        #177:#178     // newEncoder:()Ljava/nio/charset/CharsetEncoder;
  #125 = Class              #179          // java/nio/charset/CodingErrorAction
  #126 = NameAndType        #180:#181     // REPLACE:Ljava/nio/charset/CodingErrorAction;
  #127 = Class              #182          // java/nio/charset/CharsetEncoder
  #128 = NameAndType        #183:#184     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #129 = NameAndType        #185:#184     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #130 = NameAndType        #70:#79       // "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
  #131 = NameAndType        #186:#187     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
  #132 = NameAndType        #70:#83       // "<init>":(Ljava/io/Reader;Ljava/lang/String;I)V
  #133 = NameAndType        #188:#189     // defaultCharset:()Ljava/nio/charset/Charset;
  #134 = NameAndType        #70:#82       // "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V
  #135 = NameAndType        #68:#69       // endOfInput:Z
  #136 = NameAndType        #66:#67       // lastCoderResult:Ljava/nio/charset/CoderResult;
  #137 = Class              #190          // java/nio/charset/CoderResult
  #138 = NameAndType        #191:#192     // isUnderflow:()Z
  #139 = NameAndType        #193:#194     // compact:()Ljava/nio/CharBuffer;
  #140 = NameAndType        #93:#106      // position:()I
  #141 = NameAndType        #100:#195     // array:()[C
  #142 = NameAndType        #196:#106     // remaining:()I
  #143 = Class              #197          // java/io/Reader
  #144 = NameAndType        #98:#198      // read:([CII)I
  #145 = NameAndType        #93:#199      // position:(I)Ljava/nio/Buffer;
  #146 = NameAndType        #193:#200     // compact:()Ljava/nio/ByteBuffer;
  #147 = NameAndType        #201:#202     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #148 = Class              #203          // java/util/Objects
  #149 = NameAndType        #204:#205     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #150 = Utf8               java/lang/IndexOutOfBoundsException
  #151 = Utf8               java/lang/StringBuilder
  #152 = Utf8               Array Size=
  #153 = NameAndType        #206:#207     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #154 = NameAndType        #206:#208     // append:(I)Ljava/lang/StringBuilder;
  #155 = Utf8               , offset=
  #156 = Utf8               , length=
  #157 = NameAndType        #209:#210     // toString:()Ljava/lang/String;
  #158 = NameAndType        #70:#211      // "<init>":(Ljava/lang/String;)V
  #159 = NameAndType        #212:#192     // hasRemaining:()Z
  #160 = Class              #213          // java/lang/Math
  #161 = NameAndType        #214:#215     // min:(II)I
  #162 = NameAndType        #216:#217     // get:([BII)Ljava/nio/ByteBuffer;
  #163 = NameAndType        #91:#92       // fillBuffer:()V
  #164 = NameAndType        #98:#99       // read:([BII)I
  #165 = NameAndType        #216:#218     // get:()B
  #166 = NameAndType        #107:#92      // close:()V
  #167 = Utf8               java/io/InputStream
  #168 = Utf8               java/io/IOException
  #169 = Utf8               java/nio/CharBuffer
  #170 = Utf8               allocate
  #171 = Utf8               (I)Ljava/nio/CharBuffer;
  #172 = Utf8               flip
  #173 = Utf8               ()Ljava/nio/Buffer;
  #174 = Utf8               java/nio/ByteBuffer
  #175 = Utf8               (I)Ljava/nio/ByteBuffer;
  #176 = Utf8               java/nio/charset/Charset
  #177 = Utf8               newEncoder
  #178 = Utf8               ()Ljava/nio/charset/CharsetEncoder;
  #179 = Utf8               java/nio/charset/CodingErrorAction
  #180 = Utf8               REPLACE
  #181 = Utf8               Ljava/nio/charset/CodingErrorAction;
  #182 = Utf8               java/nio/charset/CharsetEncoder
  #183 = Utf8               onMalformedInput
  #184 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
  #185 = Utf8               onUnmappableCharacter
  #186 = Utf8               forName
  #187 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
  #188 = Utf8               defaultCharset
  #189 = Utf8               ()Ljava/nio/charset/Charset;
  #190 = Utf8               java/nio/charset/CoderResult
  #191 = Utf8               isUnderflow
  #192 = Utf8               ()Z
  #193 = Utf8               compact
  #194 = Utf8               ()Ljava/nio/CharBuffer;
  #195 = Utf8               ()[C
  #196 = Utf8               remaining
  #197 = Utf8               java/io/Reader
  #198 = Utf8               ([CII)I
  #199 = Utf8               (I)Ljava/nio/Buffer;
  #200 = Utf8               ()Ljava/nio/ByteBuffer;
  #201 = Utf8               encode
  #202 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
  #203 = Utf8               java/util/Objects
  #204 = Utf8               requireNonNull
  #205 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #206 = Utf8               append
  #207 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #208 = Utf8               (I)Ljava/lang/StringBuilder;
  #209 = Utf8               toString
  #210 = Utf8               ()Ljava/lang/String;
  #211 = Utf8               (Ljava/lang/String;)V
  #212 = Utf8               hasRemaining
  #213 = Utf8               java/lang/Math
  #214 = Utf8               min
  #215 = Utf8               (II)I
  #216 = Utf8               get
  #217 = Utf8               ([BII)Ljava/nio/ByteBuffer;
  #218 = Utf8               ()B
{
  private static final int DEFAULT_BUFFER_SIZE;
    descriptor: I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: int 1024

  private final java.io.Reader reader;
    descriptor: Ljava/io/Reader;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.charset.CharsetEncoder encoder;
    descriptor: Ljava/nio/charset/CharsetEncoder;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.CharBuffer encoderIn;
    descriptor: Ljava/nio/CharBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.nio.ByteBuffer encoderOut;
    descriptor: Ljava/nio/ByteBuffer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private java.nio.charset.CoderResult lastCoderResult;
    descriptor: Ljava/nio/charset/CoderResult;
    flags: (0x0002) ACC_PRIVATE

  private boolean endOfInput;
    descriptor: Z
    flags: (0x0002) ACC_PRIVATE

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder);
    descriptor: (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        1024
         6: invokespecial #3                  // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
         9: return
      LineNumberTable:
        line 112: 0
        line 113: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0      10     1 reader   Ljava/io/Reader;
            0      10     2 encoder   Ljava/nio/charset/CharsetEncoder;

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, int);
    descriptor: (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=4
         0: aload_0
         1: invokespecial #4                  // Method java/io/InputStream."<init>":()V
         4: aload_0
         5: aload_1
         6: putfield      #5                  // Field reader:Ljava/io/Reader;
         9: aload_0
        10: aload_2
        11: putfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
        14: aload_0
        15: iload_3
        16: invokestatic  #7                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
        19: putfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        22: aload_0
        23: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        26: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
        29: pop
        30: aload_0
        31: sipush        128
        34: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
        37: putfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        40: aload_0
        41: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        44: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
        47: pop
        48: return
      LineNumberTable:
        line 123: 0
        line 124: 4
        line 125: 9
        line 126: 14
        line 127: 22
        line 128: 30
        line 129: 40
        line 130: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      49     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0      49     1 reader   Ljava/io/Reader;
            0      49     2 encoder   Ljava/nio/charset/CharsetEncoder;
            0      49     3 bufferSize   I

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset, int);
    descriptor: (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokevirtual #13                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
         6: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
         9: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        12: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;
        15: invokevirtual #16                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
        18: iload_3
        19: invokespecial #3                  // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V
        22: return
      LineNumberTable:
        line 140: 0
        line 141: 3
        line 142: 9
        line 143: 15
        line 140: 19
        line 145: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0      23     1 reader   Ljava/io/Reader;
            0      23     2 charset   Ljava/nio/charset/Charset;
            0      23     3 bufferSize   I

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset);
    descriptor: (Ljava/io/Reader;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        1024
         6: invokespecial #17                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
         9: return
      LineNumberTable:
        line 155: 0
        line 156: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0      10     1 reader   Ljava/io/Reader;
            0      10     2 charset   Ljava/nio/charset/Charset;

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String, int);
    descriptor: (Ljava/io/Reader;Ljava/lang/String;I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
         6: iload_3
         7: invokespecial #17                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V
        10: return
      LineNumberTable:
        line 166: 0
        line 167: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0      11     1 reader   Ljava/io/Reader;
            0      11     2 charsetName   Ljava/lang/String;
            0      11     3 bufferSize   I

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String);
    descriptor: (Ljava/io/Reader;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: sipush        1024
         6: invokespecial #19                 // Method "<init>":(Ljava/io/Reader;Ljava/lang/String;I)V
         9: return
      LineNumberTable:
        line 177: 0
        line 178: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0      10     1 reader   Ljava/io/Reader;
            0      10     2 charsetName   Ljava/lang/String;

  public org.apache.commons.io.input.ReaderInputStream(java.io.Reader);
    descriptor: (Ljava/io/Reader;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #20                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
         5: invokespecial #21                 // Method "<init>":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V
         8: return
      LineNumberTable:
        line 189: 0
        line 190: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0       9     1 reader   Ljava/io/Reader;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #90()
        java.lang.Deprecated

  private void fillBuffer() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=3, args_size=1
         0: aload_0
         1: getfield      #22                 // Field endOfInput:Z
         4: ifne          95
         7: aload_0
         8: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
        11: ifnull        24
        14: aload_0
        15: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
        18: invokevirtual #24                 // Method java/nio/charset/CoderResult.isUnderflow:()Z
        21: ifeq          95
        24: aload_0
        25: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        28: invokevirtual #25                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;
        31: pop
        32: aload_0
        33: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        36: invokevirtual #26                 // Method java/nio/CharBuffer.position:()I
        39: istore_1
        40: aload_0
        41: getfield      #5                  // Field reader:Ljava/io/Reader;
        44: aload_0
        45: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        48: invokevirtual #27                 // Method java/nio/CharBuffer.array:()[C
        51: iload_1
        52: aload_0
        53: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        56: invokevirtual #28                 // Method java/nio/CharBuffer.remaining:()I
        59: invokevirtual #29                 // Method java/io/Reader.read:([CII)I
        62: istore_2
        63: iload_2
        64: iconst_m1
        65: if_icmpne     76
        68: aload_0
        69: iconst_1
        70: putfield      #22                 // Field endOfInput:Z
        73: goto          87
        76: aload_0
        77: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        80: iload_1
        81: iload_2
        82: iadd
        83: invokevirtual #30                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;
        86: pop
        87: aload_0
        88: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
        91: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
        94: pop
        95: aload_0
        96: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        99: invokevirtual #31                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       102: pop
       103: aload_0
       104: aload_0
       105: getfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;
       108: aload_0
       109: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;
       112: aload_0
       113: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
       116: aload_0
       117: getfield      #22                 // Field endOfInput:Z
       120: invokevirtual #32                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
       123: putfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;
       126: aload_0
       127: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
       130: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
       133: pop
       134: return
      LineNumberTable:
        line 199: 0
        line 200: 24
        line 201: 32
        line 205: 40
        line 206: 63
        line 207: 68
        line 209: 76
        line 211: 87
        line 213: 95
        line 214: 103
        line 215: 126
        line 216: 134
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           40      55     1 position   I
           63      32     2     c   I
            0     135     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
      StackMapTable: number_of_entries = 4
        frame_type = 24 /* same */
        frame_type = 253 /* append */
          offset_delta = 51
          locals = [ int, int ]
        frame_type = 10 /* same */
        frame_type = 249 /* chop */
          offset_delta = 7
    Exceptions:
      throws java.io.IOException

  public int read(byte[], int, int) throws java.io.IOException;
    descriptor: ([BII)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_1
         1: ldc           #33                 // String array
         3: invokestatic  #34                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: iload_3
         8: iflt          23
        11: iload_2
        12: iflt          23
        15: iload_2
        16: iload_3
        17: iadd
        18: aload_1
        19: arraylength
        20: if_icmple     69
        23: new           #35                 // class java/lang/IndexOutOfBoundsException
        26: dup
        27: new           #36                 // class java/lang/StringBuilder
        30: dup
        31: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
        34: ldc           #38                 // String Array Size=
        36: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        39: aload_1
        40: arraylength
        41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        44: ldc           #41                 // String , offset=
        46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: iload_2
        50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        53: ldc           #42                 // String , length=
        55: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        58: iload_3
        59: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        62: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: invokespecial #44                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        68: athrow
        69: iconst_0
        70: istore        4
        72: iload_3
        73: ifne          78
        76: iconst_0
        77: ireturn
        78: iload_3
        79: ifle          161
        82: aload_0
        83: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        86: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
        89: ifeq          137
        92: aload_0
        93: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        96: invokevirtual #46                 // Method java/nio/ByteBuffer.remaining:()I
        99: iload_3
       100: invokestatic  #47                 // Method java/lang/Math.min:(II)I
       103: istore        5
       105: aload_0
       106: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
       109: aload_1
       110: iload_2
       111: iload         5
       113: invokevirtual #48                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
       116: pop
       117: iload_2
       118: iload         5
       120: iadd
       121: istore_2
       122: iload_3
       123: iload         5
       125: isub
       126: istore_3
       127: iload         4
       129: iload         5
       131: iadd
       132: istore        4
       134: goto          78
       137: aload_0
       138: invokespecial #49                 // Method fillBuffer:()V
       141: aload_0
       142: getfield      #22                 // Field endOfInput:Z
       145: ifeq          78
       148: aload_0
       149: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
       152: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       155: ifne          78
       158: goto          161
       161: iload         4
       163: ifne          177
       166: aload_0
       167: getfield      #22                 // Field endOfInput:Z
       170: ifeq          177
       173: iconst_m1
       174: goto          179
       177: iload         4
       179: ireturn
      LineNumberTable:
        line 230: 0
        line 231: 7
        line 232: 23
        line 235: 69
        line 236: 72
        line 237: 76
        line 239: 78
        line 240: 82
        line 241: 92
        line 242: 105
        line 243: 117
        line 244: 122
        line 245: 127
        line 246: 134
        line 247: 137
        line 248: 141
        line 249: 158
        line 253: 161
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          105      29     5     c   I
            0     180     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0     180     1 array   [B
            0     180     2   off   I
            0     180     3   len   I
           72     108     4  read   I
      StackMapTable: number_of_entries = 7
        frame_type = 23 /* same */
        frame_type = 45 /* same */
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ int ]
        frame_type = 58 /* same */
        frame_type = 23 /* same */
        frame_type = 15 /* same */
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  public int read(byte[]) throws java.io.IOException;
    descriptor: ([B)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_0
         3: aload_1
         4: arraylength
         5: invokevirtual #50                 // Method read:([BII)I
         8: ireturn
      LineNumberTable:
        line 266: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
            0       9     1     b   [B
    Exceptions:
      throws java.io.IOException

  public int read() throws java.io.IOException;
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
         4: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
         7: ifeq          22
        10: aload_0
        11: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        14: invokevirtual #51                 // Method java/nio/ByteBuffer.get:()B
        17: sipush        255
        20: iand
        21: ireturn
        22: aload_0
        23: invokespecial #49                 // Method fillBuffer:()V
        26: aload_0
        27: getfield      #22                 // Field endOfInput:Z
        30: ifeq          0
        33: aload_0
        34: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;
        37: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z
        40: ifne          0
        43: iconst_m1
        44: ireturn
      LineNumberTable:
        line 279: 0
        line 280: 10
        line 282: 22
        line 283: 26
        line 284: 43
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
      StackMapTable: number_of_entries = 2
        frame_type = 0 /* same */
        frame_type = 21 /* same */
    Exceptions:
      throws java.io.IOException

  public void close() throws java.io.IOException;
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #5                  // Field reader:Ljava/io/Reader;
         4: invokevirtual #52                 // Method java/io/Reader.close:()V
         7: return
      LineNumberTable:
        line 296: 0
        line 297: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/input/ReaderInputStream;
    Exceptions:
      throws java.io.IOException
}
SourceFile: "ReaderInputStream.java"
