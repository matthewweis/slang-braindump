Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/concurrentrefhashmap/ConcurrentReferenceHashMap.class
  Last modified May 29, 2022; size 11219 bytes
  SHA-256 checksum f43ad56313919dae15e2cfc6ea43c51cd00da1f8c1bd52fbdb750a07be2319d1
  Compiled from "ConcurrentReferenceHashMap.java"
public class concurrentrefhashmap.ConcurrentReferenceHashMap<K extends java.lang.Object, V extends java.lang.Object> extends java.util.AbstractMap<K, V> implements java.util.concurrent.ConcurrentMap<K, V>, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #11                         // concurrentrefhashmap/ConcurrentReferenceHashMap
  super_class: #84                        // java/util/AbstractMap
  interfaces: 2, fields: 16, methods: 33, attributes: 3
Constant pool:
    #1 = Fieldref           #11.#225      // concurrentrefhashmap/ConcurrentReferenceHashMap.segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
    #2 = Fieldref           #11.#226      // concurrentrefhashmap/ConcurrentReferenceHashMap.segmentShift:I
    #3 = Fieldref           #11.#227      // concurrentrefhashmap/ConcurrentReferenceHashMap.segmentMask:I
    #4 = Fieldref           #11.#228      // concurrentrefhashmap/ConcurrentReferenceHashMap.identityComparisons:Z
    #5 = Methodref          #229.#230     // java/lang/System.identityHashCode:(Ljava/lang/Object;)I
    #6 = Methodref          #186.#231     // java/lang/Object.hashCode:()I
    #7 = Methodref          #11.#232      // concurrentrefhashmap/ConcurrentReferenceHashMap.hash:(I)I
    #8 = Methodref          #84.#233      // java/util/AbstractMap."<init>":()V
    #9 = Class              #234          // java/lang/IllegalArgumentException
   #10 = Methodref          #9.#233       // java/lang/IllegalArgumentException."<init>":()V
   #11 = Class              #235          // concurrentrefhashmap/ConcurrentReferenceHashMap
   #12 = Integer            65536
   #13 = Methodref          #17.#236      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.newArray:(I)[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
   #14 = Integer            1073741824
   #15 = Fieldref           #113.#237     // concurrentrefhashmap/ConcurrentReferenceHashMap$Option.IDENTITY_COMPARISONS:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Option;
   #16 = Methodref          #164.#238     // java/util/EnumSet.contains:(Ljava/lang/Object;)Z
   #17 = Class              #239          // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment
   #18 = Methodref          #17.#240      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment."<init>":(IFLconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Z)V
   #19 = Fieldref           #11.#241      // concurrentrefhashmap/ConcurrentReferenceHashMap.DEFAULT_KEY_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
   #20 = Fieldref           #11.#242      // concurrentrefhashmap/ConcurrentReferenceHashMap.DEFAULT_VALUE_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
   #21 = Methodref          #11.#243      // concurrentrefhashmap/ConcurrentReferenceHashMap."<init>":(IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet;)V
   #22 = Methodref          #11.#244      // concurrentrefhashmap/ConcurrentReferenceHashMap."<init>":(IFI)V
   #23 = Float              0.75f
   #24 = InterfaceMethodref #245.#246     // java/util/Map.size:()I
   #25 = Methodref          #247.#248     // java/lang/Math.max:(II)I
   #26 = Methodref          #11.#249      // concurrentrefhashmap/ConcurrentReferenceHashMap.putAll:(Ljava/util/Map;)V
   #27 = Fieldref           #17.#250      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
   #28 = Fieldref           #17.#251      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
   #29 = Long               -1l
   #31 = Methodref          #17.#252      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.lock:()V
   #32 = Methodref          #17.#253      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.unlock:()V
   #33 = Class              #254          // java/lang/Integer
   #34 = Long               2147483647l
   #36 = Integer            2147483647
   #37 = Methodref          #11.#255      // concurrentrefhashmap/ConcurrentReferenceHashMap.hashOf:(Ljava/lang/Object;)I
   #38 = Methodref          #11.#256      // concurrentrefhashmap/ConcurrentReferenceHashMap.segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
   #39 = Methodref          #17.#257      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.get:(Ljava/lang/Object;I)Ljava/lang/Object;
   #40 = Methodref          #17.#258      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.containsKey:(Ljava/lang/Object;I)Z
   #41 = Methodref          #17.#259      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.containsValue:(Ljava/lang/Object;)Z
   #42 = Methodref          #11.#259      // concurrentrefhashmap/ConcurrentReferenceHashMap.containsValue:(Ljava/lang/Object;)Z
   #43 = Methodref          #17.#260      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
   #44 = InterfaceMethodref #245.#261     // java/util/Map.entrySet:()Ljava/util/Set;
   #45 = InterfaceMethodref #202.#262     // java/util/Set.iterator:()Ljava/util/Iterator;
   #46 = InterfaceMethodref #193.#263     // java/util/Iterator.hasNext:()Z
   #47 = InterfaceMethodref #193.#264     // java/util/Iterator.next:()Ljava/lang/Object;
   #48 = Class              #265          // java/util/Map$Entry
   #49 = InterfaceMethodref #48.#266      // java/util/Map$Entry.getKey:()Ljava/lang/Object;
   #50 = InterfaceMethodref #48.#267      // java/util/Map$Entry.getValue:()Ljava/lang/Object;
   #51 = Methodref          #11.#268      // concurrentrefhashmap/ConcurrentReferenceHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #52 = Methodref          #17.#269      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.remove:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
   #53 = Class              #270          // java/lang/NullPointerException
   #54 = Methodref          #53.#233      // java/lang/NullPointerException."<init>":()V
   #55 = Methodref          #17.#271      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.replace:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z
   #56 = Methodref          #17.#272      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.replace:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
   #57 = Methodref          #17.#273      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.clear:()V
   #58 = Methodref          #17.#274      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.removeStale:()V
   #59 = Fieldref           #11.#275      // concurrentrefhashmap/ConcurrentReferenceHashMap.keySet:Ljava/util/Set;
   #60 = Class              #276          // concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet
   #61 = Methodref          #60.#277      // concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #62 = Fieldref           #11.#278      // concurrentrefhashmap/ConcurrentReferenceHashMap.values:Ljava/util/Collection;
   #63 = Class              #279          // concurrentrefhashmap/ConcurrentReferenceHashMap$Values
   #64 = Methodref          #63.#277      // concurrentrefhashmap/ConcurrentReferenceHashMap$Values."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #65 = Fieldref           #11.#280      // concurrentrefhashmap/ConcurrentReferenceHashMap.entrySet:Ljava/util/Set;
   #66 = Class              #281          // concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet
   #67 = Methodref          #66.#277      // concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #68 = Class              #282          // concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator
   #69 = Methodref          #68.#277      // concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #70 = Class              #283          // concurrentrefhashmap/ConcurrentReferenceHashMap$ValueIterator
   #71 = Methodref          #70.#277      // concurrentrefhashmap/ConcurrentReferenceHashMap$ValueIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #72 = Methodref          #284.#285     // java/io/ObjectOutputStream.defaultWriteObject:()V
   #73 = Fieldref           #17.#286      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.table:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
   #74 = Methodref          #79.#287      // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
   #75 = Methodref          #284.#288     // java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
   #76 = Methodref          #79.#289      // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.value:()Ljava/lang/Object;
   #77 = Fieldref           #79.#290      // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.next:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
   #78 = Methodref          #291.#292     // java/io/ObjectInputStream.defaultReadObject:()V
   #79 = Class              #293          // concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
   #80 = Methodref          #17.#294      // concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.setTable:([Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;)V
   #81 = Methodref          #291.#295     // java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
   #82 = Fieldref           #115.#296     // concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
   #83 = Fieldref           #115.#297     // concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.STRONG:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
   #84 = Class              #298          // java/util/AbstractMap
   #85 = Class              #299          // java/util/concurrent/ConcurrentMap
   #86 = Class              #300          // java/io/Serializable
   #87 = Utf8               EntrySet
   #88 = Utf8               InnerClasses
   #89 = Utf8               Values
   #90 = Utf8               KeySet
   #91 = Class              #301          // concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
   #92 = Utf8               EntryIterator
   #93 = Class              #302          // concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry
   #94 = Utf8               WriteThroughEntry
   #95 = Class              #303          // concurrentrefhashmap/ConcurrentReferenceHashMap$SimpleEntry
   #96 = Utf8               SimpleEntry
   #97 = Utf8               ValueIterator
   #98 = Utf8               KeyIterator
   #99 = Class              #304          // concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  #100 = Utf8               HashIterator
  #101 = Utf8               Segment
  #102 = Utf8               HashEntry
  #103 = Class              #305          // concurrentrefhashmap/ConcurrentReferenceHashMap$SoftValueReference
  #104 = Utf8               SoftValueReference
  #105 = Class              #306          // concurrentrefhashmap/ConcurrentReferenceHashMap$WeakValueReference
  #106 = Utf8               WeakValueReference
  #107 = Class              #307          // concurrentrefhashmap/ConcurrentReferenceHashMap$SoftKeyReference
  #108 = Utf8               SoftKeyReference
  #109 = Class              #308          // concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference
  #110 = Utf8               WeakKeyReference
  #111 = Class              #309          // concurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference
  #112 = Utf8               KeyReference
  #113 = Class              #310          // concurrentrefhashmap/ConcurrentReferenceHashMap$Option
  #114 = Utf8               Option
  #115 = Class              #311          // concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType
  #116 = Utf8               ReferenceType
  #117 = Utf8               serialVersionUID
  #118 = Utf8               J
  #119 = Utf8               ConstantValue
  #120 = Long               7249069246763182397l
  #122 = Utf8               DEFAULT_KEY_TYPE
  #123 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #124 = Utf8               DEFAULT_VALUE_TYPE
  #125 = Utf8               DEFAULT_INITIAL_CAPACITY
  #126 = Utf8               I
  #127 = Integer            16
  #128 = Utf8               DEFAULT_LOAD_FACTOR
  #129 = Utf8               F
  #130 = Utf8               DEFAULT_CONCURRENCY_LEVEL
  #131 = Utf8               MAXIMUM_CAPACITY
  #132 = Utf8               MAX_SEGMENTS
  #133 = Utf8               RETRIES_BEFORE_LOCK
  #134 = Integer            2
  #135 = Utf8               segmentMask
  #136 = Utf8               segmentShift
  #137 = Utf8               segments
  #138 = Utf8               [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #139 = Utf8               Signature
  #140 = Utf8               [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment<TK;TV;>;
  #141 = Utf8               identityComparisons
  #142 = Utf8               Z
  #143 = Utf8               keySet
  #144 = Utf8               Ljava/util/Set;
  #145 = Utf8               Ljava/util/Set<TK;>;
  #146 = Utf8               entrySet
  #147 = Utf8               Entry
  #148 = Utf8               Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;
  #149 = Utf8               values
  #150 = Utf8               Ljava/util/Collection;
  #151 = Utf8               Ljava/util/Collection<TV;>;
  #152 = Utf8               hash
  #153 = Utf8               (I)I
  #154 = Utf8               Code
  #155 = Utf8               LineNumberTable
  #156 = Utf8               segmentFor
  #157 = Utf8               (I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #158 = Utf8               (I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment<TK;TV;>;
  #159 = Utf8               hashOf
  #160 = Utf8               (Ljava/lang/Object;)I
  #161 = Utf8               StackMapTable
  #162 = Utf8               <init>
  #163 = Utf8               (IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet;)V
  #164 = Class              #312          // java/util/EnumSet
  #165 = Utf8               (IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet<Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Option;>;)V
  #166 = Utf8               (IFI)V
  #167 = Utf8               (IF)V
  #168 = Utf8               (ILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;)V
  #169 = Utf8               (I)V
  #170 = Utf8               ()V
  #171 = Utf8               (Ljava/util/Map;)V
  #172 = Utf8               (Ljava/util/Map<+TK;+TV;>;)V
  #173 = Utf8               isEmpty
  #174 = Utf8               ()Z
  #175 = Class              #138          // "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;"
  #176 = Class              #313          // "[I"
  #177 = Utf8               size
  #178 = Utf8               ()I
  #179 = Utf8               get
  #180 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #181 = Utf8               (Ljava/lang/Object;)TV;
  #182 = Utf8               containsKey
  #183 = Utf8               (Ljava/lang/Object;)Z
  #184 = Utf8               containsValue
  #185 = Class              #314          // java/lang/Throwable
  #186 = Class              #315          // java/lang/Object
  #187 = Utf8               contains
  #188 = Utf8               put
  #189 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #190 = Utf8               (TK;TV;)TV;
  #191 = Utf8               putIfAbsent
  #192 = Utf8               putAll
  #193 = Class              #316          // java/util/Iterator
  #194 = Utf8               remove
  #195 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #196 = Utf8               replace
  #197 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
  #198 = Utf8               (TK;TV;TV;)Z
  #199 = Utf8               clear
  #200 = Utf8               purgeStaleEntries
  #201 = Utf8               ()Ljava/util/Set;
  #202 = Class              #317          // java/util/Set
  #203 = Utf8               ()Ljava/util/Set<TK;>;
  #204 = Utf8               ()Ljava/util/Collection;
  #205 = Class              #318          // java/util/Collection
  #206 = Utf8               ()Ljava/util/Collection<TV;>;
  #207 = Utf8               ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;
  #208 = Utf8               keys
  #209 = Utf8               ()Ljava/util/Enumeration;
  #210 = Utf8               ()Ljava/util/Enumeration<TK;>;
  #211 = Utf8               elements
  #212 = Utf8               ()Ljava/util/Enumeration<TV;>;
  #213 = Utf8               writeObject
  #214 = Utf8               (Ljava/io/ObjectOutputStream;)V
  #215 = Class              #319          // "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;"
  #216 = Utf8               Exceptions
  #217 = Class              #320          // java/io/IOException
  #218 = Utf8               readObject
  #219 = Utf8               (Ljava/io/ObjectInputStream;)V
  #220 = Class              #321          // java/lang/ClassNotFoundException
  #221 = Utf8               <clinit>
  #222 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Ljava/util/concurrent/ConcurrentMap<TK;TV;>;Ljava/io/Serializable;
  #223 = Utf8               SourceFile
  #224 = Utf8               ConcurrentReferenceHashMap.java
  #225 = NameAndType        #137:#138     // segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #226 = NameAndType        #136:#126     // segmentShift:I
  #227 = NameAndType        #135:#126     // segmentMask:I
  #228 = NameAndType        #141:#142     // identityComparisons:Z
  #229 = Class              #322          // java/lang/System
  #230 = NameAndType        #323:#160     // identityHashCode:(Ljava/lang/Object;)I
  #231 = NameAndType        #324:#178     // hashCode:()I
  #232 = NameAndType        #152:#153     // hash:(I)I
  #233 = NameAndType        #162:#170     // "<init>":()V
  #234 = Utf8               java/lang/IllegalArgumentException
  #235 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
  #236 = NameAndType        #325:#326     // newArray:(I)[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #237 = NameAndType        #327:#328     // IDENTITY_COMPARISONS:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Option;
  #238 = NameAndType        #187:#183     // contains:(Ljava/lang/Object;)Z
  #239 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$Segment
  #240 = NameAndType        #162:#329     // "<init>":(IFLconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Z)V
  #241 = NameAndType        #122:#123     // DEFAULT_KEY_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #242 = NameAndType        #124:#123     // DEFAULT_VALUE_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #243 = NameAndType        #162:#163     // "<init>":(IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet;)V
  #244 = NameAndType        #162:#166     // "<init>":(IFI)V
  #245 = Class              #330          // java/util/Map
  #246 = NameAndType        #177:#178     // size:()I
  #247 = Class              #331          // java/lang/Math
  #248 = NameAndType        #332:#333     // max:(II)I
  #249 = NameAndType        #192:#171     // putAll:(Ljava/util/Map;)V
  #250 = NameAndType        #334:#126     // count:I
  #251 = NameAndType        #335:#126     // modCount:I
  #252 = NameAndType        #336:#170     // lock:()V
  #253 = NameAndType        #337:#170     // unlock:()V
  #254 = Utf8               java/lang/Integer
  #255 = NameAndType        #159:#160     // hashOf:(Ljava/lang/Object;)I
  #256 = NameAndType        #156:#157     // segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #257 = NameAndType        #179:#338     // get:(Ljava/lang/Object;I)Ljava/lang/Object;
  #258 = NameAndType        #182:#339     // containsKey:(Ljava/lang/Object;I)Z
  #259 = NameAndType        #184:#183     // containsValue:(Ljava/lang/Object;)Z
  #260 = NameAndType        #188:#340     // put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
  #261 = NameAndType        #146:#201     // entrySet:()Ljava/util/Set;
  #262 = NameAndType        #341:#342     // iterator:()Ljava/util/Iterator;
  #263 = NameAndType        #343:#174     // hasNext:()Z
  #264 = NameAndType        #344:#345     // next:()Ljava/lang/Object;
  #265 = Utf8               java/util/Map$Entry
  #266 = NameAndType        #346:#345     // getKey:()Ljava/lang/Object;
  #267 = NameAndType        #347:#345     // getValue:()Ljava/lang/Object;
  #268 = NameAndType        #188:#189     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #269 = NameAndType        #194:#340     // remove:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
  #270 = Utf8               java/lang/NullPointerException
  #271 = NameAndType        #196:#348     // replace:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z
  #272 = NameAndType        #196:#349     // replace:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
  #273 = NameAndType        #199:#170     // clear:()V
  #274 = NameAndType        #350:#170     // removeStale:()V
  #275 = NameAndType        #143:#144     // keySet:Ljava/util/Set;
  #276 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet
  #277 = NameAndType        #162:#351     // "<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #278 = NameAndType        #149:#150     // values:Ljava/util/Collection;
  #279 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$Values
  #280 = NameAndType        #146:#144     // entrySet:Ljava/util/Set;
  #281 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet
  #282 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator
  #283 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$ValueIterator
  #284 = Class              #352          // java/io/ObjectOutputStream
  #285 = NameAndType        #353:#170     // defaultWriteObject:()V
  #286 = NameAndType        #354:#319     // table:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #287 = NameAndType        #355:#345     // key:()Ljava/lang/Object;
  #288 = NameAndType        #213:#356     // writeObject:(Ljava/lang/Object;)V
  #289 = NameAndType        #357:#345     // value:()Ljava/lang/Object;
  #290 = NameAndType        #344:#358     // next:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #291 = Class              #359          // java/io/ObjectInputStream
  #292 = NameAndType        #360:#170     // defaultReadObject:()V
  #293 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
  #294 = NameAndType        #361:#362     // setTable:([Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;)V
  #295 = NameAndType        #218:#345     // readObject:()Ljava/lang/Object;
  #296 = NameAndType        #363:#123     // WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #297 = NameAndType        #364:#123     // STRONG:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
  #298 = Utf8               java/util/AbstractMap
  #299 = Utf8               java/util/concurrent/ConcurrentMap
  #300 = Utf8               java/io/Serializable
  #301 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator
  #302 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry
  #303 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$SimpleEntry
  #304 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator
  #305 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$SoftValueReference
  #306 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$WeakValueReference
  #307 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$SoftKeyReference
  #308 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference
  #309 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference
  #310 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$Option
  #311 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType
  #312 = Utf8               java/util/EnumSet
  #313 = Utf8               [I
  #314 = Utf8               java/lang/Throwable
  #315 = Utf8               java/lang/Object
  #316 = Utf8               java/util/Iterator
  #317 = Utf8               java/util/Set
  #318 = Utf8               java/util/Collection
  #319 = Utf8               [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #320 = Utf8               java/io/IOException
  #321 = Utf8               java/lang/ClassNotFoundException
  #322 = Utf8               java/lang/System
  #323 = Utf8               identityHashCode
  #324 = Utf8               hashCode
  #325 = Utf8               newArray
  #326 = Utf8               (I)[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
  #327 = Utf8               IDENTITY_COMPARISONS
  #328 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Option;
  #329 = Utf8               (IFLconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Z)V
  #330 = Utf8               java/util/Map
  #331 = Utf8               java/lang/Math
  #332 = Utf8               max
  #333 = Utf8               (II)I
  #334 = Utf8               count
  #335 = Utf8               modCount
  #336 = Utf8               lock
  #337 = Utf8               unlock
  #338 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #339 = Utf8               (Ljava/lang/Object;I)Z
  #340 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
  #341 = Utf8               iterator
  #342 = Utf8               ()Ljava/util/Iterator;
  #343 = Utf8               hasNext
  #344 = Utf8               next
  #345 = Utf8               ()Ljava/lang/Object;
  #346 = Utf8               getKey
  #347 = Utf8               getValue
  #348 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z
  #349 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
  #350 = Utf8               removeStale
  #351 = Utf8               (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #352 = Utf8               java/io/ObjectOutputStream
  #353 = Utf8               defaultWriteObject
  #354 = Utf8               table
  #355 = Utf8               key
  #356 = Utf8               (Ljava/lang/Object;)V
  #357 = Utf8               value
  #358 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
  #359 = Utf8               java/io/ObjectInputStream
  #360 = Utf8               defaultReadObject
  #361 = Utf8               setTable
  #362 = Utf8               ([Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;)V
  #363 = Utf8               WEAK
  #364 = Utf8               STRONG
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 7249069246763182397l

  static final concurrentrefhashmap.ConcurrentReferenceHashMap$ReferenceType DEFAULT_KEY_TYPE;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  static final concurrentrefhashmap.ConcurrentReferenceHashMap$ReferenceType DEFAULT_VALUE_TYPE;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
    flags: (0x0018) ACC_STATIC, ACC_FINAL

  static final int DEFAULT_INITIAL_CAPACITY;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 16

  static final float DEFAULT_LOAD_FACTOR;
    descriptor: F
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: float 0.75f

  static final int DEFAULT_CONCURRENCY_LEVEL;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 16

  static final int MAXIMUM_CAPACITY;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 1073741824

  static final int MAX_SEGMENTS;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 65536

  static final int RETRIES_BEFORE_LOCK;
    descriptor: I
    flags: (0x0018) ACC_STATIC, ACC_FINAL
    ConstantValue: int 2

  final int segmentMask;
    descriptor: I
    flags: (0x0010) ACC_FINAL

  final int segmentShift;
    descriptor: I
    flags: (0x0010) ACC_FINAL

  final concurrentrefhashmap.ConcurrentReferenceHashMap$Segment<K, V>[] segments;
    descriptor: [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
    flags: (0x0010) ACC_FINAL
    Signature: #140                         // [Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment<TK;TV;>;

  boolean identityComparisons;
    descriptor: Z
    flags: (0x0000)

  transient java.util.Set<K> keySet;
    descriptor: Ljava/util/Set;
    flags: (0x0080) ACC_TRANSIENT
    Signature: #145                         // Ljava/util/Set<TK;>;

  transient java.util.Set<java.util.Map$Entry<K, V>> entrySet;
    descriptor: Ljava/util/Set;
    flags: (0x0080) ACC_TRANSIENT
    Signature: #148                         // Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;

  transient java.util.Collection<V> values;
    descriptor: Ljava/util/Collection;
    flags: (0x0080) ACC_TRANSIENT
    Signature: #151                         // Ljava/util/Collection<TV;>;

  private static int hash(int);
    descriptor: (I)I
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: iload_0
         1: iload_0
         2: bipush        15
         4: ishl
         5: sipush        -12931
         8: ixor
         9: iadd
        10: istore_0
        11: iload_0
        12: iload_0
        13: bipush        10
        15: iushr
        16: ixor
        17: istore_0
        18: iload_0
        19: iload_0
        20: iconst_3
        21: ishl
        22: iadd
        23: istore_0
        24: iload_0
        25: iload_0
        26: bipush        6
        28: iushr
        29: ixor
        30: istore_0
        31: iload_0
        32: iload_0
        33: iconst_2
        34: ishl
        35: iload_0
        36: bipush        14
        38: ishl
        39: iadd
        40: iadd
        41: istore_0
        42: iload_0
        43: iload_0
        44: bipush        16
        46: iushr
        47: ixor
        48: ireturn
      LineNumberTable:
        line 258: 0
        line 259: 11
        line 260: 18
        line 261: 24
        line 262: 31
        line 263: 42

  final concurrentrefhashmap.ConcurrentReferenceHashMap$Segment<K, V> segmentFor(int);
    descriptor: (I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
    flags: (0x0010) ACC_FINAL
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
         4: iload_1
         5: aload_0
         6: getfield      #2                  // Field segmentShift:I
         9: iushr
        10: aload_0
        11: getfield      #3                  // Field segmentMask:I
        14: iand
        15: aaload
        16: areturn
      LineNumberTable:
        line 274: 0
    Signature: #158                         // (I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment<TK;TV;>;

  private int hashOf(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: getfield      #4                  // Field identityComparisons:Z
         4: ifeq          14
         7: aload_1
         8: invokestatic  #5                  // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
        11: goto          18
        14: aload_1
        15: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
        18: invokestatic  #7                  // Method hash:(I)I
        21: ireturn
      LineNumberTable:
        line 279: 0
        line 280: 7
        line 278: 18
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]

  public concurrentrefhashmap.ConcurrentReferenceHashMap(int, float, int, concurrentrefhashmap.ConcurrentReferenceHashMap$ReferenceType, concurrentrefhashmap.ConcurrentReferenceHashMap$ReferenceType, java.util.EnumSet<concurrentrefhashmap.ConcurrentReferenceHashMap$Option>);
    descriptor: (IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=12, args_size=7
         0: aload_0
         1: invokespecial #8                  // Method java/util/AbstractMap."<init>":()V
         4: fload_2
         5: fconst_0
         6: fcmpl
         7: ifle          18
        10: iload_1
        11: iflt          18
        14: iload_3
        15: ifgt          26
        18: new           #9                  // class java/lang/IllegalArgumentException
        21: dup
        22: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":()V
        25: athrow
        26: iload_3
        27: ldc           #12                 // int 65536
        29: if_icmple     35
        32: ldc           #12                 // int 65536
        34: istore_3
        35: iconst_0
        36: istore        7
        38: iconst_1
        39: istore        8
        41: iload         8
        43: iload_3
        44: if_icmpge     59
        47: iinc          7, 1
        50: iload         8
        52: iconst_1
        53: ishl
        54: istore        8
        56: goto          41
        59: aload_0
        60: bipush        32
        62: iload         7
        64: isub
        65: putfield      #2                  // Field segmentShift:I
        68: aload_0
        69: iload         8
        71: iconst_1
        72: isub
        73: putfield      #3                  // Field segmentMask:I
        76: aload_0
        77: iload         8
        79: invokestatic  #13                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.newArray:(I)[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        82: putfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        85: iload_1
        86: ldc           #14                 // int 1073741824
        88: if_icmple     94
        91: ldc           #14                 // int 1073741824
        93: istore_1
        94: iload_1
        95: iload         8
        97: idiv
        98: istore        9
       100: iload         9
       102: iload         8
       104: imul
       105: iload_1
       106: if_icmpge     112
       109: iinc          9, 1
       112: iconst_1
       113: istore        10
       115: iload         10
       117: iload         9
       119: if_icmpge     131
       122: iload         10
       124: iconst_1
       125: ishl
       126: istore        10
       128: goto          115
       131: aload_0
       132: aload         6
       134: ifnull        152
       137: aload         6
       139: getstatic     #15                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Option.IDENTITY_COMPARISONS:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Option;
       142: invokevirtual #16                 // Method java/util/EnumSet.contains:(Ljava/lang/Object;)Z
       145: ifeq          152
       148: iconst_1
       149: goto          153
       152: iconst_0
       153: putfield      #4                  // Field identityComparisons:Z
       156: iconst_0
       157: istore        11
       159: iload         11
       161: aload_0
       162: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
       165: arraylength
       166: if_icmpge     200
       169: aload_0
       170: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
       173: iload         11
       175: new           #17                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$Segment
       178: dup
       179: iload         10
       181: fload_2
       182: aload         4
       184: aload         5
       186: aload_0
       187: getfield      #4                  // Field identityComparisons:Z
       190: invokespecial #18                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment."<init>":(IFLconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Z)V
       193: aastore
       194: iinc          11, 1
       197: goto          159
       200: return
      LineNumberTable:
        line 935: 0
        line 936: 4
        line 937: 18
        line 940: 26
        line 941: 32
        line 945: 35
        line 946: 38
        line 947: 41
        line 948: 47
        line 949: 50
        line 951: 59
        line 952: 68
        line 953: 76
        line 955: 85
        line 956: 91
        line 958: 94
        line 959: 100
        line 960: 109
        line 962: 112
        line 963: 115
        line 964: 122
        line 967: 131
        line 969: 156
        line 970: 169
        line 969: 194
        line 975: 200
      StackMapTable: number_of_entries = 13
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, int, float, int, class concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType, class concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType, class java/util/EnumSet ]
          stack = []
        frame_type = 7 /* same */
        frame_type = 8 /* same */
        frame_type = 253 /* append */
          offset_delta = 5
          locals = [ int, int ]
        frame_type = 17 /* same */
        frame_type = 34 /* same */
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 15 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class concurrentrefhashmap/ConcurrentReferenceHashMap ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, int, float, int, class concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType, class concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType, class java/util/EnumSet, int, int, int, int ]
          stack = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, int ]
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 40
    Signature: #165                         // (IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet<Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Option;>;)V

  public concurrentrefhashmap.ConcurrentReferenceHashMap(int, float, int);
    descriptor: (IFI)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=4, args_size=4
         0: aload_0
         1: iload_1
         2: fload_2
         3: iload_3
         4: getstatic     #19                 // Field DEFAULT_KEY_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
         7: getstatic     #20                 // Field DEFAULT_VALUE_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
        10: aconst_null
        11: invokespecial #21                 // Method "<init>":(IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet;)V
        14: return
      LineNumberTable:
        line 997: 0
        line 1001: 14

  public concurrentrefhashmap.ConcurrentReferenceHashMap(int, float);
    descriptor: (IF)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: fload_2
         3: bipush        16
         5: invokespecial #22                 // Method "<init>":(IFI)V
         8: return
      LineNumberTable:
        line 1019: 0
        line 1020: 8

  public concurrentrefhashmap.ConcurrentReferenceHashMap(int, concurrentrefhashmap.ConcurrentReferenceHashMap$ReferenceType, concurrentrefhashmap.ConcurrentReferenceHashMap$ReferenceType);
    descriptor: (ILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=4, args_size=4
         0: aload_0
         1: iload_1
         2: ldc           #23                 // float 0.75f
         4: bipush        16
         6: aload_2
         7: aload_3
         8: aconst_null
         9: invokespecial #21                 // Method "<init>":(IFILconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;Ljava/util/EnumSet;)V
        12: return
      LineNumberTable:
        line 1038: 0
        line 1042: 12

  public concurrentrefhashmap.ConcurrentReferenceHashMap(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: ldc           #23                 // float 0.75f
         4: bipush        16
         6: invokespecial #22                 // Method "<init>":(IFI)V
         9: return
      LineNumberTable:
        line 1056: 0
        line 1057: 9

  public concurrentrefhashmap.ConcurrentReferenceHashMap();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: bipush        16
         3: ldc           #23                 // float 0.75f
         5: bipush        16
         7: invokespecial #22                 // Method "<init>":(IFI)V
        10: return
      LineNumberTable:
        line 1065: 0
        line 1066: 10

  public concurrentrefhashmap.ConcurrentReferenceHashMap(java.util.Map<? extends K, ? extends V>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #24,  1           // InterfaceMethod java/util/Map.size:()I
         7: i2f
         8: ldc           #23                 // float 0.75f
        10: fdiv
        11: f2i
        12: iconst_1
        13: iadd
        14: bipush        16
        16: invokestatic  #25                 // Method java/lang/Math.max:(II)I
        19: ldc           #23                 // float 0.75f
        21: bipush        16
        23: invokespecial #22                 // Method "<init>":(IFI)V
        26: aload_0
        27: aload_1
        28: invokevirtual #26                 // Method putAll:(Ljava/util/Map;)V
        31: return
      LineNumberTable:
        line 1077: 0
        line 1079: 2
        line 1078: 16
        line 1077: 23
        line 1084: 26
        line 1085: 31
    Signature: #172                         // (Ljava/util/Map<+TK;+TV;>;)V

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=1
         0: aload_0
         1: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
         4: astore_1
         5: aload_1
         6: arraylength
         7: newarray       int
         9: astore_2
        10: iconst_0
        11: istore_3
        12: iconst_0
        13: istore        4
        15: iload         4
        17: aload_1
        18: arraylength
        19: if_icmpge     55
        22: aload_1
        23: iload         4
        25: aaload
        26: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
        29: ifeq          34
        32: iconst_0
        33: ireturn
        34: iload_3
        35: aload_2
        36: iload         4
        38: aload_1
        39: iload         4
        41: aaload
        42: getfield      #28                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
        45: dup_x2
        46: iastore
        47: iadd
        48: istore_3
        49: iinc          4, 1
        52: goto          15
        55: iload_3
        56: ifeq          101
        59: iconst_0
        60: istore        4
        62: iload         4
        64: aload_1
        65: arraylength
        66: if_icmpge     101
        69: aload_1
        70: iload         4
        72: aaload
        73: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
        76: ifne          93
        79: aload_2
        80: iload         4
        82: iaload
        83: aload_1
        84: iload         4
        86: aaload
        87: getfield      #28                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
        90: if_icmpeq     95
        93: iconst_0
        94: ireturn
        95: iinc          4, 1
        98: goto          62
       101: iconst_1
       102: ireturn
      LineNumberTable:
        line 1094: 0
        line 1104: 5
        line 1105: 10
        line 1106: 12
        line 1107: 22
        line 1108: 32
        line 1111: 34
        line 1106: 49
        line 1117: 55
        line 1118: 59
        line 1119: 69
        line 1121: 93
        line 1118: 95
        line 1125: 101
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, class "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;", class "[I", int, int ]
          stack = []
        frame_type = 18 /* same */
        frame_type = 250 /* chop */
          offset_delta = 20
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 30 /* same */
        frame_type = 1 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=10, args_size=1
         0: aload_0
         1: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
         4: astore_1
         5: lconst_0
         6: lstore_2
         7: lconst_0
         8: lstore        4
        10: aload_1
        11: arraylength
        12: newarray       int
        14: astore        6
        16: iconst_0
        17: istore        7
        19: iload         7
        21: iconst_2
        22: if_icmpge     151
        25: lconst_0
        26: lstore        4
        28: lconst_0
        29: lstore_2
        30: iconst_0
        31: istore        8
        33: iconst_0
        34: istore        9
        36: iload         9
        38: aload_1
        39: arraylength
        40: if_icmpge     78
        43: lload_2
        44: aload_1
        45: iload         9
        47: aaload
        48: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
        51: i2l
        52: ladd
        53: lstore_2
        54: iload         8
        56: aload         6
        58: iload         9
        60: aload_1
        61: iload         9
        63: aaload
        64: getfield      #28                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
        67: dup_x2
        68: iastore
        69: iadd
        70: istore        8
        72: iinc          9, 1
        75: goto          36
        78: iload         8
        80: ifeq          135
        83: iconst_0
        84: istore        9
        86: iload         9
        88: aload_1
        89: arraylength
        90: if_icmpge     135
        93: lload         4
        95: aload_1
        96: iload         9
        98: aaload
        99: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
       102: i2l
       103: ladd
       104: lstore        4
       106: aload         6
       108: iload         9
       110: iaload
       111: aload_1
       112: iload         9
       114: aaload
       115: getfield      #28                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
       118: if_icmpeq     129
       121: ldc2_w        #29                 // long -1l
       124: lstore        4
       126: goto          135
       129: iinc          9, 1
       132: goto          86
       135: lload         4
       137: lload_2
       138: lcmp
       139: ifne          145
       142: goto          151
       145: iinc          7, 1
       148: goto          19
       151: lload         4
       153: lload_2
       154: lcmp
       155: ifeq          233
       158: lconst_0
       159: lstore_2
       160: iconst_0
       161: istore        7
       163: iload         7
       165: aload_1
       166: arraylength
       167: if_icmpge     183
       170: aload_1
       171: iload         7
       173: aaload
       174: invokevirtual #31                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.lock:()V
       177: iinc          7, 1
       180: goto          163
       183: iconst_0
       184: istore        7
       186: iload         7
       188: aload_1
       189: arraylength
       190: if_icmpge     210
       193: lload_2
       194: aload_1
       195: iload         7
       197: aaload
       198: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
       201: i2l
       202: ladd
       203: lstore_2
       204: iinc          7, 1
       207: goto          186
       210: iconst_0
       211: istore        7
       213: iload         7
       215: aload_1
       216: arraylength
       217: if_icmpge     233
       220: aload_1
       221: iload         7
       223: aaload
       224: invokevirtual #32                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.unlock:()V
       227: iinc          7, 1
       230: goto          213
       233: lload_2
       234: ldc2_w        #34                 // long 2147483647l
       237: lcmp
       238: ifle          244
       241: ldc           #36                 // int 2147483647
       243: ireturn
       244: lload_2
       245: l2i
       246: ireturn
      LineNumberTable:
        line 1137: 0
        line 1138: 5
        line 1139: 7
        line 1140: 10
        line 1143: 16
        line 1144: 25
        line 1145: 28
        line 1146: 30
        line 1147: 33
        line 1148: 43
        line 1149: 54
        line 1147: 72
        line 1151: 78
        line 1152: 83
        line 1153: 93
        line 1154: 106
        line 1155: 121
        line 1156: 126
        line 1152: 129
        line 1160: 135
        line 1161: 142
        line 1143: 145
        line 1164: 151
        line 1165: 158
        line 1166: 160
        line 1167: 170
        line 1166: 177
        line 1169: 183
        line 1170: 193
        line 1169: 204
        line 1172: 210
        line 1173: 220
        line 1172: 227
        line 1176: 233
        line 1177: 241
        line 1180: 244
      StackMapTable: number_of_entries = 15
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, class "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;", long, long, class "[I", int ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ int, int ]
        frame_type = 250 /* chop */
          offset_delta = 41
        frame_type = 252 /* append */
          offset_delta = 7
          locals = [ int ]
        frame_type = 42 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 252 /* append */
          offset_delta = 11
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 19
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 23
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 19
        frame_type = 10 /* same */

  public V get(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: aload_1
         8: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        11: istore_2
        12: aload_0
        13: iload_2
        14: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        17: aload_1
        18: iload_2
        19: invokevirtual #39                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.get:(Ljava/lang/Object;I)Ljava/lang/Object;
        22: areturn
      LineNumberTable:
        line 1197: 0
        line 1198: 4
        line 1200: 6
        line 1201: 12
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
    Signature: #181                         // (Ljava/lang/Object;)TV;

  public boolean containsKey(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: iconst_0
         5: ireturn
         6: aload_0
         7: aload_1
         8: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        11: istore_2
        12: aload_0
        13: iload_2
        14: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        17: aload_1
        18: iload_2
        19: invokevirtual #40                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.containsKey:(Ljava/lang/Object;I)Z
        22: ireturn
      LineNumberTable:
        line 1217: 0
        line 1218: 4
        line 1220: 6
        line 1221: 12
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */

  public boolean containsValue(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=12, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: iconst_0
         5: ireturn
         6: aload_0
         7: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        10: astore_2
        11: aload_2
        12: arraylength
        13: newarray       int
        15: astore_3
        16: iconst_0
        17: istore        4
        19: iload         4
        21: iconst_2
        22: if_icmpge     152
        25: iconst_0
        26: istore        5
        28: iconst_0
        29: istore        6
        31: iconst_0
        32: istore        7
        34: iload         7
        36: aload_2
        37: arraylength
        38: if_icmpge     86
        41: aload_2
        42: iload         7
        44: aaload
        45: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
        48: istore        8
        50: iload         6
        52: aload_3
        53: iload         7
        55: aload_2
        56: iload         7
        58: aaload
        59: getfield      #28                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
        62: dup_x2
        63: iastore
        64: iadd
        65: istore        6
        67: aload_2
        68: iload         7
        70: aaload
        71: aload_1
        72: invokevirtual #41                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.containsValue:(Ljava/lang/Object;)Z
        75: ifeq          80
        78: iconst_1
        79: ireturn
        80: iinc          7, 1
        83: goto          34
        86: iconst_1
        87: istore        7
        89: iload         6
        91: ifeq          139
        94: iconst_0
        95: istore        8
        97: iload         8
        99: aload_2
       100: arraylength
       101: if_icmpge     139
       104: aload_2
       105: iload         8
       107: aaload
       108: getfield      #27                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.count:I
       111: istore        9
       113: aload_3
       114: iload         8
       116: iaload
       117: aload_2
       118: iload         8
       120: aaload
       121: getfield      #28                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.modCount:I
       124: if_icmpeq     133
       127: iconst_0
       128: istore        7
       130: goto          139
       133: iinc          8, 1
       136: goto          97
       139: iload         7
       141: ifeq          146
       144: iconst_0
       145: ireturn
       146: iinc          4, 1
       149: goto          19
       152: iconst_0
       153: istore        4
       155: iload         4
       157: aload_2
       158: arraylength
       159: if_icmpge     175
       162: aload_2
       163: iload         4
       165: aaload
       166: invokevirtual #31                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.lock:()V
       169: iinc          4, 1
       172: goto          155
       175: iconst_0
       176: istore        4
       178: iconst_0
       179: istore        5
       181: iload         5
       183: aload_2
       184: arraylength
       185: if_icmpge     211
       188: aload_2
       189: iload         5
       191: aaload
       192: aload_1
       193: invokevirtual #41                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.containsValue:(Ljava/lang/Object;)Z
       196: ifeq          205
       199: iconst_1
       200: istore        4
       202: goto          211
       205: iinc          5, 1
       208: goto          181
       211: iconst_0
       212: istore        5
       214: iload         5
       216: aload_2
       217: arraylength
       218: if_icmpge     234
       221: aload_2
       222: iload         5
       224: aaload
       225: invokevirtual #32                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.unlock:()V
       228: iinc          5, 1
       231: goto          214
       234: goto          265
       237: astore        10
       239: iconst_0
       240: istore        11
       242: iload         11
       244: aload_2
       245: arraylength
       246: if_icmpge     262
       249: aload_2
       250: iload         11
       252: aaload
       253: invokevirtual #32                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.unlock:()V
       256: iinc          11, 1
       259: goto          242
       262: aload         10
       264: athrow
       265: iload         4
       267: ireturn
      Exception table:
         from    to  target type
           178   211   237   any
           237   239   237   any
      LineNumberTable:
        line 1237: 0
        line 1238: 4
        line 1243: 6
        line 1244: 11
        line 1247: 16
        line 1248: 25
        line 1249: 28
        line 1250: 31
        line 1251: 41
        line 1252: 50
        line 1253: 67
        line 1254: 78
        line 1250: 80
        line 1257: 86
        line 1258: 89
        line 1259: 94
        line 1260: 104
        line 1261: 113
        line 1262: 127
        line 1263: 130
        line 1259: 133
        line 1267: 139
        line 1268: 144
        line 1247: 146
        line 1272: 152
        line 1273: 162
        line 1272: 169
        line 1275: 175
        line 1277: 178
        line 1278: 188
        line 1279: 199
        line 1280: 202
        line 1277: 205
        line 1285: 211
        line 1286: 221
        line 1285: 228
        line 1288: 234
        line 1285: 237
        line 1286: 249
        line 1285: 256
        line 1288: 262
        line 1289: 265
      StackMapTable: number_of_entries = 21
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 12
          locals = [ class "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;", class "[I", int ]
        frame_type = 254 /* append */
          offset_delta = 14
          locals = [ int, int, int ]
        frame_type = 45 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, int ]
        frame_type = 35 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 248 /* chop */
          offset_delta = 6
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 19
        frame_type = 253 /* append */
          offset_delta = 5
          locals = [ int, int ]
        frame_type = 23 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 19
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, class java/lang/Object, class "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;", class "[I", int, top, top, top, top, top, class java/lang/Throwable, int ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 19
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap, class java/lang/Object, class "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;", class "[I", int ]
          stack = []

  public boolean contains(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #42                 // Method containsValue:(Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 1310: 0

  public V put(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_1
         1: ifnull        8
         4: aload_2
         5: ifnonnull     10
         8: aconst_null
         9: areturn
        10: aload_0
        11: aload_1
        12: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        15: istore_3
        16: aload_0
        17: iload_3
        18: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        21: aload_1
        22: iload_3
        23: aload_2
        24: iconst_0
        25: invokevirtual #43                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
        28: areturn
      LineNumberTable:
        line 1330: 0
        line 1331: 8
        line 1333: 10
        line 1334: 16
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 1 /* same */
    Signature: #190                         // (TK;TV;)TV;

  public V putIfAbsent(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_1
         1: ifnull        8
         4: aload_2
         5: ifnonnull     10
         8: aconst_null
         9: areturn
        10: aload_0
        11: aload_1
        12: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        15: istore_3
        16: aload_0
        17: iload_3
        18: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        21: aload_1
        22: iload_3
        23: aload_2
        24: iconst_1
        25: invokevirtual #43                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
        28: areturn
      LineNumberTable:
        line 1347: 0
        line 1348: 8
        line 1350: 10
        line 1351: 16
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 1 /* same */
    Signature: #190                         // (TK;TV;)TV;

  public void putAll(java.util.Map<? extends K, ? extends V>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: invokeinterface #44,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
         6: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
        11: astore_2
        12: aload_2
        13: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        18: ifeq          51
        21: aload_2
        22: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        27: checkcast     #48                 // class java/util/Map$Entry
        30: astore_3
        31: aload_0
        32: aload_3
        33: invokeinterface #49,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
        38: aload_3
        39: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
        44: invokevirtual #51                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        47: pop
        48: goto          12
        51: return
      LineNumberTable:
        line 1363: 0
        line 1364: 31
        line 1365: 48
        line 1366: 51
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 38
    Signature: #172                         // (Ljava/util/Map<+TK;+TV;>;)V

  public V remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: areturn
         6: aload_0
         7: aload_1
         8: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        11: istore_2
        12: aload_0
        13: iload_2
        14: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        17: aload_1
        18: iload_2
        19: aconst_null
        20: iconst_0
        21: invokevirtual #52                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.remove:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
        24: areturn
      LineNumberTable:
        line 1381: 0
        line 1382: 4
        line 1384: 6
        line 1385: 12
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
    Signature: #181                         // (Ljava/lang/Object;)TV;

  public boolean remove(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_1
         1: ifnull        8
         4: aload_2
         5: ifnonnull     10
         8: iconst_0
         9: ireturn
        10: aload_0
        11: aload_1
        12: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        15: istore_3
        16: aload_0
        17: iload_3
        18: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        21: aload_1
        22: iload_3
        23: aload_2
        24: iconst_0
        25: invokevirtual #52                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.remove:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;
        28: ifnull        35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: ireturn
      LineNumberTable:
        line 1395: 0
        line 1396: 8
        line 1398: 10
        line 1399: 16
      StackMapTable: number_of_entries = 4
        frame_type = 8 /* same */
        frame_type = 1 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean replace(K, V, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=4
         0: aload_1
         1: ifnull        12
         4: aload_2
         5: ifnull        12
         8: aload_3
         9: ifnonnull     20
        12: new           #53                 // class java/lang/NullPointerException
        15: dup
        16: invokespecial #54                 // Method java/lang/NullPointerException."<init>":()V
        19: athrow
        20: aload_0
        21: aload_1
        22: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        25: istore        4
        27: aload_0
        28: iload         4
        30: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        33: aload_1
        34: iload         4
        36: aload_2
        37: aload_3
        38: invokevirtual #55                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.replace:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z
        41: ireturn
      LineNumberTable:
        line 1409: 0
        line 1410: 12
        line 1412: 20
        line 1413: 27
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 7 /* same */
    Signature: #198                         // (TK;TV;TV;)Z

  public V replace(K, V);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_1
         1: ifnull        8
         4: aload_2
         5: ifnonnull     10
         8: aconst_null
         9: areturn
        10: aload_0
        11: aload_1
        12: invokespecial #37                 // Method hashOf:(Ljava/lang/Object;)I
        15: istore_3
        16: aload_0
        17: iload_3
        18: invokevirtual #38                 // Method segmentFor:(I)Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        21: aload_1
        22: iload_3
        23: aload_2
        24: invokevirtual #56                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.replace:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
        27: areturn
      LineNumberTable:
        line 1426: 0
        line 1427: 8
        line 1429: 10
        line 1430: 16
      StackMapTable: number_of_entries = 2
        frame_type = 8 /* same */
        frame_type = 1 /* same */
    Signature: #190                         // (TK;TV;)TV;

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: iconst_0
         1: istore_1
         2: iload_1
         3: aload_0
         4: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
         7: arraylength
         8: if_icmpge     26
        11: aload_0
        12: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        15: iload_1
        16: aaload
        17: invokevirtual #57                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.clear:()V
        20: iinc          1, 1
        23: goto          2
        26: return
      LineNumberTable:
        line 1438: 0
        line 1439: 11
        line 1438: 20
        line 1441: 26
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 23

  public void purgeStaleEntries();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: iconst_0
         1: istore_1
         2: iload_1
         3: aload_0
         4: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
         7: arraylength
         8: if_icmpge     26
        11: aload_0
        12: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        15: iload_1
        16: aaload
        17: invokevirtual #58                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.removeStale:()V
        20: iinc          1, 1
        23: goto          2
        26: return
      LineNumberTable:
        line 1455: 0
        line 1456: 11
        line 1455: 20
        line 1458: 26
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 23

  public java.util.Set<K> keySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #59                 // Field keySet:Ljava/util/Set;
         4: astore_1
         5: aload_1
         6: ifnull        13
         9: aload_1
        10: goto          26
        13: aload_0
        14: new           #60                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet
        17: dup
        18: aload_0
        19: invokespecial #61                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
        22: dup_x1
        23: putfield      #59                 // Field keySet:Ljava/util/Set;
        26: areturn
      LineNumberTable:
        line 1479: 0
        line 1480: 5
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/util/Set ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/util/Set ]
    Signature: #203                         // ()Ljava/util/Set<TK;>;

  public java.util.Collection<V> values();
    descriptor: ()Ljava/util/Collection;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #62                 // Field values:Ljava/util/Collection;
         4: astore_1
         5: aload_1
         6: ifnull        13
         9: aload_1
        10: goto          26
        13: aload_0
        14: new           #63                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$Values
        17: dup
        18: aload_0
        19: invokespecial #64                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Values."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
        22: dup_x1
        23: putfield      #62                 // Field values:Ljava/util/Collection;
        26: areturn
      LineNumberTable:
        line 1501: 0
        line 1502: 5
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/util/Collection ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/util/Collection ]
    Signature: #206                         // ()Ljava/util/Collection<TV;>;

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=1
         0: aload_0
         1: getfield      #65                 // Field entrySet:Ljava/util/Set;
         4: astore_1
         5: aload_1
         6: ifnull        13
         9: aload_1
        10: goto          26
        13: aload_0
        14: new           #66                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet
        17: dup
        18: aload_0
        19: invokespecial #67                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
        22: dup_x1
        23: putfield      #65                 // Field entrySet:Ljava/util/Set;
        26: areturn
      LineNumberTable:
        line 1523: 0
        line 1524: 5
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 13
          locals = [ class java/util/Set ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/util/Set ]
    Signature: #207                         // ()Ljava/util/Set<Ljava/util/Map$Entry<TK;TV;>;>;

  public java.util.Enumeration<K> keys();
    descriptor: ()Ljava/util/Enumeration;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #68                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator
         3: dup
         4: aload_0
         5: invokespecial #69                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
         8: areturn
      LineNumberTable:
        line 1535: 0
    Signature: #210                         // ()Ljava/util/Enumeration<TK;>;

  public java.util.Enumeration<V> elements();
    descriptor: ()Ljava/util/Enumeration;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #70                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$ValueIterator
         3: dup
         4: aload_0
         5: invokespecial #71                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$ValueIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
         8: areturn
      LineNumberTable:
        line 1546: 0
    Signature: #212                         // ()Ljava/util/Enumeration<TV;>;

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    descriptor: (Ljava/io/ObjectOutputStream;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=9, args_size=2
         0: aload_1
         1: invokevirtual #72                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
         4: iconst_0
         5: istore_2
         6: iload_2
         7: aload_0
         8: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        11: arraylength
        12: if_icmpge     123
        15: aload_0
        16: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        19: iload_2
        20: aaload
        21: astore_3
        22: aload_3
        23: invokevirtual #31                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.lock:()V
        26: aload_3
        27: getfield      #73                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.table:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        30: astore        4
        32: iconst_0
        33: istore        5
        35: iload         5
        37: aload         4
        39: arraylength
        40: if_icmpge     101
        43: aload         4
        45: iload         5
        47: aaload
        48: astore        6
        50: aload         6
        52: ifnull        95
        55: aload         6
        57: invokevirtual #74                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.key:()Ljava/lang/Object;
        60: astore        7
        62: aload         7
        64: ifnonnull     70
        67: goto          85
        70: aload_1
        71: aload         7
        73: invokevirtual #75                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
        76: aload_1
        77: aload         6
        79: invokevirtual #76                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.value:()Ljava/lang/Object;
        82: invokevirtual #75                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
        85: aload         6
        87: getfield      #77                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry.next:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;
        90: astore        6
        92: goto          50
        95: iinc          5, 1
        98: goto          35
       101: aload_3
       102: invokevirtual #32                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.unlock:()V
       105: goto          117
       108: astore        8
       110: aload_3
       111: invokevirtual #32                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.unlock:()V
       114: aload         8
       116: athrow
       117: iinc          2, 1
       120: goto          6
       123: aload_1
       124: aconst_null
       125: invokevirtual #75                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
       128: aload_1
       129: aconst_null
       130: invokevirtual #75                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
       133: return
      Exception table:
         from    to  target type
            26   101   108   any
           108   110   108   any
      LineNumberTable:
        line 1873: 0
        line 1875: 4
        line 1876: 15
        line 1877: 22
        line 1879: 26
        line 1880: 32
        line 1881: 43
        line 1882: 55
        line 1883: 62
        line 1885: 67
        line 1888: 70
        line 1889: 76
        line 1881: 85
        line 1880: 95
        line 1894: 101
        line 1895: 105
        line 1894: 108
        line 1895: 114
        line 1875: 117
        line 1897: 123
        line 1898: 128
        line 1899: 133
      StackMapTable: number_of_entries = 10
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 254 /* append */
          offset_delta = 28
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap$Segment, class "[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;", int ]
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry ]
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 14
        frame_type = 250 /* chop */
          offset_delta = 9
        frame_type = 249 /* chop */
          offset_delta = 5
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 8
        frame_type = 250 /* chop */
          offset_delta = 5
    Exceptions:
      throws java.io.IOException

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    descriptor: (Ljava/io/ObjectInputStream;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: invokevirtual #78                 // Method java/io/ObjectInputStream.defaultReadObject:()V
         4: iconst_0
         5: istore_2
         6: iload_2
         7: aload_0
         8: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        11: arraylength
        12: if_icmpge     34
        15: aload_0
        16: getfield      #1                  // Field segments:[Lconcurrentrefhashmap/ConcurrentReferenceHashMap$Segment;
        19: iload_2
        20: aaload
        21: iconst_1
        22: anewarray     #79                 // class concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry
        25: invokevirtual #80                 // Method concurrentrefhashmap/ConcurrentReferenceHashMap$Segment.setTable:([Lconcurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry;)V
        28: iinc          2, 1
        31: goto          6
        34: aload_1
        35: invokevirtual #81                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
        38: astore_2
        39: aload_1
        40: invokevirtual #81                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
        43: astore_3
        44: aload_2
        45: ifnonnull     51
        48: goto          61
        51: aload_0
        52: aload_2
        53: aload_3
        54: invokevirtual #51                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        57: pop
        58: goto          34
        61: return
      LineNumberTable:
        line 1910: 0
        line 1913: 4
        line 1914: 15
        line 1913: 28
        line 1919: 34
        line 1920: 39
        line 1921: 44
        line 1922: 48
        line 1924: 51
        line 1925: 58
        line 1926: 61
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 6
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 27
        frame_type = 253 /* append */
          offset_delta = 16
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 249 /* chop */
          offset_delta = 9
    Exceptions:
      throws java.io.IOException, java.lang.ClassNotFoundException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #82                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
         3: putstatic     #19                 // Field DEFAULT_KEY_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
         6: getstatic     #83                 // Field concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType.STRONG:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
         9: putstatic     #20                 // Field DEFAULT_VALUE_TYPE:Lconcurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType;
        12: return
      LineNumberTable:
        line 177: 0
        line 179: 6
}
Signature: #222                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/AbstractMap<TK;TV;>;Ljava/util/concurrent/ConcurrentMap<TK;TV;>;Ljava/io/Serializable;
SourceFile: "ConcurrentReferenceHashMap.java"
InnerClasses:
  final #87= #66 of #11;                  // EntrySet=class concurrentrefhashmap/ConcurrentReferenceHashMap$EntrySet of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #89= #63 of #11;                  // Values=class concurrentrefhashmap/ConcurrentReferenceHashMap$Values of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #90= #60 of #11;                  // KeySet=class concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #92= #91 of #11;                  // EntryIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$EntryIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #94= #93 of #11;                  // WriteThroughEntry=class concurrentrefhashmap/ConcurrentReferenceHashMap$WriteThroughEntry of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static #96= #95 of #11;                 // SimpleEntry=class concurrentrefhashmap/ConcurrentReferenceHashMap$SimpleEntry of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #97= #70 of #11;                  // ValueIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$ValueIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #98= #68 of #11;                  // KeyIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  abstract #100= #99 of #11;              // HashIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$HashIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #101= #17 of #11;          // Segment=class concurrentrefhashmap/ConcurrentReferenceHashMap$Segment of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #102= #79 of #11;          // HashEntry=class concurrentrefhashmap/ConcurrentReferenceHashMap$HashEntry of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #104= #103 of #11;         // SoftValueReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$SoftValueReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #106= #105 of #11;         // WeakValueReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$WeakValueReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #108= #107 of #11;         // SoftKeyReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$SoftKeyReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static final #110= #109 of #11;         // WeakKeyReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$WeakKeyReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
  static #112= #111 of #11;               // KeyReference=class concurrentrefhashmap/ConcurrentReferenceHashMap$KeyReference of class concurrentrefhashmap/ConcurrentReferenceHashMap
  public static final #114= #113 of #11;  // Option=class concurrentrefhashmap/ConcurrentReferenceHashMap$Option of class concurrentrefhashmap/ConcurrentReferenceHashMap
  public static final #116= #115 of #11;  // ReferenceType=class concurrentrefhashmap/ConcurrentReferenceHashMap$ReferenceType of class concurrentrefhashmap/ConcurrentReferenceHashMap
  public static #147= #48 of #245;        // Entry=class java/util/Map$Entry of class java/util/Map
