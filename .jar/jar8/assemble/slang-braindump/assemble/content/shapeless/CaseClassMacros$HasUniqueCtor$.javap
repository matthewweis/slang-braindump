Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/shapeless/CaseClassMacros$HasUniqueCtor$.class
  Last modified May 29, 2022; size 6928 bytes
  SHA-256 checksum a1304df2d91ab34ecc03fcf8c94314339f17fb6e1376c337cfef8ee8b0837852
  Compiled from "generic.scala"
public class shapeless.CaseClassMacros$HasUniqueCtor$
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // shapeless/CaseClassMacros$HasUniqueCtor$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               shapeless/CaseClassMacros$HasUniqueCtor$
    #2 = Class              #1            // shapeless/CaseClassMacros$HasUniqueCtor$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               generic.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/Option$WithFilter
   #12 = Class              #11           // scala/Option$WithFilter
   #13 = Utf8               scala/Option
   #14 = Class              #13           // scala/Option
   #15 = Utf8               WithFilter
   #16 = Utf8               scala/Predef$ArrowAssoc$
   #17 = Class              #16           // scala/Predef$ArrowAssoc$
   #18 = Utf8               scala/Predef
   #19 = Class              #18           // scala/Predef
   #20 = Utf8               ArrowAssoc$
   #21 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper
   #22 = Class              #21           // scala/collection/SeqFactory$UnapplySeqWrapper
   #23 = Utf8               scala/collection/SeqFactory
   #24 = Class              #23           // scala/collection/SeqFactory
   #25 = Utf8               UnapplySeqWrapper
   #26 = Utf8               scala/collection/SeqFactory$UnapplySeqWrapper$
   #27 = Class              #26           // scala/collection/SeqFactory$UnapplySeqWrapper$
   #28 = Utf8               UnapplySeqWrapper$
   #29 = Utf8               scala/reflect/api/Names$NameApi
   #30 = Class              #29           // scala/reflect/api/Names$NameApi
   #31 = Utf8               scala/reflect/api/Names
   #32 = Class              #31           // scala/reflect/api/Names
   #33 = Utf8               NameApi
   #34 = Utf8               scala/reflect/api/Names$TermNameApi
   #35 = Class              #34           // scala/reflect/api/Names$TermNameApi
   #36 = Utf8               TermNameApi
   #37 = Utf8               scala/reflect/api/Symbols$SymbolApi
   #38 = Class              #37           // scala/reflect/api/Symbols$SymbolApi
   #39 = Utf8               scala/reflect/api/Symbols
   #40 = Class              #39           // scala/reflect/api/Symbols
   #41 = Utf8               SymbolApi
   #42 = Utf8               scala/reflect/api/Types$TypeApi
   #43 = Class              #42           // scala/reflect/api/Types$TypeApi
   #44 = Utf8               scala/reflect/api/Types
   #45 = Class              #44           // scala/reflect/api/Types
   #46 = Utf8               TypeApi
   #47 = Utf8               shapeless/CaseClassMacros
   #48 = Class              #47           // shapeless/CaseClassMacros
   #49 = Utf8               HasUniqueCtor$
   #50 = Utf8               $outer
   #51 = Utf8               Lshapeless/CaseClassMacros;
   #52 = Utf8               unapply
   #53 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #54 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;>;
   #55 = Utf8               tpe
   #56 = NameAndType        #50:#51       // $outer:Lshapeless/CaseClassMacros;
   #57 = Fieldref           #2.#56        // shapeless/CaseClassMacros$HasUniqueCtor$.$outer:Lshapeless/CaseClassMacros;
   #58 = Utf8               accessiblePrimaryCtorOf
   #59 = NameAndType        #58:#53       // accessiblePrimaryCtorOf:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #60 = InterfaceMethodref #48.#59       // shapeless/CaseClassMacros.accessiblePrimaryCtorOf:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
   #61 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #62 = MethodType         #61           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #63 = Utf8               $anonfun$unapply$16$adapted
   #64 = Utf8               (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
   #65 = NameAndType        #63:#64       // $anonfun$unapply$16$adapted:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
   #66 = Methodref          #2.#65        // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$16$adapted:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
   #67 = MethodHandle       6:#66         // REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$16$adapted:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
   #68 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
   #69 = MethodType         #68           //  (Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
   #70 = Integer            5
   #71 = Integer            1
   #72 = Utf8               java/lang/invoke/LambdaMetafactory
   #73 = Class              #72           // java/lang/invoke/LambdaMetafactory
   #74 = Utf8               altMetafactory
   #75 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #76 = NameAndType        #74:#75       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #77 = Methodref          #73.#76       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #78 = MethodHandle       6:#77         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #79 = Utf8               apply
   #80 = Utf8               (Lshapeless/CaseClassMacros$HasUniqueCtor$;)Lscala/Function1;
   #81 = NameAndType        #79:#80       // apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;)Lscala/Function1;
   #82 = InvokeDynamic      #0:#81        // #0:apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;)Lscala/Function1;
   #83 = Utf8               withFilter
   #84 = Utf8               (Lscala/Function1;)Lscala/Option$WithFilter;
   #85 = NameAndType        #83:#84       // withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
   #86 = Methodref          #14.#85       // scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
   #87 = Utf8               $anonfun$unapply$17
   #88 = Utf8               (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
   #89 = NameAndType        #87:#88       // $anonfun$unapply$17:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
   #90 = Methodref          #2.#89        // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$17:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
   #91 = MethodHandle       6:#90         // REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$17:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
   #92 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
   #93 = MethodType         #92           //  (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
   #94 = Utf8               (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
   #95 = NameAndType        #79:#94       // apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
   #96 = InvokeDynamic      #1:#95        // #1:apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
   #97 = Utf8               flatMap
   #98 = Utf8               (Lscala/Function1;)Lscala/Option;
   #99 = NameAndType        #97:#98       // flatMap:(Lscala/Function1;)Lscala/Option;
  #100 = Methodref          #12.#99       // scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
  #101 = Utf8               this
  #102 = Utf8               Lshapeless/CaseClassMacros$HasUniqueCtor$;
  #103 = Utf8               Lscala/reflect/api/Types$TypeApi;
  #104 = Utf8               $anonfun$unapply$16
  #105 = Utf8               (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #106 = Utf8               $this
  #107 = Utf8               ctor
  #108 = Utf8               isNonGeneric
  #109 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Z
  #110 = NameAndType        #108:#109     // isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #111 = InterfaceMethodref #48.#110      // shapeless/CaseClassMacros.isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
  #112 = Utf8               Lscala/reflect/api/Symbols$SymbolApi;
  #113 = Utf8               $anonfun$unapply$18
  #114 = Utf8               (Lscala/collection/immutable/List;)Z
  #115 = Utf8               check$ifrefutable$3
  #116 = Utf8               scala/collection/immutable/Seq$
  #117 = Class              #116          // scala/collection/immutable/Seq$
  #118 = Utf8               MODULE$
  #119 = Utf8               Lscala/collection/immutable/Seq$;
  #120 = NameAndType        #118:#119     // MODULE$:Lscala/collection/immutable/Seq$;
  #121 = Fieldref           #117.#120     // scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
  #122 = Utf8               unapplySeq
  #123 = Utf8               (Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #124 = NameAndType        #122:#123     // unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #125 = Methodref          #117.#124     // scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #126 = Utf8               Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #127 = NameAndType        #118:#126     // MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #128 = Fieldref           #27.#127      // scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
  #129 = Utf8               isEmpty$extension
  #130 = Utf8               (Lscala/collection/SeqOps;)Z
  #131 = NameAndType        #129:#130     // isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #132 = Methodref          #27.#131      // scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
  #133 = Utf8               get$extension
  #134 = NameAndType        #133:#123     // get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #135 = Methodref          #27.#134      // scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
  #136 = Utf8               <init>
  #137 = Utf8               (Lscala/collection/SeqOps;)V
  #138 = NameAndType        #136:#137     // "<init>":(Lscala/collection/SeqOps;)V
  #139 = Methodref          #22.#138      // scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
  #140 = Utf8               lengthCompare$extension
  #141 = Utf8               (Lscala/collection/SeqOps;I)I
  #142 = NameAndType        #140:#141     // lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #143 = Methodref          #27.#142      // scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
  #144 = Utf8               Lscala/collection/immutable/List;
  #145 = Utf8               scala/collection/immutable/List
  #146 = Class              #145          // scala/collection/immutable/List
  #147 = Utf8               scala/collection/SeqOps
  #148 = Class              #147          // scala/collection/SeqOps
  #149 = Utf8               $anonfun$unapply$20
  #150 = Utf8               (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #151 = Utf8               param
  #152 = Utf8               Lscala/Predef$ArrowAssoc$;
  #153 = NameAndType        #118:#152     // MODULE$:Lscala/Predef$ArrowAssoc$;
  #154 = Fieldref           #17.#153      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #155 = Utf8               scala/Predef$
  #156 = Class              #155          // scala/Predef$
  #157 = Utf8               Lscala/Predef$;
  #158 = NameAndType        #118:#157     // MODULE$:Lscala/Predef$;
  #159 = Fieldref           #156.#158     // scala/Predef$.MODULE$:Lscala/Predef$;
  #160 = Utf8               name
  #161 = Utf8               ()Lscala/reflect/api/Names$NameApi;
  #162 = NameAndType        #160:#161     // name:()Lscala/reflect/api/Names$NameApi;
  #163 = InterfaceMethodref #38.#162      // scala/reflect/api/Symbols$SymbolApi.name:()Lscala/reflect/api/Names$NameApi;
  #164 = Utf8               toTermName
  #165 = Utf8               ()Lscala/reflect/api/Names$TermNameApi;
  #166 = NameAndType        #164:#165     // toTermName:()Lscala/reflect/api/Names$TermNameApi;
  #167 = Methodref          #30.#166      // scala/reflect/api/Names$NameApi.toTermName:()Lscala/reflect/api/Names$TermNameApi;
  #168 = Utf8               ArrowAssoc
  #169 = NameAndType        #168:#61      // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #170 = Methodref          #156.#169     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #171 = Utf8               typeSignature
  #172 = Utf8               ()Lscala/reflect/api/Types$TypeApi;
  #173 = NameAndType        #171:#172     // typeSignature:()Lscala/reflect/api/Types$TypeApi;
  #174 = InterfaceMethodref #38.#173      // scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
  #175 = Utf8               $minus$greater$extension
  #176 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #177 = NameAndType        #175:#176     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #178 = Methodref          #17.#177      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #179 = Utf8               $anonfun$unapply$21
  #180 = Utf8               (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #181 = Utf8               aligned
  #182 = Utf8               $anonfun$unapply$19
  #183 = Utf8               (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #184 = Utf8               tpe$7
  #185 = Utf8               x$28
  #186 = Utf8               apply$extension
  #187 = Utf8               (Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #188 = NameAndType        #186:#187     // apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #189 = Methodref          #27.#188      // scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
  #190 = NameAndType        #149:#150     // $anonfun$unapply$20:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #191 = Methodref          #2.#190       // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$20:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #192 = MethodHandle       6:#191        // REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$20:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #193 = MethodType         #150          //  (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  #194 = Utf8               ()Lscala/Function1;
  #195 = NameAndType        #79:#194      // apply:()Lscala/Function1;
  #196 = InvokeDynamic      #2:#195       // #2:apply:()Lscala/Function1;
  #197 = Utf8               map
  #198 = Utf8               (Lscala/Function1;)Lscala/collection/immutable/List;
  #199 = NameAndType        #197:#198     // map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #200 = Methodref          #146.#199     // scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
  #201 = Utf8               alignFields
  #202 = Utf8               (Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #203 = NameAndType        #201:#202     // alignFields:(Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #204 = InterfaceMethodref #48.#203      // shapeless/CaseClassMacros.alignFields:(Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #205 = NameAndType        #179:#180     // $anonfun$unapply$21:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #206 = Methodref          #2.#205       // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$21:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #207 = MethodHandle       6:#206        // REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$21:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #208 = MethodType         #180          //  (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  #209 = InvokeDynamic      #3:#195       // #3:apply:()Lscala/Function1;
  #210 = NameAndType        #197:#98      // map:(Lscala/Function1;)Lscala/Option;
  #211 = Methodref          #14.#210      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #212 = Utf8               scala/MatchError
  #213 = Class              #212          // scala/MatchError
  #214 = Utf8               (Ljava/lang/Object;)V
  #215 = NameAndType        #136:#214     // "<init>":(Ljava/lang/Object;)V
  #216 = Methodref          #213.#215     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #217 = Utf8               params
  #218 = Utf8               scala/Option$
  #219 = Class              #218          // scala/Option$
  #220 = Utf8               Lscala/Option$;
  #221 = NameAndType        #118:#220     // MODULE$:Lscala/Option$;
  #222 = Fieldref           #219.#221     // scala/Option$.MODULE$:Lscala/Option$;
  #223 = Utf8               typeSignatureIn
  #224 = Utf8               (Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #225 = NameAndType        #223:#224     // typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #226 = InterfaceMethodref #38.#225      // scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
  #227 = Utf8               paramLists
  #228 = Utf8               ()Lscala/collection/immutable/List;
  #229 = NameAndType        #227:#228     // paramLists:()Lscala/collection/immutable/List;
  #230 = Methodref          #43.#229      // scala/reflect/api/Types$TypeApi.paramLists:()Lscala/collection/immutable/List;
  #231 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #232 = NameAndType        #79:#231      // apply:(Ljava/lang/Object;)Lscala/Option;
  #233 = Methodref          #219.#232     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #234 = Utf8               $anonfun$unapply$18$adapted
  #235 = Utf8               (Lscala/collection/immutable/List;)Ljava/lang/Object;
  #236 = NameAndType        #234:#235     // $anonfun$unapply$18$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
  #237 = Methodref          #2.#236       // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$18$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
  #238 = MethodHandle       6:#237        // REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$18$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
  #239 = MethodType         #235          //  (Lscala/collection/immutable/List;)Ljava/lang/Object;
  #240 = InvokeDynamic      #4:#195       // #4:apply:()Lscala/Function1;
  #241 = NameAndType        #182:#183     // $anonfun$unapply$19:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #242 = Methodref          #2.#241       // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$19:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #243 = MethodHandle       6:#242        // REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$19:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
  #244 = Utf8               (Lscala/collection/immutable/List;)Lscala/Option;
  #245 = MethodType         #244          //  (Lscala/collection/immutable/List;)Lscala/Option;
  #246 = InvokeDynamic      #5:#95        // #5:apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
  #247 = Utf8               (Lshapeless/CaseClassMacros;)V
  #248 = Utf8               ()V
  #249 = NameAndType        #136:#248     // "<init>":()V
  #250 = Methodref          #4.#249       // java/lang/Object."<init>":()V
  #251 = NameAndType        #104:#105     // $anonfun$unapply$16:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #252 = Methodref          #2.#251       // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$16:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Z
  #253 = Utf8               scala/runtime/BoxesRunTime
  #254 = Class              #253          // scala/runtime/BoxesRunTime
  #255 = Utf8               boxToBoolean
  #256 = Utf8               (Z)Ljava/lang/Boolean;
  #257 = NameAndType        #255:#256     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #258 = Methodref          #254.#257     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #259 = NameAndType        #113:#114     // $anonfun$unapply$18:(Lscala/collection/immutable/List;)Z
  #260 = Methodref          #2.#259       // shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$18:(Lscala/collection/immutable/List;)Z
  #261 = Utf8               $deserializeLambda$
  #262 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #263 = Utf8               scala/runtime/LambdaDeserialize
  #264 = Class              #263          // scala/runtime/LambdaDeserialize
  #265 = Utf8               bootstrap
  #266 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #267 = NameAndType        #265:#266     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #268 = Methodref          #264.#267     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #269 = MethodHandle       6:#268        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #270 = Utf8               lambdaDeserialize
  #271 = NameAndType        #270:#262     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #272 = InvokeDynamic      #6:#271       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #273 = Utf8               Code
  #274 = Utf8               LineNumberTable
  #275 = Utf8               LocalVariableTable
  #276 = Utf8               Signature
  #277 = Utf8               MethodParameters
  #278 = Utf8               StackMapTable
  #279 = Utf8               InnerClasses
  #280 = Utf8               SourceFile
  #281 = Utf8               BootstrapMethods
  #282 = Utf8               ScalaInlineInfo
  #283 = Utf8               Scala
{
  private final shapeless.CaseClassMacros $outer;
    descriptor: Lshapeless/CaseClassMacros;
    flags: (0x1012) ACC_PRIVATE, ACC_FINAL, ACC_SYNTHETIC

  public scala.Option<scala.collection.immutable.List<scala.Tuple2<scala.reflect.api.Names$TermNameApi, scala.reflect.api.Types$TypeApi>>> unapply(scala.reflect.api.Types$TypeApi);
    descriptor: (Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: getfield      #57                 // Field $outer:Lshapeless/CaseClassMacros;
         4: aload_1
         5: invokeinterface #60,  2           // InterfaceMethod shapeless/CaseClassMacros.accessiblePrimaryCtorOf:(Lscala/reflect/api/Types$TypeApi;)Lscala/Option;
        10: aload_0
        11: invokedynamic #82,  0             // InvokeDynamic #0:apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;)Lscala/Function1;
        16: invokevirtual #86                 // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        19: aload_0
        20: aload_1
        21: invokedynamic #96,  0             // InvokeDynamic #1:apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
        26: invokevirtual #100                // Method scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
        29: areturn
      LineNumberTable:
        line 844: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  this   Lshapeless/CaseClassMacros$HasUniqueCtor$;
            0      30     1   tpe   Lscala/reflect/api/Types$TypeApi;
    Signature: #54                          // (Lscala/reflect/api/Types$TypeApi;)Lscala/Option<Lscala/collection/immutable/List<Lscala/Tuple2<Lscala/reflect/api/Names$TermNameApi;Lscala/reflect/api/Types$TypeApi;>;>;>;
    MethodParameters:
      Name                           Flags
      tpe                            final

  public static final boolean $anonfun$unapply$16(shapeless.CaseClassMacros$HasUniqueCtor$, scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #57                 // Field $outer:Lshapeless/CaseClassMacros;
         4: aload_1
         5: invokeinterface #111,  2          // InterfaceMethod shapeless/CaseClassMacros.isNonGeneric:(Lscala/reflect/api/Symbols$SymbolApi;)Z
        10: ifne          17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 845: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0 $this   Lshapeless/CaseClassMacros$HasUniqueCtor$;
            0      19     1  ctor   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      ctor                           final

  public static final boolean $anonfun$unapply$18(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        67
         6: getstatic     #121                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
         9: aload_2
        10: invokevirtual #125                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        13: astore_3
        14: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        17: aload_3
        18: invokevirtual #132                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        21: ifne          64
        24: new           #22                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        27: dup
        28: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        31: aload_3
        32: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        35: invokespecial #139                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        38: ifnull        64
        41: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        44: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        47: aload_3
        48: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        51: iconst_1
        52: invokevirtual #143                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        55: iconst_0
        56: if_icmpne     64
        59: iconst_1
        60: istore_1
        61: goto          75
        64: goto          70
        67: goto          70
        70: iconst_0
        71: istore_1
        72: goto          75
        75: iload_1
        76: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 64
          locals = [ top, class scala/collection/immutable/List, class scala/collection/SeqOps ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/immutable/List, int, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 846: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0 check$ifrefutable$3   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$3            final

  public static final scala.Tuple2 $anonfun$unapply$20(scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: getstatic     #154                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         3: getstatic     #159                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_0
         7: invokeinterface #163,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.name:()Lscala/reflect/api/Names$NameApi;
        12: invokevirtual #167                // Method scala/reflect/api/Names$NameApi.toTermName:()Lscala/reflect/api/Names$TermNameApi;
        15: invokevirtual #170                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        18: aload_0
        19: invokeinterface #174,  1          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignature:()Lscala/reflect/api/Types$TypeApi;
        24: invokevirtual #178                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        27: areturn
      LineNumberTable:
        line 848: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 param   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      param                          final

  public static final scala.collection.immutable.List $anonfun$unapply$21(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 849: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 aligned   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      aligned                        final

  public static final scala.Option $anonfun$unapply$19(shapeless.CaseClassMacros$HasUniqueCtor$, scala.reflect.api.Types$TypeApi, scala.collection.immutable.List);
    descriptor: (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        121
         8: getstatic     #121                // Field scala/collection/immutable/Seq$.MODULE$:Lscala/collection/immutable/Seq$;
        11: aload         4
        13: invokevirtual #125                // Method scala/collection/immutable/Seq$.unapplySeq:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        16: astore        5
        18: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        21: aload         5
        23: invokevirtual #132                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.isEmpty$extension:(Lscala/collection/SeqOps;)Z
        26: ifne          118
        29: new           #22                 // class scala/collection/SeqFactory$UnapplySeqWrapper
        32: dup
        33: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        36: aload         5
        38: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        41: invokespecial #139                // Method scala/collection/SeqFactory$UnapplySeqWrapper."<init>":(Lscala/collection/SeqOps;)V
        44: ifnull        118
        47: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        50: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        53: aload         5
        55: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        58: iconst_1
        59: invokevirtual #143                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.lengthCompare$extension:(Lscala/collection/SeqOps;I)I
        62: iconst_0
        63: if_icmpne     118
        66: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        69: getstatic     #128                // Field scala/collection/SeqFactory$UnapplySeqWrapper$.MODULE$:Lscala/collection/SeqFactory$UnapplySeqWrapper$;
        72: aload         5
        74: invokevirtual #135                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.get$extension:(Lscala/collection/SeqOps;)Lscala/collection/SeqOps;
        77: iconst_0
        78: invokevirtual #189                // Method scala/collection/SeqFactory$UnapplySeqWrapper$.apply$extension:(Lscala/collection/SeqOps;I)Ljava/lang/Object;
        81: checkcast     #146                // class scala/collection/immutable/List
        84: astore        6
        86: aload_0
        87: getfield      #57                 // Field $outer:Lshapeless/CaseClassMacros;
        90: aload_1
        91: aload         6
        93: invokedynamic #196,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        98: invokevirtual #200                // Method scala/collection/immutable/List.map:(Lscala/Function1;)Lscala/collection/immutable/List;
       101: invokeinterface #204,  3          // InterfaceMethod shapeless/CaseClassMacros.alignFields:(Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
       106: invokedynamic #209,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       111: invokevirtual #211                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
       114: astore_3
       115: goto          134
       118: goto          124
       121: goto          124
       124: new           #213                // class scala/MatchError
       127: dup
       128: aload         4
       130: invokespecial #216                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       133: athrow
       134: aload_3
       135: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 118
          locals = [ top, class scala/collection/immutable/List, class scala/collection/SeqOps ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class shapeless/CaseClassMacros$HasUniqueCtor$, class scala/reflect/api/Types$TypeApi, class scala/collection/immutable/List, class scala/Option, class scala/collection/immutable/List, class scala/collection/SeqOps, class scala/collection/immutable/List ]
          stack = []
      LineNumberTable:
        line 846: 0
        line 847: 86
        line 846: 118
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           84      34     6 params   Lscala/collection/immutable/List;
            0     136     0 $this   Lshapeless/CaseClassMacros$HasUniqueCtor$;
            0     136     1 tpe$7   Lscala/reflect/api/Types$TypeApi;
            0     136     2  x$28   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tpe$7                          final
      x$28                           final

  public static final scala.Option $anonfun$unapply$17(shapeless.CaseClassMacros$HasUniqueCtor$, scala.reflect.api.Types$TypeApi, scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #222                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_2
         4: aload_1
         5: invokeinterface #226,  2          // InterfaceMethod scala/reflect/api/Symbols$SymbolApi.typeSignatureIn:(Lscala/reflect/api/Types$TypeApi;)Lscala/reflect/api/Types$TypeApi;
        10: invokevirtual #230                // Method scala/reflect/api/Types$TypeApi.paramLists:()Lscala/collection/immutable/List;
        13: invokevirtual #233                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        16: invokedynamic #240,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        21: invokevirtual #86                 // Method scala/Option.withFilter:(Lscala/Function1;)Lscala/Option$WithFilter;
        24: aload_0
        25: aload_1
        26: invokedynamic #246,  0            // InvokeDynamic #5:apply:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;)Lscala/Function1;
        31: invokevirtual #100                // Method scala/Option$WithFilter.flatMap:(Lscala/Function1;)Lscala/Option;
        34: areturn
      LineNumberTable:
        line 846: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 $this   Lshapeless/CaseClassMacros$HasUniqueCtor$;
            0      35     1 tpe$7   Lscala/reflect/api/Types$TypeApi;
            0      35     2  ctor   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      tpe$7                          final
      ctor                           final

  public shapeless.CaseClassMacros$HasUniqueCtor$(shapeless.CaseClassMacros);
    descriptor: (Lshapeless/CaseClassMacros;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: ifnonnull     6
         4: aconst_null
         5: athrow
         6: aload_0
         7: aload_1
         8: putfield      #57                 // Field $outer:Lshapeless/CaseClassMacros;
        11: aload_0
        12: invokespecial #250                // Method java/lang/Object."<init>":()V
        15: return
      StackMapTable: number_of_entries = 1
        frame_type = 6 /* same */
      LineNumberTable:
        line 842: 0
        line 852: 11
        line 842: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lshapeless/CaseClassMacros$HasUniqueCtor$;
            0      16     1 $outer   Lshapeless/CaseClassMacros;
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic

  public static final java.lang.Object $anonfun$unapply$16$adapted(shapeless.CaseClassMacros$HasUniqueCtor$, scala.reflect.api.Symbols$SymbolApi);
    descriptor: (Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #252                // Method $anonfun$unapply$16:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Z
         5: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 844: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lshapeless/CaseClassMacros$HasUniqueCtor$;
            0       9     1  ctor   Lscala/reflect/api/Symbols$SymbolApi;
    MethodParameters:
      Name                           Flags
      $this                          final
      ctor                           final

  public static final java.lang.Object $anonfun$unapply$18$adapted(scala.collection.immutable.List);
    descriptor: (Lscala/collection/immutable/List;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #260                // Method $anonfun$unapply$18:(Lscala/collection/immutable/List;)Z
         4: invokestatic  #258                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 846: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 check$ifrefutable$3   Lscala/collection/immutable/List;
    MethodParameters:
      Name                           Flags
      check$ifrefutable$3            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #272,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // WithFilter=class scala/Option$WithFilter of class scala/Option
  public static #20= #17 of #19;          // ArrowAssoc$=class scala/Predef$ArrowAssoc$ of class scala/Predef
  public static final #25= #22 of #24;    // UnapplySeqWrapper=class scala/collection/SeqFactory$UnapplySeqWrapper of class scala/collection/SeqFactory
  public static #28= #27 of #24;          // UnapplySeqWrapper$=class scala/collection/SeqFactory$UnapplySeqWrapper$ of class scala/collection/SeqFactory
  public abstract #33= #30 of #32;        // NameApi=class scala/reflect/api/Names$NameApi of class scala/reflect/api/Names
  public #36= #35 of #32;                 // TermNameApi=class scala/reflect/api/Names$TermNameApi of class scala/reflect/api/Names
  public #41= #38 of #40;                 // SymbolApi=class scala/reflect/api/Symbols$SymbolApi of class scala/reflect/api/Symbols
  public abstract #46= #43 of #45;        // TypeApi=class scala/reflect/api/Types$TypeApi of class scala/reflect/api/Types
  public #49= #2 of #48;                  // HasUniqueCtor$=class shapeless/CaseClassMacros$HasUniqueCtor$ of class shapeless/CaseClassMacros
SourceFile: "generic.scala"
BootstrapMethods:
  0: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #62 (Ljava/lang/Object;)Ljava/lang/Object;
      #67 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$16$adapted:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
      #69 (Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
      #70 5
      #71 1
      #69 (Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
  1: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #62 (Ljava/lang/Object;)Ljava/lang/Object;
      #91 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$17:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
      #93 (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
      #70 5
      #71 1
      #93 (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
  2: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #62 (Ljava/lang/Object;)Ljava/lang/Object;
      #192 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$20:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
      #193 (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
      #70 5
      #71 1
      #193 (Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
  3: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #62 (Ljava/lang/Object;)Ljava/lang/Object;
      #207 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$21:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #208 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
      #70 5
      #71 1
      #208 (Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  4: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #62 (Ljava/lang/Object;)Ljava/lang/Object;
      #238 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$18$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
      #239 (Lscala/collection/immutable/List;)Ljava/lang/Object;
      #70 5
      #71 1
      #239 (Lscala/collection/immutable/List;)Ljava/lang/Object;
  5: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #62 (Ljava/lang/Object;)Ljava/lang/Object;
      #243 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$19:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
      #245 (Lscala/collection/immutable/List;)Lscala/Option;
      #70 5
      #71 1
      #245 (Lscala/collection/immutable/List;)Lscala/Option;
  6: #269 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #67 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$16$adapted:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Symbols$SymbolApi;)Ljava/lang/Object;
      #91 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$17:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Option;
      #238 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$18$adapted:(Lscala/collection/immutable/List;)Ljava/lang/Object;
      #243 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$19:(Lshapeless/CaseClassMacros$HasUniqueCtor$;Lscala/reflect/api/Types$TypeApi;Lscala/collection/immutable/List;)Lscala/Option;
      #192 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$20:(Lscala/reflect/api/Symbols$SymbolApi;)Lscala/Tuple2;
      #207 REF_invokeStatic shapeless/CaseClassMacros$HasUniqueCtor$.$anonfun$unapply$21:(Lscala/collection/immutable/List;)Lscala/collection/immutable/List;
  ScalaInlineInfo: length = 0x36 (unknown attribute)
   01 01 00 0A 00 3F 00 40 01 00 68 00 69 01 00 57
   00 58 01 00 EA 00 EB 01 00 71 00 72 01 00 B6 00
   B7 01 00 95 00 96 01 00 B3 00 B4 01 00 88 00 F7
   01 00 34 00 35 01
  Scala: length = 0x0 (unknown attribute)

