Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/com/fasterxml/jackson/databind/node/MissingNode.class
  Last modified May 29, 2022; size 3311 bytes
  SHA-256 checksum 85a8ee66f4d96d48c0c64b81ef61fef76ea437c6484386dca9eb43fc15db458f
  Compiled from "MissingNode.java"
public final class com.fasterxml.jackson.databind.node.MissingNode extends com.fasterxml.jackson.databind.node.ValueNode
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #13                         // com/fasterxml/jackson/databind/node/MissingNode
  super_class: #15                        // com/fasterxml/jackson/databind/node/ValueNode
  interfaces: 0, fields: 2, methods: 18, attributes: 1
Constant pool:
    #1 = Methodref          #15.#74       // com/fasterxml/jackson/databind/node/ValueNode."<init>":()V
    #2 = Fieldref           #13.#75       // com/fasterxml/jackson/databind/node/MissingNode.instance:Lcom/fasterxml/jackson/databind/node/MissingNode;
    #3 = Fieldref           #76.#77       // com/fasterxml/jackson/databind/node/JsonNodeType.MISSING:Lcom/fasterxml/jackson/databind/node/JsonNodeType;
    #4 = Fieldref           #78.#79       // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;
    #5 = String             #80           //
    #6 = Methodref          #81.#82       // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
    #7 = String             #83           // require() called on `MissingNode`
    #8 = Class              #84           // java/lang/Object
    #9 = Methodref          #13.#85       // com/fasterxml/jackson/databind/node/MissingNode._reportRequiredViolation:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
   #10 = Class              #86           // com/fasterxml/jackson/databind/JsonNode
   #11 = String             #87           // requireNonNull() called on `MissingNode`
   #12 = Methodref          #76.#88       // com/fasterxml/jackson/databind/node/JsonNodeType.ordinal:()I
   #13 = Class              #89           // com/fasterxml/jackson/databind/node/MissingNode
   #14 = Methodref          #13.#74       // com/fasterxml/jackson/databind/node/MissingNode."<init>":()V
   #15 = Class              #90           // com/fasterxml/jackson/databind/node/ValueNode
   #16 = Utf8               serialVersionUID
   #17 = Utf8               J
   #18 = Utf8               ConstantValue
   #19 = Long               1l
   #21 = Utf8               instance
   #22 = Utf8               Lcom/fasterxml/jackson/databind/node/MissingNode;
   #23 = Utf8               <init>
   #24 = Utf8               ()V
   #25 = Utf8               Code
   #26 = Utf8               LineNumberTable
   #27 = Utf8               LocalVariableTable
   #28 = Utf8               this
   #29 = Utf8               readResolve
   #30 = Utf8               ()Ljava/lang/Object;
   #31 = Utf8               isMissingNode
   #32 = Utf8               ()Z
   #33 = Utf8               deepCopy
   #34 = Utf8               ()Lcom/fasterxml/jackson/databind/JsonNode;
   #35 = Utf8               Signature
   #36 = Utf8               <T:Lcom/fasterxml/jackson/databind/JsonNode;>()TT;
   #37 = Utf8               getInstance
   #38 = Utf8               ()Lcom/fasterxml/jackson/databind/node/MissingNode;
   #39 = Utf8               getNodeType
   #40 = Utf8               ()Lcom/fasterxml/jackson/databind/node/JsonNodeType;
   #41 = Utf8               asToken
   #42 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;
   #43 = Utf8               asText
   #44 = Utf8               ()Ljava/lang/String;
   #45 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #46 = Utf8               defaultValue
   #47 = Utf8               Ljava/lang/String;
   #48 = Utf8               serialize
   #49 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
   #50 = Utf8               g
   #51 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;
   #52 = Utf8               provider
   #53 = Utf8               Lcom/fasterxml/jackson/databind/SerializerProvider;
   #54 = Utf8               Exceptions
   #55 = Class              #91           // java/io/IOException
   #56 = Utf8               serializeWithType
   #57 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
   #58 = Utf8               typeSer
   #59 = Utf8               Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
   #60 = Utf8               require
   #61 = Utf8               requireNonNull
   #62 = Utf8               hashCode
   #63 = Utf8               ()I
   #64 = Utf8               toString
   #65 = Utf8               toPrettyString
   #66 = Utf8               equals
   #67 = Utf8               (Ljava/lang/Object;)Z
   #68 = Utf8               o
   #69 = Utf8               Ljava/lang/Object;
   #70 = Utf8               StackMapTable
   #71 = Utf8               <clinit>
   #72 = Utf8               SourceFile
   #73 = Utf8               MissingNode.java
   #74 = NameAndType        #23:#24       // "<init>":()V
   #75 = NameAndType        #21:#22       // instance:Lcom/fasterxml/jackson/databind/node/MissingNode;
   #76 = Class              #92           // com/fasterxml/jackson/databind/node/JsonNodeType
   #77 = NameAndType        #93:#94       // MISSING:Lcom/fasterxml/jackson/databind/node/JsonNodeType;
   #78 = Class              #95           // com/fasterxml/jackson/core/JsonToken
   #79 = NameAndType        #96:#97       // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;
   #80 = Utf8
   #81 = Class              #98           // com/fasterxml/jackson/core/JsonGenerator
   #82 = NameAndType        #99:#24       // writeNull:()V
   #83 = Utf8               require() called on `MissingNode`
   #84 = Utf8               java/lang/Object
   #85 = NameAndType        #100:#101     // _reportRequiredViolation:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
   #86 = Utf8               com/fasterxml/jackson/databind/JsonNode
   #87 = Utf8               requireNonNull() called on `MissingNode`
   #88 = NameAndType        #102:#63      // ordinal:()I
   #89 = Utf8               com/fasterxml/jackson/databind/node/MissingNode
   #90 = Utf8               com/fasterxml/jackson/databind/node/ValueNode
   #91 = Utf8               java/io/IOException
   #92 = Utf8               com/fasterxml/jackson/databind/node/JsonNodeType
   #93 = Utf8               MISSING
   #94 = Utf8               Lcom/fasterxml/jackson/databind/node/JsonNodeType;
   #95 = Utf8               com/fasterxml/jackson/core/JsonToken
   #96 = Utf8               NOT_AVAILABLE
   #97 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;
   #98 = Utf8               com/fasterxml/jackson/core/JsonGenerator
   #99 = Utf8               writeNull
  #100 = Utf8               _reportRequiredViolation
  #101 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Utf8               ordinal
{
  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long 1l

  private static final com.fasterxml.jackson.databind.node.MissingNode instance;
    descriptor: Lcom/fasterxml/jackson/databind/node/MissingNode;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  protected com.fasterxml.jackson.databind.node.MissingNode();
    descriptor: ()V
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method com/fasterxml/jackson/databind/node/ValueNode."<init>":()V
         4: return
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  protected java.lang.Object readResolve();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #2                  // Field instance:Lcom/fasterxml/jackson/databind/node/MissingNode;
         3: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public boolean isMissingNode();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 43: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public <T extends com.fasterxml.jackson.databind.JsonNode> T deepCopy();
    descriptor: ()Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;
    Signature: #36                          // <T:Lcom/fasterxml/jackson/databind/JsonNode;>()TT;

  public static com.fasterxml.jackson.databind.node.MissingNode getInstance();
    descriptor: ()Lcom/fasterxml/jackson/databind/node/MissingNode;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #2                  // Field instance:Lcom/fasterxml/jackson/databind/node/MissingNode;
         3: areturn
      LineNumberTable:
        line 51: 0

  public com.fasterxml.jackson.databind.node.JsonNodeType getNodeType();
    descriptor: ()Lcom/fasterxml/jackson/databind/node/JsonNodeType;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #3                  // Field com/fasterxml/jackson/databind/node/JsonNodeType.MISSING:Lcom/fasterxml/jackson/databind/node/JsonNodeType;
         3: areturn
      LineNumberTable:
        line 56: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public com.fasterxml.jackson.core.JsonToken asToken();
    descriptor: ()Lcom/fasterxml/jackson/core/JsonToken;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #4                  // Field com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;
         3: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public java.lang.String asText();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #5                  // String
         2: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public java.lang.String asText(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;
            0       2     1 defaultValue   Ljava/lang/String;

  public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=3, args_size=3
         0: aload_1
         1: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
         4: return
      LineNumberTable:
        line 90: 0
        line 91: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;
            0       5     1     g   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       5     2 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
    Exceptions:
      throws java.io.IOException

  public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException;
    descriptor: (Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=4, args_size=4
         0: aload_1
         1: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonGenerator.writeNull:()V
         4: return
      LineNumberTable:
        line 98: 0
        line 99: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;
            0       5     1     g   Lcom/fasterxml/jackson/core/JsonGenerator;
            0       5     2 provider   Lcom/fasterxml/jackson/databind/SerializerProvider;
            0       5     3 typeSer   Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
    Exceptions:
      throws java.io.IOException

  public com.fasterxml.jackson.databind.JsonNode require();
    descriptor: ()Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #7                  // String require() called on `MissingNode`
         3: iconst_0
         4: anewarray     #8                  // class java/lang/Object
         7: invokevirtual #9                  // Method _reportRequiredViolation:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #10                 // class com/fasterxml/jackson/databind/JsonNode
        13: areturn
      LineNumberTable:
        line 110: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public com.fasterxml.jackson.databind.JsonNode requireNonNull();
    descriptor: ()Lcom/fasterxml/jackson/databind/JsonNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc           #11                 // String requireNonNull() called on `MissingNode`
         3: iconst_0
         4: anewarray     #8                  // class java/lang/Object
         7: invokevirtual #9                  // Method _reportRequiredViolation:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #10                 // class com/fasterxml/jackson/databind/JsonNode
        13: areturn
      LineNumberTable:
        line 116: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #3                  // Field com/fasterxml/jackson/databind/node/JsonNodeType.MISSING:Lcom/fasterxml/jackson/databind/node/JsonNodeType;
         3: invokevirtual #12                 // Method com/fasterxml/jackson/databind/node/JsonNodeType.ordinal:()I
         6: ireturn
      LineNumberTable:
        line 121: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #5                  // String
         2: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public java.lang.String toPrettyString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #5                  // String
         2: areturn
      LineNumberTable:
        line 139: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: if_acmpne     9
         5: iconst_1
         6: goto          10
         9: iconst_0
        10: ireturn
      LineNumberTable:
        line 151: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcom/fasterxml/jackson/databind/node/MissingNode;
            0      11     1     o   Ljava/lang/Object;
      StackMapTable: number_of_entries = 2
        frame_type = 9 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #13                 // class com/fasterxml/jackson/databind/node/MissingNode
         3: dup
         4: invokespecial #14                 // Method "<init>":()V
         7: putstatic     #2                  // Field instance:Lcom/fasterxml/jackson/databind/node/MissingNode;
        10: return
      LineNumberTable:
        line 27: 0
}
SourceFile: "MissingNode.java"
