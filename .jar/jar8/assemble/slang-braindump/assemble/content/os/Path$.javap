Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/os/Path$.class
  Last modified May 29, 2022; size 5717 bytes
  SHA-256 checksum 38663bb0d0556375db22b3998a034d25f4bcc194f75f9f92e306a24052c3d624
  Compiled from "Path.scala"
public final class os.Path$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/Path$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 11, attributes: 5
Constant pool:
    #1 = Utf8               os/Path$
    #2 = Class              #1            // os/Path$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Path.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               os/Path$$anon$1
   #12 = Class              #11           // os/Path$$anon$1
   #13 = Utf8               os/PathChunk$RelPathChunk
   #14 = Class              #13           // os/PathChunk$RelPathChunk
   #15 = Utf8               os/PathChunk
   #16 = Class              #15           // os/PathChunk
   #17 = Utf8               RelPathChunk
   #18 = Utf8               os/PathChunk$SubPathChunk
   #19 = Class              #18           // os/PathChunk$SubPathChunk
   #20 = Utf8               SubPathChunk
   #21 = Utf8               os/PathConvertible$NioPathConvertible$
   #22 = Class              #21           // os/PathConvertible$NioPathConvertible$
   #23 = Utf8               os/PathConvertible
   #24 = Class              #23           // os/PathConvertible
   #25 = Utf8               NioPathConvertible$
   #26 = Utf8               os/PathConvertible$StringConvertible$
   #27 = Class              #26           // os/PathConvertible$StringConvertible$
   #28 = Utf8               StringConvertible$
   #29 = Utf8               os/PathError$AbsolutePathOutsideRoot$
   #30 = Class              #29           // os/PathError$AbsolutePathOutsideRoot$
   #31 = Utf8               os/PathError
   #32 = Class              #31           // os/PathError
   #33 = Utf8               AbsolutePathOutsideRoot$
   #34 = Utf8               scala/collection/JavaConverters$AsScala
   #35 = Class              #34           // scala/collection/JavaConverters$AsScala
   #36 = Utf8               scala/collection/JavaConverters
   #37 = Class              #36           // scala/collection/JavaConverters
   #38 = Utf8               AsScala
   #39 = Utf8               MODULE$
   #40 = Utf8               Los/Path$;
   #41 = Utf8               pathOrdering
   #42 = Utf8               Lscala/math/Ordering;
   #43 = Utf8               Lscala/math/Ordering<Los/Path;>;
   #44 = Utf8               <clinit>
   #45 = Utf8               ()V
   #46 = Utf8               <init>
   #47 = NameAndType        #46:#45       // "<init>":()V
   #48 = Methodref          #2.#47        // os/Path$."<init>":()V
   #49 = NameAndType        #39:#40       // MODULE$:Los/Path$;
   #50 = Fieldref           #2.#49        // os/Path$.MODULE$:Los/Path$;
   #51 = Methodref          #12.#47       // os/Path$$anon$1."<init>":()V
   #52 = NameAndType        #41:#42       // pathOrdering:Lscala/math/Ordering;
   #53 = Fieldref           #2.#52        // os/Path$.pathOrdering:Lscala/math/Ordering;
   #54 = Utf8               apply
   #55 = Utf8               (Los/FilePath;Los/Path;)Los/Path;
   #56 = Utf8               p
   #57 = Utf8               base
   #58 = Utf8               os/RelPath
   #59 = Class              #58           // os/RelPath
   #60 = Utf8               os/PathChunk$
   #61 = Class              #60           // os/PathChunk$
   #62 = Utf8               Los/PathChunk$;
   #63 = NameAndType        #39:#62       // MODULE$:Los/PathChunk$;
   #64 = Fieldref           #61.#63       // os/PathChunk$.MODULE$:Los/PathChunk$;
   #65 = Utf8               (Los/RelPath;)Los/PathChunk$RelPathChunk;
   #66 = NameAndType        #17:#65       // RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
   #67 = Methodref          #61.#66       // os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
   #68 = Utf8               os/Path
   #69 = Class              #68           // os/Path
   #70 = Utf8               $div
   #71 = Utf8               (Los/PathChunk;)Los/Path;
   #72 = NameAndType        #70:#71       // $div:(Los/PathChunk;)Los/Path;
   #73 = Methodref          #69.#72       // os/Path.$div:(Los/PathChunk;)Los/Path;
   #74 = Utf8               os/SubPath
   #75 = Class              #74           // os/SubPath
   #76 = Utf8               (Los/SubPath;)Los/PathChunk$SubPathChunk;
   #77 = NameAndType        #20:#76       // SubPathChunk:(Los/SubPath;)Los/PathChunk$SubPathChunk;
   #78 = Methodref          #61.#77       // os/PathChunk$.SubPathChunk:(Los/SubPath;)Los/PathChunk$SubPathChunk;
   #79 = Utf8               scala/MatchError
   #80 = Class              #79           // scala/MatchError
   #81 = Utf8               (Ljava/lang/Object;)V
   #82 = NameAndType        #46:#81       // "<init>":(Ljava/lang/Object;)V
   #83 = Methodref          #80.#82       // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #84 = Utf8               this
   #85 = Utf8               Los/FilePath;
   #86 = Utf8               Los/Path;
   #87 = Utf8               os/FilePath
   #88 = Class              #87           // os/FilePath
   #89 = Utf8               expandUser
   #90 = Utf8               (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
   #91 = Utf8               <T:Ljava/lang/Object;>(TT;Los/Path;Los/PathConvertible<TT;>;)Los/Path;
   #92 = Utf8               f0
   #93 = Utf8               evidence$4
   #94 = Utf8               scala/Predef$
   #95 = Class              #94           // scala/Predef$
   #96 = Utf8               Lscala/Predef$;
   #97 = NameAndType        #39:#96       // MODULE$:Lscala/Predef$;
   #98 = Fieldref           #95.#97       // scala/Predef$.MODULE$:Lscala/Predef$;
   #99 = Utf8               implicitly
  #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #101 = NameAndType        #99:#100      // implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Methodref          #95.#101      // scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
  #103 = Utf8               (Ljava/lang/Object;)Ljava/nio/file/Path;
  #104 = NameAndType        #54:#103      // apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
  #105 = InterfaceMethodref #24.#104      // os/PathConvertible.apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
  #106 = Utf8               java/nio/file/Path
  #107 = Class              #106          // java/nio/file/Path
  #108 = Utf8               subpath
  #109 = Utf8               (II)Ljava/nio/file/Path;
  #110 = NameAndType        #108:#109     // subpath:(II)Ljava/nio/file/Path;
  #111 = InterfaceMethodref #107.#110     // java/nio/file/Path.subpath:(II)Ljava/nio/file/Path;
  #112 = Utf8               toString
  #113 = Utf8               ()Ljava/lang/String;
  #114 = NameAndType        #112:#113     // toString:()Ljava/lang/String;
  #115 = Methodref          #4.#114       // java/lang/Object.toString:()Ljava/lang/String;
  #116 = Utf8               ~
  #117 = String             #116          // ~
  #118 = Utf8               equals
  #119 = Utf8               (Ljava/lang/Object;)Z
  #120 = NameAndType        #118:#119     // equals:(Ljava/lang/Object;)Z
  #121 = Methodref          #4.#120       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #122 = Utf8               (Ljava/lang/Object;Los/PathConvertible;)Los/Path;
  #123 = NameAndType        #54:#122      // apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
  #124 = Methodref          #2.#123       // os/Path$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
  #125 = NameAndType        #54:#90       // apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
  #126 = Methodref          #2.#125       // os/Path$.apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
  #127 = Utf8               user.home
  #128 = String             #127          // user.home
  #129 = Utf8               java/lang/System
  #130 = Class              #129          // java/lang/System
  #131 = Utf8               getProperty
  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #133 = NameAndType        #131:#132     // getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #134 = Methodref          #130.#133     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
  #135 = Utf8               Los/PathConvertible$StringConvertible$;
  #136 = NameAndType        #39:#135      // MODULE$:Los/PathConvertible$StringConvertible$;
  #137 = Fieldref           #27.#136      // os/PathConvertible$StringConvertible$.MODULE$:Los/PathConvertible$StringConvertible$;
  #138 = Utf8               os/RelPath$
  #139 = Class              #138          // os/RelPath$
  #140 = Utf8               Los/RelPath$;
  #141 = NameAndType        #39:#140      // MODULE$:Los/RelPath$;
  #142 = Fieldref           #139.#141     // os/RelPath$.MODULE$:Los/RelPath$;
  #143 = Utf8               relativize
  #144 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #145 = NameAndType        #143:#144     // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #146 = InterfaceMethodref #107.#145     // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #147 = Utf8               Los/PathConvertible$NioPathConvertible$;
  #148 = NameAndType        #39:#147      // MODULE$:Los/PathConvertible$NioPathConvertible$;
  #149 = Fieldref           #22.#148      // os/PathConvertible$NioPathConvertible$.MODULE$:Los/PathConvertible$NioPathConvertible$;
  #150 = Utf8               (Ljava/lang/Object;Los/PathConvertible;)Los/RelPath;
  #151 = NameAndType        #54:#150      // apply:(Ljava/lang/Object;Los/PathConvertible;)Los/RelPath;
  #152 = Methodref          #139.#151     // os/RelPath$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/RelPath;
  #153 = Utf8               f
  #154 = Utf8               Ljava/nio/file/Path;
  #155 = Utf8               Ljava/lang/Object;
  #156 = Utf8               Los/PathConvertible;
  #157 = Utf8               java/lang/String
  #158 = Class              #157          // java/lang/String
  #159 = Utf8               expandUser$default$2
  #160 = Utf8               ()Los/Path;
  #161 = Utf8               <T:Ljava/lang/Object;>()Los/Path;
  #162 = Utf8               evidence$5
  #163 = Utf8               os/FilePath$
  #164 = Class              #163          // os/FilePath$
  #165 = Utf8               Los/FilePath$;
  #166 = NameAndType        #39:#165      // MODULE$:Los/FilePath$;
  #167 = Fieldref           #164.#166     // os/FilePath$.MODULE$:Los/FilePath$;
  #168 = Utf8               (Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
  #169 = NameAndType        #54:#168      // apply:(Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
  #170 = Methodref          #164.#169     // os/FilePath$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
  #171 = NameAndType        #54:#55       // apply:(Los/FilePath;Los/Path;)Los/Path;
  #172 = Methodref          #2.#171       // os/Path$.apply:(Los/FilePath;Los/Path;)Los/Path;
  #173 = Utf8               <T:Ljava/lang/Object;>(TT;Los/PathConvertible<TT;>;)Los/Path;
  #174 = Utf8               evidence$6
  #175 = Utf8               scala/collection/JavaConverters$
  #176 = Class              #175          // scala/collection/JavaConverters$
  #177 = Utf8               Lscala/collection/JavaConverters$;
  #178 = NameAndType        #39:#177      // MODULE$:Lscala/collection/JavaConverters$;
  #179 = Fieldref           #176.#178     // scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
  #180 = Utf8               iterator
  #181 = Utf8               ()Ljava/util/Iterator;
  #182 = NameAndType        #180:#181     // iterator:()Ljava/util/Iterator;
  #183 = InterfaceMethodref #107.#182     // java/nio/file/Path.iterator:()Ljava/util/Iterator;
  #184 = Utf8               asScalaIteratorConverter
  #185 = Utf8               (Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #186 = NameAndType        #184:#185     // asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #187 = Methodref          #176.#186     // scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #188 = Utf8               asScala
  #189 = Utf8               ()Ljava/lang/Object;
  #190 = NameAndType        #188:#189     // asScala:()Ljava/lang/Object;
  #191 = Methodref          #35.#190      // scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
  #192 = Utf8               scala/collection/IterableOnceOps
  #193 = Class              #192          // scala/collection/IterableOnceOps
  #194 = MethodType         #100          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #195 = Utf8               $anonfun$apply$5$adapted
  #196 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/Object;
  #197 = NameAndType        #195:#196     // $anonfun$apply$5$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  #198 = Methodref          #2.#197       // os/Path$.$anonfun$apply$5$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  #199 = MethodHandle       6:#198        // REF_invokeStatic os/Path$.$anonfun$apply$5$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  #200 = MethodType         #196          //  (Ljava/nio/file/Path;)Ljava/lang/Object;
  #201 = Integer            5
  #202 = Integer            1
  #203 = Utf8               java/lang/invoke/LambdaMetafactory
  #204 = Class              #203          // java/lang/invoke/LambdaMetafactory
  #205 = Utf8               altMetafactory
  #206 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #207 = NameAndType        #205:#206     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #208 = Methodref          #204.#207     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #209 = MethodHandle       6:#208        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #210 = Utf8               ()Lscala/Function1;
  #211 = NameAndType        #54:#210      // apply:()Lscala/Function1;
  #212 = InvokeDynamic      #0:#211       // #0:apply:()Lscala/Function1;
  #213 = Utf8               count
  #214 = Utf8               (Lscala/Function1;)I
  #215 = NameAndType        #213:#214     // count:(Lscala/Function1;)I
  #216 = InterfaceMethodref #193.#215     // scala/collection/IterableOnceOps.count:(Lscala/Function1;)I
  #217 = Utf8               getNameCount
  #218 = Utf8               ()I
  #219 = NameAndType        #217:#218     // getNameCount:()I
  #220 = InterfaceMethodref #107.#219     // java/nio/file/Path.getNameCount:()I
  #221 = Utf8               Los/PathError$AbsolutePathOutsideRoot$;
  #222 = NameAndType        #39:#221      // MODULE$:Los/PathError$AbsolutePathOutsideRoot$;
  #223 = Fieldref           #30.#222      // os/PathError$AbsolutePathOutsideRoot$.MODULE$:Los/PathError$AbsolutePathOutsideRoot$;
  #224 = Utf8               normalize
  #225 = Utf8               ()Ljava/nio/file/Path;
  #226 = NameAndType        #224:#225     // normalize:()Ljava/nio/file/Path;
  #227 = InterfaceMethodref #107.#226     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;
  #228 = Utf8               (Ljava/nio/file/Path;)V
  #229 = NameAndType        #46:#228      // "<init>":(Ljava/nio/file/Path;)V
  #230 = Methodref          #69.#229      // os/Path."<init>":(Ljava/nio/file/Path;)V
  #231 = Utf8               normalized
  #232 = Utf8               ()Lscala/math/Ordering;
  #233 = Utf8               ()Lscala/math/Ordering<Los/Path;>;
  #234 = Utf8               $anonfun$apply$5
  #235 = Utf8               (Ljava/nio/file/Path;)Z
  #236 = Utf8               x$7
  #237 = Utf8               ..
  #238 = String             #237          // ..
  #239 = Utf8               startsWith
  #240 = Utf8               (Ljava/lang/String;)Z
  #241 = NameAndType        #239:#240     // startsWith:(Ljava/lang/String;)Z
  #242 = InterfaceMethodref #107.#241     // java/nio/file/Path.startsWith:(Ljava/lang/String;)Z
  #243 = Methodref          #4.#47        // java/lang/Object."<init>":()V
  #244 = NameAndType        #234:#235     // $anonfun$apply$5:(Ljava/nio/file/Path;)Z
  #245 = Methodref          #2.#244       // os/Path$.$anonfun$apply$5:(Ljava/nio/file/Path;)Z
  #246 = Utf8               scala/runtime/BoxesRunTime
  #247 = Class              #246          // scala/runtime/BoxesRunTime
  #248 = Utf8               boxToBoolean
  #249 = Utf8               (Z)Ljava/lang/Boolean;
  #250 = NameAndType        #248:#249     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #251 = Methodref          #247.#250     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #252 = Utf8               $deserializeLambda$
  #253 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #254 = Utf8               scala/runtime/LambdaDeserialize
  #255 = Class              #254          // scala/runtime/LambdaDeserialize
  #256 = Utf8               bootstrap
  #257 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #258 = NameAndType        #256:#257     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #259 = Methodref          #255.#258     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #260 = MethodHandle       6:#259        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #261 = Utf8               lambdaDeserialize
  #262 = NameAndType        #261:#253     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #263 = InvokeDynamic      #1:#262       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #264 = Utf8               Signature
  #265 = Utf8               Code
  #266 = Utf8               LineNumberTable
  #267 = Utf8               StackMapTable
  #268 = Utf8               LocalVariableTable
  #269 = Utf8               MethodParameters
  #270 = Utf8               InnerClasses
  #271 = Utf8               SourceFile
  #272 = Utf8               BootstrapMethods
  #273 = Utf8               ScalaInlineInfo
  #274 = Utf8               Scala
{
  public static final os.Path$ MODULE$;
    descriptor: Los/Path$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.math.Ordering<os.Path> pathOrdering;
    descriptor: Lscala/math/Ordering;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #43                          // Lscala/math/Ordering<Los/Path;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/Path$
         3: dup
         4: invokespecial #48                 // Method "<init>":()V
         7: putstatic     #50                 // Field MODULE$:Los/Path$;
        10: new           #12                 // class os/Path$$anon$1
        13: dup
        14: invokespecial #51                 // Method os/Path$$anon$1."<init>":()V
        17: putstatic     #53                 // Field pathOrdering:Lscala/math/Ordering;
        20: return
      LineNumberTable:
        line 370: 0
        line 401: 10
        line 370: 20

  public os.Path apply(os.FilePath, os.Path);
    descriptor: (Los/FilePath;Los/Path;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=8, args_size=3
         0: aload_1
         1: astore        4
         3: aload         4
         5: instanceof    #59                 // class os/RelPath
         8: ifeq          34
        11: aload         4
        13: checkcast     #59                 // class os/RelPath
        16: astore        5
        18: aload_2
        19: getstatic     #64                 // Field os/PathChunk$.MODULE$:Los/PathChunk$;
        22: aload         5
        24: invokevirtual #67                 // Method os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
        27: invokevirtual #73                 // Method os/Path.$div:(Los/PathChunk;)Los/Path;
        30: astore_3
        31: goto          105
        34: goto          37
        37: aload         4
        39: instanceof    #75                 // class os/SubPath
        42: ifeq          68
        45: aload         4
        47: checkcast     #75                 // class os/SubPath
        50: astore        6
        52: aload_2
        53: getstatic     #64                 // Field os/PathChunk$.MODULE$:Los/PathChunk$;
        56: aload         6
        58: invokevirtual #78                 // Method os/PathChunk$.SubPathChunk:(Los/SubPath;)Los/PathChunk$SubPathChunk;
        61: invokevirtual #73                 // Method os/Path.$div:(Los/PathChunk;)Los/Path;
        64: astore_3
        65: goto          105
        68: goto          71
        71: aload         4
        73: instanceof    #69                 // class os/Path
        76: ifeq          92
        79: aload         4
        81: checkcast     #69                 // class os/Path
        84: astore        7
        86: aload         7
        88: astore_3
        89: goto          105
        92: goto          95
        95: new           #80                 // class scala/MatchError
        98: dup
        99: aload         4
       101: invokespecial #83                 // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       104: athrow
       105: aload_3
       106: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 34
          locals = [ top, class os/FilePath ]
        frame_type = 2 /* same */
        frame_type = 30 /* same */
        frame_type = 2 /* same */
        frame_type = 20 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class os/Path$, class os/FilePath, class os/Path, class os/Path, class os/FilePath ]
          stack = []
      LineNumberTable:
        line 371: 0
        line 372: 3
        line 373: 37
        line 374: 71
        line 371: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     107     0  this   Los/Path$;
            0     107     1     p   Los/FilePath;
            0     107     2  base   Los/Path;
    MethodParameters:
      Name                           Flags
      p                              final
      base                           final

  public <T extends java.lang.Object> os.Path expandUser(T, os.Path, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=4
         0: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_3
         4: invokevirtual #102                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
         7: checkcast     #24                 // class os/PathConvertible
        10: aload_1
        11: invokeinterface #105,  2          // InterfaceMethod os/PathConvertible.apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
        16: astore        4
        18: aload         4
        20: iconst_0
        21: iconst_1
        22: invokeinterface #111,  3          // InterfaceMethod java/nio/file/Path.subpath:(II)Ljava/nio/file/Path;
        27: invokevirtual #115                // Method java/lang/Object.toString:()Ljava/lang/String;
        30: ldc           #117                // String ~
        32: astore        5
        34: dup
        35: ifnonnull     47
        38: pop
        39: aload         5
        41: ifnull        78
        44: goto          55
        47: aload         5
        49: invokevirtual #121                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        52: ifne          78
        55: aload_2
        56: ifnonnull     68
        59: aload_0
        60: aload_1
        61: aload_3
        62: invokevirtual #124                // Method apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
        65: goto          75
        68: aload_0
        69: aload_1
        70: aload_2
        71: aload_3
        72: invokevirtual #126                // Method apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
        75: goto          124
        78: aload_0
        79: ldc           #128                // String user.home
        81: invokestatic  #134                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
        84: getstatic     #137                // Field os/PathConvertible$StringConvertible$.MODULE$:Los/PathConvertible$StringConvertible$;
        87: invokevirtual #124                // Method apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
        90: getstatic     #64                 // Field os/PathChunk$.MODULE$:Los/PathChunk$;
        93: getstatic     #142                // Field os/RelPath$.MODULE$:Los/RelPath$;
        96: aload         4
        98: iconst_0
        99: iconst_1
       100: invokeinterface #111,  3          // InterfaceMethod java/nio/file/Path.subpath:(II)Ljava/nio/file/Path;
       105: aload         4
       107: invokeinterface #146,  2          // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
       112: getstatic     #149                // Field os/PathConvertible$NioPathConvertible$.MODULE$:Los/PathConvertible$NioPathConvertible$;
       115: invokevirtual #152                // Method os/RelPath$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/RelPath;
       118: invokevirtual #67                 // Method os/PathChunk$.RelPathChunk:(Los/RelPath;)Los/PathChunk$RelPathChunk;
       121: invokevirtual #73                 // Method os/Path.$div:(Los/PathChunk;)Los/Path;
       124: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class os/Path$, class java/lang/Object, class os/Path, class os/PathConvertible, class java/nio/file/Path, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 12 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class os/Path ]
        frame_type = 2 /* same */
        frame_type = 109 /* same_locals_1_stack_item */
          stack = [ class os/Path ]
      LineNumberTable:
        line 382: 0
        line 383: 18
        line 385: 78
        line 386: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     106     4     f   Ljava/nio/file/Path;
            0     125     0  this   Los/Path$;
            0     125     1    f0   Ljava/lang/Object;
            0     125     2  base   Los/Path;
            0     125     3 evidence$4   Los/PathConvertible;
    Signature: #91                          // <T:Ljava/lang/Object;>(TT;Los/Path;Los/PathConvertible<TT;>;)Los/Path;
    MethodParameters:
      Name                           Flags
      f0                             final
      base                           final
      evidence$4                     final

  public <T extends java.lang.Object> os.Path expandUser$default$2();
    descriptor: ()Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aconst_null
         1: areturn
      LineNumberTable:
        line 381: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/Path$;
    Signature: #161                         // <T:Ljava/lang/Object;>()Los/Path;

  public <T extends java.lang.Object> os.Path apply(T, os.Path, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: getstatic     #167                // Field os/FilePath$.MODULE$:Los/FilePath$;
         4: aload_1
         5: aload_3
         6: invokevirtual #170                // Method os/FilePath$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/BasePathImpl;
         9: checkcast     #88                 // class os/FilePath
        12: aload_2
        13: invokevirtual #172                // Method apply:(Los/FilePath;Los/Path;)Los/Path;
        16: areturn
      LineNumberTable:
        line 390: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Los/Path$;
            0      17     1     f   Ljava/lang/Object;
            0      17     2  base   Los/Path;
            0      17     3 evidence$5   Los/PathConvertible;
    Signature: #91                          // <T:Ljava/lang/Object;>(TT;Los/Path;Los/PathConvertible<TT;>;)Los/Path;
    MethodParameters:
      Name                           Flags
      f                              final
      base                           final
      evidence$5                     final

  public <T extends java.lang.Object> os.Path apply(T, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/PathConvertible;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=3
         0: getstatic     #98                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_2
         4: invokevirtual #102                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
         7: checkcast     #24                 // class os/PathConvertible
        10: aload_1
        11: invokeinterface #105,  2          // InterfaceMethod os/PathConvertible.apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
        16: astore_3
        17: getstatic     #179                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
        20: aload_3
        21: invokeinterface #183,  1          // InterfaceMethod java/nio/file/Path.iterator:()Ljava/util/Iterator;
        26: invokevirtual #187                // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
        29: invokevirtual #191                // Method scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
        32: checkcast     #193                // class scala/collection/IterableOnceOps
        35: invokedynamic #212,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        40: invokeinterface #216,  2          // InterfaceMethod scala/collection/IterableOnceOps.count:(Lscala/Function1;)I
        45: aload_3
        46: invokeinterface #220,  1          // InterfaceMethod java/nio/file/Path.getNameCount:()I
        51: iconst_2
        52: idiv
        53: if_icmple     60
        56: getstatic     #223                // Field os/PathError$AbsolutePathOutsideRoot$.MODULE$:Los/PathError$AbsolutePathOutsideRoot$;
        59: athrow
        60: aload_3
        61: invokeinterface #227,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
        66: astore        4
        68: new           #69                 // class os/Path
        71: dup
        72: aload         4
        74: invokespecial #230                // Method os/Path."<init>":(Ljava/nio/file/Path;)V
        77: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 60
          locals = [ class java/nio/file/Path ]
      LineNumberTable:
        line 392: 0
        line 393: 17
        line 394: 56
        line 397: 60
        line 398: 68
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      60     3     f   Ljava/nio/file/Path;
           68       9     4 normalized   Ljava/nio/file/Path;
            0      78     0  this   Los/Path$;
            0      78     1    f0   Ljava/lang/Object;
            0      78     2 evidence$6   Los/PathConvertible;
    Signature: #173                         // <T:Ljava/lang/Object;>(TT;Los/PathConvertible<TT;>;)Los/Path;
    MethodParameters:
      Name                           Flags
      f0                             final
      evidence$6                     final

  public scala.math.Ordering<os.Path> pathOrdering();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #53                 // Field pathOrdering:Lscala/math/Ordering;
         3: areturn
      LineNumberTable:
        line 401: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/Path$;
    Signature: #233                         // ()Lscala/math/Ordering<Los/Path;>;

  public static final boolean $anonfun$apply$5(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #238                // String ..
         3: invokeinterface #242,  2          // InterfaceMethod java/nio/file/Path.startsWith:(Ljava/lang/String;)Z
         8: ireturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0   x$7   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$7                            final

  private os.Path$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #243                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 432: 0
        line 370: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path$;

  public static final java.lang.Object $anonfun$apply$5$adapted(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #245                // Method $anonfun$apply$5:(Ljava/nio/file/Path;)Z
         4: invokestatic  #251                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 393: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$7   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$7                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #263,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public final #12;                       // class os/Path$$anon$1
  public static #17= #14 of #16;          // RelPathChunk=class os/PathChunk$RelPathChunk of class os/PathChunk
  public static #20= #19 of #16;          // SubPathChunk=class os/PathChunk$SubPathChunk of class os/PathChunk
  public static #25= #22 of #24;          // NioPathConvertible$=class os/PathConvertible$NioPathConvertible$ of class os/PathConvertible
  public static #28= #27 of #24;          // StringConvertible$=class os/PathConvertible$StringConvertible$ of class os/PathConvertible
  public static #33= #30 of #32;          // AbsolutePathOutsideRoot$=class os/PathError$AbsolutePathOutsideRoot$ of class os/PathError
  public static #38= #35 of #37;          // AsScala=class scala/collection/JavaConverters$AsScala of class scala/collection/JavaConverters
SourceFile: "Path.scala"
BootstrapMethods:
  0: #209 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #194 (Ljava/lang/Object;)Ljava/lang/Object;
      #199 REF_invokeStatic os/Path$.$anonfun$apply$5$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
      #200 (Ljava/nio/file/Path;)Ljava/lang/Object;
      #201 5
      #202 1
      #200 (Ljava/nio/file/Path;)Ljava/lang/Object;
  1: #260 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #199 REF_invokeStatic os/Path$.$anonfun$apply$5$adapted:(Ljava/nio/file/Path;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 EA 00 EB 01 00 C3 00 C4 01 00 2E
   00 2D 01 00 36 00 5A 01 00 36 00 7A 01 00 36 00
   37 01 00 59 00 5A 01 00 9F 00 A0 01 00 29 00 E8
   01
  Scala: length = 0x0 (unknown attribute)

