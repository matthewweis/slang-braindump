Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/scalactic/Requirements$RequirementsHelper.class
  Last modified May 29, 2022; size 6984 bytes
  SHA-256 checksum ec830294bb03b496ef3662c0b6f056a44a806fe1419460cb5de9871d0453637d
  Compiled from "Requirements.scala"
public class org.scalactic.Requirements$RequirementsHelper implements java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // org/scalactic/Requirements$RequirementsHelper
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 0, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               org/scalactic/Requirements$RequirementsHelper
    #2 = Class              #1            // org/scalactic/Requirements$RequirementsHelper
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               Requirements.scala
    #8 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #9 = Class              #8            // java/lang/invoke/MethodHandles$Lookup
   #10 = Utf8               java/lang/invoke/MethodHandles
   #11 = Class              #10           // java/lang/invoke/MethodHandles
   #12 = Utf8               Lookup
   #13 = Utf8               org/scalactic/Requirements
   #14 = Class              #13           // org/scalactic/Requirements
   #15 = Utf8               RequirementsHelper
   #16 = Utf8               scala/collection/mutable/ArraySeq$ofRef
   #17 = Class              #16           // scala/collection/mutable/ArraySeq$ofRef
   #18 = Utf8               scala/collection/mutable/ArraySeq
   #19 = Class              #18           // scala/collection/mutable/ArraySeq
   #20 = Utf8               ofRef
   #21 = Utf8               append
   #22 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
   #23 = Utf8               currentMessage
   #24 = Utf8               clue
   #25 = Utf8               toString
   #26 = Utf8               ()Ljava/lang/String;
   #27 = NameAndType        #25:#26       // toString:()Ljava/lang/String;
   #28 = Methodref          #4.#27        // java/lang/Object.toString:()Ljava/lang/String;
   #29 = Utf8               java/lang/String
   #30 = Class              #29           // java/lang/String
   #31 = Utf8               isEmpty
   #32 = Utf8               ()Z
   #33 = NameAndType        #31:#32       // isEmpty:()Z
   #34 = Methodref          #30.#33       // java/lang/String.isEmpty:()Z
   #35 = Utf8               scala/collection/StringOps$
   #36 = Class              #35           // scala/collection/StringOps$
   #37 = Utf8               MODULE$
   #38 = Utf8               Lscala/collection/StringOps$;
   #39 = NameAndType        #37:#38       // MODULE$:Lscala/collection/StringOps$;
   #40 = Fieldref           #36.#39       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #41 = Utf8               scala/Predef$
   #42 = Class              #41           // scala/Predef$
   #43 = Utf8               Lscala/Predef$;
   #44 = NameAndType        #37:#43       // MODULE$:Lscala/Predef$;
   #45 = Fieldref           #42.#44       // scala/Predef$.MODULE$:Lscala/Predef$;
   #46 = Utf8               augmentString
   #47 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #48 = NameAndType        #46:#47       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #49 = Methodref          #42.#48       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #50 = Utf8               head$extension
   #51 = Utf8               (Ljava/lang/String;)C
   #52 = NameAndType        #50:#51       // head$extension:(Ljava/lang/String;)C
   #53 = Methodref          #36.#52       // scala/collection/StringOps$.head$extension:(Ljava/lang/String;)C
   #54 = Utf8               scala/runtime/RichChar$
   #55 = Class              #54           // scala/runtime/RichChar$
   #56 = Utf8               Lscala/runtime/RichChar$;
   #57 = NameAndType        #37:#56       // MODULE$:Lscala/runtime/RichChar$;
   #58 = Fieldref           #55.#57       // scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
   #59 = Utf8               charWrapper
   #60 = Utf8               (C)C
   #61 = NameAndType        #59:#60       // charWrapper:(C)C
   #62 = Methodref          #42.#61       // scala/Predef$.charWrapper:(C)C
   #63 = Utf8               isWhitespace$extension
   #64 = Utf8               (C)Z
   #65 = NameAndType        #63:#64       // isWhitespace$extension:(C)Z
   #66 = Methodref          #55.#65       // scala/runtime/RichChar$.isWhitespace$extension:(C)Z
   #67 = Utf8               java/lang/StringBuilder
   #68 = Class              #67           // java/lang/StringBuilder
   #69 = Integer            0
   #70 = Utf8               <init>
   #71 = Utf8               (I)V
   #72 = NameAndType        #70:#71       // "<init>":(I)V
   #73 = Methodref          #68.#72       // java/lang/StringBuilder."<init>":(I)V
   #74 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #75 = NameAndType        #21:#74       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #76 = Methodref          #68.#75       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #77 = Methodref          #68.#27       // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #78 = Integer            1
   #79 = Utf8
   #80 = String             #79           //
   #81 = Utf8               firstChar
   #82 = Utf8               C
   #83 = Utf8               clueStr
   #84 = Utf8               Ljava/lang/String;
   #85 = Utf8               this
   #86 = Utf8               Lorg/scalactic/Requirements$RequirementsHelper;
   #87 = Utf8               Ljava/lang/Object;
   #88 = Utf8               macroRequire
   #89 = Utf8               (Lorg/scalactic/Bool;Ljava/lang/Object;)V
   #90 = Utf8               bool
   #91 = Utf8               java/lang/NullPointerException
   #92 = Class              #91           // java/lang/NullPointerException
   #93 = Utf8               clue was null
   #94 = String             #93           // clue was null
   #95 = Utf8               (Ljava/lang/String;)V
   #96 = NameAndType        #70:#95       // "<init>":(Ljava/lang/String;)V
   #97 = Methodref          #92.#96       // java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
   #98 = Utf8               org/scalactic/Bool
   #99 = Class              #98           // org/scalactic/Bool
  #100 = Utf8               value
  #101 = NameAndType        #100:#32      // value:()Z
  #102 = InterfaceMethodref #99.#101      // org/scalactic/Bool.value:()Z
  #103 = Utf8               org/scalactic/Bool$
  #104 = Class              #103          // org/scalactic/Bool$
  #105 = Utf8               Lorg/scalactic/Bool$;
  #106 = NameAndType        #37:#105      // MODULE$:Lorg/scalactic/Bool$;
  #107 = Fieldref           #104.#106     // org/scalactic/Bool$.MODULE$:Lorg/scalactic/Bool$;
  #108 = Utf8               isSimpleWithoutExpressionText
  #109 = Utf8               (Lorg/scalactic/Bool;)Z
  #110 = NameAndType        #108:#109     // isSimpleWithoutExpressionText:(Lorg/scalactic/Bool;)Z
  #111 = Methodref          #104.#110     // org/scalactic/Bool$.isSimpleWithoutExpressionText:(Lorg/scalactic/Bool;)Z
  #112 = Utf8
  #113 = String             #112          //
  #114 = NameAndType        #21:#22       // append:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
  #115 = Methodref          #2.#114       // org/scalactic/Requirements$RequirementsHelper.append:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
  #116 = Utf8               failureMessage
  #117 = NameAndType        #116:#26      // failureMessage:()Ljava/lang/String;
  #118 = InterfaceMethodref #99.#117      // org/scalactic/Bool.failureMessage:()Ljava/lang/String;
  #119 = Utf8               java/lang/IllegalArgumentException
  #120 = Class              #119          // java/lang/IllegalArgumentException
  #121 = Utf8               org/scalactic/FailureMessages$
  #122 = Class              #121          // org/scalactic/FailureMessages$
  #123 = Utf8               Lorg/scalactic/FailureMessages$;
  #124 = NameAndType        #37:#123      // MODULE$:Lorg/scalactic/FailureMessages$;
  #125 = Fieldref           #122.#124     // org/scalactic/FailureMessages$.MODULE$:Lorg/scalactic/FailureMessages$;
  #126 = Utf8               expressionWasFalse
  #127 = NameAndType        #126:#26      // expressionWasFalse:()Ljava/lang/String;
  #128 = Methodref          #122.#127     // org/scalactic/FailureMessages$.expressionWasFalse:()Ljava/lang/String;
  #129 = Methodref          #120.#96      // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #130 = Utf8               Lorg/scalactic/Bool;
  #131 = Utf8               macroRequireState
  #132 = Utf8               java/lang/IllegalStateException
  #133 = Class              #132          // java/lang/IllegalStateException
  #134 = Methodref          #133.#96      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
  #135 = Utf8               macroRequireNonNull
  #136 = Utf8               ([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
  #137 = Utf8               variableNames
  #138 = Utf8               arguments
  #139 = Utf8               prettifier
  #140 = Utf8               pos
  #141 = Utf8               scala/collection/ArrayOps$
  #142 = Class              #141          // scala/collection/ArrayOps$
  #143 = Utf8               Lscala/collection/ArrayOps$;
  #144 = NameAndType        #37:#143      // MODULE$:Lscala/collection/ArrayOps$;
  #145 = Fieldref           #142.#144     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #146 = Utf8               genericArrayOps
  #147 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
  #149 = Methodref          #42.#148      // scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
  #150 = Utf8               zipWithIndex$extension
  #151 = Utf8               (Ljava/lang/Object;)[Lscala/Tuple2;
  #152 = NameAndType        #150:#151     // zipWithIndex$extension:(Ljava/lang/Object;)[Lscala/Tuple2;
  #153 = Methodref          #142.#152     // scala/collection/ArrayOps$.zipWithIndex$extension:(Ljava/lang/Object;)[Lscala/Tuple2;
  #154 = Utf8               [Ljava/lang/Object;
  #155 = Class              #154          // "[Ljava/lang/Object;"
  #156 = Utf8               refArrayOps
  #157 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #158 = NameAndType        #156:#157     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #159 = Methodref          #42.#158      // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #160 = MethodType         #147          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #161 = Utf8               $anonfun$macroRequireNonNull$1$adapted
  #162 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #163 = NameAndType        #161:#162     // $anonfun$macroRequireNonNull$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #164 = Methodref          #2.#163       // org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #165 = MethodHandle       6:#164        // REF_invokeStatic org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
  #166 = MethodType         #162          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #167 = Integer            5
  #168 = Utf8               java/lang/invoke/LambdaMetafactory
  #169 = Class              #168          // java/lang/invoke/LambdaMetafactory
  #170 = Utf8               altMetafactory
  #171 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #172 = NameAndType        #170:#171     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #173 = Methodref          #169.#172     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #174 = MethodHandle       6:#173        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #175 = Utf8               apply
  #176 = Utf8               ()Lscala/Function1;
  #177 = NameAndType        #175:#176     // apply:()Lscala/Function1;
  #178 = InvokeDynamic      #0:#177       // #0:apply:()Lscala/Function1;
  #179 = Utf8               filter$extension
  #180 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #181 = NameAndType        #179:#180     // filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #182 = Methodref          #142.#181     // scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #183 = Utf8               [Lscala/Tuple2;
  #184 = Class              #183          // "[Lscala/Tuple2;"
  #185 = Utf8               size$extension
  #186 = Utf8               (Ljava/lang/Object;)I
  #187 = NameAndType        #185:#186     // size$extension:(Ljava/lang/Object;)I
  #188 = Methodref          #142.#187     // scala/collection/ArrayOps$.size$extension:(Ljava/lang/Object;)I
  #189 = Utf8               $anonfun$macroRequireNonNull$2
  #190 = Utf8               ([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
  #191 = NameAndType        #189:#190     // $anonfun$macroRequireNonNull$2:([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
  #192 = Methodref          #2.#191       // org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$2:([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
  #193 = MethodHandle       6:#192        // REF_invokeStatic org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$2:([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
  #194 = Utf8               (Lscala/Tuple2;)Ljava/lang/String;
  #195 = MethodType         #194          //  (Lscala/Tuple2;)Ljava/lang/String;
  #196 = Utf8               ([Ljava/lang/String;)Lscala/Function1;
  #197 = NameAndType        #175:#196     // apply:([Ljava/lang/String;)Lscala/Function1;
  #198 = InvokeDynamic      #1:#197       // #1:apply:([Ljava/lang/String;)Lscala/Function1;
  #199 = Utf8               scala/reflect/ClassTag$
  #200 = Class              #199          // scala/reflect/ClassTag$
  #201 = Utf8               Lscala/reflect/ClassTag$;
  #202 = NameAndType        #37:#201      // MODULE$:Lscala/reflect/ClassTag$;
  #203 = Fieldref           #200.#202     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #204 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #205 = NameAndType        #175:#204     // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #206 = Methodref          #200.#205     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #207 = Utf8               map$extension
  #208 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #209 = NameAndType        #207:#208     // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #210 = Methodref          #142.#209     // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #211 = Utf8               [Ljava/lang/String;
  #212 = Class              #211          // "[Ljava/lang/String;"
  #213 = Utf8               org/scalactic/UnquotedString$
  #214 = Class              #213          // org/scalactic/UnquotedString$
  #215 = Utf8               Lorg/scalactic/UnquotedString$;
  #216 = NameAndType        #37:#215      // MODULE$:Lorg/scalactic/UnquotedString$;
  #217 = Fieldref           #214.#216     // org/scalactic/UnquotedString$.MODULE$:Lorg/scalactic/UnquotedString$;
  #218 = Utf8               (Ljava/lang/String;)Lorg/scalactic/UnquotedString;
  #219 = NameAndType        #175:#218     // apply:(Ljava/lang/String;)Lorg/scalactic/UnquotedString;
  #220 = Methodref          #214.#219     // org/scalactic/UnquotedString$.apply:(Ljava/lang/String;)Lorg/scalactic/UnquotedString;
  #221 = Utf8               wasNull
  #222 = Utf8               (Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
  #223 = NameAndType        #221:#222     // wasNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
  #224 = Methodref          #122.#223     // org/scalactic/FailureMessages$.wasNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
  #225 = Utf8               org/scalactic/Resources$
  #226 = Class              #225          // org/scalactic/Resources$
  #227 = Utf8               Lorg/scalactic/Resources$;
  #228 = NameAndType        #37:#227      // MODULE$:Lorg/scalactic/Resources$;
  #229 = Fieldref           #226.#228     // org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
  #230 = NameAndType        #50:#147      // head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #231 = Methodref          #142.#230     // scala/collection/ArrayOps$.head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #232 = Utf8               last$extension
  #233 = NameAndType        #232:#147     // last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #234 = Methodref          #142.#233     // scala/collection/ArrayOps$.last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #235 = Utf8               and
  #236 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #237 = NameAndType        #235:#236     // and:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #238 = Methodref          #226.#237     // org/scalactic/Resources$.and:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #239 = Utf8               wereNull
  #240 = NameAndType        #239:#222     // wereNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
  #241 = Methodref          #122.#240     // org/scalactic/FailureMessages$.wereNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
  #242 = Utf8               dropRight$extension
  #243 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #244 = NameAndType        #242:#243     // dropRight$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #245 = Methodref          #142.#244     // scala/collection/ArrayOps$.dropRight$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #246 = Utf8               wrapRefArray
  #247 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #248 = NameAndType        #246:#247     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #249 = Methodref          #42.#248      // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #250 = Utf8               comma
  #251 = NameAndType        #250:#26      // comma:()Ljava/lang/String;
  #252 = Methodref          #226.#251     // org/scalactic/Resources$.comma:()Ljava/lang/String;
  #253 = Utf8               mkString
  #254 = NameAndType        #253:#47      // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #255 = Methodref          #17.#254      // scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #256 = Utf8               commaAnd
  #257 = NameAndType        #256:#236     // commaAnd:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #258 = Methodref          #226.#257     // org/scalactic/Resources$.commaAnd:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
  #259 = Utf8               org/scalactic/exceptions/NullArgumentException
  #260 = Class              #259          // org/scalactic/exceptions/NullArgumentException
  #261 = Methodref          #260.#96      // org/scalactic/exceptions/NullArgumentException."<init>":(Ljava/lang/String;)V
  #262 = Utf8               combinedVariableNames
  #263 = Utf8               nullVariableNames
  #264 = Utf8               errorMessage
  #265 = Utf8               nullList
  #266 = Utf8               nullCount
  #267 = Utf8               I
  #268 = Utf8               Lorg/scalactic/Prettifier;
  #269 = Utf8               Lorg/scalactic/source/Position;
  #270 = Utf8               $anonfun$macroRequireNonNull$1
  #271 = Utf8               (Lscala/Tuple2;)Z
  #272 = Utf8               x0$1
  #273 = Utf8               scala/Tuple2
  #274 = Class              #273          // scala/Tuple2
  #275 = Utf8               _1
  #276 = Utf8               ()Ljava/lang/Object;
  #277 = NameAndType        #275:#276     // _1:()Ljava/lang/Object;
  #278 = Methodref          #274.#277     // scala/Tuple2._1:()Ljava/lang/Object;
  #279 = Utf8               scala/MatchError
  #280 = Class              #279          // scala/MatchError
  #281 = Utf8               (Ljava/lang/Object;)V
  #282 = NameAndType        #70:#281      // "<init>":(Ljava/lang/Object;)V
  #283 = Methodref          #280.#282     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #284 = Utf8               e
  #285 = Utf8               Lscala/Tuple2;
  #286 = Utf8               variableNames$1
  #287 = Utf8               x0$2
  #288 = Utf8               _2$mcI$sp
  #289 = Utf8               ()I
  #290 = NameAndType        #288:#289     // _2$mcI$sp:()I
  #291 = Methodref          #274.#290     // scala/Tuple2._2$mcI$sp:()I
  #292 = Utf8               idx
  #293 = Utf8               ()V
  #294 = NameAndType        #70:#293      // "<init>":()V
  #295 = Methodref          #4.#294       // java/lang/Object."<init>":()V
  #296 = NameAndType        #270:#271     // $anonfun$macroRequireNonNull$1:(Lscala/Tuple2;)Z
  #297 = Methodref          #2.#296       // org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$1:(Lscala/Tuple2;)Z
  #298 = Utf8               scala/runtime/BoxesRunTime
  #299 = Class              #298          // scala/runtime/BoxesRunTime
  #300 = Utf8               boxToBoolean
  #301 = Utf8               (Z)Ljava/lang/Boolean;
  #302 = NameAndType        #300:#301     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #303 = Methodref          #299.#302     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #304 = Utf8               $deserializeLambda$
  #305 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #306 = Utf8               scala/runtime/LambdaDeserialize
  #307 = Class              #306          // scala/runtime/LambdaDeserialize
  #308 = Utf8               bootstrap
  #309 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #310 = NameAndType        #308:#309     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #311 = Methodref          #307.#310     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #312 = MethodHandle       6:#311        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #313 = Utf8               lambdaDeserialize
  #314 = NameAndType        #313:#305     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #315 = InvokeDynamic      #2:#314       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #316 = Utf8               Code
  #317 = Utf8               StackMapTable
  #318 = Utf8               LineNumberTable
  #319 = Utf8               LocalVariableTable
  #320 = Utf8               MethodParameters
  #321 = Utf8               InnerClasses
  #322 = Utf8               SourceFile
  #323 = Utf8               BootstrapMethods
  #324 = Utf8               ScalaInlineInfo
  #325 = Utf8               Scala
{
  private java.lang.String append(java.lang.String, java.lang.Object);
    descriptor: (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=5, args_size=3
         0: aload_2
         1: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: astore_3
         5: aload_3
         6: invokevirtual #34                 // Method java/lang/String.isEmpty:()Z
         9: ifeq          16
        12: aload_1
        13: goto          124
        16: getstatic     #40                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        19: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        22: aload_3
        23: invokevirtual #49                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        26: invokevirtual #53                 // Method scala/collection/StringOps$.head$extension:(Ljava/lang/String;)C
        29: istore        4
        31: getstatic     #58                 // Field scala/runtime/RichChar$.MODULE$:Lscala/runtime/RichChar$;
        34: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        37: iload         4
        39: invokevirtual #62                 // Method scala/Predef$.charWrapper:(C)C
        42: invokevirtual #66                 // Method scala/runtime/RichChar$.isWhitespace$extension:(C)Z
        45: ifne          76
        48: iload         4
        50: bipush        46
        52: if_icmpeq     76
        55: iload         4
        57: bipush        44
        59: if_icmpeq     76
        62: iload         4
        64: bipush        59
        66: if_icmpeq     76
        69: aload_1
        70: invokevirtual #34                 // Method java/lang/String.isEmpty:()Z
        73: ifeq          99
        76: new           #68                 // class java/lang/StringBuilder
        79: dup
        80: ldc           #69                 // int 0
        82: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
        85: aload_1
        86: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        89: aload_3
        90: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        93: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        96: goto          124
        99: new           #68                 // class java/lang/StringBuilder
       102: dup
       103: ldc           #78                 // int 1
       105: invokespecial #73                 // Method java/lang/StringBuilder."<init>":(I)V
       108: aload_1
       109: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       112: ldc           #80                 // String
       114: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       117: aload_3
       118: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       121: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       124: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ class java/lang/String ]
        frame_type = 252 /* append */
          offset_delta = 59
          locals = [ int ]
        frame_type = 22 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 24
          locals = [ class org/scalactic/Requirements$RequirementsHelper, class java/lang/String, class java/lang/Object, class java/lang/String ]
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 449: 0
        line 450: 5
        line 451: 12
        line 453: 16
        line 454: 31
        line 455: 76
        line 457: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31      93     4 firstChar   C
            5     119     3 clueStr   Ljava/lang/String;
            0     125     0  this   Lorg/scalactic/Requirements$RequirementsHelper;
            0     125     1 currentMessage   Ljava/lang/String;
            0     125     2  clue   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      currentMessage                 final
      clue                           final

  public void macroRequire(org.scalactic.Bool, java.lang.Object);
    descriptor: (Lorg/scalactic/Bool;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_2
         1: ifnonnull     14
         4: new           #92                 // class java/lang/NullPointerException
         7: dup
         8: ldc           #94                 // String clue was null
        10: invokespecial #97                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: aload_1
        15: invokeinterface #102,  1          // InterfaceMethod org/scalactic/Bool.value:()Z
        20: ifne          80
        23: getstatic     #107                // Field org/scalactic/Bool$.MODULE$:Lorg/scalactic/Bool$;
        26: aload_1
        27: invokevirtual #111                // Method org/scalactic/Bool$.isSimpleWithoutExpressionText:(Lorg/scalactic/Bool;)Z
        30: ifeq          43
        33: aload_0
        34: ldc           #113                // String
        36: aload_2
        37: invokespecial #115                // Method append:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
        40: goto          54
        43: aload_0
        44: aload_1
        45: invokeinterface #118,  1          // InterfaceMethod org/scalactic/Bool.failureMessage:()Ljava/lang/String;
        50: aload_2
        51: invokespecial #115                // Method append:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
        54: astore_3
        55: new           #120                // class java/lang/IllegalArgumentException
        58: dup
        59: aload_3
        60: invokevirtual #34                 // Method java/lang/String.isEmpty:()Z
        63: ifeq          75
        66: getstatic     #125                // Field org/scalactic/FailureMessages$.MODULE$:Lorg/scalactic/FailureMessages$;
        69: invokevirtual #128                // Method org/scalactic/FailureMessages$.expressionWasFalse:()Ljava/lang/String;
        72: goto          76
        75: aload_3
        76: invokespecial #129                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        79: athrow
        80: return
      StackMapTable: number_of_entries = 6
        frame_type = 14 /* same */
        frame_type = 28 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class org/scalactic/Requirements$RequirementsHelper, class org/scalactic/Bool, class java/lang/Object, class java/lang/String ]
          stack = [ uninitialized 55, uninitialized 55 ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalactic/Requirements$RequirementsHelper, class org/scalactic/Bool, class java/lang/Object, class java/lang/String ]
          stack = [ uninitialized 55, uninitialized 55, class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 3
      LineNumberTable:
        line 468: 0
        line 469: 4
        line 470: 14
        line 471: 23
        line 472: 55
        line 470: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      25     3 failureMessage   Ljava/lang/String;
            0      81     0  this   Lorg/scalactic/Requirements$RequirementsHelper;
            0      81     1  bool   Lorg/scalactic/Bool;
            0      81     2  clue   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      bool                           final
      clue                           final

  public void macroRequireState(org.scalactic.Bool, java.lang.Object);
    descriptor: (Lorg/scalactic/Bool;Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=3
         0: aload_2
         1: ifnonnull     14
         4: new           #92                 // class java/lang/NullPointerException
         7: dup
         8: ldc           #94                 // String clue was null
        10: invokespecial #97                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
        13: athrow
        14: aload_1
        15: invokeinterface #102,  1          // InterfaceMethod org/scalactic/Bool.value:()Z
        20: ifne          80
        23: getstatic     #107                // Field org/scalactic/Bool$.MODULE$:Lorg/scalactic/Bool$;
        26: aload_1
        27: invokevirtual #111                // Method org/scalactic/Bool$.isSimpleWithoutExpressionText:(Lorg/scalactic/Bool;)Z
        30: ifeq          43
        33: aload_0
        34: ldc           #113                // String
        36: aload_2
        37: invokespecial #115                // Method append:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
        40: goto          54
        43: aload_0
        44: aload_1
        45: invokeinterface #118,  1          // InterfaceMethod org/scalactic/Bool.failureMessage:()Ljava/lang/String;
        50: aload_2
        51: invokespecial #115                // Method append:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
        54: astore_3
        55: new           #133                // class java/lang/IllegalStateException
        58: dup
        59: aload_3
        60: invokevirtual #34                 // Method java/lang/String.isEmpty:()Z
        63: ifeq          75
        66: getstatic     #125                // Field org/scalactic/FailureMessages$.MODULE$:Lorg/scalactic/FailureMessages$;
        69: invokevirtual #128                // Method org/scalactic/FailureMessages$.expressionWasFalse:()Ljava/lang/String;
        72: goto          76
        75: aload_3
        76: invokespecial #134                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
        79: athrow
        80: return
      StackMapTable: number_of_entries = 6
        frame_type = 14 /* same */
        frame_type = 28 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 20
          locals = [ class org/scalactic/Requirements$RequirementsHelper, class org/scalactic/Bool, class java/lang/Object, class java/lang/String ]
          stack = [ uninitialized 55, uninitialized 55 ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/scalactic/Requirements$RequirementsHelper, class org/scalactic/Bool, class java/lang/Object, class java/lang/String ]
          stack = [ uninitialized 55, uninitialized 55, class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 3
      LineNumberTable:
        line 483: 0
        line 484: 4
        line 485: 14
        line 486: 23
        line 487: 55
        line 485: 80
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           55      25     3 failureMessage   Ljava/lang/String;
            0      81     0  this   Lorg/scalactic/Requirements$RequirementsHelper;
            0      81     1  bool   Lorg/scalactic/Bool;
            0      81     2  clue   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      bool                           final
      clue                           final

  public void macroRequireNonNull(java.lang.String[], java.lang.Object[], org.scalactic.Prettifier, org.scalactic.source.Position);
    descriptor: ([Ljava/lang/String;[Ljava/lang/Object;Lorg/scalactic/Prettifier;Lorg/scalactic/source/Position;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=5
         0: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         3: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
         9: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        12: aload_2
        13: invokevirtual #149                // Method scala/Predef$.genericArrayOps:(Ljava/lang/Object;)Ljava/lang/Object;
        16: invokevirtual #153                // Method scala/collection/ArrayOps$.zipWithIndex$extension:(Ljava/lang/Object;)[Lscala/Tuple2;
        19: checkcast     #155                // class "[Ljava/lang/Object;"
        22: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        25: invokedynamic #178,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        30: invokevirtual #182                // Method scala/collection/ArrayOps$.filter$extension:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
        33: checkcast     #184                // class "[Lscala/Tuple2;"
        36: astore        5
        38: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        41: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        44: aload         5
        46: checkcast     #155                // class "[Ljava/lang/Object;"
        49: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        52: invokevirtual #188                // Method scala/collection/ArrayOps$.size$extension:(Ljava/lang/Object;)I
        55: istore        6
        57: iload         6
        59: iconst_0
        60: if_icmple     279
        63: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        66: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
        69: aload         5
        71: checkcast     #155                // class "[Ljava/lang/Object;"
        74: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        77: aload_1
        78: invokedynamic #198,  0            // InvokeDynamic #1:apply:([Ljava/lang/String;)Lscala/Function1;
        83: getstatic     #203                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        86: ldc           #30                 // class java/lang/String
        88: invokevirtual #206                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        91: invokevirtual #210                // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        94: checkcast     #212                // class "[Ljava/lang/String;"
        97: astore        7
        99: iload         6
       101: iconst_1
       102: if_icmpne     125
       105: getstatic     #125                // Field org/scalactic/FailureMessages$.MODULE$:Lorg/scalactic/FailureMessages$;
       108: aload_3
       109: getstatic     #217                // Field org/scalactic/UnquotedString$.MODULE$:Lorg/scalactic/UnquotedString$;
       112: aload         7
       114: iconst_0
       115: aaload
       116: invokevirtual #220                // Method org/scalactic/UnquotedString$.apply:(Ljava/lang/String;)Lorg/scalactic/UnquotedString;
       119: invokevirtual #224                // Method org/scalactic/FailureMessages$.wasNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
       122: goto          267
       125: iload         6
       127: iconst_2
       128: if_icmpne     191
       131: getstatic     #229                // Field org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
       134: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       137: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       140: aload         7
       142: checkcast     #155                // class "[Ljava/lang/Object;"
       145: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       148: invokevirtual #231                // Method scala/collection/ArrayOps$.head$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       151: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       154: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       157: aload         7
       159: checkcast     #155                // class "[Ljava/lang/Object;"
       162: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       165: invokevirtual #234                // Method scala/collection/ArrayOps$.last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       168: invokevirtual #238                // Method org/scalactic/Resources$.and:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
       171: astore        9
       173: getstatic     #125                // Field org/scalactic/FailureMessages$.MODULE$:Lorg/scalactic/FailureMessages$;
       176: aload_3
       177: getstatic     #217                // Field org/scalactic/UnquotedString$.MODULE$:Lorg/scalactic/UnquotedString$;
       180: aload         9
       182: invokevirtual #220                // Method org/scalactic/UnquotedString$.apply:(Ljava/lang/String;)Lorg/scalactic/UnquotedString;
       185: invokevirtual #241                // Method org/scalactic/FailureMessages$.wereNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
       188: goto          267
       191: getstatic     #229                // Field org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
       194: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       197: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       200: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       203: aload         7
       205: checkcast     #155                // class "[Ljava/lang/Object;"
       208: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       211: iconst_1
       212: invokevirtual #245                // Method scala/collection/ArrayOps$.dropRight$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       215: checkcast     #155                // class "[Ljava/lang/Object;"
       218: invokevirtual #249                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
       221: getstatic     #229                // Field org/scalactic/Resources$.MODULE$:Lorg/scalactic/Resources$;
       224: invokevirtual #252                // Method org/scalactic/Resources$.comma:()Ljava/lang/String;
       227: invokevirtual #255                // Method scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
       230: getstatic     #145                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       233: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       236: aload         7
       238: checkcast     #155                // class "[Ljava/lang/Object;"
       241: invokevirtual #159                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       244: invokevirtual #234                // Method scala/collection/ArrayOps$.last$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       247: invokevirtual #258                // Method org/scalactic/Resources$.commaAnd:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;
       250: astore        10
       252: getstatic     #125                // Field org/scalactic/FailureMessages$.MODULE$:Lorg/scalactic/FailureMessages$;
       255: aload_3
       256: getstatic     #217                // Field org/scalactic/UnquotedString$.MODULE$:Lorg/scalactic/UnquotedString$;
       259: aload         10
       261: invokevirtual #220                // Method org/scalactic/UnquotedString$.apply:(Ljava/lang/String;)Lorg/scalactic/UnquotedString;
       264: invokevirtual #241                // Method org/scalactic/FailureMessages$.wereNull:(Lorg/scalactic/Prettifier;Ljava/lang/Object;)Ljava/lang/String;
       267: astore        8
       269: new           #260                // class org/scalactic/exceptions/NullArgumentException
       272: dup
       273: aload         8
       275: invokespecial #261                // Method org/scalactic/exceptions/NullArgumentException."<init>":(Ljava/lang/String;)V
       278: athrow
       279: return
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 125
          locals = [ class "[Lscala/Tuple2;", int, class "[Ljava/lang/String;" ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 65
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 75
          stack = [ class java/lang/String ]
        frame_type = 250 /* chop */
          offset_delta = 11
      LineNumberTable:
        line 498: 0
        line 501: 38
        line 502: 57
        line 503: 63
        line 507: 99
        line 508: 105
        line 509: 125
        line 510: 131
        line 511: 173
        line 514: 191
        line 515: 252
        line 517: 269
        line 502: 279
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          173      15     9 combinedVariableNames   Ljava/lang/String;
          252      15    10 combinedVariableNames   Ljava/lang/String;
           99     180     7 nullVariableNames   [Ljava/lang/String;
          269      10     8 errorMessage   Ljava/lang/String;
           38     241     5 nullList   [Lscala/Tuple2;
           57     222     6 nullCount   I
            0     280     0  this   Lorg/scalactic/Requirements$RequirementsHelper;
            0     280     1 variableNames   [Ljava/lang/String;
            0     280     2 arguments   [Ljava/lang/Object;
            0     280     3 prettifier   Lorg/scalactic/Prettifier;
            0     280     4   pos   Lorg/scalactic/source/Position;
    MethodParameters:
      Name                           Flags
      variableNames                  final
      arguments                      final
      prettifier                     final
      pos                            final

  public static final boolean $anonfun$macroRequireNonNull$1(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=4, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: ifnull        24
         6: aload_2
         7: invokevirtual #278                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: astore_3
        11: aload_3
        12: ifnonnull     19
        15: iconst_1
        16: goto          20
        19: iconst_0
        20: istore_1
        21: goto          36
        24: goto          27
        27: new           #280                // class scala/MatchError
        30: dup
        31: aload_2
        32: invokespecial #283                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        35: athrow
        36: iload_1
        37: ireturn
      StackMapTable: number_of_entries = 5
        frame_type = 254 /* append */
          offset_delta = 19
          locals = [ top, class scala/Tuple2, class java/lang/Object ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/Tuple2, int, class scala/Tuple2, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 498: 0
        line 499: 11
        line 498: 24
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11      13     3     e   Ljava/lang/Object;
            0      38     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final java.lang.String $anonfun$macroRequireNonNull$2(java.lang.String[], scala.Tuple2);
    descriptor: ([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: ifnull        20
         6: aload_3
         7: invokevirtual #291                // Method scala/Tuple2._2$mcI$sp:()I
        10: istore        4
        12: aload_0
        13: iload         4
        15: aaload
        16: astore_2
        17: goto          32
        20: goto          23
        23: new           #280                // class scala/MatchError
        26: dup
        27: aload_3
        28: invokespecial #283                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        31: athrow
        32: aload_2
        33: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class "[Ljava/lang/String;", class scala/Tuple2, class java/lang/String, class scala/Tuple2, int ]
          stack = []
      LineNumberTable:
        line 503: 0
        line 504: 12
        line 503: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       8     4   idx   I
            0      34     0 variableNames$1   [Ljava/lang/String;
            0      34     1  x0$2   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      variableNames$1                final
      x0$2                           final

  public org.scalactic.Requirements$RequirementsHelper();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #295                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 446: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/scalactic/Requirements$RequirementsHelper;

  public static final java.lang.Object $anonfun$macroRequireNonNull$1$adapted(scala.Tuple2);
    descriptor: (Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #297                // Method $anonfun$macroRequireNonNull$1:(Lscala/Tuple2;)Z
         4: invokestatic  #303                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 498: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #315,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #12= #9 of #11;     // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #2 of #14;           // RequirementsHelper=class org/scalactic/Requirements$RequirementsHelper of class org/scalactic/Requirements
  public static final #20= #17 of #19;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
SourceFile: "Requirements.scala"
BootstrapMethods:
  0: #174 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #160 (Ljava/lang/Object;)Ljava/lang/Object;
      #165 REF_invokeStatic org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #166 (Lscala/Tuple2;)Ljava/lang/Object;
      #167 5
      #78 1
      #166 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #174 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #160 (Ljava/lang/Object;)Ljava/lang/Object;
      #193 REF_invokeStatic org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$2:([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
      #195 (Lscala/Tuple2;)Ljava/lang/String;
      #167 5
      #78 1
      #195 (Lscala/Tuple2;)Ljava/lang/String;
  2: #312 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #165 REF_invokeStatic org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$1$adapted:(Lscala/Tuple2;)Ljava/lang/Object;
      #193 REF_invokeStatic org/scalactic/Requirements$RequirementsHelper.$anonfun$macroRequireNonNull$2:([Ljava/lang/String;Lscala/Tuple2;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 00 00 08 01 0E 01 0F 01 00 A1 00 A2 01 00 BD
   00 BE 01 00 46 01 25 00 00 15 00 16 01 00 58 00
   59 00 00 87 00 88 00 00 83 00 59 00
  Scala: length = 0x0 (unknown attribute)

