Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/conversions/F32$.class
  Last modified May 29, 2022; size 1022 bytes
  SHA-256 checksum 93e29d7c4f117b9bc1069ed1c7e575d8ac9235635d8f7c49aacaf0f0ebedef92
  Compiled from "conversions.scala"
public final class org.sireum.conversions.F32$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/conversions/F32$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 3
Constant pool:
   #1 = Utf8               org/sireum/conversions/F32$
   #2 = Class              #1             // org/sireum/conversions/F32$
   #3 = Utf8               java/lang/Object
   #4 = Class              #3             // java/lang/Object
   #5 = Utf8               conversions.scala
   #6 = Utf8               MODULE$
   #7 = Utf8               Lorg/sireum/conversions/F32$;
   #8 = Utf8               <clinit>
   #9 = Utf8               ()V
  #10 = Utf8               <init>
  #11 = NameAndType        #10:#9         // "<init>":()V
  #12 = Methodref          #2.#11         // org/sireum/conversions/F32$."<init>":()V
  #13 = NameAndType        #6:#7          // MODULE$:Lorg/sireum/conversions/F32$;
  #14 = Fieldref           #2.#13         // org/sireum/conversions/F32$.MODULE$:Lorg/sireum/conversions/F32$;
  #15 = Utf8               toB
  #16 = Utf8               (F)Z
  #17 = Utf8               n
  #18 = Utf8               org/sireum/conversions/F32_Ext$
  #19 = Class              #18            // org/sireum/conversions/F32_Ext$
  #20 = Utf8               Lorg/sireum/conversions/F32_Ext$;
  #21 = NameAndType        #6:#20         // MODULE$:Lorg/sireum/conversions/F32_Ext$;
  #22 = Fieldref           #19.#21        // org/sireum/conversions/F32_Ext$.MODULE$:Lorg/sireum/conversions/F32_Ext$;
  #23 = NameAndType        #15:#16        // toB:(F)Z
  #24 = Methodref          #19.#23        // org/sireum/conversions/F32_Ext$.toB:(F)Z
  #25 = Utf8               this
  #26 = Utf8               F
  #27 = Utf8               toRawU32
  #28 = Utf8               (F)I
  #29 = NameAndType        #27:#28        // toRawU32:(F)I
  #30 = Methodref          #19.#29        // org/sireum/conversions/F32_Ext$.toRawU32:(F)I
  #31 = Utf8               toF32
  #32 = Utf8               (F)F
  #33 = NameAndType        #31:#32        // toF32:(F)F
  #34 = Methodref          #19.#33        // org/sireum/conversions/F32_Ext$.toF32:(F)F
  #35 = Utf8               toR
  #36 = Utf8               (F)Lscala/math/BigDecimal;
  #37 = NameAndType        #35:#36        // toR:(F)Lscala/math/BigDecimal;
  #38 = Methodref          #19.#37        // org/sireum/conversions/F32_Ext$.toR:(F)Lscala/math/BigDecimal;
  #39 = Methodref          #4.#11         // java/lang/Object."<init>":()V
  #40 = Utf8               Code
  #41 = Utf8               LineNumberTable
  #42 = Utf8               LocalVariableTable
  #43 = Utf8               MethodParameters
  #44 = Utf8               SourceFile
  #45 = Utf8               ScalaInlineInfo
  #46 = Utf8               Scala
{
  public static final org.sireum.conversions.F32$ MODULE$;
    descriptor: Lorg/sireum/conversions/F32$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/conversions/F32$
         3: dup
         4: invokespecial #12                 // Method "<init>":()V
         7: putstatic     #14                 // Field MODULE$:Lorg/sireum/conversions/F32$;
        10: return
      LineNumberTable:
        line 2456: 0

  public boolean toB(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #22                 // Field org/sireum/conversions/F32_Ext$.MODULE$:Lorg/sireum/conversions/F32_Ext$;
         3: fload_1
         4: invokevirtual #24                 // Method org/sireum/conversions/F32_Ext$.toB:(F)Z
         7: ireturn
      LineNumberTable:
        line 2458: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/F32$;
            0       8     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  public int toRawU32(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #22                 // Field org/sireum/conversions/F32_Ext$.MODULE$:Lorg/sireum/conversions/F32_Ext$;
         3: fload_1
         4: invokevirtual #30                 // Method org/sireum/conversions/F32_Ext$.toRawU32:(F)I
         7: ireturn
      LineNumberTable:
        line 2462: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/F32$;
            0       8     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  public float toF32(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #22                 // Field org/sireum/conversions/F32_Ext$.MODULE$:Lorg/sireum/conversions/F32_Ext$;
         3: fload_1
         4: invokevirtual #34                 // Method org/sireum/conversions/F32_Ext$.toF32:(F)F
         7: freturn
      LineNumberTable:
        line 2464: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/F32$;
            0       8     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.math.BigDecimal toR(float);
    descriptor: (F)Lscala/math/BigDecimal;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #22                 // Field org/sireum/conversions/F32_Ext$.MODULE$:Lorg/sireum/conversions/F32_Ext$;
         3: fload_1
         4: invokevirtual #38                 // Method org/sireum/conversions/F32_Ext$.toR:(F)Lscala/math/BigDecimal;
         7: areturn
      LineNumberTable:
        line 2467: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/sireum/conversions/F32$;
            0       8     1     n   F
    MethodParameters:
      Name                           Flags
      n                              final

  private org.sireum.conversions.F32$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #39                 // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 2456: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/conversions/F32$;
}
SourceFile: "conversions.scala"
  ScalaInlineInfo: length = 0x1D (unknown attribute)
   01 01 00 05 00 0A 00 09 01 00 0F 00 10 01 00 1F
   00 20 01 00 23 00 24 01 00 1B 00 1C 01
  Scala: length = 0x0 (unknown attribute)

