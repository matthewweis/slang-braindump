Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/argonaut/StringEscaping$.class
  Last modified May 29, 2022; size 3738 bytes
  SHA-256 checksum a4e9c79f8f0ce91cbdadd1cc83d4c9e8881332613d9e532cc16b4009f60041c3
  Compiled from "PrettyParams.scala"
public final class argonaut.StringEscaping$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // argonaut/StringEscaping$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 3, methods: 10, attributes: 5
Constant pool:
    #1 = Utf8               argonaut/StringEscaping$
    #2 = Class              #1            // argonaut/StringEscaping$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               PrettyParams.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               MODULE$
   #12 = Utf8               Largonaut/StringEscaping$;
   #13 = Utf8               isNormalChar
   #14 = Utf8               Lscala/Function1;
   #15 = Utf8               Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;
   #16 = Utf8               isNotNormalChar
   #17 = Utf8               <clinit>
   #18 = Utf8               ()V
   #19 = Utf8               <init>
   #20 = NameAndType        #19:#18       // "<init>":()V
   #21 = Methodref          #2.#20        // argonaut/StringEscaping$."<init>":()V
   #22 = NameAndType        #11:#12       // MODULE$:Largonaut/StringEscaping$;
   #23 = Fieldref           #2.#22        // argonaut/StringEscaping$.MODULE$:Largonaut/StringEscaping$;
   #24 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #25 = MethodType         #24           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #26 = Utf8               $anonfun$isNormalChar$1$adapted
   #27 = NameAndType        #26:#24       // $anonfun$isNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #28 = Methodref          #2.#27        // argonaut/StringEscaping$.$anonfun$isNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #29 = MethodHandle       6:#28         // REF_invokeStatic argonaut/StringEscaping$.$anonfun$isNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #30 = Integer            1
   #31 = Utf8               java/lang/invoke/LambdaMetafactory
   #32 = Class              #31           // java/lang/invoke/LambdaMetafactory
   #33 = Utf8               altMetafactory
   #34 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #35 = NameAndType        #33:#34       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #36 = Methodref          #32.#35       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #37 = MethodHandle       6:#36         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #38 = Utf8               apply
   #39 = Utf8               ()Lscala/Function1;
   #40 = NameAndType        #38:#39       // apply:()Lscala/Function1;
   #41 = InvokeDynamic      #0:#40        // #0:apply:()Lscala/Function1;
   #42 = NameAndType        #13:#14       // isNormalChar:Lscala/Function1;
   #43 = Fieldref           #2.#42        // argonaut/StringEscaping$.isNormalChar:Lscala/Function1;
   #44 = Utf8               $anonfun$isNotNormalChar$1$adapted
   #45 = NameAndType        #44:#24       // $anonfun$isNotNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #46 = Methodref          #2.#45        // argonaut/StringEscaping$.$anonfun$isNotNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #47 = MethodHandle       6:#46         // REF_invokeStatic argonaut/StringEscaping$.$anonfun$isNotNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
   #48 = InvokeDynamic      #1:#40        // #1:apply:()Lscala/Function1;
   #49 = NameAndType        #16:#14       // isNotNormalChar:Lscala/Function1;
   #50 = Fieldref           #2.#49        // argonaut/StringEscaping$.isNotNormalChar:Lscala/Function1;
   #51 = Utf8               escape
   #52 = Utf8               (C)Ljava/lang/String;
   #53 = Utf8               c
   #54 = Utf8               \\\\
   #55 = String             #54           // \\\\
   #56 = Utf8               \\\"
   #57 = String             #56           // \\\"
   #58 = Utf8               \\b
   #59 = String             #58           // \\b
   #60 = Utf8               \\f
   #61 = String             #60           // \\f
   #62 = Utf8               \\n
   #63 = String             #62           // \\n
   #64 = Utf8               \\r
   #65 = String             #64           // \\r
   #66 = Utf8               \\t
   #67 = String             #66           // \\t
   #68 = Utf8               java/lang/Character
   #69 = Class              #68           // java/lang/Character
   #70 = Utf8               isISOControl
   #71 = Utf8               (C)Z
   #72 = NameAndType        #70:#71       // isISOControl:(C)Z
   #73 = Methodref          #69.#72       // java/lang/Character.isISOControl:(C)Z
   #74 = Utf8               scala/collection/StringOps$
   #75 = Class              #74           // scala/collection/StringOps$
   #76 = Utf8               Lscala/collection/StringOps$;
   #77 = NameAndType        #11:#76       // MODULE$:Lscala/collection/StringOps$;
   #78 = Fieldref           #75.#77       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #79 = Utf8               scala/Predef$
   #80 = Class              #79           // scala/Predef$
   #81 = Utf8               Lscala/Predef$;
   #82 = NameAndType        #11:#81       // MODULE$:Lscala/Predef$;
   #83 = Fieldref           #80.#82       // scala/Predef$.MODULE$:Lscala/Predef$;
   #84 = Utf8               \\u%04x
   #85 = String             #84           // \\u%04x
   #86 = Utf8               augmentString
   #87 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #88 = NameAndType        #86:#87       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #89 = Methodref          #80.#88       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #90 = Utf8               scala/runtime/ScalaRunTime$
   #91 = Class              #90           // scala/runtime/ScalaRunTime$
   #92 = Utf8               Lscala/runtime/ScalaRunTime$;
   #93 = NameAndType        #11:#92       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #94 = Fieldref           #91.#93       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #95 = Utf8               scala/runtime/BoxesRunTime
   #96 = Class              #95           // scala/runtime/BoxesRunTime
   #97 = Utf8               boxToInteger
   #98 = Utf8               (I)Ljava/lang/Integer;
   #99 = NameAndType        #97:#98       // boxToInteger:(I)Ljava/lang/Integer;
  #100 = Methodref          #96.#99       // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #101 = Utf8               genericWrapArray
  #102 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #103 = NameAndType        #101:#102     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #104 = Methodref          #91.#103      // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #105 = Utf8               format$extension
  #106 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #107 = NameAndType        #105:#106     // format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #108 = Methodref          #75.#107      // scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #109 = Utf8               boxToCharacter
  #110 = Utf8               (C)Ljava/lang/Character;
  #111 = NameAndType        #109:#110     // boxToCharacter:(C)Ljava/lang/Character;
  #112 = Methodref          #96.#111      // scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
  #113 = Utf8               toString
  #114 = Utf8               ()Ljava/lang/String;
  #115 = NameAndType        #113:#114     // toString:()Ljava/lang/String;
  #116 = Methodref          #4.#115       // java/lang/Object.toString:()Ljava/lang/String;
  #117 = Utf8               this
  #118 = Utf8               C
  #119 = Utf8               java/lang/String
  #120 = Class              #119          // java/lang/String
  #121 = Utf8               ()Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;
  #122 = Utf8               $anonfun$isNormalChar$1
  #123 = Utf8               char
  #124 = Utf8               $anonfun$isNotNormalChar$1
  #125 = NameAndType        #13:#39       // isNormalChar:()Lscala/Function1;
  #126 = Methodref          #2.#125       // argonaut/StringEscaping$.isNormalChar:()Lscala/Function1;
  #127 = Utf8               scala/Function1
  #128 = Class              #127          // scala/Function1
  #129 = NameAndType        #38:#24       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #130 = InterfaceMethodref #128.#129     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #131 = Utf8               unboxToBoolean
  #132 = Utf8               (Ljava/lang/Object;)Z
  #133 = NameAndType        #131:#132     // unboxToBoolean:(Ljava/lang/Object;)Z
  #134 = Methodref          #96.#133      // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #135 = Methodref          #4.#20        // java/lang/Object."<init>":()V
  #136 = Utf8               unboxToChar
  #137 = Utf8               (Ljava/lang/Object;)C
  #138 = NameAndType        #136:#137     // unboxToChar:(Ljava/lang/Object;)C
  #139 = Methodref          #96.#138      // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #140 = NameAndType        #122:#71      // $anonfun$isNormalChar$1:(C)Z
  #141 = Methodref          #2.#140       // argonaut/StringEscaping$.$anonfun$isNormalChar$1:(C)Z
  #142 = Utf8               boxToBoolean
  #143 = Utf8               (Z)Ljava/lang/Boolean;
  #144 = NameAndType        #142:#143     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #145 = Methodref          #96.#144      // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #146 = Utf8               Ljava/lang/Object;
  #147 = NameAndType        #124:#71      // $anonfun$isNotNormalChar$1:(C)Z
  #148 = Methodref          #2.#147       // argonaut/StringEscaping$.$anonfun$isNotNormalChar$1:(C)Z
  #149 = Utf8               $deserializeLambda$
  #150 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #151 = Utf8               scala/runtime/LambdaDeserialize
  #152 = Class              #151          // scala/runtime/LambdaDeserialize
  #153 = Utf8               bootstrap
  #154 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #155 = NameAndType        #153:#154     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #156 = Methodref          #152.#155     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #157 = MethodHandle       6:#156        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #158 = Utf8               lambdaDeserialize
  #159 = NameAndType        #158:#150     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #160 = InvokeDynamic      #2:#159       // #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #161 = Utf8               Signature
  #162 = Utf8               Code
  #163 = Utf8               LineNumberTable
  #164 = Utf8               StackMapTable
  #165 = Utf8               LocalVariableTable
  #166 = Utf8               MethodParameters
  #167 = Utf8               InnerClasses
  #168 = Utf8               SourceFile
  #169 = Utf8               BootstrapMethods
  #170 = Utf8               ScalaInlineInfo
  #171 = Utf8               Scala
{
  public static final argonaut.StringEscaping$ MODULE$;
    descriptor: Largonaut/StringEscaping$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.Function1<java.lang.Object, java.lang.Object> isNormalChar;
    descriptor: Lscala/Function1;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #15                          // Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;

  private static final scala.Function1<java.lang.Object, java.lang.Object> isNotNormalChar;
    descriptor: Lscala/Function1;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #15                          // Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class argonaut/StringEscaping$
         3: dup
         4: invokespecial #21                 // Method "<init>":()V
         7: putstatic     #23                 // Field MODULE$:Largonaut/StringEscaping$;
        10: invokedynamic #41,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        15: putstatic     #43                 // Field isNormalChar:Lscala/Function1;
        18: invokedynamic #48,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
        23: putstatic     #50                 // Field isNotNormalChar:Lscala/Function1;
        26: return
      LineNumberTable:
        line 189: 0
        line 200: 10
        line 210: 18
        line 189: 26

  public final java.lang.String escape(char);
    descriptor: (C)Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=7, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: lookupswitch  { // 7
                       8: 78
                       9: 98
                      10: 88
                      12: 83
                      13: 93
                      34: 73
                      92: 68
                 default: 103
            }
        68: ldc           #55                 // String \\\\
        70: goto          154
        73: ldc           #57                 // String \\\"
        75: goto          154
        78: ldc           #59                 // String \\b
        80: goto          154
        83: ldc           #61                 // String \\f
        85: goto          154
        88: ldc           #63                 // String \\n
        90: goto          154
        93: ldc           #65                 // String \\r
        95: goto          154
        98: ldc           #67                 // String \\t
       100: goto          154
       103: iload_2
       104: invokestatic  #73                 // Method java/lang/Character.isISOControl:(C)Z
       107: ifeq          144
       110: getstatic     #78                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       113: getstatic     #83                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       116: ldc           #85                 // String \\u%04x
       118: invokevirtual #89                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       121: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       124: iconst_1
       125: anewarray     #4                  // class java/lang/Object
       128: dup
       129: iconst_0
       130: iload_2
       131: invokestatic  #100                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       134: aastore
       135: invokevirtual #104                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
       138: invokevirtual #108                // Method scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
       141: goto          151
       144: iload_2
       145: invokestatic  #112                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
       148: invokevirtual #116                // Method java/lang/Object.toString:()Ljava/lang/String;
       151: goto          154
       154: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 252 /* append */
          offset_delta = 68
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 40 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 190: 0
        line 191: 68
        line 192: 73
        line 193: 78
        line 194: 83
        line 195: 88
        line 196: 93
        line 197: 98
        line 198: 103
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     155     0  this   Largonaut/StringEscaping$;
            0     155     1     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  public final scala.Function1<java.lang.Object, java.lang.Object> isNormalChar();
    descriptor: ()Lscala/Function1;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #43                 // Field isNormalChar:Lscala/Function1;
         3: areturn
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/StringEscaping$;
    Signature: #121                         // ()Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;

  public final scala.Function1<java.lang.Object, java.lang.Object> isNotNormalChar();
    descriptor: ()Lscala/Function1;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #50                 // Field isNotNormalChar:Lscala/Function1;
         3: areturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Largonaut/StringEscaping$;
    Signature: #121                         // ()Lscala/Function1<Ljava/lang/Object;Ljava/lang/Object;>;

  public static final boolean $anonfun$isNormalChar$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=1
         0: iload_0
         1: istore_1
         2: iload_1
         3: lookupswitch  { // 7
                       8: 76
                       9: 92
                      10: 84
                      12: 80
                      13: 88
                      34: 72
                      92: 68
                 default: 96
            }
        68: iconst_0
        69: goto          111
        72: iconst_0
        73: goto          111
        76: iconst_0
        77: goto          111
        80: iconst_0
        81: goto          111
        84: iconst_0
        85: goto          111
        88: iconst_0
        89: goto          111
        92: iconst_0
        93: goto          111
        96: iload_1
        97: invokestatic  #73                 // Method java/lang/Character.isISOControl:(C)Z
       100: ifne          107
       103: iconst_1
       104: goto          108
       107: iconst_0
       108: goto          111
       111: ireturn
      StackMapTable: number_of_entries = 11
        frame_type = 252 /* append */
          offset_delta = 68
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 3 /* same */
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 200: 0
        line 201: 68
        line 202: 72
        line 203: 76
        line 204: 80
        line 205: 84
        line 206: 88
        line 207: 92
        line 208: 96
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     112     0  char   C
    MethodParameters:
      Name                           Flags
      char                           final

  public static final boolean $anonfun$isNotNormalChar$1(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #23                 // Field MODULE$:Largonaut/StringEscaping$;
         3: invokevirtual #126                // Method isNormalChar:()Lscala/Function1;
         6: iload_0
         7: invokestatic  #112                // Method scala/runtime/BoxesRunTime.boxToCharacter:(C)Ljava/lang/Character;
        10: invokeinterface #130,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        15: invokestatic  #134                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        18: ifne          25
        21: iconst_1
        22: goto          26
        25: iconst_0
        26: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 25 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  char   C
    MethodParameters:
      Name                           Flags
      char                           final

  private argonaut.StringEscaping$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #135                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 213: 0
        line 189: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Largonaut/StringEscaping$;

  public static final java.lang.Object $anonfun$isNormalChar$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #139                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #141                // Method $anonfun$isNormalChar$1:(C)Z
         7: invokestatic  #145                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  char   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      char                           final

  public static final java.lang.Object $anonfun$isNotNormalChar$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #139                // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #148                // Method $anonfun$isNotNormalChar$1:(C)Z
         7: invokestatic  #145                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  char   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      char                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #160,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "PrettyParams.scala"
BootstrapMethods:
  0: #37 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 (Ljava/lang/Object;)Ljava/lang/Object;
      #29 REF_invokeStatic argonaut/StringEscaping$.$anonfun$isNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #25 (Ljava/lang/Object;)Ljava/lang/Object;
      #30 1
  1: #37 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #25 (Ljava/lang/Object;)Ljava/lang/Object;
      #47 REF_invokeStatic argonaut/StringEscaping$.$anonfun$isNotNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #25 (Ljava/lang/Object;)Ljava/lang/Object;
      #30 1
  2: #157 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #29 REF_invokeStatic argonaut/StringEscaping$.$anonfun$isNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #47 REF_invokeStatic argonaut/StringEscaping$.$anonfun$isNotNormalChar$1$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x2C (unknown attribute)
   01 01 00 08 00 7A 00 47 01 00 1A 00 18 01 00 7C
   00 47 01 00 2C 00 18 01 00 13 00 12 01 00 33 00
   34 01 00 0D 00 27 01 00 10 00 27 01
  Scala: length = 0x0 (unknown attribute)

