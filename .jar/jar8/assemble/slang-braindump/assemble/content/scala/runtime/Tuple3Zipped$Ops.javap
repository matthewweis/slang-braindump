Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/runtime/Tuple3Zipped$Ops.class
  Last modified May 29, 2022; size 3345 bytes
  SHA-256 checksum d98e96e33fcdf9d480edffdafc1bb4a21546bf2c8b885e4076e369017b004217
  Compiled from "Tuple3Zipped.scala"
public final class scala.runtime.Tuple3Zipped$Ops<T1 extends java.lang.Object, T2 extends java.lang.Object, T3 extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/runtime/Tuple3Zipped$Ops
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 6, attributes: 5
Constant pool:
    #1 = Utf8               scala/runtime/Tuple3Zipped$Ops
    #2 = Class              #1            // scala/runtime/Tuple3Zipped$Ops
    #3 = Utf8               <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;>Ljava/lang/Object;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               Tuple3Zipped.scala
    #7 = Utf8               scala/runtime/Tuple3Zipped
    #8 = Class              #7            // scala/runtime/Tuple3Zipped
    #9 = Utf8               Ops
   #10 = Utf8               scala/runtime/Tuple3Zipped$Ops$
   #11 = Class              #10           // scala/runtime/Tuple3Zipped$Ops$
   #12 = Utf8               Ops$
   #13 = Utf8               scala$runtime$Tuple3Zipped$Ops$$x
   #14 = Utf8               Lscala/Tuple3;
   #15 = Utf8               Lscala/Tuple3<TT1;TT2;TT3;>;
   #16 = Utf8               ()Lscala/Tuple3;
   #17 = Utf8               ()Lscala/Tuple3<TT1;TT2;TT3;>;
   #18 = NameAndType        #13:#14       // scala$runtime$Tuple3Zipped$Ops$$x:Lscala/Tuple3;
   #19 = Fieldref           #2.#18        // scala/runtime/Tuple3Zipped$Ops.scala$runtime$Tuple3Zipped$Ops$$x:Lscala/Tuple3;
   #20 = Utf8               this
   #21 = Utf8               Lscala/runtime/Tuple3Zipped$Ops;
   #22 = Utf8               invert
   #23 = Utf8               (Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/collection/BuildFrom;)Ljava/lang/Object;
   #24 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<Ljava/lang/Object;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<Ljava/lang/Object;>;El3:Ljava/lang/Object;It3::Lscala/collection/Iterable<Ljava/lang/Object;>;That:Ljava/lang/Object;>(Lscala/$less$colon$less<TT1;TIt1;>;Lscala/$less$colon$less<TT2;TIt2;>;Lscala/$less$colon$less<TT3;TIt3;>;Lscala/collection/BuildFrom<TT1;Lscala/Tuple3<TEl1;TEl2;TEl3;>;TThat;>;)TThat;
   #25 = Utf8               w1
   #26 = Utf8               w2
   #27 = Utf8               w3
   #28 = Utf8               bf
   #29 = Utf8               MODULE$
   #30 = Utf8               Lscala/runtime/Tuple3Zipped$Ops$;
   #31 = NameAndType        #29:#30       // MODULE$:Lscala/runtime/Tuple3Zipped$Ops$;
   #32 = Fieldref           #11.#31       // scala/runtime/Tuple3Zipped$Ops$.MODULE$:Lscala/runtime/Tuple3Zipped$Ops$;
   #33 = NameAndType        #13:#16       // scala$runtime$Tuple3Zipped$Ops$$x:()Lscala/Tuple3;
   #34 = Methodref          #2.#33        // scala/runtime/Tuple3Zipped$Ops.scala$runtime$Tuple3Zipped$Ops$$x:()Lscala/Tuple3;
   #35 = Utf8               invert$extension
   #36 = Utf8               (Lscala/Tuple3;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/collection/BuildFrom;)Ljava/lang/Object;
   #37 = NameAndType        #35:#36       // invert$extension:(Lscala/Tuple3;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/collection/BuildFrom;)Ljava/lang/Object;
   #38 = Methodref          #11.#37       // scala/runtime/Tuple3Zipped$Ops$.invert$extension:(Lscala/Tuple3;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/collection/BuildFrom;)Ljava/lang/Object;
   #39 = Utf8               Lscala/$less$colon$less;
   #40 = Utf8               Lscala/collection/BuildFrom;
   #41 = Utf8               zipped
   #42 = Utf8               (Lscala/Function1;Lscala/Function1;Lscala/Function1;)Lscala/Tuple3;
   #43 = Utf8               <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;El3:Ljava/lang/Object;It3::Lscala/collection/Iterable<TEl3;>;>(Lscala/Function1<TT1;TIt1;>;Lscala/Function1<TT2;TIt2;>;Lscala/Function1<TT3;TIt3;>;)Lscala/Tuple3<TIt1;TIt2;TIt3;>;
   #44 = Utf8               scala/Tuple3
   #45 = Class              #44           // scala/Tuple3
   #46 = Utf8               _1
   #47 = Utf8               ()Ljava/lang/Object;
   #48 = NameAndType        #46:#47       // _1:()Ljava/lang/Object;
   #49 = Methodref          #45.#48       // scala/Tuple3._1:()Ljava/lang/Object;
   #50 = Utf8               scala/Function1
   #51 = Class              #50           // scala/Function1
   #52 = Utf8               apply
   #53 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #54 = NameAndType        #52:#53       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #55 = InterfaceMethodref #51.#54       // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
   #56 = Utf8               _2
   #57 = NameAndType        #56:#47       // _2:()Ljava/lang/Object;
   #58 = Methodref          #45.#57       // scala/Tuple3._2:()Ljava/lang/Object;
   #59 = Utf8               _3
   #60 = NameAndType        #59:#47       // _3:()Ljava/lang/Object;
   #61 = Methodref          #45.#60       // scala/Tuple3._3:()Ljava/lang/Object;
   #62 = Utf8               <init>
   #63 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #64 = NameAndType        #62:#63       // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #65 = Methodref          #45.#64       // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #66 = Utf8               Lscala/Function1;
   #67 = Utf8               zipped$extension_$this
   #68 = Utf8               hashCode
   #69 = Utf8               ()I
   #70 = Utf8               scala/util/hashing/MurmurHash3$
   #71 = Class              #70           // scala/util/hashing/MurmurHash3$
   #72 = Utf8               Lscala/util/hashing/MurmurHash3$;
   #73 = NameAndType        #29:#72       // MODULE$:Lscala/util/hashing/MurmurHash3$;
   #74 = Fieldref           #71.#73       // scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
   #75 = Utf8               productHash
   #76 = Utf8               (Lscala/Product;)I
   #77 = NameAndType        #75:#76       // productHash:(Lscala/Product;)I
   #78 = Methodref          #71.#77       // scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
   #79 = Utf8               hashCode$extension_$this
   #80 = Utf8               equals
   #81 = Utf8               (Ljava/lang/Object;)Z
   #82 = Utf8               x$1
   #83 = Utf8               equals$extension
   #84 = Utf8               (Lscala/Tuple3;Ljava/lang/Object;)Z
   #85 = NameAndType        #83:#84       // equals$extension:(Lscala/Tuple3;Ljava/lang/Object;)Z
   #86 = Methodref          #11.#85       // scala/runtime/Tuple3Zipped$Ops$.equals$extension:(Lscala/Tuple3;Ljava/lang/Object;)Z
   #87 = Utf8               Ljava/lang/Object;
   #88 = Utf8               (Lscala/Tuple3;)V
   #89 = Utf8               (Lscala/Tuple3<TT1;TT2;TT3;>;)V
   #90 = Utf8               x
   #91 = Utf8               ()V
   #92 = NameAndType        #62:#91       // "<init>":()V
   #93 = Methodref          #5.#92        // java/lang/Object."<init>":()V
   #94 = Utf8               Signature
   #95 = Utf8               Code
   #96 = Utf8               LineNumberTable
   #97 = Utf8               LocalVariableTable
   #98 = Utf8               Deprecated
   #99 = Utf8               MethodParameters
  #100 = Utf8               StackMapTable
  #101 = Utf8               InnerClasses
  #102 = Utf8               SourceFile
  #103 = Utf8               ScalaInlineInfo
  #104 = Utf8               Scala
{
  private final scala.Tuple3<T1, T2, T3> scala$runtime$Tuple3Zipped$Ops$$x;
    descriptor: Lscala/Tuple3;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // Lscala/Tuple3<TT1;TT2;TT3;>;

  public scala.Tuple3<T1, T2, T3> scala$runtime$Tuple3Zipped$Ops$$x();
    descriptor: ()Lscala/Tuple3;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #19                 // Field scala$runtime$Tuple3Zipped$Ops$$x:Lscala/Tuple3;
         4: areturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/runtime/Tuple3Zipped$Ops;
    Signature: #17                          // ()Lscala/Tuple3<TT1;TT2;TT3;>;

  public <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<java.lang.Object>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<java.lang.Object>, El3 extends java.lang.Object, It3 extends scala.collection.Iterable<java.lang.Object>, That extends java.lang.Object> That invert(scala.$less$colon$less<T1, It1>, scala.$less$colon$less<T2, It2>, scala.$less$colon$less<T3, It3>, scala.collection.BuildFrom<T1, scala.Tuple3<El1, El2, El3>, That>);
    descriptor: (Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/collection/BuildFrom;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=5
         0: getstatic     #32                 // Field scala/runtime/Tuple3Zipped$Ops$.MODULE$:Lscala/runtime/Tuple3Zipped$Ops$;
         3: aload_0
         4: invokevirtual #34                 // Method scala$runtime$Tuple3Zipped$Ops$$x:()Lscala/Tuple3;
         7: aload_1
         8: aload_2
         9: aload_3
        10: aload         4
        12: invokevirtual #38                 // Method scala/runtime/Tuple3Zipped$Ops$.invert$extension:(Lscala/Tuple3;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/$less$colon$less;Lscala/collection/BuildFrom;)Ljava/lang/Object;
        15: areturn
      LineNumberTable:
        line 138: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lscala/runtime/Tuple3Zipped$Ops;
            0      16     1    w1   Lscala/$less$colon$less;
            0      16     2    w2   Lscala/$less$colon$less;
            0      16     3    w3   Lscala/$less$colon$less;
            0      16     4    bf   Lscala/collection/BuildFrom;
    Signature: #24                          // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<Ljava/lang/Object;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<Ljava/lang/Object;>;El3:Ljava/lang/Object;It3::Lscala/collection/Iterable<Ljava/lang/Object;>;That:Ljava/lang/Object;>(Lscala/$less$colon$less<TT1;TIt1;>;Lscala/$less$colon$less<TT2;TIt2;>;Lscala/$less$colon$less<TT3;TIt3;>;Lscala/collection/BuildFrom<TT1;Lscala/Tuple3<TEl1;TEl2;TEl3;>;TThat;>;)TThat;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      w1                             final
      w2                             final
      w3                             final
      bf                             final

  public <El1 extends java.lang.Object, It1 extends scala.collection.Iterable<El1>, El2 extends java.lang.Object, It2 extends scala.collection.Iterable<El2>, El3 extends java.lang.Object, It3 extends scala.collection.Iterable<El3>> scala.Tuple3<It1, It2, It3> zipped(scala.Function1<T1, It1>, scala.Function1<T2, It2>, scala.Function1<T3, It3>);
    descriptor: (Lscala/Function1;Lscala/Function1;Lscala/Function1;)Lscala/Tuple3;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=4
         0: getstatic     #32                 // Field scala/runtime/Tuple3Zipped$Ops$.MODULE$:Lscala/runtime/Tuple3Zipped$Ops$;
         3: pop
         4: aload_0
         5: invokevirtual #34                 // Method scala$runtime$Tuple3Zipped$Ops$$x:()Lscala/Tuple3;
         8: astore        4
        10: new           #45                 // class scala/Tuple3
        13: dup
        14: aload_1
        15: aload         4
        17: invokevirtual #49                 // Method scala/Tuple3._1:()Ljava/lang/Object;
        20: invokeinterface #55,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        25: aload_2
        26: aload         4
        28: invokevirtual #58                 // Method scala/Tuple3._2:()Ljava/lang/Object;
        31: invokeinterface #55,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        36: aload_3
        37: aload         4
        39: invokevirtual #61                 // Method scala/Tuple3._3:()Ljava/lang/Object;
        42: invokeinterface #55,  2           // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        47: invokespecial #65                 // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        50: areturn
      LineNumberTable:
        line 154: 0
        line 154: 10
        line 154: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lscala/runtime/Tuple3Zipped$Ops;
            0      51     1    w1   Lscala/Function1;
            0      51     2    w2   Lscala/Function1;
            0      51     3    w3   Lscala/Function1;
           10      40     4 zipped$extension_$this   Lscala/Tuple3;
    Signature: #43                          // <El1:Ljava/lang/Object;It1::Lscala/collection/Iterable<TEl1;>;El2:Ljava/lang/Object;It2::Lscala/collection/Iterable<TEl2;>;El3:Ljava/lang/Object;It3::Lscala/collection/Iterable<TEl3;>;>(Lscala/Function1<TT1;TIt1;>;Lscala/Function1<TT2;TIt2;>;Lscala/Function1<TT3;TIt3;>;)Lscala/Tuple3<TIt1;TIt2;TIt3;>;
    Deprecated: true
    MethodParameters:
      Name                           Flags
      w1                             final
      w2                             final
      w3                             final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: getstatic     #32                 // Field scala/runtime/Tuple3Zipped$Ops$.MODULE$:Lscala/runtime/Tuple3Zipped$Ops$;
         3: pop
         4: aload_0
         5: invokevirtual #34                 // Method scala$runtime$Tuple3Zipped$Ops$$x:()Lscala/Tuple3;
         8: astore_1
         9: aload_1
        10: ifnonnull     15
        13: aconst_null
        14: athrow
        15: getstatic     #74                 // Field scala/util/hashing/MurmurHash3$.MODULE$:Lscala/util/hashing/MurmurHash3$;
        18: aload_1
        19: invokevirtual #78                 // Method scala/util/hashing/MurmurHash3$.productHash:(Lscala/Product;)I
        22: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 15
          locals = [ class scala/Tuple3 ]
      LineNumberTable:
        line 131: 0
        line 131: 9
        line 131: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lscala/runtime/Tuple3Zipped$Ops;
            9      13     1 hashCode$extension_$this   Lscala/Tuple3;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #32                 // Field scala/runtime/Tuple3Zipped$Ops$.MODULE$:Lscala/runtime/Tuple3Zipped$Ops$;
         3: aload_0
         4: invokevirtual #34                 // Method scala$runtime$Tuple3Zipped$Ops$$x:()Lscala/Tuple3;
         7: aload_1
         8: invokevirtual #86                 // Method scala/runtime/Tuple3Zipped$Ops$.equals$extension:(Lscala/Tuple3;Ljava/lang/Object;)Z
        11: ireturn
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/runtime/Tuple3Zipped$Ops;
            0      12     1   x$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.runtime.Tuple3Zipped$Ops(scala.Tuple3<T1, T2, T3>);
    descriptor: (Lscala/Tuple3;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #19                 // Field scala$runtime$Tuple3Zipped$Ops$$x:Lscala/Tuple3;
         5: aload_0
         6: invokespecial #93                 // Method java/lang/Object."<init>":()V
         9: return
      LineNumberTable:
        line 131: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/runtime/Tuple3Zipped$Ops;
            0      10     1     x   Lscala/Tuple3;
    Signature: #89                          // (Lscala/Tuple3<TT1;TT2;TT3;>;)V
    MethodParameters:
      Name                           Flags
      x                              final
}
InnerClasses:
  public static final #9= #2 of #8;       // Ops=class scala/runtime/Tuple3Zipped$Ops of class scala/runtime/Tuple3Zipped
  public static #12= #11 of #8;           // Ops$=class scala/runtime/Tuple3Zipped$Ops$ of class scala/runtime/Tuple3Zipped
Signature: #3                           // <T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "Tuple3Zipped.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 3E 00 58 01 00 50 00 51 01 00 44
   00 45 01 00 16 00 17 01 00 0D 00 10 01 00 29 00
   2A 01
  Scala: length = 0x0 (unknown attribute)

