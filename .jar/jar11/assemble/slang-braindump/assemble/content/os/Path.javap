Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/Path.class
  Last modified May 29, 2022; size 12620 bytes
  SHA-256 checksum b40a123d32424dd84edeefce38d4128c3a5753367a28a8dca3a594312edbb828
  Compiled from "Path.scala"
public class os.Path implements os.FilePath,os.ReadablePath,os.BasePathImpl
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/Path
  super_class: #4                         // java/lang/Object
  interfaces: 3, fields: 1, methods: 40, attributes: 6
Constant pool:
    #1 = Utf8               os/Path
    #2 = Class              #1            // os/Path
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               os/FilePath
    #6 = Class              #5            // os/FilePath
    #7 = Utf8               os/ReadablePath
    #8 = Class              #7            // os/ReadablePath
    #9 = Utf8               os/BasePathImpl
   #10 = Class              #9            // os/BasePathImpl
   #11 = Utf8               Path.scala
   #12 = Utf8               Lscala/reflect/ScalaSignature;
   #13 = Utf8               bytes
   #14 = Utf8               \u0006\u0005\u0005\u0005x!B\u0010!\u0011\u0003\u0019c!B\u0013!\u0011\u00031\u0003\"B\u0017\u0002\t\u0003q\u0003\"B\u0018\u0002\t\u0003\u0001\u0004bBA6\u0003\u0011\u0005\u0011Q\u000e\u0005\n\u0003#\u000b\u0011\u0013!C\u0001\u0003\'CaaL\u0001\u0005\u0002\u00055\u0006BB\u0018\u0002\t\u0003\t\u0019\rC\u0005\u0002V\u0006\u0011\r\u0011b\u0001\u0002X\"A\u0011q\\\u0001!\u0002\u0013\tIN\u0002\u0003&A\u00019\u0004\u0002C!\u000b\u0005\u000b\u0007I\u0011\u0001\"\t\u00111S!\u0011!Q\u0001\n\rCa!\f\u0006\u0005\u0002\u0001j\u0005\"B(\u000b\t\u0003\u0001\u0006\"\u0002+\u000b\t\u0003)\u0006\"\u00026\u000b\t\u0003Y\u0007\"B9\u000b\t\u0003\u0011X\u0001B:\u000b\u0001YBQ\u0001\u001e\u0006\u0005\u0002UDQA \u0006\u0005\u0002}Dq!a\u0004\u000b\t\u0003\n\t\u0002C\u0004\u0002\u0014)!\t%!\u0006\t\u000f\u0005\u001d\"\u0002\"\u0011\u0002*!9\u00111\u0006\u0006\u0005\u0002\u00055\u0002bBA\u001a\u0015\u0011\u0005\u0011Q\u0007\u0005\b\u0003\u007fQA\u0011AA!\u0011\u001d\t)E\u0003C\u0001\u0003\u000fBa!!\u0016\u000b\t\u0003\u0011\u0005bBA,\u0015\u0011\u0005\u0011\u0011\f\u0005\b\u0003;RA\u0011AA0\u0003\u0011\u0001\u0016\r\u001e5\u000b\u0003\u0005\n!a\\:\u0004\u0001A\u0011A%A\u0007\u0002A\t!\u0001+\u0019;i\'\t\tq\u0005\u0005\u0002)W5\t\u0011FC\u0001+\u0003\u0015\u00198-\u00197b\u0013\ta\u0013F\u0001\u0004B]f\u0014VMZ\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\r\nQ!\u00199qYf$B!MA4iA\u0011!G\u0005\b\u0003gQb\u0001\u0001C\u00036\u0007\u0001\u0007a\'\u0001\u0003cCN,\u0007C\u0001\u0013\u000b\'\u0015Qq\u0005O\u001e?!\t!\u0013(\u0003\u0002;A\tAa)\u001b7f!\u0006$\b\u000e\u0005\u0002%y%\u0011Q\b\t\u0002\r%\u0016\fG-\u00192mKB\u000bG\u000f\u001b\t\u0003I}J!\u0001\u0011\u0011\u0003\u0019\t\u000b7/\u001a)bi\"LU\u000e\u001d7\u0002\u000f]\u0014\u0018\r\u001d9fIV\t1\t\u0005\u0002E\u00176\tQI\u0003\u0002G\u000f\u0006!a-\u001b7f\u0015\tA\u0015*A\u0002oS>T\u0011AS\u0001\u0005U\u00064\u0018-\u0003\u0002&\u000b\u0006AqO]1qa\u0016$\u0007\u0005\u0006\u00027\u001d\")\u0011)\u0004a\u0001\u0007\u0006AAo\\*pkJ\u001cW-F\u0001R!\t!#+\u0003\u0002TA\tq1+Z3lC\ndWmU8ve\u000e,\u0017\u0001C:fO6,g\u000e^:\u0016\u0003Y\u00032aV0c\u001d\tAVL\u0004\u0002Z96\t!L\u0003\u0002\\E\u00051AH]8pizJ\u0011AK\u0005\u0003=&\nq\u0001]1dW\u0006<W-\u0003\u0002aC\nA\u0011\n^3sCR|\'O\u0003\u0002_SA\u00111m\u001a\b\u0003I\u0016\u0004\"!W\u0015\n\u0005\u0019L\u0013A\u0002)sK\u0012,g-\u0003\u0002iS\n11\u000b\u001e:j]\u001eT!AZ\u0015\u0002\u0015\u001d,GoU3h[\u0016tG\u000f\u0006\u0002cY\")Q\u000e\u0005a\u0001]\u0006\t\u0011\u000e\u0005\u0002)_&\u0011\u0001/\u000b\u0002\u0004\u0013:$\u0018\u0001D:fO6,g\u000e^\"pk:$X#\u00018\u0003\u0011QC\u0017n\u001d+za\u0016\fq\u0001\\1ti>\u0003H/F\u0001w!\rAs/_\u0005\u0003q&\u0012aa\u00149uS>t\u0007C\u0001>~\u001b\u0005Y(B\u0001?J\u0003\u0011a\u0017M\\4\n\u0005!\\\u0018\u0001\u0002\u0013eSZ$B!!\u0001\u0002\u0006A\u0019\u00111\u0001\n\u000e\u0003)Aq!a\u0002\u0015\u0001\u0004\tI!A\u0003dQVt7\u000eE\u0002%\u0003\u0017I1!!\u0004!\u0005%\u0001\u0016\r\u001e5DQVt7.\u0001\u0005u_N#(/\u001b8h)\u0005I\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\u0018\u0005u\u0001c\u0001\u0015\u0002\u001a%\u0019\u00111D\u0015\u0003\u000f\t{w\u000e\\3b]\"9\u0011q\u0004\fA\u0002\u0005\u0005\u0012!A8\u0011\u0007!\n\u0019#C\u0002\u0002&%\u00121!\u00118z\u0003!A\u0017m\u001d5D_\u0012,G#\u00018\u0002\u0015M$\u0018M\u001d;t/&$\b\u000e\u0006\u0003\u0002\u0018\u0005=\u0002BBA\u00191\u0001\u0007a\'\u0001\u0004uCJ<W\r^\u0001\tK:$7oV5uQR!\u0011qCA\u001c\u0011\u001d\t\t$\u0007a\u0001\u0003s\u00012\u0001JA\u001e\u0013\r\ti\u0004\t\u0002\b%\u0016d\u0007+\u0019;i\u0003)\u0011X\r\\1uSZ,Gk\u001c\u000b\u0005\u0003s\t\u0019\u0005C\u000365\u0001\u0007a\'\u0001\u0003u_&{UCAA%!\u0011\tY%!\u0015\u000e\u0005\u00055#bAA(\u0013\u0006\u0011\u0011n\\\u0005\u0005\u0003\'\niE\u0001\u0003GS2,\u0017!\u0002;p\u001d&{\u0015a\u0003:fg>dg/\u001a$s_6$2ANA.\u0011\u0015)T\u00041\u00017\u000399W\r^%oaV$8\u000b\u001e:fC6,\"!!\u0019\u0011\t\u0005-\u00131M\u0005\u0005\u0003K\niEA\u0006J]B,Ho\u0015;sK\u0006l\u0007BBA5\u0007\u0001\u0007\u0001(A\u0001q\u0003))\u0007\u0010]1oIV\u001bXM]\u000b\u0005\u0003_\ny\b\u0006\u0004\u0002r\u0005-\u0015q\u0012\u000b\u0004m\u0005M\u0004\"CA;\t\u0005\u0005\t9AA<\u0003))g/\u001b3f]\u000e,G\u0005\u000e\t\u0006I\u0005e\u0014QP\u0005\u0004\u0003w\u0002#a\u0004)bi\"\u001cuN\u001c<feRL\'\r\\3\u0011\u0007M\ny\bB\u0004\u0002\u0002\u0012\u0011\r!a!\u0003\u0003Q\u000bB!!\"\u0002\"A\u0019\u0001&a\"\n\u0007\u0005%\u0015FA\u0004O_RD\u0017N\\4\t\u000f\u00055E\u00011\u0001\u0002~\u0005\u0011a\r\r\u0005\bk\u0011\u0001\n\u00111\u00017\u0003Q)\u0007\u0010]1oIV\u001bXM\u001d\u0013eK\u001a\fW\u000f\u001c;%eU!\u0011QSAV+\t\t9JK\u00027\u00033[#!a\'\u0011\t\u0005u\u0015qU\u0007\u0003\u0003?SA!!)\u0002$\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0004\u0003KK\u0013AC1o]>$\u0018\r^5p]&!\u0011\u0011VAP\u0005E)hn\u00195fG.,GMV1sS\u0006t7-\u001a\u0003\b\u0003\u0003+!\u0019AAB+\u0011\ty+a/\u0015\r\u0005E\u0016QXAa)\r1\u00141\u0017\u0005\n\u0003k3\u0011\u0011!a\u0002\u0003o\u000b!\"\u001a<jI\u0016t7-\u001a\u00136!\u0015!\u0013\u0011PA]!\r\u0019\u00141\u0018\u0003\b\u0003\u00033!\u0019AAB\u0011\u001d\tyL\u0002a\u0001\u0003s\u000b\u0011A\u001a\u0005\u0006k\u0019\u0001\rAN\u000b\u0005\u0003\u000b\f\t\u000e\u0006\u0003\u0002H\u0006MGc\u0001\u001c\u0002J\"I\u00111Z\u0004\u0002\u0002\u0003\u000f\u0011QZ\u0001\u000bKZLG-\u001a8dK\u00122\u0004#\u0002\u0013\u0002z\u0005=\u0007cA\u001a\u0002R\u00129\u0011\u0011Q\u0004C\u0002\u0005\r\u0005bBAG\u000f\u0001\u0007\u0011qZ\u0001\ra\u0006$\bn\u0014:eKJLgnZ\u000b\u0003\u00033\u0004BaVAnm%\u0019\u0011Q\\1\u0003\u0011=\u0013H-\u001a:j]\u001e\fQ\u0002]1uQ>\u0013H-\u001a:j]\u001e\u0004\u0003
   #15 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #16 = Class              #15           // java/lang/invoke/MethodHandles$Lookup
   #17 = Utf8               java/lang/invoke/MethodHandles
   #18 = Class              #17           // java/lang/invoke/MethodHandles
   #19 = Utf8               Lookup
   #20 = Utf8               os/PathError$AbsolutePathOutsideRoot$
   #21 = Class              #20           // os/PathError$AbsolutePathOutsideRoot$
   #22 = Utf8               os/PathError
   #23 = Class              #22           // os/PathError
   #24 = Utf8               AbsolutePathOutsideRoot$
   #25 = Utf8               os/SeekableSource$ChannelSource
   #26 = Class              #25           // os/SeekableSource$ChannelSource
   #27 = Utf8               os/SeekableSource
   #28 = Class              #27           // os/SeekableSource
   #29 = Utf8               ChannelSource
   #30 = Utf8               scala/Array$UnapplySeqWrapper
   #31 = Class              #30           // scala/Array$UnapplySeqWrapper
   #32 = Utf8               scala/Array
   #33 = Class              #32           // scala/Array
   #34 = Utf8               UnapplySeqWrapper
   #35 = Utf8               scala/Array$UnapplySeqWrapper$
   #36 = Class              #35           // scala/Array$UnapplySeqWrapper$
   #37 = Utf8               UnapplySeqWrapper$
   #38 = Utf8               scala/collection/JavaConverters$AsScala
   #39 = Class              #38           // scala/collection/JavaConverters$AsScala
   #40 = Utf8               scala/collection/JavaConverters
   #41 = Class              #40           // scala/collection/JavaConverters
   #42 = Utf8               AsScala
   #43 = Utf8               wrapped
   #44 = Utf8               Ljava/nio/file/Path;
   #45 = Utf8               pathOrdering
   #46 = Utf8               ()Lscala/math/Ordering;
   #47 = Utf8               ()Lscala/math/Ordering<Los/Path;>;
   #48 = Utf8               os/Path$
   #49 = Class              #48           // os/Path$
   #50 = Utf8               MODULE$
   #51 = Utf8               Los/Path$;
   #52 = NameAndType        #50:#51       // MODULE$:Los/Path$;
   #53 = Fieldref           #49.#52       // os/Path$.MODULE$:Los/Path$;
   #54 = NameAndType        #45:#46       // pathOrdering:()Lscala/math/Ordering;
   #55 = Methodref          #49.#54       // os/Path$.pathOrdering:()Lscala/math/Ordering;
   #56 = Utf8               apply
   #57 = Utf8               (Ljava/lang/Object;Los/PathConvertible;)Los/Path;
   #58 = Utf8               <T:Ljava/lang/Object;>(TT;Los/PathConvertible<TT;>;)Los/Path;
   #59 = Utf8               f0
   #60 = Utf8               evidence$6
   #61 = NameAndType        #56:#57       // apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
   #62 = Methodref          #49.#61       // os/Path$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
   #63 = Utf8               (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
   #64 = Utf8               <T:Ljava/lang/Object;>(TT;Los/Path;Los/PathConvertible<TT;>;)Los/Path;
   #65 = Utf8               f
   #66 = Utf8               base
   #67 = Utf8               evidence$5
   #68 = NameAndType        #56:#63       // apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
   #69 = Methodref          #49.#68       // os/Path$.apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
   #70 = Utf8               expandUser$default$2
   #71 = Utf8               ()Los/Path;
   #72 = Utf8               <T:Ljava/lang/Object;>()Los/Path;
   #73 = NameAndType        #70:#71       // expandUser$default$2:()Los/Path;
   #74 = Methodref          #49.#73       // os/Path$.expandUser$default$2:()Los/Path;
   #75 = Utf8               expandUser
   #76 = Utf8               evidence$4
   #77 = NameAndType        #75:#63       // expandUser:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
   #78 = Methodref          #49.#77       // os/Path$.expandUser:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
   #79 = Utf8               (Los/FilePath;Los/Path;)Los/Path;
   #80 = Utf8               p
   #81 = NameAndType        #56:#79       // apply:(Los/FilePath;Los/Path;)Los/Path;
   #82 = Methodref          #49.#81       // os/Path$.apply:(Los/FilePath;Los/Path;)Los/Path;
   #83 = Utf8               ext
   #84 = Utf8               ()Ljava/lang/String;
   #85 = Utf8               ext$
   #86 = Utf8               (Los/BasePathImpl;)Ljava/lang/String;
   #87 = NameAndType        #85:#86       // ext$:(Los/BasePathImpl;)Ljava/lang/String;
   #88 = InterfaceMethodref #10.#87       // os/BasePathImpl.ext$:(Los/BasePathImpl;)Ljava/lang/String;
   #89 = Utf8               this
   #90 = Utf8               Los/Path;
   #91 = Utf8               baseName
   #92 = Utf8               baseName$
   #93 = NameAndType        #92:#86       // baseName$:(Los/BasePathImpl;)Ljava/lang/String;
   #94 = InterfaceMethodref #10.#93       // os/BasePathImpl.baseName$:(Los/BasePathImpl;)Ljava/lang/String;
   #95 = Utf8               last
   #96 = Utf8               last$
   #97 = NameAndType        #96:#86       // last$:(Los/BasePathImpl;)Ljava/lang/String;
   #98 = InterfaceMethodref #10.#97       // os/BasePathImpl.last$:(Los/BasePathImpl;)Ljava/lang/String;
   #99 = Utf8               subRelativeTo
  #100 = Utf8               (Los/BasePath;)Los/SubPath;
  #101 = Utf8               target
  #102 = Utf8               os/BasePath
  #103 = Class              #102          // os/BasePath
  #104 = Utf8               subRelativeTo$
  #105 = Utf8               (Los/BasePath;Los/BasePath;)Los/SubPath;
  #106 = NameAndType        #104:#105     // subRelativeTo$:(Los/BasePath;Los/BasePath;)Los/SubPath;
  #107 = InterfaceMethodref #103.#106     // os/BasePath.subRelativeTo$:(Los/BasePath;Los/BasePath;)Los/SubPath;
  #108 = Utf8               Los/BasePath;
  #109 = Utf8               ()Ljava/nio/file/Path;
  #110 = NameAndType        #43:#44       // wrapped:Ljava/nio/file/Path;
  #111 = Fieldref           #2.#110       // os/Path.wrapped:Ljava/nio/file/Path;
  #112 = Utf8               toSource
  #113 = Utf8               ()Los/SeekableSource;
  #114 = NameAndType        #43:#109      // wrapped:()Ljava/nio/file/Path;
  #115 = Methodref          #2.#114       // os/Path.wrapped:()Ljava/nio/file/Path;
  #116 = Utf8               java/nio/file/OpenOption
  #117 = Class              #116          // java/nio/file/OpenOption
  #118 = Utf8               java/nio/file/Files
  #119 = Class              #118          // java/nio/file/Files
  #120 = Utf8               newByteChannel
  #121 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
  #122 = NameAndType        #120:#121     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
  #123 = Methodref          #119.#122     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
  #124 = Utf8               <init>
  #125 = Utf8               (Ljava/nio/channels/SeekableByteChannel;)V
  #126 = NameAndType        #124:#125     // "<init>":(Ljava/nio/channels/SeekableByteChannel;)V
  #127 = Methodref          #26.#126      // os/SeekableSource$ChannelSource."<init>":(Ljava/nio/channels/SeekableByteChannel;)V
  #128 = Utf8               segments
  #129 = Utf8               ()Lscala/collection/Iterator;
  #130 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
  #131 = Utf8               scala/collection/JavaConverters$
  #132 = Class              #131          // scala/collection/JavaConverters$
  #133 = Utf8               Lscala/collection/JavaConverters$;
  #134 = NameAndType        #50:#133      // MODULE$:Lscala/collection/JavaConverters$;
  #135 = Fieldref           #132.#134     // scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
  #136 = Utf8               java/nio/file/Path
  #137 = Class              #136          // java/nio/file/Path
  #138 = Utf8               iterator
  #139 = Utf8               ()Ljava/util/Iterator;
  #140 = NameAndType        #138:#139     // iterator:()Ljava/util/Iterator;
  #141 = InterfaceMethodref #137.#140     // java/nio/file/Path.iterator:()Ljava/util/Iterator;
  #142 = Utf8               asScalaIteratorConverter
  #143 = Utf8               (Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #144 = NameAndType        #142:#143     // asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #145 = Methodref          #132.#144     // scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
  #146 = Utf8               asScala
  #147 = Utf8               ()Ljava/lang/Object;
  #148 = NameAndType        #146:#147     // asScala:()Ljava/lang/Object;
  #149 = Methodref          #39.#148      // scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
  #150 = Utf8               scala/collection/Iterator
  #151 = Class              #150          // scala/collection/Iterator
  #152 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #153 = MethodType         #152          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #154 = Utf8               $anonfun$segments$1
  #155 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;
  #156 = NameAndType        #154:#155     // $anonfun$segments$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #157 = Methodref          #2.#156       // os/Path.$anonfun$segments$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #158 = MethodHandle       6:#157        // REF_invokeStatic os/Path.$anonfun$segments$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #159 = MethodType         #155          //  (Ljava/nio/file/Path;)Ljava/lang/String;
  #160 = Integer            5
  #161 = Integer            1
  #162 = Utf8               java/lang/invoke/LambdaMetafactory
  #163 = Class              #162          // java/lang/invoke/LambdaMetafactory
  #164 = Utf8               altMetafactory
  #165 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = NameAndType        #164:#165     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = Methodref          #163.#166     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = MethodHandle       6:#167        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = Utf8               ()Lscala/Function1;
  #170 = NameAndType        #56:#169      // apply:()Lscala/Function1;
  #171 = InvokeDynamic      #0:#170       // #0:apply:()Lscala/Function1;
  #172 = Utf8               map
  #173 = Utf8               (Lscala/Function1;)Lscala/collection/Iterator;
  #174 = NameAndType        #172:#173     // map:(Lscala/Function1;)Lscala/collection/Iterator;
  #175 = InterfaceMethodref #151.#174     // scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
  #176 = Utf8               getSegment
  #177 = Utf8               (I)Ljava/lang/String;
  #178 = Utf8               i
  #179 = Utf8               getName
  #180 = Utf8               (I)Ljava/nio/file/Path;
  #181 = NameAndType        #179:#180     // getName:(I)Ljava/nio/file/Path;
  #182 = InterfaceMethodref #137.#181     // java/nio/file/Path.getName:(I)Ljava/nio/file/Path;
  #183 = Utf8               toString
  #184 = NameAndType        #183:#84      // toString:()Ljava/lang/String;
  #185 = Methodref          #4.#184       // java/lang/Object.toString:()Ljava/lang/String;
  #186 = Utf8               I
  #187 = Utf8               segmentCount
  #188 = Utf8               ()I
  #189 = Utf8               getNameCount
  #190 = NameAndType        #189:#188     // getNameCount:()I
  #191 = InterfaceMethodref #137.#190     // java/nio/file/Path.getNameCount:()I
  #192 = Utf8               lastOpt
  #193 = Utf8               ()Lscala/Option;
  #194 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
  #195 = Utf8               scala/Option$
  #196 = Class              #195          // scala/Option$
  #197 = Utf8               Lscala/Option$;
  #198 = NameAndType        #50:#197      // MODULE$:Lscala/Option$;
  #199 = Fieldref           #196.#198     // scala/Option$.MODULE$:Lscala/Option$;
  #200 = Utf8               getFileName
  #201 = NameAndType        #200:#109     // getFileName:()Ljava/nio/file/Path;
  #202 = InterfaceMethodref #137.#201     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
  #203 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #204 = NameAndType        #56:#203      // apply:(Ljava/lang/Object;)Lscala/Option;
  #205 = Methodref          #196.#204     // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #206 = Utf8               $anonfun$lastOpt$1
  #207 = NameAndType        #206:#155     // $anonfun$lastOpt$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #208 = Methodref          #2.#207       // os/Path.$anonfun$lastOpt$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #209 = MethodHandle       6:#208        // REF_invokeStatic os/Path.$anonfun$lastOpt$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #210 = InvokeDynamic      #1:#170       // #1:apply:()Lscala/Function1;
  #211 = Utf8               scala/Option
  #212 = Class              #211          // scala/Option
  #213 = Utf8               (Lscala/Function1;)Lscala/Option;
  #214 = NameAndType        #172:#213     // map:(Lscala/Function1;)Lscala/Option;
  #215 = Methodref          #212.#214     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #216 = Utf8               $div
  #217 = Utf8               (Los/PathChunk;)Los/Path;
  #218 = Utf8               chunk
  #219 = Utf8               os/PathChunk
  #220 = Class              #219          // os/PathChunk
  #221 = Utf8               ups
  #222 = NameAndType        #221:#188     // ups:()I
  #223 = InterfaceMethodref #220.#222     // os/PathChunk.ups:()I
  #224 = Utf8               Los/PathError$AbsolutePathOutsideRoot$;
  #225 = NameAndType        #50:#224      // MODULE$:Los/PathError$AbsolutePathOutsideRoot$;
  #226 = Fieldref           #21.#225      // os/PathError$AbsolutePathOutsideRoot$.MODULE$:Los/PathError$AbsolutePathOutsideRoot$;
  #227 = Utf8               resolve
  #228 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;
  #229 = NameAndType        #227:#228     // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #230 = InterfaceMethodref #137.#229     // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #231 = Utf8               normalize
  #232 = NameAndType        #231:#109     // normalize:()Ljava/nio/file/Path;
  #233 = InterfaceMethodref #137.#232     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;
  #234 = Utf8               (Ljava/nio/file/Path;)V
  #235 = NameAndType        #124:#234     // "<init>":(Ljava/nio/file/Path;)V
  #236 = Methodref          #2.#235       // os/Path."<init>":(Ljava/nio/file/Path;)V
  #237 = Utf8               resolved
  #238 = Utf8               Los/PathChunk;
  #239 = Utf8               equals
  #240 = Utf8               (Ljava/lang/Object;)Z
  #241 = Utf8               o
  #242 = NameAndType        #239:#240     // equals:(Ljava/lang/Object;)Z
  #243 = Methodref          #4.#242       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #244 = Utf8               Ljava/lang/Object;
  #245 = Utf8               hashCode
  #246 = NameAndType        #245:#188     // hashCode:()I
  #247 = Methodref          #4.#246       // java/lang/Object.hashCode:()I
  #248 = Utf8               startsWith
  #249 = Utf8               (Los/Path;)Z
  #250 = Utf8               (Ljava/nio/file/Path;)Z
  #251 = NameAndType        #248:#250     // startsWith:(Ljava/nio/file/Path;)Z
  #252 = InterfaceMethodref #137.#251     // java/nio/file/Path.startsWith:(Ljava/nio/file/Path;)Z
  #253 = Utf8               endsWith
  #254 = Utf8               (Los/RelPath;)Z
  #255 = Utf8               os/RelPath
  #256 = Class              #255          // os/RelPath
  #257 = Methodref          #256.#184     // os/RelPath.toString:()Ljava/lang/String;
  #258 = Utf8               (Ljava/lang/String;)Z
  #259 = NameAndType        #253:#258     // endsWith:(Ljava/lang/String;)Z
  #260 = InterfaceMethodref #137.#259     // java/nio/file/Path.endsWith:(Ljava/lang/String;)Z
  #261 = Utf8               Los/RelPath;
  #262 = Utf8               relativeTo
  #263 = Utf8               (Los/Path;)Los/RelPath;
  #264 = Utf8               relativize
  #265 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #266 = NameAndType        #264:#265     // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #267 = InterfaceMethodref #137.#266     // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #268 = Utf8               $anonfun$relativeTo$1
  #269 = NameAndType        #268:#155     // $anonfun$relativeTo$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #270 = Methodref          #2.#269       // os/Path.$anonfun$relativeTo$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #271 = MethodHandle       6:#270        // REF_invokeStatic os/Path.$anonfun$relativeTo$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #272 = InvokeDynamic      #2:#170       // #2:apply:()Lscala/Function1;
  #273 = Utf8               scala/reflect/ClassTag$
  #274 = Class              #273          // scala/reflect/ClassTag$
  #275 = Utf8               Lscala/reflect/ClassTag$;
  #276 = NameAndType        #50:#275      // MODULE$:Lscala/reflect/ClassTag$;
  #277 = Fieldref           #274.#276     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #278 = Utf8               java/lang/String
  #279 = Class              #278          // java/lang/String
  #280 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #281 = NameAndType        #56:#280      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #282 = Methodref          #274.#281     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #283 = Utf8               toArray
  #284 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #285 = NameAndType        #283:#284     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #286 = InterfaceMethodref #151.#285     // scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #287 = Utf8               [Ljava/lang/String;
  #288 = Class              #287          // "[Ljava/lang/String;"
  #289 = Utf8               scala/Array$
  #290 = Class              #289          // scala/Array$
  #291 = Utf8               Lscala/Array$;
  #292 = NameAndType        #50:#291      // MODULE$:Lscala/Array$;
  #293 = Fieldref           #290.#292     // scala/Array$.MODULE$:Lscala/Array$;
  #294 = Utf8               unapplySeq
  #295 = NameAndType        #294:#152     // unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
  #296 = Methodref          #290.#295     // scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
  #297 = Utf8               Lscala/Array$UnapplySeqWrapper$;
  #298 = NameAndType        #50:#297      // MODULE$:Lscala/Array$UnapplySeqWrapper$;
  #299 = Fieldref           #36.#298      // scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
  #300 = Utf8               isEmpty$extension
  #301 = NameAndType        #300:#240     // isEmpty$extension:(Ljava/lang/Object;)Z
  #302 = Methodref          #36.#301      // scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
  #303 = Utf8               get$extension
  #304 = NameAndType        #303:#152     // get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #305 = Methodref          #36.#304      // scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
  #306 = Utf8               (Ljava/lang/Object;)V
  #307 = NameAndType        #124:#306     // "<init>":(Ljava/lang/Object;)V
  #308 = Methodref          #31.#307      // scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
  #309 = Utf8               lengthCompare$extension
  #310 = Utf8               (Ljava/lang/Object;I)I
  #311 = NameAndType        #309:#310     // lengthCompare$extension:(Ljava/lang/Object;I)I
  #312 = Methodref          #36.#311      // scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
  #313 = Utf8               apply$extension
  #314 = Utf8               (Ljava/lang/Object;I)Ljava/lang/Object;
  #315 = NameAndType        #313:#314     // apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #316 = Methodref          #36.#315      // scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #317 = Utf8
  #318 = String             #317          //
  #319 = Utf8               os/Internals$
  #320 = Class              #319          // os/Internals$
  #321 = Utf8               Los/Internals$;
  #322 = NameAndType        #50:#321      // MODULE$:Los/Internals$;
  #323 = Fieldref           #320.#322     // os/Internals$.MODULE$:Los/Internals$;
  #324 = Utf8               emptyStringArray
  #325 = Utf8               ()[Ljava/lang/String;
  #326 = NameAndType        #324:#325     // emptyStringArray:()[Ljava/lang/String;
  #327 = Methodref          #320.#326     // os/Internals$.emptyStringArray:()[Ljava/lang/String;
  #328 = Utf8               scala/Predef$
  #329 = Class              #328          // scala/Predef$
  #330 = Utf8               Lscala/Predef$;
  #331 = NameAndType        #50:#330      // MODULE$:Lscala/Predef$;
  #332 = Fieldref           #329.#331     // scala/Predef$.MODULE$:Lscala/Predef$;
  #333 = Utf8               [Ljava/lang/Object;
  #334 = Class              #333          // "[Ljava/lang/Object;"
  #335 = Utf8               refArrayOps
  #336 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #337 = NameAndType        #335:#336     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #338 = Methodref          #329.#337     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #339 = Utf8               $anonfun$relativeTo$2$adapted
  #340 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #341 = NameAndType        #339:#340     // $anonfun$relativeTo$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #342 = Methodref          #2.#341       // os/Path.$anonfun$relativeTo$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #343 = MethodHandle       6:#342        // REF_invokeStatic os/Path.$anonfun$relativeTo$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #344 = MethodType         #340          //  (Ljava/lang/String;)Ljava/lang/Object;
  #345 = InvokeDynamic      #3:#170       // #3:apply:()Lscala/Function1;
  #346 = Utf8               scala/collection/ArrayOps$
  #347 = Class              #346          // scala/collection/ArrayOps$
  #348 = Utf8               Lscala/collection/ArrayOps$;
  #349 = NameAndType        #50:#348      // MODULE$:Lscala/collection/ArrayOps$;
  #350 = Fieldref           #347.#349     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #351 = Utf8               indexWhere$default$2$extension
  #352 = Utf8               (Ljava/lang/Object;)I
  #353 = NameAndType        #351:#352     // indexWhere$default$2$extension:(Ljava/lang/Object;)I
  #354 = Methodref          #347.#353     // scala/collection/ArrayOps$.indexWhere$default$2$extension:(Ljava/lang/Object;)I
  #355 = Utf8               indexWhere$extension
  #356 = Utf8               (Ljava/lang/Object;Lscala/Function1;I)I
  #357 = NameAndType        #355:#356     // indexWhere$extension:(Ljava/lang/Object;Lscala/Function1;I)I
  #358 = Methodref          #347.#357     // scala/collection/ArrayOps$.indexWhere$extension:(Ljava/lang/Object;Lscala/Function1;I)I
  #359 = Utf8               drop$extension
  #360 = NameAndType        #359:#314     // drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #361 = Methodref          #347.#360     // scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
  #362 = Utf8               ([Ljava/lang/String;I)V
  #363 = NameAndType        #124:#362     // "<init>":([Ljava/lang/String;I)V
  #364 = Methodref          #256.#363     // os/RelPath."<init>":([Ljava/lang/String;I)V
  #365 = Utf8               qual$1
  #366 = Utf8               x$1
  #367 = Utf8               Lscala/Function1;
  #368 = Utf8               x$2
  #369 = Utf8               nioRel
  #370 = Utf8               nonUpIndex
  #371 = Utf8               scala/Function1
  #372 = Class              #371          // scala/Function1
  #373 = Utf8               toIO
  #374 = Utf8               ()Ljava/io/File;
  #375 = Utf8               toFile
  #376 = NameAndType        #375:#374     // toFile:()Ljava/io/File;
  #377 = InterfaceMethodref #137.#376     // java/nio/file/Path.toFile:()Ljava/io/File;
  #378 = Utf8               toNIO
  #379 = Utf8               resolveFrom
  #380 = Utf8               (Los/Path;)Los/Path;
  #381 = Utf8               getInputStream
  #382 = Utf8               ()Ljava/io/InputStream;
  #383 = Utf8               newInputStream
  #384 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
  #385 = NameAndType        #383:#384     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
  #386 = Methodref          #119.#385     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
  #387 = Utf8               (Los/BasePath;)Los/RelPath;
  #388 = NameAndType        #262:#263     // relativeTo:(Los/Path;)Los/RelPath;
  #389 = Methodref          #2.#388       // os/Path.relativeTo:(Los/Path;)Los/RelPath;
  #390 = Utf8               (Los/BasePath;)Z
  #391 = NameAndType        #248:#249     // startsWith:(Los/Path;)Z
  #392 = Methodref          #2.#391       // os/Path.startsWith:(Los/Path;)Z
  #393 = Utf8               (Los/PathChunk;)Los/BasePath;
  #394 = NameAndType        #216:#217     // $div:(Los/PathChunk;)Los/Path;
  #395 = Methodref          #2.#394       // os/Path.$div:(Los/PathChunk;)Los/Path;
  #396 = Utf8               ()Lscala/collection/IterableOnce;
  #397 = NameAndType        #128:#129     // segments:()Lscala/collection/Iterator;
  #398 = Methodref          #2.#397       // os/Path.segments:()Lscala/collection/Iterator;
  #399 = Utf8               ()Los/Source;
  #400 = NameAndType        #112:#113     // toSource:()Los/SeekableSource;
  #401 = Methodref          #2.#400       // os/Path.toSource:()Los/SeekableSource;
  #402 = Utf8               $anonfun$new$1
  #403 = Utf8               (Los/Path;)Ljava/lang/String;
  #404 = Utf8               $this
  #405 = Utf8               java/lang/StringBuilder
  #406 = Class              #405          // java/lang/StringBuilder
  #407 = Integer            24
  #408 = Utf8               (I)V
  #409 = NameAndType        #124:#408     // "<init>":(I)V
  #410 = Methodref          #406.#409     // java/lang/StringBuilder."<init>":(I)V
  #411 = Utf8               append
  #412 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #413 = NameAndType        #411:#412     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #414 = Methodref          #406.#413     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #415 = Utf8                is not an absolute path
  #416 = String             #415          //  is not an absolute path
  #417 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #418 = NameAndType        #411:#417     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #419 = Methodref          #406.#418     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #420 = Methodref          #406.#184     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #421 = Utf8               x$8
  #422 = Utf8               x$9
  #423 = Utf8               x$10
  #424 = Utf8               $anonfun$relativeTo$2
  #425 = Utf8               x$11
  #426 = Utf8               ..
  #427 = String             #426          // ..
  #428 = Utf8               Ljava/lang/String;
  #429 = Utf8               ()V
  #430 = NameAndType        #124:#429     // "<init>":()V
  #431 = Methodref          #4.#430       // java/lang/Object."<init>":()V
  #432 = Utf8               $init$
  #433 = Utf8               (Los/BasePath;)V
  #434 = NameAndType        #432:#433     // $init$:(Los/BasePath;)V
  #435 = InterfaceMethodref #103.#434     // os/BasePath.$init$:(Los/BasePath;)V
  #436 = Utf8               (Los/BasePathImpl;)V
  #437 = NameAndType        #432:#436     // $init$:(Los/BasePathImpl;)V
  #438 = InterfaceMethodref #10.#437      // os/BasePathImpl.$init$:(Los/BasePathImpl;)V
  #439 = Utf8               isAbsolute
  #440 = Utf8               ()Z
  #441 = NameAndType        #439:#440     // isAbsolute:()Z
  #442 = InterfaceMethodref #137.#441     // java/nio/file/Path.isAbsolute:()Z
  #443 = MethodType         #147          //  ()Ljava/lang/Object;
  #444 = NameAndType        #402:#403     // $anonfun$new$1:(Los/Path;)Ljava/lang/String;
  #445 = Methodref          #2.#444       // os/Path.$anonfun$new$1:(Los/Path;)Ljava/lang/String;
  #446 = MethodHandle       6:#445        // REF_invokeStatic os/Path.$anonfun$new$1:(Los/Path;)Ljava/lang/String;
  #447 = MethodType         #84           //  ()Ljava/lang/String;
  #448 = Utf8               (Los/Path;)Lscala/Function0;
  #449 = NameAndType        #56:#448      // apply:(Los/Path;)Lscala/Function0;
  #450 = InvokeDynamic      #4:#449       // #4:apply:(Los/Path;)Lscala/Function0;
  #451 = Utf8               require
  #452 = Utf8               (ZLscala/Function0;)V
  #453 = NameAndType        #451:#452     // require:(ZLscala/Function0;)V
  #454 = Methodref          #329.#453     // scala/Predef$.require:(ZLscala/Function0;)V
  #455 = NameAndType        #424:#258     // $anonfun$relativeTo$2:(Ljava/lang/String;)Z
  #456 = Methodref          #2.#455       // os/Path.$anonfun$relativeTo$2:(Ljava/lang/String;)Z
  #457 = Utf8               scala/runtime/BoxesRunTime
  #458 = Class              #457          // scala/runtime/BoxesRunTime
  #459 = Utf8               boxToBoolean
  #460 = Utf8               (Z)Ljava/lang/Boolean;
  #461 = NameAndType        #459:#460     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #462 = Methodref          #458.#461     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #463 = Utf8               $deserializeLambda$
  #464 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #465 = Utf8               scala/runtime/LambdaDeserialize
  #466 = Class              #465          // scala/runtime/LambdaDeserialize
  #467 = Utf8               bootstrap
  #468 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #469 = NameAndType        #467:#468     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #470 = Methodref          #466.#469     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #471 = MethodHandle       6:#470        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #472 = Utf8               lambdaDeserialize
  #473 = NameAndType        #472:#464     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #474 = InvokeDynamic      #5:#473       // #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #475 = Utf8               Code
  #476 = Utf8               Signature
  #477 = Utf8               MethodParameters
  #478 = Utf8               LineNumberTable
  #479 = Utf8               LocalVariableTable
  #480 = Utf8               StackMapTable
  #481 = Utf8               InnerClasses
  #482 = Utf8               SourceFile
  #483 = Utf8               RuntimeVisibleAnnotations
  #484 = Utf8               BootstrapMethods
  #485 = Utf8               ScalaInlineInfo
  #486 = Utf8               ScalaSig
{
  private final java.nio.file.Path wrapped;
    descriptor: Ljava/nio/file/Path;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.math.Ordering<os.Path> pathOrdering();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #53                 // Field os/Path$.MODULE$:Los/Path$;
         3: invokevirtual #55                 // Method os/Path$.pathOrdering:()Lscala/math/Ordering;
         6: areturn
    Signature: #47                          // ()Lscala/math/Ordering<Los/Path;>;

  public static <T extends java.lang.Object> os.Path apply(T, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/PathConvertible;)Los/Path;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #53                 // Field os/Path$.MODULE$:Los/Path$;
         3: aload_0
         4: aload_1
         5: invokevirtual #62                 // Method os/Path$.apply:(Ljava/lang/Object;Los/PathConvertible;)Los/Path;
         8: areturn
    Signature: #58                          // <T:Ljava/lang/Object;>(TT;Los/PathConvertible<TT;>;)Los/Path;
    MethodParameters:
      Name                           Flags
      f0                             final
      evidence$6                     final

  public static <T extends java.lang.Object> os.Path apply(T, os.Path, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #53                 // Field os/Path$.MODULE$:Los/Path$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #69                 // Method os/Path$.apply:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
         9: areturn
    Signature: #64                          // <T:Ljava/lang/Object;>(TT;Los/Path;Los/PathConvertible<TT;>;)Los/Path;
    MethodParameters:
      Name                           Flags
      f                              final
      base                           final
      evidence$5                     final

  public static <T extends java.lang.Object> os.Path expandUser$default$2();
    descriptor: ()Los/Path;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #53                 // Field os/Path$.MODULE$:Los/Path$;
         3: invokevirtual #74                 // Method os/Path$.expandUser$default$2:()Los/Path;
         6: areturn
    Signature: #72                          // <T:Ljava/lang/Object;>()Los/Path;

  public static <T extends java.lang.Object> os.Path expandUser(T, os.Path, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #53                 // Field os/Path$.MODULE$:Los/Path$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: invokevirtual #78                 // Method os/Path$.expandUser:(Ljava/lang/Object;Los/Path;Los/PathConvertible;)Los/Path;
         9: areturn
    Signature: #64                          // <T:Ljava/lang/Object;>(TT;Los/Path;Los/PathConvertible<TT;>;)Los/Path;
    MethodParameters:
      Name                           Flags
      f0                             final
      base                           final
      evidence$4                     final

  public static os.Path apply(os.FilePath, os.Path);
    descriptor: (Los/FilePath;Los/Path;)Los/Path;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #53                 // Field os/Path$.MODULE$:Los/Path$;
         3: aload_0
         4: aload_1
         5: invokevirtual #82                 // Method os/Path$.apply:(Los/FilePath;Los/Path;)Los/Path;
         8: areturn
    MethodParameters:
      Name                           Flags
      p                              final
      base                           final

  public java.lang.String ext();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod os/BasePathImpl.ext$:(Los/BasePathImpl;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public java.lang.String baseName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #94                 // InterfaceMethod os/BasePathImpl.baseName$:(Los/BasePathImpl;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public java.lang.String last();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #98                 // InterfaceMethod os/BasePathImpl.last$:(Los/BasePathImpl;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public os.SubPath subRelativeTo(os.BasePath);
    descriptor: (Los/BasePath;)Los/SubPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #107                // InterfaceMethod os/BasePath.subRelativeTo$:(Los/BasePath;Los/BasePath;)Los/SubPath;
         5: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/Path;
            0       6     1 target   Los/BasePath;
    MethodParameters:
      Name                           Flags
      target                         final

  public java.nio.file.Path wrapped();
    descriptor: ()Ljava/nio/file/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #111                // Field wrapped:Ljava/nio/file/Path;
         4: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public os.SeekableSource toSource();
    descriptor: ()Los/SeekableSource;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #26                 // class os/SeekableSource$ChannelSource
         3: dup
         4: aload_0
         5: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         8: iconst_0
         9: anewarray     #117                // class java/nio/file/OpenOption
        12: invokestatic  #123                // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;
        15: invokespecial #127                // Method os/SeekableSource$ChannelSource."<init>":(Ljava/nio/channels/SeekableByteChannel;)V
        18: areturn
      LineNumberTable:
        line 444: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Los/Path;

  public scala.collection.Iterator<java.lang.String> segments();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #135                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
         3: aload_0
         4: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         7: invokeinterface #141,  1          // InterfaceMethod java/nio/file/Path.iterator:()Ljava/util/Iterator;
        12: invokevirtual #145                // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
        15: invokevirtual #149                // Method scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
        18: checkcast     #151                // class scala/collection/Iterator
        21: invokedynamic #171,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        26: invokeinterface #175,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        31: areturn
      LineNumberTable:
        line 447: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      32     0  this   Los/Path;
    Signature: #130                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String getSegment(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: iload_1
         5: invokeinterface #182,  2          // InterfaceMethod java/nio/file/Path.getName:(I)Ljava/nio/file/Path;
        10: invokevirtual #185                // Method java/lang/Object.toString:()Ljava/lang/String;
        13: areturn
      LineNumberTable:
        line 448: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Los/Path;
            0      14     1     i   I
    MethodParameters:
      Name                           Flags
      i                              final

  public int segmentCount();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: invokeinterface #191,  1          // InterfaceMethod java/nio/file/Path.getNameCount:()I
         9: ireturn
      LineNumberTable:
        line 449: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Los/Path;

  public scala.Option<java.lang.String> lastOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #199                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         7: invokeinterface #202,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
        12: invokevirtual #205                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        15: invokedynamic #210,  0            // InvokeDynamic #1:apply:()Lscala/Function1;
        20: invokevirtual #215                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        23: areturn
      LineNumberTable:
        line 452: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Los/Path;
    Signature: #194                         // ()Lscala/Option<Ljava/lang/String;>;

  public os.Path $div(os.PathChunk);
    descriptor: (Los/PathChunk;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: invokeinterface #223,  1          // InterfaceMethod os/PathChunk.ups:()I
         6: aload_0
         7: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
        10: invokeinterface #191,  1          // InterfaceMethod java/nio/file/Path.getNameCount:()I
        15: if_icmple     22
        18: getstatic     #226                // Field os/PathError$AbsolutePathOutsideRoot$.MODULE$:Los/PathError$AbsolutePathOutsideRoot$;
        21: athrow
        22: aload_0
        23: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
        26: aload_1
        27: invokevirtual #185                // Method java/lang/Object.toString:()Ljava/lang/String;
        30: invokeinterface #230,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
        35: invokeinterface #233,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
        40: astore_2
        41: new           #2                  // class os/Path
        44: dup
        45: aload_2
        46: invokespecial #236                // Method "<init>":(Ljava/nio/file/Path;)V
        49: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 22 /* same */
      LineNumberTable:
        line 455: 0
        line 456: 22
        line 457: 41
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           41       8     2 resolved   Ljava/nio/file/Path;
            0      50     0  this   Los/Path;
            0      50     1 chunk   Los/PathChunk;
    MethodParameters:
      Name                           Flags
      chunk                          final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: invokevirtual #185                // Method java/lang/Object.toString:()Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 459: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/Path;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_1
         1: astore_3
         2: aload_3
         3: instanceof    #2                  // class os/Path
         6: ifeq          31
         9: aload_3
        10: checkcast     #2                  // class os/Path
        13: astore        4
        15: aload_0
        16: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
        19: aload         4
        21: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
        24: invokevirtual #243                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        27: istore_2
        28: goto          39
        31: goto          34
        34: iconst_0
        35: istore_2
        36: goto          39
        39: iload_2
        40: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 31
          locals = [ top, class java/lang/Object ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class os/Path, class java/lang/Object, int, class java/lang/Object ]
          stack = []
      LineNumberTable:
        line 461: 0
        line 462: 2
        line 463: 34
        line 461: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Los/Path;
            0      41     1     o   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      o                              final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: invokevirtual #247                // Method java/lang/Object.hashCode:()I
         7: ireturn
      LineNumberTable:
        line 465: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Los/Path;

  public boolean startsWith(os.Path);
    descriptor: (Los/Path;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: aload_1
         5: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         8: invokeinterface #252,  2          // InterfaceMethod java/nio/file/Path.startsWith:(Ljava/nio/file/Path;)Z
        13: ireturn
      LineNumberTable:
        line 467: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Los/Path;
            0      14     1 target   Los/Path;
    MethodParameters:
      Name                           Flags
      target                         final

  public boolean endsWith(os.RelPath);
    descriptor: (Los/RelPath;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: aload_1
         5: invokevirtual #257                // Method os/RelPath.toString:()Ljava/lang/String;
         8: invokeinterface #260,  2          // InterfaceMethod java/nio/file/Path.endsWith:(Ljava/lang/String;)Z
        13: ireturn
      LineNumberTable:
        line 469: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Los/Path;
            0      14     1 target   Los/RelPath;
    MethodParameters:
      Name                           Flags
      target                         final

  public os.RelPath relativeTo(os.Path);
    descriptor: (Los/Path;)Los/RelPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=13, args_size=2
         0: aload_1
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: aload_0
         5: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         8: invokeinterface #267,  2          // InterfaceMethod java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
        13: astore_3
        14: getstatic     #135                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
        17: aload_3
        18: invokeinterface #141,  1          // InterfaceMethod java/nio/file/Path.iterator:()Ljava/util/Iterator;
        23: invokevirtual #145                // Method scala/collection/JavaConverters$.asScalaIteratorConverter:(Ljava/util/Iterator;)Lscala/collection/JavaConverters$AsScala;
        26: invokevirtual #149                // Method scala/collection/JavaConverters$AsScala.asScala:()Ljava/lang/Object;
        29: checkcast     #151                // class scala/collection/Iterator
        32: invokedynamic #272,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        37: invokeinterface #175,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
        42: getstatic     #277                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        45: ldc_w         #279                // class java/lang/String
        48: invokevirtual #282                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        51: invokeinterface #286,  2          // InterfaceMethod scala/collection/Iterator.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
        56: checkcast     #288                // class "[Ljava/lang/String;"
        59: astore        5
        61: aload         5
        63: ifnull        171
        66: getstatic     #293                // Field scala/Array$.MODULE$:Lscala/Array$;
        69: aload         5
        71: invokevirtual #296                // Method scala/Array$.unapplySeq:(Ljava/lang/Object;)Ljava/lang/Object;
        74: astore        6
        76: getstatic     #299                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        79: aload         6
        81: invokevirtual #302                // Method scala/Array$UnapplySeqWrapper$.isEmpty$extension:(Ljava/lang/Object;)Z
        84: ifne          168
        87: new           #31                 // class scala/Array$UnapplySeqWrapper
        90: dup
        91: getstatic     #299                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
        94: aload         6
        96: invokevirtual #305                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
        99: invokespecial #308                // Method scala/Array$UnapplySeqWrapper."<init>":(Ljava/lang/Object;)V
       102: ifnull        168
       105: getstatic     #299                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       108: getstatic     #299                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       111: aload         6
       113: invokevirtual #305                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       116: iconst_1
       117: invokevirtual #312                // Method scala/Array$UnapplySeqWrapper$.lengthCompare$extension:(Ljava/lang/Object;I)I
       120: iconst_0
       121: if_icmpne     168
       124: getstatic     #299                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       127: getstatic     #299                // Field scala/Array$UnapplySeqWrapper$.MODULE$:Lscala/Array$UnapplySeqWrapper$;
       130: aload         6
       132: invokevirtual #305                // Method scala/Array$UnapplySeqWrapper$.get$extension:(Ljava/lang/Object;)Ljava/lang/Object;
       135: iconst_0
       136: invokevirtual #316                // Method scala/Array$UnapplySeqWrapper$.apply$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       139: checkcast     #279                // class java/lang/String
       142: astore        7
       144: ldc_w         #318                // String
       147: aload         7
       149: invokevirtual #243                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       152: ifeq          165
       155: getstatic     #323                // Field os/Internals$.MODULE$:Los/Internals$;
       158: invokevirtual #327                // Method os/Internals$.emptyStringArray:()[Ljava/lang/String;
       161: astore_2
       162: goto          180
       165: goto          174
       168: goto          174
       171: goto          174
       174: aload         5
       176: astore_2
       177: goto          180
       180: aload_2
       181: astore        4
       183: getstatic     #332                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       186: aload         4
       188: checkcast     #334                // class "[Ljava/lang/Object;"
       191: invokevirtual #338                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       194: astore        10
       196: invokedynamic #345,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
       201: astore        11
       203: getstatic     #350                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       206: aload         10
       208: invokevirtual #354                // Method scala/collection/ArrayOps$.indexWhere$default$2$extension:(Ljava/lang/Object;)I
       211: istore        12
       213: getstatic     #350                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       216: aload         10
       218: aload         11
       220: iload         12
       222: invokevirtual #358                // Method scala/collection/ArrayOps$.indexWhere$extension:(Ljava/lang/Object;Lscala/Function1;I)I
       225: istore        9
       227: iload         9
       229: tableswitch   { // -1 to -1
                      -1: 248
                 default: 254
            }
       248: aload         4
       250: arraylength
       251: goto          259
       254: iload         9
       256: goto          259
       259: istore        8
       261: new           #256                // class os/RelPath
       264: dup
       265: getstatic     #350                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       268: getstatic     #332                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       271: aload         4
       273: checkcast     #334                // class "[Ljava/lang/Object;"
       276: invokevirtual #338                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       279: iload         8
       281: invokevirtual #361                // Method scala/collection/ArrayOps$.drop$extension:(Ljava/lang/Object;I)Ljava/lang/Object;
       284: checkcast     #288                // class "[Ljava/lang/String;"
       287: iload         8
       289: invokespecial #364                // Method os/RelPath."<init>":([Ljava/lang/String;I)V
       292: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 165
          locals = [ class os/Path, class os/Path, top, class java/nio/file/Path, top, class "[Ljava/lang/String;", class java/lang/Object, class java/lang/String ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class os/Path, class os/Path, class "[Ljava/lang/String;", class java/nio/file/Path, top, class "[Ljava/lang/String;" ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 67
          locals = [ class os/Path, class os/Path, class "[Ljava/lang/String;", class java/nio/file/Path, class "[Ljava/lang/String;", class "[Ljava/lang/String;", top, top, top, int, class java/lang/Object, class scala/Function1, int ]
          stack = []
        frame_type = 5 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 473: 0
        line 474: 14
        line 475: 61
        line 476: 174
        line 474: 180
        line 478: 183
        line 479: 248
        line 480: 254
        line 483: 261
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          196      29    10 qual$1   Ljava/lang/Object;
          203      22    11   x$1   Lscala/Function1;
          213      12    12   x$2   I
           14     278     3 nioRel   Ljava/nio/file/Path;
          183     109     4 segments   [Ljava/lang/String;
          261      31     8 nonUpIndex   I
            0     293     0  this   Los/Path;
            0     293     1  base   Los/Path;
    MethodParameters:
      Name                           Flags
      base                           final

  public java.io.File toIO();
    descriptor: ()Ljava/io/File;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: invokeinterface #377,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
         9: areturn
      LineNumberTable:
        line 486: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Los/Path;

  public java.nio.file.Path toNIO();
    descriptor: ()Ljava/nio/file/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: areturn
      LineNumberTable:
        line 487: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public os.Path resolveFrom(os.Path);
    descriptor: (Los/Path;)Los/Path;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: areturn
      LineNumberTable:
        line 489: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Los/Path;
            0       2     1  base   Los/Path;
    MethodParameters:
      Name                           Flags
      base                           final

  public java.io.InputStream getInputStream();
    descriptor: ()Ljava/io/InputStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
         4: iconst_0
         5: anewarray     #117                // class java/nio/file/OpenOption
         8: invokestatic  #386                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
        11: areturn
      LineNumberTable:
        line 491: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Los/Path;

  public os.RelPath relativeTo(os.BasePath);
    descriptor: (Los/BasePath;)Los/RelPath;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class os/Path
         5: invokevirtual #389                // Method relativeTo:(Los/Path;)Los/RelPath;
         8: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/Path;
            0       9     1 target   Los/BasePath;
    MethodParameters:
      Name                           Flags
      target                         final

  public boolean startsWith(os.BasePath);
    descriptor: (Los/BasePath;)Z
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class os/Path
         5: invokevirtual #392                // Method startsWith:(Los/Path;)Z
         8: ireturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/Path;
            0       9     1 target   Los/BasePath;
    MethodParameters:
      Name                           Flags
      target                         final

  public os.BasePath $div(os.PathChunk);
    descriptor: (Los/PathChunk;)Los/BasePath;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #395                // Method $div:(Los/PathChunk;)Los/Path;
         5: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/Path;
            0       6     1 chunk   Los/PathChunk;
    MethodParameters:
      Name                           Flags
      chunk                          final

  public scala.collection.IterableOnce segments();
    descriptor: ()Lscala/collection/IterableOnce;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #398                // Method segments:()Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public os.Source toSource();
    descriptor: ()Los/Source;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #401                // Method toSource:()Los/SeekableSource;
         4: areturn
      LineNumberTable:
        line 441: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/Path;

  public static final java.lang.String $anonfun$new$1(os.Path);
    descriptor: (Los/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #406                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #407                // int 24
         7: invokespecial #410                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #115                // Method wrapped:()Ljava/nio/file/Path;
        14: invokevirtual #414                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        17: ldc_w         #416                // String  is not an absolute path
        20: invokevirtual #419                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: invokevirtual #420                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        26: areturn
      LineNumberTable:
        line 446: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0 $this   Los/Path;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final java.lang.String $anonfun$segments$1(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #185                // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 447: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$8   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final java.lang.String $anonfun$lastOpt$1(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #185                // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 452: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$9   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final java.lang.String $anonfun$relativeTo$1(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #185                // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 474: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$10   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      x$10                           final

  public static final boolean $anonfun$relativeTo$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #427                // String ..
         4: astore_1
         5: dup
         6: ifnonnull     17
         9: pop
        10: aload_1
        11: ifnull        28
        14: goto          24
        17: aload_1
        18: invokevirtual #243                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        21: ifne          28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 478: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0  x$11   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$11                           final

  public os.Path(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #111                // Field wrapped:Ljava/nio/file/Path;
         5: aload_0
         6: invokespecial #431                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #435                // InterfaceMethod os/BasePath.$init$:(Los/BasePath;)V
        13: aload_0
        14: invokestatic  #438                // InterfaceMethod os/BasePathImpl.$init$:(Los/BasePathImpl;)V
        17: getstatic     #332                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        20: aload_1
        21: invokeinterface #442,  1          // InterfaceMethod java/nio/file/Path.isAbsolute:()Z
        26: aload_0
        27: invokedynamic #450,  0            // InvokeDynamic #4:apply:(Los/Path;)Lscala/Function0;
        32: invokevirtual #454                // Method scala/Predef$.require:(ZLscala/Function0;)V
        35: return
      LineNumberTable:
        line 441: 0
        line 442: 5
        line 446: 17
        line 441: 35
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0  this   Los/Path;
            0      36     1 wrapped   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      wrapped                        final

  public static final java.lang.Object $anonfun$relativeTo$2$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #456                // Method $anonfun$relativeTo$2:(Ljava/lang/String;)Z
         4: invokestatic  #462                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 478: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  x$11   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$11                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #474,  0            // InvokeDynamic #5:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #19= #16 of #18;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #24= #21 of #23;          // AbsolutePathOutsideRoot$=class os/PathError$AbsolutePathOutsideRoot$ of class os/PathError
  public static #29= #26 of #28;          // ChannelSource=class os/SeekableSource$ChannelSource of class os/SeekableSource
  public static final #34= #31 of #33;    // UnapplySeqWrapper=class scala/Array$UnapplySeqWrapper of class scala/Array
  public static #37= #36 of #33;          // UnapplySeqWrapper$=class scala/Array$UnapplySeqWrapper$ of class scala/Array
  public static #42= #39 of #41;          // AsScala=class scala/collection/JavaConverters$AsScala of class scala/collection/JavaConverters
SourceFile: "Path.scala"
RuntimeVisibleAnnotations:
  0: #12(#13=s#14)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\u0005x!B\u0010!\u0011\u0003\u0019c!B\u0013!\u0011\u00031\u0003\"B\u0017\u0002\t\u0003q\u0003\"B\u0018\u0002\t\u0003\u0001\u0004bBA6\u0003\u0011\u0005\u0011Q\u000e\u0005\n\u0003#\u000b\u0011\u0013!C\u0001\u0003\'CaaL\u0001\u0005\u0002\u00055\u0006BB\u0018\u0002\t\u0003\t\u0019\rC\u0005\u0002V\u0006\u0011\r\u0011b\u0001\u0002X\"A\u0011q\\\u0001!\u0002\u0013\tIN\u0002\u0003&A\u00019\u0004\u0002C!\u000b\u0005\u000b\u0007I\u0011\u0001\"\t\u00111S!\u0011!Q\u0001\n\rCa!\f\u0006\u0005\u0002\u0001j\u0005\"B(\u000b\t\u0003\u0001\u0006\"\u0002+\u000b\t\u0003)\u0006\"\u00026\u000b\t\u0003Y\u0007\"B9\u000b\t\u0003\u0011X\u0001B:\u000b\u0001YBQ\u0001\u001e\u0006\u0005\u0002UDQA \u0006\u0005\u0002}Dq!a\u0004\u000b\t\u0003\n\t\u0002C\u0004\u0002\u0014)!\t%!\u0006\t\u000f\u0005\u001d\"\u0002\"\u0011\u0002*!9\u00111\u0006\u0006\u0005\u0002\u00055\u0002bBA\u001a\u0015\u0011\u0005\u0011Q\u0007\u0005\b\u0003\u007fQA\u0011AA!\u0011\u001d\t)E\u0003C\u0001\u0003\u000fBa!!\u0016\u000b\t\u0003\u0011\u0005bBA,\u0015\u0011\u0005\u0011\u0011\f\u0005\b\u0003;RA\u0011AA0\u0003\u0011\u0001\u0016\r\u001e5\u000b\u0003\u0005\n!a\\:\u0004\u0001A\u0011A%A\u0007\u0002A\t!\u0001+\u0019;i\'\t\tq\u0005\u0005\u0002)W5\t\u0011FC\u0001+\u0003\u0015\u00198-\u00197b\u0013\ta\u0013F\u0001\u0004B]f\u0014VMZ\u0001\u0007y%t\u0017\u000e\u001e \u0015\u0003\r\nQ!\u00199qYf$B!MA4iA\u0011!G\u0005\b\u0003gQb\u0001\u0001C\u00036\u0007\u0001\u0007a\'\u0001\u0003cCN,\u0007C\u0001\u0013\u000b\'\u0015Qq\u0005O\u001e?!\t!\u0013(\u0003\u0002;A\tAa)\u001b7f!\u0006$\b\u000e\u0005\u0002%y%\u0011Q\b\t\u0002\r%\u0016\fG-\u00192mKB\u000bG\u000f\u001b\t\u0003I}J!\u0001\u0011\u0011\u0003\u0019\t\u000b7/\u001a)bi\"LU\u000e\u001d7\u0002\u000f]\u0014\u0018\r\u001d9fIV\t1\t\u0005\u0002E\u00176\tQI\u0003\u0002G\u000f\u0006!a-\u001b7f\u0015\tA\u0015*A\u0002oS>T\u0011AS\u0001\u0005U\u00064\u0018-\u0003\u0002&\u000b\u0006AqO]1qa\u0016$\u0007\u0005\u0006\u00027\u001d\")\u0011)\u0004a\u0001\u0007\u0006AAo\\*pkJ\u001cW-F\u0001R!\t!#+\u0003\u0002TA\tq1+Z3lC\ndWmU8ve\u000e,\u0017\u0001C:fO6,g\u000e^:\u0016\u0003Y\u00032aV0c\u001d\tAVL\u0004\u0002Z96\t!L\u0003\u0002\\E\u00051AH]8pizJ\u0011AK\u0005\u0003=&\nq\u0001]1dW\u0006<W-\u0003\u0002aC\nA\u0011\n^3sCR|\'O\u0003\u0002_SA\u00111m\u001a\b\u0003I\u0016\u0004\"!W\u0015\n\u0005\u0019L\u0013A\u0002)sK\u0012,g-\u0003\u0002iS\n11\u000b\u001e:j]\u001eT!AZ\u0015\u0002\u0015\u001d,GoU3h[\u0016tG\u000f\u0006\u0002cY\")Q\u000e\u0005a\u0001]\u0006\t\u0011\u000e\u0005\u0002)_&\u0011\u0001/\u000b\u0002\u0004\u0013:$\u0018\u0001D:fO6,g\u000e^\"pk:$X#\u00018\u0003\u0011QC\u0017n\u001d+za\u0016\fq\u0001\\1ti>\u0003H/F\u0001w!\rAs/_\u0005\u0003q&\u0012aa\u00149uS>t\u0007C\u0001>~\u001b\u0005Y(B\u0001?J\u0003\u0011a\u0017M\\4\n\u0005!\\\u0018\u0001\u0002\u0013eSZ$B!!\u0001\u0002\u0006A\u0019\u00111\u0001\n\u000e\u0003)Aq!a\u0002\u0015\u0001\u0004\tI!A\u0003dQVt7\u000eE\u0002%\u0003\u0017I1!!\u0004!\u0005%\u0001\u0016\r\u001e5DQVt7.\u0001\u0005u_N#(/\u001b8h)\u0005I\u0018AB3rk\u0006d7\u000f\u0006\u0003\u0002\u0018\u0005u\u0001c\u0001\u0015\u0002\u001a%\u0019\u00111D\u0015\u0003\u000f\t{w\u000e\\3b]\"9\u0011q\u0004\fA\u0002\u0005\u0005\u0012!A8\u0011\u0007!\n\u0019#C\u0002\u0002&%\u00121!\u00118z\u0003!A\u0017m\u001d5D_\u0012,G#\u00018\u0002\u0015M$\u0018M\u001d;t/&$\b\u000e\u0006\u0003\u0002\u0018\u0005=\u0002BBA\u00191\u0001\u0007a\'\u0001\u0004uCJ<W\r^\u0001\tK:$7oV5uQR!\u0011qCA\u001c\u0011\u001d\t\t$\u0007a\u0001\u0003s\u00012\u0001JA\u001e\u0013\r\ti\u0004\t\u0002\b%\u0016d\u0007+\u0019;i\u0003)\u0011X\r\\1uSZ,Gk\u001c\u000b\u0005\u0003s\t\u0019\u0005C\u000365\u0001\u0007a\'\u0001\u0003u_&{UCAA%!\u0011\tY%!\u0015\u000e\u0005\u00055#bAA(\u0013\u0006\u0011\u0011n\\\u0005\u0005\u0003\'\niE\u0001\u0003GS2,\u0017!\u0002;p\u001d&{\u0015a\u0003:fg>dg/\u001a$s_6$2ANA.\u0011\u0015)T\u00041\u00017\u000399W\r^%oaV$8\u000b\u001e:fC6,\"!!\u0019\u0011\t\u0005-\u00131M\u0005\u0005\u0003K\niEA\u0006J]B,Ho\u0015;sK\u0006l\u0007BBA5\u0007\u0001\u0007\u0001(A\u0001q\u0003))\u0007\u0010]1oIV\u001bXM]\u000b\u0005\u0003_\ny\b\u0006\u0004\u0002r\u0005-\u0015q\u0012\u000b\u0004m\u0005M\u0004\"CA;\t\u0005\u0005\t9AA<\u0003))g/\u001b3f]\u000e,G\u0005\u000e\t\u0006I\u0005e\u0014QP\u0005\u0004\u0003w\u0002#a\u0004)bi\"\u001cuN\u001c<feRL\'\r\\3\u0011\u0007M\ny\bB\u0004\u0002\u0002\u0012\u0011\r!a!\u0003\u0003Q\u000bB!!\"\u0002\"A\u0019\u0001&a\"\n\u0007\u0005%\u0015FA\u0004O_RD\u0017N\\4\t\u000f\u00055E\u00011\u0001\u0002~\u0005\u0011a\r\r\u0005\bk\u0011\u0001\n\u00111\u00017\u0003Q)\u0007\u0010]1oIV\u001bXM\u001d\u0013eK\u001a\fW\u000f\u001c;%eU!\u0011QSAV+\t\t9JK\u00027\u00033[#!a\'\u0011\t\u0005u\u0015qU\u0007\u0003\u0003?SA!!)\u0002$\u0006IQO\\2iK\u000e\\W\r\u001a\u0006\u0004\u0003KK\u0013AC1o]>$\u0018\r^5p]&!\u0011\u0011VAP\u0005E)hn\u00195fG.,GMV1sS\u0006t7-\u001a\u0003\b\u0003\u0003+!\u0019AAB+\u0011\ty+a/\u0015\r\u0005E\u0016QXAa)\r1\u00141\u0017\u0005\n\u0003k3\u0011\u0011!a\u0002\u0003o\u000b!\"\u001a<jI\u0016t7-\u001a\u00136!\u0015!\u0013\u0011PA]!\r\u0019\u00141\u0018\u0003\b\u0003\u00033!\u0019AAB\u0011\u001d\tyL\u0002a\u0001\u0003s\u000b\u0011A\u001a\u0005\u0006k\u0019\u0001\rAN\u000b\u0005\u0003\u000b\f\t\u000e\u0006\u0003\u0002H\u0006MGc\u0001\u001c\u0002J\"I\u00111Z\u0004\u0002\u0002\u0003\u000f\u0011QZ\u0001\u000bKZLG-\u001a8dK\u00122\u0004#\u0002\u0013\u0002z\u0005=\u0007cA\u001a\u0002R\u00129\u0011\u0011Q\u0004C\u0002\u0005\r\u0005bBAG\u000f\u0001\u0007\u0011qZ\u0001\ra\u0006$\bn\u0014:eKJLgnZ\u000b\u0003\u00033\u0004BaVAnm%\u0019\u0011Q\\1\u0003\u0011=\u0013H-\u001a:j]\u001e\fQ\u0002]1uQ>\u0013H-\u001a:j]\u001e\u0004\u0003"
    )
BootstrapMethods:
  0: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 (Ljava/lang/Object;)Ljava/lang/Object;
      #158 REF_invokeStatic os/Path.$anonfun$segments$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #159 (Ljava/nio/file/Path;)Ljava/lang/String;
      #160 5
      #161 1
      #159 (Ljava/nio/file/Path;)Ljava/lang/String;
  1: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 (Ljava/lang/Object;)Ljava/lang/Object;
      #209 REF_invokeStatic os/Path.$anonfun$lastOpt$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #159 (Ljava/nio/file/Path;)Ljava/lang/String;
      #160 5
      #161 1
      #159 (Ljava/nio/file/Path;)Ljava/lang/String;
  2: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 (Ljava/lang/Object;)Ljava/lang/Object;
      #271 REF_invokeStatic os/Path.$anonfun$relativeTo$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #159 (Ljava/nio/file/Path;)Ljava/lang/String;
      #160 5
      #161 1
      #159 (Ljava/nio/file/Path;)Ljava/lang/String;
  3: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #153 (Ljava/lang/Object;)Ljava/lang/Object;
      #343 REF_invokeStatic os/Path.$anonfun$relativeTo$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #344 (Ljava/lang/String;)Ljava/lang/Object;
      #160 5
      #161 1
      #344 (Ljava/lang/String;)Ljava/lang/Object;
  4: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #443 ()Ljava/lang/Object;
      #446 REF_invokeStatic os/Path.$anonfun$new$1:(Los/Path;)Ljava/lang/String;
      #447 ()Ljava/lang/String;
      #160 5
      #161 1
      #447 ()Ljava/lang/String;
  5: #471 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #209 REF_invokeStatic os/Path.$anonfun$lastOpt$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #446 REF_invokeStatic os/Path.$anonfun$new$1:(Los/Path;)Ljava/lang/String;
      #271 REF_invokeStatic os/Path.$anonfun$relativeTo$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #343 REF_invokeStatic os/Path.$anonfun$relativeTo$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #158 REF_invokeStatic os/Path.$anonfun$segments$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  ScalaInlineInfo: length = 0xA9 (unknown attribute)
   01 00 00 21 00 CE 00 9B 01 01 92 01 93 01 01 0C
   00 9B 01 01 A8 01 02 01 01 53 01 54 01 00 9A 00
   9B 01 00 D8 01 89 00 00 D8 00 D9 00 00 7C 00 EA
   00 00 5B 00 54 00 00 FD 00 FE 00 00 EF 00 F0 00
   00 53 00 54 00 01 7D 01 7E 00 00 B0 00 B1 00 00
   F5 00 BC 00 00 5F 00 54 00 00 C0 00 C1 00 01 06
   01 83 00 01 06 01 07 00 01 7B 01 7C 00 00 BB 00
   BC 00 00 80 01 8C 00 00 80 00 81 00 00 F8 01 86
   00 00 F8 00 F9 00 00 63 00 64 00 01 75 01 76 00
   01 7A 00 6D 00 00 70 00 71 00 00 70 01 8F 00 00
   B7 00 54 00 00 2B 00 6D 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
