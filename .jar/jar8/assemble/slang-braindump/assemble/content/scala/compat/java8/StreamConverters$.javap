Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/compat/java8/StreamConverters$.class
  Last modified May 29, 2022; size 17601 bytes
  SHA-256 checksum a898b7cbbbab07a265308ae29731955560e58b2f04a959bb1d595c1ad2917503
  Compiled from "StreamConverters.scala"
public final class scala.compat.java8.StreamConverters$ implements scala.compat.java8.StreamExtensions,scala.compat.java8.converterImpl.Priority1AccumulatorConverters
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/compat/java8/StreamConverters$
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 38, attributes: 4
Constant pool:
    #1 = Utf8               scala/compat/java8/StreamConverters$
    #2 = Class              #1            // scala/compat/java8/StreamConverters$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/compat/java8/StreamExtensions
    #6 = Class              #5            // scala/compat/java8/StreamExtensions
    #7 = Utf8               scala/compat/java8/converterImpl/Priority1AccumulatorConverters
    #8 = Class              #7            // scala/compat/java8/converterImpl/Priority1AccumulatorConverters
    #9 = Utf8               StreamConverters.scala
   #10 = Utf8               scala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream
   #11 = Class              #10           // scala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream
   #12 = Utf8               AnyArrayHasSeqParStream
   #13 = Utf8               scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
   #14 = Class              #13           // scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream
   #15 = Utf8               ByteArrayHasSeqParStream
   #16 = Utf8               scala/compat/java8/StreamExtensions$CharArrayHasSeqParStream
   #17 = Class              #16           // scala/compat/java8/StreamExtensions$CharArrayHasSeqParStream
   #18 = Utf8               CharArrayHasSeqParStream
   #19 = Utf8               scala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream
   #20 = Class              #19           // scala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream
   #21 = Utf8               DoubleArrayHasSeqParStream
   #22 = Utf8               scala/compat/java8/StreamExtensions$DoubleStreamHasToScala
   #23 = Class              #22           // scala/compat/java8/StreamExtensions$DoubleStreamHasToScala
   #24 = Utf8               DoubleStreamHasToScala
   #25 = Utf8               scala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream
   #26 = Class              #25           // scala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream
   #27 = Utf8               FloatArrayHasSeqParStream
   #28 = Utf8               scala/compat/java8/StreamExtensions$IntArrayHasSeqParStream
   #29 = Class              #28           // scala/compat/java8/StreamExtensions$IntArrayHasSeqParStream
   #30 = Utf8               IntArrayHasSeqParStream
   #31 = Utf8               scala/compat/java8/StreamExtensions$IntStreamHasToScala
   #32 = Class              #31           // scala/compat/java8/StreamExtensions$IntStreamHasToScala
   #33 = Utf8               IntStreamHasToScala
   #34 = Utf8               scala/compat/java8/StreamExtensions$IterableHasSeqStream
   #35 = Class              #34           // scala/compat/java8/StreamExtensions$IterableHasSeqStream
   #36 = Utf8               IterableHasSeqStream
   #37 = Utf8               scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
   #38 = Class              #37           // scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream
   #39 = Utf8               IterableNonGenericHasParStream
   #40 = Utf8               scala/compat/java8/StreamExtensions$LongArrayHasSeqParStream
   #41 = Class              #40           // scala/compat/java8/StreamExtensions$LongArrayHasSeqParStream
   #42 = Utf8               LongArrayHasSeqParStream
   #43 = Utf8               scala/compat/java8/StreamExtensions$LongStreamHasToScala
   #44 = Class              #43           // scala/compat/java8/StreamExtensions$LongStreamHasToScala
   #45 = Utf8               LongStreamHasToScala
   #46 = Utf8               scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
   #47 = Class              #46           // scala/compat/java8/StreamExtensions$MapHasParKeyValueStream
   #48 = Utf8               MapHasParKeyValueStream
   #49 = Utf8               scala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream
   #50 = Class              #49           // scala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream
   #51 = Utf8               MapHasSeqKeyValueStream
   #52 = Utf8               scala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream
   #53 = Class              #52           // scala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream
   #54 = Utf8               ShortArrayHasSeqParStream
   #55 = Utf8               scala/compat/java8/StreamExtensions$StepperHasParStream
   #56 = Class              #55           // scala/compat/java8/StreamExtensions$StepperHasParStream
   #57 = Utf8               StepperHasParStream
   #58 = Utf8               scala/compat/java8/StreamExtensions$StepperHasSeqStream
   #59 = Class              #58           // scala/compat/java8/StreamExtensions$StepperHasSeqStream
   #60 = Utf8               StepperHasSeqStream
   #61 = Utf8               scala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive
   #62 = Class              #61           // scala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive
   #63 = Utf8               StreamDoubleHasAccumulatePrimitive
   #64 = Utf8               scala/compat/java8/StreamExtensions$StreamHasToScala
   #65 = Class              #64           // scala/compat/java8/StreamExtensions$StreamHasToScala
   #66 = Utf8               StreamHasToScala
   #67 = Utf8               scala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive
   #68 = Class              #67           // scala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive
   #69 = Utf8               StreamIntHasAccumulatePrimitive
   #70 = Utf8               scala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive
   #71 = Class              #70           // scala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive
   #72 = Utf8               StreamJDoubleHasAccumulatePrimitive
   #73 = Utf8               scala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive
   #74 = Class              #73           // scala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive
   #75 = Utf8               StreamJIntegerHasAccumulatePrimitive
   #76 = Utf8               scala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive
   #77 = Class              #76           // scala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive
   #78 = Utf8               StreamJLongHasAccumulatePrimitive
   #79 = Utf8               scala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive
   #80 = Class              #79           // scala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive
   #81 = Utf8               StreamLongHasAccumulatePrimitive
   #82 = Utf8               MODULE$
   #83 = Utf8               Lscala/compat/java8/StreamConverters$;
   #84 = Utf8               <clinit>
   #85 = Utf8               ()V
   #86 = Utf8               <init>
   #87 = NameAndType        #86:#85       // "<init>":()V
   #88 = Methodref          #2.#87        // scala/compat/java8/StreamConverters$."<init>":()V
   #89 = NameAndType        #82:#83       // MODULE$:Lscala/compat/java8/StreamConverters$;
   #90 = Fieldref           #2.#89        // scala/compat/java8/StreamConverters$.MODULE$:Lscala/compat/java8/StreamConverters$;
   #91 = Utf8               $init$
   #92 = Utf8               (Lscala/compat/java8/StreamExtensions;)V
   #93 = NameAndType        #91:#92       // $init$:(Lscala/compat/java8/StreamExtensions;)V
   #94 = InterfaceMethodref #6.#93        // scala/compat/java8/StreamExtensions.$init$:(Lscala/compat/java8/StreamExtensions;)V
   #95 = Utf8               scala/compat/java8/converterImpl/Priority3AccumulatorConverters
   #96 = Class              #95           // scala/compat/java8/converterImpl/Priority3AccumulatorConverters
   #97 = Utf8               (Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;)V
   #98 = NameAndType        #91:#97       // $init$:(Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;)V
   #99 = InterfaceMethodref #96.#98       // scala/compat/java8/converterImpl/Priority3AccumulatorConverters.$init$:(Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;)V
  #100 = Utf8               scala/compat/java8/converterImpl/Priority2AccumulatorConverters
  #101 = Class              #100          // scala/compat/java8/converterImpl/Priority2AccumulatorConverters
  #102 = Utf8               (Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;)V
  #103 = NameAndType        #91:#102      // $init$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;)V
  #104 = InterfaceMethodref #101.#103     // scala/compat/java8/converterImpl/Priority2AccumulatorConverters.$init$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;)V
  #105 = Utf8               (Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;)V
  #106 = NameAndType        #91:#105      // $init$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;)V
  #107 = InterfaceMethodref #8.#106       // scala/compat/java8/converterImpl/Priority1AccumulatorConverters.$init$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;)V
  #108 = Utf8               accumulateDoubleArray
  #109 = Utf8               ([D)[D
  #110 = Utf8               underlying
  #111 = Utf8               accumulateDoubleArray$
  #112 = Utf8               (Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[D)[D
  #113 = NameAndType        #111:#112     // accumulateDoubleArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[D)[D
  #114 = InterfaceMethodref #8.#113       // scala/compat/java8/converterImpl/Priority1AccumulatorConverters.accumulateDoubleArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[D)[D
  #115 = Utf8               this
  #116 = Utf8               [D
  #117 = Utf8               accumulateIntArray
  #118 = Utf8               ([I)[I
  #119 = Utf8               accumulateIntArray$
  #120 = Utf8               (Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[I)[I
  #121 = NameAndType        #119:#120     // accumulateIntArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[I)[I
  #122 = InterfaceMethodref #8.#121       // scala/compat/java8/converterImpl/Priority1AccumulatorConverters.accumulateIntArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[I)[I
  #123 = Utf8               [I
  #124 = Utf8               accumulateLongArray
  #125 = Utf8               ([J)[J
  #126 = Utf8               accumulateLongArray$
  #127 = Utf8               (Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[J)[J
  #128 = NameAndType        #126:#127     // accumulateLongArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[J)[J
  #129 = InterfaceMethodref #8.#128       // scala/compat/java8/converterImpl/Priority1AccumulatorConverters.accumulateLongArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[J)[J
  #130 = Utf8               [J
  #131 = Utf8               accumulateDoubleCollection
  #132 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #133 = Utf8               (Lscala/collection/IterableOnce<Ljava/lang/Object;>;)Lscala/collection/IterableOnce<Ljava/lang/Object;>;
  #134 = Utf8               accumulateDoubleCollection$
  #135 = Utf8               (Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #136 = NameAndType        #134:#135     // accumulateDoubleCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #137 = InterfaceMethodref #101.#136     // scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateDoubleCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #138 = Utf8               Lscala/collection/IterableOnce;
  #139 = Utf8               accumulateIntCollection
  #140 = Utf8               accumulateIntCollection$
  #141 = NameAndType        #140:#135     // accumulateIntCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #142 = InterfaceMethodref #101.#141     // scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateIntCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #143 = Utf8               accumulateLongCollection
  #144 = Utf8               accumulateLongCollection$
  #145 = NameAndType        #144:#135     // accumulateLongCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #146 = InterfaceMethodref #101.#145     // scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateLongCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #147 = Utf8               accumulateAnyArray
  #148 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #149 = Utf8               <A:Ljava/lang/Object;>(Ljava/lang/Object;)Ljava/lang/Object;
  #150 = Utf8               accumulateAnyArray$
  #151 = Utf8               (Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Ljava/lang/Object;)Ljava/lang/Object;
  #152 = NameAndType        #150:#151     // accumulateAnyArray$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Ljava/lang/Object;)Ljava/lang/Object;
  #153 = InterfaceMethodref #101.#152     // scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateAnyArray$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Ljava/lang/Object;)Ljava/lang/Object;
  #154 = Utf8               Ljava/lang/Object;
  #155 = Utf8               collectionCanAccumulate
  #156 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/collection/IterableOnce<TA;>;
  #157 = Utf8               collectionCanAccumulate$
  #158 = Utf8               (Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #159 = NameAndType        #157:#158     // collectionCanAccumulate$:(Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #160 = InterfaceMethodref #96.#159      // scala/compat/java8/converterImpl/Priority3AccumulatorConverters.collectionCanAccumulate$:(Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
  #161 = Utf8               richStepper
  #162 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #163 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/converterImpl/StepperExtensions<TA;>;
  #164 = Utf8               s
  #165 = Utf8               richStepper$
  #166 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #167 = NameAndType        #165:#166     // richStepper$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #168 = InterfaceMethodref #6.#167       // scala/compat/java8/StreamExtensions.richStepper$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
  #169 = Utf8               Lscala/collection/Stepper;
  #170 = Utf8               (Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #171 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream<TA;>;
  #172 = Utf8               cc
  #173 = Utf8               IterableHasSeqStream$
  #174 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #175 = NameAndType        #173:#174     // IterableHasSeqStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #176 = InterfaceMethodref #6.#175       // scala/compat/java8/StreamExtensions.IterableHasSeqStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
  #177 = Utf8               (Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #178 = Utf8               <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>(TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream<TA;TC;>;
  #179 = Utf8               c
  #180 = Utf8               ev
  #181 = Utf8               IterableNonGenericHasParStream$
  #182 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #183 = NameAndType        #181:#182     // IterableNonGenericHasParStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #184 = InterfaceMethodref #6.#183       // scala/compat/java8/StreamExtensions.IterableNonGenericHasParStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
  #185 = Utf8               Lscala/$less$colon$less;
  #186 = Utf8               (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #187 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream<TK;TV;TCC;>;
  #188 = Utf8               MapHasSeqKeyValueStream$
  #189 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #190 = NameAndType        #188:#189     // MapHasSeqKeyValueStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #191 = InterfaceMethodref #6.#190       // scala/compat/java8/StreamExtensions.MapHasSeqKeyValueStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
  #192 = Utf8               Lscala/collection/MapOps;
  #193 = Utf8               (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #194 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream<TK;TV;TCC;>;
  #195 = Utf8               MapHasParKeyValueStream$
  #196 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #197 = NameAndType        #195:#196     // MapHasParKeyValueStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #198 = InterfaceMethodref #6.#197       // scala/compat/java8/StreamExtensions.MapHasParKeyValueStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
  #199 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #200 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream<TA;>;
  #201 = Utf8               stepper
  #202 = Utf8               StepperHasSeqStream$
  #203 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #204 = NameAndType        #202:#203     // StepperHasSeqStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #205 = InterfaceMethodref #6.#204       // scala/compat/java8/StreamExtensions.StepperHasSeqStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
  #206 = Utf8               (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #207 = Utf8               <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasParStream<TA;>;
  #208 = Utf8               StepperHasParStream$
  #209 = Utf8               (Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #210 = NameAndType        #208:#209     // StepperHasParStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #211 = InterfaceMethodref #6.#210       // scala/compat/java8/StreamExtensions.StepperHasParStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
  #212 = Utf8               ([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #213 = Utf8               a
  #214 = Utf8               DoubleArrayHasSeqParStream$
  #215 = Utf8               (Lscala/compat/java8/StreamExtensions;[D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #216 = NameAndType        #214:#215     // DoubleArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #217 = InterfaceMethodref #6.#216       // scala/compat/java8/StreamExtensions.DoubleArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
  #218 = Utf8               ([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #219 = Utf8               IntArrayHasSeqParStream$
  #220 = Utf8               (Lscala/compat/java8/StreamExtensions;[I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #221 = NameAndType        #219:#220     // IntArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #222 = InterfaceMethodref #6.#221       // scala/compat/java8/StreamExtensions.IntArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
  #223 = Utf8               ([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #224 = Utf8               LongArrayHasSeqParStream$
  #225 = Utf8               (Lscala/compat/java8/StreamExtensions;[J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #226 = NameAndType        #224:#225     // LongArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #227 = InterfaceMethodref #6.#226       // scala/compat/java8/StreamExtensions.LongArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
  #228 = Utf8               ([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #229 = Utf8               <A:Ljava/lang/Object;>([TA;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream<TA;>;
  #230 = Utf8               AnyArrayHasSeqParStream$
  #231 = Utf8               (Lscala/compat/java8/StreamExtensions;[Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #232 = NameAndType        #230:#231     // AnyArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #233 = InterfaceMethodref #6.#232       // scala/compat/java8/StreamExtensions.AnyArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
  #234 = Utf8               [Ljava/lang/Object;
  #235 = Utf8               ([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #236 = Utf8               ByteArrayHasSeqParStream$
  #237 = Utf8               (Lscala/compat/java8/StreamExtensions;[B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #238 = NameAndType        #236:#237     // ByteArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #239 = InterfaceMethodref #6.#238       // scala/compat/java8/StreamExtensions.ByteArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
  #240 = Utf8               [B
  #241 = Utf8               ([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #242 = Utf8               ShortArrayHasSeqParStream$
  #243 = Utf8               (Lscala/compat/java8/StreamExtensions;[S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #244 = NameAndType        #242:#243     // ShortArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #245 = InterfaceMethodref #6.#244       // scala/compat/java8/StreamExtensions.ShortArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
  #246 = Utf8               [S
  #247 = Utf8               ([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #248 = Utf8               CharArrayHasSeqParStream$
  #249 = Utf8               (Lscala/compat/java8/StreamExtensions;[C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #250 = NameAndType        #248:#249     // CharArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #251 = InterfaceMethodref #6.#250       // scala/compat/java8/StreamExtensions.CharArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
  #252 = Utf8               [C
  #253 = Utf8               ([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #254 = Utf8               FloatArrayHasSeqParStream$
  #255 = Utf8               (Lscala/compat/java8/StreamExtensions;[F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #256 = NameAndType        #254:#255     // FloatArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #257 = InterfaceMethodref #6.#256       // scala/compat/java8/StreamExtensions.FloatArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
  #258 = Utf8               [F
  #259 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #260 = Utf8               <A:Ljava/lang/Object;>(Ljava/util/stream/Stream<TA;>;)Lscala/compat/java8/StreamExtensions$StreamHasToScala<TA;>;
  #261 = Utf8               stream
  #262 = Utf8               StreamHasToScala$
  #263 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #264 = NameAndType        #262:#263     // StreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #265 = InterfaceMethodref #6.#264       // scala/compat/java8/StreamExtensions.StreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
  #266 = Utf8               Ljava/util/stream/Stream;
  #267 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #268 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #269 = Utf8               StreamIntHasAccumulatePrimitive$
  #270 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #271 = NameAndType        #269:#270     // StreamIntHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #272 = InterfaceMethodref #6.#271       // scala/compat/java8/StreamExtensions.StreamIntHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
  #273 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #274 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #275 = Utf8               StreamLongHasAccumulatePrimitive$
  #276 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #277 = NameAndType        #275:#276     // StreamLongHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #278 = InterfaceMethodref #6.#277       // scala/compat/java8/StreamExtensions.StreamLongHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
  #279 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #280 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #281 = Utf8               StreamDoubleHasAccumulatePrimitive$
  #282 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #283 = NameAndType        #281:#282     // StreamDoubleHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #284 = InterfaceMethodref #6.#283       // scala/compat/java8/StreamExtensions.StreamDoubleHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
  #285 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #286 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Integer;>;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #287 = Utf8               StreamJIntegerHasAccumulatePrimitive$
  #288 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #289 = NameAndType        #287:#288     // StreamJIntegerHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #290 = InterfaceMethodref #6.#289       // scala/compat/java8/StreamExtensions.StreamJIntegerHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
  #291 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #292 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Long;>;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #293 = Utf8               StreamJLongHasAccumulatePrimitive$
  #294 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #295 = NameAndType        #293:#294     // StreamJLongHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #296 = InterfaceMethodref #6.#295       // scala/compat/java8/StreamExtensions.StreamJLongHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
  #297 = Utf8               (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #298 = Utf8               (Ljava/util/stream/Stream<Ljava/lang/Double;>;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #299 = Utf8               StreamJDoubleHasAccumulatePrimitive$
  #300 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #301 = NameAndType        #299:#300     // StreamJDoubleHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #302 = InterfaceMethodref #6.#301       // scala/compat/java8/StreamExtensions.StreamJDoubleHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
  #303 = Utf8               (Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #304 = Utf8               IntStreamHasToScala$
  #305 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #306 = NameAndType        #304:#305     // IntStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #307 = InterfaceMethodref #6.#306       // scala/compat/java8/StreamExtensions.IntStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
  #308 = Utf8               Ljava/util/stream/IntStream;
  #309 = Utf8               (Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #310 = Utf8               LongStreamHasToScala$
  #311 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #312 = NameAndType        #310:#311     // LongStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #313 = InterfaceMethodref #6.#312       // scala/compat/java8/StreamExtensions.LongStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
  #314 = Utf8               Ljava/util/stream/LongStream;
  #315 = Utf8               (Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #316 = Utf8               DoubleStreamHasToScala$
  #317 = Utf8               (Lscala/compat/java8/StreamExtensions;Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #318 = NameAndType        #316:#317     // DoubleStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #319 = InterfaceMethodref #6.#318       // scala/compat/java8/StreamExtensions.DoubleStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
  #320 = Utf8               Ljava/util/stream/DoubleStream;
  #321 = Utf8               richIntStepper
  #322 = Utf8               (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
  #323 = Utf8               scala/compat/java8/converterImpl/StepperExtensions$mcI$sp
  #324 = Class              #323          // scala/compat/java8/converterImpl/StepperExtensions$mcI$sp
  #325 = Utf8               (Lscala/collection/Stepper;)V
  #326 = NameAndType        #86:#325      // "<init>":(Lscala/collection/Stepper;)V
  #327 = Methodref          #324.#326     // scala/compat/java8/converterImpl/StepperExtensions$mcI$sp."<init>":(Lscala/collection/Stepper;)V
  #328 = Utf8               richLongStepper
  #329 = Utf8               scala/compat/java8/converterImpl/StepperExtensions$mcJ$sp
  #330 = Class              #329          // scala/compat/java8/converterImpl/StepperExtensions$mcJ$sp
  #331 = Methodref          #330.#326     // scala/compat/java8/converterImpl/StepperExtensions$mcJ$sp."<init>":(Lscala/collection/Stepper;)V
  #332 = Utf8               richDoubleStepper
  #333 = Utf8               scala/compat/java8/converterImpl/StepperExtensions$mcD$sp
  #334 = Class              #333          // scala/compat/java8/converterImpl/StepperExtensions$mcD$sp
  #335 = Methodref          #334.#326     // scala/compat/java8/converterImpl/StepperExtensions$mcD$sp."<init>":(Lscala/collection/Stepper;)V
  #336 = Methodref          #4.#87        // java/lang/Object."<init>":()V
  #337 = Utf8               Code
  #338 = Utf8               LineNumberTable
  #339 = Utf8               LocalVariableTable
  #340 = Utf8               MethodParameters
  #341 = Utf8               Signature
  #342 = Utf8               InnerClasses
  #343 = Utf8               SourceFile
  #344 = Utf8               ScalaInlineInfo
  #345 = Utf8               Scala
{
  public static final scala.compat.java8.StreamConverters$ MODULE$;
    descriptor: Lscala/compat/java8/StreamConverters$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class scala/compat/java8/StreamConverters$
         3: dup
         4: invokespecial #88                 // Method "<init>":()V
         7: putstatic     #90                 // Field MODULE$:Lscala/compat/java8/StreamConverters$;
        10: getstatic     #90                 // Field MODULE$:Lscala/compat/java8/StreamConverters$;
        13: invokestatic  #94                 // InterfaceMethod scala/compat/java8/StreamExtensions.$init$:(Lscala/compat/java8/StreamExtensions;)V
        16: getstatic     #90                 // Field MODULE$:Lscala/compat/java8/StreamConverters$;
        19: invokestatic  #99                 // InterfaceMethod scala/compat/java8/converterImpl/Priority3AccumulatorConverters.$init$:(Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;)V
        22: getstatic     #90                 // Field MODULE$:Lscala/compat/java8/StreamConverters$;
        25: invokestatic  #104                // InterfaceMethod scala/compat/java8/converterImpl/Priority2AccumulatorConverters.$init$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;)V
        28: getstatic     #90                 // Field MODULE$:Lscala/compat/java8/StreamConverters$;
        31: invokestatic  #107                // InterfaceMethod scala/compat/java8/converterImpl/Priority1AccumulatorConverters.$init$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;)V
        34: return
      LineNumberTable:
        line 499: 0
        line 500: 10
        line 499: 34

  public double[] accumulateDoubleArray(double[]);
    descriptor: ([D)[D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #114                // InterfaceMethod scala/compat/java8/converterImpl/Priority1AccumulatorConverters.accumulateDoubleArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[D)[D
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   [D
    MethodParameters:
      Name                           Flags
      underlying                     final

  public int[] accumulateIntArray(int[]);
    descriptor: ([I)[I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #122                // InterfaceMethod scala/compat/java8/converterImpl/Priority1AccumulatorConverters.accumulateIntArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[I)[I
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   [I
    MethodParameters:
      Name                           Flags
      underlying                     final

  public long[] accumulateLongArray(long[]);
    descriptor: ([J)[J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #129                // InterfaceMethod scala/compat/java8/converterImpl/Priority1AccumulatorConverters.accumulateLongArray$:(Lscala/compat/java8/converterImpl/Priority1AccumulatorConverters;[J)[J
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   [J
    MethodParameters:
      Name                           Flags
      underlying                     final

  public scala.collection.IterableOnce<java.lang.Object> accumulateDoubleCollection(scala.collection.IterableOnce<java.lang.Object>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #137                // InterfaceMethod scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateDoubleCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   Lscala/collection/IterableOnce;
    Signature: #133                         // (Lscala/collection/IterableOnce<Ljava/lang/Object;>;)Lscala/collection/IterableOnce<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public scala.collection.IterableOnce<java.lang.Object> accumulateIntCollection(scala.collection.IterableOnce<java.lang.Object>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #142                // InterfaceMethod scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateIntCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   Lscala/collection/IterableOnce;
    Signature: #133                         // (Lscala/collection/IterableOnce<Ljava/lang/Object;>;)Lscala/collection/IterableOnce<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public scala.collection.IterableOnce<java.lang.Object> accumulateLongCollection(scala.collection.IterableOnce<java.lang.Object>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #146                // InterfaceMethod scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateLongCollection$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   Lscala/collection/IterableOnce;
    Signature: #133                         // (Lscala/collection/IterableOnce<Ljava/lang/Object;>;)Lscala/collection/IterableOnce<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public <A extends java.lang.Object> java.lang.Object accumulateAnyArray(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #153                // InterfaceMethod scala/compat/java8/converterImpl/Priority2AccumulatorConverters.accumulateAnyArray$:(Lscala/compat/java8/converterImpl/Priority2AccumulatorConverters;Ljava/lang/Object;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   Ljava/lang/Object;
    Signature: #149                         // <A:Ljava/lang/Object;>(Ljava/lang/Object;)Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public <A extends java.lang.Object> scala.collection.IterableOnce<A> collectionCanAccumulate(scala.collection.IterableOnce<A>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #160                // InterfaceMethod scala/compat/java8/converterImpl/Priority3AccumulatorConverters.collectionCanAccumulate$:(Lscala/compat/java8/converterImpl/Priority3AccumulatorConverters;Lscala/collection/IterableOnce;)Lscala/collection/IterableOnce;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 underlying   Lscala/collection/IterableOnce;
    Signature: #156                         // <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/collection/IterableOnce<TA;>;
    MethodParameters:
      Name                           Flags
      underlying                     final

  public <A extends java.lang.Object> scala.compat.java8.converterImpl.StepperExtensions<A> richStepper(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #168                // InterfaceMethod scala/compat/java8/StreamExtensions.richStepper$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Lscala/collection/Stepper;
    Signature: #163                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/converterImpl/StepperExtensions<TA;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <A extends java.lang.Object> scala.compat.java8.StreamExtensions$IterableHasSeqStream<A> IterableHasSeqStream(scala.collection.IterableOnce<A>);
    descriptor: (Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #176                // InterfaceMethod scala/compat/java8/StreamExtensions.IterableHasSeqStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1    cc   Lscala/collection/IterableOnce;
    Signature: #171                         // <A:Ljava/lang/Object;>(Lscala/collection/IterableOnce<TA;>;)Lscala/compat/java8/StreamExtensions$IterableHasSeqStream<TA;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public <A extends java.lang.Object, C extends scala.collection.IterableOnce<?>> scala.compat.java8.StreamExtensions$IterableNonGenericHasParStream<A, C> IterableNonGenericHasParStream(C, scala.$less$colon$less<C, scala.collection.IterableOnce<A>>);
    descriptor: (Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #184                // InterfaceMethod scala/compat/java8/StreamExtensions.IterableNonGenericHasParStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/IterableOnce;Lscala/$less$colon$less;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream;
         6: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/compat/java8/StreamConverters$;
            0       7     1     c   Lscala/collection/IterableOnce;
            0       7     2    ev   Lscala/$less$colon$less;
    Signature: #178                         // <A:Ljava/lang/Object;C::Lscala/collection/IterableOnce<*>;>(TC;Lscala/$less$colon$less<TC;Lscala/collection/IterableOnce<TA;>;>;)Lscala/compat/java8/StreamExtensions$IterableNonGenericHasParStream<TA;TC;>;
    MethodParameters:
      Name                           Flags
      c                              final
      ev                             final

  public <K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> scala.compat.java8.StreamExtensions$MapHasSeqKeyValueStream<K, V, CC> MapHasSeqKeyValueStream(CC);
    descriptor: (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #191                // InterfaceMethod scala/compat/java8/StreamExtensions.MapHasSeqKeyValueStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1    cc   Lscala/collection/MapOps;
    Signature: #187                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream<TK;TV;TCC;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public <K extends java.lang.Object, V extends java.lang.Object, CC extends scala.collection.MapOps<java.lang.Object, java.lang.Object, scala.collection.Map, ?>> scala.compat.java8.StreamExtensions$MapHasParKeyValueStream<K, V, CC> MapHasParKeyValueStream(CC);
    descriptor: (Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #198                // InterfaceMethod scala/compat/java8/StreamExtensions.MapHasParKeyValueStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/MapOps;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1    cc   Lscala/collection/MapOps;
    Signature: #194                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;CC::Lscala/collection/MapOps<Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/Map;*>;>(TCC;)Lscala/compat/java8/StreamExtensions$MapHasParKeyValueStream<TK;TV;TCC;>;
    MethodParameters:
      Name                           Flags
      cc                             final

  public <A extends java.lang.Object> scala.compat.java8.StreamExtensions$StepperHasSeqStream<A> StepperHasSeqStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #205                // InterfaceMethod scala/compat/java8/StreamExtensions.StepperHasSeqStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 stepper   Lscala/collection/Stepper;
    Signature: #200                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasSeqStream<TA;>;
    MethodParameters:
      Name                           Flags
      stepper                        final

  public <A extends java.lang.Object> scala.compat.java8.StreamExtensions$StepperHasParStream<A> StepperHasParStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #211                // InterfaceMethod scala/compat/java8/StreamExtensions.StepperHasParStream$:(Lscala/compat/java8/StreamExtensions;Lscala/collection/Stepper;)Lscala/compat/java8/StreamExtensions$StepperHasParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 stepper   Lscala/collection/Stepper;
    Signature: #207                         // <A:Ljava/lang/Object;>(Lscala/collection/Stepper<TA;>;)Lscala/compat/java8/StreamExtensions$StepperHasParStream<TA;>;
    MethodParameters:
      Name                           Flags
      stepper                        final

  public scala.compat.java8.StreamExtensions$DoubleArrayHasSeqParStream DoubleArrayHasSeqParStream(double[]);
    descriptor: ([D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #217                // InterfaceMethod scala/compat/java8/StreamExtensions.DoubleArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[D)Lscala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [D
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.compat.java8.StreamExtensions$IntArrayHasSeqParStream IntArrayHasSeqParStream(int[]);
    descriptor: ([I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #222                // InterfaceMethod scala/compat/java8/StreamExtensions.IntArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[I)Lscala/compat/java8/StreamExtensions$IntArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [I
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.compat.java8.StreamExtensions$LongArrayHasSeqParStream LongArrayHasSeqParStream(long[]);
    descriptor: ([J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #227                // InterfaceMethod scala/compat/java8/StreamExtensions.LongArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[J)Lscala/compat/java8/StreamExtensions$LongArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [J
    MethodParameters:
      Name                           Flags
      a                              final

  public <A extends java.lang.Object> scala.compat.java8.StreamExtensions$AnyArrayHasSeqParStream<A> AnyArrayHasSeqParStream(A[]);
    descriptor: ([Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #233                // InterfaceMethod scala/compat/java8/StreamExtensions.AnyArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[Ljava/lang/Object;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [Ljava/lang/Object;
    Signature: #229                         // <A:Ljava/lang/Object;>([TA;)Lscala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream<TA;>;
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.compat.java8.StreamExtensions$ByteArrayHasSeqParStream ByteArrayHasSeqParStream(byte[]);
    descriptor: ([B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #239                // InterfaceMethod scala/compat/java8/StreamExtensions.ByteArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[B)Lscala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [B
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.compat.java8.StreamExtensions$ShortArrayHasSeqParStream ShortArrayHasSeqParStream(short[]);
    descriptor: ([S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #245                // InterfaceMethod scala/compat/java8/StreamExtensions.ShortArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[S)Lscala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [S
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.compat.java8.StreamExtensions$CharArrayHasSeqParStream CharArrayHasSeqParStream(char[]);
    descriptor: ([C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #251                // InterfaceMethod scala/compat/java8/StreamExtensions.CharArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[C)Lscala/compat/java8/StreamExtensions$CharArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [C
    MethodParameters:
      Name                           Flags
      a                              final

  public scala.compat.java8.StreamExtensions$FloatArrayHasSeqParStream FloatArrayHasSeqParStream(float[]);
    descriptor: ([F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #257                // InterfaceMethod scala/compat/java8/StreamExtensions.FloatArrayHasSeqParStream$:(Lscala/compat/java8/StreamExtensions;[F)Lscala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     a   [F
    MethodParameters:
      Name                           Flags
      a                              final

  public <A extends java.lang.Object> scala.compat.java8.StreamExtensions$StreamHasToScala<A> StreamHasToScala(java.util.stream.Stream<A>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #265                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamHasToScala;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 stream   Ljava/util/stream/Stream;
    Signature: #260                         // <A:Ljava/lang/Object;>(Ljava/util/stream/Stream<TA;>;)Lscala/compat/java8/StreamExtensions$StreamHasToScala<TA;>;
    MethodParameters:
      Name                           Flags
      stream                         final

  public scala.compat.java8.StreamExtensions$StreamIntHasAccumulatePrimitive StreamIntHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #272                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamIntHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Ljava/util/stream/Stream;
    Signature: #268                         // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.StreamExtensions$StreamLongHasAccumulatePrimitive StreamLongHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #278                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamLongHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Ljava/util/stream/Stream;
    Signature: #274                         // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.StreamExtensions$StreamDoubleHasAccumulatePrimitive StreamDoubleHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Object>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #284                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamDoubleHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Ljava/util/stream/Stream;
    Signature: #280                         // (Ljava/util/stream/Stream<Ljava/lang/Object;>;)Lscala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.StreamExtensions$StreamJIntegerHasAccumulatePrimitive StreamJIntegerHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Integer>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #290                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamJIntegerHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Ljava/util/stream/Stream;
    Signature: #286                         // (Ljava/util/stream/Stream<Ljava/lang/Integer;>;)Lscala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.StreamExtensions$StreamJLongHasAccumulatePrimitive StreamJLongHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Long>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #296                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamJLongHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Ljava/util/stream/Stream;
    Signature: #292                         // (Ljava/util/stream/Stream<Ljava/lang/Long;>;)Lscala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.StreamExtensions$StreamJDoubleHasAccumulatePrimitive StreamJDoubleHasAccumulatePrimitive(java.util.stream.Stream<java.lang.Double>);
    descriptor: (Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #302                // InterfaceMethod scala/compat/java8/StreamExtensions.StreamJDoubleHasAccumulatePrimitive$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/Stream;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1     s   Ljava/util/stream/Stream;
    Signature: #298                         // (Ljava/util/stream/Stream<Ljava/lang/Double;>;)Lscala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.StreamExtensions$IntStreamHasToScala IntStreamHasToScala(java.util.stream.IntStream);
    descriptor: (Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #307                // InterfaceMethod scala/compat/java8/StreamExtensions.IntStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/IntStream;)Lscala/compat/java8/StreamExtensions$IntStreamHasToScala;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 stream   Ljava/util/stream/IntStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public scala.compat.java8.StreamExtensions$LongStreamHasToScala LongStreamHasToScala(java.util.stream.LongStream);
    descriptor: (Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #313                // InterfaceMethod scala/compat/java8/StreamExtensions.LongStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/LongStream;)Lscala/compat/java8/StreamExtensions$LongStreamHasToScala;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 stream   Ljava/util/stream/LongStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public scala.compat.java8.StreamExtensions$DoubleStreamHasToScala DoubleStreamHasToScala(java.util.stream.DoubleStream);
    descriptor: (Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #319                // InterfaceMethod scala/compat/java8/StreamExtensions.DoubleStreamHasToScala$:(Lscala/compat/java8/StreamExtensions;Ljava/util/stream/DoubleStream;)Lscala/compat/java8/StreamExtensions$DoubleStreamHasToScala;
         5: areturn
      LineNumberTable:
        line 499: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/compat/java8/StreamConverters$;
            0       6     1 stream   Ljava/util/stream/DoubleStream;
    MethodParameters:
      Name                           Flags
      stream                         final

  public scala.compat.java8.converterImpl.StepperExtensions<java.lang.Object> richIntStepper(scala.collection.Stepper<java.lang.Object>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #324                // class scala/compat/java8/converterImpl/StepperExtensions$mcI$sp
         3: dup
         4: aload_1
         5: invokespecial #327                // Method scala/compat/java8/converterImpl/StepperExtensions$mcI$sp."<init>":(Lscala/collection/Stepper;)V
         8: areturn
      LineNumberTable:
        line 503: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/compat/java8/StreamConverters$;
            0       9     1     s   Lscala/collection/Stepper;
    Signature: #322                         // (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.converterImpl.StepperExtensions<java.lang.Object> richLongStepper(scala.collection.Stepper<java.lang.Object>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #330                // class scala/compat/java8/converterImpl/StepperExtensions$mcJ$sp
         3: dup
         4: aload_1
         5: invokespecial #331                // Method scala/compat/java8/converterImpl/StepperExtensions$mcJ$sp."<init>":(Lscala/collection/Stepper;)V
         8: areturn
      LineNumberTable:
        line 504: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/compat/java8/StreamConverters$;
            0       9     1     s   Lscala/collection/Stepper;
    Signature: #322                         // (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public scala.compat.java8.converterImpl.StepperExtensions<java.lang.Object> richDoubleStepper(scala.collection.Stepper<java.lang.Object>);
    descriptor: (Lscala/collection/Stepper;)Lscala/compat/java8/converterImpl/StepperExtensions;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #334                // class scala/compat/java8/converterImpl/StepperExtensions$mcD$sp
         3: dup
         4: aload_1
         5: invokespecial #335                // Method scala/compat/java8/converterImpl/StepperExtensions$mcD$sp."<init>":(Lscala/collection/Stepper;)V
         8: areturn
      LineNumberTable:
        line 505: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/compat/java8/StreamConverters$;
            0       9     1     s   Lscala/collection/Stepper;
    Signature: #322                         // (Lscala/collection/Stepper<Ljava/lang/Object;>;)Lscala/compat/java8/converterImpl/StepperExtensions<Ljava/lang/Object;>;
    MethodParameters:
      Name                           Flags
      s                              final

  private scala.compat.java8.StreamConverters$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #336                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 500: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/compat/java8/StreamConverters$;
}
InnerClasses:
  public #12= #11 of #6;                  // AnyArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$AnyArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #15= #14 of #6;                  // ByteArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$ByteArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #18= #17 of #6;                  // CharArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$CharArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #21= #20 of #6;                  // DoubleArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$DoubleArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #24= #23 of #6;                  // DoubleStreamHasToScala=class scala/compat/java8/StreamExtensions$DoubleStreamHasToScala of class scala/compat/java8/StreamExtensions
  public #27= #26 of #6;                  // FloatArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$FloatArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #30= #29 of #6;                  // IntArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$IntArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #33= #32 of #6;                  // IntStreamHasToScala=class scala/compat/java8/StreamExtensions$IntStreamHasToScala of class scala/compat/java8/StreamExtensions
  public #36= #35 of #6;                  // IterableHasSeqStream=class scala/compat/java8/StreamExtensions$IterableHasSeqStream of class scala/compat/java8/StreamExtensions
  public #39= #38 of #6;                  // IterableNonGenericHasParStream=class scala/compat/java8/StreamExtensions$IterableNonGenericHasParStream of class scala/compat/java8/StreamExtensions
  public #42= #41 of #6;                  // LongArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$LongArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #45= #44 of #6;                  // LongStreamHasToScala=class scala/compat/java8/StreamExtensions$LongStreamHasToScala of class scala/compat/java8/StreamExtensions
  public #48= #47 of #6;                  // MapHasParKeyValueStream=class scala/compat/java8/StreamExtensions$MapHasParKeyValueStream of class scala/compat/java8/StreamExtensions
  public #51= #50 of #6;                  // MapHasSeqKeyValueStream=class scala/compat/java8/StreamExtensions$MapHasSeqKeyValueStream of class scala/compat/java8/StreamExtensions
  public #54= #53 of #6;                  // ShortArrayHasSeqParStream=class scala/compat/java8/StreamExtensions$ShortArrayHasSeqParStream of class scala/compat/java8/StreamExtensions
  public #57= #56 of #6;                  // StepperHasParStream=class scala/compat/java8/StreamExtensions$StepperHasParStream of class scala/compat/java8/StreamExtensions
  public #60= #59 of #6;                  // StepperHasSeqStream=class scala/compat/java8/StreamExtensions$StepperHasSeqStream of class scala/compat/java8/StreamExtensions
  public #63= #62 of #6;                  // StreamDoubleHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamDoubleHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #66= #65 of #6;                  // StreamHasToScala=class scala/compat/java8/StreamExtensions$StreamHasToScala of class scala/compat/java8/StreamExtensions
  public #69= #68 of #6;                  // StreamIntHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamIntHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #72= #71 of #6;                  // StreamJDoubleHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamJDoubleHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #75= #74 of #6;                  // StreamJIntegerHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamJIntegerHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #78= #77 of #6;                  // StreamJLongHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamJLongHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
  public #81= #80 of #6;                  // StreamLongHasAccumulatePrimitive=class scala/compat/java8/StreamExtensions$StreamLongHasAccumulatePrimitive of class scala/compat/java8/StreamExtensions
SourceFile: "StreamConverters.scala"
  ScalaInlineInfo: length = 0xBD (unknown attribute)
   01 01 00 25 00 56 00 55 01 00 0C 00 E4 01 00 0F
   00 EB 01 00 12 00 F7 01 00 15 00 D4 01 00 18 01
   3B 01 00 1B 00 FD 01 00 1E 00 DA 01 00 21 01 2F
   01 00 24 00 AA 01 00 27 00 B1 01 00 2A 00 DF 01
   00 2D 01 35 01 00 30 00 C1 01 00 33 00 BA 01 00
   36 00 F1 01 00 39 00 CE 01 00 3C 00 C7 01 00 3F
   01 17 01 00 42 01 03 01 00 45 01 0B 01 00 48 01
   29 01 00 4B 01 1D 01 00 4E 01 23 01 00 51 01 11
   01 00 93 00 94 01 00 6C 00 6D 01 00 83 00 84 01
   00 75 00 76 01 00 8B 00 84 01 00 7C 00 7D 01 00
   8F 00 84 01 00 9B 00 84 01 01 4C 00 A2 01 01 41
   00 A2 01 01 48 00 A2 01 00 A1 00 A2 01
  Scala: length = 0x0 (unknown attribute)

