Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/StreamExtensions$StepperHasParStream.class
  Last modified May 29, 2022; size 2169 bytes
  SHA-256 checksum 41316d5423d315134015097c1940f8191c8b08795d7cd111271fe8ac73299863
  Compiled from "StreamExtensions.scala"
public class scala.collection.convert.StreamExtensions$StepperHasParStream<A extends java.lang.Object> extends java.lang.Object
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/StreamExtensions$StepperHasParStream
  super_class: #5                         // java/lang/Object
  interfaces: 0, fields: 2, methods: 3, attributes: 5
Constant pool:
   #1 = Utf8               scala/collection/convert/StreamExtensions$StepperHasParStream
   #2 = Class              #1             // scala/collection/convert/StreamExtensions$StepperHasParStream
   #3 = Utf8               <A:Ljava/lang/Object;>Ljava/lang/Object;
   #4 = Utf8               java/lang/Object
   #5 = Class              #4             // java/lang/Object
   #6 = Utf8               StreamExtensions.scala
   #7 = Utf8               scala/collection/convert/StreamExtensions
   #8 = Class              #7             // scala/collection/convert/StreamExtensions
   #9 = Utf8               StepperHasParStream
  #10 = Utf8               scala/collection/convert/StreamExtensions$StreamShape
  #11 = Class              #10            // scala/collection/convert/StreamExtensions$StreamShape
  #12 = Utf8               StreamShape
  #13 = Utf8               stepper
  #14 = Utf8               Lscala/collection/Stepper;
  #15 = Utf8               Lscala/collection/Stepper<TA;>;
  #16 = Utf8               $outer
  #17 = Utf8               Lscala/collection/convert/StreamExtensions;
  #18 = Utf8               asJavaParStream
  #19 = Utf8               (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
  #20 = Utf8               <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;)TS;
  #21 = Utf8               s
  #22 = Utf8               st
  #23 = NameAndType        #13:#14        // stepper:Lscala/collection/Stepper;
  #24 = Fieldref           #2.#23         // scala/collection/convert/StreamExtensions$StepperHasParStream.stepper:Lscala/collection/Stepper;
  #25 = Utf8               scala/collection/AnyStepper
  #26 = Class              #25            // scala/collection/AnyStepper
  #27 = Utf8               scala/collection/StepperShape
  #28 = Class              #27            // scala/collection/StepperShape
  #29 = Utf8               parUnbox
  #30 = Utf8               (Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
  #31 = NameAndType        #29:#30        // parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
  #32 = InterfaceMethodref #28.#31        // scala/collection/StepperShape.parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
  #33 = Utf8               mkStream
  #34 = Utf8               (Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #35 = NameAndType        #33:#34        // mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #36 = InterfaceMethodref #11.#35        // scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
  #37 = Utf8               this
  #38 = Utf8               Lscala/collection/convert/StreamExtensions$StepperHasParStream;
  #39 = Utf8               Lscala/collection/convert/StreamExtensions$StreamShape;
  #40 = Utf8               Lscala/collection/StepperShape;
  #41 = Utf8               fromStepper_par
  #42 = Utf8               Z
  #43 = Utf8               scala/collection/Stepper
  #44 = Class              #43            // scala/collection/Stepper
  #45 = Utf8               scala$collection$convert$StreamExtensions$StepperHasParStream$$$outer
  #46 = Utf8               ()Lscala/collection/convert/StreamExtensions;
  #47 = NameAndType        #16:#17        // $outer:Lscala/collection/convert/StreamExtensions;
  #48 = Fieldref           #2.#47         // scala/collection/convert/StreamExtensions$StepperHasParStream.$outer:Lscala/collection/convert/StreamExtensions;
  #49 = Utf8               <init>
  #50 = Utf8               (Lscala/collection/convert/StreamExtensions;Lscala/collection/Stepper;)V
  #51 = Utf8               (Lscala/collection/Stepper<TA;>;)V
  #52 = Utf8               ()V
  #53 = NameAndType        #49:#52        // "<init>":()V
  #54 = Methodref          #5.#53         // java/lang/Object."<init>":()V
  #55 = Utf8               Signature
  #56 = Utf8               Code
  #57 = Utf8               StackMapTable
  #58 = Utf8               LineNumberTable
  #59 = Utf8               LocalVariableTable
  #60 = Utf8               MethodParameters
  #61 = Utf8               InnerClasses
  #62 = Utf8               SourceFile
  #63 = Utf8               ScalaInlineInfo
  #64 = Utf8               Scala
{
  private final scala.collection.Stepper<A> stepper;
    descriptor: Lscala/collection/Stepper;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #15                          // Lscala/collection/Stepper<TA;>;

  public final scala.collection.convert.StreamExtensions $outer;
    descriptor: Lscala/collection/convert/StreamExtensions;
    flags: (0x1011) ACC_PUBLIC, ACC_FINAL, ACC_SYNTHETIC

  public <S extends java.util.stream.BaseStream<?, ?>, St extends scala.collection.Stepper<?>> S asJavaParStream(scala.collection.convert.StreamExtensions$StreamShape<A, S, St>, scala.collection.StepperShape<A, St>);
    descriptor: (Lscala/collection/convert/StreamExtensions$StreamShape;Lscala/collection/StepperShape;)Ljava/util/stream/BaseStream;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=7, args_size=3
         0: aload_0
         1: getfield      #24                 // Field stepper:Lscala/collection/Stepper;
         4: astore        4
         6: aload         4
         8: instanceof    #26                 // class scala/collection/AnyStepper
        11: ifeq          33
        14: aload         4
        16: checkcast     #26                 // class scala/collection/AnyStepper
        19: astore        5
        21: aload_2
        22: aload         5
        24: invokeinterface #32,  2           // InterfaceMethod scala/collection/StepperShape.parUnbox:(Lscala/collection/AnyStepper;)Lscala/collection/Stepper;
        29: astore_3
        30: goto          38
        33: aload_0
        34: getfield      #24                 // Field stepper:Lscala/collection/Stepper;
        37: astore_3
        38: aload_1
        39: iconst_1
        40: istore        6
        42: ifnonnull     47
        45: aconst_null
        46: athrow
        47: aload_1
        48: aload_3
        49: iload         6
        51: invokeinterface #36,  3           // InterfaceMethod scala/collection/convert/StreamExtensions$StreamShape.mkStream:(Lscala/collection/Stepper;Z)Ljava/util/stream/BaseStream;
        56: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 33
          locals = [ top, class scala/collection/Stepper ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/convert/StreamExtensions$StepperHasParStream, class scala/collection/convert/StreamExtensions$StreamShape, class scala/collection/StepperShape, class scala/collection/Stepper, class scala/collection/Stepper ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ top, int ]
      LineNumberTable:
        line 146: 0
        line 147: 6
        line 148: 33
        line 150: 38
        line 368: 47
        line 150: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lscala/collection/convert/StreamExtensions$StepperHasParStream;
            0      57     1     s   Lscala/collection/convert/StreamExtensions$StreamShape;
            0      57     2    st   Lscala/collection/StepperShape;
           47       9     6 fromStepper_par   Z
    Signature: #20                          // <S::Ljava/util/stream/BaseStream<**>;St::Lscala/collection/Stepper<*>;>(Lscala/collection/convert/StreamExtensions$StreamShape<TA;TS;TSt;>;Lscala/collection/StepperShape<TA;TSt;>;)TS;
    MethodParameters:
      Name                           Flags
      s                              final
      st                             final

  public scala.collection.convert.StreamExtensions scala$collection$convert$StreamExtensions$StepperHasParStream$$$outer();
    descriptor: ()Lscala/collection/convert/StreamExtensions;
    flags: (0x1001) ACC_PUBLIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field $outer:Lscala/collection/convert/StreamExtensions;
         4: areturn
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/StreamExtensions$StepperHasParStream;

  public scala.collection.convert.StreamExtensions$StepperHasParStream(scala.collection.Stepper<A>);
    descriptor: (Lscala/collection/convert/StreamExtensions;Lscala/collection/Stepper;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: putfield      #24                 // Field stepper:Lscala/collection/Stepper;
         5: aload_1
         6: ifnonnull     11
         9: aconst_null
        10: athrow
        11: aload_0
        12: aload_1
        13: putfield      #48                 // Field $outer:Lscala/collection/convert/StreamExtensions;
        16: aload_0
        17: invokespecial #54                 // Method java/lang/Object."<init>":()V
        20: return
      StackMapTable: number_of_entries = 1
        frame_type = 11 /* same */
      LineNumberTable:
        line 140: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/convert/StreamExtensions$StepperHasParStream;
            0      21     1 $outer   Lscala/collection/convert/StreamExtensions;
            0      21     2 stepper   Lscala/collection/Stepper;
    Signature: #51                          // (Lscala/collection/Stepper<TA;>;)V
    MethodParameters:
      Name                           Flags
      $outer                         final synthetic
      stepper                        final
}
InnerClasses:
  public #9= #2 of #8;                    // StepperHasParStream=class scala/collection/convert/StreamExtensions$StepperHasParStream of class scala/collection/convert/StreamExtensions
  public static #12= #11 of #8;           // StreamShape=class scala/collection/convert/StreamExtensions$StreamShape of class scala/collection/convert/StreamExtensions
Signature: #3                           // <A:Ljava/lang/Object;>Ljava/lang/Object;
SourceFile: "StreamExtensions.scala"
  ScalaInlineInfo: length = 0x13 (unknown attribute)
   01 00 00 03 00 31 00 32 00 00 12 00 13 00 00 2D
   00 2E 00
  Scala: length = 0x0 (unknown attribute)

