Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Version.class
  Last modified May 29, 2022; size 13609 bytes
  SHA-256 checksum 13e32bfc2f021cfb34bd97be94b0927a805bc92d50db7476c607bb0d1488dd9c
  Compiled from "Version.scala"
public final class coursier.core.Version extends java.lang.Object implements scala.math.Ordered<coursier.core.Version>, scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/Version
  super_class: #5                         // java/lang/Object
  interfaces: 3, fields: 3, methods: 32, attributes: 7
Constant pool:
    #1 = Utf8               coursier/core/Version
    #2 = Class              #1            // coursier/core/Version
    #3 = Utf8               Ljava/lang/Object;Lscala/math/Ordered<Lcoursier/core/Version;>;Lscala/Product;Ljava/io/Serializable;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/math/Ordered
    #7 = Class              #6            // scala/math/Ordered
    #8 = Utf8               scala/Product
    #9 = Class              #8            // scala/Product
   #10 = Utf8               java/io/Serializable
   #11 = Class              #10           // java/io/Serializable
   #12 = Utf8               Version.scala
   #13 = Utf8               Lscala/reflect/ScalaSignature;
   #14 = Utf8               bytes
   #15 = Utf8               \u0006\u0005\u0011EgaBAd\u0003\u0013\u0014\u00111\u001b\u0005\u000b\u0005\u0013\u0001!Q1A\u0005\u0002\t-\u0001B\u0003B\u000f\u0001\t\u0005\t\u0015!\u0003\u0003\u000e!9!q\u0004\u0001\u0005\u0002\t\u0005\u0002B\u0003B\u0013\u0001!\u0015\r\u0011\"\u0001\u0003(!9!1\f\u0001\u0005\u0002\u0011]\u0006b\u0002B7\u0001\u0011\u0005!q\u000e\u0005\b\tw\u0003A\u0011\u0001C_\u0011\u001d\u0011\t\n\u0001C!\u0005\'CqAa(\u0001\t\u0003\"\t\rC\u0004\u0003.\u0002!\t\u0005\"2\t\u000f\tM\u0006\u0001\"\u0011\u00036\"9!q\u0017\u0001\u0005\n\te\u0006b\u0002Ba\u0001\u0011\u0005#1\u0019\u0005\b\u0005\u000b\u0004A\u0011\tB6\u0011\u001d\u00119\r\u0001C!\t\u0013DqAa4\u0001\t\u0003\"im\u0002\u0005\u00034\u0005%\u0007\u0012\u0001B\u001b\r!\t9-!3\t\u0002\t]\u0002b\u0002B\u0010%\u0011\u0005!q\t\u0005\f\u0005\u0013\u0012\"\u0019!C\u0001\u0003\u001b\u0014Y\u0005\u0003\u0005\u0003NI\u0001\u000b\u0011BA}\r\u001d\u0011yEEA\u0011\u0005#BqAa\b\u0017\t\u0003\u0011I\u0006C\u0004\u0003\\Y!\tA!\u0018\t\u000f\t%dC\"\u0001\u0003l!9!Q\u000e\f\u0005\u0002\t=\u0004b\u0002B<-\u0011\u0005!1\u000e\u0004\b\u0007#\u0011\u0012\u0011EB\n\u0011\u001d\u0011y\u0002\bC\u0001\u0007+AqA!\u0003\u001d\r\u0003\u0011Y\u0001C\u0004\u0004\u001aq1\taa\u0007\b\u000f\rm%\u0003#!\u0004\b\u001991\u0011\u0001\n\t\u0002\u000e\r\u0001b\u0002B\u0010C\u0011\u00051Q\u0001\u0005\n\u0005S\n#\u0019!C\u0001\u0005WB\u0001B!#\"A\u0003%!q\f\u0005\b\u0005o\nC\u0011\tB6\u0011%\u0011\t-IA\u0001\n\u0003\u0012\u0019\rC\u0005\u0003F\u0006\n\t\u0011\"\u0001\u0003l!I!qY\u0011\u0002\u0002\u0013\u00051\u0011\u0002\u0005\n\u0005G\f\u0013\u0011!C!\u0005KD\u0011Ba(\"\u0003\u0003%\ta!\u0004\t\u0013\tM\u0016%!A\u0005B\tU\u0006\"\u0003BIC\u0005\u0005I\u0011\tBJ\u0011%\u001190IA\u0001\n\u0013\u0011IpB\u0004\u0004\u001eJA\tIa7\u0007\u000f\tU\'\u0003#!\u0003X\"9!qD\u0018\u0005\u0002\te\u0007\"\u0003B5_\t\u0007I\u0011\u0001B6\u0011!\u0011Ii\fQ\u0001\n\t}\u0003\"\u0003Ba_\u0005\u0005I\u0011\tBb\u0011%\u0011)mLA\u0001\n\u0003\u0011Y\u0007C\u0005\u0003H>\n\t\u0011\"\u0001\u0003^\"I!1]\u0018\u0002\u0002\u0013\u0005#Q\u001d\u0005\n\u0005?{\u0013\u0011!C\u0001\u0005gD\u0011Ba-0\u0003\u0003%\tE!.\t\u0013\tEu&!A\u0005B\tM\u0005\"\u0003B|_\u0005\u0005I\u0011\u0002B}\u0011%\u0019yJ\u0005b\u0001\n\u0003\u0019)\u0006\u0003\u0005\u0004\"J\u0001\u000b\u0011BB)\u000f\u001d\u0019\u0019K\u0005E\u0001\u0007K3qaa*\u0013\u0011\u0003\u0019I\u000bC\u0004\u0003 y\"\taa+\u0007\u000f\r5f(!\t\u00040\"9!q\u0004!\u0005\u0002\rEva\u0002C\u0005}!\u00055q\u0018\u0004\b\u0007ss\u0004\u0012QB^\u0011\u001d\u0011yb\u0011C\u0001\u0007{C\u0011B!1D\u0003\u0003%\tEa1\t\u0013\t\u00157)!A\u0005\u0002\t-\u0004\"\u0003Bd\u0007\u0006\u0005I\u0011ABa\u0011%\u0011\u0019oQA\u0001\n\u0003\u0012)\u000fC\u0005\u0003 \u000e\u000b\t\u0011\"\u0001\u0004F\"I!1W\"\u0002\u0002\u0013\u0005#Q\u0017\u0005\n\u0005#\u001b\u0015\u0011!C!\u0005\'C\u0011Ba>D\u0003\u0003%IA!?\b\u000f\u0011-a\b#!\u0004P\u001a91\u0011\u001a \t\u0002\u000e-\u0007b\u0002B\u0010\u001d\u0012\u00051Q\u001a\u0005\n\u0005\u0003t\u0015\u0011!C!\u0005\u0007D\u0011B!2O\u0003\u0003%\tAa\u001b\t\u0013\t\u001dg*!A\u0005\u0002\rE\u0007\"\u0003Br\u001d\u0006\u0005I\u0011\tBs\u0011%\u0011yJTA\u0001\n\u0003\u0019)\u000eC\u0005\u00034:\u000b\t\u0011\"\u0011\u00036\"I!\u0011\u0013(\u0002\u0002\u0013\u0005#1\u0013\u0005\n\u0005ot\u0015\u0011!C\u0005\u0005s<q\u0001\"\u0004?\u0011\u0003\u001byPB\u0004\u0004zzB\tia?\t\u000f\t}\u0011\f\"\u0001\u0004~\"I!\u0011Y-\u0002\u0002\u0013\u0005#1\u0019\u0005\n\u0005\u000bL\u0016\u0011!C\u0001\u0005WB\u0011Ba2Z\u0003\u0003%\t\u0001\"\u0001\t\u0013\t\r\u0018,!A\u0005B\t\u0015\b\"\u0003BP3\u0006\u0005I\u0011\u0001C\u0003\u0011%\u0011\u0019,WA\u0001\n\u0003\u0012)\fC\u0005\u0003\u0012f\u000b\t\u0011\"\u0011\u0003\u0014\"I!q_-\u0002\u0002\u0013%!\u0011`\u0004\b\t\u001fq\u0004\u0012QBx\r\u001d\u0019IO\u0010EA\u0007WDqAa\be\t\u0003\u0019i\u000fC\u0005\u0003B\u0012\f\t\u0011\"\u0011\u0003D\"I!Q\u00193\u0002\u0002\u0013\u0005!1\u000e\u0005\n\u0005\u000f$\u0017\u0011!C\u0001\u0007cD\u0011Ba9e\u0003\u0003%\tE!:\t\u0013\t}E-!A\u0005\u0002\rU\b\"\u0003BZI\u0006\u0005I\u0011\tB[\u0011%\u0011\t\nZA\u0001\n\u0003\u0012\u0019\nC\u0005\u0003x\u0012\f\t\u0011\"\u0003\u0003z\u001e9A\u0011\u0003 \t\u0002\u000e}gaBBm}!\u000551\u001c\u0005\b\u0005?yG\u0011ABo\u0011%\u0011\tm\\A\u0001\n\u0003\u0012\u0019\rC\u0005\u0003F>\f\t\u0011\"\u0001\u0003l!I!qY8\u0002\u0002\u0013\u00051\u0011\u001d\u0005\n\u0005G|\u0017\u0011!C!\u0005KD\u0011Ba(p\u0003\u0003%\ta!:\t\u0013\tMv.!A\u0005B\tU\u0006\"\u0003BI_\u0006\u0005I\u0011\tBJ\u0011%\u00119p\\A\u0001\n\u0013\u0011I\u0010C\u0004\u0005\u0014y\"\t\u0001\"\u0006\t\u000f\u0011\r#\u0003\"\u0001\u0005F!9A1\n\n\u0005\n\u00115\u0003b\u0002C)%\u0011\u0005A1\u000b\u0005\b\u0005K\u0011B\u0011\u0001C,\u0011\u001d!iF\u0005C\u0001\t?Bq\u0001\"\u001b\u0013\t\u0013!Y\u0007C\u0004\u0005\u0014I!\t\u0001b!\u0007\r\r-#CAB\'\u0011-\u0011y(a\u0001\u0003\u0006\u0004%\tAa\u001b\t\u0017\t\u0005\u00151\u0001B\u0001B\u0003%!q\f\u0005\t\u0005?\t\u0019\u0001\"\u0001\u0004P!Q!\u0011NA\u0002\u0005\u0004%\tAa\u001b\t\u0013\t%\u00151\u0001Q\u0001\n\t}\u0003\u0002CB\r\u0003\u0007!\ta!\u0016\t\u0011\t%\u00111\u0001C\u0001\u0005\u0017A\u0001Ba\u001e\u0002\u0004\u0011\u0005#1\u000e\u0005\t\u0005\u0017\u000b\u0019\u0001\"\u0001\u0004X!A!\u0011SA\u0002\t\u0003\u0012\u0019\n\u0003\u0005\u0003 \u0006\rA\u0011IB.\u0011!\u0011i+a\u0001\u0005B\r}\u0003\u0002\u0003BZ\u0003\u0007!\tE!.\t\u0011\t]\u00161\u0001C\u0005\u0007GB\u0001B!1\u0002\u0004\u0011\u0005#1\u0019\u0005\t\u0005\u000b\f\u0019\u0001\"\u0011\u0003l!A!qYA\u0002\t\u0003\u001a9\u0007\u0003\u0005\u0003P\u0006\rA\u0011IB6\u000f\u001d!9I\u0005E\u0001\t\u00133qaa\u0013\u0013\u0011\u0003!Y\t\u0003\u0005\u0003 \u0005-B\u0011\u0001CG\u0011!!\u0019\"a\u000b\u0005\u0002\u0011=\u0005B\u0003B|\u0003W\t\t\u0011\"\u0003\u0003z\u001a11q\u0004\n\u0003\u0007CA1Ba \u00024\t\u0015\r\u0011\"\u0001\u0004$!Y!\u0011QA\u001a\u0005\u0003\u0005\u000b\u0011BB\u0013\u0011!\u0011y\"a\r\u0005\u0002\r-\u0002B\u0003B5\u0003g\u0011\r\u0011\"\u0001\u0003l!I!\u0011RA\u001aA\u0003%!q\f\u0005\t\u00073\t\u0019\u0004\"\u0001\u00042!A!\u0011BA\u001a\t\u0003\u0011Y\u0001\u0003\u0005\u0003x\u0005MB\u0011\tB6\u0011!\u0011Y)a\r\u0005\u0002\rM\u0002\u0002\u0003BI\u0003g!\tEa%\t\u0011\t}\u00151\u0007C!\u0007oA\u0001B!,\u00024\u0011\u000531\b\u0005\t\u0005g\u000b\u0019\u0004\"\u0011\u00036\"A!qWA\u001a\t\u0013\u0019y\u0004\u0003\u0005\u0003B\u0006MB\u0011\tBb\u0011!\u0011)-a\r\u0005B\t-\u0004\u0002\u0003Bd\u0003g!\tea\u0011\t\u0011\t=\u00171\u0007C!\u0007\u000f:q\u0001b%\u0013\u0011\u0003!)JB\u0004\u0004 IA\t\u0001b&\t\u0011\t}\u00111\fC\u0001\t3C\u0001\u0002b\u0005\u0002\\\u0011\u0005A1\u0014\u0005\u000b\u0005o\fY&!A\u0005\n\tehABB8%\t\u0019\t\bC\u0006\u0003\u0000\u0005\r$Q1A\u0005\u0002\t-\u0001b\u0003BA\u0003G\u0012\t\u0011)A\u0005\u0005\u001bA\u0001Ba\b\u0002d\u0011\u000511\u000f\u0005\u000b\u0005S\n\u0019G1A\u0005\u0002\t-\u0004\"\u0003BE\u0003G\u0002\u000b\u0011\u0002B0\u0011)\u0019I(a\u0019C\u0002\u0013%!1\u000e\u0005\n\u0007w\n\u0019\u0007)A\u0005\u0005?B1b! \u0002d!\u0015\r\u0011\"\u0001\u0003l!A!qOA2\t\u0003\u0012Y\u0007\u0003\u0005\u0004\u0000\u0005\rD\u0011\u0001B8\u0011!\u0019\t)a\u0019\u0005\u0002\r\r\u0005\u0002\u0003BF\u0003G\"\taa\"\t\u0011\tE\u00151\rC!\u0005\'C\u0001Ba(\u0002d\u0011\u000531\u0012\u0005\t\u0005[\u000b\u0019\u0007\"\u0011\u0004\u0010\"A!1WA2\t\u0003\u0012)\f\u0003\u0005\u00038\u0006\rD\u0011\u0002B]\u0011!\u0011\t-a\u0019\u0005B\t\r\u0007\u0002\u0003Bc\u0003G\"\tEa\u001b\t\u0011\t\u001d\u00171\rC!\u0007\'C\u0001Ba4\u0002d\u0011\u00053qS\u0004\b\t?\u0013\u0002\u0012\u0001CQ\r\u001d\u0019yG\u0005E\u0001\tGC\u0001Ba\b\u0002\u0012\u0012\u0005AQ\u0015\u0005\t\t\'\t\t\n\"\u0001\u0005(\"Q!q_AI\u0003\u0003%IA!?\u0007\r\tm$C\u0001B?\u0011-\u0011y(!\'\u0003\u0006\u0004%\tAa\u0003\t\u0017\t\u0005\u0015\u0011\u0014B\u0001B\u0003%!Q\u0002\u0005\t\u0005?\tI\n\"\u0001\u0003\u0004\"Q!\u0011NAM\u0005\u0004%\tAa\u001b\t\u0013\t%\u0015\u0011\u0014Q\u0001\n\t}\u0003\u0002\u0003B<\u00033#\tEa\u001b\t\u0011\t-\u0015\u0011\u0014C\u0001\u0005\u001bC\u0001B!%\u0002\u001a\u0012\u0005#1\u0013\u0005\t\u0005?\u000bI\n\"\u0011\u0003\"\"A!QVAM\t\u0003\u0012y\u000b\u0003\u0005\u00034\u0006eE\u0011\tB[\u0011!\u00119,!\'\u0005\n\te\u0006\u0002\u0003Ba\u00033#\tEa1\t\u0011\t\u0015\u0017\u0011\u0014C!\u0005WB\u0001Ba2\u0002\u001a\u0012\u0005#\u0011\u001a\u0005\t\u0005\u001f\fI\n\"\u0011\u0003R\u001e9A1\u0016\n\t\u0002\u00115fa\u0002B>%!\u0005Aq\u0016\u0005\t\u0005?\ti\f\"\u0001\u00052\"AA1CA_\t\u0003!\u0019\f\u0003\u0006\u0003x\u0006u\u0016\u0011!C\u0005\u0005sD\u0011Ba>\u0013\u0003\u0003%IA!?\u0003\u000fY+\'o]5p]*!\u00111ZAg\u0003\u0011\u0019wN]3\u000b\u0005\u0005=\u0017\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001MI\u0001!!6\u0002b\u0006u(1\u0001\t\u0005\u0003/\fi.\u0004\u0002\u0002Z*\u0011\u00111\\\u0001\u0006g\u000e\fG.Y\u0005\u0005\u0003?\fIN\u0001\u0004B]f\u0014VM\u001a\t\u0007\u0003G\f\u00190!?\u000f\t\u0005\u0015\u0018q\u001e\b\u0005\u0003O\fi/\u0004\u0002\u0002j*!\u00111^Ai\u0003\u0019a$o\\8u}%\u0011\u00111\\\u0005\u0005\u0003c\fI.A\u0004qC\u000e\\\u0017mZ3\n\t\u0005U\u0018q\u001f\u0002\b\u001fJ$WM]3e\u0015\u0011\t\t0!7\u0011\u0007\u0005m\b!\u0004\u0002\u0002JB!\u0011q[A\u0000\u0013\u0011\u0011\t!!7\u0003\u000fA\u0013x\u000eZ;diB!\u00111\u001dB\u0003\u0013\u0011\u00119!a>\u0003\u0019M+\'/[1mSj\f\'\r\\3\u0002\tI,\u0007O]\u000b\u0003\u0005\u001b\u0001BAa\u0004\u0003\u00189!!\u0011\u0003B\n!\u0011\t9/!7\n\t\tU\u0011\u0011\\\u0001\u0007!J,G-\u001a4\n\t\te!1\u0004\u0002\u0007\'R\u0014\u0018N\\4\u000b\t\tU\u0011\u0011\\\u0001\u0006e\u0016\u0004(\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\t\u0005e(1\u0005\u0005\b\u0005\u0013\u0019\u0001\u0019\u0001B\u0007\u0003\u0015IG/Z7t+\t\u0011I\u0003\u0005\u0004\u0002d\n-\"qF\u0005\u0005\u0005[\t9P\u0001\u0004WK\u000e$xN\u001d\t\u0004\u0005c1bbAA~#\u00059a+\u001a:tS>t\u0007cAA~%M)!#!6\u0003:A!!1\bB#\u001b\t\u0011iD\u0003\u0003\u0003@\t\u0005\u0013AA5p\u0015\t\u0011\u0019%\u0001\u0003kCZ\f\u0017\u0002\u0002B\u0004\u0005{!\"A!\u000e\u0002\ti,\'o\\\u000b\u0003\u0003s\fQA_3s_\u0002\u0012A!\u0013;f[N)a#!6\u0003TA1\u00111]Az\u0005+\u00022Aa\u0016\u0017\u001b\u0005\u0011BC\u0001B+\u0003\u001d\u0019w.\u001c9be\u0016$BAa\u0018\u0003fA!\u0011q\u001bB1\u0013\u0011\u0011\u0019\'!7\u0003\u0007%sG\u000fC\u0004\u0003ha\u0001\rA!\u0016\u0002\u000b=$\b.\u001a:\u0002\u000b=\u0014H-\u001a:\u0016\u0005\t}\u0013aB5t\u000b6\u0004H/_\u000b\u0003\u0005c\u0002B!a6\u0003t%!!QOAm\u0005\u001d\u0011un\u001c7fC:\fabY8na\u0006\u0014X\rV8F[B$\u00180\u000b\u0005\u0017\u00033{\u0013\u0005HA2\u00055\u0011U/\u001b7e\u001b\u0016$\u0018\rZ1uCNA\u0011\u0011\u0014B+\u0003{\u0014\u0019!A\u0003wC2,X-\u0001\u0004wC2,X\r\t\u000b\u0005\u0005\u000b\u00139\t\u0005\u0003\u0003X\u0005e\u0005\u0002\u0003B@\u0003?\u0003\rA!\u0004\u0002\r=\u0014H-\u001a:!\u0003%9\u0018\u000e\u001e5WC2,X\r\u0006\u0003\u0003\u0006\n=\u0005\u0002\u0003B@\u0003O\u0003\rA!\u0004\u0002\u0011Q|7\u000b\u001e:j]\u001e$\"A!&\u0011\t\t]%QT\u0007\u0003\u00053SAAa\'\u0003B\u0005!A.\u00198h\u0013\u0011\u0011IB!\'\u0002\u0011\r\fg.R9vC2$BA!\u001d\u0003$\"A!QUAV\u0001\u0004\u00119+A\u0002pE*\u0004B!a6\u0003*&!!1VAm\u0005\r\te._\u0001\u0007KF,\u0018\r\\:\u0015\t\tE$\u0011\u0017\u0005\t\u0005K\u000bi\u000b1\u0001\u0003(\u0006A\u0001.Y:i\u0007>$W\r\u0006\u0002\u0003`\u0005)A/\u001e9mKV\u0011!1\u0018\t\u0007\u0003/\u0014iL!\u0004\n\t\t}\u0016\u0011\u001c\u0002\u0007)V\u0004H.Z\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\u0011)*\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0001\bqe>$Wo\u0019;FY\u0016lWM\u001c;\u0015\t\t\u001d&1\u001a\u0005\t\u0005\u001b\f9\f1\u0001\u0003`\u0005\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003\u0002BK\u0005\'D\u0001B!4\u0002:\u0002\u0007!q\f\u0002\u0004\u001b\u0006D8cB\u0018\u0003V\u0005u(1\u0001\u000b\u0003\u00057\u00042Aa\u00160)\u0011\u00119Ka8\t\u0013\t\u0005X\'!AA\u0002\t}\u0013a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0003hB1!\u0011\u001eBx\u0005Ok!Aa;\u000b\t\t5\u0018\u0011\\\u0001\u000bG>dG.Z2uS>t\u0017\u0002\u0002By\u0005W\u0014\u0001\"\u0013;fe\u0006$xN\u001d\u000b\u0005\u0005c\u0012)\u0010C\u0005\u0003b^\n\t\u00111\u0001\u0003(\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011!1 \t\u0005\u0005/\u0013i0\u0003\u0003\u0003\u0000\ne%AB(cU\u0016\u001cGOA\u0002NS:\u001cr!\tB+\u0003{\u0014\u0019\u0001\u0006\u0002\u0004\bA\u0019!qK\u0011\u0015\t\t\u001d61\u0002\u0005\n\u0005CD\u0013\u0011!a\u0001\u0005?\"BA!\u001d\u0004\u0010!I!\u0011\u001d\u0016\u0002\u0002\u0003\u0007!q\u0015\u0002\b\u001dVlWM]5d\'\ra\"Q\u000b\u000b\u0003\u0007/\u00012Aa\u0016\u001d\u0003\u0011qW\r\u001f;\u0016\u0005\r]\u0011&\u0002\u000f\u00024\u0005\r!!\u0003\"jO:+XNY3s\'!\t\u0019da\u0006\u0002~\n\rQCAB\u0013!\u0011\t\u0019oa\n\n\t\r%\u0012q\u001f\u0002\u0007\u0005&<\u0017J\u001c;\u0015\t\r52q\u0006\t\u0005\u0005/\n\u0019\u0004\u0003\u0005\u0003\u0000\u0005e\u0002\u0019AB\u0013+\t\u0019i\u0003\u0006\u0003\u0004.\rU\u0002\u0002\u0003B@\u0003\u000b\u0002\ra!\n\u0015\t\tE4\u0011\b\u0005\t\u0005K\u000bI\u00051\u0001\u0003(R!!\u0011OB\u001f\u0011!\u0011)+a\u0013A\u0002\t\u001dVCAB!!\u0019\t9N!0\u0004&Q!!qUB#\u0011!\u0011i-!\u0016A\u0002\t}C\u0003\u0002BK\u0007\u0013B\u0001B!4\u0002X\u0001\u0007!q\f\u0002\u0007\u001dVl\'-\u001a:\u0014\u0011\u0005\r1qCA\u007f\u0005\u0007!Ba!\u0015\u0004TA!!qKA\u0002\u0011!\u0011y(!\u0003A\u0002\t}SCAB))\u0011\u0019\tf!\u0017\t\u0011\t}\u0014Q\u0003a\u0001\u0005?\"BA!\u001d\u0004^!A!QUA\r\u0001\u0004\u00119\u000b\u0006\u0003\u0003r\r\u0005\u0004\u0002\u0003BS\u00037\u0001\rAa*\u0016\u0005\r\u0015\u0004CBAl\u0005{\u0013y\u0006\u0006\u0003\u0003(\u000e%\u0004\u0002\u0003Bg\u0003K\u0001\rAa\u0018\u0015\t\tU5Q\u000e\u0005\t\u0005\u001b\f9\u00031\u0001\u0003`\t\u0019A+Y4\u0014\u0011\u0005\r$QKA\u007f\u0005\u0007!Ba!\u001e\u0004xA!!qKA2\u0011!\u0011y(!\u001bA\u0002\t5\u0011AC8uQ\u0016\u0014H*\u001a<fY\u0006Yq\u000e\u001e5fe2+g/\u001a7!\u0003\u0015aWM^3m\u00031I7\u000f\u0015:f%\u0016dW-Y:f\u0003)\u0019w.\u001c9be\u0016$\u0016m\u001a\u000b\u0005\u0005?\u001a)\t\u0003\u0005\u0003h\u0005e\u0004\u0019AB;)\u0011\u0019)h!#\t\u0011\t}\u00141\u0010a\u0001\u0005\u001b!BA!\u001d\u0004\u000e\"A!QUA@\u0001\u0004\u00119\u000b\u0006\u0003\u0003r\rE\u0005\u0002\u0003BS\u0003\u0003\u0003\rAa*\u0015\t\t\u001d6Q\u0013\u0005\t\u0005\u001b\fY\t1\u0001\u0003`Q!!QSBM\u0011!\u0011i-!$A\u0002\t}\u0013aA\'j]\u0006\u0019Q*\u0019=\u0002\u000b\u0015l\u0007\u000f^=\u0002\r\u0015l\u0007\u000f^=!\u0003%!vn[3oSj,\'\u000fE\u0002\u0003Xy\u0012\u0011\u0002V8lK:L\'0\u001a:\u0014\u0007y\n)\u000e\u0006\u0002\u0004&\nI1+\u001a9be\u0006$xN]\n\u0004\u0001\u0006UGCABZ!\r\u0019)\fQ\u0007\u0002}%2\u0001i\u0011(pIf\u00131\u0001R8u\'\u001d\u001951WA\u007f\u0005\u0007!\"aa0\u0011\u0007\rU6\t\u0006\u0003\u0003(\u000e\r\u0007\"\u0003Bq\u000f\u0006\u0005\t\u0019\u0001B0)\u0011\u0011\tha2\t\u0013\t\u0005\u0018*!AA\u0002\t\u001d&A\u0002%za\",gnE\u0004O\u0007g\u000biPa\u0001\u0015\u0005\r=\u0007cAB[\u001dR!!qUBj\u0011%\u0011\tOUA\u0001\u0002\u0004\u0011y\u0006\u0006\u0003\u0003r\r]\u0007\"\u0003Bq)\u0006\u0005\t\u0019\u0001BT\u0005\u0011quN\\3\u0014\u000f=\u001c\u0019,!@\u0003\u0004Q\u00111q\u001c\t\u0004\u0007k{G\u0003\u0002BT\u0007GD\u0011B!9t\u0003\u0003\u0005\rAa\u0018\u0015\t\tE4q\u001d\u0005\n\u0005C,\u0018\u0011!a\u0001\u0005O\u0013A\u0001\u00157vgN9Ama-\u0002~\n\rACABx!\r\u0019)\f\u001a\u000b\u0005\u0005O\u001b\u0019\u0010C\u0005\u0003b\"\f\t\u00111\u0001\u0003`Q!!\u0011OB|\u0011%\u0011\tO[A\u0001\u0002\u0004\u00119K\u0001\u0006V]\u0012,\'o]2pe\u0016\u001cr!WBZ\u0003{\u0014\u0019\u0001\u0006\u0002\u0004\u0000B\u00191QW-\u0015\t\t\u001dF1\u0001\u0005\n\u0005Cl\u0016\u0011!a\u0001\u0005?\"BA!\u001d\u0005\b!I!\u0011]0\u0002\u0002\u0003\u0007!qU\u0001\u0004\t>$\u0018A\u0002%za\",g.\u0001\u0006V]\u0012,\'o]2pe\u0016\fA\u0001\u00157vg\u0006!aj\u001c8f\u0003\u0015\t\u0007\u000f\u001d7z)\u0011!9\u0002b\u0010\u0011\u0011\u0005]G\u0011\u0004B+\t;IA\u0001b\u0007\u0002Z\n1A+\u001e9mKJ\u0002b\u0001b\b\u00058\u0011ub\u0002\u0002C\u0011\tgqA\u0001b\t\u0005.9!AQ\u0005C\u0015\u001d\u0011\t)\u000fb\n\n\t\t5\u0018\u0011\\\u0005\u0005\tW\u0011Y/\u0001\u0004d_6\u0004\u0018\r^\u0005\u0005\t_!\t$A\u0005j[6,H/\u00192mK*!A1\u0006Bv\u0013\u0011\t\t\u0010\"\u000e\u000b\t\u0011=B\u0011G\u0005\u0005\ts!YD\u0001\u0005MCjLH*[:u\u0015\u0011\t\t\u0010\"\u000e\u0011\u0011\u0005]G\u0011DBZ\u0005+Bq\u0001\"\u0011z\u0001\u0004\u0011i!A\u0002tiJ\f\u0011\"[:Ok6,\'/[2\u0015\t\tEDq\t\u0005\b\t\u0013R\b\u0019\u0001B+\u0003\u0011IG/Z7\u0002#%\u001ch*^7fe&\u001cwJ]\'j]6\u000b\u0007\u0010\u0006\u0003\u0003r\u0011=\u0003b\u0002C%w\u0002\u0007!QK\u0001\u0010SN\u0014U/\u001b7e\u001b\u0016$\u0018\rZ1uCR!!\u0011\u000fC+\u0011\u001d!I\u0005 a\u0001\u0005+\"B\u0001\"\u0017\u0005\\A1\u00111\u001dB\u0016\u0005+BqA!\u0003~\u0001\u0004\u0011i!A\u0006mSN$8i\\7qCJ,GC\u0002B0\tC\")\u0007C\u0004\u0005dy\u0004\r\u0001\"\u0017\u0002\r\u0019L\'o\u001d;1\u0011\u001d!9G a\u0001\t3\nqa]3d_:$\u0007\'\u0001\u0007mSN$8i\\7qCJ,\u0007\u0007\u0006\u0004\u0003`\u00115D\u0011\u000f\u0005\b\t_z\b\u0019\u0001C-\u0003\u00151\u0017N]:u\u0011\u001d!\u0019h a\u0001\t3\naa]3d_:$\u0007fA@\u0005xA!A\u0011\u0010C@\u001b\t!YH\u0003\u0003\u0005~\u0005e\u0017AC1o]>$\u0018\r^5p]&!A\u0011\u0011C>\u0005\u001d!\u0018-\u001b7sK\u000e$B!!?\u0005\u0006\"A!\u0011BA\u0001\u0001\u0004\u0011i!\u0001\u0004Ok6\u0014WM\u001d\t\u0005\u0005/\nYc\u0005\u0004\u0002,\u0005U\'\u0011\b\u000b\u0003\t\u0013#Ba!\u0015\u0005\u0012\"A!qPA\u0018\u0001\u0004\u0011y&A\u0005CS\u001etU/\u001c2feB!!qKA.\'\u0019\tY&!6\u0003:Q\u0011AQ\u0013\u000b\u0005\u0007[!i\n\u0003\u0005\u0003\u0000\u0005}\u0003\u0019AB\u0013\u0003\r!\u0016m\u001a\t\u0005\u0005/\n\tj\u0005\u0004\u0002\u0012\u0006U\'\u0011\b\u000b\u0003\tC#Ba!\u001e\u0005*\"A!qPAK\u0001\u0004\u0011i!A\u0007Ck&dG-T3uC\u0012\fG/\u0019\t\u0005\u0005/\nil\u0005\u0004\u0002>\u0006U\'\u0011\b\u000b\u0003\t[#BA!\"\u00056\"A!qPAa\u0001\u0004\u0011i\u0001\u0006\u0003\u0003`\u0011e\u0006b\u0002B4\u000b\u0001\u0007\u0011\u0011`\u0001\to&$\bNU3qeR!\u0011\u0011 C`\u0011\u001d\u0011Ia\u0002a\u0001\u0005\u001b!BA!\u001d\u0005D\"9!QU\u0005A\u0002\t\u001dF\u0003\u0002B9\t\u000fDqA!*\u000b\u0001\u0004\u00119\u000b\u0006\u0003\u0003(\u0012-\u0007b\u0002Bg\u001f\u0001\u0007!q\f\u000b\u0005\u0005+#y\rC\u0004\u0003NB\u0001\rAa\u0018
   #16 = Utf8               coursier/core/Version$BigNumber
   #17 = Class              #16           // coursier/core/Version$BigNumber
   #18 = Utf8               BigNumber
   #19 = Utf8               coursier/core/Version$BigNumber$
   #20 = Class              #19           // coursier/core/Version$BigNumber$
   #21 = Utf8
   #22 = Utf8               coursier/core/Version$BuildMetadata
   #23 = Class              #22           // coursier/core/Version$BuildMetadata
   #24 = Utf8               BuildMetadata
   #25 = Utf8               coursier/core/Version$BuildMetadata$
   #26 = Class              #25           // coursier/core/Version$BuildMetadata$
   #27 = Utf8               coursier/core/Version$Item
   #28 = Class              #27           // coursier/core/Version$Item
   #29 = Utf8               Item
   #30 = Utf8               coursier/core/Version$Max$
   #31 = Class              #30           // coursier/core/Version$Max$
   #32 = Utf8               coursier/core/Version$Min$
   #33 = Class              #32           // coursier/core/Version$Min$
   #34 = Utf8               coursier/core/Version$Number
   #35 = Class              #34           // coursier/core/Version$Number
   #36 = Utf8               Number
   #37 = Utf8               coursier/core/Version$Number$
   #38 = Class              #37           // coursier/core/Version$Number$
   #39 = Utf8               coursier/core/Version$Numeric
   #40 = Class              #39           // coursier/core/Version$Numeric
   #41 = Utf8               Numeric
   #42 = Utf8               coursier/core/Version$Tag
   #43 = Class              #42           // coursier/core/Version$Tag
   #44 = Utf8               Tag
   #45 = Utf8               coursier/core/Version$Tag$
   #46 = Class              #45           // coursier/core/Version$Tag$
   #47 = Utf8               coursier/core/Version$Tokenizer$
   #48 = Class              #47           // coursier/core/Version$Tokenizer$
   #49 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #50 = Class              #49           // java/lang/invoke/MethodHandles$Lookup
   #51 = Utf8               java/lang/invoke/MethodHandles
   #52 = Class              #51           // java/lang/invoke/MethodHandles
   #53 = Utf8               Lookup
   #54 = Utf8               items
   #55 = Utf8               Lscala/collection/immutable/Vector;
   #56 = Utf8               Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;
   #57 = Utf8               repr
   #58 = Utf8               Ljava/lang/String;
   #59 = Utf8               bitmap$0
   #60 = Utf8               Z
   #61 = Utf8               apply
   #62 = Utf8               (Ljava/lang/String;)Lcoursier/core/Version;
   #63 = Utf8               coursier/core/Version$
   #64 = Class              #63           // coursier/core/Version$
   #65 = Utf8               MODULE$
   #66 = Utf8               Lcoursier/core/Version$;
   #67 = NameAndType        #65:#66       // MODULE$:Lcoursier/core/Version$;
   #68 = Fieldref           #64.#67       // coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
   #69 = NameAndType        #61:#62       // apply:(Ljava/lang/String;)Lcoursier/core/Version;
   #70 = Methodref          #64.#69       // coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
   #71 = Utf8               listCompare
   #72 = Utf8               (Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
   #73 = Utf8               (Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;)I
   #74 = Utf8               first0
   #75 = Utf8               second0
   #76 = NameAndType        #71:#72       // listCompare:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
   #77 = Methodref          #64.#76       // coursier/core/Version$.listCompare:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
   #78 = Utf8               isBuildMetadata
   #79 = Utf8               (Lcoursier/core/Version$Item;)Z
   #80 = Utf8               item
   #81 = NameAndType        #78:#79       // isBuildMetadata:(Lcoursier/core/Version$Item;)Z
   #82 = Methodref          #64.#81       // coursier/core/Version$.isBuildMetadata:(Lcoursier/core/Version$Item;)Z
   #83 = Utf8               isNumeric
   #84 = NameAndType        #83:#79       // isNumeric:(Lcoursier/core/Version$Item;)Z
   #85 = Methodref          #64.#84       // coursier/core/Version$.isNumeric:(Lcoursier/core/Version$Item;)Z
   #86 = Utf8               empty
   #87 = Utf8               ()Lcoursier/core/Version$Number;
   #88 = NameAndType        #86:#87       // empty:()Lcoursier/core/Version$Number;
   #89 = Methodref          #64.#88       // coursier/core/Version$.empty:()Lcoursier/core/Version$Number;
   #90 = Utf8               productIterator
   #91 = Utf8               ()Lscala/collection/Iterator;
   #92 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #93 = Utf8               productIterator$
   #94 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #95 = NameAndType        #93:#94       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #96 = InterfaceMethodref #9.#95        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #97 = Utf8               this
   #98 = Utf8               Lcoursier/core/Version;
   #99 = Utf8               productElementNames
  #100 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
  #101 = Utf8               productElementNames$
  #102 = NameAndType        #101:#94      // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
  #103 = InterfaceMethodref #9.#102       // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
  #104 = Utf8               $less
  #105 = Utf8               (Ljava/lang/Object;)Z
  #106 = Utf8               that
  #107 = Utf8               $less$
  #108 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)Z
  #109 = NameAndType        #107:#108     // $less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #110 = InterfaceMethodref #7.#109       // scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #111 = Utf8               Ljava/lang/Object;
  #112 = Utf8               $greater
  #113 = Utf8               $greater$
  #114 = NameAndType        #113:#108     // $greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #115 = InterfaceMethodref #7.#114       // scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #116 = Utf8               $less$eq
  #117 = Utf8               $less$eq$
  #118 = NameAndType        #117:#108     // $less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #119 = InterfaceMethodref #7.#118       // scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #120 = Utf8               $greater$eq
  #121 = Utf8               $greater$eq$
  #122 = NameAndType        #121:#108     // $greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #123 = InterfaceMethodref #7.#122       // scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
  #124 = Utf8               compareTo
  #125 = Utf8               (Ljava/lang/Object;)I
  #126 = Utf8               compareTo$
  #127 = Utf8               (Lscala/math/Ordered;Ljava/lang/Object;)I
  #128 = NameAndType        #126:#127     // compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #129 = InterfaceMethodref #7.#128       // scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
  #130 = Utf8               ()Ljava/lang/String;
  #131 = NameAndType        #57:#58       // repr:Ljava/lang/String;
  #132 = Fieldref           #2.#131       // coursier/core/Version.repr:Ljava/lang/String;
  #133 = Utf8               items$lzycompute
  #134 = Utf8               ()Lscala/collection/immutable/Vector;
  #135 = Utf8               ()Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;
  #136 = NameAndType        #59:#60       // bitmap$0:Z
  #137 = Fieldref           #2.#136       // coursier/core/Version.bitmap$0:Z
  #138 = NameAndType        #57:#130      // repr:()Ljava/lang/String;
  #139 = Methodref          #2.#138       // coursier/core/Version.repr:()Ljava/lang/String;
  #140 = Utf8               (Ljava/lang/String;)Lscala/collection/immutable/Vector;
  #141 = NameAndType        #54:#140      // items:(Ljava/lang/String;)Lscala/collection/immutable/Vector;
  #142 = Methodref          #64.#141      // coursier/core/Version$.items:(Ljava/lang/String;)Lscala/collection/immutable/Vector;
  #143 = NameAndType        #54:#55       // items:Lscala/collection/immutable/Vector;
  #144 = Fieldref           #2.#143       // coursier/core/Version.items:Lscala/collection/immutable/Vector;
  #145 = Utf8               java/lang/Throwable
  #146 = Class              #145          // java/lang/Throwable
  #147 = NameAndType        #133:#134     // items$lzycompute:()Lscala/collection/immutable/Vector;
  #148 = Methodref          #2.#147       // coursier/core/Version.items$lzycompute:()Lscala/collection/immutable/Vector;
  #149 = Utf8               scala/collection/immutable/Vector
  #150 = Class              #149          // scala/collection/immutable/Vector
  #151 = Utf8               compare
  #152 = Utf8               (Lcoursier/core/Version;)I
  #153 = Utf8               other
  #154 = NameAndType        #54:#134      // items:()Lscala/collection/immutable/Vector;
  #155 = Methodref          #2.#154       // coursier/core/Version.items:()Lscala/collection/immutable/Vector;
  #156 = Utf8               isEmpty
  #157 = Utf8               ()Z
  #158 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #159 = MethodType         #158          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #160 = Utf8               $anonfun$isEmpty$1$adapted
  #161 = Utf8               (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #162 = NameAndType        #160:#161     // $anonfun$isEmpty$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #163 = Methodref          #2.#162       // coursier/core/Version.$anonfun$isEmpty$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #164 = MethodHandle       6:#163        // REF_invokeStatic coursier/core/Version.$anonfun$isEmpty$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #165 = MethodType         #161          //  (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  #166 = Integer            5
  #167 = Integer            1
  #168 = Utf8               java/lang/invoke/LambdaMetafactory
  #169 = Class              #168          // java/lang/invoke/LambdaMetafactory
  #170 = Utf8               altMetafactory
  #171 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #172 = NameAndType        #170:#171     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #173 = Methodref          #169.#172     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #174 = MethodHandle       6:#173        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #175 = Utf8               ()Lscala/Function1;
  #176 = NameAndType        #61:#175      // apply:()Lscala/Function1;
  #177 = InvokeDynamic      #0:#176       // #0:apply:()Lscala/Function1;
  #178 = Utf8               forall
  #179 = Utf8               (Lscala/Function1;)Z
  #180 = NameAndType        #178:#179     // forall:(Lscala/Function1;)Z
  #181 = Methodref          #150.#180     // scala/collection/immutable/Vector.forall:(Lscala/Function1;)Z
  #182 = Utf8               withRepr
  #183 = Utf8               <init>
  #184 = Utf8               (Ljava/lang/String;)V
  #185 = NameAndType        #183:#184     // "<init>":(Ljava/lang/String;)V
  #186 = Methodref          #2.#185       // coursier/core/Version."<init>":(Ljava/lang/String;)V
  #187 = Utf8               toString
  #188 = Utf8               java/lang/StringBuilder
  #189 = Class              #188          // java/lang/StringBuilder
  #190 = Utf8               Version(
  #191 = String             #190          // Version(
  #192 = Methodref          #189.#185     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #193 = Utf8               java/lang/String
  #194 = Class              #193          // java/lang/String
  #195 = Utf8               valueOf
  #196 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #197 = NameAndType        #195:#196     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #198 = Methodref          #194.#197     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #199 = Utf8               append
  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #201 = NameAndType        #199:#200     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #202 = Methodref          #189.#201     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #203 = Utf8               )
  #204 = String             #203          // )
  #205 = NameAndType        #187:#130     // toString:()Ljava/lang/String;
  #206 = Methodref          #189.#205     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #207 = Utf8               b
  #208 = Utf8               Ljava/lang/StringBuilder;
  #209 = Utf8               canEqual
  #210 = Utf8               obj
  #211 = Utf8               equals
  #212 = NameAndType        #209:#105     // canEqual:(Ljava/lang/Object;)Z
  #213 = Methodref          #2.#212       // coursier/core/Version.canEqual:(Ljava/lang/Object;)Z
  #214 = NameAndType        #211:#105     // equals:(Ljava/lang/Object;)Z
  #215 = Methodref          #5.#214       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #216 = Utf8               hashCode
  #217 = Utf8               ()I
  #218 = Utf8               Version
  #219 = String             #218          // Version
  #220 = Utf8               scala/runtime/Statics
  #221 = Class              #220          // scala/runtime/Statics
  #222 = Utf8               anyHash
  #223 = NameAndType        #222:#125     // anyHash:(Ljava/lang/Object;)I
  #224 = Methodref          #221.#223     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #225 = Utf8               code
  #226 = Utf8               I
  #227 = Utf8               tuple
  #228 = Utf8               ()Lscala/Tuple1;
  #229 = Utf8               ()Lscala/Tuple1<Ljava/lang/String;>;
  #230 = Utf8               scala/Tuple1
  #231 = Class              #230          // scala/Tuple1
  #232 = Utf8               (Ljava/lang/Object;)V
  #233 = NameAndType        #183:#232     // "<init>":(Ljava/lang/Object;)V
  #234 = Methodref          #231.#233     // scala/Tuple1."<init>":(Ljava/lang/Object;)V
  #235 = Utf8               productPrefix
  #236 = Utf8               productArity
  #237 = Utf8               productElement
  #238 = Utf8               (I)Ljava/lang/Object;
  #239 = Utf8               n
  #240 = Utf8               java/lang/IndexOutOfBoundsException
  #241 = Class              #240          // java/lang/IndexOutOfBoundsException
  #242 = Utf8               scala/runtime/BoxesRunTime
  #243 = Class              #242          // scala/runtime/BoxesRunTime
  #244 = Utf8               boxToInteger
  #245 = Utf8               (I)Ljava/lang/Integer;
  #246 = NameAndType        #244:#245     // boxToInteger:(I)Ljava/lang/Integer;
  #247 = Methodref          #243.#246     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #248 = Methodref          #5.#205       // java/lang/Object.toString:()Ljava/lang/String;
  #249 = Methodref          #241.#185     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #250 = Utf8               productElementName
  #251 = Utf8               (I)Ljava/lang/String;
  #252 = String             #57           // repr
  #253 = NameAndType        #151:#152     // compare:(Lcoursier/core/Version;)I
  #254 = Methodref          #2.#253       // coursier/core/Version.compare:(Lcoursier/core/Version;)I
  #255 = Utf8               $anonfun$isEmpty$1
  #256 = Utf8               x$1
  #257 = NameAndType        #156:#157     // isEmpty:()Z
  #258 = Methodref          #28.#257      // coursier/core/Version$Item.isEmpty:()Z
  #259 = Utf8               Lcoursier/core/Version$Item;
  #260 = Utf8               ()V
  #261 = NameAndType        #183:#260     // "<init>":()V
  #262 = Methodref          #5.#261       // java/lang/Object."<init>":()V
  #263 = Utf8               $init$
  #264 = Utf8               (Lscala/math/Ordered;)V
  #265 = NameAndType        #263:#264     // $init$:(Lscala/math/Ordered;)V
  #266 = InterfaceMethodref #7.#265       // scala/math/Ordered.$init$:(Lscala/math/Ordered;)V
  #267 = Utf8               (Lscala/Product;)V
  #268 = NameAndType        #263:#267     // $init$:(Lscala/Product;)V
  #269 = InterfaceMethodref #9.#268       // scala/Product.$init$:(Lscala/Product;)V
  #270 = NameAndType        #255:#79      // $anonfun$isEmpty$1:(Lcoursier/core/Version$Item;)Z
  #271 = Methodref          #2.#270       // coursier/core/Version.$anonfun$isEmpty$1:(Lcoursier/core/Version$Item;)Z
  #272 = Utf8               boxToBoolean
  #273 = Utf8               (Z)Ljava/lang/Boolean;
  #274 = NameAndType        #272:#273     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #275 = Methodref          #243.#274     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #276 = Utf8               $deserializeLambda$
  #277 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #278 = Utf8               scala/runtime/LambdaDeserialize
  #279 = Class              #278          // scala/runtime/LambdaDeserialize
  #280 = Utf8               bootstrap
  #281 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #282 = NameAndType        #280:#281     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #283 = Methodref          #279.#282     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #284 = MethodHandle       6:#283        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #285 = Utf8               lambdaDeserialize
  #286 = NameAndType        #285:#277     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #287 = InvokeDynamic      #1:#286       // #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #288 = Utf8               Signature
  #289 = Utf8               Code
  #290 = Utf8               MethodParameters
  #291 = Utf8               LineNumberTable
  #292 = Utf8               LocalVariableTable
  #293 = Utf8               StackMapTable
  #294 = Utf8               InnerClasses
  #295 = Utf8               SourceFile
  #296 = Utf8               RuntimeVisibleAnnotations
  #297 = Utf8               BootstrapMethods
  #298 = Utf8               ScalaInlineInfo
  #299 = Utf8               ScalaSig
{
  private scala.collection.immutable.Vector<coursier.core.Version$Item> items;
    descriptor: Lscala/collection/immutable/Vector;
    flags: (0x0002) ACC_PRIVATE
    Signature: #56                          // Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;

  private final java.lang.String repr;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static coursier.core.Version apply(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Version;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #70                 // Method coursier/core/Version$.apply:(Ljava/lang/String;)Lcoursier/core/Version;
         7: areturn
    MethodParameters:
      Name                           Flags
      repr                           final

  public static int listCompare(scala.collection.immutable.Vector<coursier.core.Version$Item>, scala.collection.immutable.Vector<coursier.core.Version$Item>);
    descriptor: (Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: aload_1
         5: invokevirtual #77                 // Method coursier/core/Version$.listCompare:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
         8: ireturn
    Signature: #73                          // (Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;)I
    MethodParameters:
      Name                           Flags
      first0                         final
      second0                        final

  public static boolean isBuildMetadata(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #82                 // Method coursier/core/Version$.isBuildMetadata:(Lcoursier/core/Version$Item;)Z
         7: ireturn
    MethodParameters:
      Name                           Flags
      item                           final

  public static boolean isNumeric(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #85                 // Method coursier/core/Version$.isNumeric:(Lcoursier/core/Version$Item;)Z
         7: ireturn
    MethodParameters:
      Name                           Flags
      item                           final

  public static coursier.core.Version$Number empty();
    descriptor: ()Lcoursier/core/Version$Number;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: invokevirtual #89                 // Method coursier/core/Version$.empty:()Lcoursier/core/Version$Number;
         6: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #96                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version;
    Signature: #92                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #103                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version;
    Signature: #100                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public boolean $less(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #110                // InterfaceMethod scala/math/Ordered.$less$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #115                // InterfaceMethod scala/math/Ordered.$greater$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $less$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #119                // InterfaceMethod scala/math/Ordered.$less$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public boolean $greater$eq(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #123                // InterfaceMethod scala/math/Ordered.$greater$eq$:(Lscala/math/Ordered;Ljava/lang/Object;)Z
         5: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public int compareTo(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #129                // InterfaceMethod scala/math/Ordered.compareTo$:(Lscala/math/Ordered;Ljava/lang/Object;)I
         5: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/Version;
            0       6     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #132                // Field repr:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Version;

  private scala.collection.immutable.Vector<coursier.core.Version$Item> items$lzycompute();
    descriptor: ()Lscala/collection/immutable/Vector;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #137                // Field bitmap$0:Z
         8: ifne          30
        11: aload_0
        12: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
        15: aload_0
        16: invokevirtual #139                // Method repr:()Ljava/lang/String;
        19: invokevirtual #142                // Method coursier/core/Version$.items:(Ljava/lang/String;)Lscala/collection/immutable/Vector;
        22: putfield      #144                // Field items:Lscala/collection/immutable/Vector;
        25: aload_0
        26: iconst_1
        27: putfield      #137                // Field bitmap$0:Z
        30: aload_1
        31: monitorexit
        32: goto          38
        35: aload_1
        36: monitorexit
        37: athrow
        38: aload_0
        39: getfield      #144                // Field items:Lscala/collection/immutable/Vector;
        42: areturn
      Exception table:
         from    to  target type
             4    30    35   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 30
          locals = [ class coursier/core/Version ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/core/Version;
    Signature: #135                         // ()Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;

  public scala.collection.immutable.Vector<coursier.core.Version$Item> items();
    descriptor: ()Lscala/collection/immutable/Vector;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #137                // Field bitmap$0:Z
         4: ifne          14
         7: aload_0
         8: invokespecial #148                // Method items$lzycompute:()Lscala/collection/immutable/Vector;
        11: goto          18
        14: aload_0
        15: getfield      #144                // Field items:Lscala/collection/immutable/Vector;
        18: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 14 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Vector ]
      LineNumberTable:
        line 15: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/core/Version;
    Signature: #135                         // ()Lscala/collection/immutable/Vector<Lcoursier/core/Version$Item;>;

  public int compare(coursier.core.Version);
    descriptor: (Lcoursier/core/Version;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #68                 // Field coursier/core/Version$.MODULE$:Lcoursier/core/Version$;
         3: aload_0
         4: invokevirtual #155                // Method items:()Lscala/collection/immutable/Vector;
         7: aload_1
         8: invokevirtual #155                // Method items:()Lscala/collection/immutable/Vector;
        11: invokevirtual #77                 // Method coursier/core/Version$.listCompare:(Lscala/collection/immutable/Vector;Lscala/collection/immutable/Vector;)I
        14: ireturn
      LineNumberTable:
        line 16: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/core/Version;
            0      15     1 other   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      other                          final

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #155                // Method items:()Lscala/collection/immutable/Vector;
         4: invokedynamic #177,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
         9: invokevirtual #181                // Method scala/collection/immutable/Vector.forall:(Lscala/Function1;)Z
        12: ireturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/Version;

  public coursier.core.Version withRepr(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/core/Version;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class coursier/core/Version
         3: dup
         4: aload_1
         5: invokespecial #186                // Method "<init>":(Ljava/lang/String;)V
         8: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/Version;
            0       9     1  repr   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      repr                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #189                // class java/lang/StringBuilder
         3: dup
         4: ldc           #191                // String Version(
         6: invokespecial #192                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #139                // Method repr:()Ljava/lang/String;
        15: invokestatic  #198                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc           #204                // String )
        25: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: invokevirtual #206                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      23     1     b   Ljava/lang/StringBuilder;
            0      34     0  this   Lcoursier/core/Version;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/core/Version
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/Version;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     58
         5: aload_0
         6: aload_1
         7: invokevirtual #213                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          62
        13: aload_1
        14: checkcast     #2                  // class coursier/core/Version
        17: astore_2
        18: iconst_1
        19: ifeq          54
        22: aload_0
        23: invokevirtual #139                // Method repr:()Ljava/lang/String;
        26: aload_2
        27: invokevirtual #139                // Method repr:()Ljava/lang/String;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          54
        43: aload_3
        44: invokevirtual #215                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          54
        50: iconst_1
        51: goto          55
        54: iconst_0
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: ireturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/core/Version, class java/lang/Object, class coursier/core/Version, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 250 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      37     2 other   Lcoursier/core/Version;
            0      64     0  this   Lcoursier/core/Version;
            0      64     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc           #219                // String Version
         4: invokestatic  #224                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: aload_0
        14: invokevirtual #139                // Method repr:()Ljava/lang/String;
        17: invokestatic  #224                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        20: iadd
        21: istore_1
        22: bipush        37
        24: iload_1
        25: imul
        26: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      17     1  code   I
            0      27     0  this   Lcoursier/core/Version;

  private scala.Tuple1<java.lang.String> tuple();
    descriptor: ()Lscala/Tuple1;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=1, args_size=1
         0: new           #231                // class scala/Tuple1
         3: dup
         4: aload_0
         5: invokevirtual #139                // Method repr:()Ljava/lang/String;
         8: invokespecial #234                // Method scala/Tuple1."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/core/Version;
    Signature: #229                         // ()Lscala/Tuple1<Ljava/lang/String;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #219                // String Version
         2: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/core/Version;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/Version;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 27
            }
        20: aload_0
        21: invokevirtual #139                // Method repr:()Ljava/lang/String;
        24: goto          42
        27: new           #241                // class java/lang/IndexOutOfBoundsException
        30: dup
        31: iload_2
        32: invokestatic  #247                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        35: invokevirtual #248                // Method java/lang/Object.toString:()Ljava/lang/String;
        38: invokespecial #249                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        41: athrow
        42: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lcoursier/core/Version;
            0      43     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 0
                       0: 20
                 default: 25
            }
        20: ldc           #252                // String repr
        22: goto          40
        25: new           #241                // class java/lang/IndexOutOfBoundsException
        28: dup
        29: iload_2
        30: invokestatic  #247                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        33: invokevirtual #248                // Method java/lang/Object.toString:()Ljava/lang/String;
        36: invokespecial #249                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        39: athrow
        40: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0  this   Lcoursier/core/Version;
            0      41     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public int compare(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #2                  // class coursier/core/Version
         5: invokevirtual #254                // Method compare:(Lcoursier/core/Version;)I
         8: ireturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lcoursier/core/Version;
            0       9     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public static final boolean $anonfun$isEmpty$1(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #258                // Method coursier/core/Version$Item.isEmpty:()Z
         4: ireturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public coursier.core.Version(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #132                // Field repr:Ljava/lang/String;
         5: aload_0
         6: invokespecial #262                // Method java/lang/Object."<init>":()V
         9: aload_0
        10: invokestatic  #266                // InterfaceMethod scala/math/Ordered.$init$:(Lscala/math/Ordered;)V
        13: aload_0
        14: invokestatic  #269                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        17: return
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/core/Version;
            0      18     1  repr   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      repr                           final

  public static final java.lang.Object $anonfun$isEmpty$1$adapted(coursier.core.Version$Item);
    descriptor: (Lcoursier/core/Version$Item;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #271                // Method $anonfun$isEmpty$1:(Lcoursier/core/Version$Item;)Z
         4: invokestatic  #275                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Lcoursier/core/Version$Item;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #287,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #18= #17 of #2;     // BigNumber=class coursier/core/Version$BigNumber of class coursier/core/Version
  public static #21= #20 of #2;           // =class coursier/core/Version$BigNumber$ of class coursier/core/Version
  public static final #24= #23 of #2;     // BuildMetadata=class coursier/core/Version$BuildMetadata of class coursier/core/Version
  public static #21= #26 of #2;           // =class coursier/core/Version$BuildMetadata$ of class coursier/core/Version
  public static abstract #29= #28 of #2;  // Item=class coursier/core/Version$Item of class coursier/core/Version
  public static #21= #31 of #2;           // =class coursier/core/Version$Max$ of class coursier/core/Version
  public static #21= #33 of #2;           // =class coursier/core/Version$Min$ of class coursier/core/Version
  public static final #36= #35 of #2;     // Number=class coursier/core/Version$Number of class coursier/core/Version
  public static #21= #38 of #2;           // =class coursier/core/Version$Number$ of class coursier/core/Version
  public static abstract #41= #40 of #2;  // Numeric=class coursier/core/Version$Numeric of class coursier/core/Version
  public static final #44= #43 of #2;     // Tag=class coursier/core/Version$Tag of class coursier/core/Version
  public static #21= #46 of #2;           // =class coursier/core/Version$Tag$ of class coursier/core/Version
  public static #21= #48 of #2;           // =class coursier/core/Version$Tokenizer$ of class coursier/core/Version
  public static final #53= #50 of #52;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // Ljava/lang/Object;Lscala/math/Ordered<Lcoursier/core/Version;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "Version.scala"
RuntimeVisibleAnnotations:
  0: #13(#14=s#15)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0011EgaBAd\u0003\u0013\u0014\u00111\u001b\u0005\u000b\u0005\u0013\u0001!Q1A\u0005\u0002\t-\u0001B\u0003B\u000f\u0001\t\u0005\t\u0015!\u0003\u0003\u000e!9!q\u0004\u0001\u0005\u0002\t\u0005\u0002B\u0003B\u0013\u0001!\u0015\r\u0011\"\u0001\u0003(!9!1\f\u0001\u0005\u0002\u0011]\u0006b\u0002B7\u0001\u0011\u0005!q\u000e\u0005\b\tw\u0003A\u0011\u0001C_\u0011\u001d\u0011\t\n\u0001C!\u0005\'CqAa(\u0001\t\u0003\"\t\rC\u0004\u0003.\u0002!\t\u0005\"2\t\u000f\tM\u0006\u0001\"\u0011\u00036\"9!q\u0017\u0001\u0005\n\te\u0006b\u0002Ba\u0001\u0011\u0005#1\u0019\u0005\b\u0005\u000b\u0004A\u0011\tB6\u0011\u001d\u00119\r\u0001C!\t\u0013DqAa4\u0001\t\u0003\"im\u0002\u0005\u00034\u0005%\u0007\u0012\u0001B\u001b\r!\t9-!3\t\u0002\t]\u0002b\u0002B\u0010%\u0011\u0005!q\t\u0005\f\u0005\u0013\u0012\"\u0019!C\u0001\u0003\u001b\u0014Y\u0005\u0003\u0005\u0003NI\u0001\u000b\u0011BA}\r\u001d\u0011yEEA\u0011\u0005#BqAa\b\u0017\t\u0003\u0011I\u0006C\u0004\u0003\\Y!\tA!\u0018\t\u000f\t%dC\"\u0001\u0003l!9!Q\u000e\f\u0005\u0002\t=\u0004b\u0002B<-\u0011\u0005!1\u000e\u0004\b\u0007#\u0011\u0012\u0011EB\n\u0011\u001d\u0011y\u0002\bC\u0001\u0007+AqA!\u0003\u001d\r\u0003\u0011Y\u0001C\u0004\u0004\u001aq1\taa\u0007\b\u000f\rm%\u0003#!\u0004\b\u001991\u0011\u0001\n\t\u0002\u000e\r\u0001b\u0002B\u0010C\u0011\u00051Q\u0001\u0005\n\u0005S\n#\u0019!C\u0001\u0005WB\u0001B!#\"A\u0003%!q\f\u0005\b\u0005o\nC\u0011\tB6\u0011%\u0011\t-IA\u0001\n\u0003\u0012\u0019\rC\u0005\u0003F\u0006\n\t\u0011\"\u0001\u0003l!I!qY\u0011\u0002\u0002\u0013\u00051\u0011\u0002\u0005\n\u0005G\f\u0013\u0011!C!\u0005KD\u0011Ba(\"\u0003\u0003%\ta!\u0004\t\u0013\tM\u0016%!A\u0005B\tU\u0006\"\u0003BIC\u0005\u0005I\u0011\tBJ\u0011%\u001190IA\u0001\n\u0013\u0011IpB\u0004\u0004\u001eJA\tIa7\u0007\u000f\tU\'\u0003#!\u0003X\"9!qD\u0018\u0005\u0002\te\u0007\"\u0003B5_\t\u0007I\u0011\u0001B6\u0011!\u0011Ii\fQ\u0001\n\t}\u0003\"\u0003Ba_\u0005\u0005I\u0011\tBb\u0011%\u0011)mLA\u0001\n\u0003\u0011Y\u0007C\u0005\u0003H>\n\t\u0011\"\u0001\u0003^\"I!1]\u0018\u0002\u0002\u0013\u0005#Q\u001d\u0005\n\u0005?{\u0013\u0011!C\u0001\u0005gD\u0011Ba-0\u0003\u0003%\tE!.\t\u0013\tEu&!A\u0005B\tM\u0005\"\u0003B|_\u0005\u0005I\u0011\u0002B}\u0011%\u0019yJ\u0005b\u0001\n\u0003\u0019)\u0006\u0003\u0005\u0004\"J\u0001\u000b\u0011BB)\u000f\u001d\u0019\u0019K\u0005E\u0001\u0007K3qaa*\u0013\u0011\u0003\u0019I\u000bC\u0004\u0003 y\"\taa+\u0007\u000f\r5f(!\t\u00040\"9!q\u0004!\u0005\u0002\rEva\u0002C\u0005}!\u00055q\u0018\u0004\b\u0007ss\u0004\u0012QB^\u0011\u001d\u0011yb\u0011C\u0001\u0007{C\u0011B!1D\u0003\u0003%\tEa1\t\u0013\t\u00157)!A\u0005\u0002\t-\u0004\"\u0003Bd\u0007\u0006\u0005I\u0011ABa\u0011%\u0011\u0019oQA\u0001\n\u0003\u0012)\u000fC\u0005\u0003 \u000e\u000b\t\u0011\"\u0001\u0004F\"I!1W\"\u0002\u0002\u0013\u0005#Q\u0017\u0005\n\u0005#\u001b\u0015\u0011!C!\u0005\'C\u0011Ba>D\u0003\u0003%IA!?\b\u000f\u0011-a\b#!\u0004P\u001a91\u0011\u001a \t\u0002\u000e-\u0007b\u0002B\u0010\u001d\u0012\u00051Q\u001a\u0005\n\u0005\u0003t\u0015\u0011!C!\u0005\u0007D\u0011B!2O\u0003\u0003%\tAa\u001b\t\u0013\t\u001dg*!A\u0005\u0002\rE\u0007\"\u0003Br\u001d\u0006\u0005I\u0011\tBs\u0011%\u0011yJTA\u0001\n\u0003\u0019)\u000eC\u0005\u00034:\u000b\t\u0011\"\u0011\u00036\"I!\u0011\u0013(\u0002\u0002\u0013\u0005#1\u0013\u0005\n\u0005ot\u0015\u0011!C\u0005\u0005s<q\u0001\"\u0004?\u0011\u0003\u001byPB\u0004\u0004zzB\tia?\t\u000f\t}\u0011\f\"\u0001\u0004~\"I!\u0011Y-\u0002\u0002\u0013\u0005#1\u0019\u0005\n\u0005\u000bL\u0016\u0011!C\u0001\u0005WB\u0011Ba2Z\u0003\u0003%\t\u0001\"\u0001\t\u0013\t\r\u0018,!A\u0005B\t\u0015\b\"\u0003BP3\u0006\u0005I\u0011\u0001C\u0003\u0011%\u0011\u0019,WA\u0001\n\u0003\u0012)\fC\u0005\u0003\u0012f\u000b\t\u0011\"\u0011\u0003\u0014\"I!q_-\u0002\u0002\u0013%!\u0011`\u0004\b\t\u001fq\u0004\u0012QBx\r\u001d\u0019IO\u0010EA\u0007WDqAa\be\t\u0003\u0019i\u000fC\u0005\u0003B\u0012\f\t\u0011\"\u0011\u0003D\"I!Q\u00193\u0002\u0002\u0013\u0005!1\u000e\u0005\n\u0005\u000f$\u0017\u0011!C\u0001\u0007cD\u0011Ba9e\u0003\u0003%\tE!:\t\u0013\t}E-!A\u0005\u0002\rU\b\"\u0003BZI\u0006\u0005I\u0011\tB[\u0011%\u0011\t\nZA\u0001\n\u0003\u0012\u0019\nC\u0005\u0003x\u0012\f\t\u0011\"\u0003\u0003z\u001e9A\u0011\u0003 \t\u0002\u000e}gaBBm}!\u000551\u001c\u0005\b\u0005?yG\u0011ABo\u0011%\u0011\tm\\A\u0001\n\u0003\u0012\u0019\rC\u0005\u0003F>\f\t\u0011\"\u0001\u0003l!I!qY8\u0002\u0002\u0013\u00051\u0011\u001d\u0005\n\u0005G|\u0017\u0011!C!\u0005KD\u0011Ba(p\u0003\u0003%\ta!:\t\u0013\tMv.!A\u0005B\tU\u0006\"\u0003BI_\u0006\u0005I\u0011\tBJ\u0011%\u00119p\\A\u0001\n\u0013\u0011I\u0010C\u0004\u0005\u0014y\"\t\u0001\"\u0006\t\u000f\u0011\r#\u0003\"\u0001\u0005F!9A1\n\n\u0005\n\u00115\u0003b\u0002C)%\u0011\u0005A1\u000b\u0005\b\u0005K\u0011B\u0011\u0001C,\u0011\u001d!iF\u0005C\u0001\t?Bq\u0001\"\u001b\u0013\t\u0013!Y\u0007C\u0004\u0005\u0014I!\t\u0001b!\u0007\r\r-#CAB\'\u0011-\u0011y(a\u0001\u0003\u0006\u0004%\tAa\u001b\t\u0017\t\u0005\u00151\u0001B\u0001B\u0003%!q\f\u0005\t\u0005?\t\u0019\u0001\"\u0001\u0004P!Q!\u0011NA\u0002\u0005\u0004%\tAa\u001b\t\u0013\t%\u00151\u0001Q\u0001\n\t}\u0003\u0002CB\r\u0003\u0007!\ta!\u0016\t\u0011\t%\u00111\u0001C\u0001\u0005\u0017A\u0001Ba\u001e\u0002\u0004\u0011\u0005#1\u000e\u0005\t\u0005\u0017\u000b\u0019\u0001\"\u0001\u0004X!A!\u0011SA\u0002\t\u0003\u0012\u0019\n\u0003\u0005\u0003 \u0006\rA\u0011IB.\u0011!\u0011i+a\u0001\u0005B\r}\u0003\u0002\u0003BZ\u0003\u0007!\tE!.\t\u0011\t]\u00161\u0001C\u0005\u0007GB\u0001B!1\u0002\u0004\u0011\u0005#1\u0019\u0005\t\u0005\u000b\f\u0019\u0001\"\u0011\u0003l!A!qYA\u0002\t\u0003\u001a9\u0007\u0003\u0005\u0003P\u0006\rA\u0011IB6\u000f\u001d!9I\u0005E\u0001\t\u00133qaa\u0013\u0013\u0011\u0003!Y\t\u0003\u0005\u0003 \u0005-B\u0011\u0001CG\u0011!!\u0019\"a\u000b\u0005\u0002\u0011=\u0005B\u0003B|\u0003W\t\t\u0011\"\u0003\u0003z\u001a11q\u0004\n\u0003\u0007CA1Ba \u00024\t\u0015\r\u0011\"\u0001\u0004$!Y!\u0011QA\u001a\u0005\u0003\u0005\u000b\u0011BB\u0013\u0011!\u0011y\"a\r\u0005\u0002\r-\u0002B\u0003B5\u0003g\u0011\r\u0011\"\u0001\u0003l!I!\u0011RA\u001aA\u0003%!q\f\u0005\t\u00073\t\u0019\u0004\"\u0001\u00042!A!\u0011BA\u001a\t\u0003\u0011Y\u0001\u0003\u0005\u0003x\u0005MB\u0011\tB6\u0011!\u0011Y)a\r\u0005\u0002\rM\u0002\u0002\u0003BI\u0003g!\tEa%\t\u0011\t}\u00151\u0007C!\u0007oA\u0001B!,\u00024\u0011\u000531\b\u0005\t\u0005g\u000b\u0019\u0004\"\u0011\u00036\"A!qWA\u001a\t\u0013\u0019y\u0004\u0003\u0005\u0003B\u0006MB\u0011\tBb\u0011!\u0011)-a\r\u0005B\t-\u0004\u0002\u0003Bd\u0003g!\tea\u0011\t\u0011\t=\u00171\u0007C!\u0007\u000f:q\u0001b%\u0013\u0011\u0003!)JB\u0004\u0004 IA\t\u0001b&\t\u0011\t}\u00111\fC\u0001\t3C\u0001\u0002b\u0005\u0002\\\u0011\u0005A1\u0014\u0005\u000b\u0005o\fY&!A\u0005\n\tehABB8%\t\u0019\t\bC\u0006\u0003\u0000\u0005\r$Q1A\u0005\u0002\t-\u0001b\u0003BA\u0003G\u0012\t\u0011)A\u0005\u0005\u001bA\u0001Ba\b\u0002d\u0011\u000511\u000f\u0005\u000b\u0005S\n\u0019G1A\u0005\u0002\t-\u0004\"\u0003BE\u0003G\u0002\u000b\u0011\u0002B0\u0011)\u0019I(a\u0019C\u0002\u0013%!1\u000e\u0005\n\u0007w\n\u0019\u0007)A\u0005\u0005?B1b! \u0002d!\u0015\r\u0011\"\u0001\u0003l!A!qOA2\t\u0003\u0012Y\u0007\u0003\u0005\u0004\u0000\u0005\rD\u0011\u0001B8\u0011!\u0019\t)a\u0019\u0005\u0002\r\r\u0005\u0002\u0003BF\u0003G\"\taa\"\t\u0011\tE\u00151\rC!\u0005\'C\u0001Ba(\u0002d\u0011\u000531\u0012\u0005\t\u0005[\u000b\u0019\u0007\"\u0011\u0004\u0010\"A!1WA2\t\u0003\u0012)\f\u0003\u0005\u00038\u0006\rD\u0011\u0002B]\u0011!\u0011\t-a\u0019\u0005B\t\r\u0007\u0002\u0003Bc\u0003G\"\tEa\u001b\t\u0011\t\u001d\u00171\rC!\u0007\'C\u0001Ba4\u0002d\u0011\u00053qS\u0004\b\t?\u0013\u0002\u0012\u0001CQ\r\u001d\u0019yG\u0005E\u0001\tGC\u0001Ba\b\u0002\u0012\u0012\u0005AQ\u0015\u0005\t\t\'\t\t\n\"\u0001\u0005(\"Q!q_AI\u0003\u0003%IA!?\u0007\r\tm$C\u0001B?\u0011-\u0011y(!\'\u0003\u0006\u0004%\tAa\u0003\t\u0017\t\u0005\u0015\u0011\u0014B\u0001B\u0003%!Q\u0002\u0005\t\u0005?\tI\n\"\u0001\u0003\u0004\"Q!\u0011NAM\u0005\u0004%\tAa\u001b\t\u0013\t%\u0015\u0011\u0014Q\u0001\n\t}\u0003\u0002\u0003B<\u00033#\tEa\u001b\t\u0011\t-\u0015\u0011\u0014C\u0001\u0005\u001bC\u0001B!%\u0002\u001a\u0012\u0005#1\u0013\u0005\t\u0005?\u000bI\n\"\u0011\u0003\"\"A!QVAM\t\u0003\u0012y\u000b\u0003\u0005\u00034\u0006eE\u0011\tB[\u0011!\u00119,!\'\u0005\n\te\u0006\u0002\u0003Ba\u00033#\tEa1\t\u0011\t\u0015\u0017\u0011\u0014C!\u0005WB\u0001Ba2\u0002\u001a\u0012\u0005#\u0011\u001a\u0005\t\u0005\u001f\fI\n\"\u0011\u0003R\u001e9A1\u0016\n\t\u0002\u00115fa\u0002B>%!\u0005Aq\u0016\u0005\t\u0005?\ti\f\"\u0001\u00052\"AA1CA_\t\u0003!\u0019\f\u0003\u0006\u0003x\u0006u\u0016\u0011!C\u0005\u0005sD\u0011Ba>\u0013\u0003\u0003%IA!?\u0003\u000fY+\'o]5p]*!\u00111ZAg\u0003\u0011\u0019wN]3\u000b\u0005\u0005=\u0017\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001MI\u0001!!6\u0002b\u0006u(1\u0001\t\u0005\u0003/\fi.\u0004\u0002\u0002Z*\u0011\u00111\\\u0001\u0006g\u000e\fG.Y\u0005\u0005\u0003?\fIN\u0001\u0004B]f\u0014VM\u001a\t\u0007\u0003G\f\u00190!?\u000f\t\u0005\u0015\u0018q\u001e\b\u0005\u0003O\fi/\u0004\u0002\u0002j*!\u00111^Ai\u0003\u0019a$o\\8u}%\u0011\u00111\\\u0005\u0005\u0003c\fI.A\u0004qC\u000e\\\u0017mZ3\n\t\u0005U\u0018q\u001f\u0002\b\u001fJ$WM]3e\u0015\u0011\t\t0!7\u0011\u0007\u0005m\b!\u0004\u0002\u0002JB!\u0011q[A\u0000\u0013\u0011\u0011\t!!7\u0003\u000fA\u0013x\u000eZ;diB!\u00111\u001dB\u0003\u0013\u0011\u00119!a>\u0003\u0019M+\'/[1mSj\f\'\r\\3\u0002\tI,\u0007O]\u000b\u0003\u0005\u001b\u0001BAa\u0004\u0003\u00189!!\u0011\u0003B\n!\u0011\t9/!7\n\t\tU\u0011\u0011\\\u0001\u0007!J,G-\u001a4\n\t\te!1\u0004\u0002\u0007\'R\u0014\u0018N\\4\u000b\t\tU\u0011\u0011\\\u0001\u0006e\u0016\u0004(\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\t\u0005e(1\u0005\u0005\b\u0005\u0013\u0019\u0001\u0019\u0001B\u0007\u0003\u0015IG/Z7t+\t\u0011I\u0003\u0005\u0004\u0002d\n-\"qF\u0005\u0005\u0005[\t9P\u0001\u0004WK\u000e$xN\u001d\t\u0004\u0005c1bbAA~#\u00059a+\u001a:tS>t\u0007cAA~%M)!#!6\u0003:A!!1\bB#\u001b\t\u0011iD\u0003\u0003\u0003@\t\u0005\u0013AA5p\u0015\t\u0011\u0019%\u0001\u0003kCZ\f\u0017\u0002\u0002B\u0004\u0005{!\"A!\u000e\u0002\ti,\'o\\\u000b\u0003\u0003s\fQA_3s_\u0002\u0012A!\u0013;f[N)a#!6\u0003TA1\u00111]Az\u0005+\u00022Aa\u0016\u0017\u001b\u0005\u0011BC\u0001B+\u0003\u001d\u0019w.\u001c9be\u0016$BAa\u0018\u0003fA!\u0011q\u001bB1\u0013\u0011\u0011\u0019\'!7\u0003\u0007%sG\u000fC\u0004\u0003ha\u0001\rA!\u0016\u0002\u000b=$\b.\u001a:\u0002\u000b=\u0014H-\u001a:\u0016\u0005\t}\u0013aB5t\u000b6\u0004H/_\u000b\u0003\u0005c\u0002B!a6\u0003t%!!QOAm\u0005\u001d\u0011un\u001c7fC:\fabY8na\u0006\u0014X\rV8F[B$\u00180\u000b\u0005\u0017\u00033{\u0013\u0005HA2\u00055\u0011U/\u001b7e\u001b\u0016$\u0018\rZ1uCNA\u0011\u0011\u0014B+\u0003{\u0014\u0019!A\u0003wC2,X-\u0001\u0004wC2,X\r\t\u000b\u0005\u0005\u000b\u00139\t\u0005\u0003\u0003X\u0005e\u0005\u0002\u0003B@\u0003?\u0003\rA!\u0004\u0002\r=\u0014H-\u001a:!\u0003%9\u0018\u000e\u001e5WC2,X\r\u0006\u0003\u0003\u0006\n=\u0005\u0002\u0003B@\u0003O\u0003\rA!\u0004\u0002\u0011Q|7\u000b\u001e:j]\u001e$\"A!&\u0011\t\t]%QT\u0007\u0003\u00053SAAa\'\u0003B\u0005!A.\u00198h\u0013\u0011\u0011IB!\'\u0002\u0011\r\fg.R9vC2$BA!\u001d\u0003$\"A!QUAV\u0001\u0004\u00119+A\u0002pE*\u0004B!a6\u0003*&!!1VAm\u0005\r\te._\u0001\u0007KF,\u0018\r\\:\u0015\t\tE$\u0011\u0017\u0005\t\u0005K\u000bi\u000b1\u0001\u0003(\u0006A\u0001.Y:i\u0007>$W\r\u0006\u0002\u0003`\u0005)A/\u001e9mKV\u0011!1\u0018\t\u0007\u0003/\u0014iL!\u0004\n\t\t}\u0016\u0011\u001c\u0002\u0007)V\u0004H.Z\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\u0011)*\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0001\bqe>$Wo\u0019;FY\u0016lWM\u001c;\u0015\t\t\u001d&1\u001a\u0005\t\u0005\u001b\f9\f1\u0001\u0003`\u0005\ta.\u0001\nqe>$Wo\u0019;FY\u0016lWM\u001c;OC6,G\u0003\u0002BK\u0005\'D\u0001B!4\u0002:\u0002\u0007!q\f\u0002\u0004\u001b\u0006D8cB\u0018\u0003V\u0005u(1\u0001\u000b\u0003\u00057\u00042Aa\u00160)\u0011\u00119Ka8\t\u0013\t\u0005X\'!AA\u0002\t}\u0013a\u0001=%c\u0005y\u0001O]8ek\u000e$\u0018\n^3sCR|\'/\u0006\u0002\u0003hB1!\u0011\u001eBx\u0005Ok!Aa;\u000b\t\t5\u0018\u0011\\\u0001\u000bG>dG.Z2uS>t\u0017\u0002\u0002By\u0005W\u0014\u0001\"\u0013;fe\u0006$xN\u001d\u000b\u0005\u0005c\u0012)\u0010C\u0005\u0003b^\n\t\u00111\u0001\u0003(\u0006aqO]5uKJ+\u0007\u000f\\1dKR\u0011!1 \t\u0005\u0005/\u0013i0\u0003\u0003\u0003\u0000\ne%AB(cU\u0016\u001cGOA\u0002NS:\u001cr!\tB+\u0003{\u0014\u0019\u0001\u0006\u0002\u0004\bA\u0019!qK\u0011\u0015\t\t\u001d61\u0002\u0005\n\u0005CD\u0013\u0011!a\u0001\u0005?\"BA!\u001d\u0004\u0010!I!\u0011\u001d\u0016\u0002\u0002\u0003\u0007!q\u0015\u0002\b\u001dVlWM]5d\'\ra\"Q\u000b\u000b\u0003\u0007/\u00012Aa\u0016\u001d\u0003\u0011qW\r\u001f;\u0016\u0005\r]\u0011&\u0002\u000f\u00024\u0005\r!!\u0003\"jO:+XNY3s\'!\t\u0019da\u0006\u0002~\n\rQCAB\u0013!\u0011\t\u0019oa\n\n\t\r%\u0012q\u001f\u0002\u0007\u0005&<\u0017J\u001c;\u0015\t\r52q\u0006\t\u0005\u0005/\n\u0019\u0004\u0003\u0005\u0003\u0000\u0005e\u0002\u0019AB\u0013+\t\u0019i\u0003\u0006\u0003\u0004.\rU\u0002\u0002\u0003B@\u0003\u000b\u0002\ra!\n\u0015\t\tE4\u0011\b\u0005\t\u0005K\u000bI\u00051\u0001\u0003(R!!\u0011OB\u001f\u0011!\u0011)+a\u0013A\u0002\t\u001dVCAB!!\u0019\t9N!0\u0004&Q!!qUB#\u0011!\u0011i-!\u0016A\u0002\t}C\u0003\u0002BK\u0007\u0013B\u0001B!4\u0002X\u0001\u0007!q\f\u0002\u0007\u001dVl\'-\u001a:\u0014\u0011\u0005\r1qCA\u007f\u0005\u0007!Ba!\u0015\u0004TA!!qKA\u0002\u0011!\u0011y(!\u0003A\u0002\t}SCAB))\u0011\u0019\tf!\u0017\t\u0011\t}\u0014Q\u0003a\u0001\u0005?\"BA!\u001d\u0004^!A!QUA\r\u0001\u0004\u00119\u000b\u0006\u0003\u0003r\r\u0005\u0004\u0002\u0003BS\u00037\u0001\rAa*\u0016\u0005\r\u0015\u0004CBAl\u0005{\u0013y\u0006\u0006\u0003\u0003(\u000e%\u0004\u0002\u0003Bg\u0003K\u0001\rAa\u0018\u0015\t\tU5Q\u000e\u0005\t\u0005\u001b\f9\u00031\u0001\u0003`\t\u0019A+Y4\u0014\u0011\u0005\r$QKA\u007f\u0005\u0007!Ba!\u001e\u0004xA!!qKA2\u0011!\u0011y(!\u001bA\u0002\t5\u0011AC8uQ\u0016\u0014H*\u001a<fY\u0006Yq\u000e\u001e5fe2+g/\u001a7!\u0003\u0015aWM^3m\u00031I7\u000f\u0015:f%\u0016dW-Y:f\u0003)\u0019w.\u001c9be\u0016$\u0016m\u001a\u000b\u0005\u0005?\u001a)\t\u0003\u0005\u0003h\u0005e\u0004\u0019AB;)\u0011\u0019)h!#\t\u0011\t}\u00141\u0010a\u0001\u0005\u001b!BA!\u001d\u0004\u000e\"A!QUA@\u0001\u0004\u00119\u000b\u0006\u0003\u0003r\rE\u0005\u0002\u0003BS\u0003\u0003\u0003\rAa*\u0015\t\t\u001d6Q\u0013\u0005\t\u0005\u001b\fY\t1\u0001\u0003`Q!!QSBM\u0011!\u0011i-!$A\u0002\t}\u0013aA\'j]\u0006\u0019Q*\u0019=\u0002\u000b\u0015l\u0007\u000f^=\u0002\r\u0015l\u0007\u000f^=!\u0003%!vn[3oSj,\'\u000fE\u0002\u0003Xy\u0012\u0011\u0002V8lK:L\'0\u001a:\u0014\u0007y\n)\u000e\u0006\u0002\u0004&\nI1+\u001a9be\u0006$xN]\n\u0004\u0001\u0006UGCABZ!\r\u0019)\fQ\u0007\u0002}%2\u0001i\u0011(pIf\u00131\u0001R8u\'\u001d\u001951WA\u007f\u0005\u0007!\"aa0\u0011\u0007\rU6\t\u0006\u0003\u0003(\u000e\r\u0007\"\u0003Bq\u000f\u0006\u0005\t\u0019\u0001B0)\u0011\u0011\tha2\t\u0013\t\u0005\u0018*!AA\u0002\t\u001d&A\u0002%za\",gnE\u0004O\u0007g\u000biPa\u0001\u0015\u0005\r=\u0007cAB[\u001dR!!qUBj\u0011%\u0011\tOUA\u0001\u0002\u0004\u0011y\u0006\u0006\u0003\u0003r\r]\u0007\"\u0003Bq)\u0006\u0005\t\u0019\u0001BT\u0005\u0011quN\\3\u0014\u000f=\u001c\u0019,!@\u0003\u0004Q\u00111q\u001c\t\u0004\u0007k{G\u0003\u0002BT\u0007GD\u0011B!9t\u0003\u0003\u0005\rAa\u0018\u0015\t\tE4q\u001d\u0005\n\u0005C,\u0018\u0011!a\u0001\u0005O\u0013A\u0001\u00157vgN9Ama-\u0002~\n\rACABx!\r\u0019)\f\u001a\u000b\u0005\u0005O\u001b\u0019\u0010C\u0005\u0003b\"\f\t\u00111\u0001\u0003`Q!!\u0011OB|\u0011%\u0011\tO[A\u0001\u0002\u0004\u00119K\u0001\u0006V]\u0012,\'o]2pe\u0016\u001cr!WBZ\u0003{\u0014\u0019\u0001\u0006\u0002\u0004\u0000B\u00191QW-\u0015\t\t\u001dF1\u0001\u0005\n\u0005Cl\u0016\u0011!a\u0001\u0005?\"BA!\u001d\u0005\b!I!\u0011]0\u0002\u0002\u0003\u0007!qU\u0001\u0004\t>$\u0018A\u0002%za\",g.\u0001\u0006V]\u0012,\'o]2pe\u0016\fA\u0001\u00157vg\u0006!aj\u001c8f\u0003\u0015\t\u0007\u000f\u001d7z)\u0011!9\u0002b\u0010\u0011\u0011\u0005]G\u0011\u0004B+\t;IA\u0001b\u0007\u0002Z\n1A+\u001e9mKJ\u0002b\u0001b\b\u00058\u0011ub\u0002\u0002C\u0011\tgqA\u0001b\t\u0005.9!AQ\u0005C\u0015\u001d\u0011\t)\u000fb\n\n\t\t5\u0018\u0011\\\u0005\u0005\tW\u0011Y/\u0001\u0004d_6\u0004\u0018\r^\u0005\u0005\t_!\t$A\u0005j[6,H/\u00192mK*!A1\u0006Bv\u0013\u0011\t\t\u0010\"\u000e\u000b\t\u0011=B\u0011G\u0005\u0005\ts!YD\u0001\u0005MCjLH*[:u\u0015\u0011\t\t\u0010\"\u000e\u0011\u0011\u0005]G\u0011DBZ\u0005+Bq\u0001\"\u0011z\u0001\u0004\u0011i!A\u0002tiJ\f\u0011\"[:Ok6,\'/[2\u0015\t\tEDq\t\u0005\b\t\u0013R\b\u0019\u0001B+\u0003\u0011IG/Z7\u0002#%\u001ch*^7fe&\u001cwJ]\'j]6\u000b\u0007\u0010\u0006\u0003\u0003r\u0011=\u0003b\u0002C%w\u0002\u0007!QK\u0001\u0010SN\u0014U/\u001b7e\u001b\u0016$\u0018\rZ1uCR!!\u0011\u000fC+\u0011\u001d!I\u0005 a\u0001\u0005+\"B\u0001\"\u0017\u0005\\A1\u00111\u001dB\u0016\u0005+BqA!\u0003~\u0001\u0004\u0011i!A\u0006mSN$8i\\7qCJ,GC\u0002B0\tC\")\u0007C\u0004\u0005dy\u0004\r\u0001\"\u0017\u0002\r\u0019L\'o\u001d;1\u0011\u001d!9G a\u0001\t3\nqa]3d_:$\u0007\'\u0001\u0007mSN$8i\\7qCJ,\u0007\u0007\u0006\u0004\u0003`\u00115D\u0011\u000f\u0005\b\t_z\b\u0019\u0001C-\u0003\u00151\u0017N]:u\u0011\u001d!\u0019h a\u0001\t3\naa]3d_:$\u0007fA@\u0005xA!A\u0011\u0010C@\u001b\t!YH\u0003\u0003\u0005~\u0005e\u0017AC1o]>$\u0018\r^5p]&!A\u0011\u0011C>\u0005\u001d!\u0018-\u001b7sK\u000e$B!!?\u0005\u0006\"A!\u0011BA\u0001\u0001\u0004\u0011i!\u0001\u0004Ok6\u0014WM\u001d\t\u0005\u0005/\nYc\u0005\u0004\u0002,\u0005U\'\u0011\b\u000b\u0003\t\u0013#Ba!\u0015\u0005\u0012\"A!qPA\u0018\u0001\u0004\u0011y&A\u0005CS\u001etU/\u001c2feB!!qKA.\'\u0019\tY&!6\u0003:Q\u0011AQ\u0013\u000b\u0005\u0007[!i\n\u0003\u0005\u0003\u0000\u0005}\u0003\u0019AB\u0013\u0003\r!\u0016m\u001a\t\u0005\u0005/\n\tj\u0005\u0004\u0002\u0012\u0006U\'\u0011\b\u000b\u0003\tC#Ba!\u001e\u0005*\"A!qPAK\u0001\u0004\u0011i!A\u0007Ck&dG-T3uC\u0012\fG/\u0019\t\u0005\u0005/\nil\u0005\u0004\u0002>\u0006U\'\u0011\b\u000b\u0003\t[#BA!\"\u00056\"A!qPAa\u0001\u0004\u0011i\u0001\u0006\u0003\u0003`\u0011e\u0006b\u0002B4\u000b\u0001\u0007\u0011\u0011`\u0001\to&$\bNU3qeR!\u0011\u0011 C`\u0011\u001d\u0011Ia\u0002a\u0001\u0005\u001b!BA!\u001d\u0005D\"9!QU\u0005A\u0002\t\u001dF\u0003\u0002B9\t\u000fDqA!*\u000b\u0001\u0004\u00119\u000b\u0006\u0003\u0003(\u0012-\u0007b\u0002Bg\u001f\u0001\u0007!q\f\u000b\u0005\u0005+#y\rC\u0004\u0003NB\u0001\rAa\u0018"
    )
BootstrapMethods:
  0: #174 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #159 (Ljava/lang/Object;)Ljava/lang/Object;
      #164 REF_invokeStatic coursier/core/Version.$anonfun$isEmpty$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #165 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
      #166 5
      #167 1
      #165 (Lcoursier/core/Version$Item;)Ljava/lang/Object;
  1: #284 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #164 REF_invokeStatic coursier/core/Version.$anonfun$isEmpty$1$adapted:(Lcoursier/core/Version$Item;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 01 05 00 55 01 00 A6 00 A7 01 00 76
   00 6F 01 00 7E 00 6F 01 00 6E 00 6F 01 00 7A 00
   6F 01 00 BD 00 BE 01 00 D7 00 6F 01 00 9D 00 9E
   01 00 9D 00 83 01 00 82 00 83 01 00 D9 00 6F 01
   00 DE 00 DF 01 00 A2 00 A3 01 00 3C 00 8C 01 00
   8B 00 8C 01 00 F2 00 DF 01 00 F3 00 F4 01 01 00
   01 01 01 00 69 00 61 01 00 60 00 61 01 00 F1 00
   88 01 00 3F 00 88 01 00 C1 00 88 01 00 E9 00 EA
   01 00 BC 00 44 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
