Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/loggers/RefreshLogger.class
  Last modified May 29, 2022; size 22687 bytes
  SHA-256 checksum 1f6691f7fb5840329af7d0c0dc8d5d6deeb56696ed264ceb8c564b22c095b382
  Compiled from "RefreshLogger.scala"
public class coursier.cache.loggers.RefreshLogger implements coursier.cache.CacheLogger
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // coursier/cache/loggers/RefreshLogger
  super_class: #4                         // java/lang/Object
  interfaces: 1, fields: 8, methods: 60, attributes: 6
Constant pool:
    #1 = Utf8               coursier/cache/loggers/RefreshLogger
    #2 = Class              #1            // coursier/cache/loggers/RefreshLogger
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               coursier/cache/CacheLogger
    #6 = Class              #5            // coursier/cache/CacheLogger
    #7 = Utf8               RefreshLogger.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\r\u0015s!B(Q\u0011\u00039f!B-Q\u0011\u0003Q\u0006\"B1\u0002\t\u0003\u0011\u0007\"B2\u0002\t\u0003!\u0007bB8\u0002#\u0003%\t\u0001\u001d\u0005\bw\u0006\t\n\u0011\"\u0001q\u0011\u0015a\u0018\u0001\"\u0001~\u0011\u0019a\u0018\u0001\"\u0001\u0003r\"1A0\u0001C\u0001\u0005{Da\u0001`\u0001\u0005\u0002\r%\u0001B\u0002?\u0002\t\u0003\u0019i\u0001\u0003\u0004}\u0003\u0011\u000511\u0003\u0005\u0007y\u0006!\taa\u0007\t\rq\fA\u0011AB\u0013\u0011\u0019a\u0018\u0001\"\u0001\u0004,!1A0\u0001C\u0001\u0007gA!b!\u0010\u0002\u0011\u000b\u0007I\u0011AA\u000f\r\u0019\ti%\u0001\u0003\u0002P!Q\u0011\u0011B\t\u0003\u0002\u0003\u0006I!a\u0003\t\u0015\u0005m\u0011C!b\u0001\n\u0003\t\u0019\u0007C\u0005\u0002fE\u0011\t\u0011)A\u0005K\"1\u0011-\u0005C\u0001\u0003OB\u0011\"!\u001d\u0012\u0001\u0004%I!a\u001d\t\u0013\u0005m\u0015\u00031A\u0005\n\u0005u\u0005\u0002CAU#\u0001\u0006K!!\u001e\t\u000f\u0005-\u0016\u0003\"\u0001\u0002.\"9\u00111W\t\u0005\n\u0005U\u0006\"CA\\#\u0001\u0007I\u0011BA\u000f\u0011%\tI,\u0005a\u0001\n\u0013\tY\fC\u0004\u0002@F\u0001\u000b\u0015\u00026\t\u0013\u0005\u0005\u0017\u00031A\u0005\n\u0005u\u0001\"CAb#\u0001\u0007I\u0011BAc\u0011\u001d\tI-\u0005Q!\n)Dq!a3\u0012\t\u0003\ti\rC\u0005\u0002PF\u0011\r\u0011\"\u0003\u0002R\"A\u0011q\\\t!\u0002\u0013\t\u0019\u000eC\u0004\u0002bF!\t!!.\t\u0013\u0005\r\u0018C1A\u0005\n\u0005\u0015\b\u0002CA|#\u0001\u0006I!a:\t\u0013\u0005e\u0018C1A\u0005\n\u0005m\b\u0002\u0003B\u0006#\u0001\u0006I!!@\t\u0013\t5\u0011C1A\u0005\u0002\t=\u0001\u0002\u0003B\f#\u0001\u0006IA!\u0005\t\u000f\te\u0011\u0003\"\u0001\u0003\u001c!9!qF\t\u0005\u0002\tE\u0002b\u0002B$#\u0011\u0005\u0011Q\u0017\u0005\b\u0005\u0013\nB\u0011AA[\u0011!\u0019y$AI\u0001\n\u0003\u0001\b\u0002CB!\u0003E\u0005I\u0011\u00019\t\u0011\r\r\u0013!%A\u0005\u0002A4A!\u0017)\u0001\u007f\"Q\u0011\u0011\u0002\u001a\u0003\u0002\u0003\u0006I!a\u0003\t\u0013\u0005m!G!A!\u0002\u0013)\u0007\"C53\u0005\u000b\u0007I\u0011AA\u000f\u0011%\tyB\rB\u0001B\u0003%!\u000eC\u0005\u0002\"I\u0012\t\u0011)A\u0005U\"I\u00111\u0005\u001a\u0003\u0002\u0003\u0006IA\u001b\u0005\u0007CJ\"\t!!\n\t\r\u0005\u0014D\u0011AA\u0019\u0011\u0019\t\'\u0007\"\u0001\u00028!I\u0011q\b\u001aA\u0002\u0013%\u0011\u0011\t\u0005\n\u0005\u0017\u0012\u0004\u0019!C\u0005\u0005\u001bB\u0001B!\u00153A\u0003&\u00111\t\u0005\n\u0005\'\u0012$\u0019!C\u0005\u0005+B\u0001Ba\u00163A\u0003%\u0011\u0011\u000b\u0005\b\u00053\u0012D\u0011\u0002B.\u0011\u001d\u0011iF\rC!\u0005?BqAa\u00123\t\u0003\n)\fC\u0004\u0003nI\"\tEa\u001c\t\u000f\t\u0005%\u0007\"\u0011\u0003\u0004\"9!Q\u0012\u001a\u0005B\t=\u0005b\u0002BKe\u0011\u0005#q\u0013\u0005\b\u0005[\u0013D\u0011\tBX\u0011\u001d\u00119L\rC!\u0005sCqAa03\t\u0003\u0012\t\rC\u0004\u0003LJ\"\tE!4\t\u0017\t]\'\u00071AA\u0002\u0013%!\u0011\u001c\u0005\f\u0005C\u0014\u0004\u0019!a\u0001\n\u0013\u0011\u0019\u000fC\u0006\u0003hJ\u0002\r\u0011!Q!\n\tm\u0017!\u0004*fMJ,7\u000f\u001b\'pO\u001e,\'O\u0003\u0002R%\u00069An\\4hKJ\u001c(BA*U\u0003\u0015\u0019\u0017m\u00195f\u0015\u0005)\u0016\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001A\u0011\u0001,A\u0007\u0002!\ni!+\u001a4sKNDGj\\4hKJ\u001c\"!A.\u0011\u0005q{V\"A/\u000b\u0003y\u000bQa]2bY\u0006L!\u0001Y/\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\tq+\u0001\beK\u001a\fW\u000f\u001c;ESN\u0004H.Y=\u0015\u0007\u0015DW\u000e\u0005\u0002YM&\u0011q\r\u0015\u0002\u000f%\u00164\'/Z:i\t&\u001c\b\u000f\\1z\u0011\u001dI7\u0001%AA\u0002)\fABZ1mY\n\f7m[\'pI\u0016\u0004\"\u0001X6\n\u00051l&a\u0002\"p_2,\u0017M\u001c\u0005\b]\u000e\u0001\n\u00111\u0001k\u0003\u0015\tX/[3u\u0003a!WMZ1vYR$\u0015n\u001d9mCf$C-\u001a4bk2$H%M\u000b\u0002c*\u0012!N]\u0016\u0002gB\u0011A/_\u0007\u0002k*\u0011ao^\u0001\nk:\u001c\u0007.Z2lK\u0012T!\u0001_/\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002{k\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u00021\u0011,g-Y;mi\u0012K7\u000f\u001d7bs\u0012\"WMZ1vYR$#\'\u0001\u0004de\u0016\fG/\u001a\u000b\u0002}B\u0011\u0001LM\n\u0005em\u000b\t\u0001\u0005\u0003\u0002\u0004\u0005\u0015Q\"\u0001*\n\u0007\u0005\u001d!KA\u0006DC\u000eDW\rT8hO\u0016\u0014\u0018aA8viB!\u0011QBA\f\u001b\t\tyA\u0003\u0003\u0002\u0012\u0005M\u0011AA5p\u0015\t\t)\"\u0001\u0003kCZ\f\u0017\u0002BA\r\u0003\u001f\u0011aa\u0016:ji\u0016\u0014\u0018a\u00023jgBd\u0017-_\u000b\u0002U\u0006ia-\u00197mE\u0006\u001c7.T8eK\u0002\n1\u0002\\8h\u0007\"\fgnZ5oO\u0006\tBn\\4QS\u000e\\W\r\u001a,feNLwN\\:\u0015\u0017y\f9#!\u000b\u0002,\u00055\u0012q\u0006\u0005\b\u0003\u0013I\u0004\u0019AA\u0006\u0011\u0019\tY\"\u000fa\u0001K\"9\u0011.\u000fI\u0001\u0002\u0004Q\u0007\u0002CA\u0011sA\u0005\t\u0019\u00016\t\u0011\u0005\r\u0012\b%AA\u0002)$RA`A\u001a\u0003kAq!!\u0003;\u0001\u0004\tY\u0001\u0003\u0004\u0002\u001ci\u0002\r!\u001a\u000b\b}\u0006e\u00121HA\u001f\u0011\u001d\tIa\u000fa\u0001\u0003\u0017Aa!a\u0007<\u0001\u0004)\u0007\"B5<\u0001\u0004Q\u0017!E;qI\u0006$XMU;o]\u0006\u0014G.Z(qiV\u0011\u00111\t\t\u00069\u0006\u0015\u0013\u0011J\u0005\u0004\u0003\u000fj&AB(qi&|g\u000eE\u0002\u0002LEq!\u0001\u0017\u0001\u0003+U\u0003H-\u0019;f\t&\u001c\b\u000f\\1z%Vtg.\u00192mKN)\u0011#!\u0015\u0002^A!\u00111KA-\u001b\t\t)F\u0003\u0003\u0002X\u0005M\u0011\u0001\u00027b]\u001eLA!a\u0017\u0002V\t1qJ\u00196fGR\u0004B!a\u0015\u0002`%!\u0011\u0011MA+\u0005!\u0011VO\u001c8bE2,W#A3\u0002\u0011\u0011L7\u000f\u001d7bs\u0002\"b!!\u001b\u0002n\u0005=\u0004cAA6#5\t\u0011\u0001C\u0004\u0002\nU\u0001\r!a\u0003\t\r\u0005mQ\u00031\u0001f\u0003!iWm]:bO\u0016\u001cXCAA;!\u0019\t9(!!\u0002\u00066\u0011\u0011\u0011\u0010\u0006\u0005\u0003w\ni(\u0001\u0006d_:\u001cWO\u001d:f]RTA!a \u0002\u0014\u0005!Q\u000f^5m\u0013\u0011\t\u0019)!\u001f\u0003+\r{gnY;se\u0016tG\u000fT5oW\u0016$\u0017+^3vKB!\u0011qQAK\u001d\u0011\tI)!%\u0011\u0007\u0005-U,\u0004\u0002\u0002\u000e*\u0019\u0011q\u0012,\u0002\rq\u0012xn\u001c;?\u0013\r\t\u0019*X\u0001\u0007!J,G-\u001a4\n\t\u0005]\u0015\u0011\u0014\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0007\u0005MU,\u0001\u0007nKN\u001c\u0018mZ3t?\u0012*\u0017\u000f\u0006\u0003\u0002 \u0006\u0015\u0006c\u0001/\u0002\"&\u0019\u00111U/\u0003\tUs\u0017\u000e\u001e\u0005\n\u0003O;\u0012\u0011!a\u0001\u0003k\n1\u0001\u001f\u00132\u0003%iWm]:bO\u0016\u001c\b%A\u0002m_\u001e$B!a(\u00020\"9\u0011\u0011W\rA\u0002\u0005\u0015\u0015aB7fgN\fw-Z\u0001\u000eM2,8\u000f[\'fgN\fw-Z:\u0015\u0005\u0005}\u0015\u0001\u00059sS:$X\rZ!osRD\u0017N\\41\u0003Q\u0001(/\u001b8uK\u0012\fe.\u001f;iS:<\u0007g\u0018\u0013fcR!\u0011qTA_\u0011!\t9\u000bHA\u0001\u0002\u0004Q\u0017!\u00059sS:$X\rZ!osRD\u0017N\\41A\u000591\u000f^8qa\u0016$\u0017aC:u_B\u0004X\rZ0%KF$B!a(\u0002H\"A\u0011qU\u0010\u0002\u0002\u0003\u0007!.\u0001\u0005ti>\u0004\b/\u001a3!\u0003=\u0001(/\u001b8uK\u0012\fe.\u001f;iS:<G#\u00016\u0002\u00179,W\rZ:Va\u0012\fG/Z\u000b\u0003\u0003\'\u0004B!!6\u0002\\6\u0011\u0011q\u001b\u0006\u0005\u00033\fI(\u0001\u0004bi>l\u0017nY\u0005\u0005\u0003;\f9NA\u0007Bi>l\u0017n\u0019\"p_2,\u0017M\\\u0001\r]\u0016,Gm]+qI\u0006$X\rI\u0001\u0007kB$\u0017\r^3\u0002\u0013\u0011|wO\u001c7pC\u0012\u001cXCAAt!\u0019\tI/a=\u0002\u00066\u0011\u00111\u001e\u0006\u0005\u0003[\fy/A\u0004nkR\f\'\r\\3\u000b\u0007\u0005EX,\u0001\u0006d_2dWm\u0019;j_:LA!!>\u0002l\nY\u0011I\u001d:bs\n+hMZ3s\u0003)!wn\u001e8m_\u0006$7\u000fI\u0001\nI>tW-U;fk\u0016,\"!!@\u0011\r\u0005%\u00181_A\u0000!\u001da&\u0011AAC\u0005\u000bI1Aa\u0001^\u0005\u0019!V\u000f\u001d7feA\u0019\u0001La\u0002\n\u0007\t%\u0001KA\u0006SK\u001a\u0014Xm\u001d5J]\u001a|\u0017A\u00033p]\u0016\fV/Z;fA\u0005)\u0011N\u001c4pgV\u0011!\u0011\u0003\t\t\u0003o\u0012\u0019\"!\"\u0003\u0006%!!QCA=\u0005E\u0019uN\\2veJ,g\u000e\u001e%bg\"l\u0015\r]\u0001\u0007S:4wn\u001d\u0011\u0002\u00119,w/\u00128uef$\u0002\"a(\u0003\u001e\t\u0005\"Q\u0005\u0005\b\u0005?Y\u0003\u0019AAC\u0003\r)(\u000f\u001c\u0005\b\u0005GY\u0003\u0019\u0001B\u0003\u0003\u0011IgNZ8\t\u0011\t\u001d2\u0006\"a\u0001\u0005S\tqBZ1mY\n\f7m[\'fgN\fw-\u001a\t\u00069\n-\u0012QQ\u0005\u0004\u0005[i&\u0001\u0003\u001fcs:\fW.\u001a \u0002\u0017I,Wn\u001c<f\u000b:$(/\u001f\u000b\t\u0005g\u0011yD!\u0011\u0003FQ!\u0011q\u0014B\u001b\u0011\u001d\u00119\u0004\fa\u0001\u0005s\tq!\u001e9eCR,\u0007\u0007E\u0004]\u0005w\u0011)A!\u0002\n\u0007\tuRLA\u0005Gk:\u001cG/[8oc!9!q\u0004\u0017A\u0002\u0005\u0015\u0005B\u0002B\"Y\u0001\u0007!.A\u0004tk\u000e\u001cWm]:\t\u0011\t\u001dB\u0006\"a\u0001\u0005S\tAa\u001d;pa\u0006\u0019!/\u001e8\u0002+U\u0004H-\u0019;f%Vtg.\u00192mK>\u0003Ho\u0018\u0013fcR!\u0011q\u0014B(\u0011%\t9+PA\u0001\u0002\u0004\t\u0019%\u0001\nva\u0012\fG/\u001a*v]:\f\'\r\\3PaR\u0004\u0013\u0001\u00027pG.,\"!!\u0015\u0002\u000b1|7m\u001b\u0011\u0002\u001dU\u0004H-\u0019;f%Vtg.\u00192mKV\u0011\u0011\u0011J\u0001\u0005S:LG\u000f\u0006\u0003\u0002 \n\u0005\u0004\"\u0003B2\u0005B\u0005\t\u0019\u0001B3\u0003!\u0019\u0018N_3IS:$\b#\u0002/\u0002F\t\u001d\u0004c\u0001/\u0003j%\u0019!1N/\u0003\u0007%sG/\u0001\tdQ\u0016\u001c7.\u001b8h\u0003J$\u0018NZ1diR1\u0011q\u0014B9\u0005gBqAa\bE\u0001\u0004\t)\tC\u0004\u0003v\u0011\u0003\rAa\u001e\u0002\u0011\u0005\u0014H/\u001b4bGR\u0004BA!\u001f\u0003~5\u0011!1\u0010\u0006\u0004\u0003\u007f\"\u0016\u0002\u0002B@\u0005w\u0012\u0001\"\u0011:uS\u001a\f7\r^\u0001\u0014a&\u001c7.\u001a3N_\u0012,H.\u001a,feNLwN\u001c\u000b\u0007\u0003?\u0013)I!#\t\u000f\t\u001dU\t1\u0001\u0002\u0006\u00061Qn\u001c3vY\u0016DqAa#F\u0001\u0004\t))A\u0004wKJ\u001c\u0018n\u001c8\u0002\'\u0011|wO\u001c7pC\u0012LgnZ!si&4\u0017m\u0019;\u0015\r\u0005}%\u0011\u0013BJ\u0011\u001d\u0011yB\u0012a\u0001\u0003\u000bCqA!\u001eG\u0001\u0004\u00119(\u0001\be_^tGn\\1e\u0019\u0016tw\r\u001e5\u0015\u0015\u0005}%\u0011\u0014BN\u0005K\u0013I\u000bC\u0004\u0003 \u001d\u0003\r!!\"\t\u000f\tuu\t1\u0001\u0003 \u0006YAo\u001c;bY2+gn\u001a;i!\ra&\u0011U\u0005\u0004\u0005Gk&\u0001\u0002\'p]\u001eDqAa*H\u0001\u0004\u0011y*A\tbYJ,\u0017\rZ=E_^tGn\\1eK\u0012DaAa+H\u0001\u0004Q\u0017\u0001C<bi\u000eD\u0017N\\4\u0002!\u0011|wO\u001c7pC\u0012\u0004&o\\4sKN\u001cHCBAP\u0005c\u0013\u0019\fC\u0004\u0003 !\u0003\r!!\"\t\u000f\tU\u0006\n1\u0001\u0003 \u0006QAm\\<oY>\fG-\u001a3\u0002%\u0011|wO\u001c7pC\u0012,G-\u0011:uS\u001a\f7\r\u001e\u000b\u0007\u0003?\u0013YL!0\t\u000f\t}\u0011\n1\u0001\u0002\u0006\"1!1I%A\u0002)\fqb\u00195fG.LgnZ+qI\u0006$Xm\u001d\u000b\u0007\u0003?\u0013\u0019M!2\t\u000f\t}!\n1\u0001\u0002\u0006\"9!q\u0019&A\u0002\t%\u0017AD2veJ,g\u000e\u001e+j[\u0016|\u0005\u000f\u001e\t\u00069\u0006\u0015#qT\u0001\u0016G\",7m[5oOV\u0003H-\u0019;fgJ+7/\u001e7u)!\tyJa4\u0003R\nM\u0007b\u0002B\u0010\u0017\u0002\u0007\u0011Q\u0011\u0005\b\u0005\u000f\\\u0005\u0019\u0001Be\u0011\u001d\u0011)n\u0013a\u0001\u0005\u0013\fQB]3n_R,G+[7f\u001fB$\u0018!C:dQ\u0016$W\u000f\\3s+\t\u0011Y\u000e\u0005\u0003\u0002x\tu\u0017\u0002\u0002Bp\u0003s\u0012\u0001dU2iK\u0012,H.\u001a3Fq\u0016\u001cW\u000f^8s\'\u0016\u0014h/[2f\u00035\u00198\r[3ek2,\'o\u0018\u0013fcR!\u0011q\u0014Bs\u0011%\t9+TA\u0001\u0002\u0004\u0011Y.\u0001\u0006tG\",G-\u001e7fe\u0002B3A\u0014Bv!\ra&Q^\u0005\u0004\u0005_l&\u0001\u0003<pY\u0006$\u0018\u000e\\3\u0015\u0007y\u0014\u0019\u0010C\u0004\u0003v\u001e\u0001\rAa>\u0002\u0005=\u001c\b\u0003BA\u0007\u0005sLAAa?\u0002\u0010\taq*\u001e;qkR\u001cFO]3b[R\u0019aPa@\t\u000f\r\u0005\u0001\u00021\u0001\u0004\u0004\u00051qO]5uKJ\u0004B!!\u0004\u0004\u0006%!1qAA\b\u0005IyU\u000f\u001e9viN#(/Z1n/JLG/\u001a:\u0015\u0007y\u001cY\u0001\u0003\u0004\u0002\u001c%\u0001\r!\u001a\u000b\u0006}\u000e=1\u0011\u0003\u0005\b\u0005kT\u0001\u0019\u0001B|\u0011\u0019\tYB\u0003a\u0001KR9ap!\u0006\u0004\u0018\re\u0001b\u0002B{\u0017\u0001\u0007!q\u001f\u0005\u0007\u00037Y\u0001\u0019A3\t\r\u0005\u00052\u00021\u0001k)%q8QDB\u0010\u0007C\u0019\u0019\u0003C\u0004\u0003v2\u0001\rAa>\t\r\u0005mA\u00021\u0001f\u0011\u0019\t\t\u0003\u0004a\u0001U\"1\u00111\u0005\u0007A\u0002)$RA`B\u0014\u0007SAqa!\u0001\u000e\u0001\u0004\u0019\u0019\u0001\u0003\u0004\u0002\u001c5\u0001\r!\u001a\u000b\b}\u000e52qFB\u0019\u0011\u001d\u0019\tA\u0004a\u0001\u0007\u0007Aa!a\u0007\u000f\u0001\u0004)\u0007BBA\u0011\u001d\u0001\u0007!\u000eF\u0005\u007f\u0007k\u00199d!\u000f\u0004<!91\u0011A\bA\u0002\r\r\u0001BBA\u000e\u001f\u0001\u0007Q\r\u0003\u0004\u0002\"=\u0001\rA\u001b\u0005\u0007\u0003Gy\u0001\u0019\u00016\u0002\'\u0011,g-Y;mi\u001a\u000bG\u000e\u001c2bG.lu\u000eZ3\u00027\u0011bWm]:j]&$He\u001a:fCR,\'\u000f\n3fM\u0006,H\u000e\u001e\u00134\u0003m!C.Z:tS:LG\u000fJ4sK\u0006$XM\u001d\u0013eK\u001a\fW\u000f\u001c;%i\u0005YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uIU\u0002
   #11 = Utf8               coursier/cache/CacheLogger$Using
   #12 = Class              #11           // coursier/cache/CacheLogger$Using
   #13 = Utf8               Using
   #14 = Utf8               coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
   #15 = Class              #14           // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
   #16 = Utf8               coursier/cache/loggers/RefreshInfo
   #17 = Class              #16           // coursier/cache/loggers/RefreshInfo
   #18 = Utf8               CheckUpdateInfo
   #19 = Utf8               coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$
   #20 = Class              #19           // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$
   #21 = Utf8
   #22 = Utf8               coursier/cache/loggers/RefreshInfo$DownloadInfo
   #23 = Class              #22           // coursier/cache/loggers/RefreshInfo$DownloadInfo
   #24 = Utf8               DownloadInfo
   #25 = Utf8               coursier/cache/loggers/RefreshInfo$DownloadInfo$
   #26 = Class              #25           // coursier/cache/loggers/RefreshInfo$DownloadInfo$
   #27 = Utf8               coursier/cache/loggers/RefreshLogger$$anon$1
   #28 = Class              #27           // coursier/cache/loggers/RefreshLogger$$anon$1
   #29 = Utf8               coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
   #30 = Class              #29           // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
   #31 = Utf8               UpdateDisplayRunnable
   #32 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #33 = Class              #32           // java/lang/invoke/MethodHandles$Lookup
   #34 = Utf8               java/lang/invoke/MethodHandles
   #35 = Class              #34           // java/lang/invoke/MethodHandles
   #36 = Utf8               Lookup
   #37 = Utf8               out
   #38 = Utf8               Ljava/io/Writer;
   #39 = Utf8               display
   #40 = Utf8               Lcoursier/cache/loggers/RefreshDisplay;
   #41 = Utf8               fallbackMode
   #42 = Utf8               Z
   #43 = Utf8               logChanging
   #44 = Utf8               logPickedVersions
   #45 = Utf8               updateRunnableOpt
   #46 = Utf8               Lscala/Option;
   #47 = Utf8               Lscala/Option<Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;>;
   #48 = Utf8               lock
   #49 = Utf8               Ljava/lang/Object;
   #50 = Utf8               scheduler
   #51 = Utf8               Ljava/util/concurrent/ScheduledExecutorService;
   #52 = Utf8               $lessinit$greater$default$5
   #53 = Utf8               ()Z
   #54 = Utf8               coursier/cache/loggers/RefreshLogger$
   #55 = Class              #54           // coursier/cache/loggers/RefreshLogger$
   #56 = Utf8               MODULE$
   #57 = Utf8               Lcoursier/cache/loggers/RefreshLogger$;
   #58 = NameAndType        #56:#57       // MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
   #59 = Fieldref           #55.#58       // coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
   #60 = NameAndType        #52:#53       // $lessinit$greater$default$5:()Z
   #61 = Methodref          #55.#60       // coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$5:()Z
   #62 = Utf8               $lessinit$greater$default$4
   #63 = NameAndType        #62:#53       // $lessinit$greater$default$4:()Z
   #64 = Methodref          #55.#63       // coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$4:()Z
   #65 = Utf8               $lessinit$greater$default$3
   #66 = NameAndType        #65:#53       // $lessinit$greater$default$3:()Z
   #67 = Methodref          #55.#66       // coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$3:()Z
   #68 = Utf8               defaultFallbackMode
   #69 = NameAndType        #68:#53       // defaultFallbackMode:()Z
   #70 = Methodref          #55.#69       // coursier/cache/loggers/RefreshLogger$.defaultFallbackMode:()Z
   #71 = Utf8               create
   #72 = Utf8               (Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
   #73 = Utf8               writer
   #74 = NameAndType        #71:#72       // create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
   #75 = Methodref          #55.#74       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
   #76 = Utf8               (Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
   #77 = NameAndType        #71:#76       // create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
   #78 = Methodref          #55.#77       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
   #79 = Utf8               (Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #80 = NameAndType        #71:#79       // create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #81 = Methodref          #55.#80       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #82 = Utf8               (Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
   #83 = Utf8               os
   #84 = NameAndType        #71:#82       // create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
   #85 = Methodref          #55.#84       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
   #86 = Utf8               (Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
   #87 = NameAndType        #71:#86       // create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
   #88 = Methodref          #55.#87       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
   #89 = Utf8               (Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #90 = NameAndType        #71:#89       // create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #91 = Methodref          #55.#90       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #92 = Utf8               (Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #93 = NameAndType        #71:#92       // create:(Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #94 = Methodref          #55.#93       // coursier/cache/loggers/RefreshLogger$.create:(Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
   #95 = Utf8               (Ljava/io/OutputStreamWriter;)Lcoursier/cache/loggers/RefreshLogger;
   #96 = NameAndType        #71:#95       // create:(Ljava/io/OutputStreamWriter;)Lcoursier/cache/loggers/RefreshLogger;
   #97 = Methodref          #55.#96       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;)Lcoursier/cache/loggers/RefreshLogger;
   #98 = Utf8               (Ljava/io/OutputStream;)Lcoursier/cache/loggers/RefreshLogger;
   #99 = NameAndType        #71:#98       // create:(Ljava/io/OutputStream;)Lcoursier/cache/loggers/RefreshLogger;
  #100 = Methodref          #55.#99       // coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;)Lcoursier/cache/loggers/RefreshLogger;
  #101 = Utf8               ()Lcoursier/cache/loggers/RefreshLogger;
  #102 = NameAndType        #71:#101      // create:()Lcoursier/cache/loggers/RefreshLogger;
  #103 = Methodref          #55.#102      // coursier/cache/loggers/RefreshLogger$.create:()Lcoursier/cache/loggers/RefreshLogger;
  #104 = Utf8               defaultDisplay$default$2
  #105 = NameAndType        #104:#53      // defaultDisplay$default$2:()Z
  #106 = Methodref          #55.#105      // coursier/cache/loggers/RefreshLogger$.defaultDisplay$default$2:()Z
  #107 = Utf8               defaultDisplay$default$1
  #108 = NameAndType        #107:#53      // defaultDisplay$default$1:()Z
  #109 = Methodref          #55.#108      // coursier/cache/loggers/RefreshLogger$.defaultDisplay$default$1:()Z
  #110 = Utf8               defaultDisplay
  #111 = Utf8               (ZZ)Lcoursier/cache/loggers/RefreshDisplay;
  #112 = Utf8               quiet
  #113 = NameAndType        #110:#111     // defaultDisplay:(ZZ)Lcoursier/cache/loggers/RefreshDisplay;
  #114 = Methodref          #55.#113      // coursier/cache/loggers/RefreshLogger$.defaultDisplay:(ZZ)Lcoursier/cache/loggers/RefreshDisplay;
  #115 = Utf8               foundLocally
  #116 = Utf8               (Ljava/lang/String;)V
  #117 = Utf8               url
  #118 = Utf8               foundLocally$
  #119 = Utf8               (Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #120 = NameAndType        #118:#119     // foundLocally$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #121 = InterfaceMethodref #6.#120       // coursier/cache/CacheLogger.foundLocally$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #122 = Utf8               this
  #123 = Utf8               Lcoursier/cache/loggers/RefreshLogger;
  #124 = Utf8               Ljava/lang/String;
  #125 = Utf8               downloadingArtifact
  #126 = Utf8               downloadingArtifact$
  #127 = NameAndType        #126:#119     // downloadingArtifact$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #128 = InterfaceMethodref #6.#127       // coursier/cache/CacheLogger.downloadingArtifact$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #129 = Utf8               gettingLength
  #130 = Utf8               gettingLength$
  #131 = NameAndType        #130:#119     // gettingLength$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #132 = InterfaceMethodref #6.#131       // coursier/cache/CacheLogger.gettingLength$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
  #133 = Utf8               gettingLengthResult
  #134 = Utf8               (Ljava/lang/String;Lscala/Option;)V
  #135 = Utf8               (Ljava/lang/String;Lscala/Option<Ljava/lang/Object;>;)V
  #136 = Utf8               length
  #137 = Utf8               gettingLengthResult$
  #138 = Utf8               (Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
  #139 = NameAndType        #137:#138     // gettingLengthResult$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
  #140 = InterfaceMethodref #6.#139       // coursier/cache/CacheLogger.gettingLengthResult$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
  #141 = Utf8               removedCorruptFile
  #142 = Utf8               (Ljava/lang/String;Lscala/Option<Ljava/lang/String;>;)V
  #143 = Utf8               reason
  #144 = Utf8               removedCorruptFile$
  #145 = NameAndType        #144:#138     // removedCorruptFile$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
  #146 = InterfaceMethodref #6.#145       // coursier/cache/CacheLogger.removedCorruptFile$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
  #147 = Utf8               init$default$1
  #148 = Utf8               ()Lscala/Option;
  #149 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
  #150 = Utf8               init$default$1$
  #151 = Utf8               (Lcoursier/cache/CacheLogger;)Lscala/Option;
  #152 = NameAndType        #150:#151     // init$default$1$:(Lcoursier/cache/CacheLogger;)Lscala/Option;
  #153 = InterfaceMethodref #6.#152       // coursier/cache/CacheLogger.init$default$1$:(Lcoursier/cache/CacheLogger;)Lscala/Option;
  #154 = Utf8               use
  #155 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #156 = Utf8               <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)TT;
  #157 = Utf8               f
  #158 = Utf8               use$
  #159 = Utf8               (Lcoursier/cache/CacheLogger;Lscala/Function0;)Ljava/lang/Object;
  #160 = NameAndType        #158:#159     // use$:(Lcoursier/cache/CacheLogger;Lscala/Function0;)Ljava/lang/Object;
  #161 = InterfaceMethodref #6.#160       // coursier/cache/CacheLogger.use$:(Lcoursier/cache/CacheLogger;Lscala/Function0;)Ljava/lang/Object;
  #162 = Utf8               Lscala/Function0;
  #163 = Utf8               using
  #164 = Utf8               ()Lcoursier/cache/CacheLogger$Using;
  #165 = Utf8               <T:Ljava/lang/Object;>()Lcoursier/cache/CacheLogger$Using<TT;>;
  #166 = Utf8               using$
  #167 = Utf8               (Lcoursier/cache/CacheLogger;)Lcoursier/cache/CacheLogger$Using;
  #168 = NameAndType        #166:#167     // using$:(Lcoursier/cache/CacheLogger;)Lcoursier/cache/CacheLogger$Using;
  #169 = InterfaceMethodref #6.#168       // coursier/cache/CacheLogger.using$:(Lcoursier/cache/CacheLogger;)Lcoursier/cache/CacheLogger$Using;
  #170 = NameAndType        #41:#42       // fallbackMode:Z
  #171 = Fieldref           #2.#170       // coursier/cache/loggers/RefreshLogger.fallbackMode:Z
  #172 = Utf8               ()Lscala/Option<Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;>;
  #173 = NameAndType        #45:#46       // updateRunnableOpt:Lscala/Option;
  #174 = Fieldref           #2.#173       // coursier/cache/loggers/RefreshLogger.updateRunnableOpt:Lscala/Option;
  #175 = Utf8               updateRunnableOpt_$eq
  #176 = Utf8               (Lscala/Option;)V
  #177 = Utf8               (Lscala/Option<Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;>;)V
  #178 = Utf8               x$1
  #179 = Utf8               ()Ljava/util/concurrent/ScheduledExecutorService;
  #180 = NameAndType        #50:#51       // scheduler:Ljava/util/concurrent/ScheduledExecutorService;
  #181 = Fieldref           #2.#180       // coursier/cache/loggers/RefreshLogger.scheduler:Ljava/util/concurrent/ScheduledExecutorService;
  #182 = Utf8               scheduler_$eq
  #183 = Utf8               (Ljava/util/concurrent/ScheduledExecutorService;)V
  #184 = Utf8               ()Ljava/lang/Object;
  #185 = NameAndType        #48:#49       // lock:Ljava/lang/Object;
  #186 = Fieldref           #2.#185       // coursier/cache/loggers/RefreshLogger.lock:Ljava/lang/Object;
  #187 = Utf8               updateRunnable
  #188 = Utf8               ()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
  #189 = NameAndType        #45:#148      // updateRunnableOpt:()Lscala/Option;
  #190 = Methodref          #2.#189       // coursier/cache/loggers/RefreshLogger.updateRunnableOpt:()Lscala/Option;
  #191 = MethodType         #184          //  ()Ljava/lang/Object;
  #192 = Utf8               $anonfun$updateRunnable$1
  #193 = Utf8               ()Lscala/runtime/Nothing$;
  #194 = NameAndType        #192:#193     // $anonfun$updateRunnable$1:()Lscala/runtime/Nothing$;
  #195 = Methodref          #2.#194       // coursier/cache/loggers/RefreshLogger.$anonfun$updateRunnable$1:()Lscala/runtime/Nothing$;
  #196 = MethodHandle       6:#195        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$updateRunnable$1:()Lscala/runtime/Nothing$;
  #197 = MethodType         #193          //  ()Lscala/runtime/Nothing$;
  #198 = Integer            5
  #199 = Integer            1
  #200 = Utf8               java/lang/invoke/LambdaMetafactory
  #201 = Class              #200          // java/lang/invoke/LambdaMetafactory
  #202 = Utf8               altMetafactory
  #203 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #204 = NameAndType        #202:#203     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #205 = Methodref          #201.#204     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #206 = MethodHandle       6:#205        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #207 = Utf8               apply
  #208 = Utf8               ()Lscala/Function0;
  #209 = NameAndType        #207:#208     // apply:()Lscala/Function0;
  #210 = InvokeDynamic      #0:#209       // #0:apply:()Lscala/Function0;
  #211 = Utf8               scala/Option
  #212 = Class              #211          // scala/Option
  #213 = Utf8               getOrElse
  #214 = NameAndType        #213:#155     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #215 = Methodref          #212.#214     // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #216 = Utf8               init
  #217 = Utf8               (Lscala/Option<Ljava/lang/Object;>;)V
  #218 = Utf8               sizeHint
  #219 = NameAndType        #50:#179      // scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
  #220 = Methodref          #2.#219       // coursier/cache/loggers/RefreshLogger.scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
  #221 = Utf8               isEmpty
  #222 = NameAndType        #221:#53      // isEmpty:()Z
  #223 = Methodref          #212.#222     // scala/Option.isEmpty:()Z
  #224 = NameAndType        #48:#184      // lock:()Ljava/lang/Object;
  #225 = Methodref          #2.#224       // coursier/cache/loggers/RefreshLogger.lock:()Ljava/lang/Object;
  #226 = Utf8               <init>
  #227 = Utf8               (Lcoursier/cache/loggers/RefreshLogger;)V
  #228 = NameAndType        #226:#227     // "<init>":(Lcoursier/cache/loggers/RefreshLogger;)V
  #229 = Methodref          #28.#228      // coursier/cache/loggers/RefreshLogger$$anon$1."<init>":(Lcoursier/cache/loggers/RefreshLogger;)V
  #230 = Utf8               java/util/concurrent/Executors
  #231 = Class              #230          // java/util/concurrent/Executors
  #232 = Utf8               newSingleThreadScheduledExecutor
  #233 = Utf8               (Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
  #234 = NameAndType        #232:#233     // newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
  #235 = Methodref          #231.#234     // java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
  #236 = NameAndType        #182:#183     // scheduler_$eq:(Ljava/util/concurrent/ScheduledExecutorService;)V
  #237 = Methodref          #2.#236       // coursier/cache/loggers/RefreshLogger.scheduler_$eq:(Ljava/util/concurrent/ScheduledExecutorService;)V
  #238 = Utf8               scala/Some
  #239 = Class              #238          // scala/Some
  #240 = NameAndType        #37:#38       // out:Ljava/io/Writer;
  #241 = Fieldref           #2.#240       // coursier/cache/loggers/RefreshLogger.out:Ljava/io/Writer;
  #242 = NameAndType        #39:#40       // display:Lcoursier/cache/loggers/RefreshDisplay;
  #243 = Fieldref           #2.#242       // coursier/cache/loggers/RefreshLogger.display:Lcoursier/cache/loggers/RefreshDisplay;
  #244 = Utf8               (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
  #245 = NameAndType        #226:#244     // "<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
  #246 = Methodref          #30.#245      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable."<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
  #247 = Utf8               (Ljava/lang/Object;)V
  #248 = NameAndType        #226:#247     // "<init>":(Ljava/lang/Object;)V
  #249 = Methodref          #239.#248     // scala/Some."<init>":(Ljava/lang/Object;)V
  #250 = NameAndType        #175:#176     // updateRunnableOpt_$eq:(Lscala/Option;)V
  #251 = Methodref          #2.#250       // coursier/cache/loggers/RefreshLogger.updateRunnableOpt_$eq:(Lscala/Option;)V
  #252 = Utf8               (I)V
  #253 = MethodType         #252          //  (I)V
  #254 = Utf8               $anonfun$init$1
  #255 = Utf8               (Lcoursier/cache/loggers/RefreshLogger;I)V
  #256 = NameAndType        #254:#255     // $anonfun$init$1:(Lcoursier/cache/loggers/RefreshLogger;I)V
  #257 = Methodref          #2.#256       // coursier/cache/loggers/RefreshLogger.$anonfun$init$1:(Lcoursier/cache/loggers/RefreshLogger;I)V
  #258 = MethodHandle       6:#257        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$init$1:(Lcoursier/cache/loggers/RefreshLogger;I)V
  #259 = Utf8               apply$mcVI$sp
  #260 = Utf8               (Lcoursier/cache/loggers/RefreshLogger;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #261 = NameAndType        #259:#260     // apply$mcVI$sp:(Lcoursier/cache/loggers/RefreshLogger;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #262 = InvokeDynamic      #1:#261       // #1:apply$mcVI$sp:(Lcoursier/cache/loggers/RefreshLogger;)Lscala/runtime/java8/JFunction1$mcVI$sp;
  #263 = Utf8               foreach
  #264 = Utf8               (Lscala/Function1;)V
  #265 = NameAndType        #263:#264     // foreach:(Lscala/Function1;)V
  #266 = Methodref          #212.#265     // scala/Option.foreach:(Lscala/Function1;)V
  #267 = Utf8               coursier/cache/loggers/RefreshDisplay
  #268 = Class              #267          // coursier/cache/loggers/RefreshDisplay
  #269 = Utf8               refreshInterval
  #270 = Utf8               ()Lscala/concurrent/duration/Duration;
  #271 = NameAndType        #269:#270     // refreshInterval:()Lscala/concurrent/duration/Duration;
  #272 = InterfaceMethodref #268.#271     // coursier/cache/loggers/RefreshDisplay.refreshInterval:()Lscala/concurrent/duration/Duration;
  #273 = NameAndType        #187:#188     // updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
  #274 = Methodref          #2.#273       // coursier/cache/loggers/RefreshLogger.updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
  #275 = Utf8               scala/concurrent/duration/Duration
  #276 = Class              #275          // scala/concurrent/duration/Duration
  #277 = Utf8               ()J
  #278 = NameAndType        #136:#277     // length:()J
  #279 = Methodref          #276.#278     // scala/concurrent/duration/Duration.length:()J
  #280 = Utf8               unit
  #281 = Utf8               ()Ljava/util/concurrent/TimeUnit;
  #282 = NameAndType        #280:#281     // unit:()Ljava/util/concurrent/TimeUnit;
  #283 = Methodref          #276.#282     // scala/concurrent/duration/Duration.unit:()Ljava/util/concurrent/TimeUnit;
  #284 = Utf8               java/util/concurrent/ScheduledExecutorService
  #285 = Class              #284          // java/util/concurrent/ScheduledExecutorService
  #286 = Utf8               scheduleAtFixedRate
  #287 = Utf8               (Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
  #288 = NameAndType        #286:#287     // scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
  #289 = InterfaceMethodref #285.#288     // java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
  #290 = Utf8               scala/runtime/BoxedUnit
  #291 = Class              #290          // scala/runtime/BoxedUnit
  #292 = Utf8               UNIT
  #293 = Utf8               Lscala/runtime/BoxedUnit;
  #294 = NameAndType        #292:#293     // UNIT:Lscala/runtime/BoxedUnit;
  #295 = Fieldref           #291.#294     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #296 = Utf8               java/lang/Throwable
  #297 = Class              #296          // java/lang/Throwable
  #298 = Utf8               Lscala/concurrent/duration/Duration;
  #299 = Utf8               stop
  #300 = Utf8               ()V
  #301 = Utf8               nonEmpty
  #302 = NameAndType        #301:#53      // nonEmpty:()Z
  #303 = Methodref          #212.#302     // scala/Option.nonEmpty:()Z
  #304 = Utf8               shutdown
  #305 = NameAndType        #304:#300     // shutdown:()V
  #306 = InterfaceMethodref #285.#305     // java/util/concurrent/ScheduledExecutorService.shutdown:()V
  #307 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #308 = MethodType         #307          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #309 = Utf8               $anonfun$stop$1$adapted
  #310 = Utf8               (Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  #311 = NameAndType        #309:#310     // $anonfun$stop$1$adapted:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  #312 = Methodref          #2.#311       // coursier/cache/loggers/RefreshLogger.$anonfun$stop$1$adapted:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  #313 = MethodHandle       6:#312        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$stop$1$adapted:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  #314 = Utf8               (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  #315 = MethodType         #314          //  (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  #316 = Utf8               (Lcoursier/cache/loggers/RefreshLogger;)Lscala/Function1;
  #317 = NameAndType        #207:#316     // apply:(Lcoursier/cache/loggers/RefreshLogger;)Lscala/Function1;
  #318 = InvokeDynamic      #2:#317       // #2:apply:(Lcoursier/cache/loggers/RefreshLogger;)Lscala/Function1;
  #319 = NameAndType        #299:#300     // stop:()V
  #320 = Methodref          #30.#319      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.stop:()V
  #321 = Utf8               scala/None$
  #322 = Class              #321          // scala/None$
  #323 = Utf8               Lscala/None$;
  #324 = NameAndType        #56:#323      // MODULE$:Lscala/None$;
  #325 = Fieldref           #322.#324     // scala/None$.MODULE$:Lscala/None$;
  #326 = Utf8               checkingArtifact
  #327 = Utf8               (Ljava/lang/String;Lcoursier/util/Artifact;)V
  #328 = Utf8               artifact
  #329 = NameAndType        #43:#42       // logChanging:Z
  #330 = Fieldref           #2.#329       // coursier/cache/loggers/RefreshLogger.logChanging:Z
  #331 = Utf8               coursier/util/Artifact
  #332 = Class              #331          // coursier/util/Artifact
  #333 = Utf8               changing
  #334 = NameAndType        #333:#53      // changing:()Z
  #335 = Methodref          #332.#334     // coursier/util/Artifact.changing:()Z
  #336 = Utf8               java/lang/StringBuilder
  #337 = Class              #336          // java/lang/StringBuilder
  #338 = Integer            27
  #339 = NameAndType        #226:#252     // "<init>":(I)V
  #340 = Methodref          #337.#339     // java/lang/StringBuilder."<init>":(I)V
  #341 = Utf8               Checking changing artifact
  #342 = String             #341          // Checking changing artifact
  #343 = Utf8               append
  #344 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #345 = NameAndType        #343:#344     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #346 = Methodref          #337.#345     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #347 = Utf8               toString
  #348 = Utf8               ()Ljava/lang/String;
  #349 = NameAndType        #347:#348     // toString:()Ljava/lang/String;
  #350 = Methodref          #337.#349     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #351 = Utf8               log
  #352 = NameAndType        #351:#116     // log:(Ljava/lang/String;)V
  #353 = Methodref          #30.#352      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.log:(Ljava/lang/String;)V
  #354 = Utf8               Lcoursier/util/Artifact;
  #355 = Utf8               pickedModuleVersion
  #356 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #357 = Utf8               module
  #358 = Utf8               version
  #359 = NameAndType        #44:#42       // logPickedVersions:Z
  #360 = Fieldref           #2.#359       // coursier/cache/loggers/RefreshLogger.logPickedVersions:Z
  #361 = Integer            7
  #362 = Utf8               Using
  #363 = String             #362          // Using
  #364 = Utf8               :
  #365 = String             #364          // :
  #366 = Utf8               Lcoursier/cache/loggers/RefreshInfo$DownloadInfo$;
  #367 = NameAndType        #56:#366      // MODULE$:Lcoursier/cache/loggers/RefreshInfo$DownloadInfo$;
  #368 = Fieldref           #26.#367      // coursier/cache/loggers/RefreshInfo$DownloadInfo$.MODULE$:Lcoursier/cache/loggers/RefreshInfo$DownloadInfo$;
  #369 = Utf8               java/lang/System
  #370 = Class              #369          // java/lang/System
  #371 = Utf8               currentTimeMillis
  #372 = NameAndType        #371:#277     // currentTimeMillis:()J
  #373 = Methodref          #370.#372     // java/lang/System.currentTimeMillis:()J
  #374 = Utf8               (JJLscala/Option;JZZ)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #375 = NameAndType        #207:#374     // apply:(JJLscala/Option;JZZ)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #376 = Methodref          #26.#375      // coursier/cache/loggers/RefreshInfo$DownloadInfo$.apply:(JJLscala/Option;JZZ)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #377 = Utf8               $anonfun$downloadingArtifact$1
  #378 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #379 = NameAndType        #377:#378     // $anonfun$downloadingArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
  #380 = Methodref          #2.#379       // coursier/cache/loggers/RefreshLogger.$anonfun$downloadingArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
  #381 = MethodHandle       6:#380        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadingArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
  #382 = MethodType         #348          //  ()Ljava/lang/String;
  #383 = Utf8               (Ljava/lang/String;)Lscala/Function0;
  #384 = NameAndType        #207:#383     // apply:(Ljava/lang/String;)Lscala/Function0;
  #385 = InvokeDynamic      #3:#384       // #3:apply:(Ljava/lang/String;)Lscala/Function0;
  #386 = Utf8               newEntry
  #387 = Utf8               (Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
  #388 = NameAndType        #386:#387     // newEntry:(Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
  #389 = Methodref          #30.#388      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.newEntry:(Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
  #390 = Utf8               downloadLength
  #391 = Utf8               (Ljava/lang/String;JJZ)V
  #392 = Utf8               totalLength
  #393 = Utf8               alreadyDownloaded
  #394 = Utf8               watching
  #395 = Utf8               infos
  #396 = Utf8               ()Ljava/util/concurrent/ConcurrentHashMap;
  #397 = NameAndType        #395:#396     // infos:()Ljava/util/concurrent/ConcurrentHashMap;
  #398 = Methodref          #30.#397      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:()Ljava/util/concurrent/ConcurrentHashMap;
  #399 = Utf8               java/util/concurrent/ConcurrentHashMap
  #400 = Class              #399          // java/util/concurrent/ConcurrentHashMap
  #401 = Utf8               get
  #402 = NameAndType        #401:#307     // get:(Ljava/lang/Object;)Ljava/lang/Object;
  #403 = Methodref          #400.#402     // java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
  #404 = Utf8               scala/Predef$
  #405 = Class              #404          // scala/Predef$
  #406 = Utf8               Lscala/Predef$;
  #407 = NameAndType        #56:#406      // MODULE$:Lscala/Predef$;
  #408 = Fieldref           #405.#407     // scala/Predef$.MODULE$:Lscala/Predef$;
  #409 = Utf8               java/lang/String
  #410 = Class              #409          // java/lang/String
  #411 = Utf8               $anonfun$downloadLength$1
  #412 = NameAndType        #411:#378     // $anonfun$downloadLength$1:(Ljava/lang/String;)Ljava/lang/String;
  #413 = Methodref          #2.#412       // coursier/cache/loggers/RefreshLogger.$anonfun$downloadLength$1:(Ljava/lang/String;)Ljava/lang/String;
  #414 = MethodHandle       6:#413        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadLength$1:(Ljava/lang/String;)Ljava/lang/String;
  #415 = InvokeDynamic      #4:#384       // #4:apply:(Ljava/lang/String;)Lscala/Function0;
  #416 = Utf8               assert
  #417 = Utf8               (ZLscala/Function0;)V
  #418 = NameAndType        #416:#417     // assert:(ZLscala/Function0;)V
  #419 = Methodref          #405.#418     // scala/Predef$.assert:(ZLscala/Function0;)V
  #420 = Utf8               scala/runtime/BoxesRunTime
  #421 = Class              #420          // scala/runtime/BoxesRunTime
  #422 = Utf8               boxToLong
  #423 = Utf8               (J)Ljava/lang/Long;
  #424 = NameAndType        #422:#423     // boxToLong:(J)Ljava/lang/Long;
  #425 = Methodref          #421.#424     // scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
  #426 = Utf8               withLength
  #427 = Utf8               (Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #428 = NameAndType        #426:#427     // withLength:(Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #429 = Methodref          #23.#428      // coursier/cache/loggers/RefreshInfo$DownloadInfo.withLength:(Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #430 = Utf8               withPreviouslyDownloaded
  #431 = Utf8               (J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #432 = NameAndType        #430:#431     // withPreviouslyDownloaded:(J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #433 = Methodref          #23.#432      // coursier/cache/loggers/RefreshInfo$DownloadInfo.withPreviouslyDownloaded:(J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #434 = Utf8               withWatching
  #435 = Utf8               (Z)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #436 = NameAndType        #434:#435     // withWatching:(Z)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #437 = Methodref          #23.#436      // coursier/cache/loggers/RefreshInfo$DownloadInfo.withWatching:(Z)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #438 = Utf8               java/lang/Exception
  #439 = Class              #438          // java/lang/Exception
  #440 = Integer            29
  #441 = Utf8               Incoherent display state for
  #442 = String             #441          // Incoherent display state for
  #443 = NameAndType        #226:#116     // "<init>":(Ljava/lang/String;)V
  #444 = Methodref          #439.#443     // java/lang/Exception."<init>":(Ljava/lang/String;)V
  #445 = Utf8               put
  #446 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #447 = NameAndType        #445:#446     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #448 = Methodref          #400.#447     // java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #449 = Utf8               update
  #450 = NameAndType        #449:#300     // update:()V
  #451 = Methodref          #30.#450      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.update:()V
  #452 = Utf8               info
  #453 = Utf8               Lcoursier/cache/loggers/RefreshInfo;
  #454 = Utf8               newInfo
  #455 = Utf8               Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #456 = Utf8               J
  #457 = Utf8               downloadProgress
  #458 = Utf8               (Ljava/lang/String;J)V
  #459 = Utf8               downloaded
  #460 = Utf8               $anonfun$downloadProgress$1
  #461 = NameAndType        #460:#378     // $anonfun$downloadProgress$1:(Ljava/lang/String;)Ljava/lang/String;
  #462 = Methodref          #2.#461       // coursier/cache/loggers/RefreshLogger.$anonfun$downloadProgress$1:(Ljava/lang/String;)Ljava/lang/String;
  #463 = MethodHandle       6:#462        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadProgress$1:(Ljava/lang/String;)Ljava/lang/String;
  #464 = InvokeDynamic      #5:#384       // #5:apply:(Ljava/lang/String;)Lscala/Function0;
  #465 = Utf8               withDownloaded
  #466 = NameAndType        #465:#431     // withDownloaded:(J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #467 = Methodref          #23.#466      // coursier/cache/loggers/RefreshInfo$DownloadInfo.withDownloaded:(J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
  #468 = Utf8               downloadedArtifact
  #469 = Utf8               (Ljava/lang/String;Z)V
  #470 = Utf8               success
  #471 = Integer            12
  #472 = Utf8               Downloaded
  #473 = String             #472          // Downloaded
  #474 = Utf8               \n
  #475 = String             #474          // \n
  #476 = Integer            20
  #477 = Utf8               Failed to download
  #478 = String             #477          // Failed to download
  #479 = Utf8               $anonfun$downloadedArtifact$1
  #480 = NameAndType        #479:#378     // $anonfun$downloadedArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
  #481 = Methodref          #2.#480       // coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
  #482 = MethodHandle       6:#481        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
  #483 = InvokeDynamic      #6:#384       // #6:apply:(Ljava/lang/String;)Lscala/Function0;
  #484 = Utf8               $anonfun$downloadedArtifact$2
  #485 = Utf8               (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #486 = NameAndType        #484:#485     // $anonfun$downloadedArtifact$2:(Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #487 = Methodref          #2.#486       // coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$2:(Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #488 = MethodHandle       6:#487        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$2:(Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #489 = MethodType         #485          //  (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #490 = Utf8               ()Lscala/Function1;
  #491 = NameAndType        #207:#490     // apply:()Lscala/Function1;
  #492 = InvokeDynamic      #7:#491       // #7:apply:()Lscala/Function1;
  #493 = Utf8               removeEntry
  #494 = Utf8               (Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
  #495 = NameAndType        #493:#494     // removeEntry:(Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
  #496 = Methodref          #30.#495      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.removeEntry:(Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
  #497 = Utf8               msg
  #498 = Utf8               checkingUpdates
  #499 = Utf8               currentTimeOpt
  #500 = Utf8               Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo$;
  #501 = NameAndType        #56:#500      // MODULE$:Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo$;
  #502 = Fieldref           #20.#501      // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$.MODULE$:Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo$;
  #503 = Utf8               (Lscala/Option;Lscala/Option;Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #504 = NameAndType        #207:#503     // apply:(Lscala/Option;Lscala/Option;Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #505 = Methodref          #20.#504      // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$.apply:(Lscala/Option;Lscala/Option;Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #506 = Utf8               $anonfun$checkingUpdates$1
  #507 = NameAndType        #506:#378     // $anonfun$checkingUpdates$1:(Ljava/lang/String;)Ljava/lang/String;
  #508 = Methodref          #2.#507       // coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdates$1:(Ljava/lang/String;)Ljava/lang/String;
  #509 = MethodHandle       6:#508        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdates$1:(Ljava/lang/String;)Ljava/lang/String;
  #510 = InvokeDynamic      #8:#384       // #8:apply:(Ljava/lang/String;)Lscala/Function0;
  #511 = Utf8               checkingUpdatesResult
  #512 = Utf8               (Ljava/lang/String;Lscala/Option;Lscala/Option;)V
  #513 = Utf8               (Ljava/lang/String;Lscala/Option<Ljava/lang/Object;>;Lscala/Option<Ljava/lang/Object;>;)V
  #514 = Utf8               remoteTimeOpt
  #515 = Utf8               (J)Z
  #516 = MethodType         #515          //  (J)Z
  #517 = Utf8               $anonfun$checkingUpdatesResult$1
  #518 = Utf8               (Lscala/Option;J)Z
  #519 = NameAndType        #517:#518     // $anonfun$checkingUpdatesResult$1:(Lscala/Option;J)Z
  #520 = Methodref          #2.#519       // coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$1:(Lscala/Option;J)Z
  #521 = MethodHandle       6:#520        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$1:(Lscala/Option;J)Z
  #522 = Utf8               apply$mcZJ$sp
  #523 = Utf8               (Lscala/Option;)Lscala/runtime/java8/JFunction1$mcZJ$sp;
  #524 = NameAndType        #522:#523     // apply$mcZJ$sp:(Lscala/Option;)Lscala/runtime/java8/JFunction1$mcZJ$sp;
  #525 = InvokeDynamic      #9:#524       // #9:apply$mcZJ$sp:(Lscala/Option;)Lscala/runtime/java8/JFunction1$mcZJ$sp;
  #526 = Utf8               exists
  #527 = Utf8               (Lscala/Function1;)Z
  #528 = NameAndType        #526:#527     // exists:(Lscala/Function1;)Z
  #529 = Methodref          #212.#528     // scala/Option.exists:(Lscala/Function1;)Z
  #530 = Utf8               $anonfun$checkingUpdatesResult$3
  #531 = NameAndType        #530:#378     // $anonfun$checkingUpdatesResult$3:(Ljava/lang/String;)Ljava/lang/String;
  #532 = Methodref          #2.#531       // coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$3:(Ljava/lang/String;)Ljava/lang/String;
  #533 = MethodHandle       6:#532        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$3:(Ljava/lang/String;)Ljava/lang/String;
  #534 = InvokeDynamic      #10:#384      // #10:apply:(Ljava/lang/String;)Lscala/Function0;
  #535 = Utf8               $anonfun$checkingUpdatesResult$4
  #536 = Utf8               (Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #537 = NameAndType        #535:#536     // $anonfun$checkingUpdatesResult$4:(Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #538 = Methodref          #2.#537       // coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$4:(Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #539 = MethodHandle       6:#538        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$4:(Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  #540 = Utf8               (Lscala/Option;Ljava/lang/String;)Lscala/Function1;
  #541 = NameAndType        #207:#540     // apply:(Lscala/Option;Ljava/lang/String;)Lscala/Function1;
  #542 = InvokeDynamic      #11:#541      // #11:apply:(Lscala/Option;Ljava/lang/String;)Lscala/Function1;
  #543 = Utf8               newUpdate
  #544 = Utf8               Uninitialized TermDisplay
  #545 = String             #544          // Uninitialized TermDisplay
  #546 = Utf8               $this
  #547 = Utf8               n
  #548 = NameAndType        #218:#252     // sizeHint:(I)V
  #549 = InterfaceMethodref #268.#548     // coursier/cache/loggers/RefreshDisplay.sizeHint:(I)V
  #550 = Utf8               I
  #551 = Utf8               $anonfun$stop$1
  #552 = Utf8               (Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Z
  #553 = Utf8               r
  #554 = Utf8               ()Lcoursier/cache/loggers/RefreshDisplay;
  #555 = NameAndType        #39:#554      // display:()Lcoursier/cache/loggers/RefreshDisplay;
  #556 = Methodref          #30.#555      // coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.display:()Lcoursier/cache/loggers/RefreshDisplay;
  #557 = Long               2l
  #559 = Utf8               awaitTermination
  #560 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z
  #561 = NameAndType        #559:#560     // awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
  #562 = InterfaceMethodref #285.#561     // java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
  #563 = Utf8               Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
  #564 = Utf8               url$3
  #565 = Integer            0
  #566 = Utf8               Downloading
  #567 = String             #566          // Downloading
  #568 = Utf8               lineSeparator
  #569 = NameAndType        #568:#348     // lineSeparator:()Ljava/lang/String;
  #570 = Methodref          #370.#569     // java/lang/System.lineSeparator:()Ljava/lang/String;
  #571 = Utf8               url$4
  #572 = Integer            19
  #573 = Utf8               Incoherent state (
  #574 = String             #573          // Incoherent state (
  #575 = Utf8               )
  #576 = String             #575          // )
  #577 = Utf8               url$5
  #578 = Utf8               msg$1
  #579 = Utf8               x
  #580 = Utf8               url$6
  #581 = Integer            10
  #582 = Utf8               Checking
  #583 = String             #582          // Checking
  #584 = Utf8               $anonfun$checkingUpdatesResult$2
  #585 = Utf8               (JJ)Z
  #586 = Utf8               remoteTime$1
  #587 = Utf8               currentTime
  #588 = Utf8               currentTimeOpt$1
  #589 = Utf8               remoteTime
  #590 = NameAndType        #584:#585     // $anonfun$checkingUpdatesResult$2:(JJ)Z
  #591 = Methodref          #2.#590       // coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$2:(JJ)Z
  #592 = MethodHandle       6:#591        // REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$2:(JJ)Z
  #593 = Utf8               (J)Lscala/runtime/java8/JFunction1$mcZJ$sp;
  #594 = NameAndType        #522:#593     // apply$mcZJ$sp:(J)Lscala/runtime/java8/JFunction1$mcZJ$sp;
  #595 = InvokeDynamic      #12:#594      // #12:apply$mcZJ$sp:(J)Lscala/runtime/java8/JFunction1$mcZJ$sp;
  #596 = Utf8               forall
  #597 = NameAndType        #596:#527     // forall:(Lscala/Function1;)Z
  #598 = Methodref          #212.#597     // scala/Option.forall:(Lscala/Function1;)Z
  #599 = Utf8               url$7
  #600 = Integer            9
  #601 = Utf8               Checked
  #602 = String             #601          // Checked
  #603 = Utf8               remoteTimeOpt$1
  #604 = Utf8               x0$1
  #605 = Utf8               withRemoteTimeOpt
  #606 = Utf8               (Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #607 = NameAndType        #605:#606     // withRemoteTimeOpt:(Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #608 = Methodref          #15.#607      // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.withRemoteTimeOpt:(Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #609 = Utf8               withIsDone
  #610 = Utf8               (Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #611 = NameAndType        #609:#610     // withIsDone:(Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #612 = Methodref          #15.#611      // coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.withIsDone:(Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
  #613 = Utf8               (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;ZZZ)V
  #614 = NameAndType        #226:#300     // "<init>":()V
  #615 = Methodref          #4.#614       // java/lang/Object."<init>":()V
  #616 = Utf8               $init$
  #617 = Utf8               (Lcoursier/cache/CacheLogger;)V
  #618 = NameAndType        #616:#617     // $init$:(Lcoursier/cache/CacheLogger;)V
  #619 = InterfaceMethodref #6.#618       // coursier/cache/CacheLogger.$init$:(Lcoursier/cache/CacheLogger;)V
  #620 = Utf8               scala/Option$
  #621 = Class              #620          // scala/Option$
  #622 = Utf8               Lscala/Option$;
  #623 = NameAndType        #56:#622      // MODULE$:Lscala/Option$;
  #624 = Fieldref           #621.#623     // scala/Option$.MODULE$:Lscala/Option$;
  #625 = Utf8               empty
  #626 = NameAndType        #625:#148     // empty:()Lscala/Option;
  #627 = Methodref          #621.#626     // scala/Option$.empty:()Lscala/Option;
  #628 = NameAndType        #226:#613     // "<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;ZZZ)V
  #629 = Methodref          #2.#628       // coursier/cache/loggers/RefreshLogger."<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;ZZZ)V
  #630 = Utf8               (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;Z)V
  #631 = NameAndType        #551:#552     // $anonfun$stop$1:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Z
  #632 = Methodref          #2.#631       // coursier/cache/loggers/RefreshLogger.$anonfun$stop$1:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Z
  #633 = Utf8               boxToBoolean
  #634 = Utf8               (Z)Ljava/lang/Boolean;
  #635 = NameAndType        #633:#634     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #636 = Methodref          #421.#635     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #637 = Utf8               $deserializeLambda$
  #638 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #639 = Utf8               scala/runtime/LambdaDeserialize
  #640 = Class              #639          // scala/runtime/LambdaDeserialize
  #641 = Utf8               bootstrap
  #642 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #643 = NameAndType        #641:#642     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #644 = Methodref          #640.#643     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #645 = MethodHandle       6:#644        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #646 = Utf8               lambdaDeserialize
  #647 = NameAndType        #646:#638     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #648 = InvokeDynamic      #13:#647      // #13:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #649 = Utf8               Signature
  #650 = Utf8               Code
  #651 = Utf8               MethodParameters
  #652 = Utf8               LineNumberTable
  #653 = Utf8               LocalVariableTable
  #654 = Utf8               StackMapTable
  #655 = Utf8               InnerClasses
  #656 = Utf8               SourceFile
  #657 = Utf8               RuntimeVisibleAnnotations
  #658 = Utf8               BootstrapMethods
  #659 = Utf8               ScalaInlineInfo
  #660 = Utf8               ScalaSig
{
  private final java.io.Writer out;
    descriptor: Ljava/io/Writer;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final coursier.cache.loggers.RefreshDisplay display;
    descriptor: Lcoursier/cache/loggers/RefreshDisplay;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean fallbackMode;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean logChanging;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean logPickedVersions;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.Option<coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable> updateRunnableOpt;
    descriptor: Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Signature: #47                          // Lscala/Option<Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;>;

  private final java.lang.Object lock;
    descriptor: Ljava/lang/Object;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private volatile java.util.concurrent.ScheduledExecutorService scheduler;
    descriptor: Ljava/util/concurrent/ScheduledExecutorService;
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static boolean $lessinit$greater$default$5();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #61                 // Method coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$5:()Z
         6: ireturn

  public static boolean $lessinit$greater$default$4();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #64                 // Method coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$4:()Z
         6: ireturn

  public static boolean $lessinit$greater$default$3();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #67                 // Method coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$3:()Z
         6: ireturn

  public static boolean defaultFallbackMode();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #70                 // Method coursier/cache/loggers/RefreshLogger$.defaultFallbackMode:()Z
         6: ireturn

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStreamWriter, coursier.cache.loggers.RefreshDisplay, boolean, boolean);
    descriptor: (Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #75                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
        10: areturn
    MethodParameters:
      Name                           Flags
      writer                         final
      display                        final
      logChanging                    final
      logPickedVersions              final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStreamWriter, coursier.cache.loggers.RefreshDisplay, boolean);
    descriptor: (Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: invokevirtual #78                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
         9: areturn
    MethodParameters:
      Name                           Flags
      writer                         final
      display                        final
      logChanging                    final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStreamWriter, coursier.cache.loggers.RefreshDisplay);
    descriptor: (Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: aload_1
         5: invokevirtual #81                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
         8: areturn
    MethodParameters:
      Name                           Flags
      writer                         final
      display                        final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStream, coursier.cache.loggers.RefreshDisplay, boolean, boolean);
    descriptor: (Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=4, args_size=4
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: iload_3
         7: invokevirtual #85                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;ZZ)Lcoursier/cache/loggers/RefreshLogger;
        10: areturn
    MethodParameters:
      Name                           Flags
      os                             final
      display                        final
      logChanging                    final
      logPickedVersions              final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStream, coursier.cache.loggers.RefreshDisplay, boolean);
    descriptor: (Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: aload_1
         5: iload_2
         6: invokevirtual #88                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;Z)Lcoursier/cache/loggers/RefreshLogger;
         9: areturn
    MethodParameters:
      Name                           Flags
      os                             final
      display                        final
      logChanging                    final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStream, coursier.cache.loggers.RefreshDisplay);
    descriptor: (Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: aload_1
         5: invokevirtual #91                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
         8: areturn
    MethodParameters:
      Name                           Flags
      os                             final
      display                        final

  public static coursier.cache.loggers.RefreshLogger create(coursier.cache.loggers.RefreshDisplay);
    descriptor: (Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: invokevirtual #94                 // Method coursier/cache/loggers/RefreshLogger$.create:(Lcoursier/cache/loggers/RefreshDisplay;)Lcoursier/cache/loggers/RefreshLogger;
         7: areturn
    MethodParameters:
      Name                           Flags
      display                        final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStreamWriter);
    descriptor: (Ljava/io/OutputStreamWriter;)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: invokevirtual #97                 // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStreamWriter;)Lcoursier/cache/loggers/RefreshLogger;
         7: areturn
    MethodParameters:
      Name                           Flags
      writer                         final

  public static coursier.cache.loggers.RefreshLogger create(java.io.OutputStream);
    descriptor: (Ljava/io/OutputStream;)Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: aload_0
         4: invokevirtual #100                // Method coursier/cache/loggers/RefreshLogger$.create:(Ljava/io/OutputStream;)Lcoursier/cache/loggers/RefreshLogger;
         7: areturn
    MethodParameters:
      Name                           Flags
      os                             final

  public static coursier.cache.loggers.RefreshLogger create();
    descriptor: ()Lcoursier/cache/loggers/RefreshLogger;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #103                // Method coursier/cache/loggers/RefreshLogger$.create:()Lcoursier/cache/loggers/RefreshLogger;
         6: areturn

  public static boolean defaultDisplay$default$2();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #106                // Method coursier/cache/loggers/RefreshLogger$.defaultDisplay$default$2:()Z
         6: ireturn

  public static boolean defaultDisplay$default$1();
    descriptor: ()Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: invokevirtual #109                // Method coursier/cache/loggers/RefreshLogger$.defaultDisplay$default$1:()Z
         6: ireturn

  public static coursier.cache.loggers.RefreshDisplay defaultDisplay(boolean, boolean);
    descriptor: (ZZ)Lcoursier/cache/loggers/RefreshDisplay;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         3: iload_0
         4: iload_1
         5: invokevirtual #114                // Method coursier/cache/loggers/RefreshLogger$.defaultDisplay:(ZZ)Lcoursier/cache/loggers/RefreshDisplay;
         8: areturn
    MethodParameters:
      Name                           Flags
      fallbackMode                   final
      quiet                          final

  public void foundLocally(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #121                // InterfaceMethod coursier/cache/CacheLogger.foundLocally$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       6     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public void downloadingArtifact(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #128                // InterfaceMethod coursier/cache/CacheLogger.downloadingArtifact$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       6     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public void gettingLength(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #132                // InterfaceMethod coursier/cache/CacheLogger.gettingLength$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;)V
         5: return
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       6     1   url   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url                            final

  public void gettingLengthResult(java.lang.String, scala.Option<java.lang.Object>);
    descriptor: (Ljava/lang/String;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #140                // InterfaceMethod coursier/cache/CacheLogger.gettingLengthResult$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
         6: return
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       7     1   url   Ljava/lang/String;
            0       7     2 length   Lscala/Option;
    Signature: #135                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      url                            final
      length                         final

  public void removedCorruptFile(java.lang.String, scala.Option<java.lang.String>);
    descriptor: (Ljava/lang/String;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #146                // InterfaceMethod coursier/cache/CacheLogger.removedCorruptFile$:(Lcoursier/cache/CacheLogger;Ljava/lang/String;Lscala/Option;)V
         6: return
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       7     1   url   Ljava/lang/String;
            0       7     2 reason   Lscala/Option;
    Signature: #142                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/String;>;)V
    MethodParameters:
      Name                           Flags
      url                            final
      reason                         final

  public scala.Option<java.lang.Object> init$default$1();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #153                // InterfaceMethod coursier/cache/CacheLogger.init$default$1$:(Lcoursier/cache/CacheLogger;)Lscala/Option;
         4: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger;
    Signature: #149                         // ()Lscala/Option<Ljava/lang/Object;>;

  public final <T extends java.lang.Object> T use(scala.Function0<T>);
    descriptor: (Lscala/Function0;)Ljava/lang/Object;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #161                // InterfaceMethod coursier/cache/CacheLogger.use$:(Lcoursier/cache/CacheLogger;Lscala/Function0;)Ljava/lang/Object;
         5: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       6     1     f   Lscala/Function0;
    Signature: #156                         // <T:Ljava/lang/Object;>(Lscala/Function0<TT;>;)TT;
    MethodParameters:
      Name                           Flags
      f                              final

  public final <T extends java.lang.Object> coursier.cache.CacheLogger$Using<T> using();
    descriptor: ()Lcoursier/cache/CacheLogger$Using;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #169                // InterfaceMethod coursier/cache/CacheLogger.using$:(Lcoursier/cache/CacheLogger;)Lcoursier/cache/CacheLogger$Using;
         4: areturn
      LineNumberTable:
        line 199: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger;
    Signature: #165                         // <T:Ljava/lang/Object;>()Lcoursier/cache/CacheLogger$Using<TT;>;

  public boolean fallbackMode();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #171                // Field fallbackMode:Z
         4: ireturn
      LineNumberTable:
        line 202: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger;

  private scala.Option<coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable> updateRunnableOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #174                // Field updateRunnableOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 220: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger;
    Signature: #172                         // ()Lscala/Option<Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;>;

  private void updateRunnableOpt_$eq(scala.Option<coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable>);
    descriptor: (Lscala/Option;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #174                // Field updateRunnableOpt:Lscala/Option;
         5: return
      LineNumberTable:
        line 220: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       6     1   x$1   Lscala/Option;
    Signature: #177                         // (Lscala/Option<Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  private java.util.concurrent.ScheduledExecutorService scheduler();
    descriptor: ()Ljava/util/concurrent/ScheduledExecutorService;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #181                // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
         4: areturn
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger;

  private void scheduler_$eq(java.util.concurrent.ScheduledExecutorService);
    descriptor: (Ljava/util/concurrent/ScheduledExecutorService;)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #181                // Field scheduler:Ljava/util/concurrent/ScheduledExecutorService;
         5: return
      LineNumberTable:
        line 221: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0       6     1   x$1   Ljava/util/concurrent/ScheduledExecutorService;
    MethodParameters:
      Name                           Flags
      x$1                            final

  private java.lang.Object lock();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #186                // Field lock:Ljava/lang/Object;
         4: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/loggers/RefreshLogger;

  private coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable updateRunnable();
    descriptor: ()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #190                // Method updateRunnableOpt:()Lscala/Option;
         4: invokedynamic #210,  0            // InvokeDynamic #0:apply:()Lscala/Function0;
         9: invokevirtual #215                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        12: checkcast     #30                 // class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
        15: areturn
      LineNumberTable:
        line 224: 0
        line 225: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/cache/loggers/RefreshLogger;

  public void init(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=4, args_size=2
         0: aload_0
         1: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
         4: ifnull        17
         7: aload_0
         8: invokespecial #190                // Method updateRunnableOpt:()Lscala/Option;
        11: invokevirtual #223                // Method scala/Option.isEmpty:()Z
        14: ifeq          148
        17: aload_0
        18: invokespecial #225                // Method lock:()Ljava/lang/Object;
        21: dup
        22: astore_2
        23: monitorenter
        24: aload_0
        25: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
        28: ifnonnull     49
        31: aload_0
        32: new           #28                 // class coursier/cache/loggers/RefreshLogger$$anon$1
        35: dup
        36: aconst_null
        37: invokespecial #229                // Method coursier/cache/loggers/RefreshLogger$$anon$1."<init>":(Lcoursier/cache/loggers/RefreshLogger;)V
        40: invokestatic  #235                // Method java/util/concurrent/Executors.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;
        43: invokespecial #237                // Method scheduler_$eq:(Ljava/util/concurrent/ScheduledExecutorService;)V
        46: goto          49
        49: aload_0
        50: invokespecial #190                // Method updateRunnableOpt:()Lscala/Option;
        53: invokevirtual #223                // Method scala/Option.isEmpty:()Z
        56: ifeq          133
        59: aload_0
        60: new           #239                // class scala/Some
        63: dup
        64: new           #30                 // class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable
        67: dup
        68: aload_0
        69: getfield      #241                // Field out:Ljava/io/Writer;
        72: aload_0
        73: getfield      #243                // Field display:Lcoursier/cache/loggers/RefreshDisplay;
        76: invokespecial #246                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable."<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
        79: invokespecial #249                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        82: invokespecial #251                // Method updateRunnableOpt_$eq:(Lscala/Option;)V
        85: aload_1
        86: aload_0
        87: invokedynamic #262,  0            // InvokeDynamic #1:apply$mcVI$sp:(Lcoursier/cache/loggers/RefreshLogger;)Lscala/runtime/java8/JFunction1$mcVI$sp;
        92: invokevirtual #266                // Method scala/Option.foreach:(Lscala/Function1;)V
        95: aload_0
        96: getfield      #243                // Field display:Lcoursier/cache/loggers/RefreshDisplay;
        99: invokeinterface #272,  1          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.refreshInterval:()Lscala/concurrent/duration/Duration;
       104: astore_3
       105: aload_0
       106: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
       109: aload_0
       110: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
       113: aload_3
       114: invokevirtual #279                // Method scala/concurrent/duration/Duration.length:()J
       117: aload_3
       118: invokevirtual #279                // Method scala/concurrent/duration/Duration.length:()J
       121: aload_3
       122: invokevirtual #283                // Method scala/concurrent/duration/Duration.unit:()Ljava/util/concurrent/TimeUnit;
       125: invokeinterface #289,  7          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
       130: goto          136
       133: getstatic     #295                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       136: pop
       137: aload_2
       138: monitorexit
       139: goto          145
       142: aload_2
       143: monitorexit
       144: athrow
       145: goto          148
       148: return
      Exception table:
         from    to  target type
            24   137   142   any
      StackMapTable: number_of_entries = 7
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 31
          locals = [ class java/lang/Object ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 83
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 229: 0
        line 230: 17
        line 231: 24
        line 232: 31
        line 233: 32
        line 244: 49
        line 246: 59
        line 248: 85
        line 251: 95
        line 253: 105
        line 254: 109
        line 255: 113
        line 256: 117
        line 257: 121
        line 244: 133
        line 230: 145
        line 229: 148
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          105      25     3 refreshInterval   Lscala/concurrent/duration/Duration;
            0     149     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0     149     1 sizeHint   Lscala/Option;
    Signature: #217                         // (Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      sizeHint                       final

  public void stop();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
         4: ifnonnull     17
         7: aload_0
         8: invokespecial #190                // Method updateRunnableOpt:()Lscala/Option;
        11: invokevirtual #303                // Method scala/Option.nonEmpty:()Z
        14: ifeq          99
        17: aload_0
        18: invokespecial #225                // Method lock:()Ljava/lang/Object;
        21: dup
        22: astore_1
        23: monitorenter
        24: aload_0
        25: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
        28: ifnull        61
        31: aload_0
        32: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
        35: invokeinterface #306,  1          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.shutdown:()V
        40: aload_0
        41: invokespecial #190                // Method updateRunnableOpt:()Lscala/Option;
        44: aload_0
        45: invokedynamic #318,  0            // InvokeDynamic #2:apply:(Lcoursier/cache/loggers/RefreshLogger;)Lscala/Function1;
        50: invokevirtual #266                // Method scala/Option.foreach:(Lscala/Function1;)V
        53: aload_0
        54: aconst_null
        55: invokespecial #237                // Method scheduler_$eq:(Ljava/util/concurrent/ScheduledExecutorService;)V
        58: goto          61
        61: aload_0
        62: invokespecial #190                // Method updateRunnableOpt:()Lscala/Option;
        65: invokevirtual #303                // Method scala/Option.nonEmpty:()Z
        68: ifeq          88
        71: aload_0
        72: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
        75: invokevirtual #320                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.stop:()V
        78: aload_0
        79: getstatic     #325                // Field scala/None$.MODULE$:Lscala/None$;
        82: invokespecial #251                // Method updateRunnableOpt_$eq:(Lscala/Option;)V
        85: goto          88
        88: aload_1
        89: monitorexit
        90: goto          96
        93: aload_1
        94: monitorexit
        95: athrow
        96: goto          99
        99: return
      Exception table:
         from    to  target type
            24    88    93   any
      StackMapTable: number_of_entries = 6
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 43
          locals = [ class java/lang/Object ]
        frame_type = 26 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
      LineNumberTable:
        line 263: 0
        line 264: 17
        line 265: 24
        line 266: 31
        line 267: 40
        line 271: 53
        line 274: 61
        line 275: 71
        line 276: 78
        line 274: 88
        line 264: 96
        line 263: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     100     0  this   Lcoursier/cache/loggers/RefreshLogger;

  public void checkingArtifact(java.lang.String, coursier.util.Artifact);
    descriptor: (Ljava/lang/String;Lcoursier/util/Artifact;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: getfield      #330                // Field logChanging:Z
         4: ifeq          47
         7: aload_2
         8: invokevirtual #335                // Method coursier/util/Artifact.changing:()Z
        11: ifeq          47
        14: aload_0
        15: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
        18: new           #337                // class java/lang/StringBuilder
        21: dup
        22: ldc_w         #338                // int 27
        25: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        28: ldc_w         #342                // String Checking changing artifact
        31: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        34: aload_1
        35: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        41: invokevirtual #353                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.log:(Ljava/lang/String;)V
        44: goto          47
        47: return
      StackMapTable: number_of_entries = 1
        frame_type = 47 /* same */
      LineNumberTable:
        line 281: 0
        line 282: 14
        line 281: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      48     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      48     1   url   Ljava/lang/String;
            0      48     2 artifact   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      url                            final
      artifact                       final

  public void pickedModuleVersion(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: getfield      #360                // Field logPickedVersions:Z
         4: ifeq          50
         7: aload_0
         8: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
        11: new           #337                // class java/lang/StringBuilder
        14: dup
        15: ldc_w         #361                // int 7
        18: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        21: ldc_w         #363                // String Using
        24: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        27: aload_1
        28: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: ldc_w         #365                // String :
        34: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        37: aload_2
        38: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        41: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        44: invokevirtual #353                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.log:(Ljava/lang/String;)V
        47: goto          50
        50: return
      StackMapTable: number_of_entries = 1
        frame_type = 50 /* same */
      LineNumberTable:
        line 286: 0
        line 287: 7
        line 286: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      51     1 module   Ljava/lang/String;
            0      51     2 version   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final

  public void downloadingArtifact(java.lang.String, coursier.util.Artifact);
    descriptor: (Ljava/lang/String;Lcoursier/util/Artifact;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=12, locals=3, args_size=3
         0: aload_0
         1: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
         4: aload_1
         5: getstatic     #368                // Field coursier/cache/loggers/RefreshInfo$DownloadInfo$.MODULE$:Lcoursier/cache/loggers/RefreshInfo$DownloadInfo$;
         8: lconst_0
         9: lconst_0
        10: getstatic     #325                // Field scala/None$.MODULE$:Lscala/None$;
        13: invokestatic  #373                // Method java/lang/System.currentTimeMillis:()J
        16: iconst_0
        17: iconst_0
        18: invokevirtual #376                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo$.apply:(JJLscala/Option;JZZ)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
        21: aload_1
        22: invokedynamic #385,  0            // InvokeDynamic #3:apply:(Ljava/lang/String;)Lscala/Function0;
        27: invokevirtual #389                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.newEntry:(Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
        30: return
      LineNumberTable:
        line 290: 0
        line 291: 4
        line 292: 5
        line 293: 21
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      31     1   url   Ljava/lang/String;
            0      31     2 artifact   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      url                            final
      artifact                       final

  public void downloadLength(java.lang.String, long, long, boolean);
    descriptor: (Ljava/lang/String;JJZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=12, args_size=5
         0: aload_0
         1: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
         4: invokevirtual #398                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:()Ljava/util/concurrent/ConcurrentHashMap;
         7: aload_1
         8: invokevirtual #403                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        11: checkcast     #17                 // class coursier/cache/loggers/RefreshInfo
        14: astore        8
        16: getstatic     #408                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        19: aload         8
        21: ifnull        28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: aload_1
        30: invokedynamic #415,  0            // InvokeDynamic #4:apply:(Ljava/lang/String;)Lscala/Function0;
        35: invokevirtual #419                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        38: aload         8
        40: astore        10
        42: aload         10
        44: instanceof    #23                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        47: ifeq          88
        50: aload         10
        52: checkcast     #23                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        55: astore        11
        57: aload         11
        59: new           #239                // class scala/Some
        62: dup
        63: lload_2
        64: invokestatic  #425                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
        67: invokespecial #249                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        70: invokevirtual #429                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.withLength:(Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
        73: lload         4
        75: invokevirtual #433                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.withPreviouslyDownloaded:(J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
        78: iload         6
        80: invokevirtual #437                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.withWatching:(Z)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
        83: astore        7
        85: goto          122
        88: goto          91
        91: new           #439                // class java/lang/Exception
        94: dup
        95: new           #337                // class java/lang/StringBuilder
        98: dup
        99: ldc_w         #440                // int 29
       102: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
       105: ldc_w         #442                // String Incoherent display state for
       108: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       111: aload_1
       112: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       115: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       118: invokespecial #444                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       121: athrow
       122: aload         7
       124: astore        9
       126: aload_0
       127: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
       130: invokevirtual #398                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:()Ljava/util/concurrent/ConcurrentHashMap;
       133: aload_1
       134: aload         9
       136: invokevirtual #448                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       139: pop
       140: aload_0
       141: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
       144: invokevirtual #451                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.update:()V
       147: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, long, long, int, top, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, long, long, int, top, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$, int ]
        frame_type = 253 /* append */
          offset_delta = 58
          locals = [ top, class coursier/cache/loggers/RefreshInfo ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, long, long, int, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class coursier/cache/loggers/RefreshInfo, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo ]
          stack = []
      LineNumberTable:
        line 297: 0
        line 298: 16
        line 299: 38
        line 300: 42
        line 301: 57
        line 302: 59
        line 303: 73
        line 304: 78
        line 300: 88
        line 306: 91
        line 299: 122
        line 308: 126
        line 310: 140
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16     131     8  info   Lcoursier/cache/loggers/RefreshInfo;
          126      21     9 newInfo   Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
            0     148     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0     148     1   url   Ljava/lang/String;
            0     148     2 totalLength   J
            0     148     4 alreadyDownloaded   J
            0     148     6 watching   Z
    MethodParameters:
      Name                           Flags
      url                            final
      totalLength                    final
      alreadyDownloaded              final
      watching                       final

  public void downloadProgress(java.lang.String, long);
    descriptor: (Ljava/lang/String;J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=9, args_size=3
         0: aload_0
         1: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
         4: invokevirtual #398                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:()Ljava/util/concurrent/ConcurrentHashMap;
         7: aload_1
         8: invokevirtual #403                // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        11: checkcast     #17                 // class coursier/cache/loggers/RefreshInfo
        14: astore        5
        16: getstatic     #408                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        19: aload         5
        21: ifnull        28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: aload_1
        30: invokedynamic #464,  0            // InvokeDynamic #5:apply:(Ljava/lang/String;)Lscala/Function0;
        35: invokevirtual #419                // Method scala/Predef$.assert:(ZLscala/Function0;)V
        38: aload         5
        40: astore        7
        42: aload         7
        44: instanceof    #23                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        47: ifeq          68
        50: aload         7
        52: checkcast     #23                 // class coursier/cache/loggers/RefreshInfo$DownloadInfo
        55: astore        8
        57: aload         8
        59: lload_2
        60: invokevirtual #467                // Method coursier/cache/loggers/RefreshInfo$DownloadInfo.withDownloaded:(J)Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
        63: astore        4
        65: goto          102
        68: goto          71
        71: new           #439                // class java/lang/Exception
        74: dup
        75: new           #337                // class java/lang/StringBuilder
        78: dup
        79: ldc_w         #440                // int 29
        82: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        85: ldc_w         #442                // String Incoherent display state for
        88: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        91: aload_1
        92: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        98: invokespecial #444                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       101: athrow
       102: aload         4
       104: astore        6
       106: aload_0
       107: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
       110: invokevirtual #398                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.infos:()Ljava/util/concurrent/ConcurrentHashMap;
       113: aload_1
       114: aload         6
       116: invokevirtual #448                // Method java/util/concurrent/ConcurrentHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       119: pop
       120: aload_0
       121: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
       124: invokevirtual #451                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.update:()V
       127: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 28
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, long, top, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, long, top, class coursier/cache/loggers/RefreshInfo ]
          stack = [ class scala/Predef$, int ]
        frame_type = 253 /* append */
          offset_delta = 38
          locals = [ top, class coursier/cache/loggers/RefreshInfo ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, long, class coursier/cache/loggers/RefreshInfo$DownloadInfo, class coursier/cache/loggers/RefreshInfo, top, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$DownloadInfo ]
          stack = []
      LineNumberTable:
        line 313: 0
        line 314: 16
        line 315: 38
        line 316: 42
        line 317: 57
        line 316: 68
        line 319: 71
        line 315: 102
        line 321: 106
        line 323: 120
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16     111     5  info   Lcoursier/cache/loggers/RefreshInfo;
          106      21     6 newInfo   Lcoursier/cache/loggers/RefreshInfo$DownloadInfo;
            0     128     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0     128     1   url   Ljava/lang/String;
            0     128     2 downloaded   J
    MethodParameters:
      Name                           Flags
      url                            final
      downloaded                     final

  public void downloadedArtifact(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: iload_2
         1: ifeq          36
         4: new           #337                // class java/lang/StringBuilder
         7: dup
         8: ldc_w         #471                // int 12
        11: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        14: ldc_w         #473                // String Downloaded
        17: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: aload_1
        21: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        24: ldc_w         #475                // String \n
        27: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: goto          65
        36: new           #337                // class java/lang/StringBuilder
        39: dup
        40: ldc_w         #476                // int 20
        43: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        46: ldc_w         #478                // String Failed to download
        49: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        52: aload_1
        53: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        56: ldc_w         #475                // String \n
        59: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        65: astore_3
        66: aload_0
        67: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
        70: aload_1
        71: iload_2
        72: aload_3
        73: invokedynamic #483,  0            // InvokeDynamic #6:apply:(Ljava/lang/String;)Lscala/Function0;
        78: invokedynamic #492,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        83: invokevirtual #496                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.removeEntry:(Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
        86: return
      StackMapTable: number_of_entries = 2
        frame_type = 36 /* same */
        frame_type = 92 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 328: 0
        line 329: 4
        line 331: 36
        line 332: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      20     3   msg   Ljava/lang/String;
            0      87     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      87     1   url   Ljava/lang/String;
            0      87     2 success   Z
    MethodParameters:
      Name                           Flags
      url                            final
      success                        final

  public void checkingUpdates(java.lang.String, scala.Option<java.lang.Object>);
    descriptor: (Ljava/lang/String;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
         4: aload_1
         5: getstatic     #502                // Field coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$.MODULE$:Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo$;
         8: aload_2
         9: getstatic     #325                // Field scala/None$.MODULE$:Lscala/None$;
        12: iconst_0
        13: invokevirtual #505                // Method coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$.apply:(Lscala/Option;Lscala/Option;Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
        16: aload_1
        17: invokedynamic #510,  0            // InvokeDynamic #8:apply:(Ljava/lang/String;)Lscala/Function0;
        22: invokevirtual #389                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.newEntry:(Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;Lscala/Function0;)V
        25: return
      LineNumberTable:
        line 336: 0
        line 337: 4
        line 338: 5
        line 339: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      26     1   url   Ljava/lang/String;
            0      26     2 currentTimeOpt   Lscala/Option;
    Signature: #135                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      url                            final
      currentTimeOpt                 final

  public void checkingUpdatesResult(java.lang.String, scala.Option<java.lang.Object>, scala.Option<java.lang.Object>);
    descriptor: (Ljava/lang/String;Lscala/Option;Lscala/Option;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=5, args_size=4
         0: aload_3
         1: aload_2
         2: invokedynamic #525,  0            // InvokeDynamic #9:apply$mcZJ$sp:(Lscala/Option;)Lscala/runtime/java8/JFunction1$mcZJ$sp;
         7: invokevirtual #529                // Method scala/Option.exists:(Lscala/Function1;)Z
        10: istore        4
        12: aload_0
        13: invokespecial #274                // Method updateRunnable:()Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
        16: aload_1
        17: iload         4
        19: ifne          26
        22: iconst_1
        23: goto          27
        26: iconst_0
        27: aload_1
        28: invokedynamic #534,  0            // InvokeDynamic #10:apply:(Ljava/lang/String;)Lscala/Function0;
        33: aload_3
        34: aload_1
        35: invokedynamic #542,  0            // InvokeDynamic #11:apply:(Lscala/Option;Ljava/lang/String;)Lscala/Function1;
        40: invokevirtual #496                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.removeEntry:(Ljava/lang/String;ZLscala/Function0;Lscala/Function1;)V
        43: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, class scala/Option, class scala/Option, int ]
          stack = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/loggers/RefreshLogger, class java/lang/String, class scala/Option, class scala/Option, int ]
          stack = [ class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable, class java/lang/String, int ]
      LineNumberTable:
        line 349: 0
        line 355: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      31     4 newUpdate   Z
            0      44     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      44     1   url   Ljava/lang/String;
            0      44     2 currentTimeOpt   Lscala/Option;
            0      44     3 remoteTimeOpt   Lscala/Option;
    Signature: #513                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/Object;>;Lscala/Option<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      url                            final
      currentTimeOpt                 final
      remoteTimeOpt                  final

  public static final scala.runtime.Nothing$ $anonfun$updateRunnable$1();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=0, args_size=0
         0: new           #439                // class java/lang/Exception
         3: dup
         4: ldc_w         #545                // String Uninitialized TermDisplay
         7: invokespecial #444                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        10: athrow
      LineNumberTable:
        line 225: 0

  public static final void $anonfun$init$1(coursier.cache.loggers.RefreshLogger, int);
    descriptor: (Lcoursier/cache/loggers/RefreshLogger;I)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #243                // Field display:Lcoursier/cache/loggers/RefreshDisplay;
         4: iload_1
         5: invokeinterface #549,  2          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.sizeHint:(I)V
        10: return
      LineNumberTable:
        line 249: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 $this   Lcoursier/cache/loggers/RefreshLogger;
            0      11     1     n   I
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      n                              final

  public static final boolean $anonfun$stop$1(coursier.cache.loggers.RefreshLogger, coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable);
    descriptor: (Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=3, args_size=2
         0: aload_1
         1: invokevirtual #556                // Method coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable.display:()Lcoursier/cache/loggers/RefreshDisplay;
         4: invokeinterface #272,  1          // InterfaceMethod coursier/cache/loggers/RefreshDisplay.refreshInterval:()Lscala/concurrent/duration/Duration;
         9: astore_2
        10: aload_0
        11: invokespecial #220                // Method scheduler:()Ljava/util/concurrent/ScheduledExecutorService;
        14: ldc2_w        #557                // long 2l
        17: aload_2
        18: invokevirtual #279                // Method scala/concurrent/duration/Duration.length:()J
        21: lmul
        22: aload_2
        23: invokevirtual #283                // Method scala/concurrent/duration/Duration.unit:()Ljava/util/concurrent/TimeUnit;
        26: invokeinterface #562,  4          // InterfaceMethod java/util/concurrent/ScheduledExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
        31: ireturn
      LineNumberTable:
        line 268: 0
        line 269: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      21     2 refreshInterval   Lscala/concurrent/duration/Duration;
            0      32     0 $this   Lcoursier/cache/loggers/RefreshLogger;
            0      32     1     r   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      r                              final

  public static final java.lang.String $anonfun$downloadingArtifact$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #337                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #565                // int 0
         7: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        10: new           #337                // class java/lang/StringBuilder
        13: dup
        14: ldc_w         #471                // int 12
        17: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        20: ldc_w         #567                // String Downloading
        23: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: aload_0
        27: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        33: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: invokestatic  #570                // Method java/lang/System.lineSeparator:()Ljava/lang/String;
        39: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        45: areturn
      LineNumberTable:
        line 293: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0 url$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$3                          final

  public static final java.lang.String $anonfun$downloadLength$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #337                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #572                // int 19
         7: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #574                // String Incoherent state (
        13: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #576                // String )
        23: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 298: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 url$4   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$4                          final

  public static final java.lang.String $anonfun$downloadProgress$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #337                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #572                // int 19
         7: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #574                // String Incoherent state (
        13: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #576                // String )
        23: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 314: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 url$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$5                          final

  public static final java.lang.String $anonfun$downloadedArtifact$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 332: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 msg$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      msg$1                          final

  public static final coursier.cache.loggers.RefreshInfo $anonfun$downloadedArtifact$2(coursier.cache.loggers.RefreshInfo);
    descriptor: (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 332: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0     x   Lcoursier/cache/loggers/RefreshInfo;
    MethodParameters:
      Name                           Flags
      x                              final

  public static final java.lang.String $anonfun$checkingUpdates$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #337                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #581                // int 10
         7: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #583                // String Checking
        13: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #475                // String \n
        23: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 339: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 url$6   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$6                          final

  public static final boolean $anonfun$checkingUpdatesResult$2(long, long);
    descriptor: (JJ)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=2
         0: lload_2
         1: lload_0
         2: lcmp
         3: ifge          10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 351: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 remoteTime$1   J
            0      12     2 currentTime   J
    MethodParameters:
      Name                           Flags
      remoteTime$1                   final
      currentTime                    final

  public static final boolean $anonfun$checkingUpdatesResult$1(scala.Option, long);
    descriptor: (Lscala/Option;J)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokedynamic #595,  0            // InvokeDynamic #12:apply$mcZJ$sp:(J)Lscala/runtime/java8/JFunction1$mcZJ$sp;
         7: invokevirtual #598                // Method scala/Option.forall:(Lscala/Function1;)Z
        10: ireturn
      LineNumberTable:
        line 350: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0 currentTimeOpt$1   Lscala/Option;
            0      11     1 remoteTime   J
    MethodParameters:
      Name                           Flags
      currentTimeOpt$1               final
      remoteTime                     final

  public static final java.lang.String $anonfun$checkingUpdatesResult$3(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #337                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #600                // int 9
         7: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #602                // String Checked
        13: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #475                // String \n
        23: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 url$7   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      url$7                          final

  public static final coursier.cache.loggers.RefreshInfo $anonfun$checkingUpdatesResult$4(scala.Option, java.lang.String, coursier.cache.loggers.RefreshInfo);
    descriptor: (Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=6, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: instanceof    #15                 // class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
         8: ifeq          32
        11: aload         4
        13: checkcast     #15                 // class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo
        16: astore        5
        18: aload         5
        20: aload_0
        21: invokevirtual #608                // Method coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.withRemoteTimeOpt:(Lscala/Option;)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
        24: iconst_1
        25: invokevirtual #612                // Method coursier/cache/loggers/RefreshInfo$CheckUpdateInfo.withIsDone:(Z)Lcoursier/cache/loggers/RefreshInfo$CheckUpdateInfo;
        28: astore_3
        29: goto          66
        32: goto          35
        35: new           #439                // class java/lang/Exception
        38: dup
        39: new           #337                // class java/lang/StringBuilder
        42: dup
        43: ldc_w         #440                // int 29
        46: invokespecial #340                // Method java/lang/StringBuilder."<init>":(I)V
        49: ldc_w         #442                // String Incoherent display state for
        52: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        55: aload_1
        56: invokevirtual #346                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        59: invokevirtual #350                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        62: invokespecial #444                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
        65: athrow
        66: aload_3
        67: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 32
          locals = [ top, class coursier/cache/loggers/RefreshInfo ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/Option, class java/lang/String, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo, class coursier/cache/loggers/RefreshInfo, class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo ]
          stack = []
      LineNumberTable:
        line 355: 0
        line 356: 3
        line 357: 18
        line 358: 20
        line 359: 24
        line 356: 32
        line 361: 35
        line 355: 66
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0 remoteTimeOpt$1   Lscala/Option;
            0      68     1 url$7   Ljava/lang/String;
            0      68     2  x0$1   Lcoursier/cache/loggers/RefreshInfo;
    MethodParameters:
      Name                           Flags
      remoteTimeOpt$1                final
      url$7                          final
      x0$1                           final

  public coursier.cache.loggers.RefreshLogger(java.io.Writer, coursier.cache.loggers.RefreshDisplay, boolean, boolean, boolean);
    descriptor: (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;ZZZ)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=6, args_size=6
         0: aload_0
         1: aload_1
         2: putfield      #241                // Field out:Ljava/io/Writer;
         5: aload_0
         6: aload_2
         7: putfield      #243                // Field display:Lcoursier/cache/loggers/RefreshDisplay;
        10: aload_0
        11: iload_3
        12: putfield      #171                // Field fallbackMode:Z
        15: aload_0
        16: iload         4
        18: putfield      #330                // Field logChanging:Z
        21: aload_0
        22: iload         5
        24: putfield      #360                // Field logPickedVersions:Z
        27: aload_0
        28: invokespecial #615                // Method java/lang/Object."<init>":()V
        31: aload_0
        32: invokestatic  #619                // InterfaceMethod coursier/cache/CacheLogger.$init$:(Lcoursier/cache/CacheLogger;)V
        35: aload_0
        36: getstatic     #624                // Field scala/Option$.MODULE$:Lscala/Option$;
        39: invokevirtual #627                // Method scala/Option$.empty:()Lscala/Option;
        42: putfield      #174                // Field updateRunnableOpt:Lscala/Option;
        45: aload_0
        46: new           #4                  // class java/lang/Object
        49: dup
        50: invokespecial #615                // Method java/lang/Object."<init>":()V
        53: putfield      #186                // Field lock:Ljava/lang/Object;
        56: return
      LineNumberTable:
        line 200: 0
        line 201: 5
        line 202: 10
        line 203: 15
        line 204: 21
        line 205: 27
        line 220: 35
        line 222: 45
        line 199: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      57     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      57     1   out   Ljava/io/Writer;
            0      57     2 display   Lcoursier/cache/loggers/RefreshDisplay;
            0      57     3 fallbackMode   Z
            0      57     4 logChanging   Z
            0      57     5 logPickedVersions   Z
    MethodParameters:
      Name                           Flags
      out                            final
      display                        final
      fallbackMode                   final
      logChanging                    final
      logPickedVersions              final

  public coursier.cache.loggers.RefreshLogger(java.io.Writer, coursier.cache.loggers.RefreshDisplay);
    descriptor: (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         6: invokevirtual #70                 // Method coursier/cache/loggers/RefreshLogger$.defaultFallbackMode:()Z
         9: iconst_0
        10: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
        13: invokevirtual #61                 // Method coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$5:()Z
        16: invokespecial #629                // Method "<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;ZZZ)V
        19: return
      LineNumberTable:
        line 210: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      20     1   out   Ljava/io/Writer;
            0      20     2 display   Lcoursier/cache/loggers/RefreshDisplay;
    MethodParameters:
      Name                           Flags
      out                            final
      display                        final

  public coursier.cache.loggers.RefreshLogger(java.io.Writer, coursier.cache.loggers.RefreshDisplay, boolean);
    descriptor: (Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: iconst_0
         5: getstatic     #59                 // Field coursier/cache/loggers/RefreshLogger$.MODULE$:Lcoursier/cache/loggers/RefreshLogger$;
         8: invokevirtual #61                 // Method coursier/cache/loggers/RefreshLogger$.$lessinit$greater$default$5:()Z
        11: invokespecial #629                // Method "<init>":(Ljava/io/Writer;Lcoursier/cache/loggers/RefreshDisplay;ZZZ)V
        14: return
      LineNumberTable:
        line 216: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lcoursier/cache/loggers/RefreshLogger;
            0      15     1   out   Ljava/io/Writer;
            0      15     2 display   Lcoursier/cache/loggers/RefreshDisplay;
            0      15     3 fallbackMode   Z
    MethodParameters:
      Name                           Flags
      out                            final
      display                        final
      fallbackMode                   final

  public static final java.lang.Object $anonfun$stop$1$adapted(coursier.cache.loggers.RefreshLogger, coursier.cache.loggers.RefreshLogger$UpdateDisplayRunnable);
    descriptor: (Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #632                // Method $anonfun$stop$1:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Z
         5: invokestatic  #636                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 267: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/cache/loggers/RefreshLogger;
            0       9     1     r   Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;
    MethodParameters:
      Name                           Flags
      $this                          final
      r                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #648,  0            // InvokeDynamic #13:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #13= #12 of #6;     // Using=class coursier/cache/CacheLogger$Using of class coursier/cache/CacheLogger
  public static final #18= #15 of #17;    // CheckUpdateInfo=class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo of class coursier/cache/loggers/RefreshInfo
  public static #21= #20 of #17;          // =class coursier/cache/loggers/RefreshInfo$CheckUpdateInfo$ of class coursier/cache/loggers/RefreshInfo
  public static final #24= #23 of #17;    // DownloadInfo=class coursier/cache/loggers/RefreshInfo$DownloadInfo of class coursier/cache/loggers/RefreshInfo
  public static #21= #26 of #17;          // =class coursier/cache/loggers/RefreshInfo$DownloadInfo$ of class coursier/cache/loggers/RefreshInfo
  public final #28;                       // class coursier/cache/loggers/RefreshLogger$$anon$1
  public static #31= #30 of #2;           // UpdateDisplayRunnable=class coursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable of class coursier/cache/loggers/RefreshLogger
  public static final #36= #33 of #35;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "RefreshLogger.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\r\u0015s!B(Q\u0011\u00039f!B-Q\u0011\u0003Q\u0006\"B1\u0002\t\u0003\u0011\u0007\"B2\u0002\t\u0003!\u0007bB8\u0002#\u0003%\t\u0001\u001d\u0005\bw\u0006\t\n\u0011\"\u0001q\u0011\u0015a\u0018\u0001\"\u0001~\u0011\u0019a\u0018\u0001\"\u0001\u0003r\"1A0\u0001C\u0001\u0005{Da\u0001`\u0001\u0005\u0002\r%\u0001B\u0002?\u0002\t\u0003\u0019i\u0001\u0003\u0004}\u0003\u0011\u000511\u0003\u0005\u0007y\u0006!\taa\u0007\t\rq\fA\u0011AB\u0013\u0011\u0019a\u0018\u0001\"\u0001\u0004,!1A0\u0001C\u0001\u0007gA!b!\u0010\u0002\u0011\u000b\u0007I\u0011AA\u000f\r\u0019\ti%\u0001\u0003\u0002P!Q\u0011\u0011B\t\u0003\u0002\u0003\u0006I!a\u0003\t\u0015\u0005m\u0011C!b\u0001\n\u0003\t\u0019\u0007C\u0005\u0002fE\u0011\t\u0011)A\u0005K\"1\u0011-\u0005C\u0001\u0003OB\u0011\"!\u001d\u0012\u0001\u0004%I!a\u001d\t\u0013\u0005m\u0015\u00031A\u0005\n\u0005u\u0005\u0002CAU#\u0001\u0006K!!\u001e\t\u000f\u0005-\u0016\u0003\"\u0001\u0002.\"9\u00111W\t\u0005\n\u0005U\u0006\"CA\\#\u0001\u0007I\u0011BA\u000f\u0011%\tI,\u0005a\u0001\n\u0013\tY\fC\u0004\u0002@F\u0001\u000b\u0015\u00026\t\u0013\u0005\u0005\u0017\u00031A\u0005\n\u0005u\u0001\"CAb#\u0001\u0007I\u0011BAc\u0011\u001d\tI-\u0005Q!\n)Dq!a3\u0012\t\u0003\ti\rC\u0005\u0002PF\u0011\r\u0011\"\u0003\u0002R\"A\u0011q\\\t!\u0002\u0013\t\u0019\u000eC\u0004\u0002bF!\t!!.\t\u0013\u0005\r\u0018C1A\u0005\n\u0005\u0015\b\u0002CA|#\u0001\u0006I!a:\t\u0013\u0005e\u0018C1A\u0005\n\u0005m\b\u0002\u0003B\u0006#\u0001\u0006I!!@\t\u0013\t5\u0011C1A\u0005\u0002\t=\u0001\u0002\u0003B\f#\u0001\u0006IA!\u0005\t\u000f\te\u0011\u0003\"\u0001\u0003\u001c!9!qF\t\u0005\u0002\tE\u0002b\u0002B$#\u0011\u0005\u0011Q\u0017\u0005\b\u0005\u0013\nB\u0011AA[\u0011!\u0019y$AI\u0001\n\u0003\u0001\b\u0002CB!\u0003E\u0005I\u0011\u00019\t\u0011\r\r\u0013!%A\u0005\u0002A4A!\u0017)\u0001\u007f\"Q\u0011\u0011\u0002\u001a\u0003\u0002\u0003\u0006I!a\u0003\t\u0013\u0005m!G!A!\u0002\u0013)\u0007\"C53\u0005\u000b\u0007I\u0011AA\u000f\u0011%\tyB\rB\u0001B\u0003%!\u000eC\u0005\u0002\"I\u0012\t\u0011)A\u0005U\"I\u00111\u0005\u001a\u0003\u0002\u0003\u0006IA\u001b\u0005\u0007CJ\"\t!!\n\t\r\u0005\u0014D\u0011AA\u0019\u0011\u0019\t\'\u0007\"\u0001\u00028!I\u0011q\b\u001aA\u0002\u0013%\u0011\u0011\t\u0005\n\u0005\u0017\u0012\u0004\u0019!C\u0005\u0005\u001bB\u0001B!\u00153A\u0003&\u00111\t\u0005\n\u0005\'\u0012$\u0019!C\u0005\u0005+B\u0001Ba\u00163A\u0003%\u0011\u0011\u000b\u0005\b\u00053\u0012D\u0011\u0002B.\u0011\u001d\u0011iF\rC!\u0005?BqAa\u00123\t\u0003\n)\fC\u0004\u0003nI\"\tEa\u001c\t\u000f\t\u0005%\u0007\"\u0011\u0003\u0004\"9!Q\u0012\u001a\u0005B\t=\u0005b\u0002BKe\u0011\u0005#q\u0013\u0005\b\u0005[\u0013D\u0011\tBX\u0011\u001d\u00119L\rC!\u0005sCqAa03\t\u0003\u0012\t\rC\u0004\u0003LJ\"\tE!4\t\u0017\t]\'\u00071AA\u0002\u0013%!\u0011\u001c\u0005\f\u0005C\u0014\u0004\u0019!a\u0001\n\u0013\u0011\u0019\u000fC\u0006\u0003hJ\u0002\r\u0011!Q!\n\tm\u0017!\u0004*fMJ,7\u000f\u001b\'pO\u001e,\'O\u0003\u0002R%\u00069An\\4hKJ\u001c(BA*U\u0003\u0015\u0019\u0017m\u00195f\u0015\u0005)\u0016\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001A\u0011\u0001,A\u0007\u0002!\ni!+\u001a4sKNDGj\\4hKJ\u001c\"!A.\u0011\u0005q{V\"A/\u000b\u0003y\u000bQa]2bY\u0006L!\u0001Y/\u0003\r\u0005s\u0017PU3g\u0003\u0019a\u0014N\\5u}Q\tq+\u0001\beK\u001a\fW\u000f\u001c;ESN\u0004H.Y=\u0015\u0007\u0015DW\u000e\u0005\u0002YM&\u0011q\r\u0015\u0002\u000f%\u00164\'/Z:i\t&\u001c\b\u000f\\1z\u0011\u001dI7\u0001%AA\u0002)\fABZ1mY\n\f7m[\'pI\u0016\u0004\"\u0001X6\n\u00051l&a\u0002\"p_2,\u0017M\u001c\u0005\b]\u000e\u0001\n\u00111\u0001k\u0003\u0015\tX/[3u\u0003a!WMZ1vYR$\u0015n\u001d9mCf$C-\u001a4bk2$H%M\u000b\u0002c*\u0012!N]\u0016\u0002gB\u0011A/_\u0007\u0002k*\u0011ao^\u0001\nk:\u001c\u0007.Z2lK\u0012T!\u0001_/\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002{k\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u00021\u0011,g-Y;mi\u0012K7\u000f\u001d7bs\u0012\"WMZ1vYR$#\'\u0001\u0004de\u0016\fG/\u001a\u000b\u0002}B\u0011\u0001LM\n\u0005em\u000b\t\u0001\u0005\u0003\u0002\u0004\u0005\u0015Q\"\u0001*\n\u0007\u0005\u001d!KA\u0006DC\u000eDW\rT8hO\u0016\u0014\u0018aA8viB!\u0011QBA\f\u001b\t\tyA\u0003\u0003\u0002\u0012\u0005M\u0011AA5p\u0015\t\t)\"\u0001\u0003kCZ\f\u0017\u0002BA\r\u0003\u001f\u0011aa\u0016:ji\u0016\u0014\u0018a\u00023jgBd\u0017-_\u000b\u0002U\u0006ia-\u00197mE\u0006\u001c7.T8eK\u0002\n1\u0002\\8h\u0007\"\fgnZ5oO\u0006\tBn\\4QS\u000e\\W\r\u001a,feNLwN\\:\u0015\u0017y\f9#!\u000b\u0002,\u00055\u0012q\u0006\u0005\b\u0003\u0013I\u0004\u0019AA\u0006\u0011\u0019\tY\"\u000fa\u0001K\"9\u0011.\u000fI\u0001\u0002\u0004Q\u0007\u0002CA\u0011sA\u0005\t\u0019\u00016\t\u0011\u0005\r\u0012\b%AA\u0002)$RA`A\u001a\u0003kAq!!\u0003;\u0001\u0004\tY\u0001\u0003\u0004\u0002\u001ci\u0002\r!\u001a\u000b\b}\u0006e\u00121HA\u001f\u0011\u001d\tIa\u000fa\u0001\u0003\u0017Aa!a\u0007<\u0001\u0004)\u0007\"B5<\u0001\u0004Q\u0017!E;qI\u0006$XMU;o]\u0006\u0014G.Z(qiV\u0011\u00111\t\t\u00069\u0006\u0015\u0013\u0011J\u0005\u0004\u0003\u000fj&AB(qi&|g\u000eE\u0002\u0002LEq!\u0001\u0017\u0001\u0003+U\u0003H-\u0019;f\t&\u001c\b\u000f\\1z%Vtg.\u00192mKN)\u0011#!\u0015\u0002^A!\u00111KA-\u001b\t\t)F\u0003\u0003\u0002X\u0005M\u0011\u0001\u00027b]\u001eLA!a\u0017\u0002V\t1qJ\u00196fGR\u0004B!a\u0015\u0002`%!\u0011\u0011MA+\u0005!\u0011VO\u001c8bE2,W#A3\u0002\u0011\u0011L7\u000f\u001d7bs\u0002\"b!!\u001b\u0002n\u0005=\u0004cAA6#5\t\u0011\u0001C\u0004\u0002\nU\u0001\r!a\u0003\t\r\u0005mQ\u00031\u0001f\u0003!iWm]:bO\u0016\u001cXCAA;!\u0019\t9(!!\u0002\u00066\u0011\u0011\u0011\u0010\u0006\u0005\u0003w\ni(\u0001\u0006d_:\u001cWO\u001d:f]RTA!a \u0002\u0014\u0005!Q\u000f^5m\u0013\u0011\t\u0019)!\u001f\u0003+\r{gnY;se\u0016tG\u000fT5oW\u0016$\u0017+^3vKB!\u0011qQAK\u001d\u0011\tI)!%\u0011\u0007\u0005-U,\u0004\u0002\u0002\u000e*\u0019\u0011q\u0012,\u0002\rq\u0012xn\u001c;?\u0013\r\t\u0019*X\u0001\u0007!J,G-\u001a4\n\t\u0005]\u0015\u0011\u0014\u0002\u0007\'R\u0014\u0018N\\4\u000b\u0007\u0005MU,\u0001\u0007nKN\u001c\u0018mZ3t?\u0012*\u0017\u000f\u0006\u0003\u0002 \u0006\u0015\u0006c\u0001/\u0002\"&\u0019\u00111U/\u0003\tUs\u0017\u000e\u001e\u0005\n\u0003O;\u0012\u0011!a\u0001\u0003k\n1\u0001\u001f\u00132\u0003%iWm]:bO\u0016\u001c\b%A\u0002m_\u001e$B!a(\u00020\"9\u0011\u0011W\rA\u0002\u0005\u0015\u0015aB7fgN\fw-Z\u0001\u000eM2,8\u000f[\'fgN\fw-Z:\u0015\u0005\u0005}\u0015\u0001\u00059sS:$X\rZ!osRD\u0017N\\41\u0003Q\u0001(/\u001b8uK\u0012\fe.\u001f;iS:<\u0007g\u0018\u0013fcR!\u0011qTA_\u0011!\t9\u000bHA\u0001\u0002\u0004Q\u0017!\u00059sS:$X\rZ!osRD\u0017N\\41A\u000591\u000f^8qa\u0016$\u0017aC:u_B\u0004X\rZ0%KF$B!a(\u0002H\"A\u0011qU\u0010\u0002\u0002\u0003\u0007!.\u0001\u0005ti>\u0004\b/\u001a3!\u0003=\u0001(/\u001b8uK\u0012\fe.\u001f;iS:<G#\u00016\u0002\u00179,W\rZ:Va\u0012\fG/Z\u000b\u0003\u0003\'\u0004B!!6\u0002\\6\u0011\u0011q\u001b\u0006\u0005\u00033\fI(\u0001\u0004bi>l\u0017nY\u0005\u0005\u0003;\f9NA\u0007Bi>l\u0017n\u0019\"p_2,\u0017M\\\u0001\r]\u0016,Gm]+qI\u0006$X\rI\u0001\u0007kB$\u0017\r^3\u0002\u0013\u0011|wO\u001c7pC\u0012\u001cXCAAt!\u0019\tI/a=\u0002\u00066\u0011\u00111\u001e\u0006\u0005\u0003[\fy/A\u0004nkR\f\'\r\\3\u000b\u0007\u0005EX,\u0001\u0006d_2dWm\u0019;j_:LA!!>\u0002l\nY\u0011I\u001d:bs\n+hMZ3s\u0003)!wn\u001e8m_\u0006$7\u000fI\u0001\nI>tW-U;fk\u0016,\"!!@\u0011\r\u0005%\u00181_A\u0000!\u001da&\u0011AAC\u0005\u000bI1Aa\u0001^\u0005\u0019!V\u000f\u001d7feA\u0019\u0001La\u0002\n\u0007\t%\u0001KA\u0006SK\u001a\u0014Xm\u001d5J]\u001a|\u0017A\u00033p]\u0016\fV/Z;fA\u0005)\u0011N\u001c4pgV\u0011!\u0011\u0003\t\t\u0003o\u0012\u0019\"!\"\u0003\u0006%!!QCA=\u0005E\u0019uN\\2veJ,g\u000e\u001e%bg\"l\u0015\r]\u0001\u0007S:4wn\u001d\u0011\u0002\u00119,w/\u00128uef$\u0002\"a(\u0003\u001e\t\u0005\"Q\u0005\u0005\b\u0005?Y\u0003\u0019AAC\u0003\r)(\u000f\u001c\u0005\b\u0005GY\u0003\u0019\u0001B\u0003\u0003\u0011IgNZ8\t\u0011\t\u001d2\u0006\"a\u0001\u0005S\tqBZ1mY\n\f7m[\'fgN\fw-\u001a\t\u00069\n-\u0012QQ\u0005\u0004\u0005[i&\u0001\u0003\u001fcs:\fW.\u001a \u0002\u0017I,Wn\u001c<f\u000b:$(/\u001f\u000b\t\u0005g\u0011yD!\u0011\u0003FQ!\u0011q\u0014B\u001b\u0011\u001d\u00119\u0004\fa\u0001\u0005s\tq!\u001e9eCR,\u0007\u0007E\u0004]\u0005w\u0011)A!\u0002\n\u0007\tuRLA\u0005Gk:\u001cG/[8oc!9!q\u0004\u0017A\u0002\u0005\u0015\u0005B\u0002B\"Y\u0001\u0007!.A\u0004tk\u000e\u001cWm]:\t\u0011\t\u001dB\u0006\"a\u0001\u0005S\tAa\u001d;pa\u0006\u0019!/\u001e8\u0002+U\u0004H-\u0019;f%Vtg.\u00192mK>\u0003Ho\u0018\u0013fcR!\u0011q\u0014B(\u0011%\t9+PA\u0001\u0002\u0004\t\u0019%\u0001\nva\u0012\fG/\u001a*v]:\f\'\r\\3PaR\u0004\u0013\u0001\u00027pG.,\"!!\u0015\u0002\u000b1|7m\u001b\u0011\u0002\u001dU\u0004H-\u0019;f%Vtg.\u00192mKV\u0011\u0011\u0011J\u0001\u0005S:LG\u000f\u0006\u0003\u0002 \n\u0005\u0004\"\u0003B2\u0005B\u0005\t\u0019\u0001B3\u0003!\u0019\u0018N_3IS:$\b#\u0002/\u0002F\t\u001d\u0004c\u0001/\u0003j%\u0019!1N/\u0003\u0007%sG/\u0001\tdQ\u0016\u001c7.\u001b8h\u0003J$\u0018NZ1diR1\u0011q\u0014B9\u0005gBqAa\bE\u0001\u0004\t)\tC\u0004\u0003v\u0011\u0003\rAa\u001e\u0002\u0011\u0005\u0014H/\u001b4bGR\u0004BA!\u001f\u0003~5\u0011!1\u0010\u0006\u0004\u0003\u007f\"\u0016\u0002\u0002B@\u0005w\u0012\u0001\"\u0011:uS\u001a\f7\r^\u0001\u0014a&\u001c7.\u001a3N_\u0012,H.\u001a,feNLwN\u001c\u000b\u0007\u0003?\u0013)I!#\t\u000f\t\u001dU\t1\u0001\u0002\u0006\u00061Qn\u001c3vY\u0016DqAa#F\u0001\u0004\t))A\u0004wKJ\u001c\u0018n\u001c8\u0002\'\u0011|wO\u001c7pC\u0012LgnZ!si&4\u0017m\u0019;\u0015\r\u0005}%\u0011\u0013BJ\u0011\u001d\u0011yB\u0012a\u0001\u0003\u000bCqA!\u001eG\u0001\u0004\u00119(\u0001\be_^tGn\\1e\u0019\u0016tw\r\u001e5\u0015\u0015\u0005}%\u0011\u0014BN\u0005K\u0013I\u000bC\u0004\u0003 \u001d\u0003\r!!\"\t\u000f\tuu\t1\u0001\u0003 \u0006YAo\u001c;bY2+gn\u001a;i!\ra&\u0011U\u0005\u0004\u0005Gk&\u0001\u0002\'p]\u001eDqAa*H\u0001\u0004\u0011y*A\tbYJ,\u0017\rZ=E_^tGn\\1eK\u0012DaAa+H\u0001\u0004Q\u0017\u0001C<bi\u000eD\u0017N\\4\u0002!\u0011|wO\u001c7pC\u0012\u0004&o\\4sKN\u001cHCBAP\u0005c\u0013\u0019\fC\u0004\u0003 !\u0003\r!!\"\t\u000f\tU\u0006\n1\u0001\u0003 \u0006QAm\\<oY>\fG-\u001a3\u0002%\u0011|wO\u001c7pC\u0012,G-\u0011:uS\u001a\f7\r\u001e\u000b\u0007\u0003?\u0013YL!0\t\u000f\t}\u0011\n1\u0001\u0002\u0006\"1!1I%A\u0002)\fqb\u00195fG.LgnZ+qI\u0006$Xm\u001d\u000b\u0007\u0003?\u0013\u0019M!2\t\u000f\t}!\n1\u0001\u0002\u0006\"9!q\u0019&A\u0002\t%\u0017AD2veJ,g\u000e\u001e+j[\u0016|\u0005\u000f\u001e\t\u00069\u0006\u0015#qT\u0001\u0016G\",7m[5oOV\u0003H-\u0019;fgJ+7/\u001e7u)!\tyJa4\u0003R\nM\u0007b\u0002B\u0010\u0017\u0002\u0007\u0011Q\u0011\u0005\b\u0005\u000f\\\u0005\u0019\u0001Be\u0011\u001d\u0011)n\u0013a\u0001\u0005\u0013\fQB]3n_R,G+[7f\u001fB$\u0018!C:dQ\u0016$W\u000f\\3s+\t\u0011Y\u000e\u0005\u0003\u0002x\tu\u0017\u0002\u0002Bp\u0003s\u0012\u0001dU2iK\u0012,H.\u001a3Fq\u0016\u001cW\u000f^8s\'\u0016\u0014h/[2f\u00035\u00198\r[3ek2,\'o\u0018\u0013fcR!\u0011q\u0014Bs\u0011%\t9+TA\u0001\u0002\u0004\u0011Y.\u0001\u0006tG\",G-\u001e7fe\u0002B3A\u0014Bv!\ra&Q^\u0005\u0004\u0005_l&\u0001\u0003<pY\u0006$\u0018\u000e\\3\u0015\u0007y\u0014\u0019\u0010C\u0004\u0003v\u001e\u0001\rAa>\u0002\u0005=\u001c\b\u0003BA\u0007\u0005sLAAa?\u0002\u0010\taq*\u001e;qkR\u001cFO]3b[R\u0019aPa@\t\u000f\r\u0005\u0001\u00021\u0001\u0004\u0004\u00051qO]5uKJ\u0004B!!\u0004\u0004\u0006%!1qAA\b\u0005IyU\u000f\u001e9viN#(/Z1n/JLG/\u001a:\u0015\u0007y\u001cY\u0001\u0003\u0004\u0002\u001c%\u0001\r!\u001a\u000b\u0006}\u000e=1\u0011\u0003\u0005\b\u0005kT\u0001\u0019\u0001B|\u0011\u0019\tYB\u0003a\u0001KR9ap!\u0006\u0004\u0018\re\u0001b\u0002B{\u0017\u0001\u0007!q\u001f\u0005\u0007\u00037Y\u0001\u0019A3\t\r\u0005\u00052\u00021\u0001k)%q8QDB\u0010\u0007C\u0019\u0019\u0003C\u0004\u0003v2\u0001\rAa>\t\r\u0005mA\u00021\u0001f\u0011\u0019\t\t\u0003\u0004a\u0001U\"1\u00111\u0005\u0007A\u0002)$RA`B\u0014\u0007SAqa!\u0001\u000e\u0001\u0004\u0019\u0019\u0001\u0003\u0004\u0002\u001c5\u0001\r!\u001a\u000b\b}\u000e52qFB\u0019\u0011\u001d\u0019\tA\u0004a\u0001\u0007\u0007Aa!a\u0007\u000f\u0001\u0004)\u0007BBA\u0011\u001d\u0001\u0007!\u000eF\u0005\u007f\u0007k\u00199d!\u000f\u0004<!91\u0011A\bA\u0002\r\r\u0001BBA\u000e\u001f\u0001\u0007Q\r\u0003\u0004\u0002\"=\u0001\rA\u001b\u0005\u0007\u0003Gy\u0001\u0019\u00016\u0002\'\u0011,g-Y;mi\u001a\u000bG\u000e\u001c2bG.lu\u000eZ3\u00027\u0011bWm]:j]&$He\u001a:fCR,\'\u000f\n3fM\u0006,H\u000e\u001e\u00134\u0003m!C.Z:tS:LG\u000fJ4sK\u0006$XM\u001d\u0013eK\u001a\fW\u000f\u001c;%i\u0005YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uIU\u0002"
    )
BootstrapMethods:
  0: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #196 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$updateRunnable$1:()Lscala/runtime/Nothing$;
      #197 ()Lscala/runtime/Nothing$;
      #198 5
      #199 1
      #197 ()Lscala/runtime/Nothing$;
  1: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #253 (I)V
      #258 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$init$1:(Lcoursier/cache/loggers/RefreshLogger;I)V
      #253 (I)V
      #199 1
  2: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #308 (Ljava/lang/Object;)Ljava/lang/Object;
      #313 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$stop$1$adapted:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
      #315 (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
      #198 5
      #199 1
      #315 (Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
  3: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #381 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadingArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
      #382 ()Ljava/lang/String;
      #198 5
      #199 1
      #382 ()Ljava/lang/String;
  4: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #414 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadLength$1:(Ljava/lang/String;)Ljava/lang/String;
      #382 ()Ljava/lang/String;
      #198 5
      #199 1
      #382 ()Ljava/lang/String;
  5: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #463 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadProgress$1:(Ljava/lang/String;)Ljava/lang/String;
      #382 ()Ljava/lang/String;
      #198 5
      #199 1
      #382 ()Ljava/lang/String;
  6: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #482 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
      #382 ()Ljava/lang/String;
      #198 5
      #199 1
      #382 ()Ljava/lang/String;
  7: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #308 (Ljava/lang/Object;)Ljava/lang/Object;
      #488 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$2:(Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
      #489 (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
      #198 5
      #199 1
      #489 (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  8: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #509 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdates$1:(Ljava/lang/String;)Ljava/lang/String;
      #382 ()Ljava/lang/String;
      #198 5
      #199 1
      #382 ()Ljava/lang/String;
  9: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #516 (J)Z
      #521 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$1:(Lscala/Option;J)Z
      #516 (J)Z
      #199 1
  10: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #191 ()Ljava/lang/Object;
      #533 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$3:(Ljava/lang/String;)Ljava/lang/String;
      #382 ()Ljava/lang/String;
      #198 5
      #199 1
      #382 ()Ljava/lang/String;
  11: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #308 (Ljava/lang/Object;)Ljava/lang/Object;
      #539 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$4:(Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
      #489 (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
      #198 5
      #199 1
      #489 (Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
  12: #206 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #516 (J)Z
      #592 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$2:(JJ)Z
      #516 (J)Z
      #199 1
  13: #645 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #509 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdates$1:(Ljava/lang/String;)Ljava/lang/String;
      #521 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$1:(Lscala/Option;J)Z
      #592 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$2:(JJ)Z
      #533 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$3:(Ljava/lang/String;)Ljava/lang/String;
      #539 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$checkingUpdatesResult$4:(Lscala/Option;Ljava/lang/String;Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
      #414 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadLength$1:(Ljava/lang/String;)Ljava/lang/String;
      #463 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadProgress$1:(Ljava/lang/String;)Ljava/lang/String;
      #482 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
      #488 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadedArtifact$2:(Lcoursier/cache/loggers/RefreshInfo;)Lcoursier/cache/loggers/RefreshInfo;
      #381 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$downloadingArtifact$1:(Ljava/lang/String;)Ljava/lang/String;
      #258 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$init$1:(Lcoursier/cache/loggers/RefreshLogger;I)V
      #313 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$stop$1$adapted:(Lcoursier/cache/loggers/RefreshLogger;Lcoursier/cache/loggers/RefreshLogger$UpdateDisplayRunnable;)Ljava/lang/Object;
      #196 REF_invokeStatic coursier/cache/loggers/RefreshLogger.$anonfun$updateRunnable$1:()Lscala/runtime/Nothing$;
  ScalaInlineInfo: length = 0xD6 (unknown attribute)
   01 00 00 2A 01 FB 01 7B 01 02 06 02 07 01 02 49
   02 4A 01 02 13 01 7B 01 02 18 02 19 01 01 9A 01
   7B 01 01 CD 01 7B 01 01 E0 01 7B 01 01 E5 01 E6
   01 01 7A 01 7B 01 00 FF 01 00 01 02 28 02 29 01
   01 36 01 37 01 00 C1 00 C2 01 00 E3 00 F5 00 00
   E3 02 77 00 00 E3 02 66 00 01 47 01 48 00 01 F3
   00 87 00 02 00 02 01 00 01 87 01 88 00 01 CA 01
   CB 00 01 D5 01 D6 00 00 7E 00 75 00 00 7E 01 48
   00 00 2A 00 36 00 00 74 00 75 00 00 82 00 75 00
   00 86 00 87 00 00 D9 00 B1 00 00 94 00 95 00 00
   31 00 B9 01 01 64 01 65 00 00 8E 00 87 00 00 33
   00 B4 01 00 B7 00 B8 01 01 2C 01 2D 00 00 BC 00
   BD 01 00 2E 00 95 01 00 B0 00 B1 01 00 9B 00 9C
   01 00 A4 00 A5 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
