Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/HashMap$.class
  Last modified May 29, 2022; size 3048 bytes
  SHA-256 checksum eb26bccedc7707bb02a4d7de9a1bbc1b1309c490f680442593f6b90b7b4a252d
  Compiled from "HashMap.scala"
public final class org.sireum.HashMap$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/HashMap$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 7, attributes: 4
Constant pool:
    #1 = Utf8               org/sireum/HashMap$
    #2 = Class              #1            // org/sireum/HashMap$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               HashMap.scala
    #6 = Utf8               org/sireum/$internal/PackageTrait$ISZ$
    #7 = Class              #6            // org/sireum/$internal/PackageTrait$ISZ$
    #8 = Utf8               org/sireum/$internal/PackageTrait
    #9 = Class              #8            // org/sireum/$internal/PackageTrait
   #10 = Utf8               ISZ$
   #11 = Utf8               MODULE$
   #12 = Utf8               Lorg/sireum/HashMap$;
   #13 = Utf8               <clinit>
   #14 = Utf8               ()V
   #15 = Utf8               <init>
   #16 = NameAndType        #15:#14       // "<init>":()V
   #17 = Methodref          #2.#16        // org/sireum/HashMap$."<init>":()V
   #18 = NameAndType        #11:#12       // MODULE$:Lorg/sireum/HashMap$;
   #19 = Fieldref           #2.#18        // org/sireum/HashMap$.MODULE$:Lorg/sireum/HashMap$;
   #20 = Utf8               empty
   #21 = Utf8               ()Lorg/sireum/HashMap;
   #22 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashMap<TK;TT;>;
   #23 = Utf8               org/sireum/Z$
   #24 = Class              #23           // org/sireum/Z$
   #25 = Utf8               Lorg/sireum/Z$;
   #26 = NameAndType        #11:#25       // MODULE$:Lorg/sireum/Z$;
   #27 = Fieldref           #24.#26       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #28 = Utf8               apply
   #29 = Utf8               (I)Lorg/sireum/Z;
   #30 = NameAndType        #28:#29       // apply:(I)Lorg/sireum/Z;
   #31 = Methodref          #24.#30       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #32 = Utf8               emptyInit
   #33 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #34 = NameAndType        #32:#33       // emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #35 = Methodref          #2.#34        // org/sireum/HashMap$.emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #36 = Utf8               this
   #37 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
   #38 = Utf8               initialCapacity
   #39 = Utf8               org/sireum/B$
   #40 = Class              #39           // org/sireum/B$
   #41 = Utf8               Lorg/sireum/B$;
   #42 = NameAndType        #11:#41       // MODULE$:Lorg/sireum/B$;
   #43 = Fieldref           #40.#42       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #44 = Utf8               org/sireum/Z
   #45 = Class              #44           // org/sireum/Z
   #46 = Utf8               $less$eq
   #47 = Utf8               (Lorg/sireum/Z;)Z
   #48 = NameAndType        #46:#47       // $less$eq:(Lorg/sireum/Z;)Z
   #49 = InterfaceMethodref #45.#48       // org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
   #50 = Utf8               $4B
   #51 = Utf8               (Z)Z
   #52 = NameAndType        #50:#51       // $4B:(Z)Z
   #53 = Methodref          #40.#52       // org/sireum/B$.$4B:(Z)Z
   #54 = Utf8               $times
   #55 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #56 = NameAndType        #54:#55       // $times:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #57 = InterfaceMethodref #45.#56       // org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #58 = Utf8               $div
   #59 = NameAndType        #58:#55       // $div:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #60 = InterfaceMethodref #45.#59       // org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #61 = Utf8               $plus
   #62 = NameAndType        #61:#55       // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #63 = InterfaceMethodref #45.#62       // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #64 = Utf8               org/sireum/package$
   #65 = Class              #64           // org/sireum/package$
   #66 = Utf8               Lorg/sireum/package$;
   #67 = NameAndType        #11:#66       // MODULE$:Lorg/sireum/package$;
   #68 = Fieldref           #65.#67       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #69 = Utf8               ISZ
   #70 = Utf8               ()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #71 = NameAndType        #69:#70       // ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #72 = Methodref          #65.#71       // org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
   #73 = Utf8               org/sireum/Map$
   #74 = Class              #73           // org/sireum/Map$
   #75 = Utf8               Lorg/sireum/Map$;
   #76 = NameAndType        #11:#75       // MODULE$:Lorg/sireum/Map$;
   #77 = Fieldref           #74.#76       // org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
   #78 = Utf8               ()Lorg/sireum/Map;
   #79 = NameAndType        #20:#78       // empty:()Lorg/sireum/Map;
   #80 = Methodref          #74.#79       // org/sireum/Map$.empty:()Lorg/sireum/Map;
   #81 = Utf8               create
   #82 = Utf8               (Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/IS;
   #83 = NameAndType        #81:#82       // create:(Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/IS;
   #84 = Methodref          #7.#83        // org/sireum/$internal/PackageTrait$ISZ$.create:(Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/IS;
   #85 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #86 = NameAndType        #28:#85       // apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #87 = Methodref          #2.#86        // org/sireum/HashMap$.apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
   #88 = Utf8               sz
   #89 = Utf8               Lorg/sireum/Z;
   #90 = Utf8               $plus$plus
   #91 = Utf8               (Lorg/sireum/IS;)Lorg/sireum/HashMap;
   #92 = Utf8               <I:Ljava/lang/Object;K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashMap<TK;TT;>;
   #93 = Utf8               s
   #94 = Utf8               org/sireum/IS
   #95 = Class              #94           // org/sireum/IS
   #96 = Utf8               size
   #97 = Utf8               ()Lorg/sireum/Z;
   #98 = NameAndType        #96:#97       // size:()Lorg/sireum/Z;
   #99 = Methodref          #95.#98       // org/sireum/IS.size:()Lorg/sireum/Z;
  #100 = Utf8               org/sireum/HashMap
  #101 = Class              #100          // org/sireum/HashMap
  #102 = NameAndType        #90:#91       // $plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #103 = Methodref          #101.#102     // org/sireum/HashMap.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
  #104 = Utf8               Lorg/sireum/IS;
  #105 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
  #106 = Utf8               mapEntries
  #107 = Utf8               (Lorg/sireum/IS;Lorg/sireum/Z;)V
  #108 = NameAndType        #15:#107      // "<init>":(Lorg/sireum/IS;Lorg/sireum/Z;)V
  #109 = Methodref          #101.#108     // org/sireum/HashMap."<init>":(Lorg/sireum/IS;Lorg/sireum/Z;)V
  #110 = Utf8               unapply
  #111 = Utf8               (Lorg/sireum/HashMap;)Lscala/Some;
  #112 = Utf8               <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;>;>;
  #113 = Utf8               o
  #114 = Utf8               scala/Some
  #115 = Class              #114          // scala/Some
  #116 = Utf8               scala/Tuple2
  #117 = Class              #116          // scala/Tuple2
  #118 = Utf8               ()Lorg/sireum/IS;
  #119 = NameAndType        #106:#118     // mapEntries:()Lorg/sireum/IS;
  #120 = Methodref          #101.#119     // org/sireum/HashMap.mapEntries:()Lorg/sireum/IS;
  #121 = Methodref          #101.#98      // org/sireum/HashMap.size:()Lorg/sireum/Z;
  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #123 = NameAndType        #15:#122      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #124 = Methodref          #117.#123     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #125 = Utf8               (Ljava/lang/Object;)V
  #126 = NameAndType        #15:#125      // "<init>":(Ljava/lang/Object;)V
  #127 = Methodref          #115.#126     // scala/Some."<init>":(Ljava/lang/Object;)V
  #128 = Utf8               Lorg/sireum/HashMap;
  #129 = Methodref          #4.#16        // java/lang/Object."<init>":()V
  #130 = Utf8               Code
  #131 = Utf8               LineNumberTable
  #132 = Utf8               LocalVariableTable
  #133 = Utf8               Signature
  #134 = Utf8               StackMapTable
  #135 = Utf8               MethodParameters
  #136 = Utf8               InnerClasses
  #137 = Utf8               SourceFile
  #138 = Utf8               ScalaInlineInfo
  #139 = Utf8               Scala
{
  public static final org.sireum.HashMap$ MODULE$;
    descriptor: Lorg/sireum/HashMap$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/HashMap$
         3: dup
         4: invokespecial #17                 // Method "<init>":()V
         7: putstatic     #19                 // Field MODULE$:Lorg/sireum/HashMap$;
        10: return
      LineNumberTable:
        line 29: 0

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashMap<K, T> empty();
    descriptor: ()Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         4: bipush        12
         6: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
         9: invokevirtual #35                 // Method emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
        12: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/HashMap$;
    Signature: #22                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>()Lorg/sireum/HashMap<TK;TT;>;

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashMap<K, T> emptyInit(org.sireum.Z);
    descriptor: (Lorg/sireum/Z;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: getstatic     #43                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         7: iconst_0
         8: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        11: invokeinterface #49,  2           // InterfaceMethod org/sireum/Z.$less$eq:(Lorg/sireum/Z;)Z
        16: invokevirtual #53                 // Method org/sireum/B$.$4B:(Z)Z
        19: ifeq          32
        22: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        25: iconst_4
        26: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        29: goto          69
        32: aload_1
        33: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        36: iconst_4
        37: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        40: invokeinterface #57,  2           // InterfaceMethod org/sireum/Z.$times:(Lorg/sireum/Z;)Lorg/sireum/Z;
        45: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        48: iconst_3
        49: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        52: invokeinterface #60,  2           // InterfaceMethod org/sireum/Z.$div:(Lorg/sireum/Z;)Lorg/sireum/Z;
        57: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        60: iconst_1
        61: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        64: invokeinterface #63,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        69: astore_2
        70: aload_0
        71: getstatic     #68                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        74: invokevirtual #72                 // Method org/sireum/package$.ISZ:()Lorg/sireum/$internal/PackageTrait$ISZ$;
        77: aload_2
        78: getstatic     #77                 // Field org/sireum/Map$.MODULE$:Lorg/sireum/Map$;
        81: invokevirtual #80                 // Method org/sireum/Map$.empty:()Lorg/sireum/Map;
        84: invokevirtual #84                 // Method org/sireum/$internal/PackageTrait$ISZ$.create:(Lorg/sireum/Z;Ljava/lang/Object;)Lorg/sireum/IS;
        87: getstatic     #27                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
        90: iconst_0
        91: invokevirtual #31                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        94: invokevirtual #87                 // Method apply:(Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
        97: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 32 /* same */
        frame_type = 100 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 36: 0
        line 37: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           70      28     2    sz   Lorg/sireum/Z;
            0      98     0  this   Lorg/sireum/HashMap$;
            0      98     1 initialCapacity   Lorg/sireum/Z;
    Signature: #37                          // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      initialCapacity                final

  public <I extends java.lang.Object, K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashMap<K, T> $plus$plus(org.sireum.IS<I, scala.Tuple2<K, T>>);
    descriptor: (Lorg/sireum/IS;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #99                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
         5: invokevirtual #35                 // Method emptyInit:(Lorg/sireum/Z;)Lorg/sireum/HashMap;
         8: aload_1
         9: invokevirtual #103                // Method org/sireum/HashMap.$plus$plus:(Lorg/sireum/IS;)Lorg/sireum/HashMap;
        12: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/sireum/HashMap$;
            0      13     1     s   Lorg/sireum/IS;
    Signature: #92                          // <I:Ljava/lang/Object;K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;Lscala/Tuple2<TK;TT;>;>;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public <K extends java.lang.Object, T extends java.lang.Object> org.sireum.HashMap<K, T> apply(org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>>, org.sireum.Z);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/Z;)Lorg/sireum/HashMap;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #101                // class org/sireum/HashMap
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #109                // Method org/sireum/HashMap."<init>":(Lorg/sireum/IS;Lorg/sireum/Z;)V
         9: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/sireum/HashMap$;
            0      10     1 mapEntries   Lorg/sireum/IS;
            0      10     2  size   Lorg/sireum/Z;
    Signature: #105                         // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;)Lorg/sireum/HashMap<TK;TT;>;
    MethodParameters:
      Name                           Flags
      mapEntries                     final
      size                           final

  public <K extends java.lang.Object, T extends java.lang.Object> scala.Some<scala.Tuple2<org.sireum.IS<org.sireum.Z, org.sireum.Map<K, T>>, org.sireum.Z>> unapply(org.sireum.HashMap<K, T>);
    descriptor: (Lorg/sireum/HashMap;)Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=2
         0: new           #115                // class scala/Some
         3: dup
         4: new           #117                // class scala/Tuple2
         7: dup
         8: aload_1
         9: invokevirtual #120                // Method org/sireum/HashMap.mapEntries:()Lorg/sireum/IS;
        12: aload_1
        13: invokevirtual #121                // Method org/sireum/HashMap.size:()Lorg/sireum/Z;
        16: invokespecial #124                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        19: invokespecial #127                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        22: areturn
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/sireum/HashMap$;
            0      23     1     o   Lorg/sireum/HashMap;
    Signature: #112                         // <K:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/HashMap<TK;TT;>;)Lscala/Some<Lscala/Tuple2<Lorg/sireum/IS<Lorg/sireum/Z;Lorg/sireum/Map<TK;TT;>;>;Lorg/sireum/Z;>;>;
    MethodParameters:
      Name                           Flags
      o                              final

  private org.sireum.HashMap$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #129                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 29: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/HashMap$;
}
InnerClasses:
  public #10= #7 of #9;                   // ISZ$=class org/sireum/$internal/PackageTrait$ISZ$ of class org/sireum/$internal/PackageTrait
SourceFile: "HashMap.scala"
  ScalaInlineInfo: length = 0x22 (unknown attribute)
   01 01 00 06 00 5A 00 5B 01 00 0F 00 0E 01 00 1C
   00 55 01 00 14 00 15 01 00 20 00 21 01 00 6E 00
   6F 01
  Scala: length = 0x0 (unknown attribute)

