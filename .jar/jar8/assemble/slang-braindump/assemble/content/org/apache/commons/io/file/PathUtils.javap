Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/apache/commons/io/file/PathUtils.class
  Last modified May 29, 2022; size 17598 bytes
  SHA-256 checksum 1121973292dc7238b5f52eaf63adde1ec873c395a375429e702604636b52ae92
  Compiled from "PathUtils.java"
public final class org.apache.commons.io.file.PathUtils
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #125                        // org/apache/commons/io/file/PathUtils
  super_class: #126                       // java/lang/Object
  interfaces: 0, fields: 4, methods: 35, attributes: 3
Constant pool:
    #1 = Methodref          #125.#304     // org/apache/commons/io/file/PathUtils.accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
    #2 = Methodref          #5.#305       // org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;
    #3 = Methodref          #125.#306     // org/apache/commons/io/file/PathUtils.toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
    #4 = Methodref          #125.#307     // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
    #5 = Class              #308          // org/apache/commons/io/file/AccumulatorPathVisitor
    #6 = Fieldref           #125.#309     // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
    #7 = Methodref          #125.#310     // org/apache/commons/io/file/PathUtils.cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
    #8 = Class              #311          // org/apache/commons/io/file/CleaningPathVisitor
    #9 = Methodref          #312.#313     // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #10 = Class              #314          // java/lang/String
   #11 = Methodref          #8.#315       // org/apache/commons/io/file/CleaningPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
   #12 = Methodref          #125.#316     // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
   #13 = Methodref          #8.#317       // org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #14 = Class              #318          // org/apache/commons/io/file/CopyDirectoryVisitor
   #15 = Methodref          #14.#319      // org/apache/commons/io/file/CopyDirectoryVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
   #16 = Methodref          #14.#317      // org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #17 = Methodref          #320.#321     // java/net/URL.openStream:()Ljava/io/InputStream;
   #18 = Methodref          #322.#323     // java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
   #19 = Methodref          #324.#325     // java/io/InputStream.close:()V
   #20 = Class              #326          // java/lang/Throwable
   #21 = Methodref          #20.#327      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
   #22 = InterfaceMethodref #66.#328      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
   #23 = InterfaceMethodref #66.#329      // java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
   #24 = Methodref          #322.#330     // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
   #25 = Methodref          #320.#331     // java/net/URL.getFile:()Ljava/lang/String;
   #26 = InterfaceMethodref #66.#332      // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
   #27 = Class              #333          // org/apache/commons/io/file/CountingPathVisitor
   #28 = Methodref          #27.#334      // org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
   #29 = Methodref          #27.#317      // org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #30 = Methodref          #125.#335     // org/apache/commons/io/file/PathUtils.delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
   #31 = Class              #336          // java/nio/file/LinkOption
   #32 = Fieldref           #31.#337      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
   #33 = Methodref          #322.#338     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #34 = Methodref          #125.#339     // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
   #35 = Methodref          #125.#340     // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
   #36 = Class              #341          // org/apache/commons/io/file/DeletingPathVisitor
   #37 = Methodref          #36.#315      // org/apache/commons/io/file/DeletingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
   #38 = Methodref          #36.#317      // org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
   #39 = Class              #342          // java/nio/file/NoSuchFileException
   #40 = InterfaceMethodref #66.#343      // java/nio/file/Path.toString:()Ljava/lang/String;
   #41 = Methodref          #39.#344      // java/nio/file/NoSuchFileException."<init>":(Ljava/lang/String;)V
   #42 = Methodref          #322.#345     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
   #43 = Methodref          #322.#346     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J
   #44 = Methodref          #125.#347     // org/apache/commons/io/file/PathUtils.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z
   #45 = Methodref          #125.#348     // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
   #46 = Methodref          #322.#349     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
   #47 = InterfaceMethodref #150.#350     // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
   #48 = InterfaceMethodref #351.#352     // org/apache/commons/io/file/Counters$Counter.increment:()V
   #49 = InterfaceMethodref #150.#353     // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
   #50 = InterfaceMethodref #351.#354     // org/apache/commons/io/file/Counters$Counter.add:(J)V
   #51 = Fieldref           #355.#356     // org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;
   #52 = Fieldref           #125.#357     // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
   #53 = Fieldref           #125.#358     // org/apache/commons/io/file/PathUtils.EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
   #54 = Fieldref           #125.#359     // org/apache/commons/io/file/PathUtils.EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
   #55 = Methodref          #125.#360     // org/apache/commons/io/file/PathUtils.directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
   #56 = Class              #361          // org/apache/commons/io/file/PathUtils$RelativeSortedPaths
   #57 = Class              #362          // java/lang/Integer
   #58 = Integer            2147483647
   #59 = Methodref          #56.#363      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
   #60 = Fieldref           #56.#364      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
   #61 = Fieldref           #56.#365      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;
   #62 = Fieldref           #56.#366      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;
   #63 = InterfaceMethodref #101.#367     // java/util/List.iterator:()Ljava/util/Iterator;
   #64 = InterfaceMethodref #368.#369     // java/util/Iterator.hasNext:()Z
   #65 = InterfaceMethodref #368.#370     // java/util/Iterator.next:()Ljava/lang/Object;
   #66 = Class              #371          // java/nio/file/Path
   #67 = Methodref          #372.#373     // java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I
   #68 = Methodref          #125.#374     // org/apache/commons/io/file/PathUtils.fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
   #69 = Class              #375          // java/lang/IllegalStateException
   #70 = String             #376          // Unexpected mismatch.
   #71 = Methodref          #69.#344      // java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
   #72 = Methodref          #125.#377     // org/apache/commons/io/file/PathUtils.directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
   #73 = InterfaceMethodref #66.#378      // java/nio/file/Path.normalize:()Ljava/nio/file/Path;
   #74 = Class              #379          // java/io/IOException
   #75 = Class              #380          // java/lang/StringBuilder
   #76 = Methodref          #75.#381      // java/lang/StringBuilder."<init>":()V
   #77 = String             #382          // Can\'t compare directories, only files:
   #78 = Methodref          #75.#383      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #79 = Methodref          #75.#384      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   #80 = Methodref          #75.#343      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #81 = Methodref          #74.#344      // java/io/IOException."<init>":(Ljava/lang/String;)V
   #82 = InterfaceMethodref #66.#385      // java/nio/file/Path.equals:(Ljava/lang/Object;)Z
   #83 = Methodref          #322.#386     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
   #84 = Methodref          #387.#388     // org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
   #85 = Class              #389          // java/nio/file/attribute/AclFileAttributeView
   #86 = Methodref          #322.#390     // java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
   #87 = InterfaceMethodref #85.#391      // java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;
   #88 = Methodref          #125.#392     // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z
   #89 = Methodref          #125.#393     // org/apache/commons/io/file/PathUtils.isEmptyFile:(Ljava/nio/file/Path;)Z
   #90 = Methodref          #322.#394     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
   #91 = InterfaceMethodref #395.#367     // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
   #92 = InterfaceMethodref #395.#325     // java/nio/file/DirectoryStream.close:()V
   #93 = InterfaceMethodref #396.#397     // java/util/Collection.stream:()Ljava/util/stream/Stream;
   #94 = Methodref          #126.#398     // java/lang/Object.getClass:()Ljava/lang/Class;
   #95 = InvokeDynamic      #0:#404       // #0:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
   #96 = InterfaceMethodref #405.#406     // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
   #97 = InterfaceMethodref #405.#407     // java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
   #98 = InterfaceMethodref #405.#408     // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
   #99 = Methodref          #409.#410     // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
  #100 = InterfaceMethodref #405.#411     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
  #101 = Class              #412          // java/util/List
  #102 = Class              #413          // java/nio/file/attribute/DosFileAttributeView
  #103 = InterfaceMethodref #102.#414     // java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V
  #104 = Class              #415          // java/nio/file/attribute/PosixFileAttributeView
  #105 = InterfaceMethodref #104.#416     // java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;
  #106 = InterfaceMethodref #417.#418     // java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;
  #107 = Fieldref           #419.#420     // java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
  #108 = InterfaceMethodref #117.#421     // java/util/Set.remove:(Ljava/lang/Object;)Z
  #109 = Fieldref           #419.#422     // java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
  #110 = Fieldref           #419.#423     // java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
  #111 = Methodref          #322.#424     // java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
  #112 = String             #425          // No DosFileAttributeView or PosixFileAttributeView for
  #113 = Class              #426          // java/nio/file/FileVisitOption
  #114 = Methodref          #427.#428     // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
  #115 = Methodref          #429.#430     // java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #116 = Methodref          #409.#431     // java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
  #117 = Class              #432          // java/util/Set
  #118 = Methodref          #322.#433     // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
  #119 = Methodref          #322.#434     // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
  #120 = Methodref          #435.#436     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #121 = Methodref          #435.#437     // java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
  #122 = Methodref          #126.#381     // java/lang/Object."<init>":()V
  #123 = Class              #438          // org/apache/commons/io/file/DeleteOption
  #124 = Class              #439          // java/nio/file/OpenOption
  #125 = Class              #440          // org/apache/commons/io/file/PathUtils
  #126 = Class              #441          // java/lang/Object
  #127 = Class              #442          // org/apache/commons/io/file/PathUtils$1
  #128 = Utf8               InnerClasses
  #129 = Utf8               RelativeSortedPaths
  #130 = Utf8               EMPTY_DELETE_OPTION_ARRAY
  #131 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;
  #132 = Utf8               EMPTY_FILE_VISIT_OPTION_ARRAY
  #133 = Utf8               [Ljava/nio/file/FileVisitOption;
  #134 = Utf8               EMPTY_LINK_OPTION_ARRAY
  #135 = Utf8               [Ljava/nio/file/LinkOption;
  #136 = Utf8               EMPTY_OPEN_OPTION_ARRAY
  #137 = Utf8               [Ljava/nio/file/OpenOption;
  #138 = Utf8               accumulate
  #139 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
  #140 = Utf8               Code
  #141 = Utf8               LineNumberTable
  #142 = Utf8               LocalVariableTable
  #143 = Utf8               directory
  #144 = Utf8               Ljava/nio/file/Path;
  #145 = Utf8               maxDepth
  #146 = Utf8               I
  #147 = Utf8               fileVisitOptions
  #148 = Utf8               Exceptions
  #149 = Utf8               cleanDirectory
  #150 = Class              #443          // org/apache/commons/io/file/Counters$PathCounters
  #151 = Utf8               PathCounters
  #152 = Utf8               (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #153 = Utf8               (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #154 = Utf8               options
  #155 = Utf8               copyDirectory
  #156 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #157 = Utf8               sourceDirectory
  #158 = Utf8               targetDirectory
  #159 = Utf8               copyOptions
  #160 = Utf8               [Ljava/nio/file/CopyOption;
  #161 = Utf8               copyFile
  #162 = Utf8               (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #163 = Utf8               inputStream
  #164 = Utf8               Ljava/io/InputStream;
  #165 = Utf8               sourceFile
  #166 = Utf8               Ljava/net/URL;
  #167 = Utf8               targetFile
  #168 = Utf8               StackMapTable
  #169 = Class              #444          // java/net/URL
  #170 = Class              #371          // java/nio/file/Path
  #171 = Class              #160          // "[Ljava/nio/file/CopyOption;"
  #172 = Class              #445          // java/io/InputStream
  #173 = Class              #326          // java/lang/Throwable
  #174 = Utf8               copyFileToDirectory
  #175 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #176 = Utf8               countDirectory
  #177 = Utf8               delete
  #178 = Utf8               path
  #179 = Class              #443          // org/apache/commons/io/file/Counters$PathCounters
  #180 = Utf8               deleteDirectory
  #181 = Utf8               deleteFile
  #182 = Utf8               file
  #183 = Utf8               pathCounts
  #184 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;
  #185 = Utf8               exists
  #186 = Utf8               Z
  #187 = Utf8               size
  #188 = Utf8               J
  #189 = Utf8               overrideReadOnly
  #190 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z
  #191 = Utf8               deleteOption
  #192 = Utf8               Lorg/apache/commons/io/file/DeleteOption;
  #193 = Class              #131          // "[Lorg/apache/commons/io/file/DeleteOption;"
  #194 = Utf8               directoryAndFileContentEquals
  #195 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
  #196 = Utf8               path1
  #197 = Utf8               path2
  #198 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
  #199 = Utf8               binarySearch
  #200 = Utf8               linkOptions
  #201 = Utf8               openOptions
  #202 = Utf8               fileVisitOption
  #203 = Utf8               relativeSortedPaths
  #204 = Utf8               Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;
  #205 = Utf8               fileList1
  #206 = Utf8               Ljava/util/List;
  #207 = Utf8               fileList2
  #208 = Utf8               LocalVariableTypeTable
  #209 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;
  #210 = Class              #135          // "[Ljava/nio/file/LinkOption;"
  #211 = Class              #137          // "[Ljava/nio/file/OpenOption;"
  #212 = Class              #133          // "[Ljava/nio/file/FileVisitOption;"
  #213 = Class              #361          // org/apache/commons/io/file/PathUtils$RelativeSortedPaths
  #214 = Class              #412          // java/util/List
  #215 = Class              #446          // java/util/Iterator
  #216 = Utf8               directoryContentEquals
  #217 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
  #218 = Utf8               fileContentEquals
  #219 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
  #220 = Utf8               inputStream2
  #221 = Utf8               inputStream1
  #222 = Utf8               nPath1
  #223 = Utf8               nPath2
  #224 = Utf8               path1Exists
  #225 = Utf8               getAclEntryList
  #226 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;
  #227 = Utf8               sourcePath
  #228 = Utf8               fileAttributeView
  #229 = Utf8               Ljava/nio/file/attribute/AclFileAttributeView;
  #230 = Class              #389          // java/nio/file/attribute/AclFileAttributeView
  #231 = Utf8               Signature
  #232 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;
  #233 = Utf8               isEmpty
  #234 = Utf8               (Ljava/nio/file/Path;)Z
  #235 = Utf8               isEmptyDirectory
  #236 = Utf8               directoryStream
  #237 = Utf8               Ljava/nio/file/DirectoryStream;
  #238 = Utf8               Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;
  #239 = Class              #447          // java/nio/file/DirectoryStream
  #240 = Utf8               isEmptyFile
  #241 = Utf8               relativize
  #242 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;
  #243 = Utf8               collection
  #244 = Utf8               Ljava/util/Collection;
  #245 = Utf8               parent
  #246 = Utf8               sort
  #247 = Utf8               comparator
  #248 = Utf8               Ljava/util/Comparator;
  #249 = Utf8               stream
  #250 = Utf8               Ljava/util/stream/Stream;
  #251 = Utf8               Ljava/util/Collection<Ljava/nio/file/Path;>;
  #252 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;
  #253 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;
  #254 = Class              #448          // java/util/stream/Stream
  #255 = Utf8               (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;
  #256 = Utf8               setReadOnly
  #257 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
  #258 = Utf8               readAttributes
  #259 = Utf8               Ljava/nio/file/attribute/PosixFileAttributes;
  #260 = Utf8               permissions
  #261 = Utf8               Ljava/util/Set;
  #262 = Utf8               readOnly
  #263 = Utf8               Ljava/nio/file/attribute/DosFileAttributeView;
  #264 = Utf8               posixFileAttributeView
  #265 = Utf8               Ljava/nio/file/attribute/PosixFileAttributeView;
  #266 = Utf8               Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;
  #267 = Class              #413          // java/nio/file/attribute/DosFileAttributeView
  #268 = Class              #415          // java/nio/file/attribute/PosixFileAttributeView
  #269 = Utf8               toFileVisitOptionSet
  #270 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
  #271 = Class              #432          // java/util/Set
  #272 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;
  #273 = Utf8               visitFileTree
  #274 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
  #275 = Utf8               visitor
  #276 = Utf8               Ljava/nio/file/FileVisitor;
  #277 = Utf8               TT;
  #278 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;
  #279 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
  #280 = Utf8               start
  #281 = Utf8               Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;
  #282 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;
  #283 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;
  #284 = Utf8               first
  #285 = Utf8               Ljava/lang/String;
  #286 = Utf8               more
  #287 = Utf8               [Ljava/lang/String;
  #288 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;
  #289 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;
  #290 = Utf8               uri
  #291 = Utf8               Ljava/net/URI;
  #292 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;
  #293 = Utf8               <init>
  #294 = Utf8               ()V
  #295 = Utf8               this
  #296 = Utf8               Lorg/apache/commons/io/file/PathUtils;
  #297 = Utf8               access$000
  #298 = Utf8               x0
  #299 = Utf8               x1
  #300 = Utf8               x2
  #301 = Utf8               <clinit>
  #302 = Utf8               SourceFile
  #303 = Utf8               PathUtils.java
  #304 = NameAndType        #138:#139     // accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
  #305 = NameAndType        #449:#450     // withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;
  #306 = NameAndType        #269:#270     // toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
  #307 = NameAndType        #273:#279     // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
  #308 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor
  #309 = NameAndType        #130:#131     // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
  #310 = NameAndType        #149:#153     // cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #311 = Utf8               org/apache/commons/io/file/CleaningPathVisitor
  #312 = Class              #451          // org/apache/commons/io/file/Counters
  #313 = NameAndType        #452:#453     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
  #314 = Utf8               java/lang/String
  #315 = NameAndType        #293:#454     // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
  #316 = NameAndType        #273:#274     // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
  #317 = NameAndType        #455:#453     // getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
  #318 = Utf8               org/apache/commons/io/file/CopyDirectoryVisitor
  #319 = NameAndType        #293:#456     // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
  #320 = Class              #444          // java/net/URL
  #321 = NameAndType        #457:#458     // openStream:()Ljava/io/InputStream;
  #322 = Class              #459          // java/nio/file/Files
  #323 = NameAndType        #460:#461     // copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
  #324 = Class              #445          // java/io/InputStream
  #325 = NameAndType        #462:#294     // close:()V
  #326 = Utf8               java/lang/Throwable
  #327 = NameAndType        #463:#464     // addSuppressed:(Ljava/lang/Throwable;)V
  #328 = NameAndType        #465:#466     // getFileName:()Ljava/nio/file/Path;
  #329 = NameAndType        #467:#468     // resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #330 = NameAndType        #460:#175     // copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
  #331 = NameAndType        #469:#470     // getFile:()Ljava/lang/String;
  #332 = NameAndType        #467:#471     // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
  #333 = Utf8               org/apache/commons/io/file/CountingPathVisitor
  #334 = NameAndType        #293:#472     // "<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
  #335 = NameAndType        #177:#153     // delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #336 = Utf8               java/nio/file/LinkOption
  #337 = NameAndType        #473:#474     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
  #338 = NameAndType        #475:#476     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #339 = NameAndType        #180:#153     // deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #340 = NameAndType        #181:#153     // deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
  #341 = Utf8               org/apache/commons/io/file/DeletingPathVisitor
  #342 = Utf8               java/nio/file/NoSuchFileException
  #343 = NameAndType        #477:#470     // toString:()Ljava/lang/String;
  #344 = NameAndType        #293:#478     // "<init>":(Ljava/lang/String;)V
  #345 = NameAndType        #185:#476     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #346 = NameAndType        #187:#479     // size:(Ljava/nio/file/Path;)J
  #347 = NameAndType        #189:#190     // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z
  #348 = NameAndType        #256:#257     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
  #349 = NameAndType        #480:#234     // deleteIfExists:(Ljava/nio/file/Path;)Z
  #350 = NameAndType        #481:#483     // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
  #351 = Class              #484          // org/apache/commons/io/file/Counters$Counter
  #352 = NameAndType        #485:#294     // increment:()V
  #353 = NameAndType        #486:#483     // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
  #354 = NameAndType        #487:#488     // add:(J)V
  #355 = Class              #489          // org/apache/commons/io/file/StandardDeleteOption
  #356 = NameAndType        #490:#491     // OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;
  #357 = NameAndType        #134:#135     // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
  #358 = NameAndType        #136:#137     // EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
  #359 = NameAndType        #132:#133     // EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
  #360 = NameAndType        #194:#198     // directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
  #361 = Utf8               org/apache/commons/io/file/PathUtils$RelativeSortedPaths
  #362 = Utf8               java/lang/Integer
  #363 = NameAndType        #293:#492     // "<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
  #364 = NameAndType        #493:#186     // equals:Z
  #365 = NameAndType        #494:#206     // relativeFileList1:Ljava/util/List;
  #366 = NameAndType        #495:#206     // relativeFileList2:Ljava/util/List;
  #367 = NameAndType        #496:#497     // iterator:()Ljava/util/Iterator;
  #368 = Class              #446          // java/util/Iterator
  #369 = NameAndType        #498:#499     // hasNext:()Z
  #370 = NameAndType        #500:#501     // next:()Ljava/lang/Object;
  #371 = Utf8               java/nio/file/Path
  #372 = Class              #502          // java/util/Collections
  #373 = NameAndType        #199:#503     // binarySearch:(Ljava/util/List;Ljava/lang/Object;)I
  #374 = NameAndType        #218:#219     // fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
  #375 = Utf8               java/lang/IllegalStateException
  #376 = Utf8               Unexpected mismatch.
  #377 = NameAndType        #216:#217     // directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
  #378 = NameAndType        #504:#466     // normalize:()Ljava/nio/file/Path;
  #379 = Utf8               java/io/IOException
  #380 = Utf8               java/lang/StringBuilder
  #381 = NameAndType        #293:#294     // "<init>":()V
  #382 = Utf8               Can\'t compare directories, only files:
  #383 = NameAndType        #505:#506     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #384 = NameAndType        #505:#507     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #385 = NameAndType        #493:#508     // equals:(Ljava/lang/Object;)Z
  #386 = NameAndType        #509:#510     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
  #387 = Class              #511          // org/apache/commons/io/IOUtils
  #388 = NameAndType        #512:#513     // contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
  #389 = Utf8               java/nio/file/attribute/AclFileAttributeView
  #390 = NameAndType        #514:#515     // getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
  #391 = NameAndType        #516:#517     // getAcl:()Ljava/util/List;
  #392 = NameAndType        #235:#234     // isEmptyDirectory:(Ljava/nio/file/Path;)Z
  #393 = NameAndType        #240:#234     // isEmptyFile:(Ljava/nio/file/Path;)Z
  #394 = NameAndType        #518:#519     // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
  #395 = Class              #447          // java/nio/file/DirectoryStream
  #396 = Class              #520          // java/util/Collection
  #397 = NameAndType        #249:#521     // stream:()Ljava/util/stream/Stream;
  #398 = NameAndType        #522:#523     // getClass:()Ljava/lang/Class;
  #399 = Utf8               BootstrapMethods
  #400 = MethodHandle       6:#524        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #401 = MethodType         #525          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #402 = MethodHandle       9:#526        // REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #403 = MethodType         #468          //  (Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #404 = NameAndType        #527:#528     // apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
  #405 = Class              #448          // java/util/stream/Stream
  #406 = NameAndType        #529:#530     // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
  #407 = NameAndType        #531:#521     // sorted:()Ljava/util/stream/Stream;
  #408 = NameAndType        #531:#532     // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
  #409 = Class              #533          // java/util/stream/Collectors
  #410 = NameAndType        #534:#535     // toList:()Ljava/util/stream/Collector;
  #411 = NameAndType        #536:#537     // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
  #412 = Utf8               java/util/List
  #413 = Utf8               java/nio/file/attribute/DosFileAttributeView
  #414 = NameAndType        #256:#538     // setReadOnly:(Z)V
  #415 = Utf8               java/nio/file/attribute/PosixFileAttributeView
  #416 = NameAndType        #258:#539     // readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;
  #417 = Class              #540          // java/nio/file/attribute/PosixFileAttributes
  #418 = NameAndType        #260:#541     // permissions:()Ljava/util/Set;
  #419 = Class              #542          // java/nio/file/attribute/PosixFilePermission
  #420 = NameAndType        #543:#544     // OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
  #421 = NameAndType        #545:#508     // remove:(Ljava/lang/Object;)Z
  #422 = NameAndType        #546:#544     // GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
  #423 = NameAndType        #547:#544     // OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
  #424 = NameAndType        #548:#549     // setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
  #425 = Utf8               No DosFileAttributeView or PosixFileAttributeView for
  #426 = Utf8               java/nio/file/FileVisitOption
  #427 = Class              #550          // java/util/EnumSet
  #428 = NameAndType        #551:#552     // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
  #429 = Class              #553          // java/util/Arrays
  #430 = NameAndType        #249:#554     // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #431 = NameAndType        #555:#535     // toSet:()Ljava/util/stream/Collector;
  #432 = Utf8               java/util/Set
  #433 = NameAndType        #556:#557     // walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
  #434 = NameAndType        #556:#558     // walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
  #435 = Class              #559          // java/nio/file/Paths
  #436 = NameAndType        #560:#561     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #437 = NameAndType        #560:#562     // get:(Ljava/net/URI;)Ljava/nio/file/Path;
  #438 = Utf8               org/apache/commons/io/file/DeleteOption
  #439 = Utf8               java/nio/file/OpenOption
  #440 = Utf8               org/apache/commons/io/file/PathUtils
  #441 = Utf8               java/lang/Object
  #442 = Utf8               org/apache/commons/io/file/PathUtils$1
  #443 = Utf8               org/apache/commons/io/file/Counters$PathCounters
  #444 = Utf8               java/net/URL
  #445 = Utf8               java/io/InputStream
  #446 = Utf8               java/util/Iterator
  #447 = Utf8               java/nio/file/DirectoryStream
  #448 = Utf8               java/util/stream/Stream
  #449 = Utf8               withLongCounters
  #450 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;
  #451 = Utf8               org/apache/commons/io/file/Counters
  #452 = Utf8               longPathCounters
  #453 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;
  #454 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
  #455 = Utf8               getPathCounters
  #456 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
  #457 = Utf8               openStream
  #458 = Utf8               ()Ljava/io/InputStream;
  #459 = Utf8               java/nio/file/Files
  #460 = Utf8               copy
  #461 = Utf8               (Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
  #462 = Utf8               close
  #463 = Utf8               addSuppressed
  #464 = Utf8               (Ljava/lang/Throwable;)V
  #465 = Utf8               getFileName
  #466 = Utf8               ()Ljava/nio/file/Path;
  #467 = Utf8               resolve
  #468 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #469 = Utf8               getFile
  #470 = Utf8               ()Ljava/lang/String;
  #471 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;
  #472 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V
  #473 = Utf8               NOFOLLOW_LINKS
  #474 = Utf8               Ljava/nio/file/LinkOption;
  #475 = Utf8               isDirectory
  #476 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
  #477 = Utf8               toString
  #478 = Utf8               (Ljava/lang/String;)V
  #479 = Utf8               (Ljava/nio/file/Path;)J
  #480 = Utf8               deleteIfExists
  #481 = Utf8               getFileCounter
  #482 = Utf8               Counter
  #483 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;
  #484 = Utf8               org/apache/commons/io/file/Counters$Counter
  #485 = Utf8               increment
  #486 = Utf8               getByteCounter
  #487 = Utf8               add
  #488 = Utf8               (J)V
  #489 = Utf8               org/apache/commons/io/file/StandardDeleteOption
  #490 = Utf8               OVERRIDE_READ_ONLY
  #491 = Utf8               Lorg/apache/commons/io/file/StandardDeleteOption;
  #492 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
  #493 = Utf8               equals
  #494 = Utf8               relativeFileList1
  #495 = Utf8               relativeFileList2
  #496 = Utf8               iterator
  #497 = Utf8               ()Ljava/util/Iterator;
  #498 = Utf8               hasNext
  #499 = Utf8               ()Z
  #500 = Utf8               next
  #501 = Utf8               ()Ljava/lang/Object;
  #502 = Utf8               java/util/Collections
  #503 = Utf8               (Ljava/util/List;Ljava/lang/Object;)I
  #504 = Utf8               normalize
  #505 = Utf8               append
  #506 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #507 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #508 = Utf8               (Ljava/lang/Object;)Z
  #509 = Utf8               newInputStream
  #510 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
  #511 = Utf8               org/apache/commons/io/IOUtils
  #512 = Utf8               contentEquals
  #513 = Utf8               (Ljava/io/InputStream;Ljava/io/InputStream;)Z
  #514 = Utf8               getFileAttributeView
  #515 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
  #516 = Utf8               getAcl
  #517 = Utf8               ()Ljava/util/List;
  #518 = Utf8               newDirectoryStream
  #519 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
  #520 = Utf8               java/util/Collection
  #521 = Utf8               ()Ljava/util/stream/Stream;
  #522 = Utf8               getClass
  #523 = Utf8               ()Ljava/lang/Class;
  #524 = Methodref          #563.#564     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #525 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #526 = InterfaceMethodref #66.#565      // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #527 = Utf8               apply
  #528 = Utf8               (Ljava/nio/file/Path;)Ljava/util/function/Function;
  #529 = Utf8               map
  #530 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;
  #531 = Utf8               sorted
  #532 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;
  #533 = Utf8               java/util/stream/Collectors
  #534 = Utf8               toList
  #535 = Utf8               ()Ljava/util/stream/Collector;
  #536 = Utf8               collect
  #537 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;
  #538 = Utf8               (Z)V
  #539 = Utf8               ()Ljava/nio/file/attribute/PosixFileAttributes;
  #540 = Utf8               java/nio/file/attribute/PosixFileAttributes
  #541 = Utf8               ()Ljava/util/Set;
  #542 = Utf8               java/nio/file/attribute/PosixFilePermission
  #543 = Utf8               OWNER_WRITE
  #544 = Utf8               Ljava/nio/file/attribute/PosixFilePermission;
  #545 = Utf8               remove
  #546 = Utf8               GROUP_WRITE
  #547 = Utf8               OTHERS_WRITE
  #548 = Utf8               setPosixFilePermissions
  #549 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
  #550 = Utf8               java/util/EnumSet
  #551 = Utf8               noneOf
  #552 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;
  #553 = Utf8               java/util/Arrays
  #554 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;
  #555 = Utf8               toSet
  #556 = Utf8               walkFileTree
  #557 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
  #558 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
  #559 = Utf8               java/nio/file/Paths
  #560 = Utf8               get
  #561 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
  #562 = Utf8               (Ljava/net/URI;)Ljava/nio/file/Path;
  #563 = Class              #566          // java/lang/invoke/LambdaMetafactory
  #564 = NameAndType        #567:#570     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #565 = NameAndType        #241:#468     // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
  #566 = Utf8               java/lang/invoke/LambdaMetafactory
  #567 = Utf8               metafactory
  #568 = Class              #572          // java/lang/invoke/MethodHandles$Lookup
  #569 = Utf8               Lookup
  #570 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #571 = Class              #573          // java/lang/invoke/MethodHandles
  #572 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #573 = Utf8               java/lang/invoke/MethodHandles
{
  public static final org.apache.commons.io.file.DeleteOption[] EMPTY_DELETE_OPTION_ARRAY;
    descriptor: [Lorg/apache/commons/io/file/DeleteOption;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.nio.file.FileVisitOption[] EMPTY_FILE_VISIT_OPTION_ARRAY;
    descriptor: [Ljava/nio/file/FileVisitOption;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.nio.file.LinkOption[] EMPTY_LINK_OPTION_ARRAY;
    descriptor: [Ljava/nio/file/LinkOption;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static final java.nio.file.OpenOption[] EMPTY_OPEN_OPTION_ARRAY;
    descriptor: [Ljava/nio/file/OpenOption;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static org.apache.commons.io.file.AccumulatorPathVisitor accumulate(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=4, locals=3, args_size=3
         0: invokestatic  #2                  // Method org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;
         3: aload_0
         4: aload_2
         5: invokestatic  #3                  // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
         8: iload_1
         9: invokestatic  #4                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
        12: checkcast     #5                  // class org/apache/commons/io/file/AccumulatorPathVisitor
        15: areturn
      LineNumberTable:
        line 156: 0
        line 157: 5
        line 156: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0 directory   Ljava/nio/file/Path;
            0      16     1 maxDepth   I
            0      16     2 fileVisitOptions   [Ljava/nio/file/FileVisitOption;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
         4: invokestatic  #7                  // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
         7: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 directory   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=5, locals=2, args_size=2
         0: new           #8                  // class org/apache/commons/io/file/CleaningPathVisitor
         3: dup
         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: aload_1
         8: iconst_0
         9: anewarray     #10                 // class java/lang/String
        12: invokespecial #11                 // Method org/apache/commons/io/file/CleaningPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
        15: aload_0
        16: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
        19: checkcast     #8                  // class org/apache/commons/io/file/CleaningPathVisitor
        22: invokevirtual #13                 // Method org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
        25: areturn
      LineNumberTable:
        line 181: 0
        line 182: 22
        line 181: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0 directory   Ljava/nio/file/Path;
            0      26     1 options   [Lorg/apache/commons/io/file/DeleteOption;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters copyDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=6, locals=3, args_size=3
         0: new           #14                 // class org/apache/commons/io/file/CopyDirectoryVisitor
         3: dup
         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: aload_0
         8: aload_1
         9: aload_2
        10: invokespecial #15                 // Method org/apache/commons/io/file/CopyDirectoryVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V
        13: aload_0
        14: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
        17: checkcast     #14                 // class org/apache/commons/io/file/CopyDirectoryVisitor
        20: invokevirtual #16                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
        23: areturn
      LineNumberTable:
        line 196: 0
        line 197: 4
        line 196: 14
        line 198: 20
        line 196: 23
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0 sourceDirectory   Ljava/nio/file/Path;
            0      24     1 targetDirectory   Ljava/nio/file/Path;
            0      24     2 copyOptions   [Ljava/nio/file/CopyOption;
    Exceptions:
      throws java.io.IOException

  public static java.nio.file.Path copyFile(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    descriptor: (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=3, locals=9, args_size=3
         0: aload_0
         1: invokevirtual #17                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
         4: astore_3
         5: aconst_null
         6: astore        4
         8: aload_3
         9: aload_1
        10: aload_2
        11: invokestatic  #18                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
        14: pop2
        15: aload_1
        16: astore        5
        18: aload_3
        19: ifnull        50
        22: aload         4
        24: ifnull        46
        27: aload_3
        28: invokevirtual #19                 // Method java/io/InputStream.close:()V
        31: goto          50
        34: astore        6
        36: aload         4
        38: aload         6
        40: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        43: goto          50
        46: aload_3
        47: invokevirtual #19                 // Method java/io/InputStream.close:()V
        50: aload         5
        52: areturn
        53: astore        5
        55: aload         5
        57: astore        4
        59: aload         5
        61: athrow
        62: astore        7
        64: aload_3
        65: ifnull        96
        68: aload         4
        70: ifnull        92
        73: aload_3
        74: invokevirtual #19                 // Method java/io/InputStream.close:()V
        77: goto          96
        80: astore        8
        82: aload         4
        84: aload         8
        86: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        89: goto          96
        92: aload_3
        93: invokevirtual #19                 // Method java/io/InputStream.close:()V
        96: aload         7
        98: athrow
      Exception table:
         from    to  target type
            27    31    34   Class java/lang/Throwable
             8    18    53   Class java/lang/Throwable
             8    18    62   any
            73    77    80   Class java/lang/Throwable
            53    64    62   any
      LineNumberTable:
        line 213: 0
        line 214: 8
        line 215: 15
        line 216: 18
        line 215: 50
        line 213: 53
        line 216: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      94     3 inputStream   Ljava/io/InputStream;
            0      99     0 sourceFile   Ljava/net/URL;
            0      99     1 targetFile   Ljava/nio/file/Path;
            0      99     2 copyOptions   [Ljava/nio/file/CopyOption;
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class java/net/URL, class java/nio/file/Path, class "[Ljava/nio/file/CopyOption;", class java/io/InputStream, class java/lang/Throwable, class java/nio/file/Path ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/net/URL, class java/nio/file/Path, class "[Ljava/nio/file/CopyOption;", class java/io/InputStream, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class java/net/URL, class java/nio/file/Path, class "[Ljava/nio/file/CopyOption;", class java/io/InputStream, class java/lang/Throwable, top, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 3 /* same */
    Exceptions:
      throws java.io.IOException

  public static java.nio.file.Path copyFileToDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_0
         3: invokeinterface #22,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;
         8: invokeinterface #23,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
        13: aload_2
        14: invokestatic  #24                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
        17: areturn
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 sourceFile   Ljava/nio/file/Path;
            0      18     1 targetDirectory   Ljava/nio/file/Path;
            0      18     2 copyOptions   [Ljava/nio/file/CopyOption;
    Exceptions:
      throws java.io.IOException

  public static java.nio.file.Path copyFileToDirectory(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;
    descriptor: (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=3, locals=9, args_size=3
         0: aload_0
         1: invokevirtual #17                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
         4: astore_3
         5: aconst_null
         6: astore        4
         8: aload_3
         9: aload_1
        10: aload_0
        11: invokevirtual #25                 // Method java/net/URL.getFile:()Ljava/lang/String;
        14: invokeinterface #26,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;
        19: aload_2
        20: invokestatic  #18                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J
        23: pop2
        24: aload_1
        25: astore        5
        27: aload_3
        28: ifnull        59
        31: aload         4
        33: ifnull        55
        36: aload_3
        37: invokevirtual #19                 // Method java/io/InputStream.close:()V
        40: goto          59
        43: astore        6
        45: aload         4
        47: aload         6
        49: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        52: goto          59
        55: aload_3
        56: invokevirtual #19                 // Method java/io/InputStream.close:()V
        59: aload         5
        61: areturn
        62: astore        5
        64: aload         5
        66: astore        4
        68: aload         5
        70: athrow
        71: astore        7
        73: aload_3
        74: ifnull        105
        77: aload         4
        79: ifnull        101
        82: aload_3
        83: invokevirtual #19                 // Method java/io/InputStream.close:()V
        86: goto          105
        89: astore        8
        91: aload         4
        93: aload         8
        95: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        98: goto          105
       101: aload_3
       102: invokevirtual #19                 // Method java/io/InputStream.close:()V
       105: aload         7
       107: athrow
      Exception table:
         from    to  target type
            36    40    43   Class java/lang/Throwable
             8    27    62   Class java/lang/Throwable
             8    27    71   any
            82    86    89   Class java/lang/Throwable
            62    73    71   any
      LineNumberTable:
        line 246: 0
        line 247: 8
        line 248: 24
        line 249: 27
        line 248: 59
        line 246: 62
        line 249: 71
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     103     3 inputStream   Ljava/io/InputStream;
            0     108     0 sourceFile   Ljava/net/URL;
            0     108     1 targetDirectory   Ljava/nio/file/Path;
            0     108     2 copyOptions   [Ljava/nio/file/CopyOption;
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class java/net/URL, class java/nio/file/Path, class "[Ljava/nio/file/CopyOption;", class java/io/InputStream, class java/lang/Throwable, class java/nio/file/Path ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 3 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/net/URL, class java/nio/file/Path, class "[Ljava/nio/file/CopyOption;", class java/io/InputStream, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class java/net/URL, class java/nio/file/Path, class "[Ljava/nio/file/CopyOption;", class java/io/InputStream, class java/lang/Throwable, top, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 3 /* same */
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #27                 // class org/apache/commons/io/file/CountingPathVisitor
         3: dup
         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: invokespecial #28                 // Method org/apache/commons/io/file/CountingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;)V
        10: aload_0
        11: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
        14: checkcast     #27                 // class org/apache/commons/io/file/CountingPathVisitor
        17: invokevirtual #29                 // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
        20: areturn
      LineNumberTable:
        line 260: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0 directory   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
         4: invokestatic  #30                 // Method delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
         7: areturn
      LineNumberTable:
        line 280: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  path   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: iconst_1
         2: anewarray     #31                 // class java/nio/file/LinkOption
         5: dup
         6: iconst_0
         7: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        10: aastore
        11: invokestatic  #33                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        14: ifeq          25
        17: aload_0
        18: aload_1
        19: invokestatic  #34                 // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
        22: goto          30
        25: aload_0
        26: aload_1
        27: invokestatic  #35                 // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
        30: areturn
      LineNumberTable:
        line 303: 0
        line 304: 27
        line 303: 30
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  path   Ljava/nio/file/Path;
            0      31     1 options   [Lorg/apache/commons/io/file/DeleteOption;
      StackMapTable: number_of_entries = 2
        frame_type = 25 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class org/apache/commons/io/file/Counters$PathCounters ]
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
         4: invokestatic  #34                 // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
         7: areturn
      LineNumberTable:
        line 315: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 directory   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=5, locals=2, args_size=2
         0: new           #36                 // class org/apache/commons/io/file/DeletingPathVisitor
         3: dup
         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
         7: aload_1
         8: iconst_0
         9: anewarray     #10                 // class java/lang/String
        12: invokespecial #37                 // Method org/apache/commons/io/file/DeletingPathVisitor."<init>":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V
        15: aload_0
        16: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
        19: checkcast     #36                 // class org/apache/commons/io/file/DeletingPathVisitor
        22: invokevirtual #38                 // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
        25: areturn
      LineNumberTable:
        line 328: 0
        line 329: 22
        line 328: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0 directory   Ljava/nio/file/Path;
            0      26     1 options   [Lorg/apache/commons/io/file/DeleteOption;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
         4: invokestatic  #35                 // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
         7: areturn
      LineNumberTable:
        line 341: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  file   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=6, locals=6, args_size=2
         0: aload_0
         1: iconst_1
         2: anewarray     #31                 // class java/nio/file/LinkOption
         5: dup
         6: iconst_0
         7: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        10: aastore
        11: invokestatic  #33                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        14: ifeq          31
        17: new           #39                 // class java/nio/file/NoSuchFileException
        20: dup
        21: aload_0
        22: invokeinterface #40,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;
        27: invokespecial #41                 // Method java/nio/file/NoSuchFileException."<init>":(Ljava/lang/String;)V
        30: athrow
        31: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;
        34: astore_2
        35: aload_0
        36: iconst_1
        37: anewarray     #31                 // class java/nio/file/LinkOption
        40: dup
        41: iconst_0
        42: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        45: aastore
        46: invokestatic  #42                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        49: istore_3
        50: iload_3
        51: ifeq          61
        54: aload_0
        55: invokestatic  #43                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
        58: goto          62
        61: lconst_0
        62: lstore        4
        64: aload_1
        65: invokestatic  #44                 // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z
        68: ifeq          91
        71: iload_3
        72: ifeq          91
        75: aload_0
        76: iconst_0
        77: iconst_1
        78: anewarray     #31                 // class java/nio/file/LinkOption
        81: dup
        82: iconst_0
        83: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;
        86: aastore
        87: invokestatic  #45                 // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
        90: pop
        91: aload_0
        92: invokestatic  #46                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z
        95: ifeq          122
        98: aload_2
        99: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;
       104: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V
       109: aload_2
       110: invokeinterface #49,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;
       115: lload         4
       117: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V
       122: aload_2
       123: areturn
      LineNumberTable:
        line 356: 0
        line 357: 17
        line 359: 31
        line 360: 35
        line 361: 50
        line 362: 64
        line 363: 75
        line 365: 91
        line 366: 98
        line 367: 109
        line 369: 122
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     124     0  file   Ljava/nio/file/Path;
            0     124     1 options   [Lorg/apache/commons/io/file/DeleteOption;
           35      89     2 pathCounts   Lorg/apache/commons/io/file/Counters$PathCounters;
           50      74     3 exists   Z
           64      60     4  size   J
      StackMapTable: number_of_entries = 5
        frame_type = 31 /* same */
        frame_type = 253 /* append */
          offset_delta = 29
          locals = [ class org/apache/commons/io/file/Counters$PathCounters, int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ long ]
        frame_type = 252 /* append */
          offset_delta = 28
          locals = [ long ]
        frame_type = 30 /* same */
    Exceptions:
      throws java.io.IOException

  private static boolean overrideReadOnly(org.apache.commons.io.file.DeleteOption[]);
    descriptor: ([Lorg/apache/commons/io/file/DeleteOption;)Z
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC
    Code:
      stack=2, locals=5, args_size=1
         0: aload_0
         1: ifnonnull     6
         4: iconst_0
         5: ireturn
         6: aload_0
         7: astore_1
         8: aload_1
         9: arraylength
        10: istore_2
        11: iconst_0
        12: istore_3
        13: iload_3
        14: iload_2
        15: if_icmpge     39
        18: aload_1
        19: iload_3
        20: aaload
        21: astore        4
        23: aload         4
        25: getstatic     #51                 // Field org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;
        28: if_acmpne     33
        31: iconst_1
        32: ireturn
        33: iinc          3, 1
        36: goto          13
        39: iconst_0
        40: ireturn
      LineNumberTable:
        line 379: 0
        line 380: 4
        line 382: 6
        line 383: 23
        line 384: 31
        line 382: 33
        line 387: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      10     4 deleteOption   Lorg/apache/commons/io/file/DeleteOption;
            0      41     0 options   [Lorg/apache/commons/io/file/DeleteOption;
      StackMapTable: number_of_entries = 4
        frame_type = 6 /* same */
        frame_type = 254 /* append */
          offset_delta = 6
          locals = [ class "[Lorg/apache/commons/io/file/DeleteOption;", int, int ]
        frame_type = 19 /* same */
        frame_type = 248 /* chop */
          offset_delta = 5

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #52                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
         5: getstatic     #53                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
         8: getstatic     #54                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
        11: invokestatic  #55                 // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
        14: ireturn
      LineNumberTable:
        line 400: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 path1   Ljava/nio/file/Path;
            0      15     1 path2   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=11, args_size=5
         0: aload_0
         1: ifnonnull     10
         4: aload_1
         5: ifnonnull     10
         8: iconst_1
         9: ireturn
        10: aload_0
        11: ifnonnull     18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: aload_1
        20: ifnonnull     27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ixor
        29: ifeq          34
        32: iconst_0
        33: ireturn
        34: aload_0
        35: iconst_0
        36: anewarray     #31                 // class java/nio/file/LinkOption
        39: invokestatic  #42                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        42: ifne          58
        45: aload_1
        46: iconst_0
        47: anewarray     #31                 // class java/nio/file/LinkOption
        50: invokestatic  #42                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        53: ifne          58
        56: iconst_1
        57: ireturn
        58: new           #56                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths
        61: dup
        62: aload_0
        63: aload_1
        64: ldc           #58                 // int 2147483647
        66: aload_2
        67: aload         4
        69: aconst_null
        70: invokespecial #59                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
        73: astore        5
        75: aload         5
        77: getfield      #60                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
        80: ifne          85
        83: iconst_0
        84: ireturn
        85: aload         5
        87: getfield      #61                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;
        90: astore        6
        92: aload         5
        94: getfield      #62                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;
        97: astore        7
        99: aload         6
       101: invokeinterface #63,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       106: astore        8
       108: aload         8
       110: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       115: ifeq          184
       118: aload         8
       120: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       125: checkcast     #66                 // class java/nio/file/Path
       128: astore        9
       130: aload         7
       132: aload         9
       134: invokestatic  #67                 // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I
       137: istore        10
       139: iload         10
       141: iconst_m1
       142: if_icmple     171
       145: aload_0
       146: aload         9
       148: invokeinterface #23,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
       153: aload_1
       154: aload         9
       156: invokeinterface #23,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
       161: aload_2
       162: aload_3
       163: invokestatic  #68                 // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
       166: ifne          181
       169: iconst_0
       170: ireturn
       171: new           #69                 // class java/lang/IllegalStateException
       174: dup
       175: ldc           #70                 // String Unexpected mismatch.
       177: invokespecial #71                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       180: athrow
       181: goto          108
       184: iconst_1
       185: ireturn
      LineNumberTable:
        line 420: 0
        line 421: 8
        line 423: 10
        line 424: 32
        line 426: 34
        line 427: 56
        line 429: 58
        line 432: 75
        line 433: 83
        line 436: 85
        line 437: 92
        line 438: 99
        line 439: 130
        line 440: 139
        line 441: 145
        line 442: 169
        line 445: 171
        line 447: 181
        line 448: 184
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          139      42    10 binarySearch   I
          130      51     9  path   Ljava/nio/file/Path;
            0     186     0 path1   Ljava/nio/file/Path;
            0     186     1 path2   Ljava/nio/file/Path;
            0     186     2 linkOptions   [Ljava/nio/file/LinkOption;
            0     186     3 openOptions   [Ljava/nio/file/OpenOption;
            0     186     4 fileVisitOption   [Ljava/nio/file/FileVisitOption;
           75     111     5 relativeSortedPaths   Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;
           92      94     6 fileList1   Ljava/util/List;
           99      87     7 fileList2   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           92      94     6 fileList1   Ljava/util/List<Ljava/nio/file/Path;>;
           99      87     7 fileList2   Ljava/util/List<Ljava/nio/file/Path;>;
      StackMapTable: number_of_entries = 12
        frame_type = 10 /* same */
        frame_type = 7 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;", class "[Ljava/nio/file/FileVisitOption;" ]
          stack = [ int, int ]
        frame_type = 5 /* same */
        frame_type = 23 /* same */
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ class org/apache/commons/io/file/PathUtils$RelativeSortedPaths ]
        frame_type = 254 /* append */
          offset_delta = 22
          locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]
        frame_type = 253 /* append */
          offset_delta = 62
          locals = [ class java/nio/file/Path, int ]
        frame_type = 249 /* chop */
          offset_delta = 9
        frame_type = 250 /* chop */
          offset_delta = 2
    Exceptions:
      throws java.io.IOException

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=5, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: ldc           #58                 // int 2147483647
         4: getstatic     #52                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
         7: getstatic     #54                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
        10: invokestatic  #72                 // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
        13: ireturn
      LineNumberTable:
        line 461: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0 path1   Ljava/nio/file/Path;
            0      14     1 path2   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=8, locals=5, args_size=5
         0: new           #56                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths
         3: dup
         4: aload_0
         5: aload_1
         6: iload_2
         7: aload_3
         8: aload         4
        10: aconst_null
        11: invokespecial #59                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths."<init>":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V
        14: getfield      #60                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z
        17: ireturn
      LineNumberTable:
        line 479: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 path1   Ljava/nio/file/Path;
            0      18     1 path2   Ljava/nio/file/Path;
            0      18     2 maxDepth   I
            0      18     3 linkOptions   [Ljava/nio/file/LinkOption;
            0      18     4 fileVisitOptions   [Ljava/nio/file/FileVisitOption;
    Exceptions:
      throws java.io.IOException

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: getstatic     #52                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
         5: getstatic     #53                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
         8: invokestatic  #68                 // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
        11: ireturn
      LineNumberTable:
        line 496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 path1   Ljava/nio/file/Path;
            0      12     1 path2   Ljava/nio/file/Path;
    Exceptions:
      throws java.io.IOException

  public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption[]) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=17, args_size=4
         0: aload_0
         1: ifnonnull     10
         4: aload_1
         5: ifnonnull     10
         8: iconst_1
         9: ireturn
        10: aload_0
        11: ifnonnull     18
        14: iconst_1
        15: goto          19
        18: iconst_0
        19: aload_1
        20: ifnonnull     27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: ixor
        29: ifeq          34
        32: iconst_0
        33: ireturn
        34: aload_0
        35: invokeinterface #73,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
        40: astore        4
        42: aload_1
        43: invokeinterface #73,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
        48: astore        5
        50: aload         4
        52: aload_2
        53: invokestatic  #42                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        56: istore        6
        58: iload         6
        60: aload         5
        62: aload_2
        63: invokestatic  #42                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        66: if_icmpeq     71
        69: iconst_0
        70: ireturn
        71: iload         6
        73: ifne          78
        76: iconst_1
        77: ireturn
        78: aload         4
        80: aload_2
        81: invokestatic  #33                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
        84: ifeq          115
        87: new           #74                 // class java/io/IOException
        90: dup
        91: new           #75                 // class java/lang/StringBuilder
        94: dup
        95: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
        98: ldc           #77                 // String Can\'t compare directories, only files:
       100: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       103: aload         4
       105: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       108: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       111: invokespecial #81                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       114: athrow
       115: aload         5
       117: aload_2
       118: invokestatic  #33                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
       121: ifeq          152
       124: new           #74                 // class java/io/IOException
       127: dup
       128: new           #75                 // class java/lang/StringBuilder
       131: dup
       132: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
       135: ldc           #77                 // String Can\'t compare directories, only files:
       137: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       140: aload         5
       142: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       145: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       148: invokespecial #81                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       151: athrow
       152: aload         4
       154: invokestatic  #43                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
       157: aload         5
       159: invokestatic  #43                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
       162: lcmp
       163: ifeq          168
       166: iconst_0
       167: ireturn
       168: aload_0
       169: aload_1
       170: invokeinterface #82,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z
       175: ifeq          180
       178: iconst_1
       179: ireturn
       180: aload         4
       182: aload_3
       183: invokestatic  #83                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
       186: astore        7
       188: aconst_null
       189: astore        8
       191: aload         5
       193: aload_3
       194: invokestatic  #83                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;
       197: astore        9
       199: aconst_null
       200: astore        10
       202: aload         7
       204: aload         9
       206: invokestatic  #84                 // Method org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z
       209: istore        11
       211: aload         9
       213: ifnull        246
       216: aload         10
       218: ifnull        241
       221: aload         9
       223: invokevirtual #19                 // Method java/io/InputStream.close:()V
       226: goto          246
       229: astore        12
       231: aload         10
       233: aload         12
       235: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       238: goto          246
       241: aload         9
       243: invokevirtual #19                 // Method java/io/InputStream.close:()V
       246: aload         7
       248: ifnull        281
       251: aload         8
       253: ifnull        276
       256: aload         7
       258: invokevirtual #19                 // Method java/io/InputStream.close:()V
       261: goto          281
       264: astore        12
       266: aload         8
       268: aload         12
       270: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       273: goto          281
       276: aload         7
       278: invokevirtual #19                 // Method java/io/InputStream.close:()V
       281: iload         11
       283: ireturn
       284: astore        11
       286: aload         11
       288: astore        10
       290: aload         11
       292: athrow
       293: astore        13
       295: aload         9
       297: ifnull        330
       300: aload         10
       302: ifnull        325
       305: aload         9
       307: invokevirtual #19                 // Method java/io/InputStream.close:()V
       310: goto          330
       313: astore        14
       315: aload         10
       317: aload         14
       319: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       322: goto          330
       325: aload         9
       327: invokevirtual #19                 // Method java/io/InputStream.close:()V
       330: aload         13
       332: athrow
       333: astore        9
       335: aload         9
       337: astore        8
       339: aload         9
       341: athrow
       342: astore        15
       344: aload         7
       346: ifnull        379
       349: aload         8
       351: ifnull        374
       354: aload         7
       356: invokevirtual #19                 // Method java/io/InputStream.close:()V
       359: goto          379
       362: astore        16
       364: aload         8
       366: aload         16
       368: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       371: goto          379
       374: aload         7
       376: invokevirtual #19                 // Method java/io/InputStream.close:()V
       379: aload         15
       381: athrow
      Exception table:
         from    to  target type
           221   226   229   Class java/lang/Throwable
           256   261   264   Class java/lang/Throwable
           202   211   284   Class java/lang/Throwable
           202   211   293   any
           305   310   313   Class java/lang/Throwable
           284   295   293   any
           191   246   333   Class java/lang/Throwable
           284   333   333   Class java/lang/Throwable
           191   246   342   any
           354   359   362   Class java/lang/Throwable
           284   344   342   any
      LineNumberTable:
        line 516: 0
        line 517: 8
        line 519: 10
        line 520: 32
        line 522: 34
        line 523: 42
        line 524: 50
        line 525: 58
        line 526: 69
        line 528: 71
        line 531: 76
        line 533: 78
        line 535: 87
        line 537: 115
        line 539: 124
        line 541: 152
        line 543: 166
        line 545: 168
        line 547: 178
        line 549: 180
        line 550: 191
        line 549: 199
        line 551: 202
        line 552: 211
        line 551: 281
        line 549: 284
        line 552: 293
        line 549: 333
        line 552: 342
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          199     134     9 inputStream2   Ljava/io/InputStream;
          188     194     7 inputStream1   Ljava/io/InputStream;
            0     382     0 path1   Ljava/nio/file/Path;
            0     382     1 path2   Ljava/nio/file/Path;
            0     382     2 linkOptions   [Ljava/nio/file/LinkOption;
            0     382     3 openOptions   [Ljava/nio/file/OpenOption;
           42     340     4 nPath1   Ljava/nio/file/Path;
           50     332     5 nPath2   Ljava/nio/file/Path;
           58     324     6 path1Exists   Z
      StackMapTable: number_of_entries = 28
        frame_type = 10 /* same */
        frame_type = 7 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;" ]
          stack = [ int, int ]
        frame_type = 5 /* same */
        frame_type = 254 /* append */
          offset_delta = 36
          locals = [ class java/nio/file/Path, class java/nio/file/Path, int ]
        frame_type = 6 /* same */
        frame_type = 36 /* same */
        frame_type = 36 /* same */
        frame_type = 15 /* same */
        frame_type = 11 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 48
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;", class java/nio/file/Path, class java/nio/file/Path, int, class java/io/InputStream, class java/lang/Throwable, class java/io/InputStream, class java/lang/Throwable, int ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 4 /* same */
        frame_type = 81 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 4 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;", class java/nio/file/Path, class java/nio/file/Path, int, class java/io/InputStream, class java/lang/Throwable, class java/io/InputStream, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;", class java/nio/file/Path, class java/nio/file/Path, int, class java/io/InputStream, class java/lang/Throwable, class java/io/InputStream, class java/lang/Throwable, top, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 4 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;", class java/nio/file/Path, class java/nio/file/Path, int, class java/io/InputStream, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class java/nio/file/Path, class java/nio/file/Path, class "[Ljava/nio/file/LinkOption;", class "[Ljava/nio/file/OpenOption;", class java/nio/file/Path, class java/nio/file/Path, int, class java/io/InputStream, class java/lang/Throwable, top, top, top, top, top, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 11 /* same */
        frame_type = 4 /* same */
    Exceptions:
      throws java.io.IOException

  public static java.util.List<java.nio.file.attribute.AclEntry> getAclEntryList(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Ljava/util/List;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: ldc           #85                 // class java/nio/file/attribute/AclFileAttributeView
         3: iconst_0
         4: anewarray     #31                 // class java/nio/file/LinkOption
         7: invokestatic  #86                 // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
        10: checkcast     #85                 // class java/nio/file/attribute/AclFileAttributeView
        13: astore_1
        14: aload_1
        15: ifnonnull     22
        18: aconst_null
        19: goto          28
        22: aload_1
        23: invokeinterface #87,  1           // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;
        28: areturn
      LineNumberTable:
        line 564: 0
        line 566: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      29     0 sourcePath   Ljava/nio/file/Path;
           14      15     1 fileAttributeView   Ljava/nio/file/attribute/AclFileAttributeView;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/nio/file/attribute/AclFileAttributeView ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class java/util/List ]
    Exceptions:
      throws java.io.IOException
    Signature: #232                         // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;

  public static boolean isEmpty(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: iconst_0
         2: anewarray     #31                 // class java/nio/file/LinkOption
         5: invokestatic  #33                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z
         8: ifeq          18
        11: aload_0
        12: invokestatic  #88                 // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z
        15: goto          22
        18: aload_0
        19: invokestatic  #89                 // Method isEmptyFile:(Ljava/nio/file/Path;)Z
        22: ireturn
      LineNumberTable:
        line 577: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  path   Ljava/nio/file/Path;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  public static boolean isEmptyDirectory(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=7, args_size=1
         0: aload_0
         1: invokestatic  #90                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;
         4: astore_1
         5: aconst_null
         6: astore_2
         7: aload_1
         8: invokeinterface #91,  1           // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;
        13: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
        18: ifeq          59
        21: iconst_0
        22: istore_3
        23: aload_1
        24: ifnull        57
        27: aload_2
        28: ifnull        51
        31: aload_1
        32: invokeinterface #92,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
        37: goto          57
        40: astore        4
        42: aload_2
        43: aload         4
        45: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        48: goto          57
        51: aload_1
        52: invokeinterface #92,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
        57: iload_3
        58: ireturn
        59: aload_1
        60: ifnull        138
        63: aload_2
        64: ifnull        85
        67: aload_1
        68: invokeinterface #92,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
        73: goto          138
        76: astore_3
        77: aload_2
        78: aload_3
        79: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
        82: goto          138
        85: aload_1
        86: invokeinterface #92,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
        91: goto          138
        94: astore_3
        95: aload_3
        96: astore_2
        97: aload_3
        98: athrow
        99: astore        5
       101: aload_1
       102: ifnull        135
       105: aload_2
       106: ifnull        129
       109: aload_1
       110: invokeinterface #92,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
       115: goto          135
       118: astore        6
       120: aload_2
       121: aload         6
       123: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
       126: goto          135
       129: aload_1
       130: invokeinterface #92,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V
       135: aload         5
       137: athrow
       138: iconst_1
       139: ireturn
      Exception table:
         from    to  target type
            31    37    40   Class java/lang/Throwable
            67    73    76   Class java/lang/Throwable
             7    23    94   Class java/lang/Throwable
             7    23    99   any
           109   115   118   Class java/lang/Throwable
            94   101    99   any
      LineNumberTable:
        line 588: 0
        line 589: 7
        line 590: 21
        line 592: 23
        line 590: 57
        line 592: 59
        line 588: 94
        line 592: 99
        line 593: 138
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5     133     1 directoryStream   Ljava/nio/file/DirectoryStream;
            0     140     0 directory   Ljava/nio/file/Path;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            5     133     1 directoryStream   Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class java/nio/file/Path, class java/nio/file/DirectoryStream, class java/lang/Throwable, int ]
          stack = [ class java/lang/Throwable ]
        frame_type = 10 /* same */
        frame_type = 5 /* same */
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 8 /* same */
        frame_type = 72 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class java/nio/file/Path, class java/nio/file/DirectoryStream, class java/lang/Throwable, top, top, class java/lang/Throwable ]
          stack = [ class java/lang/Throwable ]
        frame_type = 10 /* same */
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/nio/file/Path ]
          stack = []
    Exceptions:
      throws java.io.IOException

  public static boolean isEmptyFile(java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;)Z
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J
         4: lconst_0
         5: lcmp
         6: ifgt          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: ireturn
      LineNumberTable:
        line 604: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  file   Ljava/nio/file/Path;
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    Exceptions:
      throws java.io.IOException

  static java.util.List<java.nio.file.Path> relativize(java.util.Collection<java.nio.file.Path>, java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);
    descriptor: (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=3, locals=5, args_size=4
         0: aload_0
         1: invokeinterface #93,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
         6: aload_1
         7: dup
         8: invokevirtual #94                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
        11: pop
        12: invokedynamic #95,  0             // InvokeDynamic #0:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;
        17: invokeinterface #96,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
        22: astore        4
        24: iload_2
        25: ifeq          52
        28: aload_3
        29: ifnonnull     42
        32: aload         4
        34: invokeinterface #97,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
        39: goto          50
        42: aload         4
        44: aload_3
        45: invokeinterface #98,  2           // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;
        50: astore        4
        52: aload         4
        54: invokestatic  #99                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
        57: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
        62: checkcast     #101                // class java/util/List
        65: areturn
      LineNumberTable:
        line 618: 0
        line 619: 24
        line 620: 28
        line 622: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0 collection   Ljava/util/Collection;
            0      66     1 parent   Ljava/nio/file/Path;
            0      66     2  sort   Z
            0      66     3 comparator   Ljava/util/Comparator;
           24      42     4 stream   Ljava/util/stream/Stream;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      66     0 collection   Ljava/util/Collection<Ljava/nio/file/Path;>;
            0      66     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;
           24      42     4 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 42
          locals = [ class java/util/stream/Stream ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/util/stream/Stream ]
        frame_type = 1 /* same */
    Signature: #255                         // (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;

  public static java.nio.file.Path setReadOnly(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=4, locals=7, args_size=3
         0: aload_0
         1: ldc           #102                // class java/nio/file/attribute/DosFileAttributeView
         3: aload_2
         4: invokestatic  #86                 // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
         7: checkcast     #102                // class java/nio/file/attribute/DosFileAttributeView
        10: astore_3
        11: aload_3
        12: ifnull        24
        15: aload_3
        16: iload_1
        17: invokeinterface #103,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V
        22: aload_0
        23: areturn
        24: aload_0
        25: ldc           #104                // class java/nio/file/attribute/PosixFileAttributeView
        27: aload_2
        28: invokestatic  #86                 // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;
        31: checkcast     #104                // class java/nio/file/attribute/PosixFileAttributeView
        34: astore        4
        36: aload         4
        38: ifnull        99
        41: aload         4
        43: invokeinterface #105,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;
        48: astore        5
        50: aload         5
        52: invokeinterface #106,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;
        57: astore        6
        59: aload         6
        61: getstatic     #107                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
        64: invokeinterface #108,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
        69: pop
        70: aload         6
        72: getstatic     #109                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
        75: invokeinterface #108,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
        80: pop
        81: aload         6
        83: getstatic     #110                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;
        86: invokeinterface #108,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
        91: pop
        92: aload_0
        93: aload         6
        95: invokestatic  #111                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;
        98: areturn
        99: new           #74                 // class java/io/IOException
       102: dup
       103: new           #75                 // class java/lang/StringBuilder
       106: dup
       107: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
       110: ldc           #112                // String No DosFileAttributeView or PosixFileAttributeView for
       112: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       115: aload_0
       116: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
       119: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       122: invokespecial #81                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
       125: athrow
      LineNumberTable:
        line 640: 0
        line 642: 11
        line 643: 15
        line 644: 22
        line 646: 24
        line 648: 36
        line 652: 41
        line 653: 50
        line 654: 59
        line 655: 70
        line 656: 81
        line 657: 92
        line 659: 99
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           50      49     5 readAttributes   Ljava/nio/file/attribute/PosixFileAttributes;
           59      40     6 permissions   Ljava/util/Set;
            0     126     0  path   Ljava/nio/file/Path;
            0     126     1 readOnly   Z
            0     126     2 options   [Ljava/nio/file/LinkOption;
           11     115     3 fileAttributeView   Ljava/nio/file/attribute/DosFileAttributeView;
           36      90     4 posixFileAttributeView   Ljava/nio/file/attribute/PosixFileAttributeView;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           59      40     6 permissions   Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class java/nio/file/attribute/DosFileAttributeView ]
        frame_type = 252 /* append */
          offset_delta = 74
          locals = [ class java/nio/file/attribute/PosixFileAttributeView ]
    Exceptions:
      throws java.io.IOException

  static java.util.Set<java.nio.file.FileVisitOption> toFileVisitOptionSet(java.nio.file.FileVisitOption...);
    descriptor: ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;
    flags: (0x0088) ACC_STATIC, ACC_VARARGS
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ifnonnull     12
         4: ldc           #113                // class java/nio/file/FileVisitOption
         6: invokestatic  #114                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
         9: goto          27
        12: aload_0
        13: invokestatic  #115                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
        16: invokestatic  #116                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
        19: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
        24: checkcast     #117                // class java/util/Set
        27: areturn
      LineNumberTable:
        line 669: 0
        line 670: 13
        line 669: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0 fileVisitOptions   [Ljava/nio/file/FileVisitOption;
      StackMapTable: number_of_entries = 2
        frame_type = 12 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/util/Set ]
    Signature: #272                         // ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path) throws java.io.IOException;
    descriptor: (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokestatic  #118                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;
         5: pop
         6: aload_0
         7: areturn
      LineNumberTable:
        line 687: 0
        line 688: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 visitor   Ljava/nio/file/FileVisitor;
            0       8     1 directory   Ljava/nio/file/Path;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       8     0 visitor   TT;
    Exceptions:
      throws java.io.IOException
    Signature: #278                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path, java.util.Set<java.nio.file.FileVisitOption>, int) throws java.io.IOException;
    descriptor: (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_1
         1: aload_2
         2: iload_3
         3: aload_0
         4: invokestatic  #119                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;
         7: pop
         8: aload_0
         9: areturn
      LineNumberTable:
        line 707: 0
        line 708: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 visitor   Ljava/nio/file/FileVisitor;
            0      10     1 start   Ljava/nio/file/Path;
            0      10     2 options   Ljava/util/Set;
            0      10     3 maxDepth   I
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      10     0 visitor   TT;
            0      10     2 options   Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;
    Exceptions:
      throws java.io.IOException
    Signature: #282                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.lang.String, java.lang.String...) throws java.io.IOException;
    descriptor: (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #120                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
         6: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
         9: areturn
      LineNumberTable:
        line 726: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 visitor   Ljava/nio/file/FileVisitor;
            0      10     1 first   Ljava/lang/String;
            0      10     2  more   [Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      10     0 visitor   TT;
    Exceptions:
      throws java.io.IOException
    Signature: #288                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;

  public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.net.URI) throws java.io.IOException;
    descriptor: (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #121                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;
         5: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;
         8: areturn
      LineNumberTable:
        line 743: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 visitor   Ljava/nio/file/FileVisitor;
            0       9     1   uri   Ljava/net/URI;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0       9     0 visitor   TT;
    Exceptions:
      throws java.io.IOException
    Signature: #292                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;

  private org.apache.commons.io.file.PathUtils();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #122                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 749: 0
        line 751: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/file/PathUtils;

  static org.apache.commons.io.file.AccumulatorPathVisitor access$000(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;
    descriptor: (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: iload_1
         2: aload_2
         3: invokestatic  #1                  // Method accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;
         6: areturn
      LineNumberTable:
        line 58: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0    x0   Ljava/nio/file/Path;
            0       7     1    x1   I
            0       7     2    x2   [Ljava/nio/file/FileVisitOption;
    Exceptions:
      throws java.io.IOException

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: anewarray     #123                // class org/apache/commons/io/file/DeleteOption
         4: putstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;
         7: iconst_0
         8: anewarray     #113                // class java/nio/file/FileVisitOption
        11: putstatic     #54                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;
        14: iconst_0
        15: anewarray     #31                 // class java/nio/file/LinkOption
        18: putstatic     #52                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;
        21: iconst_0
        22: anewarray     #124                // class java/nio/file/OpenOption
        25: putstatic     #53                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;
        28: return
      LineNumberTable:
        line 128: 0
        line 133: 7
        line 138: 14
        line 143: 21
}
SourceFile: "PathUtils.java"
InnerClasses:
  static #127;                            // class org/apache/commons/io/file/PathUtils$1
  private static #129= #56 of #125;       // RelativeSortedPaths=class org/apache/commons/io/file/PathUtils$RelativeSortedPaths of class org/apache/commons/io/file/PathUtils
  public static #151= #150 of #312;       // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters
  public static #482= #351 of #312;       // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters
  public static final #569= #568 of #571; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #400 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #401 (Ljava/lang/Object;)Ljava/lang/Object;
      #402 REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;
      #403 (Ljava/nio/file/Path;)Ljava/nio/file/Path;
