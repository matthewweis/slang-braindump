Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/scala/concurrent/ExecutionContext$$anon$1.class
  Last modified May 29, 2022; size 3022 bytes
  SHA-256 checksum 16116c7a604fa129ffa968d518f506535c646b8ae79880c6bcfead27972c7d54
  Compiled from "ExecutionContext.scala"
public final class scala.concurrent.ExecutionContext$$anon$1 implements scala.concurrent.ExecutionContextExecutor,scala.concurrent.BatchingExecutor
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/concurrent/ExecutionContext$$anon$1
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 1, methods: 9, attributes: 5
Constant pool:
    #1 = Utf8               scala/concurrent/ExecutionContext$$anon$1
    #2 = Class              #1            // scala/concurrent/ExecutionContext$$anon$1
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/concurrent/ExecutionContextExecutor
    #6 = Class              #5            // scala/concurrent/ExecutionContextExecutor
    #7 = Utf8               scala/concurrent/BatchingExecutor
    #8 = Class              #7            // scala/concurrent/BatchingExecutor
    #9 = Utf8               ExecutionContext.scala
   #10 = Utf8               scala/concurrent/ExecutionContext$
   #11 = Class              #10           // scala/concurrent/ExecutionContext$
   #12 = Utf8               scala/concurrent/BatchingExecutor$AsyncBatch
   #13 = Class              #12           // scala/concurrent/BatchingExecutor$AsyncBatch
   #14 = Utf8               AsyncBatch
   #15 = Utf8               scala/concurrent/impl/Promise$Transformation
   #16 = Class              #15           // scala/concurrent/impl/Promise$Transformation
   #17 = Utf8               scala/concurrent/impl/Promise
   #18 = Class              #17           // scala/concurrent/impl/Promise
   #19 = Utf8               Transformation
   #20 = Utf8               scala$concurrent$BatchingExecutor$$_tasksLocal
   #21 = Utf8               Ljava/lang/ThreadLocal;
   #22 = Utf8               Ljava/lang/ThreadLocal<Ljava/lang/Object;>;
   #23 = Utf8               submitAsyncBatched
   #24 = Utf8               (Ljava/lang/Runnable;)V
   #25 = Utf8               runnable
   #26 = Utf8               submitAsyncBatched$
   #27 = Utf8               (Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #28 = NameAndType        #26:#27       // submitAsyncBatched$:(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #29 = InterfaceMethodref #8.#28        // scala/concurrent/BatchingExecutor.submitAsyncBatched$:(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #30 = Utf8               this
   #31 = Utf8               Lscala/concurrent/ExecutionContext$$anon$1;
   #32 = Utf8               Ljava/lang/Runnable;
   #33 = Utf8               submitSyncBatched
   #34 = Utf8               submitSyncBatched$
   #35 = NameAndType        #34:#27       // submitSyncBatched$:(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #36 = InterfaceMethodref #8.#35        // scala/concurrent/BatchingExecutor.submitSyncBatched$:(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #37 = Utf8               prepare
   #38 = Utf8               ()Lscala/concurrent/ExecutionContext;
   #39 = Utf8               scala/concurrent/ExecutionContext
   #40 = Class              #39           // scala/concurrent/ExecutionContext
   #41 = Utf8               prepare$
   #42 = Utf8               (Lscala/concurrent/ExecutionContext;)Lscala/concurrent/ExecutionContext;
   #43 = NameAndType        #41:#42       // prepare$:(Lscala/concurrent/ExecutionContext;)Lscala/concurrent/ExecutionContext;
   #44 = InterfaceMethodref #40.#43       // scala/concurrent/ExecutionContext.prepare$:(Lscala/concurrent/ExecutionContext;)Lscala/concurrent/ExecutionContext;
   #45 = Utf8               ()Ljava/lang/ThreadLocal;
   #46 = Utf8               ()Ljava/lang/ThreadLocal<Ljava/lang/Object;>;
   #47 = NameAndType        #20:#21       // scala$concurrent$BatchingExecutor$$_tasksLocal:Ljava/lang/ThreadLocal;
   #48 = Fieldref           #2.#47        // scala/concurrent/ExecutionContext$$anon$1.scala$concurrent$BatchingExecutor$$_tasksLocal:Ljava/lang/ThreadLocal;
   #49 = Utf8               scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq
   #50 = Utf8               (Ljava/lang/ThreadLocal;)V
   #51 = Utf8               (Ljava/lang/ThreadLocal<Ljava/lang/Object;>;)V
   #52 = Utf8               x$1
   #53 = Utf8               submitForExecution
   #54 = Utf8               MODULE$
   #55 = Utf8               Lscala/concurrent/ExecutionContext$;
   #56 = NameAndType        #54:#55       // MODULE$:Lscala/concurrent/ExecutionContext$;
   #57 = Fieldref           #11.#56       // scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
   #58 = Utf8               global
   #59 = Utf8               ()Lscala/concurrent/ExecutionContextExecutor;
   #60 = NameAndType        #58:#59       // global:()Lscala/concurrent/ExecutionContextExecutor;
   #61 = Methodref          #11.#60       // scala/concurrent/ExecutionContext$.global:()Lscala/concurrent/ExecutionContextExecutor;
   #62 = Utf8               execute
   #63 = NameAndType        #62:#24       // execute:(Ljava/lang/Runnable;)V
   #64 = InterfaceMethodref #6.#63        // scala/concurrent/ExecutionContextExecutor.execute:(Ljava/lang/Runnable;)V
   #65 = Utf8               benefitsFromBatching
   #66 = Utf8               ()Z
   #67 = NameAndType        #65:#66       // benefitsFromBatching:()Z
   #68 = Methodref          #16.#67       // scala/concurrent/impl/Promise$Transformation.benefitsFromBatching:()Z
   #69 = Utf8               scala/concurrent/Batchable
   #70 = Class              #69           // scala/concurrent/Batchable
   #71 = NameAndType        #20:#45       // scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
   #72 = InterfaceMethodref #8.#71        // scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
   #73 = Utf8               java/lang/ThreadLocal
   #74 = Class              #73           // java/lang/ThreadLocal
   #75 = Utf8               get
   #76 = Utf8               ()Ljava/lang/Object;
   #77 = NameAndType        #75:#76       // get:()Ljava/lang/Object;
   #78 = Methodref          #74.#77       // java/lang/ThreadLocal.get:()Ljava/lang/Object;
   #79 = Utf8               push
   #80 = NameAndType        #79:#24       // push:(Ljava/lang/Runnable;)V
   #81 = Methodref          #13.#80       // scala/concurrent/BatchingExecutor$AsyncBatch.push:(Ljava/lang/Runnable;)V
   #82 = Utf8               <init>
   #83 = NameAndType        #82:#27       // "<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #84 = Methodref          #13.#83       // scala/concurrent/BatchingExecutor$AsyncBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
   #85 = NameAndType        #53:#24       // submitForExecution:(Ljava/lang/Runnable;)V
   #86 = InterfaceMethodref #8.#85        // scala/concurrent/BatchingExecutor.submitForExecution:(Ljava/lang/Runnable;)V
   #87 = Utf8               submitAsyncBatched_b
   #88 = Utf8               Ljava/lang/Object;
   #89 = Utf8               reportFailure
   #90 = Utf8               (Ljava/lang/Throwable;)V
   #91 = Utf8               t
   #92 = NameAndType        #89:#90       // reportFailure:(Ljava/lang/Throwable;)V
   #93 = InterfaceMethodref #6.#92        // scala/concurrent/ExecutionContextExecutor.reportFailure:(Ljava/lang/Throwable;)V
   #94 = Utf8               Ljava/lang/Throwable;
   #95 = Utf8               ()V
   #96 = NameAndType        #82:#95       // "<init>":()V
   #97 = Methodref          #4.#96        // java/lang/Object."<init>":()V
   #98 = Utf8               $init$
   #99 = Utf8               (Lscala/concurrent/BatchingExecutor;)V
  #100 = NameAndType        #98:#99       // $init$:(Lscala/concurrent/BatchingExecutor;)V
  #101 = InterfaceMethodref #8.#100       // scala/concurrent/BatchingExecutor.$init$:(Lscala/concurrent/BatchingExecutor;)V
  #102 = Utf8               scala/runtime/Statics
  #103 = Class              #102          // scala/runtime/Statics
  #104 = Utf8               releaseFence
  #105 = NameAndType        #104:#95      // releaseFence:()V
  #106 = Methodref          #103.#105     // scala/runtime/Statics.releaseFence:()V
  #107 = Utf8               Signature
  #108 = Utf8               Code
  #109 = Utf8               LineNumberTable
  #110 = Utf8               LocalVariableTable
  #111 = Utf8               MethodParameters
  #112 = Utf8               Deprecated
  #113 = Utf8               StackMapTable
  #114 = Utf8               InnerClasses
  #115 = Utf8               EnclosingMethod
  #116 = Utf8               SourceFile
  #117 = Utf8               ScalaInlineInfo
  #118 = Utf8               Scala
{
  private java.lang.ThreadLocal<java.lang.Object> scala$concurrent$BatchingExecutor$$_tasksLocal;
    descriptor: Ljava/lang/ThreadLocal;
    flags: (0x0002) ACC_PRIVATE
    Signature: #22                          // Ljava/lang/ThreadLocal<Ljava/lang/Object;>;

  public final void submitAsyncBatched(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #29                 // InterfaceMethod scala/concurrent/BatchingExecutor.submitAsyncBatched$:(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
         5: return
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
            0       6     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      runnable                       final

  public final void submitSyncBatched(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #36                 // InterfaceMethod scala/concurrent/BatchingExecutor.submitSyncBatched$:(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
         5: return
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
            0       6     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      runnable                       final

  public scala.concurrent.ExecutionContext prepare();
    descriptor: ()Lscala/concurrent/ExecutionContext;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #44                 // InterfaceMethod scala/concurrent/ExecutionContext.prepare$:(Lscala/concurrent/ExecutionContext;)Lscala/concurrent/ExecutionContext;
         4: areturn
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
    Deprecated: true

  public final java.lang.ThreadLocal<java.lang.Object> scala$concurrent$BatchingExecutor$$_tasksLocal();
    descriptor: ()Ljava/lang/ThreadLocal;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #48                 // Field scala$concurrent$BatchingExecutor$$_tasksLocal:Ljava/lang/ThreadLocal;
         4: areturn
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
    Signature: #46                          // ()Ljava/lang/ThreadLocal<Ljava/lang/Object;>;

  public final void scala$concurrent$BatchingExecutor$_setter_$scala$concurrent$BatchingExecutor$$_tasksLocal_$eq(java.lang.ThreadLocal<java.lang.Object>);
    descriptor: (Ljava/lang/ThreadLocal;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #48                 // Field scala$concurrent$BatchingExecutor$$_tasksLocal:Ljava/lang/ThreadLocal;
         5: return
      LineNumberTable:
        line 230: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
            0       6     1   x$1   Ljava/lang/ThreadLocal;
    Signature: #51                          // (Ljava/lang/ThreadLocal<Ljava/lang/Object;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public final void submitForExecution(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #57                 // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
         3: invokevirtual #61                 // Method scala/concurrent/ExecutionContext$.global:()Lscala/concurrent/ExecutionContextExecutor;
         6: aload_1
         7: invokeinterface #64,  2           // InterfaceMethod scala/concurrent/ExecutionContextExecutor.execute:(Ljava/lang/Runnable;)V
        12: return
      LineNumberTable:
        line 231: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
            0      13     1 runnable   Ljava/lang/Runnable;
    MethodParameters:
      Name                           Flags
      runnable                       final

  public final void execute(java.lang.Runnable);
    descriptor: (Ljava/lang/Runnable;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=5, locals=3, args_size=2
         0: aload_1
         1: instanceof    #16                 // class scala/concurrent/impl/Promise$Transformation
         4: ifeq          17
         7: aload_1
         8: checkcast     #16                 // class scala/concurrent/impl/Promise$Transformation
        11: invokevirtual #68                 // Method scala/concurrent/impl/Promise$Transformation.benefitsFromBatching:()Z
        14: ifeq          66
        17: aload_1
        18: instanceof    #70                 // class scala/concurrent/Batchable
        21: ifeq          66
        24: aload_0
        25: invokeinterface #72,  1           // InterfaceMethod scala/concurrent/BatchingExecutor.scala$concurrent$BatchingExecutor$$_tasksLocal:()Ljava/lang/ThreadLocal;
        30: invokevirtual #78                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
        33: astore_2
        34: aload_2
        35: instanceof    #13                 // class scala/concurrent/BatchingExecutor$AsyncBatch
        38: ifeq          50
        41: aload_2
        42: checkcast     #13                 // class scala/concurrent/BatchingExecutor$AsyncBatch
        45: aload_1
        46: invokevirtual #81                 // Method scala/concurrent/BatchingExecutor$AsyncBatch.push:(Ljava/lang/Runnable;)V
        49: return
        50: aload_0
        51: new           #13                 // class scala/concurrent/BatchingExecutor$AsyncBatch
        54: dup
        55: aload_0
        56: aload_1
        57: invokespecial #84                 // Method scala/concurrent/BatchingExecutor$AsyncBatch."<init>":(Lscala/concurrent/BatchingExecutor;Ljava/lang/Runnable;)V
        60: invokeinterface #86,  2           // InterfaceMethod scala/concurrent/BatchingExecutor.submitForExecution:(Ljava/lang/Runnable;)V
        65: return
        66: getstatic     #57                 // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
        69: invokevirtual #61                 // Method scala/concurrent/ExecutionContext$.global:()Lscala/concurrent/ExecutionContextExecutor;
        72: aload_1
        73: invokeinterface #64,  2           // InterfaceMethod scala/concurrent/ExecutionContextExecutor.execute:(Ljava/lang/Runnable;)V
        78: return
      StackMapTable: number_of_entries = 3
        frame_type = 17 /* same */
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 15
      LineNumberTable:
        line 234: 0
        line 230: 24
        line 231: 66
        line 237: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
            0      79     1 runnable   Ljava/lang/Runnable;
           34      31     2 submitAsyncBatched_b   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      runnable                       final

  public final void reportFailure(java.lang.Throwable);
    descriptor: (Ljava/lang/Throwable;)V
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: getstatic     #57                 // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
         3: invokevirtual #61                 // Method scala/concurrent/ExecutionContext$.global:()Lscala/concurrent/ExecutionContextExecutor;
         6: aload_1
         7: invokeinterface #93,  2           // InterfaceMethod scala/concurrent/ExecutionContextExecutor.reportFailure:(Ljava/lang/Throwable;)V
        12: return
      LineNumberTable:
        line 239: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
            0      13     1     t   Ljava/lang/Throwable;
    MethodParameters:
      Name                           Flags
      t                              final

  public scala.concurrent.ExecutionContext$$anon$1();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #97                 // Method java/lang/Object."<init>":()V
         4: aload_0
         5: invokestatic  #101                // InterfaceMethod scala/concurrent/BatchingExecutor.$init$:(Lscala/concurrent/BatchingExecutor;)V
         8: invokestatic  #106                // Method scala/runtime/Statics.releaseFence:()V
        11: return
      LineNumberTable:
        line 230: 0
        line 230: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/concurrent/ExecutionContext$$anon$1;
}
InnerClasses:
  private final #14= #13 of #8;           // AsyncBatch=class scala/concurrent/BatchingExecutor$AsyncBatch of class scala/concurrent/BatchingExecutor
  public final #2;                        // class scala/concurrent/ExecutionContext$$anon$1
  public static final #19= #16 of #18;    // Transformation=class scala/concurrent/impl/Promise$Transformation of class scala/concurrent/impl/Promise
EnclosingMethod: #11.#0                 // scala.concurrent.ExecutionContext$
SourceFile: "ExecutionContext.scala"
  ScalaInlineInfo: length = 0x31 (unknown attribute)
   01 01 00 09 00 52 00 5F 01 00 3E 00 18 01 00 25
   00 26 01 00 59 00 5A 01 00 14 00 2D 01 00 31 00
   32 01 00 17 00 18 01 00 35 00 18 01 00 21 00 18
   01
  Scala: length = 0x0 (unknown attribute)

