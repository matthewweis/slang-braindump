Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/coursier/cache/FileCache.class
  Last modified May 29, 2022; size 62651 bytes
  SHA-256 checksum 96cfd1fd99cf84987a3f7a931d58e644f71f0ce66cddefbf5a162a4c338f6b4d
  Compiled from "FileCache.scala"
public final class coursier.cache.FileCache<F extends java.lang.Object> extends coursier.cache.Cache<F> implements scala.Product, java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/cache/FileCache
  super_class: #5                         // coursier/cache/Cache
  interfaces: 2, fields: 23, methods: 133, attributes: 7
Constant pool:
     #1 = Utf8               coursier/cache/FileCache
     #2 = Class              #1           // coursier/cache/FileCache
     #3 = Utf8               <F:Ljava/lang/Object;>Lcoursier/cache/Cache<TF;>;Lscala/Product;Ljava/io/Serializable;
     #4 = Utf8               coursier/cache/Cache
     #5 = Class              #4           // coursier/cache/Cache
     #6 = Utf8               scala/Product
     #7 = Class              #6           // scala/Product
     #8 = Utf8               java/io/Serializable
     #9 = Class              #8           // java/io/Serializable
    #10 = Utf8               FileCache.scala
    #11 = Utf8               Lscala/reflect/ScalaSignature;
    #12 = Utf8               bytes
    #13 = Utf8               \u0006\u0005\u0015\re\u0001\u00029r\u0005YD!\"!\u000f\u0001\u0005\u000b\u0007I\u0011AA\u001e\u0011)\ti\u0005\u0001B\u0001B\u0003%\u0011Q\b\u0005\u000b\u0003\u001f\u0002!Q1A\u0005\u0002\u0005E\u0003BCA0\u0001\t\u0005\t\u0015!\u0003\u0002T!Q\u0011\u0011\r\u0001\u0003\u0006\u0004%\t!a\u0019\t\u0015\u0005u\u0004A!A!\u0002\u0013\t)\u0007\u0003\u0006\u0002\u0000\u0001\u0011)\u0019!C\u0001\u0003\u0003C!\"a$\u0001\u0005\u0003\u0005\u000b\u0011BAB\u0011)\t\t\n\u0001BC\u0002\u0013\u0005\u00111\u0013\u0005\u000b\u00037\u0003!\u0011!Q\u0001\n\u0005U\u0005BCAO\u0001\t\u0015\r\u0011\"\u0001\u0002 \"Q\u0011\u0011\u0017\u0001\u0003\u0002\u0003\u0006I!!)\t\u0015\u0005M\u0006A!b\u0001\n\u0003\t)\f\u0003\u0006\u0002H\u0002\u0011\t\u0011)A\u0005\u0003oC!\"!3\u0001\u0005\u000b\u0007I\u0011AAf\u0011)\t\u0019\u000e\u0001B\u0001B\u0003%\u0011Q\u001a\u0005\u000b\u0003+\u0004!Q1A\u0005\u0002\u0005-\u0007BCAl\u0001\t\u0005\t\u0015!\u0003\u0002N\"Q\u0011\u0011\u001c\u0001\u0003\u0006\u0004%\t!a3\t\u0015\u0005m\u0007A!A!\u0002\u0013\ti\r\u0003\u0006\u0002^\u0002\u0011)\u0019!C\u0001\u0003?D!\"!;\u0001\u0005\u0003\u0005\u000b\u0011BAq\u0011)\tY\u000f\u0001BC\u0002\u0013\u0005\u0011Q\u001e\u0005\u000b\u0003_\u0004!\u0011!Q\u0001\n\u0005\r\bBCAy\u0001\t\u0015\r\u0011\"\u0001\u0002t\"Q!1\u0002\u0001\u0003\u0002\u0003\u0006I!!>\t\u0015\t5\u0001A!b\u0001\n\u0003\u0011y\u0001\u0003\u0006\u0003\u001a\u0001\u0011\t\u0011)A\u0005\u0005#A!Ba\u0007\u0001\u0005\u000b\u0007I\u0011AAw\u0011)\u0011i\u0002\u0001B\u0001B\u0003%\u00111\u001d\u0005\u000b\u0005?\u0001!Q1A\u0005\u0002\u00055\bB\u0003B\u0011\u0001\t\u0005\t\u0015!\u0003\u0002d\"Q!1\u0005\u0001\u0003\u0006\u0004%\tA!\n\t\u0015\tU\u0002A!A!\u0002\u0013\u00119\u0003\u0003\u0006\u00038\u0001\u0011)\u0019!C\u0002\u0005sA!B!\u0012\u0001\u0005\u0003\u0005\u000b\u0011\u0002B\u001e\u0011\u001d\u00119\u0005\u0001C\u0001\u0005\u0013BqAa\u0012\u0001\t\u0003\u0011\u0019\bC\u0004\u0003H\u0001!\tA!\'\t\u000f\t\u0005\u0006\u0001\"\u0003\u0003:!Q!1\u0015\u0001\t\u0006\u0004%IA!*\t\u000f\tm\u0006\u0001\"\u0001\u0003>\"9!1\u0019\u0001\u0005\u0002\t\u0015\u0007b\u0002Be\u0001\u0011\u0005!1\u001a\u0005\b\u0005\u001b\u0004A\u0011\u0001Bh\u0011\u001d\u0011I\u000e\u0001C\u0001\u00057DqA!9\u0001\t\u0003\u0011\u0019\u000fC\u0004\u0003h\u0002!\tA!;\t\u000f\t=\b\u0001\"\u0001\u0003r\"9!q\u001f\u0001\u0005\u0002\te\bb\u0002B\u0000\u0001\u0011\u00051\u0011\u0001\u0005\n\u0007\u0017\u0001\u0011\u0013!C\u0001\u0007\u001bAqaa\t\u0001\t\u0003\u001a)\u0003C\u0005\u0004.\u0001\u0011\r\u0011\"\u0003\u0002d!A1q\u0006\u0001!\u0002\u0013\t)\u0007C\u0005\u00042\u0001\u0011\r\u0011\"\u0003\u00044!A1q\u0007\u0001!\u0002\u0013\u0019)\u0004C\u0004\u0004:\u0001!Iaa\u000f\t\u000f\rm\u0003\u0001\"\u0001\u0004^!91q\u000f\u0001\u0005\n\re\u0004\"CBC\u0001E\u0005I\u0011BBD\u0011\u001d\u0019Y\t\u0001C\u0005\u0007\u001bC\u0011b!&\u0001#\u0003%Iaa\"\t\u000f\r]\u0005\u0001\"\u0001\u0004\u001a\"91q\u0013\u0001\u0005\u0002\ru\u0005bBBR\u0001\u0011%1Q\u0015\u0005\b\u0007[\u0003A\u0011ABX\u0011\u001d\u0019y\f\u0001C!\u0007\u0003D!b!2\u0001\u0011\u000b\u0007I\u0011ABd\u0011\u001d\u0011\u0019\r\u0001C\u0001\u0007#Dqa!6\u0001\t\u0003\u00199\u000eC\u0004\u0004\\\u0002!\ta!8\t\u000f\r\u0005\b\u0001\"\u0001\u0004d\"91q\u001d\u0001\u0005\u0002\r%\bbBBw\u0001\u0011\u00051q\u001e\u0005\b\u0005C\u0004A\u0011ABz\u0011\u001d\u00199\u0010\u0001C\u0001\u0007sDqa!@\u0001\t\u0003\u0019y\u0010C\u0004\u0005\u0004\u0001!\t\u0001\"\u0002\t\u000f\t]\b\u0001\"\u0001\u0005\n!9AQ\u0002\u0001\u0005\u0002\u0011=\u0001b\u0002C\n\u0001\u0011\u0005AQ\u0003\u0005\b\t3\u0001A\u0011\u0001C\u000e\u0011\u001d!y\u0002\u0001C\u0001\tCAq\u0001\"\n\u0001\t\u0003!9\u0003C\u0004\u0005,\u0001!\t\u0001\"\f\t\u000f\u0011E\u0002\u0001\"\u0001\u00054!9Aq\u0007\u0001\u0005B\u0011e\u0002b\u0002C \u0001\u0011\u0005C\u0011\t\u0005\b\t\u000f\u0002A\u0011\tC%\u0011\u001d!i\u0005\u0001C!\t\u001fBq\u0001\"\u0015\u0001\t\u0013!\u0019\u0006C\u0004\u0005\\\u0001!\t\u0005\"\u0018\t\u000f\u0011}\u0003\u0001\"\u0011\u0002n\"9A\u0011\r\u0001\u0005B\u0011\r\u0004b\u0002C5\u0001\u0011\u0005C1N\u0004\b\t_\n\b\u0012\u0001C9\r\u0019\u0001\u0018\u000f#\u0001\u0005t!9!q\t2\u0005\u0002\u0011}\u0004\u0002\u0003CAE\u0012\u00051\u000fb!\t\u000f\u00115%\r\"\u0003\u0005\u0010\"AA1\u00132\u0005\u0002E$)\n\u0003\u0005\u0005\u001a\n$\ta\u001dCN\u0011\u001d!\u0019K\u0019C\u0001\tKC\u0011\u0002\"/c#\u0003%\t\u0001b/\t\u000f\u0011=\'\r\"\u0003\u0005R\"9AQ\u001d2\u0005\n\u0011\u001d\bb\u0002CRE\u0012\u0005A\u0011 \u0005\b\tG\u0013G\u0011AC\b\u0011\u001d!\u0019K\u0019C\u0001\u000b\u0007B\u0011\"\"\u001fc\u0003\u0003%I!b\u001f\u0003\u0013\u0019KG.Z\"bG\",\'B\u0001:t\u0003\u0015\u0019\u0017m\u00195f\u0015\u0005!\u0018\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001U\u0011qO`\n\u0007\u0001a\fY\"!\t\u0011\u0007eTH0D\u0001r\u0013\tY\u0018OA\u0003DC\u000eDW\r\u0005\u0002~}2\u0001AAB@\u0001\u0005\u0004\t\tAA\u0001G+\u0011\t\u0019!a\u0006\u0012\t\u0005\u0015\u0011\u0011\u0003\t\u0005\u0003\u000f\ti!\u0004\u0002\u0002\n)\u0011\u00111B\u0001\u0006g\u000e\fG.Y\u0005\u0005\u0003\u001f\tIAA\u0004O_RD\u0017N\\4\u0011\t\u0005\u001d\u00111C\u0005\u0005\u0003+\tIAA\u0002B]f$q!!\u0007\u007f\u0005\u0004\t\u0019AA\u0001`!\u0011\t9!!\b\n\t\u0005}\u0011\u0011\u0002\u0002\b!J|G-^2u!\u0011\t\u0019#a\r\u000f\t\u0005\u0015\u0012q\u0006\b\u0005\u0003O\ti#\u0004\u0002\u0002*)\u0019\u00111F;\u0002\rq\u0012xn\u001c;?\u0013\t\tY!\u0003\u0003\u00022\u0005%\u0011a\u00029bG.\fw-Z\u0005\u0005\u0003k\t9D\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u0003\u00022\u0005%\u0011\u0001\u00037pG\u0006$\u0018n\u001c8\u0016\u0005\u0005u\u0002\u0003BA \u0003\u0013j!!!\u0011\u000b\t\u0005\r\u0013QI\u0001\u0003S>T!!a\u0012\u0002\t)\fg/Y\u0005\u0005\u0003\u0017\n\tE\u0001\u0003GS2,\u0017!\u00037pG\u0006$\u0018n\u001c8!\u00035\u0019\u0017m\u00195f!>d\u0017nY5fgV\u0011\u00111\u000b\t\u0007\u0003G\t)&!\u0017\n\t\u0005]\u0013q\u0007\u0002\u0004\'\u0016\f\bcA=\u0002\\%\u0019\u0011QL9\u0003\u0017\r\u000b7\r[3Q_2L7-_\u0001\u000fG\u0006\u001c\u0007.\u001a)pY&\u001c\u0017.Z:!\u0003%\u0019\u0007.Z2lgVl7/\u0006\u0002\u0002fA1\u00111EA+\u0003O\u0002b!a\u0002\u0002j\u00055\u0014\u0002BA6\u0003\u0013\u0011aa\u00149uS>t\u0007\u0003BA8\u0003orA!!\u001d\u0002tA!\u0011qEA\u0005\u0013\u0011\t)(!\u0003\u0002\rA\u0013X\rZ3g\u0013\u0011\tI(a\u001f\u0003\rM#(/\u001b8h\u0015\u0011\t)(!\u0003\u0002\u0015\rDWmY6tk6\u001c\b%A\u0006de\u0016$WM\u001c;jC2\u001cXCAAB!\u0019\t\u0019#!\u0016\u0002\u0006B!\u0011qQAF\u001b\t\tIIC\u0002\u0002\u0000MLA!!$\u0002\n\nY1I]3eK:$\u0018.\u00197t\u00031\u0019\'/\u001a3f]RL\u0017\r\\:!\u0003\u0019awnZ4feV\u0011\u0011Q\u0013\t\u0004s\u0006]\u0015bAAMc\nY1)Y2iK2{wmZ3s\u0003\u001dawnZ4fe\u0002\nA\u0001]8pYV\u0011\u0011\u0011\u0015\t\u0005\u0003G\u000bi+\u0004\u0002\u0002&*!\u0011qUAU\u0003)\u0019wN\\2veJ,g\u000e\u001e\u0006\u0005\u0003W\u000b)%\u0001\u0003vi&d\u0017\u0002BAX\u0003K\u0013q\"\u0012=fGV$xN]*feZL7-Z\u0001\u0006a>|G\u000eI\u0001\u0004iRdWCAA\\!\u0019\t9!!\u001b\u0002:B!\u00111XAb\u001b\t\tiL\u0003\u0003\u0002@\u0006\u0005\u0017\u0001\u00033ve\u0006$\u0018n\u001c8\u000b\t\u0005\u001d\u0016\u0011B\u0005\u0005\u0003\u000b\fiL\u0001\u0005EkJ\fG/[8o\u0003\u0011!H\u000f\u001c\u0011\u000291|7-\u00197BeRLg-Y2ugNCw.\u001e7e\u0005\u0016\u001c\u0015m\u00195fIV\u0011\u0011Q\u001a\t\u0005\u0003\u000f\ty-\u0003\u0003\u0002R\u0006%!a\u0002\"p_2,\u0017M\\\u0001\u001eY>\u001c\u0017\r\\!si&4\u0017m\u0019;t\'\"|W\u000f\u001c3CK\u000e\u000b7\r[3eA\u0005ibm\u001c7m_^DE\u000f\u001e9U_\"#H\u000f]:SK\u0012L\'/Z2uS>t7/\u0001\u0010g_2dwn\u001e%uiB$v\u000e\u0013;uaN\u0014V\rZ5sK\u000e$\u0018n\u001c8tA\u0005ibm\u001c7m_^DE\u000f\u001e9t)>DE\u000f\u001e9SK\u0012L\'/Z2uS>t7/\u0001\u0010g_2dwn\u001e%uiB\u001cHk\u001c%uiB\u0014V\rZ5sK\u000e$\u0018n\u001c8tA\u0005yQ.\u0019=SK\u0012L\'/Z2uS>t7/\u0006\u0002\u0002bB1\u0011qAA5\u0003G\u0004B!a\u0002\u0002f&!\u0011q]A\u0005\u0005\rIe\u000e^\u0001\u0011[\u0006D(+\u001a3je\u0016\u001cG/[8og\u0002\n\u0001b]:m%\u0016$(/_\u000b\u0003\u0003G\f\u0011b]:m%\u0016$(/\u001f\u0011\u0002\'M\u001cHnU8dW\u0016$h)Y2u_JLx\n\u001d;\u0016\u0005\u0005U\bCBA\u0004\u0003S\n9\u0010\u0005\u0003\u0002z\n\u001dQBAA~\u0015\u0011\ti0a@\u0002\u0007M\u001cHN\u0003\u0003\u0003\u0002\t\r\u0011a\u00018fi*\u0011!QA\u0001\u0006U\u00064\u0018\r_\u0005\u0005\u0005\u0013\tYP\u0001\tT\'2\u001bvnY6fi\u001a\u000b7\r^8ss\u0006!2o\u001d7T_\u000e\\W\r\u001e$bGR|\'/_(qi\u0002\n1\u0003[8ti:\fW.\u001a,fe&4\u0017.\u001a:PaR,\"A!\u0005\u0011\r\u0005\u001d\u0011\u0011\u000eB\n!\u0011\tIP!\u0006\n\t\t]\u00111 \u0002\u0011\u0011>\u001cHO\\1nKZ+\'/\u001b4jKJ\fA\u0003[8ti:\fW.\u001a,fe&4\u0017.\u001a:PaR\u0004\u0013!\u0002:fiJL\u0018A\u0002:fiJL\b%\u0001\u0006ck\u001a4WM]*ju\u0016\f1BY;gM\u0016\u00148+\u001b>fA\u0005a1\r\\1tg2{\u0017\rZ3sgV\u0011!q\u0005\t\u0007\u0003G\t)F!\u000b\u0011\t\t-\"\u0011G\u0007\u0003\u0005[QAAa\f\u0002F\u0005!A.\u00198h\u0013\u0011\u0011\u0019D!\f\u0003\u0017\rc\u0017m]:M_\u0006$WM]\u0001\u000eG2\f7o\u001d\'pC\u0012,\'o\u001d\u0011\u0002\tMLhnY\u000b\u0003\u0005w\u0001RA!\u0010\u0003Bql!Aa\u0010\u000b\u0007\u0005-6/\u0003\u0003\u0003D\t}\"\u0001B*z]\u000e\fQa]=oG\u0002\na\u0001P5oSRtD\u0003\nB&\u0005#\u0012\u0019F!\u0016\u0003X\te#1\fB/\u0005?\u0012\tGa\u0019\u0003f\t\u001d$\u0011\u000eB6\u0005[\u0012yG!\u001d\u0015\t\t5#q\n\t\u0004s\u0002a\bb\u0002B\u001cK\u0001\u000f!1\b\u0005\b\u0003s)\u0003\u0019AA\u001f\u0011\u001d\ty%\na\u0001\u0003\'Bq!!\u0019&\u0001\u0004\t)\u0007C\u0004\u0002\u0000\u0015\u0002\r!a!\t\u000f\u0005EU\u00051\u0001\u0002\u0016\"9\u0011QT\u0013A\u0002\u0005\u0005\u0006bBAZK\u0001\u0007\u0011q\u0017\u0005\b\u0003\u0013,\u0003\u0019AAg\u0011\u001d\t).\na\u0001\u0003\u001bDq!!7&\u0001\u0004\ti\rC\u0004\u0002^\u0016\u0002\r!!9\t\u000f\u0005-X\u00051\u0001\u0002d\"9\u0011\u0011_\u0013A\u0002\u0005U\bb\u0002B\u0007K\u0001\u0007!\u0011\u0003\u0005\b\u00057)\u0003\u0019AAr\u0011\u001d\u0011y\"\na\u0001\u0003GDqAa\t&\u0001\u0004\u00119\u0003\u0006\u0012\u0003v\te$1\u0010B?\u0005\u007f\u0012\tIa!\u0003\u0006\n\u001d%\u0011\u0012BF\u0005\u001b\u0013yI!%\u0003\u0014\nU%q\u0013\u000b\u0005\u0005\u001b\u00129\bC\u0004\u00038\u0019\u0002\u001dAa\u000f\t\u000f\u0005eb\u00051\u0001\u0002>!9\u0011q\n\u0014A\u0002\u0005M\u0003bBA1M\u0001\u0007\u0011Q\r\u0005\b\u0003\u007f2\u0003\u0019AAB\u0011\u001d\t\tJ\na\u0001\u0003+Cq!!(\'\u0001\u0004\t\t\u000bC\u0004\u00024\u001a\u0002\r!a.\t\u000f\u0005%g\u00051\u0001\u0002N\"9\u0011Q\u001b\u0014A\u0002\u00055\u0007bBAmM\u0001\u0007\u0011Q\u001a\u0005\b\u0003;4\u0003\u0019AAq\u0011\u001d\tYO\na\u0001\u0003GDq!!=\'\u0001\u0004\t)\u0010C\u0004\u0003\u000e\u0019\u0002\rA!\u0005\t\u000f\tma\u00051\u0001\u0002d\"9!q\u0004\u0014A\u0002\u0005\rH\u0003\u0002BN\u0005?#BA!\u0014\u0003\u001e\"9!qG\u0014A\u0004\tm\u0002bBA\u001dO\u0001\u0007\u0011QH\u0001\u0002\'\u0006y\u0011\r\u001c7De\u0016$WM\u001c;jC2\u001c\b\'\u0006\u0002\u0003(B1!\u0011\u0016BZ\u0005kk!Aa+\u000b\t\t5&qV\u0001\nS6lW\u000f^1cY\u0016TAA!-\u0002\n\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\t\u0005]#1\u0016\t\u0005\u0003\u000f\u00139,\u0003\u0003\u0003:\u0006%%!\u0005#je\u0016\u001cGo\u0011:fI\u0016tG/[1mg\u0006q\u0011\r\u001c7De\u0016$WM\u001c;jC2\u001cXC\u0001B`!\u0011ihP!1\u0011\r\u0005\r\u0012Q\u000bB[\u000319\u0018\u000e\u001e5M_\u000e\fG/[8o)\u0011\u0011iEa2\t\u000f\u0005e2\u00061\u0001\u0002n\u0005ian\\\"sK\u0012,g\u000e^5bYN,\"A!\u0014\u0002\u001d\u0005$Gm\u0011:fI\u0016tG/[1mgR!!Q\nBi\u0011\u001d\ty(\fa\u0001\u0005\'\u0004b!a\u0002\u0003V\u0006\u0015\u0015\u0002\u0002Bl\u0003\u0013\u0011!\u0002\u0010:fa\u0016\fG/\u001a3?\u0003I\tG\r\u001a$jY\u0016\u001c%/\u001a3f]RL\u0017\r\\:\u0015\t\t5#Q\u001c\u0005\b\u0005?t\u0003\u0019AA\u001f\u00039\u0019\'/\u001a3f]RL\u0017\r\u001c$jY\u0016\fqa^5uQR#H\u000e\u0006\u0003\u0003N\t\u0015\bbBAZ_\u0001\u0007\u0011\u0011X\u0001\u0015o&$\bnU:m\'>\u001c7.\u001a;GC\u000e$xN]=\u0015\t\t5#1\u001e\u0005\b\u0005[\u0004\u0004\u0019AA|\u0003A\u00198\u000f\\*pG.,GOR1di>\u0014\u00180\u0001\u000bxSRD\u0007j\\:u]\u0006lWMV3sS\u001aLWM\u001d\u000b\u0005\u0005\u001b\u0012\u0019\u0010C\u0004\u0003vF\u0002\rAa\u0005\u0002!!|7\u000f\u001e8b[\u00164VM]5gS\u0016\u0014\u0018aE<ji\"l\u0015\r\u001f*fI&\u0014Xm\u0019;j_:\u001cH\u0003\u0002B\'\u0005wDqA!@3\u0001\u0004\t\u0019/A\u0002nCb\f\u0011\u0002\\8dC24\u0015\u000e\\3\u0015\r\u0005u21AB\u0004\u0011\u001d\u0019)a\ra\u0001\u0003[\n1!\u001e:m\u0011%\u0019Ia\rI\u0001\u0002\u0004\t9\'\u0001\u0003vg\u0016\u0014\u0018a\u00057pG\u0006dg)\u001b7fI\u0011,g-Y;mi\u0012\u0012TCAB\bU\u0011\t9g!\u0005,\u0005\rM\u0001\u0003BB\u000b\u0007?i!aa\u0006\u000b\t\re11D\u0001\nk:\u001c\u0007.Z2lK\u0012TAa!\b\u0002\n\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\r\u00052q\u0003\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017!\u00037pO\u001e,\'o\u00149u+\t\u00199\u0003\u0005\u0004\u0002\b\r%\u0012QS\u0005\u0005\u0007W\tIA\u0001\u0003T_6,\u0017AC2iK\u000e\\7/^7ta\u0005Y1\r[3dWN,Xn\u001d\u0019!\u0003=\t7\r^;bY\u000eCWmY6tk6\u001cXCAB\u001b!\u0019\u0011IKa-\u0002n\u0005\u0001\u0012m\u0019;vC2\u001c\u0005.Z2lgVl7\u000fI\u0001\tI><h\u000e\\8bIR11QHB\'\u0007/\u0002B! @\u0004@A1\u00111EA+\u0007\u0003\u0002Baa\u0011\u0004J5\u00111Q\t\u0006\u0004\u0007\u000f\n\u0018\u0001C5oi\u0016\u0014h.\u00197\n\t\r-3Q\t\u0002\u000f\t><h\u000e\\8bIJ+7/\u001e7u\u0011\u001d\u0019yE\u000fa\u0001\u0007#\n\u0001\"\u0019:uS\u001a\f7\r\u001e\t\u0005\u0005{\u0019\u0019&\u0003\u0003\u0004V\t}\"\u0001C!si&4\u0017m\u0019;\t\u000f\re#\b1\u0001\u0002Z\u0005Y1-Y2iKB{G.[2z\u0003A1\u0018\r\\5eCR,7\t[3dWN,X\u000e\u0006\u0004\u0004`\rE41\u000f\t\n\u0005{\u0019\t\u0007`B3\u0007WJAaa\u0019\u0003@\t9Q)\u001b;iKJ$\u0006cA=\u0004h%\u00191\u0011N9\u0003\u001b\u0005\u0013H/\u001b4bGR,%O]8s!\u0011\t9a!\u001c\n\t\r=\u0014\u0011\u0002\u0002\u0005+:LG\u000fC\u0004\u0004Pm\u0002\ra!\u0015\t\u000f\rU4\b1\u0001\u0002n\u000591/^7UsB,\u0017!\u00044jY\u0016\u0004VM\u001d)pY&\u001c\u0017\u0010\u0006\u0005\u0004|\ru4qPBB!%\u0011id!\u0019}\u0007K\ni\u0004C\u0004\u0004Pq\u0002\ra!\u0015\t\u000f\r\u0005E\b1\u0001\u0002Z\u00051\u0001o\u001c7jGfD\u0011Ba\u0007=!\u0003\u0005\r!a9\u0002/\u0019LG.\u001a)feB{G.[2zI\u0011,g-Y;mi\u0012\u001aTCABEU\u0011\t\u0019o!\u0005\u0002\u001d\u0019LG.\u001a)feB{G.[2zaQA11PBH\u0007#\u001b\u0019\nC\u0004\u0004Py\u0002\ra!\u0015\t\u000f\r\u0005e\b1\u0001\u0002Z!I!1\u0004 \u0011\u0002\u0003\u0007\u00111]\u0001\u0019M&dW\rU3s!>d\u0017nY=1I\u0011,g-Y;mi\u0012\u001a\u0014\u0001\u00024jY\u0016$Baa\u001f\u0004\u001c\"91q\n!A\u0002\rECCBB>\u0007?\u001b\t\u000bC\u0004\u0004P\u0005\u0003\ra!\u0015\t\u000f\tm\u0011\t1\u0001\u0002d\u0006qa-\u001a;dQB+\'\u000fU8mS\u000eLHCBBT\u0007S\u001bY\u000bE\u0005\u0003>\r\u0005D0!\u001c\u0002n!91q\n\"A\u0002\rE\u0003bBBA\u0005\u0002\u0007\u0011\u0011L\u0001\u0006M\u0016$8\r[\u000b\u0003\u0007c\u0003Raa-\u0004:rt1!_B[\u0013\r\u00199,]\u0001\u0006\u0007\u0006\u001c\u0007.Z\u0005\u0005\u0007w\u001biLA\u0003GKR\u001c\u0007NC\u0002\u00048F\faAZ3uG\"\u001cXCABb!\u0019\t\u0019#!\u0016\u00042\u0006\u0011QmY\u000b\u0003\u0007\u0013\u0004Baa3\u0004N6\u0011\u0011\u0011Y\u0005\u0005\u0007\u001f\f\tMA\u0010Fq\u0016\u001cW\u000f^5p]\u000e{g\u000e^3yi\u0016CXmY;u_J\u001cVM\u001d<jG\u0016$BA!\u0014\u0004T\"9\u0011\u0011\b$A\u0002\u0005u\u0012!E<ji\"\u001c\u0015m\u00195f!>d\u0017nY5fgR!!QJBm\u0011\u001d\tye\u0012a\u0001\u0003\'\nQb^5uQ\u000eCWmY6tk6\u001cH\u0003\u0002B\'\u0007?Dq!!\u0019I\u0001\u0004\t)\'A\bxSRD7I]3eK:$\u0018.\u00197t)\u0011\u0011ie!:\t\u000f\u0005}\u0014\n1\u0001\u0002\u0004\u0006Qq/\u001b;i\u0019><w-\u001a:\u0015\t\t531\u001e\u0005\b\u0003#S\u0005\u0019AAK\u0003!9\u0018\u000e\u001e5Q_>dG\u0003\u0002B\'\u0007cDq!!(L\u0001\u0004\t\t\u000b\u0006\u0003\u0003N\rU\bbBAZ\u0019\u0002\u0007\u0011qW\u0001!o&$\b\u000eT8dC2\f%\u000f^5gC\u000e$8o\u00155pk2$\')Z\"bG\",G\r\u0006\u0003\u0003N\rm\bbBAe\u001b\u0002\u0007\u0011QZ\u0001\"o&$\bNR8mY><\b\n\u001e;q)>DE\u000f\u001e9t%\u0016$\u0017N]3di&|gn\u001d\u000b\u0005\u0005\u001b\"\t\u0001C\u0004\u0002V:\u0003\r!!4\u0002C]LG\u000f\u001b$pY2|w\u000f\u0013;uaN$v\u000e\u0013;uaJ+G-\u001b:fGRLwN\\:\u0015\t\t5Cq\u0001\u0005\b\u00033|\u0005\u0019AAg)\u0011\u0011i\u0005b\u0003\t\u000f\u0005u\u0007\u000b1\u0001\u0002b\u0006aq/\u001b;i\'Nd\'+\u001a;ssR!!Q\nC\t\u0011\u001d\tY/\u0015a\u0001\u0003G\fqc^5uQN\u001bHnU8dW\u0016$h)Y2u_JLx\n\u001d;\u0015\t\t5Cq\u0003\u0005\b\u0003c\u0014\u0006\u0019AA{\u0003]9\u0018\u000e\u001e5I_N$h.Y7f-\u0016\u0014\u0018NZ5fe>\u0003H\u000f\u0006\u0003\u0003N\u0011u\u0001b\u0002B\u0007\'\u0002\u0007!\u0011C\u0001\no&$\bNU3uef$BA!\u0014\u0005$!9!1\u0004+A\u0002\u0005\r\u0018AD<ji\"\u0014UO\u001a4feNK\'0\u001a\u000b\u0005\u0005\u001b\"I\u0003C\u0004\u0003 U\u0003\r!a9\u0002!]LG\u000f[\"mCN\u001cHj\\1eKJ\u001cH\u0003\u0002B\'\t_AqAa\tW\u0001\u0004\u00119#\u0001\u0005xSRD7+\u001f8d)\u0011\u0011i\u0005\"\u000e\t\u000f\t]r\u000b1\u0001\u0003<\u0005AAo\\*ue&tw\r\u0006\u0002\u0005<A!!1\u0006C\u001f\u0013\u0011\tIH!\f\u0002\u0011\r\fg.R9vC2$B!!4\u0005D!9AQI-A\u0002\u0005E\u0011aA8cU\u00061Q-];bYN$B!!4\u0005L!9AQ\t.A\u0002\u0005E\u0011\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005\r\u0018!\u0002;va2,WC\u0001C+!!\n9\u0001b\u0016\u0002>\u0005M\u0013QMAB\u0003+\u000b\t+a.\u0002N\u00065\u0017QZAq\u0003G\f)P!\u0005\u0002d\u0006\r(q\u0005B\u001e\u0013\u0011!I&!\u0003\u0003\u000fQ+\b\u000f\\32q\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"\u0001b\u000f\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!\u0011\u0011\u0003C3\u0011\u001d!9g\u0018a\u0001\u0003G\f\u0011A\\\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0005<\u00115\u0004b\u0002C4A\u0002\u0007\u00111]\u0001\n\r&dWmQ1dQ\u0016\u0004\"!\u001f2\u0014\u000b\t$)\bb\u001f\u0011\t\u0005\u001dAqO\u0005\u0005\ts\nIA\u0001\u0004B]f\u0014VM\u001a\t\u0005\u0003\u007f!i(\u0003\u0003\u00026\u0005\u0005CC\u0001C9\u0003)awnY1m\r&dW\r\r\u000b\u000b\u0003{!)\tb\"\u0005\n\u0012-\u0005bBB\u0003I\u0002\u0007\u0011Q\u000e\u0005\u0007e\u0012\u0004\r!!\u0010\t\u000f\r%A\r1\u0001\u0002h!9\u0011\u0011\u001a3A\u0002\u00055\u0017aE1vq&d\u0017.\u0019:z\r&dW\r\u0015:fM&DH\u0003BA7\t#Cqaa&f\u0001\u0004\ti$A\ndY\u0016\f\'/Q;yS2L\u0017M]=GS2,7\u000f\u0006\u0003\u0004l\u0011]\u0005bBBLM\u0002\u0007\u0011QH\u0001\u000eCVD\u0018\u000e\\5bef4\u0015\u000e\\3\u0015\r\u0005uBQ\u0014CP\u0011\u001d\u00199j\u001aa\u0001\u0003{Aq\u0001\")h\u0001\u0004\ti\'A\u0002lKf\fQ!\u00199qYf,B\u0001b*\u00050R\u0011A\u0011\u0016\u000b\u0005\tW#)\f\u0005\u0003z\u0001\u00115\u0006cA?\u00050\u00121q\u0010\u001bb\u0001\tc+B!a\u0001\u00054\u0012A\u0011\u0011\u0004CX\u0005\u0004\t\u0019\u0001C\u0005\u0003\"\"\u0004\n\u0011q\u0001\u00058B1!Q\bB!\t[\u000bq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0005\t{#I\r\u0006\u0002\u0005@*\"A\u0011YB\t!\u0019\u0011iD!\u0011\u0005DB!!Q\bCc\u0013\u0011!9Ma\u0010\u0003\tQ\u000b7o\u001b\u0003\u0007\u007f&\u0014\r\u0001b3\u0016\t\u0005\rAQ\u001a\u0003\t\u00033!IM1\u0001\u0002\u0004\u0005y\u0001/\u001a:tSN$X\r\u001a#jO\u0016\u001cH\u000f\u0006\u0005\u0005T\u0012}G\u0011\u001dCr!\u0011!)\u000eb7\u000e\u0005\u0011]\'\u0002\u0002Cm\u0003\u000b\nA!\\1uQ&!AQ\u001cCl\u0005)\u0011\u0015nZ%oi\u0016<WM\u001d\u0005\b\u0003sQ\u0007\u0019AA\u001f\u0011\u001d\u0019)H\u001ba\u0001\u0003[BqAa@k\u0001\u0004\ti$A\u0007d_6\u0004X\u000f^3ES\u001e,7\u000f\u001e\u000b\u0007\tS$)\u0010b>\u0011\r\u0005\u001dA1\u001eCx\u0013\u0011!i/!\u0003\u0003\u000b\u0005\u0013(/Y=\u0011\t\u0005\u001dA\u0011_\u0005\u0005\tg\fIA\u0001\u0003CsR,\u0007bBB;W\u0002\u0007\u0011Q\u000e\u0005\b\u0005\u007f\\\u0007\u0019AA\u001f+\u0011!Y0b\u0001\u0015\t\u0011uXQ\u0002\u000b\u0005\t\u007f,I\u0001\u0005\u0003z\u0001\u0015\u0005\u0001cA?\u0006\u0004\u00111q\u0010\u001cb\u0001\u000b\u000b)B!a\u0001\u0006\b\u0011A\u0011\u0011DC\u0002\u0005\u0004\t\u0019\u0001C\u0004\u000381\u0004\u001d!b\u0003\u0011\r\tu\"\u0011IC\u0001\u0011\u001d\tI\u0004\u001ca\u0001\u0003{)B!\"\u0005\u0006\u001aQ\u0011S1CC\u0012\u000bK)9#\"\u000b\u0006,\u00155RqFC\u0019\u000bg))$b\u000e\u0006:\u0015mRQHC \u000b\u0003\"B!\"\u0006\u0006 A!\u0011\u0010AC\f!\riX\u0011\u0004\u0003\u0007\u007f6\u0014\r!b\u0007\u0016\t\u0005\rQQ\u0004\u0003\t\u00033)IB1\u0001\u0002\u0004!9!qG7A\u0004\u0015\u0005\u0002C\u0002B\u001f\u0005\u0003*9\u0002C\u0004\u0002:5\u0004\r!!\u0010\t\u000f\u0005=S\u000e1\u0001\u0002T!9\u0011\u0011M7A\u0002\u0005\u0015\u0004bBA@[\u0002\u0007\u00111\u0011\u0005\b\u0003#k\u0007\u0019AAK\u0011\u001d\ti*\u001ca\u0001\u0003CCq!a-n\u0001\u0004\t9\fC\u0004\u0002J6\u0004\r!!4\t\u000f\u0005UW\u000e1\u0001\u0002N\"9\u0011\u0011\\7A\u0002\u00055\u0007bBAo[\u0002\u0007\u0011\u0011\u001d\u0005\b\u0003Wl\u0007\u0019AAr\u0011\u001d\t\t0\u001ca\u0001\u0003kDqA!\u0004n\u0001\u0004\u0011\t\u0002C\u0004\u0003\u001c5\u0004\r!a9\t\u000f\t}Q\u000e1\u0001\u0002dV!QQIC\')\u0011*9%b\u0016\u0006Z\u0015mSQLC0\u000bC*\u0019\'\"\u001a\u0006h\u0015%T1NC7\u000b_*\t(b\u001d\u0006v\u0015]D\u0003BC%\u000b\'\u0002B!\u001f\u0001\u0006LA\u0019Q0\"\u0014\u0005\r}t\'\u0019AC(+\u0011\t\u0019!\"\u0015\u0005\u0011\u0005eQQ\nb\u0001\u0003\u0007AqAa\u000eo\u0001\b))\u0006\u0005\u0004\u0003>\t\u0005S1\n\u0005\b\u0003sq\u0007\u0019AA\u001f\u0011\u001d\tyE\u001ca\u0001\u0003\'Bq!!\u0019o\u0001\u0004\t)\u0007C\u0004\u0002\u00009\u0004\r!a!\t\u000f\u0005Ee\u000e1\u0001\u0002\u0016\"9\u0011Q\u00148A\u0002\u0005\u0005\u0006bBAZ]\u0002\u0007\u0011q\u0017\u0005\b\u0003\u0013t\u0007\u0019AAg\u0011\u001d\t)N\u001ca\u0001\u0003\u001bDq!!7o\u0001\u0004\ti\rC\u0004\u0002^:\u0004\r!!9\t\u000f\u0005-h\u000e1\u0001\u0002d\"9\u0011\u0011\u001f8A\u0002\u0005U\bb\u0002B\u0007]\u0002\u0007!\u0011\u0003\u0005\b\u00057q\u0007\u0019AAr\u0011\u001d\u0011yB\u001ca\u0001\u0003GDqAa\to\u0001\u0004\u00119#\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0006~A!!1FC@\u0013\u0011)\tI!\f\u0003\r=\u0013\'.Z2u\u0001
    #14 = Utf8               coursier/cache/ArtifactError$ChecksumErrors
    #15 = Class              #14          // coursier/cache/ArtifactError$ChecksumErrors
    #16 = Utf8               coursier/cache/ArtifactError
    #17 = Class              #16          // coursier/cache/ArtifactError
    #18 = Utf8               ChecksumErrors
    #19 = Utf8               coursier/cache/ArtifactError$ChecksumFormatError
    #20 = Class              #19          // coursier/cache/ArtifactError$ChecksumFormatError
    #21 = Utf8               ChecksumFormatError
    #22 = Utf8               coursier/cache/ArtifactError$ChecksumNotFound
    #23 = Class              #22          // coursier/cache/ArtifactError$ChecksumNotFound
    #24 = Utf8               ChecksumNotFound
    #25 = Utf8               coursier/cache/ArtifactError$WrongChecksum
    #26 = Class              #25          // coursier/cache/ArtifactError$WrongChecksum
    #27 = Utf8               WrongChecksum
    #28 = Utf8               coursier/cache/FileCache$$anonfun$1
    #29 = Class              #28          // coursier/cache/FileCache$$anonfun$1
    #30 = Utf8               coursier/cache/FileCache$$anonfun$checksumErrors$1$1
    #31 = Class              #30          // coursier/cache/FileCache$$anonfun$checksumErrors$1$1
    #32 = Utf8               coursier/util/Monad$AllOps
    #33 = Class              #32          // coursier/util/Monad$AllOps
    #34 = Utf8               coursier/util/Monad
    #35 = Class              #34          // coursier/util/Monad
    #36 = Utf8               AllOps
    #37 = Utf8               coursier/util/Monad$ops$
    #38 = Class              #37          // coursier/util/Monad$ops$
    #39 = Utf8
    #40 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #41 = Class              #40          // java/lang/invoke/MethodHandles$Lookup
    #42 = Utf8               java/lang/invoke/MethodHandles
    #43 = Class              #42          // java/lang/invoke/MethodHandles
    #44 = Utf8               Lookup
    #45 = Utf8               scala/Predef$ArrowAssoc$
    #46 = Class              #45          // scala/Predef$ArrowAssoc$
    #47 = Utf8               scala/Predef
    #48 = Class              #47          // scala/Predef
    #49 = Utf8               scala/collection/mutable/ArraySeq$ofRef
    #50 = Class              #49          // scala/collection/mutable/ArraySeq$ofRef
    #51 = Utf8               scala/collection/mutable/ArraySeq
    #52 = Class              #51          // scala/collection/mutable/ArraySeq
    #53 = Utf8               ofRef
    #54 = Utf8               scala/math/Ordering$String$
    #55 = Class              #54          // scala/math/Ordering$String$
    #56 = Utf8               scala/math/Ordering
    #57 = Class              #56          // scala/math/Ordering
    #58 = Utf8               allCredentials0
    #59 = Utf8               Lscala/collection/immutable/Seq;
    #60 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;
    #61 = Utf8               ec
    #62 = Utf8               Lscala/concurrent/ExecutionContextExecutorService;
    #63 = Utf8               location
    #64 = Utf8               Ljava/io/File;
    #65 = Utf8               cachePolicies
    #66 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;
    #67 = Utf8               checksums
    #68 = Utf8               Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;
    #69 = Utf8               credentials
    #70 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;
    #71 = Utf8               logger
    #72 = Utf8               Lcoursier/cache/CacheLogger;
    #73 = Utf8               pool
    #74 = Utf8               Ljava/util/concurrent/ExecutorService;
    #75 = Utf8               ttl
    #76 = Utf8               Lscala/Option;
    #77 = Utf8               Lscala/Option<Lscala/concurrent/duration/Duration;>;
    #78 = Utf8               localArtifactsShouldBeCached
    #79 = Utf8               Z
    #80 = Utf8               followHttpToHttpsRedirections
    #81 = Utf8               followHttpsToHttpRedirections
    #82 = Utf8               maxRedirections
    #83 = Utf8               Lscala/Option<Ljava/lang/Object;>;
    #84 = Utf8               sslRetry
    #85 = Utf8               I
    #86 = Utf8               sslSocketFactoryOpt
    #87 = Utf8               Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;
    #88 = Utf8               hostnameVerifierOpt
    #89 = Utf8               Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;
    #90 = Utf8               retry
    #91 = Utf8               bufferSize
    #92 = Utf8               classLoaders
    #93 = Utf8               Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;
    #94 = Utf8               sync
    #95 = Utf8               Lcoursier/util/Sync;
    #96 = Utf8               Lcoursier/util/Sync<TF;>;
    #97 = Utf8               checksums0
    #98 = Utf8               actualChecksums
    #99 = Utf8               Lscala/collection/immutable/Seq<Ljava/lang/String;>;
   #100 = Utf8               bitmap$0
   #101 = Utf8               B
   #102 = Utf8               apply
   #103 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #104 = Utf8               <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
   #105 = Utf8               coursier/cache/FileCache$
   #106 = Class              #105         // coursier/cache/FileCache$
   #107 = Utf8               MODULE$
   #108 = Utf8               Lcoursier/cache/FileCache$;
   #109 = NameAndType        #107:#108    // MODULE$:Lcoursier/cache/FileCache$;
   #110 = Fieldref           #106.#109    // coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
   #111 = NameAndType        #102:#103    // apply:(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #112 = Methodref          #106.#111    // coursier/cache/FileCache$.apply:(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #113 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #114 = Utf8               <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
   #115 = NameAndType        #102:#113    // apply:(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #116 = Methodref          #106.#115    // coursier/cache/FileCache$.apply:(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #117 = Utf8               (Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #118 = Utf8               <F:Ljava/lang/Object;>(Ljava/io/File;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
   #119 = NameAndType        #102:#117    // apply:(Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #120 = Methodref          #106.#119    // coursier/cache/FileCache$.apply:(Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #121 = Utf8               apply$default$1
   #122 = Utf8               ()Lcoursier/util/Sync;
   #123 = Utf8               <F:Ljava/lang/Object;>()Lcoursier/util/Sync<Lcoursier/util/Task;>;
   #124 = NameAndType        #121:#122    // apply$default$1:()Lcoursier/util/Sync;
   #125 = Methodref          #106.#124    // coursier/cache/FileCache$.apply$default$1:()Lcoursier/util/Sync;
   #126 = Utf8               (Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #127 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
   #128 = Utf8               S
   #129 = NameAndType        #102:#126    // apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #130 = Methodref          #106.#129    // coursier/cache/FileCache$.apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
   #131 = Utf8               productIterator
   #132 = Utf8               ()Lscala/collection/Iterator;
   #133 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #134 = Utf8               productIterator$
   #135 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #136 = NameAndType        #134:#135    // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #137 = InterfaceMethodref #7.#136      // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #138 = Utf8               this
   #139 = Utf8               Lcoursier/cache/FileCache;
   #140 = Utf8               productElementNames
   #141 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #142 = Utf8               productElementNames$
   #143 = NameAndType        #142:#135    // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #144 = InterfaceMethodref #7.#143      // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #145 = Utf8               ()Ljava/io/File;
   #146 = NameAndType        #63:#64      // location:Ljava/io/File;
   #147 = Fieldref           #2.#146      // coursier/cache/FileCache.location:Ljava/io/File;
   #148 = Utf8               ()Lscala/collection/immutable/Seq;
   #149 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;
   #150 = NameAndType        #65:#59      // cachePolicies:Lscala/collection/immutable/Seq;
   #151 = Fieldref           #2.#150      // coursier/cache/FileCache.cachePolicies:Lscala/collection/immutable/Seq;
   #152 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;
   #153 = NameAndType        #67:#59      // checksums:Lscala/collection/immutable/Seq;
   #154 = Fieldref           #2.#153      // coursier/cache/FileCache.checksums:Lscala/collection/immutable/Seq;
   #155 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;
   #156 = NameAndType        #69:#59      // credentials:Lscala/collection/immutable/Seq;
   #157 = Fieldref           #2.#156      // coursier/cache/FileCache.credentials:Lscala/collection/immutable/Seq;
   #158 = Utf8               ()Lcoursier/cache/CacheLogger;
   #159 = NameAndType        #71:#72      // logger:Lcoursier/cache/CacheLogger;
   #160 = Fieldref           #2.#159      // coursier/cache/FileCache.logger:Lcoursier/cache/CacheLogger;
   #161 = Utf8               ()Ljava/util/concurrent/ExecutorService;
   #162 = NameAndType        #73:#74      // pool:Ljava/util/concurrent/ExecutorService;
   #163 = Fieldref           #2.#162      // coursier/cache/FileCache.pool:Ljava/util/concurrent/ExecutorService;
   #164 = Utf8               ()Lscala/Option;
   #165 = Utf8               ()Lscala/Option<Lscala/concurrent/duration/Duration;>;
   #166 = NameAndType        #75:#76      // ttl:Lscala/Option;
   #167 = Fieldref           #2.#166      // coursier/cache/FileCache.ttl:Lscala/Option;
   #168 = Utf8               ()Z
   #169 = NameAndType        #78:#79      // localArtifactsShouldBeCached:Z
   #170 = Fieldref           #2.#169      // coursier/cache/FileCache.localArtifactsShouldBeCached:Z
   #171 = NameAndType        #80:#79      // followHttpToHttpsRedirections:Z
   #172 = Fieldref           #2.#171      // coursier/cache/FileCache.followHttpToHttpsRedirections:Z
   #173 = NameAndType        #81:#79      // followHttpsToHttpRedirections:Z
   #174 = Fieldref           #2.#173      // coursier/cache/FileCache.followHttpsToHttpRedirections:Z
   #175 = Utf8               ()Lscala/Option<Ljava/lang/Object;>;
   #176 = NameAndType        #82:#76      // maxRedirections:Lscala/Option;
   #177 = Fieldref           #2.#176      // coursier/cache/FileCache.maxRedirections:Lscala/Option;
   #178 = Utf8               ()I
   #179 = NameAndType        #84:#85      // sslRetry:I
   #180 = Fieldref           #2.#179      // coursier/cache/FileCache.sslRetry:I
   #181 = Utf8               ()Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;
   #182 = NameAndType        #86:#76      // sslSocketFactoryOpt:Lscala/Option;
   #183 = Fieldref           #2.#182      // coursier/cache/FileCache.sslSocketFactoryOpt:Lscala/Option;
   #184 = Utf8               ()Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;
   #185 = NameAndType        #88:#76      // hostnameVerifierOpt:Lscala/Option;
   #186 = Fieldref           #2.#185      // coursier/cache/FileCache.hostnameVerifierOpt:Lscala/Option;
   #187 = NameAndType        #90:#85      // retry:I
   #188 = Fieldref           #2.#187      // coursier/cache/FileCache.retry:I
   #189 = NameAndType        #91:#85      // bufferSize:I
   #190 = Fieldref           #2.#189      // coursier/cache/FileCache.bufferSize:I
   #191 = Utf8               ()Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;
   #192 = NameAndType        #92:#59      // classLoaders:Lscala/collection/immutable/Seq;
   #193 = Fieldref           #2.#192      // coursier/cache/FileCache.classLoaders:Lscala/collection/immutable/Seq;
   #194 = Utf8               ()Lcoursier/util/Sync<TF;>;
   #195 = NameAndType        #94:#95      // sync:Lcoursier/util/Sync;
   #196 = Fieldref           #2.#195      // coursier/cache/FileCache.sync:Lcoursier/util/Sync;
   #197 = NameAndType        #94:#122     // sync:()Lcoursier/util/Sync;
   #198 = Methodref          #2.#197      // coursier/cache/FileCache.sync:()Lcoursier/util/Sync;
   #199 = Utf8               allCredentials0$lzycompute
   #200 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;
   #201 = NameAndType        #100:#101    // bitmap$0:B
   #202 = Fieldref           #2.#201      // coursier/cache/FileCache.bitmap$0:B
   #203 = NameAndType        #69:#148     // credentials:()Lscala/collection/immutable/Seq;
   #204 = Methodref          #2.#203      // coursier/cache/FileCache.credentials:()Lscala/collection/immutable/Seq;
   #205 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #206 = MethodType         #205         //  (Ljava/lang/Object;)Ljava/lang/Object;
   #207 = Utf8               $anonfun$allCredentials0$1
   #208 = Utf8               (Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
   #209 = NameAndType        #207:#208    // $anonfun$allCredentials0$1:(Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
   #210 = Methodref          #2.#209      // coursier/cache/FileCache.$anonfun$allCredentials0$1:(Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
   #211 = MethodHandle       6:#210       // REF_invokeStatic coursier/cache/FileCache.$anonfun$allCredentials0$1:(Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
   #212 = MethodType         #208         //  (Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
   #213 = Integer            5
   #214 = Integer            1
   #215 = Utf8               java/lang/invoke/LambdaMetafactory
   #216 = Class              #215         // java/lang/invoke/LambdaMetafactory
   #217 = Utf8               altMetafactory
   #218 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #219 = NameAndType        #217:#218    // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #220 = Methodref          #216.#219    // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #221 = MethodHandle       6:#220       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #222 = Utf8               ()Lscala/Function1;
   #223 = NameAndType        #102:#222    // apply:()Lscala/Function1;
   #224 = InvokeDynamic      #0:#223      // #0:apply:()Lscala/Function1;
   #225 = Utf8               scala/collection/immutable/Seq
   #226 = Class              #225         // scala/collection/immutable/Seq
   #227 = Utf8               flatMap
   #228 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
   #229 = NameAndType        #227:#228    // flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #230 = InterfaceMethodref #226.#229    // scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
   #231 = NameAndType        #58:#59      // allCredentials0:Lscala/collection/immutable/Seq;
   #232 = Fieldref           #2.#231      // coursier/cache/FileCache.allCredentials0:Lscala/collection/immutable/Seq;
   #233 = Utf8               java/lang/Throwable
   #234 = Class              #233         // java/lang/Throwable
   #235 = NameAndType        #199:#148    // allCredentials0$lzycompute:()Lscala/collection/immutable/Seq;
   #236 = Methodref          #2.#235      // coursier/cache/FileCache.allCredentials0$lzycompute:()Lscala/collection/immutable/Seq;
   #237 = Utf8               allCredentials
   #238 = Utf8               ()Ljava/lang/Object;
   #239 = Utf8               ()TF;
   #240 = NameAndType        #128:#122    // S:()Lcoursier/util/Sync;
   #241 = Methodref          #2.#240      // coursier/cache/FileCache.S:()Lcoursier/util/Sync;
   #242 = MethodType         #238         //  ()Ljava/lang/Object;
   #243 = Utf8               $anonfun$allCredentials$1
   #244 = Utf8               (Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
   #245 = NameAndType        #243:#244    // $anonfun$allCredentials$1:(Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
   #246 = Methodref          #2.#245      // coursier/cache/FileCache.$anonfun$allCredentials$1:(Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
   #247 = MethodHandle       6:#246       // REF_invokeStatic coursier/cache/FileCache.$anonfun$allCredentials$1:(Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
   #248 = MethodType         #148         //  ()Lscala/collection/immutable/Seq;
   #249 = Utf8               (Lcoursier/cache/FileCache;)Lscala/Function0;
   #250 = NameAndType        #102:#249    // apply:(Lcoursier/cache/FileCache;)Lscala/Function0;
   #251 = InvokeDynamic      #1:#250      // #1:apply:(Lcoursier/cache/FileCache;)Lscala/Function0;
   #252 = Utf8               coursier/util/Sync
   #253 = Class              #252         // coursier/util/Sync
   #254 = Utf8               delay
   #255 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
   #256 = NameAndType        #254:#255    // delay:(Lscala/Function0;)Ljava/lang/Object;
   #257 = InterfaceMethodref #253.#256    // coursier/util/Sync.delay:(Lscala/Function0;)Ljava/lang/Object;
   #258 = Utf8               withLocation
   #259 = Utf8               (Ljava/lang/String;)Lcoursier/cache/FileCache;
   #260 = Utf8               (Ljava/lang/String;)Lcoursier/cache/FileCache<TF;>;
   #261 = Utf8               java/io/File
   #262 = Class              #261         // java/io/File
   #263 = Utf8               <init>
   #264 = Utf8               (Ljava/lang/String;)V
   #265 = NameAndType        #263:#264    // "<init>":(Ljava/lang/String;)V
   #266 = Methodref          #262.#265    // java/io/File."<init>":(Ljava/lang/String;)V
   #267 = Utf8               (Ljava/io/File;)Lcoursier/cache/FileCache;
   #268 = NameAndType        #258:#267    // withLocation:(Ljava/io/File;)Lcoursier/cache/FileCache;
   #269 = Methodref          #2.#268      // coursier/cache/FileCache.withLocation:(Ljava/io/File;)Lcoursier/cache/FileCache;
   #270 = Utf8               Ljava/lang/String;
   #271 = Utf8               noCredentials
   #272 = Utf8               ()Lcoursier/cache/FileCache;
   #273 = Utf8               ()Lcoursier/cache/FileCache<TF;>;
   #274 = Utf8               scala/collection/immutable/Nil$
   #275 = Class              #274         // scala/collection/immutable/Nil$
   #276 = Utf8               Lscala/collection/immutable/Nil$;
   #277 = NameAndType        #107:#276    // MODULE$:Lscala/collection/immutable/Nil$;
   #278 = Fieldref           #275.#277    // scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
   #279 = Utf8               withCredentials
   #280 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
   #281 = NameAndType        #279:#280    // withCredentials:(Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
   #282 = Methodref          #2.#281      // coursier/cache/FileCache.withCredentials:(Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
   #283 = Utf8               addCredentials
   #284 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;)Lcoursier/cache/FileCache<TF;>;
   #285 = Utf8               $plus$plus
   #286 = Utf8               (Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #287 = NameAndType        #285:#286    // $plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #288 = InterfaceMethodref #226.#287    // scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
   #289 = Utf8               addFileCredentials
   #290 = Utf8               (Ljava/io/File;)Lcoursier/cache/FileCache<TF;>;
   #291 = Utf8               credentialFile
   #292 = Utf8               coursier/credentials/FileCredentials$
   #293 = Class              #292         // coursier/credentials/FileCredentials$
   #294 = Utf8               Lcoursier/credentials/FileCredentials$;
   #295 = NameAndType        #107:#294    // MODULE$:Lcoursier/credentials/FileCredentials$;
   #296 = Fieldref           #293.#295    // coursier/credentials/FileCredentials$.MODULE$:Lcoursier/credentials/FileCredentials$;
   #297 = Utf8               getAbsolutePath
   #298 = Utf8               ()Ljava/lang/String;
   #299 = NameAndType        #297:#298    // getAbsolutePath:()Ljava/lang/String;
   #300 = Methodref          #262.#299    // java/io/File.getAbsolutePath:()Ljava/lang/String;
   #301 = Utf8               (Ljava/lang/String;)Lcoursier/credentials/FileCredentials;
   #302 = NameAndType        #102:#301    // apply:(Ljava/lang/String;)Lcoursier/credentials/FileCredentials;
   #303 = Methodref          #293.#302    // coursier/credentials/FileCredentials$.apply:(Ljava/lang/String;)Lcoursier/credentials/FileCredentials;
   #304 = Utf8               $colon$plus
   #305 = NameAndType        #304:#205    // $colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
   #306 = InterfaceMethodref #226.#305    // scala/collection/immutable/Seq.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
   #307 = Utf8               withTtl
   #308 = Utf8               (Lscala/concurrent/duration/Duration;)Lcoursier/cache/FileCache;
   #309 = Utf8               (Lscala/concurrent/duration/Duration;)Lcoursier/cache/FileCache<TF;>;
   #310 = Utf8               scala/Some
   #311 = Class              #310         // scala/Some
   #312 = Utf8               (Ljava/lang/Object;)V
   #313 = NameAndType        #263:#312    // "<init>":(Ljava/lang/Object;)V
   #314 = Methodref          #311.#313    // scala/Some."<init>":(Ljava/lang/Object;)V
   #315 = Utf8               (Lscala/Option;)Lcoursier/cache/FileCache;
   #316 = NameAndType        #307:#315    // withTtl:(Lscala/Option;)Lcoursier/cache/FileCache;
   #317 = Methodref          #2.#316      // coursier/cache/FileCache.withTtl:(Lscala/Option;)Lcoursier/cache/FileCache;
   #318 = Utf8               Lscala/concurrent/duration/Duration;
   #319 = Utf8               withSslSocketFactory
   #320 = Utf8               (Ljavax/net/ssl/SSLSocketFactory;)Lcoursier/cache/FileCache;
   #321 = Utf8               (Ljavax/net/ssl/SSLSocketFactory;)Lcoursier/cache/FileCache<TF;>;
   #322 = Utf8               sslSocketFactory
   #323 = Utf8               withSslSocketFactoryOpt
   #324 = NameAndType        #323:#315    // withSslSocketFactoryOpt:(Lscala/Option;)Lcoursier/cache/FileCache;
   #325 = Methodref          #2.#324      // coursier/cache/FileCache.withSslSocketFactoryOpt:(Lscala/Option;)Lcoursier/cache/FileCache;
   #326 = Utf8               Ljavax/net/ssl/SSLSocketFactory;
   #327 = Utf8               withHostnameVerifier
   #328 = Utf8               (Ljavax/net/ssl/HostnameVerifier;)Lcoursier/cache/FileCache;
   #329 = Utf8               (Ljavax/net/ssl/HostnameVerifier;)Lcoursier/cache/FileCache<TF;>;
   #330 = Utf8               hostnameVerifier
   #331 = Utf8               withHostnameVerifierOpt
   #332 = NameAndType        #331:#315    // withHostnameVerifierOpt:(Lscala/Option;)Lcoursier/cache/FileCache;
   #333 = Methodref          #2.#332      // coursier/cache/FileCache.withHostnameVerifierOpt:(Lscala/Option;)Lcoursier/cache/FileCache;
   #334 = Utf8               Ljavax/net/ssl/HostnameVerifier;
   #335 = Utf8               withMaxRedirections
   #336 = Utf8               (I)Lcoursier/cache/FileCache;
   #337 = Utf8               (I)Lcoursier/cache/FileCache<TF;>;
   #338 = Utf8               max
   #339 = Utf8               scala/runtime/BoxesRunTime
   #340 = Class              #339         // scala/runtime/BoxesRunTime
   #341 = Utf8               boxToInteger
   #342 = Utf8               (I)Ljava/lang/Integer;
   #343 = NameAndType        #341:#342    // boxToInteger:(I)Ljava/lang/Integer;
   #344 = Methodref          #340.#343    // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
   #345 = NameAndType        #335:#315    // withMaxRedirections:(Lscala/Option;)Lcoursier/cache/FileCache;
   #346 = Methodref          #2.#345      // coursier/cache/FileCache.withMaxRedirections:(Lscala/Option;)Lcoursier/cache/FileCache;
   #347 = Utf8               localFile
   #348 = Utf8               (Ljava/lang/String;Lscala/Option;)Ljava/io/File;
   #349 = Utf8               (Ljava/lang/String;Lscala/Option<Ljava/lang/String;>;)Ljava/io/File;
   #350 = Utf8               url
   #351 = Utf8               user
   #352 = NameAndType        #63:#145     // location:()Ljava/io/File;
   #353 = Methodref          #2.#352      // coursier/cache/FileCache.location:()Ljava/io/File;
   #354 = NameAndType        #78:#168     // localArtifactsShouldBeCached:()Z
   #355 = Methodref          #2.#354      // coursier/cache/FileCache.localArtifactsShouldBeCached:()Z
   #356 = Utf8               localFile0
   #357 = Utf8               (Ljava/lang/String;Ljava/io/File;Lscala/Option;Z)Ljava/io/File;
   #358 = NameAndType        #356:#357    // localFile0:(Ljava/lang/String;Ljava/io/File;Lscala/Option;Z)Ljava/io/File;
   #359 = Methodref          #106.#358    // coursier/cache/FileCache$.localFile0:(Ljava/lang/String;Ljava/io/File;Lscala/Option;Z)Ljava/io/File;
   #360 = Utf8               localFile$default$2
   #361 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
   #362 = Utf8               scala/None$
   #363 = Class              #362         // scala/None$
   #364 = Utf8               Lscala/None$;
   #365 = NameAndType        #107:#364    // MODULE$:Lscala/None$;
   #366 = Fieldref           #363.#365    // scala/None$.MODULE$:Lscala/None$;
   #367 = Utf8               loggerOpt
   #368 = Utf8               ()Lscala/Some;
   #369 = Utf8               ()Lscala/Some<Lcoursier/cache/CacheLogger;>;
   #370 = NameAndType        #71:#158     // logger:()Lcoursier/cache/CacheLogger;
   #371 = Methodref          #2.#370      // coursier/cache/FileCache.logger:()Lcoursier/cache/CacheLogger;
   #372 = NameAndType        #97:#59      // checksums0:Lscala/collection/immutable/Seq;
   #373 = Fieldref           #2.#372      // coursier/cache/FileCache.checksums0:Lscala/collection/immutable/Seq;
   #374 = Utf8               ()Lscala/collection/immutable/Seq<Ljava/lang/String;>;
   #375 = NameAndType        #98:#59      // actualChecksums:Lscala/collection/immutable/Seq;
   #376 = Fieldref           #2.#375      // coursier/cache/FileCache.actualChecksums:Lscala/collection/immutable/Seq;
   #377 = Utf8               download
   #378 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Ljava/lang/Object;
   #379 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)TF;
   #380 = Utf8               artifact
   #381 = Utf8               cachePolicy
   #382 = Utf8               coursier/cache/internal/Downloader$
   #383 = Class              #382         // coursier/cache/internal/Downloader$
   #384 = Utf8               Lcoursier/cache/internal/Downloader$;
   #385 = NameAndType        #107:#384    // MODULE$:Lcoursier/cache/internal/Downloader$;
   #386 = Fieldref           #383.#385    // coursier/cache/internal/Downloader$.MODULE$:Lcoursier/cache/internal/Downloader$;
   #387 = NameAndType        #98:#148     // actualChecksums:()Lscala/collection/immutable/Seq;
   #388 = Methodref          #2.#387      // coursier/cache/FileCache.actualChecksums:()Lscala/collection/immutable/Seq;
   #389 = NameAndType        #237:#238    // allCredentials:()Ljava/lang/Object;
   #390 = Methodref          #2.#389      // coursier/cache/FileCache.allCredentials:()Ljava/lang/Object;
   #391 = NameAndType        #73:#161     // pool:()Ljava/util/concurrent/ExecutorService;
   #392 = Methodref          #2.#391      // coursier/cache/FileCache.pool:()Ljava/util/concurrent/ExecutorService;
   #393 = NameAndType        #75:#164     // ttl:()Lscala/Option;
   #394 = Methodref          #2.#393      // coursier/cache/FileCache.ttl:()Lscala/Option;
   #395 = NameAndType        #80:#168     // followHttpToHttpsRedirections:()Z
   #396 = Methodref          #2.#395      // coursier/cache/FileCache.followHttpToHttpsRedirections:()Z
   #397 = NameAndType        #81:#168     // followHttpsToHttpRedirections:()Z
   #398 = Methodref          #2.#397      // coursier/cache/FileCache.followHttpsToHttpRedirections:()Z
   #399 = NameAndType        #82:#164     // maxRedirections:()Lscala/Option;
   #400 = Methodref          #2.#399      // coursier/cache/FileCache.maxRedirections:()Lscala/Option;
   #401 = NameAndType        #84:#178     // sslRetry:()I
   #402 = Methodref          #2.#401      // coursier/cache/FileCache.sslRetry:()I
   #403 = NameAndType        #86:#164     // sslSocketFactoryOpt:()Lscala/Option;
   #404 = Methodref          #2.#403      // coursier/cache/FileCache.sslSocketFactoryOpt:()Lscala/Option;
   #405 = NameAndType        #88:#164     // hostnameVerifierOpt:()Lscala/Option;
   #406 = Methodref          #2.#405      // coursier/cache/FileCache.hostnameVerifierOpt:()Lscala/Option;
   #407 = NameAndType        #91:#178     // bufferSize:()I
   #408 = Methodref          #2.#407      // coursier/cache/FileCache.bufferSize:()I
   #409 = NameAndType        #92:#148     // classLoaders:()Lscala/collection/immutable/Seq;
   #410 = Methodref          #2.#409      // coursier/cache/FileCache.classLoaders:()Lscala/collection/immutable/Seq;
   #411 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;Ljava/io/File;Lscala/collection/immutable/Seq;Ljava/lang/Object;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;ILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/internal/Downloader;
   #412 = NameAndType        #102:#411    // apply:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;Ljava/io/File;Lscala/collection/immutable/Seq;Ljava/lang/Object;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;ILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/internal/Downloader;
   #413 = Methodref          #383.#412    // coursier/cache/internal/Downloader$.apply:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;Ljava/io/File;Lscala/collection/immutable/Seq;Ljava/lang/Object;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;ILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/internal/Downloader;
   #414 = Utf8               coursier/cache/internal/Downloader
   #415 = Class              #414         // coursier/cache/internal/Downloader
   #416 = NameAndType        #377:#238    // download:()Ljava/lang/Object;
   #417 = Methodref          #415.#416    // coursier/cache/internal/Downloader.download:()Ljava/lang/Object;
   #418 = Utf8               Lcoursier/util/Artifact;
   #419 = Utf8               Lcoursier/cache/CachePolicy;
   #420 = Utf8               validateChecksum
   #421 = Utf8               (Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT;
   #422 = Utf8               (Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Lscala/runtime/BoxedUnit;>;
   #423 = Utf8               sumType
   #424 = Utf8               coursier/util/Artifact
   #425 = Class              #424         // coursier/util/Artifact
   #426 = NameAndType        #350:#298    // url:()Ljava/lang/String;
   #427 = Methodref          #425.#426    // coursier/util/Artifact.url:()Ljava/lang/String;
   #428 = Utf8               authentication
   #429 = NameAndType        #428:#164    // authentication:()Lscala/Option;
   #430 = Methodref          #425.#429    // coursier/util/Artifact.authentication:()Lscala/Option;
   #431 = Utf8               $anonfun$validateChecksum$1
   #432 = Utf8               (Lcoursier/core/Authentication;)Ljava/lang/String;
   #433 = NameAndType        #431:#432    // $anonfun$validateChecksum$1:(Lcoursier/core/Authentication;)Ljava/lang/String;
   #434 = Methodref          #2.#433      // coursier/cache/FileCache.$anonfun$validateChecksum$1:(Lcoursier/core/Authentication;)Ljava/lang/String;
   #435 = MethodHandle       6:#434       // REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$1:(Lcoursier/core/Authentication;)Ljava/lang/String;
   #436 = MethodType         #432         //  (Lcoursier/core/Authentication;)Ljava/lang/String;
   #437 = InvokeDynamic      #2:#223      // #2:apply:()Lscala/Function1;
   #438 = Utf8               scala/Option
   #439 = Class              #438         // scala/Option
   #440 = Utf8               map
   #441 = Utf8               (Lscala/Function1;)Lscala/Option;
   #442 = NameAndType        #440:#441    // map:(Lscala/Function1;)Lscala/Option;
   #443 = Methodref          #439.#442    // scala/Option.map:(Lscala/Function1;)Lscala/Option;
   #444 = NameAndType        #347:#348    // localFile:(Ljava/lang/String;Lscala/Option;)Ljava/io/File;
   #445 = Methodref          #2.#444      // coursier/cache/FileCache.localFile:(Ljava/lang/String;Lscala/Option;)Ljava/io/File;
   #446 = Utf8               scala/collection/immutable/$colon$colon
   #447 = Class              #446         // scala/collection/immutable/$colon$colon
   #448 = Utf8               auxiliaryFile
   #449 = Utf8               (Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
   #450 = NameAndType        #448:#449    // auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
   #451 = Methodref          #106.#450    // coursier/cache/FileCache$.auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
   #452 = Utf8               (Ljava/lang/Object;Lscala/collection/immutable/List;)V
   #453 = NameAndType        #263:#452    // "<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
   #454 = Methodref          #447.#453    // scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
   #455 = Utf8               checksumUrls
   #456 = Utf8               ()Lscala/collection/immutable/Map;
   #457 = NameAndType        #455:#456    // checksumUrls:()Lscala/collection/immutable/Map;
   #458 = Methodref          #425.#457    // coursier/util/Artifact.checksumUrls:()Lscala/collection/immutable/Map;
   #459 = Utf8               scala/collection/immutable/Map
   #460 = Class              #459         // scala/collection/immutable/Map
   #461 = Utf8               get
   #462 = Utf8               (Ljava/lang/Object;)Lscala/Option;
   #463 = NameAndType        #461:#462    // get:(Ljava/lang/Object;)Lscala/Option;
   #464 = InterfaceMethodref #460.#463    // scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
   #465 = Utf8               $anonfun$validateChecksum$2
   #466 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
   #467 = NameAndType        #465:#466    // $anonfun$validateChecksum$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
   #468 = Methodref          #2.#467      // coursier/cache/FileCache.$anonfun$validateChecksum$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
   #469 = MethodHandle       6:#468       // REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
   #470 = Utf8               (Ljava/lang/String;)Ljava/io/File;
   #471 = MethodType         #470         //  (Ljava/lang/String;)Ljava/io/File;
   #472 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
   #473 = NameAndType        #102:#472    // apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
   #474 = InvokeDynamic      #3:#473      // #3:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
   #475 = Utf8               coursier/util/EitherT
   #476 = Class              #475         // coursier/util/EitherT
   #477 = Utf8               $anonfun$validateChecksum$4
   #478 = Utf8               (Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
   #479 = NameAndType        #477:#478    // $anonfun$validateChecksum$4:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
   #480 = Methodref          #2.#479      // coursier/cache/FileCache.$anonfun$validateChecksum$4:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
   #481 = MethodHandle       6:#480       // REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$4:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
   #482 = Utf8               ()Lscala/util/Either;
   #483 = MethodType         #482         //  ()Lscala/util/Either;
   #484 = Utf8               (Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/Function0;
   #485 = NameAndType        #102:#484    // apply:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/Function0;
   #486 = InvokeDynamic      #4:#485      // #4:apply:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/Function0;
   #487 = Utf8               schedule
   #488 = Utf8               (Ljava/util/concurrent/ExecutorService;Lscala/Function0;)Ljava/lang/Object;
   #489 = NameAndType        #487:#488    // schedule:(Ljava/util/concurrent/ExecutorService;Lscala/Function0;)Ljava/lang/Object;
   #490 = InterfaceMethodref #253.#489    // coursier/util/Sync.schedule:(Ljava/util/concurrent/ExecutorService;Lscala/Function0;)Ljava/lang/Object;
   #491 = Methodref          #476.#313    // coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
   #492 = Utf8               headerSumFile
   #493 = Utf8               downloadedSumFile
   #494 = Utf8               filePerPolicy
   #495 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
   #496 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
   #497 = Utf8               policy
   #498 = Utf8               Lcoursier/util/Monad$ops$;
   #499 = NameAndType        #107:#498    // MODULE$:Lcoursier/util/Monad$ops$;
   #500 = Fieldref           #38.#499     // coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
   #501 = Utf8               toAllMonadOps
   #502 = Utf8               (Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #503 = NameAndType        #501:#502    // toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #504 = Methodref          #38.#503     // coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
   #505 = Utf8               $anonfun$filePerPolicy$1
   #506 = Utf8               (Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
   #507 = NameAndType        #505:#506    // $anonfun$filePerPolicy$1:(Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
   #508 = Methodref          #2.#507      // coursier/cache/FileCache.$anonfun$filePerPolicy$1:(Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
   #509 = MethodHandle       6:#508       // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$1:(Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
   #510 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
   #511 = MethodType         #510         //  (Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
   #512 = Utf8               (Lcoursier/util/Artifact;)Lscala/Function1;
   #513 = NameAndType        #102:#512    // apply:(Lcoursier/util/Artifact;)Lscala/Function1;
   #514 = InvokeDynamic      #5:#513      // #5:apply:(Lcoursier/util/Artifact;)Lscala/Function1;
   #515 = NameAndType        #440:#228    // map:(Lscala/Function1;)Ljava/lang/Object;
   #516 = InterfaceMethodref #33.#515     // coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
   #517 = Utf8               $anonfun$filePerPolicy$4
   #518 = Utf8               (Lcoursier/util/Artifact;)Lscala/util/Right;
   #519 = NameAndType        #517:#518    // $anonfun$filePerPolicy$4:(Lcoursier/util/Artifact;)Lscala/util/Right;
   #520 = Methodref          #2.#519      // coursier/cache/FileCache.$anonfun$filePerPolicy$4:(Lcoursier/util/Artifact;)Lscala/util/Right;
   #521 = MethodHandle       6:#520       // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$4:(Lcoursier/util/Artifact;)Lscala/util/Right;
   #522 = MethodType         #518         //  (Lcoursier/util/Artifact;)Lscala/util/Right;
   #523 = InvokeDynamic      #6:#223      // #6:apply:()Lscala/Function1;
   #524 = Utf8               $anonfun$filePerPolicy$5
   #525 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #526 = NameAndType        #524:#525    // $anonfun$filePerPolicy$5:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #527 = Methodref          #2.#526      // coursier/cache/FileCache.$anonfun$filePerPolicy$5:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #528 = MethodHandle       6:#527       // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$5:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #529 = Utf8               (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #530 = MethodType         #529         //  (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #531 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
   #532 = NameAndType        #102:#531    // apply:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
   #533 = InvokeDynamic      #7:#532      // #7:apply:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
   #534 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #535 = NameAndType        #227:#534    // flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #536 = Methodref          #476.#535    // coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #537 = Utf8               artifact0
   #538 = Utf8               Ljava/lang/Object;
   #539 = Utf8               filePerPolicy0
   #540 = NameAndType        #377:#378    // download:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Ljava/lang/Object;
   #541 = Methodref          #2.#540      // coursier/cache/FileCache.download:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Ljava/lang/Object;
   #542 = Utf8               $anonfun$filePerPolicy0$1
   #543 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
   #544 = NameAndType        #542:#543    // $anonfun$filePerPolicy0$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
   #545 = Methodref          #2.#544      // coursier/cache/FileCache.$anonfun$filePerPolicy0$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
   #546 = MethodHandle       6:#545       // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
   #547 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/util/Either;
   #548 = MethodType         #547         //  (Lscala/collection/immutable/Seq;)Lscala/util/Either;
   #549 = InvokeDynamic      #8:#473      // #8:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
   #550 = Utf8               $anonfun$filePerPolicy0$8
   #551 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
   #552 = NameAndType        #550:#551    // $anonfun$filePerPolicy0$8:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
   #553 = Methodref          #2.#552      // coursier/cache/FileCache.$anonfun$filePerPolicy0$8:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
   #554 = MethodHandle       6:#553       // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$8:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
   #555 = Utf8               (Lscala/Tuple2;)Lcoursier/util/EitherT;
   #556 = MethodType         #555         //  (Lscala/Tuple2;)Lcoursier/util/EitherT;
   #557 = InvokeDynamic      #9:#473      // #9:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
   #558 = Utf8               $anonfun$filePerPolicy0$10
   #559 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
   #560 = NameAndType        #558:#559    // $anonfun$filePerPolicy0$10:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
   #561 = Methodref          #2.#560      // coursier/cache/FileCache.$anonfun$filePerPolicy0$10:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
   #562 = MethodHandle       6:#561       // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$10:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
   #563 = Utf8               (Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
   #564 = MethodType         #563         //  (Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
   #565 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lscala/Function1;
   #566 = NameAndType        #102:#565    // apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lscala/Function1;
   #567 = InvokeDynamic      #10:#566     // #10:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lscala/Function1;
   #568 = Utf8               leftFlatMap
   #569 = NameAndType        #568:#534    // leftFlatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #570 = Methodref          #476.#569    // coursier/util/EitherT.leftFlatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #571 = Utf8               file
   #572 = Utf8               (Lcoursier/util/Artifact;)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
   #573 = NameAndType        #90:#178     // retry:()I
   #574 = Methodref          #2.#573      // coursier/cache/FileCache.retry:()I
   #575 = Utf8               (Lcoursier/util/Artifact;I)Lcoursier/util/EitherT;
   #576 = NameAndType        #571:#575    // file:(Lcoursier/util/Artifact;I)Lcoursier/util/EitherT;
   #577 = Methodref          #2.#576      // coursier/cache/FileCache.file:(Lcoursier/util/Artifact;I)Lcoursier/util/EitherT;
   #578 = Utf8               (Lcoursier/util/Artifact;I)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
   #579 = NameAndType        #65:#148     // cachePolicies:()Lscala/collection/immutable/Seq;
   #580 = Methodref          #2.#579      // coursier/cache/FileCache.cachePolicies:()Lscala/collection/immutable/Seq;
   #581 = Utf8               tail
   #582 = NameAndType        #581:#238    // tail:()Ljava/lang/Object;
   #583 = InterfaceMethodref #226.#582    // scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
   #584 = Utf8               scala/collection/IterableOps
   #585 = Class              #584         // scala/collection/IterableOps
   #586 = Utf8               $anonfun$file$1
   #587 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #588 = NameAndType        #586:#587    // $anonfun$file$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #589 = Methodref          #2.#588      // coursier/cache/FileCache.$anonfun$file$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #590 = MethodHandle       6:#589       // REF_invokeStatic coursier/cache/FileCache.$anonfun$file$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #591 = Utf8               (Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #592 = MethodType         #591         //  (Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #593 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;I)Lscala/Function1;
   #594 = NameAndType        #102:#593    // apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;I)Lscala/Function1;
   #595 = InvokeDynamic      #11:#594     // #11:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;I)Lscala/Function1;
   #596 = InterfaceMethodref #585.#515    // scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
   #597 = Utf8               scala/collection/IterableOnceOps
   #598 = Class              #597         // scala/collection/IterableOnceOps
   #599 = Utf8               head
   #600 = NameAndType        #599:#238    // head:()Ljava/lang/Object;
   #601 = InterfaceMethodref #226.#600    // scala/collection/immutable/Seq.head:()Ljava/lang/Object;
   #602 = Utf8               coursier/cache/CachePolicy
   #603 = Class              #602         // coursier/cache/CachePolicy
   #604 = NameAndType        #494:#495    // filePerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
   #605 = Methodref          #2.#604      // coursier/cache/FileCache.filePerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
   #606 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #607 = MethodType         #606         //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #608 = Utf8               $anonfun$file$2
   #609 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
   #610 = NameAndType        #608:#609    // $anonfun$file$2:(Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
   #611 = Methodref          #2.#610      // coursier/cache/FileCache.$anonfun$file$2:(Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
   #612 = MethodHandle       6:#611       // REF_invokeStatic coursier/cache/FileCache.$anonfun$file$2:(Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
   #613 = Utf8               (Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
   #614 = MethodType         #613         //  (Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
   #615 = Utf8               (Lcoursier/cache/FileCache;)Lscala/Function2;
   #616 = NameAndType        #102:#615    // apply:(Lcoursier/cache/FileCache;)Lscala/Function2;
   #617 = InvokeDynamic      #12:#616     // #12:apply:(Lcoursier/cache/FileCache;)Lscala/Function2;
   #618 = Utf8               foldLeft
   #619 = Utf8               (Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #620 = NameAndType        #618:#619    // foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #621 = InterfaceMethodref #598.#620    // scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
   #622 = Utf8               filePerPolicy$default$3
   #623 = Utf8               filePerPolicy0$default$3
   #624 = Utf8               fetchPerPolicy
   #625 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
   #626 = Utf8               (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;
   #627 = Utf8               /.links
   #628 = String             #627         // /.links
   #629 = Utf8               java/lang/String
   #630 = Class              #629         // java/lang/String
   #631 = Utf8               endsWith
   #632 = Utf8               (Ljava/lang/String;)Z
   #633 = NameAndType        #631:#632    // endsWith:(Ljava/lang/String;)Z
   #634 = Methodref          #630.#633    // java/lang/String.endsWith:(Ljava/lang/String;)Z
   #635 = Utf8               scala/Tuple2
   #636 = Class              #635         // scala/Tuple2
   #637 = Utf8               scala/collection/StringOps$
   #638 = Class              #637         // scala/collection/StringOps$
   #639 = Utf8               Lscala/collection/StringOps$;
   #640 = NameAndType        #107:#639    // MODULE$:Lscala/collection/StringOps$;
   #641 = Fieldref           #638.#640    // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #642 = Utf8               scala/Predef$
   #643 = Class              #642         // scala/Predef$
   #644 = Utf8               Lscala/Predef$;
   #645 = NameAndType        #107:#644    // MODULE$:Lscala/Predef$;
   #646 = Fieldref           #643.#645    // scala/Predef$.MODULE$:Lscala/Predef$;
   #647 = Utf8               augmentString
   #648 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #649 = NameAndType        #647:#648    // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #650 = Methodref          #643.#649    // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #651 = Utf8               .links
   #652 = String             #651         // .links
   #653 = Utf8               stripSuffix$extension
   #654 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #655 = NameAndType        #653:#654    // stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #656 = Methodref          #638.#655    // scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #657 = Utf8               withUrl
   #658 = Utf8               (Ljava/lang/String;)Lcoursier/util/Artifact;
   #659 = NameAndType        #657:#658    // withUrl:(Ljava/lang/String;)Lcoursier/util/Artifact;
   #660 = Methodref          #425.#659    // coursier/util/Artifact.withUrl:(Ljava/lang/String;)Lcoursier/util/Artifact;
   #661 = Utf8               boxToBoolean
   #662 = Utf8               (Z)Ljava/lang/Boolean;
   #663 = NameAndType        #661:#662    // boxToBoolean:(Z)Ljava/lang/Boolean;
   #664 = Methodref          #340.#663    // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
   #665 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #666 = NameAndType        #263:#665    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #667 = Methodref          #636.#666    // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
   #668 = Utf8               _1
   #669 = NameAndType        #668:#238    // _1:()Ljava/lang/Object;
   #670 = Methodref          #636.#669    // scala/Tuple2._1:()Ljava/lang/Object;
   #671 = Utf8               _2$mcZ$sp
   #672 = NameAndType        #671:#168    // _2$mcZ$sp:()Z
   #673 = Methodref          #636.#672    // scala/Tuple2._2$mcZ$sp:()Z
   #674 = Utf8               scala/MatchError
   #675 = Class              #674         // scala/MatchError
   #676 = Methodref          #675.#313    // scala/MatchError."<init>":(Ljava/lang/Object;)V
   #677 = NameAndType        #622:#178    // filePerPolicy$default$3:()I
   #678 = Methodref          #2.#677      // coursier/cache/FileCache.filePerPolicy$default$3:()I
   #679 = Utf8               $anonfun$fetchPerPolicy$1
   #680 = Utf8               (Lcoursier/cache/ArtifactError;)Ljava/lang/String;
   #681 = NameAndType        #679:#680    // $anonfun$fetchPerPolicy$1:(Lcoursier/cache/ArtifactError;)Ljava/lang/String;
   #682 = Methodref          #2.#681      // coursier/cache/FileCache.$anonfun$fetchPerPolicy$1:(Lcoursier/cache/ArtifactError;)Ljava/lang/String;
   #683 = MethodHandle       6:#682       // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$1:(Lcoursier/cache/ArtifactError;)Ljava/lang/String;
   #684 = MethodType         #680         //  (Lcoursier/cache/ArtifactError;)Ljava/lang/String;
   #685 = InvokeDynamic      #13:#223     // #13:apply:()Lscala/Function1;
   #686 = Utf8               leftMap
   #687 = NameAndType        #686:#534    // leftMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #688 = Methodref          #476.#687    // coursier/util/EitherT.leftMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #689 = Utf8               $anonfun$fetchPerPolicy$2
   #690 = Utf8               (Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
   #691 = NameAndType        #689:#690    // $anonfun$fetchPerPolicy$2:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
   #692 = Methodref          #2.#691      // coursier/cache/FileCache.$anonfun$fetchPerPolicy$2:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
   #693 = MethodHandle       6:#692       // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$2:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
   #694 = Utf8               (Ljava/io/File;)Lcoursier/util/EitherT;
   #695 = MethodType         #694         //  (Ljava/io/File;)Lcoursier/util/EitherT;
   #696 = Utf8               (Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;)Lscala/Function1;
   #697 = NameAndType        #102:#696    // apply:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;)Lscala/Function1;
   #698 = InvokeDynamic      #14:#697     // #14:apply:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;)Lscala/Function1;
   #699 = Utf8               links
   #700 = Utf8               fetch
   #701 = Utf8               ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;
   #702 = Utf8               $anonfun$fetch$1
   #703 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #704 = NameAndType        #702:#703    // $anonfun$fetch$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #705 = Methodref          #2.#704      // coursier/cache/FileCache.$anonfun$fetch$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #706 = MethodHandle       6:#705       // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
   #707 = Utf8               (Lcoursier/cache/FileCache;)Lscala/Function1;
   #708 = NameAndType        #102:#707    // apply:(Lcoursier/cache/FileCache;)Lscala/Function1;
   #709 = InvokeDynamic      #15:#708     // #15:apply:(Lcoursier/cache/FileCache;)Lscala/Function1;
   #710 = Utf8               fetchs
   #711 = Utf8               ()Lscala/collection/immutable/Seq<Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;>;
   #712 = Utf8               $anonfun$fetchs$1
   #713 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
   #714 = NameAndType        #712:#713    // $anonfun$fetchs$1:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
   #715 = Methodref          #2.#714      // coursier/cache/FileCache.$anonfun$fetchs$1:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
   #716 = MethodHandle       6:#715       // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchs$1:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
   #717 = Utf8               (Lcoursier/cache/CachePolicy;)Lscala/Function1;
   #718 = MethodType         #717         //  (Lcoursier/cache/CachePolicy;)Lscala/Function1;
   #719 = InvokeDynamic      #16:#708     // #16:apply:(Lcoursier/cache/FileCache;)Lscala/Function1;
   #720 = InterfaceMethodref #226.#515    // scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
   #721 = Utf8               ec$lzycompute
   #722 = Utf8               ()Lscala/concurrent/ExecutionContextExecutorService;
   #723 = Utf8               scala/concurrent/ExecutionContext$
   #724 = Class              #723         // scala/concurrent/ExecutionContext$
   #725 = Utf8               Lscala/concurrent/ExecutionContext$;
   #726 = NameAndType        #107:#725    // MODULE$:Lscala/concurrent/ExecutionContext$;
   #727 = Fieldref           #724.#726    // scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
   #728 = Utf8               fromExecutorService
   #729 = Utf8               (Ljava/util/concurrent/ExecutorService;)Lscala/concurrent/ExecutionContextExecutorService;
   #730 = NameAndType        #728:#729    // fromExecutorService:(Ljava/util/concurrent/ExecutorService;)Lscala/concurrent/ExecutionContextExecutorService;
   #731 = Methodref          #724.#730    // scala/concurrent/ExecutionContext$.fromExecutorService:(Ljava/util/concurrent/ExecutorService;)Lscala/concurrent/ExecutionContextExecutorService;
   #732 = NameAndType        #61:#62      // ec:Lscala/concurrent/ExecutionContextExecutorService;
   #733 = Fieldref           #2.#732      // coursier/cache/FileCache.ec:Lscala/concurrent/ExecutionContextExecutorService;
   #734 = NameAndType        #721:#722    // ec$lzycompute:()Lscala/concurrent/ExecutionContextExecutorService;
   #735 = Methodref          #2.#734      // coursier/cache/FileCache.ec$lzycompute:()Lscala/concurrent/ExecutionContextExecutorService;
   #736 = Utf8               scala/concurrent/ExecutionContextExecutorService
   #737 = Class              #736         // scala/concurrent/ExecutionContextExecutorService
   #738 = NameAndType        #67:#148     // checksums:()Lscala/collection/immutable/Seq;
   #739 = Methodref          #2.#738      // coursier/cache/FileCache.checksums:()Lscala/collection/immutable/Seq;
   #740 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
   #741 = NameAndType        #263:#740    // "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
   #742 = Methodref          #2.#741      // coursier/cache/FileCache."<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
   #743 = Utf8               withCachePolicies
   #744 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;)Lcoursier/cache/FileCache<TF;>;
   #745 = Utf8               withChecksums
   #746 = Utf8               (Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;)Lcoursier/cache/FileCache<TF;>;
   #747 = Utf8               withLogger
   #748 = Utf8               (Lcoursier/cache/CacheLogger;)Lcoursier/cache/FileCache;
   #749 = Utf8               (Lcoursier/cache/CacheLogger;)Lcoursier/cache/FileCache<TF;>;
   #750 = Utf8               withPool
   #751 = Utf8               (Ljava/util/concurrent/ExecutorService;)Lcoursier/cache/FileCache;
   #752 = Utf8               (Ljava/util/concurrent/ExecutorService;)Lcoursier/cache/FileCache<TF;>;
   #753 = Utf8               (Lscala/Option<Lscala/concurrent/duration/Duration;>;)Lcoursier/cache/FileCache<TF;>;
   #754 = Utf8               withLocalArtifactsShouldBeCached
   #755 = Utf8               (Z)Lcoursier/cache/FileCache;
   #756 = Utf8               (Z)Lcoursier/cache/FileCache<TF;>;
   #757 = Utf8               withFollowHttpToHttpsRedirections
   #758 = Utf8               withFollowHttpsToHttpRedirections
   #759 = Utf8               (Lscala/Option<Ljava/lang/Object;>;)Lcoursier/cache/FileCache<TF;>;
   #760 = Utf8               withSslRetry
   #761 = Utf8               (Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;)Lcoursier/cache/FileCache<TF;>;
   #762 = Utf8               (Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;)Lcoursier/cache/FileCache<TF;>;
   #763 = Utf8               withRetry
   #764 = Utf8               withBufferSize
   #765 = Utf8               withClassLoaders
   #766 = Utf8               (Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;)Lcoursier/cache/FileCache<TF;>;
   #767 = Utf8               withSync
   #768 = Utf8               (Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
   #769 = Utf8               toString
   #770 = Utf8               java/lang/StringBuilder
   #771 = Class              #770         // java/lang/StringBuilder
   #772 = Utf8               FileCache(
   #773 = String             #772         // FileCache(
   #774 = Methodref          #771.#265    // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
   #775 = Utf8               valueOf
   #776 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
   #777 = NameAndType        #775:#776    // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #778 = Methodref          #630.#777    // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
   #779 = Utf8               append
   #780 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #781 = NameAndType        #779:#780    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #782 = Methodref          #771.#781    // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #783 = Utf8               ,
   #784 = String             #783         // ,
   #785 = Utf8               (Z)Ljava/lang/String;
   #786 = NameAndType        #775:#785    // valueOf:(Z)Ljava/lang/String;
   #787 = Methodref          #630.#786    // java/lang/String.valueOf:(Z)Ljava/lang/String;
   #788 = Utf8               (I)Ljava/lang/String;
   #789 = NameAndType        #775:#788    // valueOf:(I)Ljava/lang/String;
   #790 = Methodref          #630.#789    // java/lang/String.valueOf:(I)Ljava/lang/String;
   #791 = Utf8               )
   #792 = String             #791         // )
   #793 = NameAndType        #769:#298    // toString:()Ljava/lang/String;
   #794 = Methodref          #771.#793    // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #795 = Utf8               b
   #796 = Utf8               Ljava/lang/StringBuilder;
   #797 = Utf8               canEqual
   #798 = Utf8               (Ljava/lang/Object;)Z
   #799 = Utf8               obj
   #800 = Utf8               equals
   #801 = NameAndType        #797:#798    // canEqual:(Ljava/lang/Object;)Z
   #802 = Methodref          #2.#801      // coursier/cache/FileCache.canEqual:(Ljava/lang/Object;)Z
   #803 = Utf8               java/lang/Object
   #804 = Class              #803         // java/lang/Object
   #805 = NameAndType        #800:#798    // equals:(Ljava/lang/Object;)Z
   #806 = Methodref          #804.#805    // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #807 = Utf8               coursier/cache/CacheLogger
   #808 = Class              #807         // coursier/cache/CacheLogger
   #809 = Utf8               java/util/concurrent/ExecutorService
   #810 = Class              #809         // java/util/concurrent/ExecutorService
   #811 = Utf8               other
   #812 = Utf8               hashCode
   #813 = Utf8               FileCache
   #814 = String             #813         // FileCache
   #815 = Utf8               scala/runtime/Statics
   #816 = Class              #815         // scala/runtime/Statics
   #817 = Utf8               anyHash
   #818 = Utf8               (Ljava/lang/Object;)I
   #819 = NameAndType        #817:#818    // anyHash:(Ljava/lang/Object;)I
   #820 = Methodref          #816.#819    // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
   #821 = Utf8               code
   #822 = Utf8               tuple
   #823 = Utf8               ()Lscala/Tuple18;
   #824 = Utf8               ()Lscala/Tuple18<Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Option<Ljava/lang/Object;>;Ljava/lang/Object;Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;>;
   #825 = Utf8               scala/Tuple18
   #826 = Class              #825         // scala/Tuple18
   #827 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #828 = NameAndType        #263:#827    // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #829 = Methodref          #826.#828    // scala/Tuple18."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
   #830 = Utf8               productPrefix
   #831 = Utf8               productArity
   #832 = Utf8               productElement
   #833 = Utf8               (I)Ljava/lang/Object;
   #834 = Utf8               n
   #835 = Utf8               java/lang/IndexOutOfBoundsException
   #836 = Class              #835         // java/lang/IndexOutOfBoundsException
   #837 = Methodref          #804.#793    // java/lang/Object.toString:()Ljava/lang/String;
   #838 = Methodref          #836.#265    // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
   #839 = Utf8               productElementName
   #840 = String             #63          // location
   #841 = String             #65          // cachePolicies
   #842 = String             #67          // checksums
   #843 = String             #69          // credentials
   #844 = String             #71          // logger
   #845 = String             #73          // pool
   #846 = String             #75          // ttl
   #847 = String             #78          // localArtifactsShouldBeCached
   #848 = String             #80          // followHttpToHttpsRedirections
   #849 = String             #81          // followHttpsToHttpRedirections
   #850 = String             #82          // maxRedirections
   #851 = String             #84          // sslRetry
   #852 = String             #86          // sslSocketFactoryOpt
   #853 = String             #88          // hostnameVerifierOpt
   #854 = String             #90          // retry
   #855 = String             #91          // bufferSize
   #856 = String             #92          // classLoaders
   #857 = String             #94          // sync
   #858 = Utf8               ()Lscala/concurrent/ExecutionContext;
   #859 = NameAndType        #61:#722     // ec:()Lscala/concurrent/ExecutionContextExecutorService;
   #860 = Methodref          #2.#859      // coursier/cache/FileCache.ec:()Lscala/concurrent/ExecutionContextExecutorService;
   #861 = NameAndType        #367:#368    // loggerOpt:()Lscala/Some;
   #862 = Methodref          #2.#861      // coursier/cache/FileCache.loggerOpt:()Lscala/Some;
   #863 = Utf8               x$1
   #864 = Utf8               coursier/credentials/Credentials
   #865 = Class              #864         // coursier/credentials/Credentials
   #866 = NameAndType        #461:#148    // get:()Lscala/collection/immutable/Seq;
   #867 = Methodref          #865.#866    // coursier/credentials/Credentials.get:()Lscala/collection/immutable/Seq;
   #868 = Utf8               Lcoursier/credentials/Credentials;
   #869 = Utf8               $this
   #870 = NameAndType        #58:#148     // allCredentials0:()Lscala/collection/immutable/Seq;
   #871 = Methodref          #2.#870      // coursier/cache/FileCache.allCredentials0:()Lscala/collection/immutable/Seq;
   #872 = Utf8               $anonfun$actualChecksums$1
   #873 = Utf8               (Lscala/Option;)Lscala/collection/immutable/Seq;
   #874 = Utf8               x$2
   #875 = Utf8               scala/Option$
   #876 = Class              #875         // scala/Option$
   #877 = Utf8               Lscala/Option$;
   #878 = NameAndType        #107:#877    // MODULE$:Lscala/Option$;
   #879 = Fieldref           #876.#878    // scala/Option$.MODULE$:Lscala/Option$;
   #880 = Utf8               option2Iterable
   #881 = Utf8               (Lscala/Option;)Lscala/collection/Iterable;
   #882 = NameAndType        #880:#881    // option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
   #883 = Methodref          #876.#882    // scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
   #884 = Utf8               scala/collection/Iterable
   #885 = Class              #884         // scala/collection/Iterable
   #886 = Utf8               toSeq
   #887 = NameAndType        #886:#148    // toSeq:()Lscala/collection/immutable/Seq;
   #888 = InterfaceMethodref #885.#887    // scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
   #889 = Utf8               x$3
   #890 = Utf8               coursier/core/Authentication
   #891 = Class              #890         // coursier/core/Authentication
   #892 = NameAndType        #351:#298    // user:()Ljava/lang/String;
   #893 = Methodref          #891.#892    // coursier/core/Authentication.user:()Ljava/lang/String;
   #894 = Utf8               Lcoursier/core/Authentication;
   #895 = Utf8               $anonfun$validateChecksum$3
   #896 = Utf8               x$4
   #897 = Utf8               artifact$1
   #898 = Utf8               sumUrl
   #899 = NameAndType        #895:#432    // $anonfun$validateChecksum$3:(Lcoursier/core/Authentication;)Ljava/lang/String;
   #900 = Methodref          #2.#899      // coursier/cache/FileCache.$anonfun$validateChecksum$3:(Lcoursier/core/Authentication;)Ljava/lang/String;
   #901 = MethodHandle       6:#900       // REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$3:(Lcoursier/core/Authentication;)Ljava/lang/String;
   #902 = InvokeDynamic      #17:#223     // #17:apply:()Lscala/Function1;
   #903 = Utf8               $anonfun$validateChecksum$5
   #904 = Utf8               (Ljava/io/File;)Z
   #905 = Utf8               x$5
   #906 = Utf8               exists
   #907 = NameAndType        #906:#168    // exists:()Z
   #908 = Methodref          #262.#907    // java/io/File.exists:()Z
   #909 = Utf8               headerSumFile$1
   #910 = Utf8               downloadedSumFile$1
   #911 = Utf8               sumType$1
   #912 = Utf8               localFile0$1
   #913 = Utf8               $anonfun$validateChecksum$5$adapted
   #914 = Utf8               (Ljava/io/File;)Ljava/lang/Object;
   #915 = NameAndType        #913:#914    // $anonfun$validateChecksum$5$adapted:(Ljava/io/File;)Ljava/lang/Object;
   #916 = Methodref          #2.#915      // coursier/cache/FileCache.$anonfun$validateChecksum$5$adapted:(Ljava/io/File;)Ljava/lang/Object;
   #917 = MethodHandle       6:#916       // REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$5$adapted:(Ljava/io/File;)Ljava/lang/Object;
   #918 = MethodType         #914         //  (Ljava/io/File;)Ljava/lang/Object;
   #919 = InvokeDynamic      #18:#223     // #18:apply:()Lscala/Function1;
   #920 = Utf8               find
   #921 = NameAndType        #920:#441    // find:(Lscala/Function1;)Lscala/Option;
   #922 = InterfaceMethodref #598.#921    // scala/collection/IterableOnceOps.find:(Lscala/Function1;)Lscala/Option;
   #923 = Utf8               value
   #924 = NameAndType        #923:#238    // value:()Ljava/lang/Object;
   #925 = Methodref          #311.#924    // scala/Some.value:()Ljava/lang/Object;
   #926 = Utf8               coursier/cache/CacheChecksum$
   #927 = Class              #926         // coursier/cache/CacheChecksum$
   #928 = Utf8               Lcoursier/cache/CacheChecksum$;
   #929 = NameAndType        #107:#928    // MODULE$:Lcoursier/cache/CacheChecksum$;
   #930 = Fieldref           #927.#929    // coursier/cache/CacheChecksum$.MODULE$:Lcoursier/cache/CacheChecksum$;
   #931 = Utf8               toPath
   #932 = Utf8               ()Ljava/nio/file/Path;
   #933 = NameAndType        #931:#932    // toPath:()Ljava/nio/file/Path;
   #934 = Methodref          #262.#933    // java/io/File.toPath:()Ljava/nio/file/Path;
   #935 = Utf8               java/nio/file/Files
   #936 = Class              #935         // java/nio/file/Files
   #937 = Utf8               readAllBytes
   #938 = Utf8               (Ljava/nio/file/Path;)[B
   #939 = NameAndType        #937:#938    // readAllBytes:(Ljava/nio/file/Path;)[B
   #940 = Methodref          #936.#939    // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
   #941 = Utf8               parseRawChecksum
   #942 = Utf8               ([B)Lscala/Option;
   #943 = NameAndType        #941:#942    // parseRawChecksum:([B)Lscala/Option;
   #944 = Methodref          #927.#943    // coursier/cache/CacheChecksum$.parseRawChecksum:([B)Lscala/Option;
   #945 = Utf8               scala/package$
   #946 = Class              #945         // scala/package$
   #947 = Utf8               Lscala/package$;
   #948 = NameAndType        #107:#947    // MODULE$:Lscala/package$;
   #949 = Fieldref           #946.#948    // scala/package$.MODULE$:Lscala/package$;
   #950 = Utf8               Left
   #951 = Utf8               ()Lscala/util/Left$;
   #952 = NameAndType        #950:#951    // Left:()Lscala/util/Left$;
   #953 = Methodref          #946.#952    // scala/package$.Left:()Lscala/util/Left$;
   #954 = Utf8               getPath
   #955 = NameAndType        #954:#298    // getPath:()Ljava/lang/String;
   #956 = Methodref          #262.#955    // java/io/File.getPath:()Ljava/lang/String;
   #957 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
   #958 = NameAndType        #263:#957    // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #959 = Methodref          #20.#958     // coursier/cache/ArtifactError$ChecksumFormatError."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #960 = Utf8               scala/util/Left$
   #961 = Class              #960         // scala/util/Left$
   #962 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
   #963 = NameAndType        #102:#962    // apply:(Ljava/lang/Object;)Lscala/util/Left;
   #964 = Methodref          #961.#963    // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
   #965 = Utf8               java/math/BigInteger
   #966 = Class              #965         // java/math/BigInteger
   #967 = Utf8               coursier$cache$FileCache$$persistedDigest
   #968 = Utf8               (Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Ljava/math/BigInteger;
   #969 = NameAndType        #967:#968    // coursier$cache$FileCache$$persistedDigest:(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Ljava/math/BigInteger;
   #970 = Methodref          #106.#969    // coursier/cache/FileCache$.coursier$cache$FileCache$$persistedDigest:(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Ljava/math/BigInteger;
   #971 = Utf8               equalsNumNum
   #972 = Utf8               (Ljava/lang/Number;Ljava/lang/Number;)Z
   #973 = NameAndType        #971:#972    // equalsNumNum:(Ljava/lang/Number;Ljava/lang/Number;)Z
   #974 = Methodref          #340.#973    // scala/runtime/BoxesRunTime.equalsNumNum:(Ljava/lang/Number;Ljava/lang/Number;)Z
   #975 = Utf8               Right
   #976 = Utf8               ()Lscala/util/Right$;
   #977 = NameAndType        #975:#976    // Right:()Lscala/util/Right$;
   #978 = Methodref          #946.#977    // scala/package$.Right:()Lscala/util/Right$;
   #979 = Utf8               scala/runtime/BoxedUnit
   #980 = Class              #979         // scala/runtime/BoxedUnit
   #981 = Utf8               UNIT
   #982 = Utf8               Lscala/runtime/BoxedUnit;
   #983 = NameAndType        #981:#982    // UNIT:Lscala/runtime/BoxedUnit;
   #984 = Fieldref           #980.#983    // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
   #985 = Utf8               scala/util/Right$
   #986 = Class              #985         // scala/util/Right$
   #987 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
   #988 = NameAndType        #102:#987    // apply:(Ljava/lang/Object;)Lscala/util/Right;
   #989 = Methodref          #986.#988    // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
   #990 = NameAndType        #769:#788    // toString:(I)Ljava/lang/String;
   #991 = Methodref          #966.#990    // java/math/BigInteger.toString:(I)Ljava/lang/String;
   #992 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #993 = NameAndType        #263:#992    // "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #994 = Methodref          #26.#993     // coursier/cache/ArtifactError$WrongChecksum."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #995 = Utf8               scala/util/Either
   #996 = Class              #995         // scala/util/Either
   #997 = Methodref          #23.#958     // coursier/cache/ArtifactError$ChecksumNotFound."<init>":(Ljava/lang/String;Ljava/lang/String;)V
   #998 = Utf8               calculatedSum
   #999 = Utf8               Ljava/math/BigInteger;
  #1000 = Utf8               sum
  #1001 = Utf8               sumOpt
  #1002 = Utf8               sumFile
  #1003 = Utf8               $anonfun$filePerPolicy$2
  #1004 = Utf8               (Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Z
  #1005 = Utf8               artifact$2
  #1006 = Utf8               x$6
  #1007 = Utf8               coursier/credentials/DirectCredentials
  #1008 = Class              #1007        // coursier/credentials/DirectCredentials
  #1009 = Utf8               autoMatches
  #1010 = Utf8               (Ljava/lang/String;Lscala/Option;)Z
  #1011 = NameAndType        #1009:#1010  // autoMatches:(Ljava/lang/String;Lscala/Option;)Z
  #1012 = Methodref          #1008.#1011  // coursier/credentials/DirectCredentials.autoMatches:(Ljava/lang/String;Lscala/Option;)Z
  #1013 = Utf8               Lcoursier/credentials/DirectCredentials;
  #1014 = Utf8               $anonfun$filePerPolicy$3
  #1015 = Utf8               (Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
  #1016 = Utf8               x$7
  #1017 = Utf8               ()Lcoursier/core/Authentication;
  #1018 = NameAndType        #428:#1017   // authentication:()Lcoursier/core/Authentication;
  #1019 = Methodref          #1008.#1018  // coursier/credentials/DirectCredentials.authentication:()Lcoursier/core/Authentication;
  #1020 = Utf8               isEmpty
  #1021 = NameAndType        #1020:#168   // isEmpty:()Z
  #1022 = Methodref          #439.#1021   // scala/Option.isEmpty:()Z
  #1023 = Utf8               $anonfun$filePerPolicy$2$adapted
  #1024 = Utf8               (Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  #1025 = NameAndType        #1023:#1024  // $anonfun$filePerPolicy$2$adapted:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  #1026 = Methodref          #2.#1025     // coursier/cache/FileCache.$anonfun$filePerPolicy$2$adapted:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  #1027 = MethodHandle       6:#1026      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$2$adapted:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  #1028 = Utf8               (Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  #1029 = MethodType         #1028        //  (Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  #1030 = InvokeDynamic      #19:#513     // #19:apply:(Lcoursier/util/Artifact;)Lscala/Function1;
  #1031 = InterfaceMethodref #226.#921    // scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
  #1032 = NameAndType        #1014:#1015  // $anonfun$filePerPolicy$3:(Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
  #1033 = Methodref          #2.#1032     // coursier/cache/FileCache.$anonfun$filePerPolicy$3:(Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
  #1034 = MethodHandle       6:#1033      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$3:(Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
  #1035 = MethodType         #1015        //  (Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
  #1036 = InvokeDynamic      #20:#223     // #20:apply:()Lscala/Function1;
  #1037 = Utf8               withAuthentication
  #1038 = Utf8               (Lscala/Option;)Lcoursier/util/Artifact;
  #1039 = NameAndType        #1037:#1038  // withAuthentication:(Lscala/Option;)Lcoursier/util/Artifact;
  #1040 = Methodref          #425.#1039   // coursier/util/Artifact.withAuthentication:(Lscala/Option;)Lcoursier/util/Artifact;
  #1041 = Utf8               authOpt
  #1042 = Utf8               x$8
  #1043 = Utf8               policy$1
  #1044 = Utf8               retry$1
  #1045 = Utf8               a
  #1046 = NameAndType        #539:#495    // filePerPolicy0:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
  #1047 = Methodref          #2.#1046     // coursier/cache/FileCache.filePerPolicy0:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
  #1048 = Utf8               $anonfun$filePerPolicy0$2
  #1049 = Utf8               (Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
  #1050 = Utf8               x0$1
  #1051 = Utf8               Lscala/Predef$ArrowAssoc$;
  #1052 = NameAndType        #107:#1051   // MODULE$:Lscala/Predef$ArrowAssoc$;
  #1053 = Fieldref           #46.#1052    // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #1054 = Utf8               coursier/cache/internal/DownloadResult
  #1055 = Class              #1054        // coursier/cache/internal/DownloadResult
  #1056 = Methodref          #1055.#426   // coursier/cache/internal/DownloadResult.url:()Ljava/lang/String;
  #1057 = Utf8               ArrowAssoc
  #1058 = NameAndType        #1057:#205   // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #1059 = Methodref          #643.#1058   // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #1060 = Utf8               errorOpt
  #1061 = NameAndType        #1060:#164   // errorOpt:()Lscala/Option;
  #1062 = Methodref          #1055.#1061  // coursier/cache/internal/DownloadResult.errorOpt:()Lscala/Option;
  #1063 = Utf8               $minus$greater$extension
  #1064 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #1065 = NameAndType        #1063:#1064  // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #1066 = Methodref          #46.#1065    // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #1067 = Utf8               Lcoursier/cache/internal/DownloadResult;
  #1068 = Utf8               $anonfun$filePerPolicy0$5
  #1069 = Utf8               (C)Z
  #1070 = Utf8               x$9
  #1071 = Utf8               C
  #1072 = Utf8               $anonfun$filePerPolicy0$4
  #1073 = Utf8               (Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
  #1074 = Utf8               artifact$3
  #1075 = Utf8               c$1
  #1076 = Utf8               (I)V
  #1077 = NameAndType        #263:#1076   // "<init>":(I)V
  #1078 = Methodref          #771.#1077   // java/lang/StringBuilder."<init>":(I)V
  #1079 = Utf8               .
  #1080 = String             #1079        // .
  #1081 = Utf8               java/util/Locale
  #1082 = Class              #1081        // java/util/Locale
  #1083 = Utf8               ROOT
  #1084 = Utf8               Ljava/util/Locale;
  #1085 = NameAndType        #1083:#1084  // ROOT:Ljava/util/Locale;
  #1086 = Fieldref           #1082.#1085  // java/util/Locale.ROOT:Ljava/util/Locale;
  #1087 = Utf8               toLowerCase
  #1088 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #1089 = NameAndType        #1087:#1088  // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #1090 = Methodref          #630.#1089   // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #1091 = Utf8               $anonfun$filePerPolicy0$5$adapted
  #1092 = NameAndType        #1091:#205   // $anonfun$filePerPolicy0$5$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #1093 = Methodref          #2.#1092     // coursier/cache/FileCache.$anonfun$filePerPolicy0$5$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #1094 = MethodHandle       6:#1093      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$5$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
  #1095 = InvokeDynamic      #21:#223     // #21:apply:()Lscala/Function1;
  #1096 = Utf8               filter$extension
  #1097 = Utf8               (Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #1098 = NameAndType        #1096:#1097  // filter$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #1099 = Methodref          #638.#1098   // scala/collection/StringOps$.filter$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
  #1100 = Utf8               $anonfun$filePerPolicy0$3
  #1101 = Utf8               (Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
  #1102 = Utf8               resultsMap$1
  #1103 = Utf8               x0$2
  #1104 = NameAndType        #1072:#1073  // $anonfun$filePerPolicy0$4:(Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
  #1105 = Methodref          #2.#1104     // coursier/cache/FileCache.$anonfun$filePerPolicy0$4:(Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
  #1106 = MethodHandle       6:#1105      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$4:(Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
  #1107 = MethodType         #298         //  ()Ljava/lang/String;
  #1108 = Utf8               (Lcoursier/util/Artifact;Ljava/lang/String;)Lscala/Function0;
  #1109 = NameAndType        #102:#1108   // apply:(Lcoursier/util/Artifact;Ljava/lang/String;)Lscala/Function0;
  #1110 = InvokeDynamic      #22:#1109    // #22:apply:(Lcoursier/util/Artifact;Ljava/lang/String;)Lscala/Function0;
  #1111 = Utf8               getOrElse
  #1112 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #1113 = NameAndType        #1111:#1112  // getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #1114 = InterfaceMethodref #460.#1113   // scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #1115 = Utf8               scala/Tuple3
  #1116 = Class              #1115        // scala/Tuple3
  #1117 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #1118 = NameAndType        #263:#1117   // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #1119 = Methodref          #1116.#1118  // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #1120 = Utf8               c
  #1121 = Utf8               Lscala/collection/immutable/Map;
  #1122 = Utf8               checksumErrors$1
  #1123 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #1124 = Utf8               checksumResults$1
  #1125 = Utf8               (Lcoursier/cache/FileCache;)V
  #1126 = NameAndType        #263:#1125   // "<init>":(Lcoursier/cache/FileCache;)V
  #1127 = Methodref          #31.#1126    // coursier/cache/FileCache$$anonfun$checksumErrors$1$1."<init>":(Lcoursier/cache/FileCache;)V
  #1128 = Utf8               collect
  #1129 = Utf8               (Lscala/PartialFunction;)Ljava/lang/Object;
  #1130 = NameAndType        #1128:#1129  // collect:(Lscala/PartialFunction;)Ljava/lang/Object;
  #1131 = InterfaceMethodref #226.#1130   // scala/collection/immutable/Seq.collect:(Lscala/PartialFunction;)Ljava/lang/Object;
  #1132 = Utf8               $anonfun$filePerPolicy0$6
  #1133 = Utf8               ()V
  #1134 = Utf8               $anonfun$filePerPolicy0$7
  #1135 = Utf8               (Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  #1136 = Utf8               checksum$1
  #1137 = Utf8               res$1
  #1138 = Utf8               x$10
  #1139 = NameAndType        #1122:#1123  // checksumErrors$1:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #1140 = Methodref          #2.#1139     // coursier/cache/FileCache.checksumErrors$1:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
  #1141 = Utf8               (Lscala/collection/immutable/Seq;)V
  #1142 = NameAndType        #263:#1141   // "<init>":(Lscala/collection/immutable/Seq;)V
  #1143 = Methodref          #15.#1142    // coursier/cache/ArtifactError$ChecksumErrors."<init>":(Lscala/collection/immutable/Seq;)V
  #1144 = NameAndType        #571:#145    // file:()Ljava/io/File;
  #1145 = Methodref          #1055.#1144  // coursier/cache/internal/DownloadResult.file:()Ljava/io/File;
  #1146 = Utf8               results
  #1147 = NameAndType        #1048:#1049  // $anonfun$filePerPolicy0$2:(Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
  #1148 = Methodref          #2.#1147     // coursier/cache/FileCache.$anonfun$filePerPolicy0$2:(Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
  #1149 = MethodHandle       6:#1148      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$2:(Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
  #1150 = MethodType         #1049        //  (Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
  #1151 = InvokeDynamic      #23:#223     // #23:apply:()Lscala/Function1;
  #1152 = Utf8               scala/$less$colon$less$
  #1153 = Class              #1152        // scala/$less$colon$less$
  #1154 = Utf8               Lscala/$less$colon$less$;
  #1155 = NameAndType        #107:#1154   // MODULE$:Lscala/$less$colon$less$;
  #1156 = Fieldref           #1153.#1155  // scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
  #1157 = Utf8               refl
  #1158 = Utf8               ()Lscala/$eq$colon$eq;
  #1159 = NameAndType        #1157:#1158  // refl:()Lscala/$eq$colon$eq;
  #1160 = Methodref          #1153.#1159  // scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
  #1161 = Utf8               toMap
  #1162 = Utf8               (Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #1163 = NameAndType        #1161:#1162  // toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #1164 = InterfaceMethodref #598.#1163   // scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
  #1165 = NameAndType        #97:#148     // checksums0:()Lscala/collection/immutable/Seq;
  #1166 = Methodref          #2.#1165     // coursier/cache/FileCache.checksums0:()Lscala/collection/immutable/Seq;
  #1167 = NameAndType        #1100:#1101  // $anonfun$filePerPolicy0$3:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
  #1168 = Methodref          #2.#1167     // coursier/cache/FileCache.$anonfun$filePerPolicy0$3:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
  #1169 = MethodHandle       6:#1168      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$3:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
  #1170 = Utf8               (Lscala/Option;)Lscala/Option;
  #1171 = MethodType         #1170        //  (Lscala/Option;)Lscala/Option;
  #1172 = Utf8               (Lcoursier/util/Artifact;Lscala/collection/immutable/Map;)Lscala/Function1;
  #1173 = NameAndType        #102:#1172   // apply:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;)Lscala/Function1;
  #1174 = InvokeDynamic      #24:#1173    // #24:apply:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;)Lscala/Function1;
  #1175 = Methodref          #29.#1126    // coursier/cache/FileCache$$anonfun$1."<init>":(Lcoursier/cache/FileCache;)V
  #1176 = Utf8               collectFirst
  #1177 = Utf8               (Lscala/PartialFunction;)Lscala/Option;
  #1178 = NameAndType        #1176:#1177  // collectFirst:(Lscala/PartialFunction;)Lscala/Option;
  #1179 = InterfaceMethodref #226.#1178   // scala/collection/immutable/Seq.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
  #1180 = MethodType         #1133        //  ()V
  #1181 = NameAndType        #1132:#1133  // $anonfun$filePerPolicy0$6:()V
  #1182 = Methodref          #2.#1181     // coursier/cache/FileCache.$anonfun$filePerPolicy0$6:()V
  #1183 = MethodHandle       6:#1182      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$6:()V
  #1184 = Utf8               apply$mcV$sp
  #1185 = Utf8               ()Lscala/runtime/java8/JFunction0$mcV$sp;
  #1186 = NameAndType        #1184:#1185  // apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
  #1187 = InvokeDynamic      #25:#1186    // #25:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
  #1188 = Utf8               toLeft
  #1189 = Utf8               (Lscala/Function0;)Lscala/util/Either;
  #1190 = NameAndType        #1188:#1189  // toLeft:(Lscala/Function0;)Lscala/util/Either;
  #1191 = Methodref          #439.#1190   // scala/Option.toLeft:(Lscala/Function0;)Lscala/util/Either;
  #1192 = NameAndType        #1134:#1135  // $anonfun$filePerPolicy0$7:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  #1193 = Methodref          #2.#1192     // coursier/cache/FileCache.$anonfun$filePerPolicy0$7:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  #1194 = MethodHandle       6:#1193      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$7:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  #1195 = Utf8               (Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  #1196 = MethodType         #1195        //  (Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  #1197 = Utf8               (Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #1198 = NameAndType        #102:#1197   // apply:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #1199 = InvokeDynamic      #26:#1198    // #26:apply:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;)Lscala/Function1;
  #1200 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #1201 = NameAndType        #227:#1200   // flatMap:(Lscala/Function1;)Lscala/util/Either;
  #1202 = Methodref          #996.#1201   // scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
  #1203 = Utf8               resultsMap
  #1204 = Utf8               checksumResults
  #1205 = Utf8               checksum
  #1206 = Utf8               res
  #1207 = Utf8               $anonfun$filePerPolicy0$9
  #1208 = Utf8               (Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
  #1209 = Utf8               f$1
  #1210 = Utf8               x$11
  #1211 = Utf8               x0$3
  #1212 = Utf8               _2
  #1213 = NameAndType        #1212:#238   // _2:()Ljava/lang/Object;
  #1214 = Methodref          #636.#1213   // scala/Tuple2._2:()Ljava/lang/Object;
  #1215 = Utf8               point
  #1216 = NameAndType        #1215:#205   // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #1217 = InterfaceMethodref #253.#1216   // coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #1218 = NameAndType        #420:#421    // validateChecksum:(Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT;
  #1219 = Methodref          #2.#1218     // coursier/cache/FileCache.validateChecksum:(Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT;
  #1220 = NameAndType        #1207:#1208  // $anonfun$filePerPolicy0$9:(Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
  #1221 = Methodref          #2.#1220     // coursier/cache/FileCache.$anonfun$filePerPolicy0$9:(Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
  #1222 = MethodHandle       6:#1221      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$9:(Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
  #1223 = Utf8               (Lscala/runtime/BoxedUnit;)Ljava/io/File;
  #1224 = MethodType         #1223        //  (Lscala/runtime/BoxedUnit;)Ljava/io/File;
  #1225 = Utf8               (Ljava/io/File;)Lscala/Function1;
  #1226 = NameAndType        #102:#1225   // apply:(Ljava/io/File;)Lscala/Function1;
  #1227 = InvokeDynamic      #27:#1226    // #27:apply:(Ljava/io/File;)Lscala/Function1;
  #1228 = NameAndType        #440:#534    // map:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #1229 = Methodref          #476.#1228   // coursier/util/EitherT.map:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #1230 = Utf8               f
  #1231 = Utf8               Lscala/Tuple2;
  #1232 = Utf8               $anonfun$filePerPolicy0$11
  #1233 = Utf8               x$12
  #1234 = Utf8               $anonfun$filePerPolicy0$12
  #1235 = Utf8               (Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
  #1236 = Utf8               foundBadFileInCache$1
  #1237 = Utf8               badFile$1
  #1238 = Utf8               badChecksumFile$1
  #1239 = Utf8               x2$1
  #1240 = Utf8               assert
  #1241 = Utf8               (Z)V
  #1242 = NameAndType        #1240:#1241  // assert:(Z)V
  #1243 = Methodref          #643.#1242   // scala/Predef$.assert:(Z)V
  #1244 = Utf8               delete
  #1245 = NameAndType        #1244:#168   // delete:()Z
  #1246 = Methodref          #262.#1245   // java/io/File.delete:()Z
  #1247 = Utf8               clearAuxiliaryFiles
  #1248 = Utf8               (Ljava/io/File;)V
  #1249 = NameAndType        #1247:#1248  // clearAuxiliaryFiles:(Ljava/io/File;)V
  #1250 = Methodref          #106.#1249   // coursier/cache/FileCache$.clearAuxiliaryFiles:(Ljava/io/File;)V
  #1251 = Utf8               describe
  #1252 = NameAndType        #1251:#298   // describe:()Ljava/lang/String;
  #1253 = Methodref          #26.#1252    // coursier/cache/ArtifactError$WrongChecksum.describe:()Ljava/lang/String;
  #1254 = Utf8               removedCorruptFile
  #1255 = Utf8               (Ljava/lang/String;Lscala/Option;)V
  #1256 = NameAndType        #1254:#1255  // removedCorruptFile:(Ljava/lang/String;Lscala/Option;)V
  #1257 = InterfaceMethodref #808.#1256   // coursier/cache/CacheLogger.removedCorruptFile:(Ljava/lang/String;Lscala/Option;)V
  #1258 = Utf8               Lcoursier/cache/ArtifactError$WrongChecksum;
  #1259 = Utf8               $anonfun$filePerPolicy0$13
  #1260 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  #1261 = Utf8               policy$2
  #1262 = Utf8               retry$2
  #1263 = Utf8               x$13
  #1264 = Utf8               x0$4
  #1265 = NameAndType        #1232:#432   // $anonfun$filePerPolicy0$11:(Lcoursier/core/Authentication;)Ljava/lang/String;
  #1266 = Methodref          #2.#1265     // coursier/cache/FileCache.$anonfun$filePerPolicy0$11:(Lcoursier/core/Authentication;)Ljava/lang/String;
  #1267 = MethodHandle       6:#1266      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$11:(Lcoursier/core/Authentication;)Ljava/lang/String;
  #1268 = InvokeDynamic      #28:#223     // #28:apply:()Lscala/Function1;
  #1269 = NameAndType        #1002:#298   // sumFile:()Ljava/lang/String;
  #1270 = Methodref          #26.#1269    // coursier/cache/ArtifactError$WrongChecksum.sumFile:()Ljava/lang/String;
  #1271 = Utf8               getCanonicalPath
  #1272 = NameAndType        #1271:#298   // getCanonicalPath:()Ljava/lang/String;
  #1273 = Methodref          #262.#1272   // java/io/File.getCanonicalPath:()Ljava/lang/String;
  #1274 = Utf8               /
  #1275 = String             #1274        // /
  #1276 = Utf8               startsWith
  #1277 = NameAndType        #1276:#632   // startsWith:(Ljava/lang/String;)Z
  #1278 = Methodref          #630.#1277   // java/lang/String.startsWith:(Ljava/lang/String;)Z
  #1279 = NameAndType        #1234:#1235  // $anonfun$filePerPolicy0$12:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
  #1280 = Methodref          #2.#1279     // coursier/cache/FileCache.$anonfun$filePerPolicy0$12:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
  #1281 = MethodHandle       6:#1280      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$12:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
  #1282 = Utf8               ()Lscala/util/Right;
  #1283 = MethodType         #1282        //  ()Lscala/util/Right;
  #1284 = Utf8               (Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/Function0;
  #1285 = NameAndType        #102:#1284   // apply:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/Function0;
  #1286 = InvokeDynamic      #29:#1285    // #29:apply:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/Function0;
  #1287 = NameAndType        #1259:#1260  // $anonfun$filePerPolicy0$13:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  #1288 = Methodref          #2.#1287     // coursier/cache/FileCache.$anonfun$filePerPolicy0$13:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  #1289 = MethodHandle       6:#1288      // REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$13:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  #1290 = Utf8               (Lscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  #1291 = MethodType         #1290        //  (Lscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  #1292 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
  #1293 = NameAndType        #102:#1292   // apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
  #1294 = InvokeDynamic      #30:#1293    // #30:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
  #1295 = Utf8               location0
  #1296 = Utf8               badFile
  #1297 = Utf8               badChecksumFile
  #1298 = Utf8               foundBadFileInCache
  #1299 = Utf8               Lcoursier/cache/ArtifactError;
  #1300 = Utf8               artifact$4
  #1301 = Utf8               retry$3
  #1302 = Utf8               x$14
  #1303 = Utf8               $anonfun$file$3
  #1304 = Utf8               (Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
  #1305 = Utf8               x$16$1
  #1306 = Utf8               Lcoursier/util/EitherT;
  #1307 = Utf8               x$15
  #1308 = Utf8               x$16
  #1309 = NameAndType        #1303:#1304  // $anonfun$file$3:(Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
  #1310 = Methodref          #2.#1309     // coursier/cache/FileCache.$anonfun$file$3:(Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
  #1311 = MethodHandle       6:#1310      // REF_invokeStatic coursier/cache/FileCache.$anonfun$file$3:(Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
  #1312 = Utf8               ()Lcoursier/util/EitherT;
  #1313 = MethodType         #1312        //  ()Lcoursier/util/EitherT;
  #1314 = Utf8               (Lcoursier/util/EitherT;)Lscala/Function0;
  #1315 = NameAndType        #102:#1314   // apply:(Lcoursier/util/EitherT;)Lscala/Function0;
  #1316 = InvokeDynamic      #31:#1315    // #31:apply:(Lcoursier/util/EitherT;)Lscala/Function0;
  #1317 = Utf8               orElse
  #1318 = Utf8               (Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #1319 = NameAndType        #1317:#1318  // orElse:(Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #1320 = Methodref          #476.#1319   // coursier/util/EitherT.orElse:(Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #1321 = Utf8               x$18
  #1322 = Methodref          #17.#1252    // coursier/cache/ArtifactError.describe:()Ljava/lang/String;
  #1323 = Utf8               notFound$1
  #1324 = Utf8               (Ljava/io/File;)Lscala/util/Left;
  #1325 = Integer            10
  #1326 = Utf8                not found
  #1327 = String             #1326        //  not found
  #1328 = Utf8               read$1
  #1329 = Utf8               (Ljava/io/File;ZLcoursier/util/Artifact;)Lscala/util/Either;
  #1330 = Utf8               links$1
  #1331 = Utf8               artifact0$1
  #1332 = String             #699         // links
  #1333 = Utf8               getName
  #1334 = NameAndType        #1333:#298   // getName:()Ljava/lang/String;
  #1335 = Methodref          #262.#1334   // java/io/File.getName:()Ljava/lang/String;
  #1336 = Utf8               .directory
  #1337 = String             #1336        // .directory
  #1338 = Utf8               isFile
  #1339 = NameAndType        #1338:#168   // isFile:()Z
  #1340 = Methodref          #262.#1339   // java/io/File.isFile:()Z
  #1341 = Utf8               java/nio/charset/StandardCharsets
  #1342 = Class              #1341        // java/nio/charset/StandardCharsets
  #1343 = Utf8               UTF_8
  #1344 = Utf8               Ljava/nio/charset/Charset;
  #1345 = NameAndType        #1343:#1344  // UTF_8:Ljava/nio/charset/Charset;
  #1346 = Fieldref           #1342.#1345  // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
  #1347 = Utf8               ([BLjava/nio/charset/Charset;)V
  #1348 = NameAndType        #263:#1347   // "<init>":([BLjava/nio/charset/Charset;)V
  #1349 = Methodref          #630.#1348   // java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
  #1350 = Utf8               coursier/util/WebPage$
  #1351 = Class              #1350        // coursier/util/WebPage$
  #1352 = Utf8               Lcoursier/util/WebPage$;
  #1353 = NameAndType        #107:#1352   // MODULE$:Lcoursier/util/WebPage$;
  #1354 = Fieldref           #1351.#1353  // coursier/util/WebPage$.MODULE$:Lcoursier/util/WebPage$;
  #1355 = Utf8               listElements
  #1356 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Iterator;
  #1357 = NameAndType        #1355:#1356  // listElements:(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Iterator;
  #1358 = Methodref          #1351.#1357  // coursier/util/WebPage$.listElements:(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Iterator;
  #1359 = Utf8               \n
  #1360 = String             #1359        // \n
  #1361 = Utf8               scala/collection/Iterator
  #1362 = Class              #1361        // scala/collection/Iterator
  #1363 = Utf8               mkString
  #1364 = NameAndType        #1363:#648   // mkString:(Ljava/lang/String;)Ljava/lang/String;
  #1365 = InterfaceMethodref #1362.#1364  // scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #1366 = Utf8               scala/util/control/NonFatal$
  #1367 = Class              #1366        // scala/util/control/NonFatal$
  #1368 = Utf8               Lscala/util/control/NonFatal$;
  #1369 = NameAndType        #107:#1368   // MODULE$:Lscala/util/control/NonFatal$;
  #1370 = Fieldref           #1367.#1369  // scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
  #1371 = Utf8               unapply
  #1372 = Utf8               (Ljava/lang/Throwable;)Lscala/Option;
  #1373 = NameAndType        #1371:#1372  // unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #1374 = Methodref          #1367.#1373  // scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
  #1375 = NameAndType        #461:#238    // get:()Ljava/lang/Object;
  #1376 = Methodref          #439.#1375   // scala/Option.get:()Ljava/lang/Object;
  #1377 = Integer            24
  #1378 = Utf8               Could not read (file:
  #1379 = String             #1378        // Could not read (file:
  #1380 = Utf8               ):
  #1381 = String             #1380        // ):
  #1382 = Utf8               getMessage
  #1383 = NameAndType        #1382:#298   // getMessage:()Ljava/lang/String;
  #1384 = Methodref          #234.#1383   // java/lang/Throwable.getMessage:()Ljava/lang/String;
  #1385 = Utf8               scala/util/Left
  #1386 = Class              #1385        // scala/util/Left
  #1387 = Utf8               linkFile
  #1388 = Utf8               content
  #1389 = Utf8               e
  #1390 = Utf8               Ljava/lang/Throwable;
  #1391 = Utf8               $anonfun$fetchPerPolicy$3
  #1392 = Utf8               (Ljava/io/File;)Ljava/lang/String;
  #1393 = Utf8               isDirectory
  #1394 = NameAndType        #1393:#168   // isDirectory:()Z
  #1395 = Methodref          #262.#1394   // java/io/File.isDirectory:()Z
  #1396 = Utf8               name
  #1397 = Utf8               $anonfun$fetchPerPolicy$4
  #1398 = Utf8               $anonfun$fetchPerPolicy$5
  #1399 = Utf8               name0
  #1400 = Utf8               <li><a href=\"
  #1401 = String             #1400        // <li><a href=\"
  #1402 = Utf8               \">
  #1403 = String             #1402        // \">
  #1404 = Utf8               </a></li>
  #1405 = String             #1404        // </a></li>
  #1406 = Utf8               file:
  #1407 = String             #1406        // file:
  #1408 = Utf8               scala/collection/ArrayOps$
  #1409 = Class              #1408        // scala/collection/ArrayOps$
  #1410 = Utf8               Lscala/collection/ArrayOps$;
  #1411 = NameAndType        #107:#1410   // MODULE$:Lscala/collection/ArrayOps$;
  #1412 = Fieldref           #1409.#1411  // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #1413 = Utf8               listFiles
  #1414 = Utf8               ()[Ljava/io/File;
  #1415 = NameAndType        #1413:#1414  // listFiles:()[Ljava/io/File;
  #1416 = Methodref          #262.#1415   // java/io/File.listFiles:()[Ljava/io/File;
  #1417 = Utf8               [Ljava/lang/Object;
  #1418 = Class              #1417        // "[Ljava/lang/Object;"
  #1419 = Utf8               refArrayOps
  #1420 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #1421 = NameAndType        #1419:#1420  // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #1422 = Methodref          #643.#1421   // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #1423 = NameAndType        #1391:#1392  // $anonfun$fetchPerPolicy$3:(Ljava/io/File;)Ljava/lang/String;
  #1424 = Methodref          #2.#1423     // coursier/cache/FileCache.$anonfun$fetchPerPolicy$3:(Ljava/io/File;)Ljava/lang/String;
  #1425 = MethodHandle       6:#1424      // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$3:(Ljava/io/File;)Ljava/lang/String;
  #1426 = MethodType         #1392        //  (Ljava/io/File;)Ljava/lang/String;
  #1427 = InvokeDynamic      #32:#223     // #32:apply:()Lscala/Function1;
  #1428 = Utf8               scala/reflect/ClassTag$
  #1429 = Class              #1428        // scala/reflect/ClassTag$
  #1430 = Utf8               Lscala/reflect/ClassTag$;
  #1431 = NameAndType        #107:#1430   // MODULE$:Lscala/reflect/ClassTag$;
  #1432 = Fieldref           #1429.#1431  // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #1433 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #1434 = NameAndType        #102:#1433   // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #1435 = Methodref          #1429.#1434  // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #1436 = Utf8               map$extension
  #1437 = Utf8               (Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #1438 = NameAndType        #1436:#1437  // map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #1439 = Methodref          #1409.#1438  // scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #1440 = Utf8               Lscala/math/Ordering$String$;
  #1441 = NameAndType        #107:#1440   // MODULE$:Lscala/math/Ordering$String$;
  #1442 = Fieldref           #55.#1441    // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
  #1443 = Utf8               sorted$extension
  #1444 = Utf8               (Ljava/lang/Object;Lscala/math/Ordering;)Ljava/lang/Object;
  #1445 = NameAndType        #1443:#1444  // sorted$extension:(Ljava/lang/Object;Lscala/math/Ordering;)Ljava/lang/Object;
  #1446 = Methodref          #1409.#1445  // scala/collection/ArrayOps$.sorted$extension:(Ljava/lang/Object;Lscala/math/Ordering;)Ljava/lang/Object;
  #1447 = Utf8               wrapRefArray
  #1448 = Utf8               ([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #1449 = NameAndType        #1447:#1448  // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #1450 = Methodref          #643.#1449   // scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
  #1451 = Methodref          #50.#1364    // scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
  #1452 = NameAndType        #1397:#1392  // $anonfun$fetchPerPolicy$4:(Ljava/io/File;)Ljava/lang/String;
  #1453 = Methodref          #2.#1452     // coursier/cache/FileCache.$anonfun$fetchPerPolicy$4:(Ljava/io/File;)Ljava/lang/String;
  #1454 = MethodHandle       6:#1453      // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$4:(Ljava/io/File;)Ljava/lang/String;
  #1455 = InvokeDynamic      #33:#223     // #33:apply:()Lscala/Function1;
  #1456 = NameAndType        #1398:#648   // $anonfun$fetchPerPolicy$5:(Ljava/lang/String;)Ljava/lang/String;
  #1457 = Methodref          #2.#1456     // coursier/cache/FileCache.$anonfun$fetchPerPolicy$5:(Ljava/lang/String;)Ljava/lang/String;
  #1458 = MethodHandle       6:#1457      // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$5:(Ljava/lang/String;)Ljava/lang/String;
  #1459 = MethodType         #648         //  (Ljava/lang/String;)Ljava/lang/String;
  #1460 = InvokeDynamic      #34:#223     // #34:apply:()Lscala/Function1;
  #1461 = NameAndType        #1363:#298   // mkString:()Ljava/lang/String;
  #1462 = Methodref          #50.#1461    // scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
  #1463 = Integer            249
  #1464 = Utf8               <!DOCTYPE html>\n                   |<html>\n                   |<head></head>\n                   |<body>\n                   |<ul>\n                   |
  #1465 = String             #1464        // <!DOCTYPE html>\n                   |<html>\n                   |<head></head>\n                   |<body>\n                   |<ul>\n                   |
  #1466 = Utf8               \n                   |</ul>\n                   |</body>\n                   |</html>\n
  #1467 = String             #1466        // \n                   |</ul>\n                   |</body>\n                   |</html>\n
  #1468 = Utf8               stripMargin$extension
  #1469 = NameAndType        #1468:#648   // stripMargin$extension:(Ljava/lang/String;)Ljava/lang/String;
  #1470 = Methodref          #638.#1469   // scala/collection/StringOps$.stripMargin$extension:(Ljava/lang/String;)Ljava/lang/String;
  #1471 = Utf8               (Ljava/io/File;Ljava/lang/String;)V
  #1472 = NameAndType        #263:#1471   // "<init>":(Ljava/io/File;Ljava/lang/String;)V
  #1473 = Methodref          #262.#1472   // java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
  #1474 = Integer            22
  #1475 = Utf8               Woops:
  #1476 = String             #1475        // Woops:
  #1477 = Utf8                is a directory
  #1478 = String             #1477        //  is a directory
  #1479 = NameAndType        #1328:#1329  // read$1:(Ljava/io/File;ZLcoursier/util/Artifact;)Lscala/util/Either;
  #1480 = Methodref          #2.#1479     // coursier/cache/FileCache.read$1:(Ljava/io/File;ZLcoursier/util/Artifact;)Lscala/util/Either;
  #1481 = NameAndType        #1323:#1324  // notFound$1:(Ljava/io/File;)Lscala/util/Left;
  #1482 = Methodref          #2.#1481     // coursier/cache/FileCache.notFound$1:(Ljava/io/File;)Lscala/util/Left;
  #1483 = Utf8               elements
  #1484 = Utf8               f0
  #1485 = Utf8               Lscala/util/Either;
  #1486 = Utf8               $anonfun$fetch$3
  #1487 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1488 = Utf8               a$1
  #1489 = Utf8               x$20$1
  #1490 = NameAndType        #624:#625    // fetchPerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1491 = Methodref          #2.#1490     // coursier/cache/FileCache.fetchPerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1492 = Utf8               $anonfun$fetch$2
  #1493 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1494 = Utf8               x$19
  #1495 = Utf8               x$20
  #1496 = NameAndType        #1486:#1487  // $anonfun$fetch$3:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1497 = Methodref          #2.#1496     // coursier/cache/FileCache.$anonfun$fetch$3:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1498 = MethodHandle       6:#1497      // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$3:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1499 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lscala/Function0;
  #1500 = NameAndType        #102:#1499   // apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lscala/Function0;
  #1501 = InvokeDynamic      #35:#1500    // #35:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lscala/Function0;
  #1502 = NameAndType        #1492:#1493  // $anonfun$fetch$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1503 = Methodref          #2.#1502     // coursier/cache/FileCache.$anonfun$fetch$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1504 = MethodHandle       6:#1503      // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1505 = Utf8               (Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1506 = MethodType         #1505        //  (Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  #1507 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function2;
  #1508 = NameAndType        #102:#1507   // apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function2;
  #1509 = InvokeDynamic      #36:#1508    // #36:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function2;
  #1510 = Utf8               $anonfun$fetchs$2
  #1511 = Utf8               (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #1512 = Utf8               p$1
  #1513 = Utf8               p
  #1514 = NameAndType        #1510:#1511  // $anonfun$fetchs$2:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #1515 = Methodref          #2.#1514     // coursier/cache/FileCache.$anonfun$fetchs$2:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #1516 = MethodHandle       6:#1515      // REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchs$2:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  #1517 = NameAndType        #102:#713    // apply:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
  #1518 = InvokeDynamic      #37:#1517    // #37:apply:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
  #1519 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;)V
  #1520 = NameAndType        #263:#1133   // "<init>":()V
  #1521 = Methodref          #5.#1520     // coursier/cache/Cache."<init>":()V
  #1522 = Utf8               $init$
  #1523 = Utf8               (Lscala/Product;)V
  #1524 = NameAndType        #1522:#1523  // $init$:(Lscala/Product;)V
  #1525 = InterfaceMethodref #7.#1524     // scala/Product.$init$:(Lscala/Product;)V
  #1526 = InterfaceMethodref #226.#1021   // scala/collection/immutable/Seq.isEmpty:()Z
  #1527 = NameAndType        #872:#873    // $anonfun$actualChecksums$1:(Lscala/Option;)Lscala/collection/immutable/Seq;
  #1528 = Methodref          #2.#1527     // coursier/cache/FileCache.$anonfun$actualChecksums$1:(Lscala/Option;)Lscala/collection/immutable/Seq;
  #1529 = MethodHandle       6:#1528      // REF_invokeStatic coursier/cache/FileCache.$anonfun$actualChecksums$1:(Lscala/Option;)Lscala/collection/immutable/Seq;
  #1530 = MethodType         #873         //  (Lscala/Option;)Lscala/collection/immutable/Seq;
  #1531 = InvokeDynamic      #38:#223     // #38:apply:()Lscala/Function1;
  #1532 = Utf8               scala/collection/SeqOps
  #1533 = Class              #1532        // scala/collection/SeqOps
  #1534 = Utf8               distinct
  #1535 = NameAndType        #1534:#238   // distinct:()Ljava/lang/Object;
  #1536 = InterfaceMethodref #1533.#1535  // scala/collection/SeqOps.distinct:()Ljava/lang/Object;
  #1537 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)V
  #1538 = Utf8               (Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILcoursier/util/Sync<TF;>;)V
  #1539 = Utf8               (Ljava/io/File;Lcoursier/util/Sync;)V
  #1540 = Utf8               (Ljava/io/File;Lcoursier/util/Sync<TF;>;)V
  #1541 = Utf8               coursier/cache/CacheDefaults$
  #1542 = Class              #1541        // coursier/cache/CacheDefaults$
  #1543 = Utf8               Lcoursier/cache/CacheDefaults$;
  #1544 = NameAndType        #107:#1543   // MODULE$:Lcoursier/cache/CacheDefaults$;
  #1545 = Fieldref           #1542.#1544  // coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
  #1546 = Methodref          #1542.#579   // coursier/cache/CacheDefaults$.cachePolicies:()Lscala/collection/immutable/Seq;
  #1547 = Methodref          #1542.#738   // coursier/cache/CacheDefaults$.checksums:()Lscala/collection/immutable/Seq;
  #1548 = Methodref          #1542.#203   // coursier/cache/CacheDefaults$.credentials:()Lscala/collection/immutable/Seq;
  #1549 = Utf8               coursier/cache/CacheLogger$
  #1550 = Class              #1549        // coursier/cache/CacheLogger$
  #1551 = Utf8               Lcoursier/cache/CacheLogger$;
  #1552 = NameAndType        #107:#1551   // MODULE$:Lcoursier/cache/CacheLogger$;
  #1553 = Fieldref           #1550.#1552  // coursier/cache/CacheLogger$.MODULE$:Lcoursier/cache/CacheLogger$;
  #1554 = Utf8               nop
  #1555 = NameAndType        #1554:#158   // nop:()Lcoursier/cache/CacheLogger;
  #1556 = Methodref          #1550.#1555  // coursier/cache/CacheLogger$.nop:()Lcoursier/cache/CacheLogger;
  #1557 = Methodref          #1542.#391   // coursier/cache/CacheDefaults$.pool:()Ljava/util/concurrent/ExecutorService;
  #1558 = Methodref          #1542.#393   // coursier/cache/CacheDefaults$.ttl:()Lscala/Option;
  #1559 = Methodref          #1542.#399   // coursier/cache/CacheDefaults$.maxRedirections:()Lscala/Option;
  #1560 = Utf8               sslRetryCount
  #1561 = NameAndType        #1560:#178   // sslRetryCount:()I
  #1562 = Methodref          #1542.#1561  // coursier/cache/CacheDefaults$.sslRetryCount:()I
  #1563 = Utf8               defaultRetryCount
  #1564 = NameAndType        #1563:#178   // defaultRetryCount:()I
  #1565 = Methodref          #1542.#1564  // coursier/cache/CacheDefaults$.defaultRetryCount:()I
  #1566 = Methodref          #1542.#407   // coursier/cache/CacheDefaults$.bufferSize:()I
  #1567 = NameAndType        #903:#904    // $anonfun$validateChecksum$5:(Ljava/io/File;)Z
  #1568 = Methodref          #2.#1567     // coursier/cache/FileCache.$anonfun$validateChecksum$5:(Ljava/io/File;)Z
  #1569 = NameAndType        #1003:#1004  // $anonfun$filePerPolicy$2:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Z
  #1570 = Methodref          #2.#1569     // coursier/cache/FileCache.$anonfun$filePerPolicy$2:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Z
  #1571 = Utf8               unboxToChar
  #1572 = Utf8               (Ljava/lang/Object;)C
  #1573 = NameAndType        #1571:#1572  // unboxToChar:(Ljava/lang/Object;)C
  #1574 = Methodref          #340.#1573   // scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
  #1575 = NameAndType        #1068:#1069  // $anonfun$filePerPolicy0$5:(C)Z
  #1576 = Methodref          #2.#1575     // coursier/cache/FileCache.$anonfun$filePerPolicy0$5:(C)Z
  #1577 = Utf8               $deserializeLambda$
  #1578 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1579 = Utf8               scala/runtime/LambdaDeserialize
  #1580 = Class              #1579        // scala/runtime/LambdaDeserialize
  #1581 = Utf8               bootstrap
  #1582 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1583 = NameAndType        #1581:#1582  // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1584 = Methodref          #1580.#1583  // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1585 = MethodHandle       6:#1584      // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #1586 = Utf8               lambdaDeserialize
  #1587 = NameAndType        #1586:#1578  // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1588 = InvokeDynamic      #39:#1587    // #39:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #1589 = Utf8               Signature
  #1590 = Utf8               Code
  #1591 = Utf8               MethodParameters
  #1592 = Utf8               LineNumberTable
  #1593 = Utf8               LocalVariableTable
  #1594 = Utf8               StackMapTable
  #1595 = Utf8               InnerClasses
  #1596 = Utf8               SourceFile
  #1597 = Utf8               RuntimeVisibleAnnotations
  #1598 = Utf8               BootstrapMethods
  #1599 = Utf8               ScalaInlineInfo
  #1600 = Utf8               ScalaSig
{
  private scala.collection.immutable.Seq<coursier.credentials.DirectCredentials> allCredentials0;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Signature: #60                          // Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;

  private scala.concurrent.ExecutionContextExecutorService ec;
    descriptor: Lscala/concurrent/ExecutionContextExecutorService;
    flags: (0x0002) ACC_PRIVATE

  private final java.io.File location;
    descriptor: Ljava/io/File;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.immutable.Seq<coursier.cache.CachePolicy> cachePolicies;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #66                          // Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;

  private final scala.collection.immutable.Seq<scala.Option<java.lang.String>> checksums;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #68                          // Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;

  private final scala.collection.immutable.Seq<coursier.credentials.Credentials> credentials;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #70                          // Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;

  private final coursier.cache.CacheLogger logger;
    descriptor: Lcoursier/cache/CacheLogger;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.util.concurrent.ExecutorService pool;
    descriptor: Ljava/util/concurrent/ExecutorService;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Option<scala.concurrent.duration.Duration> ttl;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #77                          // Lscala/Option<Lscala/concurrent/duration/Duration;>;

  private final boolean localArtifactsShouldBeCached;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean followHttpToHttpsRedirections;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final boolean followHttpsToHttpRedirections;
    descriptor: Z
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Option<java.lang.Object> maxRedirections;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #83                          // Lscala/Option<Ljava/lang/Object;>;

  private final int sslRetry;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.Option<javax.net.ssl.SSLSocketFactory> sslSocketFactoryOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #87                          // Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;

  private final scala.Option<javax.net.ssl.HostnameVerifier> hostnameVerifierOpt;
    descriptor: Lscala/Option;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #89                          // Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;

  private final int retry;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int bufferSize;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.immutable.Seq<java.lang.ClassLoader> classLoaders;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #93                          // Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;

  private final coursier.util.Sync<F> sync;
    descriptor: Lcoursier/util/Sync;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #96                          // Lcoursier/util/Sync<TF;>;

  private final scala.collection.immutable.Seq<scala.Option<java.lang.String>> checksums0;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #68                          // Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;

  private final scala.collection.immutable.Seq<java.lang.String> actualChecksums;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #99                          // Lscala/collection/immutable/Seq<Ljava/lang/String;>;

  private volatile byte bitmap$0;
    descriptor: B
    flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE

  public static <F extends java.lang.Object> coursier.cache.FileCache<F> apply(java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, boolean, boolean, boolean, scala.Option<java.lang.Object>, int, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, int, int, scala.collection.immutable.Seq<java.lang.ClassLoader>, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=19, locals=18, args_size=18
         0: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: iload         7
        15: iload         8
        17: iload         9
        19: aload         10
        21: iload         11
        23: aload         12
        25: aload         13
        27: iload         14
        29: iload         15
        31: aload         16
        33: aload         17
        35: invokevirtual #112                // Method coursier/cache/FileCache$.apply:(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
        38: areturn
    Signature: #104                         // <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final
      cachePolicies                  final
      checksums                      final
      credentials                    final
      logger                         final
      pool                           final
      ttl                            final
      localArtifactsShouldBeCached   final
      followHttpToHttpsRedirections  final
      followHttpsToHttpRedirections  final
      maxRedirections                final
      sslRetry                       final
      sslSocketFactoryOpt            final
      hostnameVerifierOpt            final
      retry                          final
      bufferSize                     final
      classLoaders                   final
      sync                           final

  public static <F extends java.lang.Object> coursier.cache.FileCache<F> apply(java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, boolean, boolean, boolean, scala.Option<java.lang.Object>, int, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, int, int, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=18, locals=17, args_size=17
         0: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         3: aload_0
         4: aload_1
         5: aload_2
         6: aload_3
         7: aload         4
         9: aload         5
        11: aload         6
        13: iload         7
        15: iload         8
        17: iload         9
        19: aload         10
        21: iload         11
        23: aload         12
        25: aload         13
        27: iload         14
        29: iload         15
        31: aload         16
        33: invokevirtual #116                // Method coursier/cache/FileCache$.apply:(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)Lcoursier/cache/FileCache;
        36: areturn
    Signature: #114                         // <F:Ljava/lang/Object;>(Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final
      cachePolicies                  final
      checksums                      final
      credentials                    final
      logger                         final
      pool                           final
      ttl                            final
      localArtifactsShouldBeCached   final
      followHttpToHttpsRedirections  final
      followHttpsToHttpRedirections  final
      maxRedirections                final
      sslRetry                       final
      sslSocketFactoryOpt            final
      hostnameVerifierOpt            final
      retry                          final
      bufferSize                     final
      sync                           final

  public static <F extends java.lang.Object> coursier.cache.FileCache<F> apply(java.io.File, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         3: aload_0
         4: aload_1
         5: invokevirtual #120                // Method coursier/cache/FileCache$.apply:(Ljava/io/File;Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
         8: areturn
    Signature: #118                         // <F:Ljava/lang/Object;>(Ljava/io/File;Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final
      sync                           final

  public static <F extends java.lang.Object> coursier.util.Sync<coursier.util.Task> apply$default$1();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         3: invokevirtual #125                // Method coursier/cache/FileCache$.apply$default$1:()Lcoursier/util/Sync;
         6: areturn
    Signature: #123                         // <F:Ljava/lang/Object;>()Lcoursier/util/Sync<Lcoursier/util/Task;>;

  public static <F extends java.lang.Object> coursier.cache.FileCache<F> apply(coursier.util.Sync<F>);
    descriptor: (Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         3: aload_0
         4: invokevirtual #130                // Method coursier/cache/FileCache$.apply:(Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
         7: areturn
    Signature: #127                         // <F:Ljava/lang/Object;>(Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      S                              final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #137                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #133                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #144                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #141                         // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.io.File location();
    descriptor: ()Ljava/io/File;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #147                // Field location:Ljava/io/File;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public scala.collection.immutable.Seq<coursier.cache.CachePolicy> cachePolicies();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #151                // Field cachePolicies:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #149                         // ()Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;

  public scala.collection.immutable.Seq<scala.Option<java.lang.String>> checksums();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #154                // Field checksums:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #152                         // ()Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;

  public scala.collection.immutable.Seq<coursier.credentials.Credentials> credentials();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #157                // Field credentials:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #155                         // ()Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;

  public coursier.cache.CacheLogger logger();
    descriptor: ()Lcoursier/cache/CacheLogger;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #160                // Field logger:Lcoursier/cache/CacheLogger;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public java.util.concurrent.ExecutorService pool();
    descriptor: ()Ljava/util/concurrent/ExecutorService;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #163                // Field pool:Ljava/util/concurrent/ExecutorService;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public scala.Option<scala.concurrent.duration.Duration> ttl();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #167                // Field ttl:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #165                         // ()Lscala/Option<Lscala/concurrent/duration/Duration;>;

  public boolean localArtifactsShouldBeCached();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #170                // Field localArtifactsShouldBeCached:Z
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public boolean followHttpToHttpsRedirections();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #172                // Field followHttpToHttpsRedirections:Z
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public boolean followHttpsToHttpRedirections();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #174                // Field followHttpsToHttpRedirections:Z
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public scala.Option<java.lang.Object> maxRedirections();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #177                // Field maxRedirections:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #175                         // ()Lscala/Option<Ljava/lang/Object;>;

  public int sslRetry();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #180                // Field sslRetry:I
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public scala.Option<javax.net.ssl.SSLSocketFactory> sslSocketFactoryOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #183                // Field sslSocketFactoryOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #181                         // ()Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;

  public scala.Option<javax.net.ssl.HostnameVerifier> hostnameVerifierOpt();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #186                // Field hostnameVerifierOpt:Lscala/Option;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #184                         // ()Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;

  public int retry();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #188                // Field retry:I
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public int bufferSize();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #190                // Field bufferSize:I
         4: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public scala.collection.immutable.Seq<java.lang.ClassLoader> classLoaders();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #193                // Field classLoaders:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #191                         // ()Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;

  public coursier.util.Sync<F> sync();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #196                // Field sync:Lcoursier/util/Sync;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #194                         // ()Lcoursier/util/Sync<TF;>;

  private coursier.util.Sync<F> S();
    descriptor: ()Lcoursier/util/Sync;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
         4: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #194                         // ()Lcoursier/util/Sync<TF;>;

  private scala.collection.immutable.Seq<coursier.credentials.DirectCredentials> allCredentials0$lzycompute();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #202                // Field bitmap$0:B
         8: iconst_1
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     47
        15: aload_0
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: invokedynamic #224,  0            // InvokeDynamic #0:apply:()Lscala/Function1;
        25: invokeinterface #230,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
        30: checkcast     #226                // class scala/collection/immutable/Seq
        33: putfield      #232                // Field allCredentials0:Lscala/collection/immutable/Seq;
        36: aload_0
        37: aload_0
        38: getfield      #202                // Field bitmap$0:B
        41: iconst_1
        42: ior
        43: i2b
        44: putfield      #202                // Field bitmap$0:B
        47: aload_1
        48: monitorexit
        49: goto          55
        52: aload_1
        53: monitorexit
        54: athrow
        55: aload_0
        56: getfield      #232                // Field allCredentials0:Lscala/collection/immutable/Seq;
        59: areturn
      Exception table:
         from    to  target type
             4    47    52   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 47
          locals = [ class coursier/cache/FileCache ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 48: 0
        line 49: 16
        line 48: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      60     0  this   Lcoursier/cache/FileCache;
    Signature: #200                         // ()Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;

  private scala.collection.immutable.Seq<coursier.credentials.DirectCredentials> allCredentials0();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #202                // Field bitmap$0:B
         4: iconst_1
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #236                // Method allCredentials0$lzycompute:()Lscala/collection/immutable/Seq;
        15: goto          22
        18: aload_0
        19: getfield      #232                // Field allCredentials0:Lscala/collection/immutable/Seq;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/cache/FileCache;
    Signature: #200                         // ()Lscala/collection/immutable/Seq<Lcoursier/credentials/DirectCredentials;>;

  public F allCredentials();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #241                // Method S:()Lcoursier/util/Sync;
         4: aload_0
         5: invokedynamic #251,  0            // InvokeDynamic #1:apply:(Lcoursier/cache/FileCache;)Lscala/Function0;
        10: invokeinterface #257,  2          // InterfaceMethod coursier/util/Sync.delay:(Lscala/Function0;)Ljava/lang/Object;
        15: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/cache/FileCache;
    Signature: #239                         // ()TF;

  public coursier.cache.FileCache<F> withLocation(java.lang.String);
    descriptor: (Ljava/lang/String;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #262                // class java/io/File
         4: dup
         5: aload_1
         6: invokespecial #266                // Method java/io/File."<init>":(Ljava/lang/String;)V
         9: invokevirtual #269                // Method withLocation:(Ljava/io/File;)Lcoursier/cache/FileCache;
        12: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/cache/FileCache;
            0      13     1 location   Ljava/lang/String;
    Signature: #260                         // (Ljava/lang/String;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final

  public coursier.cache.FileCache<F> noCredentials();
    descriptor: ()Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #278                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
         4: invokevirtual #282                // Method withCredentials:(Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
         7: areturn
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lcoursier/cache/FileCache;
    Signature: #273                         // ()Lcoursier/cache/FileCache<TF;>;

  public coursier.cache.FileCache<F> addCredentials(scala.collection.immutable.Seq<coursier.credentials.Credentials>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
         5: aload_1
         6: invokeinterface #288,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        11: checkcast     #226                // class scala/collection/immutable/Seq
        14: invokevirtual #282                // Method withCredentials:(Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
        17: areturn
      LineNumberTable:
        line 59: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/cache/FileCache;
            0      18     1 credentials   Lscala/collection/immutable/Seq;
    Signature: #284                         // (Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      credentials                    final

  public coursier.cache.FileCache<F> addFileCredentials(java.io.File);
    descriptor: (Ljava/io/File;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: aload_0
         2: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
         5: getstatic     #296                // Field coursier/credentials/FileCredentials$.MODULE$:Lcoursier/credentials/FileCredentials$;
         8: aload_1
         9: invokevirtual #300                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
        12: invokevirtual #303                // Method coursier/credentials/FileCredentials$.apply:(Ljava/lang/String;)Lcoursier/credentials/FileCredentials;
        15: invokeinterface #306,  2          // InterfaceMethod scala/collection/immutable/Seq.$colon$plus:(Ljava/lang/Object;)Ljava/lang/Object;
        20: checkcast     #226                // class scala/collection/immutable/Seq
        23: invokevirtual #282                // Method withCredentials:(Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
        26: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      27     0  this   Lcoursier/cache/FileCache;
            0      27     1 credentialFile   Ljava/io/File;
    Signature: #290                         // (Ljava/io/File;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      credentialFile                 final

  public coursier.cache.FileCache<F> withTtl(scala.concurrent.duration.Duration);
    descriptor: (Lscala/concurrent/duration/Duration;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #311                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: invokevirtual #317                // Method withTtl:(Lscala/Option;)Lcoursier/cache/FileCache;
        12: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/cache/FileCache;
            0      13     1   ttl   Lscala/concurrent/duration/Duration;
    Signature: #309                         // (Lscala/concurrent/duration/Duration;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      ttl                            final

  public coursier.cache.FileCache<F> withSslSocketFactory(javax.net.ssl.SSLSocketFactory);
    descriptor: (Ljavax/net/ssl/SSLSocketFactory;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #311                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: invokevirtual #325                // Method withSslSocketFactoryOpt:(Lscala/Option;)Lcoursier/cache/FileCache;
        12: areturn
      LineNumberTable:
        line 65: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/cache/FileCache;
            0      13     1 sslSocketFactory   Ljavax/net/ssl/SSLSocketFactory;
    Signature: #321                         // (Ljavax/net/ssl/SSLSocketFactory;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      sslSocketFactory               final

  public coursier.cache.FileCache<F> withHostnameVerifier(javax.net.ssl.HostnameVerifier);
    descriptor: (Ljavax/net/ssl/HostnameVerifier;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #311                // class scala/Some
         4: dup
         5: aload_1
         6: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
         9: invokevirtual #333                // Method withHostnameVerifierOpt:(Lscala/Option;)Lcoursier/cache/FileCache;
        12: areturn
      LineNumberTable:
        line 67: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/cache/FileCache;
            0      13     1 hostnameVerifier   Ljavax/net/ssl/HostnameVerifier;
    Signature: #329                         // (Ljavax/net/ssl/HostnameVerifier;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      hostnameVerifier               final

  public coursier.cache.FileCache<F> withMaxRedirections(int);
    descriptor: (I)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: new           #311                // class scala/Some
         4: dup
         5: iload_1
         6: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         9: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        12: invokevirtual #346                // Method withMaxRedirections:(Lscala/Option;)Lcoursier/cache/FileCache;
        15: areturn
      LineNumberTable:
        line 69: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/cache/FileCache;
            0      16     1   max   I
    Signature: #337                         // (I)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      max                            final

  public java.io.File localFile(java.lang.String, scala.Option<java.lang.String>);
    descriptor: (Ljava/lang/String;Lscala/Option;)Ljava/io/File;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         3: aload_1
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_2
         9: aload_0
        10: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        13: invokevirtual #359                // Method coursier/cache/FileCache$.localFile0:(Ljava/lang/String;Ljava/io/File;Lscala/Option;Z)Ljava/io/File;
        16: areturn
      LineNumberTable:
        line 73: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/cache/FileCache;
            0      17     1   url   Ljava/lang/String;
            0      17     2  user   Lscala/Option;
    Signature: #349                         // (Ljava/lang/String;Lscala/Option<Ljava/lang/String;>;)Ljava/io/File;
    MethodParameters:
      Name                           Flags
      url                            final
      user                           final

  public scala.Option<java.lang.String> localFile$default$2();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 72: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/cache/FileCache;
    Signature: #361                         // ()Lscala/Option<Ljava/lang/String;>;

  public scala.Some<coursier.cache.CacheLogger> loggerOpt();
    descriptor: ()Lscala/Some;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #311                // class scala/Some
         3: dup
         4: aload_0
         5: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
         8: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        11: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/cache/FileCache;
    Signature: #369                         // ()Lscala/Some<Lcoursier/cache/CacheLogger;>;

  private scala.collection.immutable.Seq<scala.Option<java.lang.String>> checksums0();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #373                // Field checksums0:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 80: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #152                         // ()Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;

  private scala.collection.immutable.Seq<java.lang.String> actualChecksums();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #376                // Field actualChecksums:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;
    Signature: #374                         // ()Lscala/collection/immutable/Seq<Ljava/lang/String;>;

  private F download(coursier.util.Artifact, coursier.cache.CachePolicy);
    descriptor: (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=19, locals=3, args_size=3
         0: getstatic     #386                // Field coursier/cache/internal/Downloader$.MODULE$:Lcoursier/cache/internal/Downloader$;
         3: aload_1
         4: aload_2
         5: aload_0
         6: invokevirtual #353                // Method location:()Ljava/io/File;
         9: aload_0
        10: invokespecial #388                // Method actualChecksums:()Lscala/collection/immutable/Seq;
        13: aload_0
        14: invokevirtual #390                // Method allCredentials:()Ljava/lang/Object;
        17: aload_0
        18: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        21: aload_0
        22: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #408                // Method bufferSize:()I
        61: aload_0
        62: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        65: aload_0
        66: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        69: invokevirtual #413                // Method coursier/cache/internal/Downloader$.apply:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;Ljava/io/File;Lscala/collection/immutable/Seq;Ljava/lang/Object;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;ILscala/collection/immutable/Seq;Lcoursier/util/Sync;)Lcoursier/cache/internal/Downloader;
        72: invokevirtual #417                // Method coursier/cache/internal/Downloader.download:()Ljava/lang/Object;
        75: areturn
      LineNumberTable:
        line 87: 0
        line 88: 3
        line 89: 4
        line 90: 5
        line 91: 9
        line 92: 13
        line 93: 17
        line 94: 21
        line 95: 25
        line 96: 29
        line 97: 33
        line 98: 37
        line 99: 41
        line 100: 45
        line 101: 49
        line 102: 53
        line 103: 57
        line 104: 61
        line 87: 65
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      76     0  this   Lcoursier/cache/FileCache;
            0      76     1 artifact   Lcoursier/util/Artifact;
            0      76     2 cachePolicy   Lcoursier/cache/CachePolicy;
    Signature: #379                         // (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)TF;
    MethodParameters:
      Name                           Flags
      artifact                       final
      cachePolicy                    final

  public coursier.util.EitherT<F, coursier.cache.ArtifactError, scala.runtime.BoxedUnit> validateChecksum(coursier.util.Artifact, java.lang.String);
    descriptor: (Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=6, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
         5: aload_1
         6: invokevirtual #430                // Method coursier/util/Artifact.authentication:()Lscala/Option;
         9: invokedynamic #437,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        14: invokevirtual #443                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        17: invokevirtual #445                // Method localFile:(Ljava/lang/String;Lscala/Option;)Ljava/io/File;
        20: astore_3
        21: new           #447                // class scala/collection/immutable/$colon$colon
        24: dup
        25: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
        28: aload_3
        29: aload_2
        30: invokevirtual #451                // Method coursier/cache/FileCache$.auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
        33: getstatic     #278                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        36: invokespecial #454                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
        39: checkcast     #226                // class scala/collection/immutable/Seq
        42: astore        4
        44: aload_1
        45: invokevirtual #458                // Method coursier/util/Artifact.checksumUrls:()Lscala/collection/immutable/Map;
        48: aload_2
        49: invokeinterface #464,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        54: aload_0
        55: aload_1
        56: invokedynamic #474,  0            // InvokeDynamic #3:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
        61: invokevirtual #443                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        64: astore        5
        66: new           #476                // class coursier/util/EitherT
        69: dup
        70: aload_0
        71: invokespecial #241                // Method S:()Lcoursier/util/Sync;
        74: aload_0
        75: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        78: aload_0
        79: aload         4
        81: aload         5
        83: aload_2
        84: aload_3
        85: invokedynamic #486,  0            // InvokeDynamic #4:apply:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/Function0;
        90: invokeinterface #490,  3          // InterfaceMethod coursier/util/Sync.schedule:(Ljava/util/concurrent/ExecutorService;Lscala/Function0;)Ljava/lang/Object;
        95: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        98: areturn
      LineNumberTable:
        line 112: 0
        line 114: 21
        line 115: 44
        line 117: 66
        line 118: 70
        line 119: 78
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      77     3 localFile0   Ljava/io/File;
           44      54     4 headerSumFile   Lscala/collection/immutable/Seq;
           66      32     5 downloadedSumFile   Lscala/Option;
            0      99     0  this   Lcoursier/cache/FileCache;
            0      99     1 artifact   Lcoursier/util/Artifact;
            0      99     2 sumType   Ljava/lang/String;
    Signature: #422                         // (Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Lscala/runtime/BoxedUnit;>;
    MethodParameters:
      Name                           Flags
      artifact                       final
      sumType                        final

  private coursier.util.EitherT<F, coursier.cache.ArtifactError, java.io.File> filePerPolicy(coursier.util.Artifact, coursier.cache.CachePolicy, int);
    descriptor: (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=5, args_size=4
         0: getstatic     #500                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         3: aload_0
         4: invokevirtual #390                // Method allCredentials:()Ljava/lang/Object;
         7: aload_0
         8: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #504                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        14: aload_1
        15: invokedynamic #514,  0            // InvokeDynamic #5:apply:(Lcoursier/util/Artifact;)Lscala/Function1;
        20: invokeinterface #516,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        25: astore        4
        27: new           #476                // class coursier/util/EitherT
        30: dup
        31: getstatic     #500                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
        34: aload         4
        36: aload_0
        37: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        40: invokevirtual #504                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        43: invokedynamic #523,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        48: invokeinterface #516,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        53: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        56: aload_0
        57: aload_2
        58: iload_3
        59: invokedynamic #533,  0            // InvokeDynamic #7:apply:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
        64: aload_0
        65: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        68: invokevirtual #536                // Method coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        71: areturn
      LineNumberTable:
        line 156: 0
        line 166: 27
        line 167: 56
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      44     4 artifact0   Ljava/lang/Object;
            0      72     0  this   Lcoursier/cache/FileCache;
            0      72     1 artifact   Lcoursier/util/Artifact;
            0      72     2 policy   Lcoursier/cache/CachePolicy;
            0      72     3 retry   I
    Signature: #496                         // (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
    MethodParameters:
      Name                           Flags
      artifact                       final
      policy                         final
      retry                          final

  private coursier.util.EitherT<F, coursier.cache.ArtifactError, java.io.File> filePerPolicy0(coursier.util.Artifact, coursier.cache.CachePolicy, int);
    descriptor: (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=4, args_size=4
         0: new           #476                // class coursier/util/EitherT
         3: dup
         4: getstatic     #500                // Field coursier/util/Monad$ops$.MODULE$:Lcoursier/util/Monad$ops$;
         7: aload_0
         8: aload_1
         9: aload_2
        10: invokespecial #541                // Method download:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Ljava/lang/Object;
        13: aload_0
        14: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        17: invokevirtual #504                // Method coursier/util/Monad$ops$.toAllMonadOps:(Ljava/lang/Object;Lcoursier/util/Monad;)Lcoursier/util/Monad$AllOps;
        20: aload_0
        21: aload_1
        22: invokedynamic #549,  0            // InvokeDynamic #8:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
        27: invokeinterface #516,  2          // InterfaceMethod coursier/util/Monad$AllOps.map:(Lscala/Function1;)Ljava/lang/Object;
        32: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        35: aload_0
        36: aload_1
        37: invokedynamic #557,  0            // InvokeDynamic #9:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function1;
        42: aload_0
        43: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        46: invokevirtual #536                // Method coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        49: aload_0
        50: aload_1
        51: iload_3
        52: aload_2
        53: invokedynamic #567,  0            // InvokeDynamic #10:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lscala/Function1;
        58: aload_0
        59: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        62: invokevirtual #570                // Method coursier/util/EitherT.leftFlatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        65: areturn
      LineNumberTable:
        line 178: 0
        line 179: 4
        line 180: 8
        line 181: 9
        line 179: 13
        line 182: 20
        line 219: 35
        line 223: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      66     0  this   Lcoursier/cache/FileCache;
            0      66     1 artifact   Lcoursier/util/Artifact;
            0      66     2 policy   Lcoursier/cache/CachePolicy;
            0      66     3 retry   I
    Signature: #496                         // (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
    MethodParameters:
      Name                           Flags
      artifact                       final
      policy                         final
      retry                          final

  public coursier.util.EitherT<F, coursier.cache.ArtifactError, java.io.File> file(coursier.util.Artifact);
    descriptor: (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: aload_0
         3: invokevirtual #574                // Method retry:()I
         6: invokevirtual #577                // Method file:(Lcoursier/util/Artifact;I)Lcoursier/util/EitherT;
         9: areturn
      LineNumberTable:
        line 253: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcoursier/cache/FileCache;
            0      10     1 artifact   Lcoursier/util/Artifact;
    Signature: #572                         // (Lcoursier/util/Artifact;)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
    MethodParameters:
      Name                           Flags
      artifact                       final

  public coursier.util.EitherT<F, coursier.cache.ArtifactError, java.io.File> file(coursier.util.Artifact, int);
    descriptor: (Lcoursier/util/Artifact;I)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_0
         1: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
         4: invokeinterface #583,  1          // InterfaceMethod scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
         9: checkcast     #585                // class scala/collection/IterableOps
        12: aload_0
        13: aload_1
        14: iload_2
        15: invokedynamic #595,  0            // InvokeDynamic #11:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;I)Lscala/Function1;
        20: invokeinterface #596,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
        25: checkcast     #598                // class scala/collection/IterableOnceOps
        28: aload_0
        29: aload_1
        30: aload_0
        31: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        34: invokeinterface #601,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        39: checkcast     #603                // class coursier/cache/CachePolicy
        42: iload_2
        43: invokespecial #605                // Method filePerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
        46: aload_0
        47: invokedynamic #617,  0            // InvokeDynamic #12:apply:(Lcoursier/cache/FileCache;)Lscala/Function2;
        52: invokeinterface #621,  3          // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        57: checkcast     #476                // class coursier/util/EitherT
        60: areturn
      LineNumberTable:
        line 256: 0
        line 257: 28
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      61     0  this   Lcoursier/cache/FileCache;
            0      61     1 artifact   Lcoursier/util/Artifact;
            0      61     2 retry   I
    Signature: #578                         // (Lcoursier/util/Artifact;I)Lcoursier/util/EitherT<TF;Lcoursier/cache/ArtifactError;Ljava/io/File;>;
    MethodParameters:
      Name                           Flags
      artifact                       final
      retry                          final

  private int filePerPolicy$default$3();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #574                // Method retry:()I
         4: ireturn
      LineNumberTable:
        line 153: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  private int filePerPolicy0$default$3();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #574                // Method retry:()I
         4: ireturn
      LineNumberTable:
        line 175: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  private coursier.util.EitherT<F, java.lang.String, java.lang.String> fetchPerPolicy(coursier.util.Artifact, coursier.cache.CachePolicy);
    descriptor: (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=10, args_size=3
         0: aload_1
         1: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
         4: ldc_w         #628                // String /.links
         7: invokevirtual #634                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        10: ifeq          50
        13: new           #636                // class scala/Tuple2
        16: dup
        17: aload_1
        18: getstatic     #641                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        21: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        24: aload_1
        25: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        28: invokevirtual #650                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        31: ldc_w         #652                // String .links
        34: invokevirtual #656                // Method scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        37: invokevirtual #660                // Method coursier/util/Artifact.withUrl:(Ljava/lang/String;)Lcoursier/util/Artifact;
        40: iconst_1
        41: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        44: invokespecial #667                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        47: goto          62
        50: new           #636                // class scala/Tuple2
        53: dup
        54: aload_1
        55: iconst_0
        56: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        59: invokespecial #667                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        62: astore        5
        64: aload         5
        66: ifnull        104
        69: aload         5
        71: invokevirtual #670                // Method scala/Tuple2._1:()Ljava/lang/Object;
        74: checkcast     #425                // class coursier/util/Artifact
        77: astore        6
        79: aload         5
        81: invokevirtual #673                // Method scala/Tuple2._2$mcZ$sp:()Z
        84: istore        7
        86: new           #636                // class scala/Tuple2
        89: dup
        90: aload         6
        92: iload         7
        94: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        97: invokespecial #667                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       100: astore_3
       101: goto          117
       104: goto          107
       107: new           #675                // class scala/MatchError
       110: dup
       111: aload         5
       113: invokespecial #676                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       116: athrow
       117: aload_3
       118: astore        4
       120: aload         4
       122: invokevirtual #670                // Method scala/Tuple2._1:()Ljava/lang/Object;
       125: checkcast     #425                // class coursier/util/Artifact
       128: astore        8
       130: aload         4
       132: invokevirtual #673                // Method scala/Tuple2._2$mcZ$sp:()Z
       135: istore        9
       137: aload_0
       138: aload         8
       140: aload_2
       141: aload_0
       142: invokespecial #678                // Method filePerPolicy$default$3:()I
       145: invokespecial #605                // Method filePerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
       148: invokedynamic #685,  0            // InvokeDynamic #13:apply:()Lscala/Function1;
       153: aload_0
       154: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       157: invokevirtual #688                // Method coursier/util/EitherT.leftMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       160: aload_0
       161: iload         9
       163: aload         8
       165: invokedynamic #698,  0            // InvokeDynamic #14:apply:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;)Lscala/Function1;
       170: aload_0
       171: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       174: invokevirtual #536                // Method coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       177: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 50 /* same */
        frame_type = 75 /* same_locals_1_stack_item */
          stack = [ class scala/Tuple2 ]
        frame_type = 254 /* append */
          offset_delta = 41
          locals = [ top, top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, class coursier/cache/CachePolicy, class scala/Tuple2, top, class scala/Tuple2, class coursier/util/Artifact, int ]
          stack = []
      LineNumberTable:
        line 262: 0
        line 263: 50
        line 261: 64
        line 262: 107
        line 261: 120
        line 265: 137
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           79      25     6 artifact0   Lcoursier/util/Artifact;
           86      18     7 links   Z
          130      47     8 artifact0   Lcoursier/util/Artifact;
          137      40     9 links   Z
            0     178     0  this   Lcoursier/cache/FileCache;
            0     178     1 artifact   Lcoursier/util/Artifact;
            0     178     2 policy   Lcoursier/cache/CachePolicy;
    Signature: #626                         // (Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      artifact                       final
      policy                         final

  public scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>> fetch();
    descriptor: ()Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #709,  0            // InvokeDynamic #15:apply:(Lcoursier/cache/FileCache;)Lscala/Function1;
         6: areturn
      LineNumberTable:
        line 354: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lcoursier/cache/FileCache;
    Signature: #701                         // ()Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;

  public scala.collection.immutable.Seq<scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>> fetchs();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
         4: aload_0
         5: invokedynamic #719,  0            // InvokeDynamic #16:apply:(Lcoursier/cache/FileCache;)Lscala/Function1;
        10: invokeinterface #720,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        15: checkcast     #226                // class scala/collection/immutable/Seq
        18: areturn
      LineNumberTable:
        line 358: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/cache/FileCache;
    Signature: #711                         // ()Lscala/collection/immutable/Seq<Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;>;

  private scala.concurrent.ExecutionContextExecutorService ec$lzycompute();
    descriptor: ()Lscala/concurrent/ExecutionContextExecutorService;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: aload_0
         5: getfield      #202                // Field bitmap$0:B
         8: iconst_2
         9: iand
        10: i2b
        11: iconst_0
        12: if_icmpne     40
        15: aload_0
        16: getstatic     #727                // Field scala/concurrent/ExecutionContext$.MODULE$:Lscala/concurrent/ExecutionContext$;
        19: aload_0
        20: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        23: invokevirtual #731                // Method scala/concurrent/ExecutionContext$.fromExecutorService:(Ljava/util/concurrent/ExecutorService;)Lscala/concurrent/ExecutionContextExecutorService;
        26: putfield      #733                // Field ec:Lscala/concurrent/ExecutionContextExecutorService;
        29: aload_0
        30: aload_0
        31: getfield      #202                // Field bitmap$0:B
        34: iconst_2
        35: ior
        36: i2b
        37: putfield      #202                // Field bitmap$0:B
        40: aload_1
        41: monitorexit
        42: goto          48
        45: aload_1
        46: monitorexit
        47: athrow
        48: aload_0
        49: getfield      #733                // Field ec:Lscala/concurrent/ExecutionContextExecutorService;
        52: areturn
      Exception table:
         from    to  target type
             4    40    45   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ class coursier/cache/FileCache ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 363: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0  this   Lcoursier/cache/FileCache;

  public scala.concurrent.ExecutionContextExecutorService ec();
    descriptor: ()Lscala/concurrent/ExecutionContextExecutorService;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #202                // Field bitmap$0:B
         4: iconst_2
         5: iand
         6: i2b
         7: iconst_0
         8: if_icmpne     18
        11: aload_0
        12: invokespecial #735                // Method ec$lzycompute:()Lscala/concurrent/ExecutionContextExecutorService;
        15: goto          22
        18: aload_0
        19: getfield      #733                // Field ec:Lscala/concurrent/ExecutionContextExecutorService;
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/concurrent/ExecutionContextExecutorService ]
      LineNumberTable:
        line 363: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcoursier/cache/FileCache;

  public coursier.cache.FileCache<F> withLocation(java.io.File);
    descriptor: (Ljava/io/File;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
         9: aload_0
        10: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        13: aload_0
        14: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        17: aload_0
        18: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        21: aload_0
        22: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 location   Ljava/io/File;
    Signature: #290                         // (Ljava/io/File;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      location                       final

  public coursier.cache.FileCache<F> withCachePolicies(scala.collection.immutable.Seq<coursier.cache.CachePolicy>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_1
         9: aload_0
        10: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        13: aload_0
        14: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        17: aload_0
        18: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        21: aload_0
        22: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 cachePolicies   Lscala/collection/immutable/Seq;
    Signature: #744                         // (Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      cachePolicies                  final

  public coursier.cache.FileCache<F> withChecksums(scala.collection.immutable.Seq<scala.Option<java.lang.String>>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_1
        13: aload_0
        14: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        17: aload_0
        18: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        21: aload_0
        22: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 checksums   Lscala/collection/immutable/Seq;
    Signature: #746                         // (Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      checksums                      final

  public coursier.cache.FileCache<F> withCredentials(scala.collection.immutable.Seq<coursier.credentials.Credentials>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_1
        17: aload_0
        18: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        21: aload_0
        22: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 credentials   Lscala/collection/immutable/Seq;
    Signature: #284                         // (Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      credentials                    final

  public coursier.cache.FileCache<F> withLogger(coursier.cache.CacheLogger);
    descriptor: (Lcoursier/cache/CacheLogger;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_1
        21: aload_0
        22: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 logger   Lcoursier/cache/CacheLogger;
    Signature: #749                         // (Lcoursier/cache/CacheLogger;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      logger                         final

  public coursier.cache.FileCache<F> withPool(java.util.concurrent.ExecutorService);
    descriptor: (Ljava/util/concurrent/ExecutorService;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_1
        25: aload_0
        26: invokevirtual #394                // Method ttl:()Lscala/Option;
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1  pool   Ljava/util/concurrent/ExecutorService;
    Signature: #752                         // (Ljava/util/concurrent/ExecutorService;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      pool                           final

  public coursier.cache.FileCache<F> withTtl(scala.Option<scala.concurrent.duration.Duration>);
    descriptor: (Lscala/Option;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_1
        29: aload_0
        30: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1   ttl   Lscala/Option;
    Signature: #753                         // (Lscala/Option<Lscala/concurrent/duration/Duration;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      ttl                            final

  public coursier.cache.FileCache<F> withLocalArtifactsShouldBeCached(boolean);
    descriptor: (Z)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: iload_1
        33: aload_0
        34: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 localArtifactsShouldBeCached   Z
    Signature: #756                         // (Z)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      localArtifactsShouldBeCached   final

  public coursier.cache.FileCache<F> withFollowHttpToHttpsRedirections(boolean);
    descriptor: (Z)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: iload_1
        37: aload_0
        38: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 followHttpToHttpsRedirections   Z
    Signature: #756                         // (Z)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      followHttpToHttpsRedirections  final

  public coursier.cache.FileCache<F> withFollowHttpsToHttpRedirections(boolean);
    descriptor: (Z)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: iload_1
        41: aload_0
        42: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 followHttpsToHttpRedirections   Z
    Signature: #756                         // (Z)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      followHttpsToHttpRedirections  final

  public coursier.cache.FileCache<F> withMaxRedirections(scala.Option<java.lang.Object>);
    descriptor: (Lscala/Option;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_1
        45: aload_0
        46: invokevirtual #402                // Method sslRetry:()I
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 maxRedirections   Lscala/Option;
    Signature: #759                         // (Lscala/Option<Ljava/lang/Object;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      maxRedirections                final

  public coursier.cache.FileCache<F> withSslRetry(int);
    descriptor: (I)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: iload_1
        49: aload_0
        50: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 sslRetry   I
    Signature: #337                         // (I)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      sslRetry                       final

  public coursier.cache.FileCache<F> withSslSocketFactoryOpt(scala.Option<javax.net.ssl.SSLSocketFactory>);
    descriptor: (Lscala/Option;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: aload_0
        49: invokevirtual #402                // Method sslRetry:()I
        52: aload_1
        53: aload_0
        54: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 sslSocketFactoryOpt   Lscala/Option;
    Signature: #761                         // (Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      sslSocketFactoryOpt            final

  public coursier.cache.FileCache<F> withHostnameVerifierOpt(scala.Option<javax.net.ssl.HostnameVerifier>);
    descriptor: (Lscala/Option;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: aload_0
        49: invokevirtual #402                // Method sslRetry:()I
        52: aload_0
        53: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        56: aload_1
        57: aload_0
        58: invokevirtual #574                // Method retry:()I
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 hostnameVerifierOpt   Lscala/Option;
    Signature: #762                         // (Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      hostnameVerifierOpt            final

  public coursier.cache.FileCache<F> withRetry(int);
    descriptor: (I)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: aload_0
        49: invokevirtual #402                // Method sslRetry:()I
        52: aload_0
        53: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        56: aload_0
        57: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        60: iload_1
        61: aload_0
        62: invokevirtual #408                // Method bufferSize:()I
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 retry   I
    Signature: #337                         // (I)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      retry                          final

  public coursier.cache.FileCache<F> withBufferSize(int);
    descriptor: (I)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: aload_0
        49: invokevirtual #402                // Method sslRetry:()I
        52: aload_0
        53: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        56: aload_0
        57: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        60: aload_0
        61: invokevirtual #574                // Method retry:()I
        64: iload_1
        65: aload_0
        66: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 bufferSize   I
    Signature: #337                         // (I)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      bufferSize                     final

  public coursier.cache.FileCache<F> withClassLoaders(scala.collection.immutable.Seq<java.lang.ClassLoader>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: aload_0
        49: invokevirtual #402                // Method sslRetry:()I
        52: aload_0
        53: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        56: aload_0
        57: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        60: aload_0
        61: invokevirtual #574                // Method retry:()I
        64: aload_0
        65: invokevirtual #408                // Method bufferSize:()I
        68: aload_1
        69: aload_0
        70: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1 classLoaders   Lscala/collection/immutable/Seq;
    Signature: #766                         // (Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      classLoaders                   final

  public coursier.cache.FileCache<F> withSync(coursier.util.Sync<F>);
    descriptor: (Lcoursier/util/Sync;)Lcoursier/cache/FileCache;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=20, locals=2, args_size=2
         0: new           #2                  // class coursier/cache/FileCache
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: aload_0
        37: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        40: aload_0
        41: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        44: aload_0
        45: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        48: aload_0
        49: invokevirtual #402                // Method sslRetry:()I
        52: aload_0
        53: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        56: aload_0
        57: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        60: aload_0
        61: invokevirtual #574                // Method retry:()I
        64: aload_0
        65: invokevirtual #408                // Method bufferSize:()I
        68: aload_0
        69: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        72: aload_1
        73: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        76: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      77     0  this   Lcoursier/cache/FileCache;
            0      77     1  sync   Lcoursier/util/Sync;
    Signature: #768                         // (Lcoursier/util/Sync<TF;>;)Lcoursier/cache/FileCache<TF;>;
    MethodParameters:
      Name                           Flags
      sync                           final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #771                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #773                // String FileCache(
         7: invokespecial #774                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
        10: astore_1
        11: aload_1
        12: aload_0
        13: invokevirtual #353                // Method location:()Ljava/io/File;
        16: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        19: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: pop
        23: aload_1
        24: ldc_w         #784                // String ,
        27: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: pop
        31: aload_1
        32: aload_0
        33: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        36: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        39: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        42: pop
        43: aload_1
        44: ldc_w         #784                // String ,
        47: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: pop
        51: aload_1
        52: aload_0
        53: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        56: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        59: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        62: pop
        63: aload_1
        64: ldc_w         #784                // String ,
        67: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        70: pop
        71: aload_1
        72: aload_0
        73: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        76: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        79: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        82: pop
        83: aload_1
        84: ldc_w         #784                // String ,
        87: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        90: pop
        91: aload_1
        92: aload_0
        93: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        96: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        99: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       102: pop
       103: aload_1
       104: ldc_w         #784                // String ,
       107: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       110: pop
       111: aload_1
       112: aload_0
       113: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
       116: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       119: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       122: pop
       123: aload_1
       124: ldc_w         #784                // String ,
       127: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       130: pop
       131: aload_1
       132: aload_0
       133: invokevirtual #394                // Method ttl:()Lscala/Option;
       136: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       139: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       142: pop
       143: aload_1
       144: ldc_w         #784                // String ,
       147: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       150: pop
       151: aload_1
       152: aload_0
       153: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
       156: invokestatic  #787                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       159: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       162: pop
       163: aload_1
       164: ldc_w         #784                // String ,
       167: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       170: pop
       171: aload_1
       172: aload_0
       173: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
       176: invokestatic  #787                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       179: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       182: pop
       183: aload_1
       184: ldc_w         #784                // String ,
       187: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       190: pop
       191: aload_1
       192: aload_0
       193: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
       196: invokestatic  #787                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
       199: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       202: pop
       203: aload_1
       204: ldc_w         #784                // String ,
       207: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       210: pop
       211: aload_1
       212: aload_0
       213: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
       216: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       219: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       222: pop
       223: aload_1
       224: ldc_w         #784                // String ,
       227: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       230: pop
       231: aload_1
       232: aload_0
       233: invokevirtual #402                // Method sslRetry:()I
       236: invokestatic  #790                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       239: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       242: pop
       243: aload_1
       244: ldc_w         #784                // String ,
       247: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       250: pop
       251: aload_1
       252: aload_0
       253: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
       256: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       259: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       262: pop
       263: aload_1
       264: ldc_w         #784                // String ,
       267: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       270: pop
       271: aload_1
       272: aload_0
       273: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
       276: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       279: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       282: pop
       283: aload_1
       284: ldc_w         #784                // String ,
       287: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       290: pop
       291: aload_1
       292: aload_0
       293: invokevirtual #574                // Method retry:()I
       296: invokestatic  #790                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       299: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       302: pop
       303: aload_1
       304: ldc_w         #784                // String ,
       307: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       310: pop
       311: aload_1
       312: aload_0
       313: invokevirtual #408                // Method bufferSize:()I
       316: invokestatic  #790                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       319: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       322: pop
       323: aload_1
       324: ldc_w         #784                // String ,
       327: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       330: pop
       331: aload_1
       332: aload_0
       333: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
       336: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       339: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       342: pop
       343: aload_1
       344: ldc_w         #784                // String ,
       347: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       350: pop
       351: aload_1
       352: aload_0
       353: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       356: invokestatic  #778                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       359: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       362: pop
       363: aload_1
       364: ldc_w         #792                // String )
       367: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       370: pop
       371: aload_1
       372: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       375: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           11     364     1     b   Ljava/lang/StringBuilder;
            0     376     0  this   Lcoursier/cache/FileCache;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/cache/FileCache
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/cache/FileCache;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=15, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     465
         5: aload_0
         6: aload_1
         7: invokevirtual #802                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          469
        13: aload_1
        14: checkcast     #2                  // class coursier/cache/FileCache
        17: astore_2
        18: iconst_1
        19: ifeq          461
        22: aload_0
        23: invokevirtual #353                // Method location:()Ljava/io/File;
        26: aload_2
        27: invokevirtual #353                // Method location:()Ljava/io/File;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          461
        43: aload_3
        44: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          461
        50: aload_0
        51: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        54: aload_2
        55: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          461
        73: aload         4
        75: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          461
        81: aload_0
        82: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        85: aload_2
        86: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        89: astore        5
        91: dup
        92: ifnonnull     104
        95: pop
        96: aload         5
        98: ifnull        112
       101: goto          461
       104: aload         5
       106: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       109: ifeq          461
       112: aload_0
       113: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
       116: aload_2
       117: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
       120: astore        6
       122: dup
       123: ifnonnull     135
       126: pop
       127: aload         6
       129: ifnull        143
       132: goto          461
       135: aload         6
       137: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       140: ifeq          461
       143: aload_0
       144: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
       147: aload_2
       148: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
       151: astore        7
       153: dup
       154: ifnonnull     166
       157: pop
       158: aload         7
       160: ifnull        174
       163: goto          461
       166: aload         7
       168: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       171: ifeq          461
       174: aload_0
       175: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
       178: aload_2
       179: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
       182: astore        8
       184: dup
       185: ifnonnull     197
       188: pop
       189: aload         8
       191: ifnull        205
       194: goto          461
       197: aload         8
       199: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       202: ifeq          461
       205: aload_0
       206: invokevirtual #394                // Method ttl:()Lscala/Option;
       209: aload_2
       210: invokevirtual #394                // Method ttl:()Lscala/Option;
       213: astore        9
       215: dup
       216: ifnonnull     228
       219: pop
       220: aload         9
       222: ifnull        236
       225: goto          461
       228: aload         9
       230: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       233: ifeq          461
       236: aload_0
       237: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
       240: aload_2
       241: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
       244: if_icmpne     461
       247: aload_0
       248: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
       251: aload_2
       252: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
       255: if_icmpne     461
       258: aload_0
       259: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
       262: aload_2
       263: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
       266: if_icmpne     461
       269: aload_0
       270: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
       273: aload_2
       274: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
       277: astore        10
       279: dup
       280: ifnonnull     292
       283: pop
       284: aload         10
       286: ifnull        300
       289: goto          461
       292: aload         10
       294: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       297: ifeq          461
       300: aload_0
       301: invokevirtual #402                // Method sslRetry:()I
       304: aload_2
       305: invokevirtual #402                // Method sslRetry:()I
       308: if_icmpne     461
       311: aload_0
       312: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
       315: aload_2
       316: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
       319: astore        11
       321: dup
       322: ifnonnull     334
       325: pop
       326: aload         11
       328: ifnull        342
       331: goto          461
       334: aload         11
       336: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       339: ifeq          461
       342: aload_0
       343: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
       346: aload_2
       347: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
       350: astore        12
       352: dup
       353: ifnonnull     365
       356: pop
       357: aload         12
       359: ifnull        373
       362: goto          461
       365: aload         12
       367: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       370: ifeq          461
       373: aload_0
       374: invokevirtual #574                // Method retry:()I
       377: aload_2
       378: invokevirtual #574                // Method retry:()I
       381: if_icmpne     461
       384: aload_0
       385: invokevirtual #408                // Method bufferSize:()I
       388: aload_2
       389: invokevirtual #408                // Method bufferSize:()I
       392: if_icmpne     461
       395: aload_0
       396: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
       399: aload_2
       400: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
       403: astore        13
       405: dup
       406: ifnonnull     418
       409: pop
       410: aload         13
       412: ifnull        426
       415: goto          461
       418: aload         13
       420: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       423: ifeq          461
       426: aload_0
       427: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       430: aload_2
       431: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       434: astore        14
       436: dup
       437: ifnonnull     449
       440: pop
       441: aload         14
       443: ifnull        457
       446: goto          461
       449: aload         14
       451: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       454: ifeq          461
       457: iconst_1
       458: goto          462
       461: iconst_0
       462: ifeq          469
       465: iconst_1
       466: goto          470
       469: iconst_0
       470: ireturn
      StackMapTable: number_of_entries = 29
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File ]
          stack = [ class java/io/File ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger ]
          stack = [ class coursier/cache/CacheLogger ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService ]
          stack = [ class java/util/concurrent/ExecutorService ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 55
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, class scala/Option, class scala/Option, class scala/Option ]
          stack = [ class scala/Option ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 44
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, class scala/Option, class scala/Option, class scala/Option, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, class scala/Option, class scala/Option, class scala/Option, class scala/collection/immutable/Seq, class coursier/util/Sync ]
          stack = [ class coursier/util/Sync ]
        frame_type = 7 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class coursier/cache/FileCache, class java/lang/Object, class coursier/cache/FileCache ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18     444     2 other   Lcoursier/cache/FileCache;
            0     471     0  this   Lcoursier/cache/FileCache;
            0     471     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc_w         #814                // String FileCache
         5: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         8: iadd
         9: istore_1
        10: bipush        37
        12: iload_1
        13: imul
        14: aload_0
        15: invokevirtual #353                // Method location:()Ljava/io/File;
        18: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        21: iadd
        22: istore_1
        23: bipush        37
        25: iload_1
        26: imul
        27: aload_0
        28: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        31: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        34: iadd
        35: istore_1
        36: bipush        37
        38: iload_1
        39: imul
        40: aload_0
        41: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        44: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        47: iadd
        48: istore_1
        49: bipush        37
        51: iload_1
        52: imul
        53: aload_0
        54: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        57: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        60: iadd
        61: istore_1
        62: bipush        37
        64: iload_1
        65: imul
        66: aload_0
        67: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        70: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        73: iadd
        74: istore_1
        75: bipush        37
        77: iload_1
        78: imul
        79: aload_0
        80: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        83: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        86: iadd
        87: istore_1
        88: bipush        37
        90: iload_1
        91: imul
        92: aload_0
        93: invokevirtual #394                // Method ttl:()Lscala/Option;
        96: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        99: iadd
       100: istore_1
       101: bipush        37
       103: iload_1
       104: imul
       105: aload_0
       106: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
       109: ifeq          118
       112: sipush        1231
       115: goto          121
       118: sipush        1237
       121: iadd
       122: istore_1
       123: bipush        37
       125: iload_1
       126: imul
       127: aload_0
       128: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
       131: ifeq          140
       134: sipush        1231
       137: goto          143
       140: sipush        1237
       143: iadd
       144: istore_1
       145: bipush        37
       147: iload_1
       148: imul
       149: aload_0
       150: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
       153: ifeq          162
       156: sipush        1231
       159: goto          165
       162: sipush        1237
       165: iadd
       166: istore_1
       167: bipush        37
       169: iload_1
       170: imul
       171: aload_0
       172: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
       175: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       178: iadd
       179: istore_1
       180: bipush        37
       182: iload_1
       183: imul
       184: aload_0
       185: invokevirtual #402                // Method sslRetry:()I
       188: iadd
       189: istore_1
       190: bipush        37
       192: iload_1
       193: imul
       194: aload_0
       195: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
       198: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       201: iadd
       202: istore_1
       203: bipush        37
       205: iload_1
       206: imul
       207: aload_0
       208: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
       211: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       214: iadd
       215: istore_1
       216: bipush        37
       218: iload_1
       219: imul
       220: aload_0
       221: invokevirtual #574                // Method retry:()I
       224: iadd
       225: istore_1
       226: bipush        37
       228: iload_1
       229: imul
       230: aload_0
       231: invokevirtual #408                // Method bufferSize:()I
       234: iadd
       235: istore_1
       236: bipush        37
       238: iload_1
       239: imul
       240: aload_0
       241: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
       244: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       247: iadd
       248: istore_1
       249: bipush        37
       251: iload_1
       252: imul
       253: aload_0
       254: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       257: invokestatic  #820                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
       260: iadd
       261: istore_1
       262: bipush        37
       264: iload_1
       265: imul
       266: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 118
          locals = [ class coursier/cache/FileCache, int ]
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/FileCache, int ]
          stack = [ int, int ]
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/FileCache, int ]
          stack = [ int, int ]
        frame_type = 82 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/FileCache, int ]
          stack = [ int, int ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10     256     1  code   I
            0     267     0  this   Lcoursier/cache/FileCache;

  private scala.Tuple18<java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, java.lang.Object, java.lang.Object, java.lang.Object, scala.Option<java.lang.Object>, java.lang.Object, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, java.lang.Object, java.lang.Object, scala.collection.immutable.Seq<java.lang.ClassLoader>, coursier.util.Sync<F>> tuple();
    descriptor: ()Lscala/Tuple18;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=20, locals=1, args_size=1
         0: new           #826                // class scala/Tuple18
         3: dup
         4: aload_0
         5: invokevirtual #353                // Method location:()Ljava/io/File;
         8: aload_0
         9: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        12: aload_0
        13: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
        16: aload_0
        17: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
        20: aload_0
        21: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        24: aload_0
        25: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
        28: aload_0
        29: invokevirtual #394                // Method ttl:()Lscala/Option;
        32: aload_0
        33: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
        36: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        39: aload_0
        40: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
        43: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        46: aload_0
        47: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
        50: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        53: aload_0
        54: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
        57: aload_0
        58: invokevirtual #402                // Method sslRetry:()I
        61: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        64: aload_0
        65: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
        68: aload_0
        69: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
        72: aload_0
        73: invokevirtual #574                // Method retry:()I
        76: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        79: aload_0
        80: invokevirtual #408                // Method bufferSize:()I
        83: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        86: aload_0
        87: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
        90: aload_0
        91: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        94: invokespecial #829                // Method scala/Tuple18."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        97: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      98     0  this   Lcoursier/cache/FileCache;
    Signature: #824                         // ()Lscala/Tuple18<Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscala/Option<Ljava/lang/Object;>;Ljava/lang/Object;Lscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #814                // String FileCache
         3: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/cache/FileCache;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: bipush        18
         2: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/cache/FileCache;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 17
                       0: 88
                       1: 95
                       2: 102
                       3: 109
                       4: 116
                       5: 123
                       6: 130
                       7: 137
                       8: 147
                       9: 157
                      10: 167
                      11: 174
                      12: 184
                      13: 191
                      14: 198
                      15: 208
                      16: 218
                      17: 225
                 default: 232
            }
        88: aload_0
        89: invokevirtual #353                // Method location:()Ljava/io/File;
        92: goto          247
        95: aload_0
        96: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        99: goto          247
       102: aload_0
       103: invokevirtual #739                // Method checksums:()Lscala/collection/immutable/Seq;
       106: goto          247
       109: aload_0
       110: invokevirtual #204                // Method credentials:()Lscala/collection/immutable/Seq;
       113: goto          247
       116: aload_0
       117: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
       120: goto          247
       123: aload_0
       124: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
       127: goto          247
       130: aload_0
       131: invokevirtual #394                // Method ttl:()Lscala/Option;
       134: goto          247
       137: aload_0
       138: invokevirtual #355                // Method localArtifactsShouldBeCached:()Z
       141: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       144: goto          247
       147: aload_0
       148: invokevirtual #396                // Method followHttpToHttpsRedirections:()Z
       151: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       154: goto          247
       157: aload_0
       158: invokevirtual #398                // Method followHttpsToHttpRedirections:()Z
       161: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       164: goto          247
       167: aload_0
       168: invokevirtual #400                // Method maxRedirections:()Lscala/Option;
       171: goto          247
       174: aload_0
       175: invokevirtual #402                // Method sslRetry:()I
       178: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       181: goto          247
       184: aload_0
       185: invokevirtual #404                // Method sslSocketFactoryOpt:()Lscala/Option;
       188: goto          247
       191: aload_0
       192: invokevirtual #406                // Method hostnameVerifierOpt:()Lscala/Option;
       195: goto          247
       198: aload_0
       199: invokevirtual #574                // Method retry:()I
       202: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       205: goto          247
       208: aload_0
       209: invokevirtual #408                // Method bufferSize:()I
       212: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       215: goto          247
       218: aload_0
       219: invokevirtual #410                // Method classLoaders:()Lscala/collection/immutable/Seq;
       222: goto          247
       225: aload_0
       226: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       229: goto          247
       232: new           #836                // class java/lang/IndexOutOfBoundsException
       235: dup
       236: iload_2
       237: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       240: invokevirtual #837                // Method java/lang/Object.toString:()Ljava/lang/String;
       243: invokespecial #838                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       246: athrow
       247: areturn
      StackMapTable: number_of_entries = 20
        frame_type = 252 /* append */
          offset_delta = 88
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 9 /* same */
        frame_type = 9 /* same */
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     248     0  this   Lcoursier/cache/FileCache;
            0     248     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 17
                       0: 88
                       1: 94
                       2: 100
                       3: 106
                       4: 112
                       5: 118
                       6: 124
                       7: 130
                       8: 136
                       9: 142
                      10: 148
                      11: 154
                      12: 160
                      13: 166
                      14: 172
                      15: 178
                      16: 184
                      17: 190
                 default: 196
            }
        88: ldc_w         #840                // String location
        91: goto          211
        94: ldc_w         #841                // String cachePolicies
        97: goto          211
       100: ldc_w         #842                // String checksums
       103: goto          211
       106: ldc_w         #843                // String credentials
       109: goto          211
       112: ldc_w         #844                // String logger
       115: goto          211
       118: ldc_w         #845                // String pool
       121: goto          211
       124: ldc_w         #846                // String ttl
       127: goto          211
       130: ldc_w         #847                // String localArtifactsShouldBeCached
       133: goto          211
       136: ldc_w         #848                // String followHttpToHttpsRedirections
       139: goto          211
       142: ldc_w         #849                // String followHttpsToHttpRedirections
       145: goto          211
       148: ldc_w         #850                // String maxRedirections
       151: goto          211
       154: ldc_w         #851                // String sslRetry
       157: goto          211
       160: ldc_w         #852                // String sslSocketFactoryOpt
       163: goto          211
       166: ldc_w         #853                // String hostnameVerifierOpt
       169: goto          211
       172: ldc_w         #854                // String retry
       175: goto          211
       178: ldc_w         #855                // String bufferSize
       181: goto          211
       184: ldc_w         #856                // String classLoaders
       187: goto          211
       190: ldc_w         #857                // String sync
       193: goto          211
       196: new           #836                // class java/lang/IndexOutOfBoundsException
       199: dup
       200: iload_2
       201: invokestatic  #344                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       204: invokevirtual #837                // Method java/lang/Object.toString:()Ljava/lang/String;
       207: invokespecial #838                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
       210: athrow
       211: areturn
      StackMapTable: number_of_entries = 20
        frame_type = 252 /* append */
          offset_delta = 88
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     212     0  this   Lcoursier/cache/FileCache;
            0     212     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public scala.concurrent.ExecutionContext ec();
    descriptor: ()Lscala/concurrent/ExecutionContext;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #860                // Method ec:()Lscala/concurrent/ExecutionContextExecutorService;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public scala.Option loggerOpt();
    descriptor: ()Lscala/Option;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #862                // Method loggerOpt:()Lscala/Some;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/cache/FileCache;

  public static final scala.collection.immutable.Seq $anonfun$allCredentials0$1(coursier.credentials.Credentials);
    descriptor: (Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #867                // Method coursier/credentials/Credentials.get:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/credentials/Credentials;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final scala.collection.immutable.Seq $anonfun$allCredentials$1(coursier.cache.FileCache);
    descriptor: (Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #871                // Method allCredentials0:()Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/cache/FileCache;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static final scala.collection.immutable.Seq $anonfun$actualChecksums$1(scala.Option);
    descriptor: (Lscala/Option;)Lscala/collection/immutable/Seq;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #879                // Field scala/Option$.MODULE$:Lscala/Option$;
         3: aload_0
         4: invokevirtual #883                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
         7: invokeinterface #888,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
        12: areturn
      LineNumberTable:
        line 81: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0   x$2   Lscala/Option;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final java.lang.String $anonfun$validateChecksum$1(coursier.core.Authentication);
    descriptor: (Lcoursier/core/Authentication;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #893                // Method coursier/core/Authentication.user:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 112: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$3   Lcoursier/core/Authentication;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final java.lang.String $anonfun$validateChecksum$3(coursier.core.Authentication);
    descriptor: (Lcoursier/core/Authentication;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #893                // Method coursier/core/Authentication.user:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$4   Lcoursier/core/Authentication;
    MethodParameters:
      Name                           Flags
      x$4                            final

  public static final java.io.File $anonfun$validateChecksum$2(coursier.cache.FileCache, coursier.util.Artifact, java.lang.String);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokevirtual #430                // Method coursier/util/Artifact.authentication:()Lscala/Option;
         6: invokedynamic #902,  0            // InvokeDynamic #17:apply:()Lscala/Function1;
        11: invokevirtual #443                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        14: invokevirtual #445                // Method localFile:(Ljava/lang/String;Lscala/Option;)Ljava/io/File;
        17: areturn
      LineNumberTable:
        line 115: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 $this   Lcoursier/cache/FileCache;
            0      18     1 artifact$1   Lcoursier/util/Artifact;
            0      18     2 sumUrl   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$1                     final
      sumUrl                         final

  public static final boolean $anonfun$validateChecksum$5(java.io.File);
    descriptor: (Ljava/io/File;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #908                // Method java/io/File.exists:()Z
         4: ireturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$5   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final scala.util.Either $anonfun$validateChecksum$4(coursier.cache.FileCache, scala.collection.immutable.Seq, scala.Option, java.lang.String, java.io.File);
    descriptor: (Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=15, args_size=5
         0: aload_1
         1: getstatic     #879                // Field scala/Option$.MODULE$:Lscala/Option$;
         4: aload_2
         5: invokevirtual #883                // Method scala/Option$.option2Iterable:(Lscala/Option;)Lscala/collection/Iterable;
         8: invokeinterface #888,  1          // InterfaceMethod scala/collection/Iterable.toSeq:()Lscala/collection/immutable/Seq;
        13: invokeinterface #288,  2          // InterfaceMethod scala/collection/immutable/Seq.$plus$plus:(Lscala/collection/IterableOnce;)Ljava/lang/Object;
        18: checkcast     #598                // class scala/collection/IterableOnceOps
        21: invokedynamic #919,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
        26: invokeinterface #922,  2          // InterfaceMethod scala/collection/IterableOnceOps.find:(Lscala/Function1;)Lscala/Option;
        31: astore        7
        33: aload         7
        35: instanceof    #311                // class scala/Some
        38: ifeq          250
        41: aload         7
        43: checkcast     #311                // class scala/Some
        46: astore        8
        48: aload         8
        50: invokevirtual #925                // Method scala/Some.value:()Ljava/lang/Object;
        53: checkcast     #262                // class java/io/File
        56: astore        9
        58: getstatic     #930                // Field coursier/cache/CacheChecksum$.MODULE$:Lcoursier/cache/CacheChecksum$;
        61: aload         9
        63: invokevirtual #934                // Method java/io/File.toPath:()Ljava/nio/file/Path;
        66: invokestatic  #940                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
        69: invokevirtual #944                // Method coursier/cache/CacheChecksum$.parseRawChecksum:([B)Lscala/Option;
        72: astore        10
        74: aload         10
        76: astore        11
        78: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
        81: aload         11
        83: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        86: ifeq          116
        89: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
        92: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
        95: new           #20                 // class coursier/cache/ArtifactError$ChecksumFormatError
        98: dup
        99: aload_3
       100: aload         9
       102: invokevirtual #956                // Method java/io/File.getPath:()Ljava/lang/String;
       105: invokespecial #959                // Method coursier/cache/ArtifactError$ChecksumFormatError."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       108: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       111: astore        6
       113: goto          243
       116: goto          119
       119: aload         11
       121: instanceof    #311                // class scala/Some
       124: ifeq          230
       127: aload         11
       129: checkcast     #311                // class scala/Some
       132: astore        12
       134: aload         12
       136: invokevirtual #925                // Method scala/Some.value:()Ljava/lang/Object;
       139: checkcast     #966                // class java/math/BigInteger
       142: astore        13
       144: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
       147: aload_0
       148: invokevirtual #353                // Method location:()Ljava/io/File;
       151: aload_3
       152: aload         4
       154: invokevirtual #970                // Method coursier/cache/FileCache$.coursier$cache$FileCache$$persistedDigest:(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)Ljava/math/BigInteger;
       157: astore        14
       159: aload         13
       161: aload         14
       163: invokestatic  #974                // Method scala/runtime/BoxesRunTime.equalsNumNum:(Ljava/lang/Number;Ljava/lang/Number;)Z
       166: ifeq          184
       169: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       172: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
       175: getstatic     #984                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       178: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       181: goto          225
       184: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       187: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
       190: new           #26                 // class coursier/cache/ArtifactError$WrongChecksum
       193: dup
       194: aload_3
       195: aload         14
       197: bipush        16
       199: invokevirtual #991                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
       202: aload         13
       204: bipush        16
       206: invokevirtual #991                // Method java/math/BigInteger.toString:(I)Ljava/lang/String;
       209: aload         4
       211: invokevirtual #956                // Method java/io/File.getPath:()Ljava/lang/String;
       214: aload         9
       216: invokevirtual #956                // Method java/io/File.getPath:()Ljava/lang/String;
       219: invokespecial #994                // Method coursier/cache/ArtifactError$WrongChecksum."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       222: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       225: astore        6
       227: goto          243
       230: goto          233
       233: new           #675                // class scala/MatchError
       236: dup
       237: aload         11
       239: invokespecial #676                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       242: athrow
       243: aload         6
       245: astore        5
       247: goto          304
       250: goto          253
       253: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
       256: aload         7
       258: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       261: ifeq          291
       264: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       267: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
       270: new           #23                 // class coursier/cache/ArtifactError$ChecksumNotFound
       273: dup
       274: aload_3
       275: aload         4
       277: invokevirtual #956                // Method java/io/File.getPath:()Ljava/lang/String;
       280: invokespecial #997                // Method coursier/cache/ArtifactError$ChecksumNotFound."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       283: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       286: astore        5
       288: goto          304
       291: goto          294
       294: new           #675                // class scala/MatchError
       297: dup
       298: aload         7
       300: invokespecial #676                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       303: athrow
       304: aload         5
       306: areturn
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 116
          locals = [ class coursier/cache/FileCache, class scala/collection/immutable/Seq, class scala/Option, class java/lang/String, class java/io/File, top, top, class scala/Option, class scala/Some, class java/io/File, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 254 /* append */
          offset_delta = 64
          locals = [ class scala/Some, class java/math/BigInteger, class java/math/BigInteger ]
        frame_type = 104 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 248 /* chop */
          offset_delta = 4
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/FileCache, class scala/collection/immutable/Seq, class scala/Option, class java/lang/String, class java/io/File, top, class scala/util/Either, class scala/Option, class scala/Some, class java/io/File, class scala/Option, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/cache/FileCache, class scala/collection/immutable/Seq, class scala/Option, class java/lang/String, class java/io/File, top, top, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 37 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/FileCache, class scala/collection/immutable/Seq, class scala/Option, class java/lang/String, class java/io/File, class scala/util/Either, top, class scala/Option ]
          stack = []
      LineNumberTable:
        line 119: 0
        line 120: 33
        line 122: 58
        line 124: 74
        line 125: 78
        line 126: 89
        line 125: 116
        line 128: 119
        line 129: 144
        line 131: 159
        line 132: 169
        line 134: 184
        line 135: 194
        line 136: 195
        line 137: 202
        line 138: 209
        line 139: 214
        line 128: 230
        line 124: 233
        line 120: 250
        line 143: 253
        line 144: 264
        line 143: 291
        line 119: 294
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          159      66    14 calculatedSum   Ljava/math/BigInteger;
          144      86    13   sum   Ljava/math/BigInteger;
           74     171    10 sumOpt   Lscala/Option;
           58     192     9 sumFile   Ljava/io/File;
            0     307     0 $this   Lcoursier/cache/FileCache;
            0     307     1 headerSumFile$1   Lscala/collection/immutable/Seq;
            0     307     2 downloadedSumFile$1   Lscala/Option;
            0     307     3 sumType$1   Ljava/lang/String;
            0     307     4 localFile0$1   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      headerSumFile$1                final
      downloadedSumFile$1            final
      sumType$1                      final
      localFile0$1                   final

  public static final boolean $anonfun$filePerPolicy$2(coursier.util.Artifact, coursier.credentials.DirectCredentials);
    descriptor: (Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: aload_0
         2: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
         5: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
         8: invokevirtual #1012               // Method coursier/credentials/DirectCredentials.autoMatches:(Ljava/lang/String;Lscala/Option;)Z
        11: ireturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0 artifact$2   Lcoursier/util/Artifact;
            0      12     1   x$6   Lcoursier/credentials/DirectCredentials;
    MethodParameters:
      Name                           Flags
      artifact$2                     final
      x$6                            final

  public static final coursier.core.Authentication $anonfun$filePerPolicy$3(coursier.credentials.DirectCredentials);
    descriptor: (Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1019               // Method coursier/credentials/DirectCredentials.authentication:()Lcoursier/core/Authentication;
         4: areturn
      LineNumberTable:
        line 160: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$7   Lcoursier/credentials/DirectCredentials;
    MethodParameters:
      Name                           Flags
      x$7                            final

  public static final coursier.util.Artifact $anonfun$filePerPolicy$1(coursier.util.Artifact, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: invokevirtual #430                // Method coursier/util/Artifact.authentication:()Lscala/Option;
         4: invokevirtual #1022               // Method scala/Option.isEmpty:()Z
         7: ifeq          39
        10: aload_1
        11: aload_0
        12: invokedynamic #1030,  0           // InvokeDynamic #19:apply:(Lcoursier/util/Artifact;)Lscala/Function1;
        17: invokeinterface #1031,  2         // InterfaceMethod scala/collection/immutable/Seq.find:(Lscala/Function1;)Lscala/Option;
        22: invokedynamic #1036,  0           // InvokeDynamic #20:apply:()Lscala/Function1;
        27: invokevirtual #443                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        30: astore_2
        31: aload_0
        32: aload_2
        33: invokevirtual #1040               // Method coursier/util/Artifact.withAuthentication:(Lscala/Option;)Lcoursier/util/Artifact;
        36: goto          40
        39: aload_0
        40: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 39 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class coursier/util/Artifact ]
      LineNumberTable:
        line 157: 0
        line 158: 10
        line 159: 11
        line 160: 22
        line 161: 31
        line 163: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           31       5     2 authOpt   Lscala/Option;
            0      41     0 artifact$2   Lcoursier/util/Artifact;
            0      41     1 allCredentials   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      artifact$2                     final
      allCredentials                 final

  public static final scala.util.Right $anonfun$filePerPolicy$4(coursier.util.Artifact);
    descriptor: (Lcoursier/util/Artifact;)Lscala/util/Right;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
         6: aload_0
         7: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        10: areturn
      LineNumberTable:
        line 166: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$8   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      x$8                            final

  public static final coursier.util.EitherT $anonfun$filePerPolicy$5(coursier.cache.FileCache, coursier.cache.CachePolicy, int, coursier.util.Artifact);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_3
         2: aload_1
         3: iload_2
         4: invokespecial #1047               // Method filePerPolicy0:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
         7: areturn
      LineNumberTable:
        line 168: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/cache/FileCache;
            0       8     1 policy$1   Lcoursier/cache/CachePolicy;
            0       8     2 retry$1   I
            0       8     3     a   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      policy$1                       final
      retry$1                        final
      a                              final

  public static final scala.Tuple2 $anonfun$filePerPolicy0$2(coursier.cache.internal.DownloadResult);
    descriptor: (Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=1
         0: aload_0
         1: astore_2
         2: getstatic     #1053               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         5: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         8: aload_2
         9: invokevirtual #1056               // Method coursier/cache/internal/DownloadResult.url:()Ljava/lang/String;
        12: invokevirtual #1059               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        15: aload_2
        16: invokevirtual #1062               // Method coursier/cache/internal/DownloadResult.errorOpt:()Lscala/Option;
        19: invokevirtual #1066               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        22: astore_1
        23: goto          26
        26: aload_1
        27: areturn
      StackMapTable: number_of_entries = 1
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [ class scala/Tuple2, class coursier/cache/internal/DownloadResult ]
      LineNumberTable:
        line 184: 0
        line 185: 2
        line 184: 26
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  x0$1   Lcoursier/cache/internal/DownloadResult;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public static final boolean $anonfun$filePerPolicy0$5(char);
    descriptor: (C)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: bipush        45
         3: if_icmpeq     10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0   x$9   C
    MethodParameters:
      Name                           Flags
      x$9                            final

  public static final java.lang.String $anonfun$filePerPolicy0$4(coursier.util.Artifact, java.lang.String);
    descriptor: (Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=2, args_size=2
         0: new           #771                // class java/lang/StringBuilder
         3: dup
         4: ldc           #214                // int 1
         6: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
         9: aload_0
        10: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        13: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: ldc_w         #1080               // String .
        19: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        22: getstatic     #641                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        25: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        28: aload_1
        29: getstatic     #1086               // Field java/util/Locale.ROOT:Ljava/util/Locale;
        32: invokevirtual #1090               // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
        35: invokevirtual #650                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        38: invokedynamic #1095,  0           // InvokeDynamic #21:apply:()Lscala/Function1;
        43: invokevirtual #1099               // Method scala/collection/StringOps$.filter$extension:(Ljava/lang/String;Lscala/Function1;)Ljava/lang/String;
        46: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        49: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      53     0 artifact$3   Lcoursier/util/Artifact;
            0      53     1   c$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      artifact$3                     final
      c$1                            final

  public static final scala.Option $anonfun$filePerPolicy0$3(coursier.util.Artifact, scala.collection.immutable.Map, scala.Option);
    descriptor: (Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=8, locals=8, args_size=3
         0: aload_2
         1: astore        4
         3: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload         4
         8: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        11: ifeq          21
        14: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
        17: astore_3
        18: goto          116
        21: goto          24
        24: aload         4
        26: instanceof    #311                // class scala/Some
        29: ifeq          103
        32: aload         4
        34: checkcast     #311                // class scala/Some
        37: astore        5
        39: aload         5
        41: invokevirtual #925                // Method scala/Some.value:()Ljava/lang/Object;
        44: checkcast     #630                // class java/lang/String
        47: astore        6
        49: aload_0
        50: invokevirtual #458                // Method coursier/util/Artifact.checksumUrls:()Lscala/collection/immutable/Map;
        53: aload         6
        55: aload_0
        56: aload         6
        58: invokedynamic #1110,  0           // InvokeDynamic #22:apply:(Lcoursier/util/Artifact;Ljava/lang/String;)Lscala/Function0;
        63: invokeinterface #1114,  3         // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
        68: checkcast     #630                // class java/lang/String
        71: astore        7
        73: new           #311                // class scala/Some
        76: dup
        77: new           #1116               // class scala/Tuple3
        80: dup
        81: aload         6
        83: aload         7
        85: aload_1
        86: aload         7
        88: invokeinterface #464,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
        93: invokespecial #1119               // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        96: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        99: astore_3
       100: goto          116
       103: goto          106
       106: new           #675                // class scala/MatchError
       109: dup
       110: aload         4
       112: invokespecial #676                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       115: athrow
       116: aload_3
       117: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 21
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 78
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/util/Artifact, class scala/collection/immutable/Map, class scala/Option, class scala/Option, class scala/Option ]
          stack = []
      LineNumberTable:
        line 189: 0
        line 190: 3
        line 191: 24
        line 192: 49
        line 193: 73
        line 191: 103
        line 189: 106
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           73      26     7   url   Ljava/lang/String;
           49      54     6     c   Ljava/lang/String;
            0     118     0 artifact$3   Lcoursier/util/Artifact;
            0     118     1 resultsMap$1   Lscala/collection/immutable/Map;
            0     118     2  x0$2   Lscala/Option;
    MethodParameters:
      Name                           Flags
      artifact$3                     final
      resultsMap$1                   final
      x0$2                           final

  private static final scala.collection.immutable.Seq checksumErrors$1(scala.collection.immutable.Seq);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: new           #31                 // class coursier/cache/FileCache$$anonfun$checksumErrors$1$1
         4: dup
         5: aconst_null
         6: invokespecial #1127               // Method coursier/cache/FileCache$$anonfun$checksumErrors$1$1."<init>":(Lcoursier/cache/FileCache;)V
         9: invokeinterface #1131,  2         // InterfaceMethod scala/collection/immutable/Seq.collect:(Lscala/PartialFunction;)Ljava/lang/Object;
        14: checkcast     #226                // class scala/collection/immutable/Seq
        17: areturn
      LineNumberTable:
        line 200: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0 checksumResults$1   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      checksumResults$1              final

  public static final void $anonfun$filePerPolicy0$6();
    descriptor: ()V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=0, locals=0, args_size=0
         0: return
      LineNumberTable:
        line 209: 0

  public static final scala.util.Either $anonfun$filePerPolicy0$7(scala.Option, coursier.cache.internal.DownloadResult, scala.collection.immutable.Seq, scala.runtime.BoxedUnit);
    descriptor: (Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=8, args_size=4
         0: aload_0
         1: astore        5
         3: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
         6: aload         5
         8: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        11: ifeq          39
        14: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
        17: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
        20: new           #15                 // class coursier/cache/ArtifactError$ChecksumErrors
        23: dup
        24: aload_2
        25: invokestatic  #1140               // Method checksumErrors$1:(Lscala/collection/immutable/Seq;)Lscala/collection/immutable/Seq;
        28: invokespecial #1143               // Method coursier/cache/ArtifactError$ChecksumErrors."<init>":(Lscala/collection/immutable/Seq;)V
        31: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        34: astore        4
        36: goto          107
        39: goto          42
        42: aload         5
        44: instanceof    #311                // class scala/Some
        47: ifeq          94
        50: aload         5
        52: checkcast     #311                // class scala/Some
        55: astore        6
        57: aload         6
        59: invokevirtual #925                // Method scala/Some.value:()Ljava/lang/Object;
        62: checkcast     #439                // class scala/Option
        65: astore        7
        67: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
        70: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
        73: new           #636                // class scala/Tuple2
        76: dup
        77: aload_1
        78: invokevirtual #1145               // Method coursier/cache/internal/DownloadResult.file:()Ljava/io/File;
        81: aload         7
        83: invokespecial #667                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        86: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        89: astore        4
        91: goto          107
        94: goto          97
        97: new           #675                // class scala/MatchError
       100: dup
       101: aload         5
       103: invokespecial #676                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       106: athrow
       107: aload         4
       109: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 39
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 51 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/Option, class coursier/cache/internal/DownloadResult, class scala/collection/immutable/Seq, class scala/runtime/BoxedUnit, class scala/util/Either, class scala/Option ]
          stack = []
      LineNumberTable:
        line 210: 0
        line 211: 3
        line 214: 14
        line 211: 39
        line 215: 42
        line 210: 97
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           67      27     7     c   Lscala/Option;
            0     110     0 checksum$1   Lscala/Option;
            0     110     1 res$1   Lcoursier/cache/internal/DownloadResult;
            0     110     2 checksumResults$1   Lscala/collection/immutable/Seq;
            0     110     3  x$10   Lscala/runtime/BoxedUnit;
    MethodParameters:
      Name                           Flags
      checksum$1                     final
      res$1                          final
      checksumResults$1              final
      x$10                           final

  public static final scala.util.Either $anonfun$filePerPolicy0$1(coursier.cache.FileCache, coursier.util.Artifact, scala.collection.immutable.Seq);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=7, args_size=3
         0: aload_2
         1: invokedynamic #1151,  0           // InvokeDynamic #23:apply:()Lscala/Function1;
         6: invokeinterface #720,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        11: checkcast     #598                // class scala/collection/IterableOnceOps
        14: getstatic     #1156               // Field scala/$less$colon$less$.MODULE$:Lscala/$less$colon$less$;
        17: invokevirtual #1160               // Method scala/$less$colon$less$.refl:()Lscala/$eq$colon$eq;
        20: invokeinterface #1164,  2         // InterfaceMethod scala/collection/IterableOnceOps.toMap:(Lscala/$less$colon$less;)Lscala/collection/immutable/Map;
        25: astore_3
        26: aload_0
        27: invokespecial #1166               // Method checksums0:()Lscala/collection/immutable/Seq;
        30: aload_1
        31: aload_3
        32: invokedynamic #1174,  0           // InvokeDynamic #24:apply:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;)Lscala/Function1;
        37: invokeinterface #720,  2          // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
        42: checkcast     #226                // class scala/collection/immutable/Seq
        45: astore        4
        47: aload         4
        49: new           #29                 // class coursier/cache/FileCache$$anonfun$1
        52: dup
        53: aconst_null
        54: invokespecial #1175               // Method coursier/cache/FileCache$$anonfun$1."<init>":(Lcoursier/cache/FileCache;)V
        57: invokeinterface #1179,  2         // InterfaceMethod scala/collection/immutable/Seq.collectFirst:(Lscala/PartialFunction;)Lscala/Option;
        62: astore        5
        64: aload_2
        65: invokeinterface #601,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        70: checkcast     #1055               // class coursier/cache/internal/DownloadResult
        73: astore        6
        75: aload         6
        77: invokevirtual #1062               // Method coursier/cache/internal/DownloadResult.errorOpt:()Lscala/Option;
        80: invokedynamic #1187,  0           // InvokeDynamic #25:apply$mcV$sp:()Lscala/runtime/java8/JFunction0$mcV$sp;
        85: invokevirtual #1191               // Method scala/Option.toLeft:(Lscala/Function0;)Lscala/util/Either;
        88: aload         5
        90: aload         6
        92: aload         4
        94: invokedynamic #1199,  0           // InvokeDynamic #26:apply:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;)Lscala/Function1;
        99: invokevirtual #1202               // Method scala/util/Either.flatMap:(Lscala/Function1;)Lscala/util/Either;
       102: areturn
      LineNumberTable:
        line 183: 0
        line 184: 1
        line 187: 14
        line 189: 26
        line 195: 47
        line 208: 64
        line 209: 75
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      76     3 resultsMap   Lscala/collection/immutable/Map;
           47      55     4 checksumResults   Lscala/collection/immutable/Seq;
           64      38     5 checksum   Lscala/Option;
           75      27     6   res   Lcoursier/cache/internal/DownloadResult;
            0     103     0 $this   Lcoursier/cache/FileCache;
            0     103     1 artifact$3   Lcoursier/util/Artifact;
            0     103     2 results   Lscala/collection/immutable/Seq;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$3                     final
      results                        final

  public static final java.io.File $anonfun$filePerPolicy0$9(java.io.File, scala.runtime.BoxedUnit);
    descriptor: (Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: areturn
      LineNumberTable:
        line 222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0   f$1   Ljava/io/File;
            0       2     1  x$11   Lscala/runtime/BoxedUnit;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x$11                           final

  public static final coursier.util.EitherT $anonfun$filePerPolicy0$8(coursier.cache.FileCache, coursier.util.Artifact, scala.Tuple2);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=11, args_size=3
         0: aload_2
         1: astore        4
         3: aload         4
         5: ifnull        73
         8: aload         4
        10: invokevirtual #670                // Method scala/Tuple2._1:()Ljava/lang/Object;
        13: checkcast     #262                // class java/io/File
        16: astore        5
        18: aload         4
        20: invokevirtual #1214               // Method scala/Tuple2._2:()Ljava/lang/Object;
        23: checkcast     #439                // class scala/Option
        26: astore        6
        28: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
        31: aload         6
        33: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        36: ifeq          70
        39: new           #476                // class coursier/util/EitherT
        42: dup
        43: aload_0
        44: invokespecial #241                // Method S:()Lcoursier/util/Sync;
        47: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
        50: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
        53: aload         5
        55: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        58: invokeinterface #1217,  2         // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
        63: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        66: astore_3
        67: goto          167
        70: goto          76
        73: goto          76
        76: aload         4
        78: ifnull        154
        81: aload         4
        83: invokevirtual #670                // Method scala/Tuple2._1:()Ljava/lang/Object;
        86: checkcast     #262                // class java/io/File
        89: astore        7
        91: aload         4
        93: invokevirtual #1214               // Method scala/Tuple2._2:()Ljava/lang/Object;
        96: checkcast     #439                // class scala/Option
        99: astore        8
       101: aload         8
       103: instanceof    #311                // class scala/Some
       106: ifeq          151
       109: aload         8
       111: checkcast     #311                // class scala/Some
       114: astore        9
       116: aload         9
       118: invokevirtual #925                // Method scala/Some.value:()Ljava/lang/Object;
       121: checkcast     #630                // class java/lang/String
       124: astore        10
       126: aload_0
       127: aload_1
       128: aload         10
       130: invokevirtual #1219               // Method validateChecksum:(Lcoursier/util/Artifact;Ljava/lang/String;)Lcoursier/util/EitherT;
       133: aload         7
       135: invokedynamic #1227,  0           // InvokeDynamic #27:apply:(Ljava/io/File;)Lscala/Function1;
       140: aload_0
       141: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       144: invokevirtual #1229               // Method coursier/util/EitherT.map:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       147: astore_3
       148: goto          167
       151: goto          157
       154: goto          157
       157: new           #675                // class scala/MatchError
       160: dup
       161: aload         4
       163: invokespecial #676                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       166: athrow
       167: aload_3
       168: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 70
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, class scala/Tuple2, top, class scala/Tuple2, class java/io/File, class scala/Option ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 74
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, class scala/Tuple2, top, class scala/Tuple2, top, top, class java/io/File, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, class scala/Tuple2, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, class scala/Tuple2, class coursier/util/EitherT, class scala/Tuple2 ]
          stack = []
      LineNumberTable:
        line 219: 0
        line 220: 3
        line 221: 76
        line 222: 126
        line 221: 151
        line 219: 157
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      55     5     f   Ljava/io/File;
          126      25    10     c   Ljava/lang/String;
           91      63     7     f   Ljava/io/File;
            0     169     0 $this   Lcoursier/cache/FileCache;
            0     169     1 artifact$3   Lcoursier/util/Artifact;
            0     169     2  x0$3   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$3                     final
      x0$3                           final

  public static final java.lang.String $anonfun$filePerPolicy0$11(coursier.core.Authentication);
    descriptor: (Lcoursier/core/Authentication;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #893                // Method coursier/core/Authentication.user:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 225: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$12   Lcoursier/core/Authentication;
    MethodParameters:
      Name                           Flags
      x$12                           final

  public static final scala.util.Right $anonfun$filePerPolicy0$12(coursier.cache.FileCache, boolean, java.io.File, java.io.File, coursier.util.Artifact, coursier.cache.ArtifactError$WrongChecksum);
    descriptor: (Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=6, args_size=6
         0: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: iload_1
         4: invokevirtual #1243               // Method scala/Predef$.assert:(Z)V
         7: aload_2
         8: invokevirtual #1246               // Method java/io/File.delete:()Z
        11: pop
        12: aload_3
        13: invokevirtual #1246               // Method java/io/File.delete:()Z
        16: pop
        17: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
        20: aload_2
        21: invokevirtual #1250               // Method coursier/cache/FileCache$.clearAuxiliaryFiles:(Ljava/io/File;)V
        24: aload_0
        25: invokevirtual #371                // Method logger:()Lcoursier/cache/CacheLogger;
        28: aload         4
        30: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        33: new           #311                // class scala/Some
        36: dup
        37: aload         5
        39: invokevirtual #1253               // Method coursier/cache/ArtifactError$WrongChecksum.describe:()Ljava/lang/String;
        42: invokespecial #314                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        45: invokeinterface #1257,  3         // InterfaceMethod coursier/cache/CacheLogger.removedCorruptFile:(Ljava/lang/String;Lscala/Option;)V
        50: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
        53: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
        56: getstatic     #984                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
        59: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        62: areturn
      LineNumberTable:
        line 237: 0
        line 238: 7
        line 239: 12
        line 240: 17
        line 241: 24
        line 242: 50
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0 $this   Lcoursier/cache/FileCache;
            0      63     1 foundBadFileInCache$1   Z
            0      63     2 badFile$1   Ljava/io/File;
            0      63     3 badChecksumFile$1   Ljava/io/File;
            0      63     4 artifact$3   Lcoursier/util/Artifact;
            0      63     5  x2$1   Lcoursier/cache/ArtifactError$WrongChecksum;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      foundBadFileInCache$1          final
      badFile$1                      final
      badChecksumFile$1              final
      artifact$3                     final
      x2$1                           final

  public static final coursier.util.EitherT $anonfun$filePerPolicy0$13(coursier.cache.FileCache, coursier.util.Artifact, coursier.cache.CachePolicy, int, scala.runtime.BoxedUnit);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: iconst_1
         5: isub
         6: invokespecial #1047               // Method filePerPolicy0:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
         9: areturn
      LineNumberTable:
        line 245: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/cache/FileCache;
            0      10     1 artifact$3   Lcoursier/util/Artifact;
            0      10     2 policy$2   Lcoursier/cache/CachePolicy;
            0      10     3 retry$2   I
            0      10     4  x$13   Lscala/runtime/BoxedUnit;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$3                     final
      policy$2                       final
      retry$2                        final
      x$13                           final

  public static final coursier.util.EitherT $anonfun$filePerPolicy0$10(coursier.cache.FileCache, coursier.util.Artifact, int, coursier.cache.CachePolicy, coursier.cache.ArtifactError);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=10, locals=12, args_size=5
         0: aload         4
         2: astore        6
         4: aload         6
         6: instanceof    #26                 // class coursier/cache/ArtifactError$WrongChecksum
         9: ifeq          229
        12: aload         6
        14: checkcast     #26                 // class coursier/cache/ArtifactError$WrongChecksum
        17: astore        7
        19: aload_0
        20: aload_1
        21: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        24: aload_1
        25: invokevirtual #430                // Method coursier/util/Artifact.authentication:()Lscala/Option;
        28: invokedynamic #1268,  0           // InvokeDynamic #28:apply:()Lscala/Function1;
        33: invokevirtual #443                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        36: invokevirtual #445                // Method localFile:(Ljava/lang/String;Lscala/Option;)Ljava/io/File;
        39: astore        8
        41: new           #262                // class java/io/File
        44: dup
        45: aload         7
        47: invokevirtual #1270               // Method coursier/cache/ArtifactError$WrongChecksum.sumFile:()Ljava/lang/String;
        50: invokespecial #266                // Method java/io/File."<init>":(Ljava/lang/String;)V
        53: astore        9
        55: new           #771                // class java/lang/StringBuilder
        58: dup
        59: ldc           #214                // int 1
        61: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
        64: getstatic     #641                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
        67: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        70: aload_0
        71: invokevirtual #353                // Method location:()Ljava/io/File;
        74: invokevirtual #1273               // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
        77: invokevirtual #650                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        80: ldc_w         #1275               // String /
        83: invokevirtual #656                // Method scala/collection/StringOps$.stripSuffix$extension:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        86: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        89: ldc_w         #1275               // String /
        92: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        95: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        98: astore        11
       100: aload         8
       102: invokevirtual #1273               // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       105: aload         11
       107: invokevirtual #1278               // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       110: ifeq          130
       113: aload         9
       115: invokevirtual #1273               // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       118: aload         11
       120: invokevirtual #1278               // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       123: ifeq          130
       126: iconst_1
       127: goto          131
       130: iconst_0
       131: istore        10
       133: iload_2
       134: iconst_0
       135: if_icmple     143
       138: iload         10
       140: ifne          173
       143: new           #476                // class coursier/util/EitherT
       146: dup
       147: aload_0
       148: invokespecial #241                // Method S:()Lcoursier/util/Sync;
       151: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       154: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
       157: aload         7
       159: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       162: invokeinterface #1217,  2         // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
       167: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       170: goto          224
       173: new           #476                // class coursier/util/EitherT
       176: dup
       177: aload_0
       178: invokespecial #241                // Method S:()Lcoursier/util/Sync;
       181: aload_0
       182: invokevirtual #392                // Method pool:()Ljava/util/concurrent/ExecutorService;
       185: aload_0
       186: iload         10
       188: aload         8
       190: aload         9
       192: aload_1
       193: aload         7
       195: invokedynamic #1286,  0           // InvokeDynamic #29:apply:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/Function0;
       200: invokeinterface #490,  3          // InterfaceMethod coursier/util/Sync.schedule:(Ljava/util/concurrent/ExecutorService;Lscala/Function0;)Ljava/lang/Object;
       205: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       208: aload_0
       209: aload_1
       210: aload_3
       211: iload_2
       212: invokedynamic #1294,  0           // InvokeDynamic #30:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lscala/Function1;
       217: aload_0
       218: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
       221: invokevirtual #536                // Method coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       224: astore        5
       226: goto          264
       229: goto          232
       232: new           #476                // class coursier/util/EitherT
       235: dup
       236: aload_0
       237: invokespecial #241                // Method S:()Lcoursier/util/Sync;
       240: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       243: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
       246: aload         6
       248: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       251: invokeinterface #1217,  2         // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
       256: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       259: astore        5
       261: goto          264
       264: aload         5
       266: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 130
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, int, class coursier/cache/CachePolicy, class coursier/cache/ArtifactError, top, class coursier/cache/ArtifactError, class coursier/cache/ArtifactError$WrongChecksum, class java/io/File, class java/io/File, top, class java/lang/String ]
          stack = []
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, int, class coursier/cache/CachePolicy, class coursier/cache/ArtifactError, top, class coursier/cache/ArtifactError, class coursier/cache/ArtifactError$WrongChecksum, class java/io/File, class java/io/File, int, class java/lang/String ]
          stack = []
        frame_type = 29 /* same */
        frame_type = 114 /* same_locals_1_stack_item */
          stack = [ class coursier/util/EitherT ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, int, class coursier/cache/CachePolicy, class coursier/cache/ArtifactError, top, class coursier/cache/ArtifactError ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 31
          locals = [ class coursier/cache/FileCache, class coursier/util/Artifact, int, class coursier/cache/CachePolicy, class coursier/cache/ArtifactError, class coursier/util/EitherT, class coursier/cache/ArtifactError ]
          stack = []
      LineNumberTable:
        line 223: 0
        line 224: 4
        line 225: 19
        line 226: 41
        line 228: 55
        line 229: 100
        line 230: 113
        line 232: 133
        line 233: 143
        line 235: 173
        line 236: 177
        line 244: 208
        line 224: 229
        line 248: 232
        line 223: 264
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          100      31    11 location0   Ljava/lang/String;
           41     183     8 badFile   Ljava/io/File;
           55     169     9 badChecksumFile   Ljava/io/File;
          133      91    10 foundBadFileInCache   Z
            0     267     0 $this   Lcoursier/cache/FileCache;
            0     267     1 artifact$3   Lcoursier/util/Artifact;
            0     267     2 retry$2   I
            0     267     3 policy$2   Lcoursier/cache/CachePolicy;
            0     267     4  x0$4   Lcoursier/cache/ArtifactError;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$3                     final
      retry$2                        final
      policy$2                       final
      x0$4                           final

  public static final coursier.util.EitherT $anonfun$file$1(coursier.cache.FileCache, coursier.util.Artifact, int, coursier.cache.CachePolicy);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_3
         3: iload_2
         4: invokespecial #605                // Method filePerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;I)Lcoursier/util/EitherT;
         7: areturn
      LineNumberTable:
        line 256: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/cache/FileCache;
            0       8     1 artifact$4   Lcoursier/util/Artifact;
            0       8     2 retry$3   I
            0       8     3  x$14   Lcoursier/cache/CachePolicy;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      artifact$4                     final
      retry$3                        final
      x$14                           final

  public static final coursier.util.EitherT $anonfun$file$3(coursier.util.EitherT);
    descriptor: (Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 x$16$1   Lcoursier/util/EitherT;
    MethodParameters:
      Name                           Flags
      x$16$1                         final

  public static final coursier.util.EitherT $anonfun$file$2(coursier.cache.FileCache, coursier.util.EitherT, coursier.util.EitherT);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_1
         1: aload_2
         2: invokedynamic #1316,  0           // InvokeDynamic #31:apply:(Lcoursier/util/EitherT;)Lscala/Function0;
         7: aload_0
         8: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        11: invokevirtual #1320               // Method coursier/util/EitherT.orElse:(Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        14: areturn
      LineNumberTable:
        line 257: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 $this   Lcoursier/cache/FileCache;
            0      15     1  x$15   Lcoursier/util/EitherT;
            0      15     2  x$16   Lcoursier/util/EitherT;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      x$15                           final
      x$16                           final

  public static final java.lang.String $anonfun$fetchPerPolicy$1(coursier.cache.ArtifactError);
    descriptor: (Lcoursier/cache/ArtifactError;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #1322               // Method coursier/cache/ArtifactError.describe:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 265: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  x$18   Lcoursier/cache/ArtifactError;
    MethodParameters:
      Name                           Flags
      x$18                           final

  private static final scala.util.Left notFound$1(java.io.File);
    descriptor: (Ljava/io/File;)Lscala/util/Left;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
         6: new           #771                // class java/lang/StringBuilder
         9: dup
        10: ldc_w         #1325               // int 10
        13: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
        16: aload_0
        17: invokevirtual #1273               // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
        20: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        23: ldc_w         #1327               // String  not found
        26: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        29: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        32: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        35: areturn
      LineNumberTable:
        line 267: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      f                              final

  private static final scala.util.Either read$1(java.io.File, boolean, coursier.util.Artifact);
    descriptor: (Ljava/io/File;ZLcoursier/util/Artifact;)Lscala/util/Either;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=6, locals=11, args_size=3
         0: iload_1
         1: ifeq          113
         4: getstatic     #110                // Field coursier/cache/FileCache$.MODULE$:Lcoursier/cache/FileCache$;
         7: aload_0
         8: ldc_w         #1332               // String links
        11: invokevirtual #451                // Method coursier/cache/FileCache$.auxiliaryFile:(Ljava/io/File;Ljava/lang/String;)Ljava/io/File;
        14: astore        5
        16: aload_0
        17: invokevirtual #1335               // Method java/io/File.getName:()Ljava/lang/String;
        20: ldc_w         #1337               // String .directory
        23: astore        6
        25: dup
        26: ifnonnull     38
        29: pop
        30: aload         6
        32: ifnull        46
        35: goto          75
        38: aload         6
        40: invokevirtual #806                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        43: ifeq          75
        46: aload         5
        48: invokevirtual #1340               // Method java/io/File.isFile:()Z
        51: ifeq          75
        54: new           #630                // class java/lang/String
        57: dup
        58: aload         5
        60: invokevirtual #934                // Method java/io/File.toPath:()Ljava/nio/file/Path;
        63: invokestatic  #940                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
        66: getstatic     #1346               // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
        69: invokespecial #1349               // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
        72: goto          110
        75: getstatic     #1354               // Field coursier/util/WebPage$.MODULE$:Lcoursier/util/WebPage$;
        78: aload_2
        79: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        82: new           #630                // class java/lang/String
        85: dup
        86: aload_0
        87: invokevirtual #934                // Method java/io/File.toPath:()Ljava/nio/file/Path;
        90: invokestatic  #940                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
        93: getstatic     #1346               // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
        96: invokespecial #1349               // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
        99: invokevirtual #1358               // Method coursier/util/WebPage$.listElements:(Ljava/lang/String;Ljava/lang/String;)Lscala/collection/Iterator;
       102: ldc_w         #1360               // String \n
       105: invokeinterface #1365,  2         // InterfaceMethod scala/collection/Iterator.mkString:(Ljava/lang/String;)Ljava/lang/String;
       110: goto          130
       113: new           #630                // class java/lang/String
       116: dup
       117: aload_0
       118: invokevirtual #934                // Method java/io/File.toPath:()Ljava/nio/file/Path;
       121: invokestatic  #940                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B
       124: getstatic     #1346               // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       127: invokespecial #1349               // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
       130: astore        4
       132: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       135: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
       138: aload         4
       140: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       143: goto          251
       146: astore        7
       148: aload         7
       150: astore        8
       152: aload         8
       154: ifnull        241
       157: getstatic     #1370               // Field scala/util/control/NonFatal$.MODULE$:Lscala/util/control/NonFatal$;
       160: aload         8
       162: invokevirtual #1374               // Method scala/util/control/NonFatal$.unapply:(Ljava/lang/Throwable;)Lscala/Option;
       165: astore        9
       167: aload         9
       169: invokevirtual #1022               // Method scala/Option.isEmpty:()Z
       172: ifne          238
       175: aload         9
       177: invokevirtual #1376               // Method scala/Option.get:()Ljava/lang/Object;
       180: checkcast     #234                // class java/lang/Throwable
       183: astore        10
       185: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       188: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
       191: new           #771                // class java/lang/StringBuilder
       194: dup
       195: ldc_w         #1377               // int 24
       198: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
       201: ldc_w         #1379               // String Could not read (file:
       204: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       207: aload_0
       208: invokevirtual #1273               // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       211: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       214: ldc_w         #1381               // String ):
       217: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       220: aload         10
       222: invokevirtual #1384               // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       225: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       228: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       231: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       234: astore_3
       235: goto          247
       238: goto          244
       241: goto          244
       244: aload         7
       246: athrow
       247: aload_3
       248: goto          251
       251: areturn
      Exception table:
         from    to  target type
             0   143   146   Class java/lang/Throwable
      StackMapTable: number_of_entries = 12
        frame_type = 255 /* full_frame */
          offset_delta = 38
          locals = [ class java/io/File, int, class coursier/util/Artifact, top, top, class java/io/File, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 7 /* same */
        frame_type = 28 /* same */
        frame_type = 98 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/io/File, int, class coursier/util/Artifact ]
          stack = []
        frame_type = 80 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 91
          locals = [ class java/io/File, int, class coursier/util/Artifact, top, top, top, top, class java/lang/Throwable, class java/lang/Throwable, class scala/Option ]
          stack = []
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class java/io/File, int, class coursier/util/Artifact, class scala/util/Left, top, top, top, class java/lang/Throwable, class java/lang/Throwable, class scala/Option, class java/lang/Throwable ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 3
          locals = [ class java/io/File, int, class coursier/util/Artifact ]
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 272: 0
        line 273: 4
        line 274: 16
        line 275: 54
        line 277: 75
        line 278: 102
        line 280: 113
        line 281: 132
        line 284: 148
        line 284: 152
        line 285: 185
        line 284: 238
        line 270: 244
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           16      94     5 linkFile   Ljava/io/File;
          132      11     4 content   Ljava/lang/String;
          185      53    10     e   Ljava/lang/Throwable;
            0     252     0     f   Ljava/io/File;
            0     252     1 links$1   Z
            0     252     2 artifact0$1   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      f                              final
      links$1                        final
      artifact0$1                    final

  public static final java.lang.String $anonfun$fetchPerPolicy$3(java.io.File);
    descriptor: (Ljava/io/File;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #1335               // Method java/io/File.getName:()Ljava/lang/String;
         4: astore_1
         5: aload_0
         6: invokevirtual #1395               // Method java/io/File.isDirectory:()Z
         9: ifeq          37
        12: new           #771                // class java/lang/StringBuilder
        15: dup
        16: ldc           #214                // int 1
        18: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
        21: aload_1
        22: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: ldc_w         #1275               // String /
        28: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        34: goto          38
        37: aload_1
        38: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class java/lang/String ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 296: 0
        line 297: 5
        line 298: 12
        line 300: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      33     1  name   Ljava/lang/String;
            0      39     0     c   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.String $anonfun$fetchPerPolicy$4(java.io.File);
    descriptor: (Ljava/io/File;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #1335               // Method java/io/File.getName:()Ljava/lang/String;
         4: astore_1
         5: aload_0
         6: invokevirtual #1395               // Method java/io/File.isDirectory:()Z
         9: ifeq          37
        12: new           #771                // class java/lang/StringBuilder
        15: dup
        16: ldc           #214                // int 1
        18: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
        21: aload_1
        22: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        25: ldc_w         #1275               // String /
        28: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        31: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        34: goto          38
        37: aload_1
        38: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class java/lang/String ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 308: 0
        line 309: 5
        line 310: 12
        line 312: 37
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            5      33     1  name   Ljava/lang/String;
            0      39     0     c   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      c                              final

  public static final java.lang.String $anonfun$fetchPerPolicy$5(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #771                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #1377               // int 24
         7: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #1401               // String <li><a href=\"
        13: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #1403               // String \">
        23: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: aload_0
        27: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        30: ldc_w         #1405               // String </a></li>
        33: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        36: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        39: areturn
      LineNumberTable:
        line 316: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      40     0 name0   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name0                          final

  public static final coursier.util.EitherT $anonfun$fetchPerPolicy$2(coursier.cache.FileCache, boolean, coursier.util.Artifact, java.io.File);
    descriptor: (Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=10, locals=8, args_size=4
         0: aload_3
         1: invokevirtual #908                // Method java/io/File.exists:()Z
         4: ifeq          352
         7: aload_3
         8: invokevirtual #1395               // Method java/io/File.isDirectory:()Z
        11: ifeq          343
        14: aload_2
        15: invokevirtual #427                // Method coursier/util/Artifact.url:()Ljava/lang/String;
        18: ldc_w         #1407               // String file:
        21: invokevirtual #1278               // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        24: ifeq          252
        27: iload_1
        28: ifeq          100
        31: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        34: getstatic     #1412               // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        37: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        40: getstatic     #1412               // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        43: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        46: aload_3
        47: invokevirtual #1416               // Method java/io/File.listFiles:()[Ljava/io/File;
        50: checkcast     #1418               // class "[Ljava/lang/Object;"
        53: invokevirtual #1422               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        56: invokedynamic #1427,  0           // InvokeDynamic #32:apply:()Lscala/Function1;
        61: getstatic     #1432               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        64: ldc_w         #630                // class java/lang/String
        67: invokevirtual #1435               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        70: invokevirtual #1439               // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
        73: checkcast     #1418               // class "[Ljava/lang/Object;"
        76: invokevirtual #1422               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        79: getstatic     #1442               // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        82: invokevirtual #1446               // Method scala/collection/ArrayOps$.sorted$extension:(Ljava/lang/Object;Lscala/math/Ordering;)Ljava/lang/Object;
        85: checkcast     #1418               // class "[Ljava/lang/Object;"
        88: invokevirtual #1450               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
        91: ldc_w         #1360               // String \n
        94: invokevirtual #1451               // Method scala/collection/mutable/ArraySeq$ofRef.mkString:(Ljava/lang/String;)Ljava/lang/String;
        97: goto          236
       100: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       103: getstatic     #1412               // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       106: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       109: getstatic     #1412               // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       112: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       115: getstatic     #1412               // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
       118: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       121: aload_3
       122: invokevirtual #1416               // Method java/io/File.listFiles:()[Ljava/io/File;
       125: checkcast     #1418               // class "[Ljava/lang/Object;"
       128: invokevirtual #1422               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       131: invokedynamic #1455,  0           // InvokeDynamic #33:apply:()Lscala/Function1;
       136: getstatic     #1432               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       139: ldc_w         #630                // class java/lang/String
       142: invokevirtual #1435               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       145: invokevirtual #1439               // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       148: checkcast     #1418               // class "[Ljava/lang/Object;"
       151: invokevirtual #1422               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       154: getstatic     #1442               // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
       157: invokevirtual #1446               // Method scala/collection/ArrayOps$.sorted$extension:(Ljava/lang/Object;Lscala/math/Ordering;)Ljava/lang/Object;
       160: checkcast     #1418               // class "[Ljava/lang/Object;"
       163: invokevirtual #1422               // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
       166: invokedynamic #1460,  0           // InvokeDynamic #34:apply:()Lscala/Function1;
       171: getstatic     #1432               // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
       174: ldc_w         #630                // class java/lang/String
       177: invokevirtual #1435               // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
       180: invokevirtual #1439               // Method scala/collection/ArrayOps$.map$extension:(Ljava/lang/Object;Lscala/Function1;Lscala/reflect/ClassTag;)Ljava/lang/Object;
       183: checkcast     #1418               // class "[Ljava/lang/Object;"
       186: invokevirtual #1450               // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq$ofRef;
       189: invokevirtual #1462               // Method scala/collection/mutable/ArraySeq$ofRef.mkString:()Ljava/lang/String;
       192: astore        6
       194: getstatic     #641                // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
       197: getstatic     #646                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       200: new           #771                // class java/lang/StringBuilder
       203: dup
       204: ldc_w         #1463               // int 249
       207: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
       210: ldc_w         #1465               // String <!DOCTYPE html>\n                   |<html>\n                   |<head></head>\n                   |<body>\n                   |<ul>\n                   |
       213: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       216: aload         6
       218: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       221: ldc_w         #1467               // String \n                   |</ul>\n                   |</body>\n                   |</html>\n
       224: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       227: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       230: invokevirtual #650                // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
       233: invokevirtual #1470               // Method scala/collection/StringOps$.stripMargin$extension:(Ljava/lang/String;)Ljava/lang/String;
       236: astore        5
       238: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       241: invokevirtual #978                // Method scala/package$.Right:()Lscala/util/Right$;
       244: aload         5
       246: invokevirtual #989                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
       249: goto          340
       252: new           #262                // class java/io/File
       255: dup
       256: aload_3
       257: ldc_w         #1337               // String .directory
       260: invokespecial #1473               // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
       263: astore        7
       265: aload         7
       267: invokevirtual #908                // Method java/io/File.exists:()Z
       270: ifeq          335
       273: aload         7
       275: invokevirtual #1395               // Method java/io/File.isDirectory:()Z
       278: ifeq          325
       281: getstatic     #949                // Field scala/package$.MODULE$:Lscala/package$;
       284: invokevirtual #953                // Method scala/package$.Left:()Lscala/util/Left$;
       287: new           #771                // class java/lang/StringBuilder
       290: dup
       291: ldc_w         #1474               // int 22
       294: invokespecial #1078               // Method java/lang/StringBuilder."<init>":(I)V
       297: ldc_w         #1476               // String Woops:
       300: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       303: aload_3
       304: invokevirtual #1273               // Method java/io/File.getCanonicalPath:()Ljava/lang/String;
       307: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       310: ldc_w         #1478               // String  is a directory
       313: invokevirtual #782                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       316: invokevirtual #794                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       319: invokevirtual #964                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       322: goto          332
       325: aload         7
       327: iload_1
       328: aload_2
       329: invokestatic  #1480               // Method read$1:(Ljava/io/File;ZLcoursier/util/Artifact;)Lscala/util/Either;
       332: goto          340
       335: aload         7
       337: invokestatic  #1482               // Method notFound$1:(Ljava/io/File;)Lscala/util/Left;
       340: goto          349
       343: aload_3
       344: iload_1
       345: aload_2
       346: invokestatic  #1480               // Method read$1:(Ljava/io/File;ZLcoursier/util/Artifact;)Lscala/util/Either;
       349: goto          356
       352: aload_3
       353: invokestatic  #1482               // Method notFound$1:(Ljava/io/File;)Lscala/util/Left;
       356: astore        4
       358: new           #476                // class coursier/util/EitherT
       361: dup
       362: aload_0
       363: invokespecial #241                // Method S:()Lcoursier/util/Sync;
       366: aload         4
       368: invokeinterface #1217,  2         // InterfaceMethod coursier/util/Sync.point:(Ljava/lang/Object;)Ljava/lang/Object;
       373: invokespecial #491                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       376: areturn
      StackMapTable: number_of_entries = 11
        frame_type = 251 /* same_frame_extended */
          offset_delta = 100
        frame_type = 247 /* same_locals_1_stack_item_frame_extended */
          offset_delta = 135
          stack = [ class java/lang/String ]
        frame_type = 15 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 72
          locals = [ class coursier/cache/FileCache, int, class coursier/util/Artifact, class java/io/File, top, top, top, class java/io/File ]
          stack = []
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class coursier/cache/FileCache, int, class coursier/util/Artifact, class java/io/File ]
          stack = [ class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
        frame_type = 2 /* same */
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 288: 0
        line 289: 7
        line 290: 14
        line 293: 27
        line 302: 31
        line 295: 37
        line 294: 43
        line 295: 56
        line 302: 79
        line 303: 91
        line 315: 100
        line 314: 106
        line 307: 112
        line 306: 118
        line 307: 131
        line 314: 154
        line 315: 166
        line 320: 197
        line 325: 200
        line 320: 210
        line 325: 216
        line 332: 238
        line 334: 252
        line 336: 265
        line 337: 273
        line 338: 281
        line 340: 325
        line 342: 335
        line 345: 343
        line 347: 352
        line 349: 358
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          194      42     6 elements   Ljava/lang/String;
          238      11     5 content   Ljava/lang/String;
          265      75     7    f0   Ljava/io/File;
          358      18     4   res   Lscala/util/Either;
            0     377     0 $this   Lcoursier/cache/FileCache;
            0     377     1 links$1   Z
            0     377     2 artifact0$1   Lcoursier/util/Artifact;
            0     377     3     f   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      links$1                        final
      artifact0$1                    final
      f                              final

  public static final coursier.util.EitherT $anonfun$fetch$3(coursier.cache.FileCache, coursier.util.Artifact, coursier.cache.CachePolicy);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #1491               // Method fetchPerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
         6: areturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lcoursier/cache/FileCache;
            0       7     1   a$1   Lcoursier/util/Artifact;
            0       7     2 x$20$1   Lcoursier/cache/CachePolicy;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      a$1                            final
      x$20$1                         final

  public static final coursier.util.EitherT $anonfun$fetch$2(coursier.cache.FileCache, coursier.util.Artifact, coursier.util.EitherT, coursier.cache.CachePolicy);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_2
         1: aload_0
         2: aload_1
         3: aload_3
         4: invokedynamic #1501,  0           // InvokeDynamic #35:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lscala/Function0;
         9: aload_0
        10: invokevirtual #198                // Method sync:()Lcoursier/util/Sync;
        13: invokevirtual #1320               // Method coursier/util/EitherT.orElse:(Lscala/Function0;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        16: areturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0 $this   Lcoursier/cache/FileCache;
            0      17     1   a$1   Lcoursier/util/Artifact;
            0      17     2  x$19   Lcoursier/util/EitherT;
            0      17     3  x$20   Lcoursier/cache/CachePolicy;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      a$1                            final
      x$19                           final
      x$20                           final

  public static final coursier.util.EitherT $anonfun$fetch$1(coursier.cache.FileCache, coursier.util.Artifact);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
         4: invokeinterface #583,  1          // InterfaceMethod scala/collection/immutable/Seq.tail:()Ljava/lang/Object;
         9: checkcast     #598                // class scala/collection/IterableOnceOps
        12: aload_0
        13: aload_1
        14: aload_0
        15: invokevirtual #580                // Method cachePolicies:()Lscala/collection/immutable/Seq;
        18: invokeinterface #601,  1          // InterfaceMethod scala/collection/immutable/Seq.head:()Ljava/lang/Object;
        23: checkcast     #603                // class coursier/cache/CachePolicy
        26: invokespecial #1491               // Method fetchPerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
        29: aload_0
        30: aload_1
        31: invokedynamic #1509,  0           // InvokeDynamic #36:apply:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lscala/Function2;
        36: invokeinterface #621,  3          // InterfaceMethod scala/collection/IterableOnceOps.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
        41: checkcast     #476                // class coursier/util/EitherT
        44: areturn
      LineNumberTable:
        line 355: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0 $this   Lcoursier/cache/FileCache;
            0      45     1     a   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      a                              final

  public static final coursier.util.EitherT $anonfun$fetchs$2(coursier.cache.FileCache, coursier.cache.CachePolicy, coursier.util.Artifact);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: aload_1
         3: invokespecial #1491               // Method fetchPerPolicy:(Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
         6: areturn
      LineNumberTable:
        line 360: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lcoursier/cache/FileCache;
            0       7     1   p$1   Lcoursier/cache/CachePolicy;
            0       7     2     a   Lcoursier/util/Artifact;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      p$1                            final
      a                              final

  public static final scala.Function1 $anonfun$fetchs$1(coursier.cache.FileCache, coursier.cache.CachePolicy);
    descriptor: (Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokedynamic #1518,  0           // InvokeDynamic #37:apply:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
         7: areturn
      LineNumberTable:
        line 359: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/cache/FileCache;
            0       8     1     p   Lcoursier/cache/CachePolicy;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      p                              final

  public coursier.cache.FileCache(java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, boolean, boolean, boolean, scala.Option<java.lang.Object>, int, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, int, int, scala.collection.immutable.Seq<java.lang.ClassLoader>, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=19, args_size=19
         0: aload_0
         1: aload_1
         2: putfield      #147                // Field location:Ljava/io/File;
         5: aload_0
         6: aload_2
         7: putfield      #151                // Field cachePolicies:Lscala/collection/immutable/Seq;
        10: aload_0
        11: aload_3
        12: putfield      #154                // Field checksums:Lscala/collection/immutable/Seq;
        15: aload_0
        16: aload         4
        18: putfield      #157                // Field credentials:Lscala/collection/immutable/Seq;
        21: aload_0
        22: aload         5
        24: putfield      #160                // Field logger:Lcoursier/cache/CacheLogger;
        27: aload_0
        28: aload         6
        30: putfield      #163                // Field pool:Ljava/util/concurrent/ExecutorService;
        33: aload_0
        34: aload         7
        36: putfield      #167                // Field ttl:Lscala/Option;
        39: aload_0
        40: iload         8
        42: putfield      #170                // Field localArtifactsShouldBeCached:Z
        45: aload_0
        46: iload         9
        48: putfield      #172                // Field followHttpToHttpsRedirections:Z
        51: aload_0
        52: iload         10
        54: putfield      #174                // Field followHttpsToHttpRedirections:Z
        57: aload_0
        58: aload         11
        60: putfield      #177                // Field maxRedirections:Lscala/Option;
        63: aload_0
        64: iload         12
        66: putfield      #180                // Field sslRetry:I
        69: aload_0
        70: aload         13
        72: putfield      #183                // Field sslSocketFactoryOpt:Lscala/Option;
        75: aload_0
        76: aload         14
        78: putfield      #186                // Field hostnameVerifierOpt:Lscala/Option;
        81: aload_0
        82: iload         15
        84: putfield      #188                // Field retry:I
        87: aload_0
        88: iload         16
        90: putfield      #190                // Field bufferSize:I
        93: aload_0
        94: aload         17
        96: putfield      #193                // Field classLoaders:Lscala/collection/immutable/Seq;
        99: aload_0
       100: aload         18
       102: putfield      #196                // Field sync:Lcoursier/util/Sync;
       105: aload_0
       106: invokespecial #1521               // Method coursier/cache/Cache."<init>":()V
       109: aload_0
       110: invokestatic  #1525               // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
       113: aload_0
       114: aload_3
       115: invokeinterface #1526,  1         // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
       120: ifeq          142
       123: new           #447                // class scala/collection/immutable/$colon$colon
       126: dup
       127: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
       130: getstatic     #278                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
       133: invokespecial #454                // Method scala/collection/immutable/$colon$colon."<init>":(Ljava/lang/Object;Lscala/collection/immutable/List;)V
       136: checkcast     #226                // class scala/collection/immutable/Seq
       139: goto          143
       142: aload_3
       143: putfield      #373                // Field checksums0:Lscala/collection/immutable/Seq;
       146: aload_0
       147: aload_0
       148: invokespecial #1166               // Method checksums0:()Lscala/collection/immutable/Seq;
       151: invokedynamic #1531,  0           // InvokeDynamic #38:apply:()Lscala/Function1;
       156: invokeinterface #230,  2          // InterfaceMethod scala/collection/immutable/Seq.flatMap:(Lscala/Function1;)Ljava/lang/Object;
       161: checkcast     #1533               // class scala/collection/SeqOps
       164: invokeinterface #1536,  1         // InterfaceMethod scala/collection/SeqOps.distinct:()Ljava/lang/Object;
       169: checkcast     #226                // class scala/collection/immutable/Seq
       172: putfield      #376                // Field actualChecksums:Lscala/collection/immutable/Seq;
       175: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 142
          locals = [ class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, int, int, int, class scala/Option, int, class scala/Option, class scala/Option, int, int, class scala/collection/immutable/Seq, class coursier/util/Sync ]
          stack = [ class coursier/cache/FileCache ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/cache/FileCache, class java/io/File, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class scala/collection/immutable/Seq, class coursier/cache/CacheLogger, class java/util/concurrent/ExecutorService, class scala/Option, int, int, int, class scala/Option, int, class scala/Option, class scala/Option, int, int, class scala/collection/immutable/Seq, class coursier/util/Sync ]
          stack = [ class coursier/cache/FileCache, class scala/collection/immutable/Seq ]
      LineNumberTable:
        line 23: 0
        line 44: 105
        line 80: 113
        line 81: 146
        line 23: 175
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     176     0  this   Lcoursier/cache/FileCache;
            0     176     1 location   Ljava/io/File;
            0     176     2 cachePolicies   Lscala/collection/immutable/Seq;
            0     176     3 checksums   Lscala/collection/immutable/Seq;
            0     176     4 credentials   Lscala/collection/immutable/Seq;
            0     176     5 logger   Lcoursier/cache/CacheLogger;
            0     176     6  pool   Ljava/util/concurrent/ExecutorService;
            0     176     7   ttl   Lscala/Option;
            0     176     8 localArtifactsShouldBeCached   Z
            0     176     9 followHttpToHttpsRedirections   Z
            0     176    10 followHttpsToHttpRedirections   Z
            0     176    11 maxRedirections   Lscala/Option;
            0     176    12 sslRetry   I
            0     176    13 sslSocketFactoryOpt   Lscala/Option;
            0     176    14 hostnameVerifierOpt   Lscala/Option;
            0     176    15 retry   I
            0     176    16 bufferSize   I
            0     176    17 classLoaders   Lscala/collection/immutable/Seq;
            0     176    18  sync   Lcoursier/util/Sync;
    Signature: #1519                        // (Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILscala/collection/immutable/Seq<Ljava/lang/ClassLoader;>;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      location                       final
      cachePolicies                  final
      checksums                      final
      credentials                    final
      logger                         final
      pool                           final
      ttl                            final
      localArtifactsShouldBeCached   final
      followHttpToHttpsRedirections  final
      followHttpsToHttpRedirections  final
      maxRedirections                final
      sslRetry                       final
      sslSocketFactoryOpt            final
      hostnameVerifierOpt            final
      retry                          final
      bufferSize                     final
      classLoaders                   final
      sync                           final

  public coursier.cache.FileCache(java.io.File, scala.collection.immutable.Seq<coursier.cache.CachePolicy>, scala.collection.immutable.Seq<scala.Option<java.lang.String>>, scala.collection.immutable.Seq<coursier.credentials.Credentials>, coursier.cache.CacheLogger, java.util.concurrent.ExecutorService, scala.Option<scala.concurrent.duration.Duration>, boolean, boolean, boolean, scala.Option<java.lang.Object>, int, scala.Option<javax.net.ssl.SSLSocketFactory>, scala.Option<javax.net.ssl.HostnameVerifier>, int, int, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=19, locals=18, args_size=18
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: aload         5
         8: aload         6
        10: aload         7
        12: iload         8
        14: iload         9
        16: iload         10
        18: aload         11
        20: iload         12
        22: aload         13
        24: aload         14
        26: iload         15
        28: iload         16
        30: getstatic     #278                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        33: aload         17
        35: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        38: return
      LineNumberTable:
        line 23: 0
        line 41: 30
        line 23: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcoursier/cache/FileCache;
            0      39     1 location   Ljava/io/File;
            0      39     2 cachePolicies   Lscala/collection/immutable/Seq;
            0      39     3 checksums   Lscala/collection/immutable/Seq;
            0      39     4 credentials   Lscala/collection/immutable/Seq;
            0      39     5 logger   Lcoursier/cache/CacheLogger;
            0      39     6  pool   Ljava/util/concurrent/ExecutorService;
            0      39     7   ttl   Lscala/Option;
            0      39     8 localArtifactsShouldBeCached   Z
            0      39     9 followHttpToHttpsRedirections   Z
            0      39    10 followHttpsToHttpRedirections   Z
            0      39    11 maxRedirections   Lscala/Option;
            0      39    12 sslRetry   I
            0      39    13 sslSocketFactoryOpt   Lscala/Option;
            0      39    14 hostnameVerifierOpt   Lscala/Option;
            0      39    15 retry   I
            0      39    16 bufferSize   I
            0      39    17  sync   Lcoursier/util/Sync;
    Signature: #1538                        // (Ljava/io/File;Lscala/collection/immutable/Seq<Lcoursier/cache/CachePolicy;>;Lscala/collection/immutable/Seq<Lscala/Option<Ljava/lang/String;>;>;Lscala/collection/immutable/Seq<Lcoursier/credentials/Credentials;>;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option<Lscala/concurrent/duration/Duration;>;ZZZLscala/Option<Ljava/lang/Object;>;ILscala/Option<Ljavax/net/ssl/SSLSocketFactory;>;Lscala/Option<Ljavax/net/ssl/HostnameVerifier;>;IILcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      location                       final
      cachePolicies                  final
      checksums                      final
      credentials                    final
      logger                         final
      pool                           final
      ttl                            final
      localArtifactsShouldBeCached   final
      followHttpToHttpsRedirections  final
      followHttpsToHttpRedirections  final
      maxRedirections                final
      sslRetry                       final
      sslSocketFactoryOpt            final
      hostnameVerifierOpt            final
      retry                          final
      bufferSize                     final
      sync                           final

  public coursier.cache.FileCache(java.io.File, coursier.util.Sync<F>);
    descriptor: (Ljava/io/File;Lcoursier/util/Sync;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=19, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
         5: invokevirtual #1546               // Method coursier/cache/CacheDefaults$.cachePolicies:()Lscala/collection/immutable/Seq;
         8: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        11: invokevirtual #1547               // Method coursier/cache/CacheDefaults$.checksums:()Lscala/collection/immutable/Seq;
        14: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        17: invokevirtual #1548               // Method coursier/cache/CacheDefaults$.credentials:()Lscala/collection/immutable/Seq;
        20: getstatic     #1553               // Field coursier/cache/CacheLogger$.MODULE$:Lcoursier/cache/CacheLogger$;
        23: invokevirtual #1556               // Method coursier/cache/CacheLogger$.nop:()Lcoursier/cache/CacheLogger;
        26: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        29: invokevirtual #1557               // Method coursier/cache/CacheDefaults$.pool:()Ljava/util/concurrent/ExecutorService;
        32: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        35: invokevirtual #1558               // Method coursier/cache/CacheDefaults$.ttl:()Lscala/Option;
        38: iconst_0
        39: iconst_1
        40: iconst_0
        41: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        44: invokevirtual #1559               // Method coursier/cache/CacheDefaults$.maxRedirections:()Lscala/Option;
        47: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        50: invokevirtual #1562               // Method coursier/cache/CacheDefaults$.sslRetryCount:()I
        53: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
        56: getstatic     #366                // Field scala/None$.MODULE$:Lscala/None$;
        59: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        62: invokevirtual #1565               // Method coursier/cache/CacheDefaults$.defaultRetryCount:()I
        65: getstatic     #1545               // Field coursier/cache/CacheDefaults$.MODULE$:Lcoursier/cache/CacheDefaults$;
        68: invokevirtual #1566               // Method coursier/cache/CacheDefaults$.bufferSize:()I
        71: getstatic     #278                // Field scala/collection/immutable/Nil$.MODULE$:Lscala/collection/immutable/Nil$;
        74: aload_2
        75: invokespecial #742                // Method "<init>":(Ljava/io/File;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lscala/collection/immutable/Seq;Lcoursier/cache/CacheLogger;Ljava/util/concurrent/ExecutorService;Lscala/Option;ZZZLscala/Option;ILscala/Option;Lscala/Option;IILscala/collection/immutable/Seq;Lcoursier/util/Sync;)V
        78: return
      LineNumberTable:
        line 23: 0
        line 25: 2
        line 26: 8
        line 27: 14
        line 28: 20
        line 29: 26
        line 30: 32
        line 31: 38
        line 32: 39
        line 33: 40
        line 34: 41
        line 35: 47
        line 36: 53
        line 37: 56
        line 38: 59
        line 39: 65
        line 41: 71
        line 23: 74
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      79     0  this   Lcoursier/cache/FileCache;
            0      79     1 location   Ljava/io/File;
            0      79     2  sync   Lcoursier/util/Sync;
    Signature: #1540                        // (Ljava/io/File;Lcoursier/util/Sync<TF;>;)V
    MethodParameters:
      Name                           Flags
      location                       final
      sync                           final

  public static final java.lang.Object $anonfun$validateChecksum$5$adapted(java.io.File);
    descriptor: (Ljava/io/File;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1568               // Method $anonfun$validateChecksum$5:(Ljava/io/File;)Z
         4: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Ljava/io/File;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.Object $anonfun$filePerPolicy$2$adapted(coursier.util.Artifact, coursier.credentials.DirectCredentials);
    descriptor: (Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #1570               // Method $anonfun$filePerPolicy$2:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Z
         5: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 159: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 artifact$2   Lcoursier/util/Artifact;
            0       9     1   x$6   Lcoursier/credentials/DirectCredentials;
    MethodParameters:
      Name                           Flags
      artifact$2                     final
      x$6                            final

  public static final java.lang.Object $anonfun$filePerPolicy0$5$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #1574               // Method scala/runtime/BoxesRunTime.unboxToChar:(Ljava/lang/Object;)C
         4: invokestatic  #1576               // Method $anonfun$filePerPolicy0$5:(C)Z
         7: invokestatic  #664                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 192: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   x$9   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$9                            final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #1588,  0           // InvokeDynamic #39:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #18= #15 of #17;    // ChecksumErrors=class coursier/cache/ArtifactError$ChecksumErrors of class coursier/cache/ArtifactError
  public static final #21= #20 of #17;    // ChecksumFormatError=class coursier/cache/ArtifactError$ChecksumFormatError of class coursier/cache/ArtifactError
  public static final #24= #23 of #17;    // ChecksumNotFound=class coursier/cache/ArtifactError$ChecksumNotFound of class coursier/cache/ArtifactError
  public static final #27= #26 of #17;    // WrongChecksum=class coursier/cache/ArtifactError$WrongChecksum of class coursier/cache/ArtifactError
  public final #29;                       // class coursier/cache/FileCache$$anonfun$1
  public final #31;                       // class coursier/cache/FileCache$$anonfun$checksumErrors$1$1
  public static #36= #33 of #35;          // AllOps=class coursier/util/Monad$AllOps of class coursier/util/Monad
  public static #39= #38 of #35;          // =class coursier/util/Monad$ops$ of class coursier/util/Monad
  public static final #44= #41 of #43;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #39= #46 of #48;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
  public static final #53= #50 of #52;    // ofRef=class scala/collection/mutable/ArraySeq$ofRef of class scala/collection/mutable/ArraySeq
  public static #39= #55 of #57;          // =class scala/math/Ordering$String$ of class scala/math/Ordering
Signature: #3                           // <F:Ljava/lang/Object;>Lcoursier/cache/Cache<TF;>;Lscala/Product;Ljava/io/Serializable;
SourceFile: "FileCache.scala"
RuntimeVisibleAnnotations:
  0: #11(#12=s#13)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0015\re\u0001\u00029r\u0005YD!\"!\u000f\u0001\u0005\u000b\u0007I\u0011AA\u001e\u0011)\ti\u0005\u0001B\u0001B\u0003%\u0011Q\b\u0005\u000b\u0003\u001f\u0002!Q1A\u0005\u0002\u0005E\u0003BCA0\u0001\t\u0005\t\u0015!\u0003\u0002T!Q\u0011\u0011\r\u0001\u0003\u0006\u0004%\t!a\u0019\t\u0015\u0005u\u0004A!A!\u0002\u0013\t)\u0007\u0003\u0006\u0002\u0000\u0001\u0011)\u0019!C\u0001\u0003\u0003C!\"a$\u0001\u0005\u0003\u0005\u000b\u0011BAB\u0011)\t\t\n\u0001BC\u0002\u0013\u0005\u00111\u0013\u0005\u000b\u00037\u0003!\u0011!Q\u0001\n\u0005U\u0005BCAO\u0001\t\u0015\r\u0011\"\u0001\u0002 \"Q\u0011\u0011\u0017\u0001\u0003\u0002\u0003\u0006I!!)\t\u0015\u0005M\u0006A!b\u0001\n\u0003\t)\f\u0003\u0006\u0002H\u0002\u0011\t\u0011)A\u0005\u0003oC!\"!3\u0001\u0005\u000b\u0007I\u0011AAf\u0011)\t\u0019\u000e\u0001B\u0001B\u0003%\u0011Q\u001a\u0005\u000b\u0003+\u0004!Q1A\u0005\u0002\u0005-\u0007BCAl\u0001\t\u0005\t\u0015!\u0003\u0002N\"Q\u0011\u0011\u001c\u0001\u0003\u0006\u0004%\t!a3\t\u0015\u0005m\u0007A!A!\u0002\u0013\ti\r\u0003\u0006\u0002^\u0002\u0011)\u0019!C\u0001\u0003?D!\"!;\u0001\u0005\u0003\u0005\u000b\u0011BAq\u0011)\tY\u000f\u0001BC\u0002\u0013\u0005\u0011Q\u001e\u0005\u000b\u0003_\u0004!\u0011!Q\u0001\n\u0005\r\bBCAy\u0001\t\u0015\r\u0011\"\u0001\u0002t\"Q!1\u0002\u0001\u0003\u0002\u0003\u0006I!!>\t\u0015\t5\u0001A!b\u0001\n\u0003\u0011y\u0001\u0003\u0006\u0003\u001a\u0001\u0011\t\u0011)A\u0005\u0005#A!Ba\u0007\u0001\u0005\u000b\u0007I\u0011AAw\u0011)\u0011i\u0002\u0001B\u0001B\u0003%\u00111\u001d\u0005\u000b\u0005?\u0001!Q1A\u0005\u0002\u00055\bB\u0003B\u0011\u0001\t\u0005\t\u0015!\u0003\u0002d\"Q!1\u0005\u0001\u0003\u0006\u0004%\tA!\n\t\u0015\tU\u0002A!A!\u0002\u0013\u00119\u0003\u0003\u0006\u00038\u0001\u0011)\u0019!C\u0002\u0005sA!B!\u0012\u0001\u0005\u0003\u0005\u000b\u0011\u0002B\u001e\u0011\u001d\u00119\u0005\u0001C\u0001\u0005\u0013BqAa\u0012\u0001\t\u0003\u0011\u0019\bC\u0004\u0003H\u0001!\tA!\'\t\u000f\t\u0005\u0006\u0001\"\u0003\u0003:!Q!1\u0015\u0001\t\u0006\u0004%IA!*\t\u000f\tm\u0006\u0001\"\u0001\u0003>\"9!1\u0019\u0001\u0005\u0002\t\u0015\u0007b\u0002Be\u0001\u0011\u0005!1\u001a\u0005\b\u0005\u001b\u0004A\u0011\u0001Bh\u0011\u001d\u0011I\u000e\u0001C\u0001\u00057DqA!9\u0001\t\u0003\u0011\u0019\u000fC\u0004\u0003h\u0002!\tA!;\t\u000f\t=\b\u0001\"\u0001\u0003r\"9!q\u001f\u0001\u0005\u0002\te\bb\u0002B\u0000\u0001\u0011\u00051\u0011\u0001\u0005\n\u0007\u0017\u0001\u0011\u0013!C\u0001\u0007\u001bAqaa\t\u0001\t\u0003\u001a)\u0003C\u0005\u0004.\u0001\u0011\r\u0011\"\u0003\u0002d!A1q\u0006\u0001!\u0002\u0013\t)\u0007C\u0005\u00042\u0001\u0011\r\u0011\"\u0003\u00044!A1q\u0007\u0001!\u0002\u0013\u0019)\u0004C\u0004\u0004:\u0001!Iaa\u000f\t\u000f\rm\u0003\u0001\"\u0001\u0004^!91q\u000f\u0001\u0005\n\re\u0004\"CBC\u0001E\u0005I\u0011BBD\u0011\u001d\u0019Y\t\u0001C\u0005\u0007\u001bC\u0011b!&\u0001#\u0003%Iaa\"\t\u000f\r]\u0005\u0001\"\u0001\u0004\u001a\"91q\u0013\u0001\u0005\u0002\ru\u0005bBBR\u0001\u0011%1Q\u0015\u0005\b\u0007[\u0003A\u0011ABX\u0011\u001d\u0019y\f\u0001C!\u0007\u0003D!b!2\u0001\u0011\u000b\u0007I\u0011ABd\u0011\u001d\u0011\u0019\r\u0001C\u0001\u0007#Dqa!6\u0001\t\u0003\u00199\u000eC\u0004\u0004\\\u0002!\ta!8\t\u000f\r\u0005\b\u0001\"\u0001\u0004d\"91q\u001d\u0001\u0005\u0002\r%\bbBBw\u0001\u0011\u00051q\u001e\u0005\b\u0005C\u0004A\u0011ABz\u0011\u001d\u00199\u0010\u0001C\u0001\u0007sDqa!@\u0001\t\u0003\u0019y\u0010C\u0004\u0005\u0004\u0001!\t\u0001\"\u0002\t\u000f\t]\b\u0001\"\u0001\u0005\n!9AQ\u0002\u0001\u0005\u0002\u0011=\u0001b\u0002C\n\u0001\u0011\u0005AQ\u0003\u0005\b\t3\u0001A\u0011\u0001C\u000e\u0011\u001d!y\u0002\u0001C\u0001\tCAq\u0001\"\n\u0001\t\u0003!9\u0003C\u0004\u0005,\u0001!\t\u0001\"\f\t\u000f\u0011E\u0002\u0001\"\u0001\u00054!9Aq\u0007\u0001\u0005B\u0011e\u0002b\u0002C \u0001\u0011\u0005C\u0011\t\u0005\b\t\u000f\u0002A\u0011\tC%\u0011\u001d!i\u0005\u0001C!\t\u001fBq\u0001\"\u0015\u0001\t\u0013!\u0019\u0006C\u0004\u0005\\\u0001!\t\u0005\"\u0018\t\u000f\u0011}\u0003\u0001\"\u0011\u0002n\"9A\u0011\r\u0001\u0005B\u0011\r\u0004b\u0002C5\u0001\u0011\u0005C1N\u0004\b\t_\n\b\u0012\u0001C9\r\u0019\u0001\u0018\u000f#\u0001\u0005t!9!q\t2\u0005\u0002\u0011}\u0004\u0002\u0003CAE\u0012\u00051\u000fb!\t\u000f\u00115%\r\"\u0003\u0005\u0010\"AA1\u00132\u0005\u0002E$)\n\u0003\u0005\u0005\u001a\n$\ta\u001dCN\u0011\u001d!\u0019K\u0019C\u0001\tKC\u0011\u0002\"/c#\u0003%\t\u0001b/\t\u000f\u0011=\'\r\"\u0003\u0005R\"9AQ\u001d2\u0005\n\u0011\u001d\bb\u0002CRE\u0012\u0005A\u0011 \u0005\b\tG\u0013G\u0011AC\b\u0011\u001d!\u0019K\u0019C\u0001\u000b\u0007B\u0011\"\"\u001fc\u0003\u0003%I!b\u001f\u0003\u0013\u0019KG.Z\"bG\",\'B\u0001:t\u0003\u0015\u0019\u0017m\u00195f\u0015\u0005!\u0018\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001U\u0011qO`\n\u0007\u0001a\fY\"!\t\u0011\u0007eTH0D\u0001r\u0013\tY\u0018OA\u0003DC\u000eDW\r\u0005\u0002~}2\u0001AAB@\u0001\u0005\u0004\t\tAA\u0001G+\u0011\t\u0019!a\u0006\u0012\t\u0005\u0015\u0011\u0011\u0003\t\u0005\u0003\u000f\ti!\u0004\u0002\u0002\n)\u0011\u00111B\u0001\u0006g\u000e\fG.Y\u0005\u0005\u0003\u001f\tIAA\u0004O_RD\u0017N\\4\u0011\t\u0005\u001d\u00111C\u0005\u0005\u0003+\tIAA\u0002B]f$q!!\u0007\u007f\u0005\u0004\t\u0019AA\u0001`!\u0011\t9!!\b\n\t\u0005}\u0011\u0011\u0002\u0002\b!J|G-^2u!\u0011\t\u0019#a\r\u000f\t\u0005\u0015\u0012q\u0006\b\u0005\u0003O\ti#\u0004\u0002\u0002*)\u0019\u00111F;\u0002\rq\u0012xn\u001c;?\u0013\t\tY!\u0003\u0003\u00022\u0005%\u0011a\u00029bG.\fw-Z\u0005\u0005\u0003k\t9D\u0001\u0007TKJL\u0017\r\\5{C\ndWM\u0003\u0003\u00022\u0005%\u0011\u0001\u00037pG\u0006$\u0018n\u001c8\u0016\u0005\u0005u\u0002\u0003BA \u0003\u0013j!!!\u0011\u000b\t\u0005\r\u0013QI\u0001\u0003S>T!!a\u0012\u0002\t)\fg/Y\u0005\u0005\u0003\u0017\n\tE\u0001\u0003GS2,\u0017!\u00037pG\u0006$\u0018n\u001c8!\u00035\u0019\u0017m\u00195f!>d\u0017nY5fgV\u0011\u00111\u000b\t\u0007\u0003G\t)&!\u0017\n\t\u0005]\u0013q\u0007\u0002\u0004\'\u0016\f\bcA=\u0002\\%\u0019\u0011QL9\u0003\u0017\r\u000b7\r[3Q_2L7-_\u0001\u000fG\u0006\u001c\u0007.\u001a)pY&\u001c\u0017.Z:!\u0003%\u0019\u0007.Z2lgVl7/\u0006\u0002\u0002fA1\u00111EA+\u0003O\u0002b!a\u0002\u0002j\u00055\u0014\u0002BA6\u0003\u0013\u0011aa\u00149uS>t\u0007\u0003BA8\u0003orA!!\u001d\u0002tA!\u0011qEA\u0005\u0013\u0011\t)(!\u0003\u0002\rA\u0013X\rZ3g\u0013\u0011\tI(a\u001f\u0003\rM#(/\u001b8h\u0015\u0011\t)(!\u0003\u0002\u0015\rDWmY6tk6\u001c\b%A\u0006de\u0016$WM\u001c;jC2\u001cXCAAB!\u0019\t\u0019#!\u0016\u0002\u0006B!\u0011qQAF\u001b\t\tIIC\u0002\u0002\u0000MLA!!$\u0002\n\nY1I]3eK:$\u0018.\u00197t\u00031\u0019\'/\u001a3f]RL\u0017\r\\:!\u0003\u0019awnZ4feV\u0011\u0011Q\u0013\t\u0004s\u0006]\u0015bAAMc\nY1)Y2iK2{wmZ3s\u0003\u001dawnZ4fe\u0002\nA\u0001]8pYV\u0011\u0011\u0011\u0015\t\u0005\u0003G\u000bi+\u0004\u0002\u0002&*!\u0011qUAU\u0003)\u0019wN\\2veJ,g\u000e\u001e\u0006\u0005\u0003W\u000b)%\u0001\u0003vi&d\u0017\u0002BAX\u0003K\u0013q\"\u0012=fGV$xN]*feZL7-Z\u0001\u0006a>|G\u000eI\u0001\u0004iRdWCAA\\!\u0019\t9!!\u001b\u0002:B!\u00111XAb\u001b\t\tiL\u0003\u0003\u0002@\u0006\u0005\u0017\u0001\u00033ve\u0006$\u0018n\u001c8\u000b\t\u0005\u001d\u0016\u0011B\u0005\u0005\u0003\u000b\fiL\u0001\u0005EkJ\fG/[8o\u0003\u0011!H\u000f\u001c\u0011\u000291|7-\u00197BeRLg-Y2ugNCw.\u001e7e\u0005\u0016\u001c\u0015m\u00195fIV\u0011\u0011Q\u001a\t\u0005\u0003\u000f\ty-\u0003\u0003\u0002R\u0006%!a\u0002\"p_2,\u0017M\\\u0001\u001eY>\u001c\u0017\r\\!si&4\u0017m\u0019;t\'\"|W\u000f\u001c3CK\u000e\u000b7\r[3eA\u0005ibm\u001c7m_^DE\u000f\u001e9U_\"#H\u000f]:SK\u0012L\'/Z2uS>t7/\u0001\u0010g_2dwn\u001e%uiB$v\u000e\u0013;uaN\u0014V\rZ5sK\u000e$\u0018n\u001c8tA\u0005ibm\u001c7m_^DE\u000f\u001e9t)>DE\u000f\u001e9SK\u0012L\'/Z2uS>t7/\u0001\u0010g_2dwn\u001e%uiB\u001cHk\u001c%uiB\u0014V\rZ5sK\u000e$\u0018n\u001c8tA\u0005yQ.\u0019=SK\u0012L\'/Z2uS>t7/\u0006\u0002\u0002bB1\u0011qAA5\u0003G\u0004B!a\u0002\u0002f&!\u0011q]A\u0005\u0005\rIe\u000e^\u0001\u0011[\u0006D(+\u001a3je\u0016\u001cG/[8og\u0002\n\u0001b]:m%\u0016$(/_\u000b\u0003\u0003G\f\u0011b]:m%\u0016$(/\u001f\u0011\u0002\'M\u001cHnU8dW\u0016$h)Y2u_JLx\n\u001d;\u0016\u0005\u0005U\bCBA\u0004\u0003S\n9\u0010\u0005\u0003\u0002z\n\u001dQBAA~\u0015\u0011\ti0a@\u0002\u0007M\u001cHN\u0003\u0003\u0003\u0002\t\r\u0011a\u00018fi*\u0011!QA\u0001\u0006U\u00064\u0018\r_\u0005\u0005\u0005\u0013\tYP\u0001\tT\'2\u001bvnY6fi\u001a\u000b7\r^8ss\u0006!2o\u001d7T_\u000e\\W\r\u001e$bGR|\'/_(qi\u0002\n1\u0003[8ti:\fW.\u001a,fe&4\u0017.\u001a:PaR,\"A!\u0005\u0011\r\u0005\u001d\u0011\u0011\u000eB\n!\u0011\tIP!\u0006\n\t\t]\u00111 \u0002\u0011\u0011>\u001cHO\\1nKZ+\'/\u001b4jKJ\fA\u0003[8ti:\fW.\u001a,fe&4\u0017.\u001a:PaR\u0004\u0013!\u0002:fiJL\u0018A\u0002:fiJL\b%\u0001\u0006ck\u001a4WM]*ju\u0016\f1BY;gM\u0016\u00148+\u001b>fA\u0005a1\r\\1tg2{\u0017\rZ3sgV\u0011!q\u0005\t\u0007\u0003G\t)F!\u000b\u0011\t\t-\"\u0011G\u0007\u0003\u0005[QAAa\f\u0002F\u0005!A.\u00198h\u0013\u0011\u0011\u0019D!\f\u0003\u0017\rc\u0017m]:M_\u0006$WM]\u0001\u000eG2\f7o\u001d\'pC\u0012,\'o\u001d\u0011\u0002\tMLhnY\u000b\u0003\u0005w\u0001RA!\u0010\u0003Bql!Aa\u0010\u000b\u0007\u0005-6/\u0003\u0003\u0003D\t}\"\u0001B*z]\u000e\fQa]=oG\u0002\na\u0001P5oSRtD\u0003\nB&\u0005#\u0012\u0019F!\u0016\u0003X\te#1\fB/\u0005?\u0012\tGa\u0019\u0003f\t\u001d$\u0011\u000eB6\u0005[\u0012yG!\u001d\u0015\t\t5#q\n\t\u0004s\u0002a\bb\u0002B\u001cK\u0001\u000f!1\b\u0005\b\u0003s)\u0003\u0019AA\u001f\u0011\u001d\ty%\na\u0001\u0003\'Bq!!\u0019&\u0001\u0004\t)\u0007C\u0004\u0002\u0000\u0015\u0002\r!a!\t\u000f\u0005EU\u00051\u0001\u0002\u0016\"9\u0011QT\u0013A\u0002\u0005\u0005\u0006bBAZK\u0001\u0007\u0011q\u0017\u0005\b\u0003\u0013,\u0003\u0019AAg\u0011\u001d\t).\na\u0001\u0003\u001bDq!!7&\u0001\u0004\ti\rC\u0004\u0002^\u0016\u0002\r!!9\t\u000f\u0005-X\u00051\u0001\u0002d\"9\u0011\u0011_\u0013A\u0002\u0005U\bb\u0002B\u0007K\u0001\u0007!\u0011\u0003\u0005\b\u00057)\u0003\u0019AAr\u0011\u001d\u0011y\"\na\u0001\u0003GDqAa\t&\u0001\u0004\u00119\u0003\u0006\u0012\u0003v\te$1\u0010B?\u0005\u007f\u0012\tIa!\u0003\u0006\n\u001d%\u0011\u0012BF\u0005\u001b\u0013yI!%\u0003\u0014\nU%q\u0013\u000b\u0005\u0005\u001b\u00129\bC\u0004\u00038\u0019\u0002\u001dAa\u000f\t\u000f\u0005eb\u00051\u0001\u0002>!9\u0011q\n\u0014A\u0002\u0005M\u0003bBA1M\u0001\u0007\u0011Q\r\u0005\b\u0003\u007f2\u0003\u0019AAB\u0011\u001d\t\tJ\na\u0001\u0003+Cq!!(\'\u0001\u0004\t\t\u000bC\u0004\u00024\u001a\u0002\r!a.\t\u000f\u0005%g\u00051\u0001\u0002N\"9\u0011Q\u001b\u0014A\u0002\u00055\u0007bBAmM\u0001\u0007\u0011Q\u001a\u0005\b\u0003;4\u0003\u0019AAq\u0011\u001d\tYO\na\u0001\u0003GDq!!=\'\u0001\u0004\t)\u0010C\u0004\u0003\u000e\u0019\u0002\rA!\u0005\t\u000f\tma\u00051\u0001\u0002d\"9!q\u0004\u0014A\u0002\u0005\rH\u0003\u0002BN\u0005?#BA!\u0014\u0003\u001e\"9!qG\u0014A\u0004\tm\u0002bBA\u001dO\u0001\u0007\u0011QH\u0001\u0002\'\u0006y\u0011\r\u001c7De\u0016$WM\u001c;jC2\u001c\b\'\u0006\u0002\u0003(B1!\u0011\u0016BZ\u0005kk!Aa+\u000b\t\t5&qV\u0001\nS6lW\u000f^1cY\u0016TAA!-\u0002\n\u0005Q1m\u001c7mK\u000e$\u0018n\u001c8\n\t\u0005]#1\u0016\t\u0005\u0003\u000f\u00139,\u0003\u0003\u0003:\u0006%%!\u0005#je\u0016\u001cGo\u0011:fI\u0016tG/[1mg\u0006q\u0011\r\u001c7De\u0016$WM\u001c;jC2\u001cXC\u0001B`!\u0011ihP!1\u0011\r\u0005\r\u0012Q\u000bB[\u000319\u0018\u000e\u001e5M_\u000e\fG/[8o)\u0011\u0011iEa2\t\u000f\u0005e2\u00061\u0001\u0002n\u0005ian\\\"sK\u0012,g\u000e^5bYN,\"A!\u0014\u0002\u001d\u0005$Gm\u0011:fI\u0016tG/[1mgR!!Q\nBi\u0011\u001d\ty(\fa\u0001\u0005\'\u0004b!a\u0002\u0003V\u0006\u0015\u0015\u0002\u0002Bl\u0003\u0013\u0011!\u0002\u0010:fa\u0016\fG/\u001a3?\u0003I\tG\r\u001a$jY\u0016\u001c%/\u001a3f]RL\u0017\r\\:\u0015\t\t5#Q\u001c\u0005\b\u0005?t\u0003\u0019AA\u001f\u00039\u0019\'/\u001a3f]RL\u0017\r\u001c$jY\u0016\fqa^5uQR#H\u000e\u0006\u0003\u0003N\t\u0015\bbBAZ_\u0001\u0007\u0011\u0011X\u0001\u0015o&$\bnU:m\'>\u001c7.\u001a;GC\u000e$xN]=\u0015\t\t5#1\u001e\u0005\b\u0005[\u0004\u0004\u0019AA|\u0003A\u00198\u000f\\*pG.,GOR1di>\u0014\u00180\u0001\u000bxSRD\u0007j\\:u]\u0006lWMV3sS\u001aLWM\u001d\u000b\u0005\u0005\u001b\u0012\u0019\u0010C\u0004\u0003vF\u0002\rAa\u0005\u0002!!|7\u000f\u001e8b[\u00164VM]5gS\u0016\u0014\u0018aE<ji\"l\u0015\r\u001f*fI&\u0014Xm\u0019;j_:\u001cH\u0003\u0002B\'\u0005wDqA!@3\u0001\u0004\t\u0019/A\u0002nCb\f\u0011\u0002\\8dC24\u0015\u000e\\3\u0015\r\u0005u21AB\u0004\u0011\u001d\u0019)a\ra\u0001\u0003[\n1!\u001e:m\u0011%\u0019Ia\rI\u0001\u0002\u0004\t9\'\u0001\u0003vg\u0016\u0014\u0018a\u00057pG\u0006dg)\u001b7fI\u0011,g-Y;mi\u0012\u0012TCAB\bU\u0011\t9g!\u0005,\u0005\rM\u0001\u0003BB\u000b\u0007?i!aa\u0006\u000b\t\re11D\u0001\nk:\u001c\u0007.Z2lK\u0012TAa!\b\u0002\n\u0005Q\u0011M\u001c8pi\u0006$\u0018n\u001c8\n\t\r\u00052q\u0003\u0002\u0012k:\u001c\u0007.Z2lK\u00124\u0016M]5b]\u000e,\u0017!\u00037pO\u001e,\'o\u00149u+\t\u00199\u0003\u0005\u0004\u0002\b\r%\u0012QS\u0005\u0005\u0007W\tIA\u0001\u0003T_6,\u0017AC2iK\u000e\\7/^7ta\u0005Y1\r[3dWN,Xn\u001d\u0019!\u0003=\t7\r^;bY\u000eCWmY6tk6\u001cXCAB\u001b!\u0019\u0011IKa-\u0002n\u0005\u0001\u0012m\u0019;vC2\u001c\u0005.Z2lgVl7\u000fI\u0001\tI><h\u000e\\8bIR11QHB\'\u0007/\u0002B! @\u0004@A1\u00111EA+\u0007\u0003\u0002Baa\u0011\u0004J5\u00111Q\t\u0006\u0004\u0007\u000f\n\u0018\u0001C5oi\u0016\u0014h.\u00197\n\t\r-3Q\t\u0002\u000f\t><h\u000e\\8bIJ+7/\u001e7u\u0011\u001d\u0019yE\u000fa\u0001\u0007#\n\u0001\"\u0019:uS\u001a\f7\r\u001e\t\u0005\u0005{\u0019\u0019&\u0003\u0003\u0004V\t}\"\u0001C!si&4\u0017m\u0019;\t\u000f\re#\b1\u0001\u0002Z\u0005Y1-Y2iKB{G.[2z\u0003A1\u0018\r\\5eCR,7\t[3dWN,X\u000e\u0006\u0004\u0004`\rE41\u000f\t\n\u0005{\u0019\t\u0007`B3\u0007WJAaa\u0019\u0003@\t9Q)\u001b;iKJ$\u0006cA=\u0004h%\u00191\u0011N9\u0003\u001b\u0005\u0013H/\u001b4bGR,%O]8s!\u0011\t9a!\u001c\n\t\r=\u0014\u0011\u0002\u0002\u0005+:LG\u000fC\u0004\u0004Pm\u0002\ra!\u0015\t\u000f\rU4\b1\u0001\u0002n\u000591/^7UsB,\u0017!\u00044jY\u0016\u0004VM\u001d)pY&\u001c\u0017\u0010\u0006\u0005\u0004|\ru4qPBB!%\u0011id!\u0019}\u0007K\ni\u0004C\u0004\u0004Pq\u0002\ra!\u0015\t\u000f\r\u0005E\b1\u0001\u0002Z\u00051\u0001o\u001c7jGfD\u0011Ba\u0007=!\u0003\u0005\r!a9\u0002/\u0019LG.\u001a)feB{G.[2zI\u0011,g-Y;mi\u0012\u001aTCABEU\u0011\t\u0019o!\u0005\u0002\u001d\u0019LG.\u001a)feB{G.[2zaQA11PBH\u0007#\u001b\u0019\nC\u0004\u0004Py\u0002\ra!\u0015\t\u000f\r\u0005e\b1\u0001\u0002Z!I!1\u0004 \u0011\u0002\u0003\u0007\u00111]\u0001\u0019M&dW\rU3s!>d\u0017nY=1I\u0011,g-Y;mi\u0012\u001a\u0014\u0001\u00024jY\u0016$Baa\u001f\u0004\u001c\"91q\n!A\u0002\rECCBB>\u0007?\u001b\t\u000bC\u0004\u0004P\u0005\u0003\ra!\u0015\t\u000f\tm\u0011\t1\u0001\u0002d\u0006qa-\u001a;dQB+\'\u000fU8mS\u000eLHCBBT\u0007S\u001bY\u000bE\u0005\u0003>\r\u0005D0!\u001c\u0002n!91q\n\"A\u0002\rE\u0003bBBA\u0005\u0002\u0007\u0011\u0011L\u0001\u0006M\u0016$8\r[\u000b\u0003\u0007c\u0003Raa-\u0004:rt1!_B[\u0013\r\u00199,]\u0001\u0006\u0007\u0006\u001c\u0007.Z\u0005\u0005\u0007w\u001biLA\u0003GKR\u001c\u0007NC\u0002\u00048F\faAZ3uG\"\u001cXCABb!\u0019\t\u0019#!\u0016\u00042\u0006\u0011QmY\u000b\u0003\u0007\u0013\u0004Baa3\u0004N6\u0011\u0011\u0011Y\u0005\u0005\u0007\u001f\f\tMA\u0010Fq\u0016\u001cW\u000f^5p]\u000e{g\u000e^3yi\u0016CXmY;u_J\u001cVM\u001d<jG\u0016$BA!\u0014\u0004T\"9\u0011\u0011\b$A\u0002\u0005u\u0012!E<ji\"\u001c\u0015m\u00195f!>d\u0017nY5fgR!!QJBm\u0011\u001d\tye\u0012a\u0001\u0003\'\nQb^5uQ\u000eCWmY6tk6\u001cH\u0003\u0002B\'\u0007?Dq!!\u0019I\u0001\u0004\t)\'A\bxSRD7I]3eK:$\u0018.\u00197t)\u0011\u0011ie!:\t\u000f\u0005}\u0014\n1\u0001\u0002\u0004\u0006Qq/\u001b;i\u0019><w-\u001a:\u0015\t\t531\u001e\u0005\b\u0003#S\u0005\u0019AAK\u0003!9\u0018\u000e\u001e5Q_>dG\u0003\u0002B\'\u0007cDq!!(L\u0001\u0004\t\t\u000b\u0006\u0003\u0003N\rU\bbBAZ\u0019\u0002\u0007\u0011qW\u0001!o&$\b\u000eT8dC2\f%\u000f^5gC\u000e$8o\u00155pk2$\')Z\"bG\",G\r\u0006\u0003\u0003N\rm\bbBAe\u001b\u0002\u0007\u0011QZ\u0001\"o&$\bNR8mY><\b\n\u001e;q)>DE\u000f\u001e9t%\u0016$\u0017N]3di&|gn\u001d\u000b\u0005\u0005\u001b\"\t\u0001C\u0004\u0002V:\u0003\r!!4\u0002C]LG\u000f\u001b$pY2|w\u000f\u0013;uaN$v\u000e\u0013;uaJ+G-\u001b:fGRLwN\\:\u0015\t\t5Cq\u0001\u0005\b\u00033|\u0005\u0019AAg)\u0011\u0011i\u0005b\u0003\t\u000f\u0005u\u0007\u000b1\u0001\u0002b\u0006aq/\u001b;i\'Nd\'+\u001a;ssR!!Q\nC\t\u0011\u001d\tY/\u0015a\u0001\u0003G\fqc^5uQN\u001bHnU8dW\u0016$h)Y2u_JLx\n\u001d;\u0015\t\t5Cq\u0003\u0005\b\u0003c\u0014\u0006\u0019AA{\u0003]9\u0018\u000e\u001e5I_N$h.Y7f-\u0016\u0014\u0018NZ5fe>\u0003H\u000f\u0006\u0003\u0003N\u0011u\u0001b\u0002B\u0007\'\u0002\u0007!\u0011C\u0001\no&$\bNU3uef$BA!\u0014\u0005$!9!1\u0004+A\u0002\u0005\r\u0018AD<ji\"\u0014UO\u001a4feNK\'0\u001a\u000b\u0005\u0005\u001b\"I\u0003C\u0004\u0003 U\u0003\r!a9\u0002!]LG\u000f[\"mCN\u001cHj\\1eKJ\u001cH\u0003\u0002B\'\t_AqAa\tW\u0001\u0004\u00119#\u0001\u0005xSRD7+\u001f8d)\u0011\u0011i\u0005\"\u000e\t\u000f\t]r\u000b1\u0001\u0003<\u0005AAo\\*ue&tw\r\u0006\u0002\u0005<A!!1\u0006C\u001f\u0013\u0011\tIH!\f\u0002\u0011\r\fg.R9vC2$B!!4\u0005D!9AQI-A\u0002\u0005E\u0011aA8cU\u00061Q-];bYN$B!!4\u0005L!9AQ\t.A\u0002\u0005E\u0011\u0001\u00035bg\"\u001cu\u000eZ3\u0015\u0005\u0005\r\u0018!\u0002;va2,WC\u0001C+!!\n9\u0001b\u0016\u0002>\u0005M\u0013QMAB\u0003+\u000b\t+a.\u0002N\u00065\u0017QZAq\u0003G\f)P!\u0005\u0002d\u0006\r(q\u0005B\u001e\u0013\u0011!I&!\u0003\u0003\u000fQ+\b\u000f\\32q\u0005i\u0001O]8ek\u000e$\bK]3gSb,\"\u0001b\u000f\u0002\u0019A\u0014x\u000eZ;di\u0006\u0013\u0018\u000e^=\u0002\u001dA\u0014x\u000eZ;di\u0016cW-\\3oiR!\u0011\u0011\u0003C3\u0011\u001d!9g\u0018a\u0001\u0003G\f\u0011A\\\u0001\u0013aJ|G-^2u\u000b2,W.\u001a8u\u001d\u0006lW\r\u0006\u0003\u0005<\u00115\u0004b\u0002C4A\u0002\u0007\u00111]\u0001\n\r&dWmQ1dQ\u0016\u0004\"!\u001f2\u0014\u000b\t$)\bb\u001f\u0011\t\u0005\u001dAqO\u0005\u0005\ts\nIA\u0001\u0004B]f\u0014VM\u001a\t\u0005\u0003\u007f!i(\u0003\u0003\u00026\u0005\u0005CC\u0001C9\u0003)awnY1m\r&dW\r\r\u000b\u000b\u0003{!)\tb\"\u0005\n\u0012-\u0005bBB\u0003I\u0002\u0007\u0011Q\u000e\u0005\u0007e\u0012\u0004\r!!\u0010\t\u000f\r%A\r1\u0001\u0002h!9\u0011\u0011\u001a3A\u0002\u00055\u0017aE1vq&d\u0017.\u0019:z\r&dW\r\u0015:fM&DH\u0003BA7\t#Cqaa&f\u0001\u0004\ti$A\ndY\u0016\f\'/Q;yS2L\u0017M]=GS2,7\u000f\u0006\u0003\u0004l\u0011]\u0005bBBLM\u0002\u0007\u0011QH\u0001\u000eCVD\u0018\u000e\\5bef4\u0015\u000e\\3\u0015\r\u0005uBQ\u0014CP\u0011\u001d\u00199j\u001aa\u0001\u0003{Aq\u0001\")h\u0001\u0004\ti\'A\u0002lKf\fQ!\u00199qYf,B\u0001b*\u00050R\u0011A\u0011\u0016\u000b\u0005\tW#)\f\u0005\u0003z\u0001\u00115\u0006cA?\u00050\u00121q\u0010\u001bb\u0001\tc+B!a\u0001\u00054\u0012A\u0011\u0011\u0004CX\u0005\u0004\t\u0019\u0001C\u0005\u0003\"\"\u0004\n\u0011q\u0001\u00058B1!Q\bB!\t[\u000bq\"\u00199qYf$C-\u001a4bk2$H%M\u000b\u0005\t{#I\r\u0006\u0002\u0005@*\"A\u0011YB\t!\u0019\u0011iD!\u0011\u0005DB!!Q\bCc\u0013\u0011!9Ma\u0010\u0003\tQ\u000b7o\u001b\u0003\u0007\u007f&\u0014\r\u0001b3\u0016\t\u0005\rAQ\u001a\u0003\t\u00033!IM1\u0001\u0002\u0004\u0005y\u0001/\u001a:tSN$X\r\u001a#jO\u0016\u001cH\u000f\u0006\u0005\u0005T\u0012}G\u0011\u001dCr!\u0011!)\u000eb7\u000e\u0005\u0011]\'\u0002\u0002Cm\u0003\u000b\nA!\\1uQ&!AQ\u001cCl\u0005)\u0011\u0015nZ%oi\u0016<WM\u001d\u0005\b\u0003sQ\u0007\u0019AA\u001f\u0011\u001d\u0019)H\u001ba\u0001\u0003[BqAa@k\u0001\u0004\ti$A\u0007d_6\u0004X\u000f^3ES\u001e,7\u000f\u001e\u000b\u0007\tS$)\u0010b>\u0011\r\u0005\u001dA1\u001eCx\u0013\u0011!i/!\u0003\u0003\u000b\u0005\u0013(/Y=\u0011\t\u0005\u001dA\u0011_\u0005\u0005\tg\fIA\u0001\u0003CsR,\u0007bBB;W\u0002\u0007\u0011Q\u000e\u0005\b\u0005\u007f\\\u0007\u0019AA\u001f+\u0011!Y0b\u0001\u0015\t\u0011uXQ\u0002\u000b\u0005\t\u007f,I\u0001\u0005\u0003z\u0001\u0015\u0005\u0001cA?\u0006\u0004\u00111q\u0010\u001cb\u0001\u000b\u000b)B!a\u0001\u0006\b\u0011A\u0011\u0011DC\u0002\u0005\u0004\t\u0019\u0001C\u0004\u000381\u0004\u001d!b\u0003\u0011\r\tu\"\u0011IC\u0001\u0011\u001d\tI\u0004\u001ca\u0001\u0003{)B!\"\u0005\u0006\u001aQ\u0011S1CC\u0012\u000bK)9#\"\u000b\u0006,\u00155RqFC\u0019\u000bg))$b\u000e\u0006:\u0015mRQHC \u000b\u0003\"B!\"\u0006\u0006 A!\u0011\u0010AC\f!\riX\u0011\u0004\u0003\u0007\u007f6\u0014\r!b\u0007\u0016\t\u0005\rQQ\u0004\u0003\t\u00033)IB1\u0001\u0002\u0004!9!qG7A\u0004\u0015\u0005\u0002C\u0002B\u001f\u0005\u0003*9\u0002C\u0004\u0002:5\u0004\r!!\u0010\t\u000f\u0005=S\u000e1\u0001\u0002T!9\u0011\u0011M7A\u0002\u0005\u0015\u0004bBA@[\u0002\u0007\u00111\u0011\u0005\b\u0003#k\u0007\u0019AAK\u0011\u001d\ti*\u001ca\u0001\u0003CCq!a-n\u0001\u0004\t9\fC\u0004\u0002J6\u0004\r!!4\t\u000f\u0005UW\u000e1\u0001\u0002N\"9\u0011\u0011\\7A\u0002\u00055\u0007bBAo[\u0002\u0007\u0011\u0011\u001d\u0005\b\u0003Wl\u0007\u0019AAr\u0011\u001d\t\t0\u001ca\u0001\u0003kDqA!\u0004n\u0001\u0004\u0011\t\u0002C\u0004\u0003\u001c5\u0004\r!a9\t\u000f\t}Q\u000e1\u0001\u0002dV!QQIC\')\u0011*9%b\u0016\u0006Z\u0015mSQLC0\u000bC*\u0019\'\"\u001a\u0006h\u0015%T1NC7\u000b_*\t(b\u001d\u0006v\u0015]D\u0003BC%\u000b\'\u0002B!\u001f\u0001\u0006LA\u0019Q0\"\u0014\u0005\r}t\'\u0019AC(+\u0011\t\u0019!\"\u0015\u0005\u0011\u0005eQQ\nb\u0001\u0003\u0007AqAa\u000eo\u0001\b))\u0006\u0005\u0004\u0003>\t\u0005S1\n\u0005\b\u0003sq\u0007\u0019AA\u001f\u0011\u001d\tyE\u001ca\u0001\u0003\'Bq!!\u0019o\u0001\u0004\t)\u0007C\u0004\u0002\u00009\u0004\r!a!\t\u000f\u0005Ee\u000e1\u0001\u0002\u0016\"9\u0011Q\u00148A\u0002\u0005\u0005\u0006bBAZ]\u0002\u0007\u0011q\u0017\u0005\b\u0003\u0013t\u0007\u0019AAg\u0011\u001d\t)N\u001ca\u0001\u0003\u001bDq!!7o\u0001\u0004\ti\rC\u0004\u0002^:\u0004\r!!9\t\u000f\u0005-h\u000e1\u0001\u0002d\"9\u0011\u0011\u001f8A\u0002\u0005U\bb\u0002B\u0007]\u0002\u0007!\u0011\u0003\u0005\b\u00057q\u0007\u0019AAr\u0011\u001d\u0011yB\u001ca\u0001\u0003GDqAa\to\u0001\u0004\u00119#\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0006~A!!1FC@\u0013\u0011)\tI!\f\u0003\r=\u0013\'.Z2u\u0001"
    )
BootstrapMethods:
  0: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #211 REF_invokeStatic coursier/cache/FileCache.$anonfun$allCredentials0$1:(Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
      #212 (Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
      #213 5
      #214 1
      #212 (Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
  1: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #242 ()Ljava/lang/Object;
      #247 REF_invokeStatic coursier/cache/FileCache.$anonfun$allCredentials$1:(Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
      #248 ()Lscala/collection/immutable/Seq;
      #213 5
      #214 1
      #248 ()Lscala/collection/immutable/Seq;
  2: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #435 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$1:(Lcoursier/core/Authentication;)Ljava/lang/String;
      #436 (Lcoursier/core/Authentication;)Ljava/lang/String;
      #213 5
      #214 1
      #436 (Lcoursier/core/Authentication;)Ljava/lang/String;
  3: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #469 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
      #471 (Ljava/lang/String;)Ljava/io/File;
      #213 5
      #214 1
      #471 (Ljava/lang/String;)Ljava/io/File;
  4: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #242 ()Ljava/lang/Object;
      #481 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$4:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
      #483 ()Lscala/util/Either;
      #213 5
      #214 1
      #483 ()Lscala/util/Either;
  5: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #509 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$1:(Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
      #511 (Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
      #213 5
      #214 1
      #511 (Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
  6: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #521 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$4:(Lcoursier/util/Artifact;)Lscala/util/Right;
      #522 (Lcoursier/util/Artifact;)Lscala/util/Right;
      #213 5
      #214 1
      #522 (Lcoursier/util/Artifact;)Lscala/util/Right;
  7: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #528 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$5:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #530 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #530 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  8: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #546 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
      #548 (Lscala/collection/immutable/Seq;)Lscala/util/Either;
      #213 5
      #214 1
      #548 (Lscala/collection/immutable/Seq;)Lscala/util/Either;
  9: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #554 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$8:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
      #556 (Lscala/Tuple2;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #556 (Lscala/Tuple2;)Lcoursier/util/EitherT;
  10: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #562 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$10:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
      #564 (Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #564 (Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
  11: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #590 REF_invokeStatic coursier/cache/FileCache.$anonfun$file$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #592 (Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #592 (Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  12: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #607 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #612 REF_invokeStatic coursier/cache/FileCache.$anonfun$file$2:(Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
      #614 (Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #614 (Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
  13: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #683 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$1:(Lcoursier/cache/ArtifactError;)Ljava/lang/String;
      #684 (Lcoursier/cache/ArtifactError;)Ljava/lang/String;
      #213 5
      #214 1
      #684 (Lcoursier/cache/ArtifactError;)Ljava/lang/String;
  14: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #693 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$2:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
      #695 (Ljava/io/File;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #695 (Ljava/io/File;)Lcoursier/util/EitherT;
  15: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #706 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #530 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #530 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  16: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #716 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchs$1:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
      #718 (Lcoursier/cache/CachePolicy;)Lscala/Function1;
      #213 5
      #214 1
      #718 (Lcoursier/cache/CachePolicy;)Lscala/Function1;
  17: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #901 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$3:(Lcoursier/core/Authentication;)Ljava/lang/String;
      #436 (Lcoursier/core/Authentication;)Ljava/lang/String;
      #213 5
      #214 1
      #436 (Lcoursier/core/Authentication;)Ljava/lang/String;
  18: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #917 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$5$adapted:(Ljava/io/File;)Ljava/lang/Object;
      #918 (Ljava/io/File;)Ljava/lang/Object;
      #213 5
      #214 1
      #918 (Ljava/io/File;)Ljava/lang/Object;
  19: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1027 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$2$adapted:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
      #1029 (Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
      #213 5
      #214 1
      #1029 (Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
  20: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1034 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$3:(Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
      #1035 (Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
      #213 5
      #214 1
      #1035 (Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
  21: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1094 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$5$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #214 1
  22: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #242 ()Ljava/lang/Object;
      #1106 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$4:(Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
      #1107 ()Ljava/lang/String;
      #213 5
      #214 1
      #1107 ()Ljava/lang/String;
  23: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1149 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$2:(Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
      #1150 (Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
      #213 5
      #214 1
      #1150 (Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
  24: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1169 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$3:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
      #1171 (Lscala/Option;)Lscala/Option;
      #213 5
      #214 1
      #1171 (Lscala/Option;)Lscala/Option;
  25: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1180 ()V
      #1183 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$6:()V
      #1180 ()V
      #214 1
  26: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1194 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$7:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
      #1196 (Lscala/runtime/BoxedUnit;)Lscala/util/Either;
      #213 5
      #214 1
      #1196 (Lscala/runtime/BoxedUnit;)Lscala/util/Either;
  27: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1222 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$9:(Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
      #1224 (Lscala/runtime/BoxedUnit;)Ljava/io/File;
      #213 5
      #214 1
      #1224 (Lscala/runtime/BoxedUnit;)Ljava/io/File;
  28: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1267 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$11:(Lcoursier/core/Authentication;)Ljava/lang/String;
      #436 (Lcoursier/core/Authentication;)Ljava/lang/String;
      #213 5
      #214 1
      #436 (Lcoursier/core/Authentication;)Ljava/lang/String;
  29: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #242 ()Ljava/lang/Object;
      #1281 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$12:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
      #1283 ()Lscala/util/Right;
      #213 5
      #214 1
      #1283 ()Lscala/util/Right;
  30: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1289 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$13:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
      #1291 (Lscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #1291 (Lscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
  31: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #242 ()Ljava/lang/Object;
      #1311 REF_invokeStatic coursier/cache/FileCache.$anonfun$file$3:(Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
      #1313 ()Lcoursier/util/EitherT;
      #213 5
      #214 1
      #1313 ()Lcoursier/util/EitherT;
  32: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1425 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$3:(Ljava/io/File;)Ljava/lang/String;
      #1426 (Ljava/io/File;)Ljava/lang/String;
      #213 5
      #214 1
      #1426 (Ljava/io/File;)Ljava/lang/String;
  33: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1454 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$4:(Ljava/io/File;)Ljava/lang/String;
      #1426 (Ljava/io/File;)Ljava/lang/String;
      #213 5
      #214 1
      #1426 (Ljava/io/File;)Ljava/lang/String;
  34: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1458 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$5:(Ljava/lang/String;)Ljava/lang/String;
      #1459 (Ljava/lang/String;)Ljava/lang/String;
      #213 5
      #214 1
      #1459 (Ljava/lang/String;)Ljava/lang/String;
  35: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #242 ()Ljava/lang/Object;
      #1498 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$3:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #1313 ()Lcoursier/util/EitherT;
      #213 5
      #214 1
      #1313 ()Lcoursier/util/EitherT;
  36: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #607 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #1504 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #1506 (Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #1506 (Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
  37: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1516 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchs$2:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #530 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #213 5
      #214 1
      #530 (Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
  38: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #206 (Ljava/lang/Object;)Ljava/lang/Object;
      #1529 REF_invokeStatic coursier/cache/FileCache.$anonfun$actualChecksums$1:(Lscala/Option;)Lscala/collection/immutable/Seq;
      #1530 (Lscala/Option;)Lscala/collection/immutable/Seq;
      #213 5
      #214 1
      #1530 (Lscala/Option;)Lscala/collection/immutable/Seq;
  39: #1585 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1529 REF_invokeStatic coursier/cache/FileCache.$anonfun$actualChecksums$1:(Lscala/Option;)Lscala/collection/immutable/Seq;
      #247 REF_invokeStatic coursier/cache/FileCache.$anonfun$allCredentials$1:(Lcoursier/cache/FileCache;)Lscala/collection/immutable/Seq;
      #211 REF_invokeStatic coursier/cache/FileCache.$anonfun$allCredentials0$1:(Lcoursier/credentials/Credentials;)Lscala/collection/immutable/Seq;
      #706 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #1504 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/util/EitherT;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #1498 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetch$3:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #683 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$1:(Lcoursier/cache/ArtifactError;)Ljava/lang/String;
      #693 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$2:(Lcoursier/cache/FileCache;ZLcoursier/util/Artifact;Ljava/io/File;)Lcoursier/util/EitherT;
      #1425 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$3:(Ljava/io/File;)Ljava/lang/String;
      #1454 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$4:(Ljava/io/File;)Ljava/lang/String;
      #1458 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchPerPolicy$5:(Ljava/lang/String;)Ljava/lang/String;
      #716 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchs$1:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;)Lscala/Function1;
      #1516 REF_invokeStatic coursier/cache/FileCache.$anonfun$fetchs$2:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;Lcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #590 REF_invokeStatic coursier/cache/FileCache.$anonfun$file$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;)Lcoursier/util/EitherT;
      #612 REF_invokeStatic coursier/cache/FileCache.$anonfun$file$2:(Lcoursier/cache/FileCache;Lcoursier/util/EitherT;Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
      #1311 REF_invokeStatic coursier/cache/FileCache.$anonfun$file$3:(Lcoursier/util/EitherT;)Lcoursier/util/EitherT;
      #509 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$1:(Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lcoursier/util/Artifact;
      #1027 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$2$adapted:(Lcoursier/util/Artifact;Lcoursier/credentials/DirectCredentials;)Ljava/lang/Object;
      #1034 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$3:(Lcoursier/credentials/DirectCredentials;)Lcoursier/core/Authentication;
      #521 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$4:(Lcoursier/util/Artifact;)Lscala/util/Right;
      #528 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy$5:(Lcoursier/cache/FileCache;Lcoursier/cache/CachePolicy;ILcoursier/util/Artifact;)Lcoursier/util/EitherT;
      #546 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$1:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/collection/immutable/Seq;)Lscala/util/Either;
      #562 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$10:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;ILcoursier/cache/CachePolicy;Lcoursier/cache/ArtifactError;)Lcoursier/util/EitherT;
      #1267 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$11:(Lcoursier/core/Authentication;)Ljava/lang/String;
      #1281 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$12:(Lcoursier/cache/FileCache;ZLjava/io/File;Ljava/io/File;Lcoursier/util/Artifact;Lcoursier/cache/ArtifactError$WrongChecksum;)Lscala/util/Right;
      #1289 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$13:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lcoursier/cache/CachePolicy;ILscala/runtime/BoxedUnit;)Lcoursier/util/EitherT;
      #1149 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$2:(Lcoursier/cache/internal/DownloadResult;)Lscala/Tuple2;
      #1169 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$3:(Lcoursier/util/Artifact;Lscala/collection/immutable/Map;Lscala/Option;)Lscala/Option;
      #1106 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$4:(Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/lang/String;
      #1094 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$5$adapted:(Ljava/lang/Object;)Ljava/lang/Object;
      #1183 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$6:()V
      #1194 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$7:(Lscala/Option;Lcoursier/cache/internal/DownloadResult;Lscala/collection/immutable/Seq;Lscala/runtime/BoxedUnit;)Lscala/util/Either;
      #554 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$8:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Lscala/Tuple2;)Lcoursier/util/EitherT;
      #1222 REF_invokeStatic coursier/cache/FileCache.$anonfun$filePerPolicy0$9:(Ljava/io/File;Lscala/runtime/BoxedUnit;)Ljava/io/File;
      #435 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$1:(Lcoursier/core/Authentication;)Ljava/lang/String;
      #469 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$2:(Lcoursier/cache/FileCache;Lcoursier/util/Artifact;Ljava/lang/String;)Ljava/io/File;
      #901 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$3:(Lcoursier/core/Authentication;)Ljava/lang/String;
      #481 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$4:(Lcoursier/cache/FileCache;Lscala/collection/immutable/Seq;Lscala/Option;Ljava/lang/String;Ljava/io/File;)Lscala/util/Either;
      #917 REF_invokeStatic coursier/cache/FileCache.$anonfun$validateChecksum$5$adapted:(Ljava/io/File;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x27F (unknown attribute)
   01 01 00 7F 03 6A 03 6B 01 00 F5 00 F6 01 00 D1
   00 D2 01 02 C0 02 C1 01 05 D6 05 D7 01 05 D0 05
   D1 01 02 A9 02 AA 01 02 B3 02 B4 01 05 71 05 72
   01 05 77 05 72 01 05 78 02 8A 01 02 CA 02 CB 01
   05 E8 05 E9 01 02 4C 02 4D 01 02 62 02 63 01 05
   19 05 1A 01 01 FB 01 FC 01 03 ED 03 EE 01 04 01
   04 02 01 03 F8 03 F9 01 02 07 02 08 01 02 0E 02
   0F 01 02 20 02 21 01 02 30 02 31 01 04 D2 01 B2
   01 04 D4 04 D5 01 04 ED 04 EE 01 04 1A 04 1B 01
   04 4E 04 4F 01 04 32 04 33 01 04 2E 04 2F 01 04
   45 00 CF 01 04 6E 04 6F 01 04 70 04 71 01 02 28
   02 29 01 04 B9 04 BA 01 01 B1 01 B2 01 01 D3 01
   D4 01 03 81 01 B2 01 01 DF 01 E0 01 03 89 03 8A
   01 03 93 03 94 01 01 09 06 05 01 01 09 06 03 01
   01 09 02 E6 01 00 82 00 7C 01 00 64 00 96 01 01
   1D 01 1A 01 01 23 01 0D 01 00 EF 00 F0 01 00 3C
   00 96 01 00 C9 00 96 01 00 5D 00 B4 01 00 43 00
   96 01 03 1F 03 20 01 04 64 04 65 01 00 45 00 96
   01 00 63 00 96 01 00 5E 00 96 01 00 47 00 96 01
   01 7B 01 7C 01 00 3F 03 5C 01 00 3F 02 D4 01 02
   D3 02 D4 01 03 22 03 20 01 02 BE 00 E0 01 02 72
   02 73 01 02 C8 00 96 01 02 3D 02 13 01 02 3D 02
   41 01 01 F0 01 F1 01 02 70 00 B4 01 02 1D 01 F1
   01 02 71 00 B4 01 00 52 00 AA 01 00 53 00 AA 01
   03 2E 00 B4 01 00 5A 00 A6 01 00 50 00 AA 01 01
   5D 01 5E 01 01 6A 00 A6 01 00 41 00 93 01 00 49
   00 A0 01 01 71 00 A6 01 01 71 01 72 01 00 54 00
   A6 01 01 11 01 12 01 05 2D 05 2E 01 00 4B 00 A3
   01 03 41 00 B4 01 03 42 03 43 01 03 49 03 16 01
   00 8E 00 86 01 00 85 00 86 01 03 40 01 2C 01 05
   32 05 33 01 00 5C 00 B4 01 00 56 00 B4 01 00 58
   00 A6 01 00 60 00 7C 01 03 03 01 2C 01 00 4D 00
   A6 01 03 38 03 39 01 01 A6 01 A7 01 02 FE 01 52
   01 02 E9 01 1A 01 02 EB 01 1A 01 02 FF 01 1A 01
   01 19 01 1A 01 02 F7 02 F5 01 02 F8 02 F5 01 01
   49 01 4A 01 01 4D 01 3D 01 02 F4 02 F5 01 01 04
   01 0D 01 01 04 01 05 01 02 ED 02 EE 01 01 51 01
   52 01 01 51 01 3D 01 02 F0 02 F1 01 02 FD 01 52
   01 02 FA 01 52 01 01 41 01 42 01 01 45 01 3D 01
   03 01 00 80 01 01 35 01 3D 01 01 35 01 36 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
