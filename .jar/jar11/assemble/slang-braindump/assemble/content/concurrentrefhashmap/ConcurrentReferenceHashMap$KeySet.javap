Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet.class
  Last modified May 29, 2022; size 1220 bytes
  SHA-256 checksum 7f455da6fa12ad69a155f0afca0ebe567afacbcc83f6b1a5ceacc95f910fc847
  Compiled from "ConcurrentReferenceHashMap.java"
final class concurrentrefhashmap.ConcurrentReferenceHashMap$KeySet extends java.util.AbstractSet<K>
  minor version: 0
  major version: 52
  flags: (0x0030) ACC_FINAL, ACC_SUPER
  this_class: #10                         // concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet
  super_class: #11                        // java/util/AbstractSet
  interfaces: 0, fields: 1, methods: 7, attributes: 3
Constant pool:
   #1 = Fieldref           #10.#35        // concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet.this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
   #2 = Methodref          #11.#36        // java/util/AbstractSet."<init>":()V
   #3 = Class              #38            // concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator
   #4 = Methodref          #3.#41         // concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
   #5 = Methodref          #37.#42        // concurrentrefhashmap/ConcurrentReferenceHashMap.size:()I
   #6 = Methodref          #37.#43        // concurrentrefhashmap/ConcurrentReferenceHashMap.isEmpty:()Z
   #7 = Methodref          #37.#44        // concurrentrefhashmap/ConcurrentReferenceHashMap.containsKey:(Ljava/lang/Object;)Z
   #8 = Methodref          #37.#45        // concurrentrefhashmap/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #9 = Methodref          #37.#46        // concurrentrefhashmap/ConcurrentReferenceHashMap.clear:()V
  #10 = Class              #47            // concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet
  #11 = Class              #49            // java/util/AbstractSet
  #12 = Utf8               this$0
  #13 = Utf8               Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #14 = Utf8               <init>
  #15 = Utf8               (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #16 = Utf8               Code
  #17 = Utf8               LineNumberTable
  #18 = Utf8               iterator
  #19 = Utf8               ()Ljava/util/Iterator;
  #20 = Utf8               Signature
  #21 = Utf8               ()Ljava/util/Iterator<TK;>;
  #22 = Utf8               size
  #23 = Utf8               ()I
  #24 = Utf8               isEmpty
  #25 = Utf8               ()Z
  #26 = Utf8               contains
  #27 = Utf8               (Ljava/lang/Object;)Z
  #28 = Utf8               remove
  #29 = Utf8               StackMapTable
  #30 = Utf8               clear
  #31 = Utf8               ()V
  #32 = Utf8               Ljava/util/AbstractSet<TK;>;
  #33 = Utf8               SourceFile
  #34 = Utf8               ConcurrentReferenceHashMap.java
  #35 = NameAndType        #12:#13        // this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
  #36 = NameAndType        #14:#31        // "<init>":()V
  #37 = Class              #50            // concurrentrefhashmap/ConcurrentReferenceHashMap
  #38 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator
  #39 = Utf8               KeyIterator
  #40 = Utf8               InnerClasses
  #41 = NameAndType        #14:#15        // "<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
  #42 = NameAndType        #22:#23        // size:()I
  #43 = NameAndType        #24:#25        // isEmpty:()Z
  #44 = NameAndType        #51:#27        // containsKey:(Ljava/lang/Object;)Z
  #45 = NameAndType        #28:#52        // remove:(Ljava/lang/Object;)Ljava/lang/Object;
  #46 = NameAndType        #30:#31        // clear:()V
  #47 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet
  #48 = Utf8               KeySet
  #49 = Utf8               java/util/AbstractSet
  #50 = Utf8               concurrentrefhashmap/ConcurrentReferenceHashMap
  #51 = Utf8               containsKey
  #52 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
{
  final concurrentrefhashmap.ConcurrentReferenceHashMap this$0;
    descriptor: Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
    flags: (0x1010) ACC_FINAL, ACC_SYNTHETIC

  concurrentrefhashmap.ConcurrentReferenceHashMap$KeySet(concurrentrefhashmap.ConcurrentReferenceHashMap);
    descriptor: (Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
    flags: (0x0000)
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         5: aload_0
         6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
         9: return
      LineNumberTable:
        line 1760: 0

  public java.util.Iterator<K> iterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #3                  // class concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator
         3: dup
         4: aload_0
         5: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         8: invokespecial #4                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator."<init>":(Lconcurrentrefhashmap/ConcurrentReferenceHashMap;)V
        11: areturn
      LineNumberTable:
        line 1763: 0
    Signature: #21                          // ()Ljava/util/Iterator<TK;>;

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: invokevirtual #5                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap.size:()I
         7: ireturn
      LineNumberTable:
        line 1768: 0

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: invokevirtual #6                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap.isEmpty:()Z
         7: ireturn
      LineNumberTable:
        line 1773: 0

  public boolean contains(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: aload_1
         5: invokevirtual #7                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap.containsKey:(Ljava/lang/Object;)Z
         8: ireturn
      LineNumberTable:
        line 1778: 0

  public boolean remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: aload_1
         5: invokevirtual #8                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
         8: ifnull        15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      LineNumberTable:
        line 1783: 0
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #1                  // Field this$0:Lconcurrentrefhashmap/ConcurrentReferenceHashMap;
         4: invokevirtual #9                  // Method concurrentrefhashmap/ConcurrentReferenceHashMap.clear:()V
         7: return
      LineNumberTable:
        line 1788: 0
        line 1789: 7
}
Signature: #32                          // Ljava/util/AbstractSet<TK;>;
SourceFile: "ConcurrentReferenceHashMap.java"
InnerClasses:
  final #39= #3 of #37;                   // KeyIterator=class concurrentrefhashmap/ConcurrentReferenceHashMap$KeyIterator of class concurrentrefhashmap/ConcurrentReferenceHashMap
  final #48= #10 of #37;                  // KeySet=class concurrentrefhashmap/ConcurrentReferenceHashMap$KeySet of class concurrentrefhashmap/ConcurrentReferenceHashMap
