Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/immutable/HashCollisionMapNode.class
  Last modified May 29, 2022; size 25615 bytes
  SHA-256 checksum f18be38bffbd14392239e7978ab09495f95dcb7cb6d0bcf0ddd2e156daa9cf3a
  Compiled from "HashMap.scala"
public final class scala.collection.immutable.HashCollisionMapNode<K extends java.lang.Object, V extends java.lang.Object> extends scala.collection.immutable.MapNode<K, V>
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // scala/collection/immutable/HashCollisionMapNode
  super_class: #5                         // scala/collection/immutable/MapNode
  interfaces: 0, fields: 3, methods: 47, attributes: 7
Constant pool:
    #1 = Utf8               scala/collection/immutable/HashCollisionMapNode
    #2 = Class              #1            // scala/collection/immutable/HashCollisionMapNode
    #3 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/immutable/MapNode<TK;TV;>;
    #4 = Utf8               scala/collection/immutable/MapNode
    #5 = Class              #4            // scala/collection/immutable/MapNode
    #6 = Utf8               HashMap.scala
    #7 = Utf8               Lscala/reflect/ScalaSignature;
    #8 = Utf8               bytes
    #9 = Utf8               \u0006\u0005\tec\u0001\u0002\u0015*\rAB\u0001\"\u0012\u0001\u0003\u0006\u0004%\tA\u0012\u0005\t\u0015\u0002\u0011\t\u0011)A\u0005\u000f\"A1\n\u0001BC\u0002\u0013\u0005a\t\u0003\u0005M\u0001\t\u0005\t\u0015!\u0003H\u0011!i\u0005A!a\u0001\n\u0003q\u0005\u0002C0\u0001\u0005\u0003\u0007I\u0011\u00011\t\u0011\u0019\u0004!\u0011!Q!\n=CQa\u001a\u0001\u0005\u0002!Da!\u001c\u0001\u0005\u0002%r\u0007\"B9\u0001\t\u00031\u0005\"\u0002:\u0001\t\u0003\u0019\b\"B=\u0001\t\u0003Q\bbBA\u0003\u0001\u0011\u0005\u0013q\u0001\u0005\b\u0003\'\u0001A\u0011AA\u000b\u0011\u001d\t\u0019\u0004\u0001C!\u0003kAq!!\u0012\u0001\t\u0003\t9\u0005C\u0004\u0002Z\u0001!\t!a\u0017\t\u000f\u0005M\u0004\u0001\"\u0001\u0002v!9\u0011q\u0011\u0001\u0005\u0002\u0005%\u0005BBAF\u0001\u0011\u0005a\tC\u0004\u0002\u000e\u0002!\t!a$\t\u000f\u0005U\u0005\u0001\"\u0001\u0002\n\"1\u0011q\u0013\u0001\u0005\u0002\u0019Cq!!\'\u0001\t\u0003\tY\nC\u0004\u0002 \u0002!\t!!)\t\u000f\u0005\u0015\u0006\u0001\"\u0001\u0002(\"9\u00111\u0016\u0001\u0005B\u00055\u0006bBAY\u0001\u0011\u0005\u00111\u0017\u0005\b\u0003\u000b\u0004A\u0011AAd\u0011\u001d\t9\u000e\u0001C!\u00033Dq!a9\u0001\t\u0003\n)\u000fC\u0004\u0002v\u0002!\t%a>\t\u000f\u0005u\b\u0001\"\u0011\u0002\u0000\"9!q\u0002\u0001\u0005B\tE\u0001b\u0002B\u001a\u0001\u0011\u0005#Q\u0007\u0005\b\u0005\u0003\u0002A\u0011\tB\"\u0011\u001d\u0011y\u0005\u0001C!\u0005#BqAa\u0015\u0001\t\u0003\u0012)\u0006\u0003\u0004\u0003X\u0001!\tE\u0012\u0002\u0015\u0011\u0006\u001c\bnQ8mY&\u001c\u0018n\u001c8NCBtu\u000eZ3\u000b\u0005)Z\u0013!C5n[V$\u0018M\u00197f\u0015\taS&\u0001\u0006d_2dWm\u0019;j_:T\u0011AL\u0001\u0006g\u000e\fG.Y\u0002\u0001+\r\t\u0004hQ\n\u0003\u0001I\u0002Ba\r\u001b7\u00056\t\u0011&\u0003\u00026S\t9Q*\u00199O_\u0012,\u0007CA\u001c9\u0019\u0001!Q!\u000f\u0001C\u0002i\u0012\u0011aS\t\u0003w}\u0002\"\u0001P\u001f\u000e\u00035J!AP\u0017\u0003\u000f9{G\u000f[5oOB\u0011A\bQ\u0005\u0003\u00036\u00121!\u00118z!\t94\t\u0002\u0004E\u0001\u0011\u0015\rA\u000f\u0002\u0002-\u0006aqN]5hS:\fG\u000eS1tQV\tq\t\u0005\u0002=\u0011&\u0011\u0011*\f\u0002\u0004\u0013:$\u0018!D8sS\u001eLg.\u00197ICND\u0007%\u0001\u0003iCND\u0017!\u00025bg\"\u0004\u0013aB2p]R,g\u000e^\u000b\u0002\u001fB\u00191\u0007\u0015*\n\u0005EK#A\u0002,fGR|\'\u000f\u0005\u0003=\'Z*\u0016B\u0001+.\u0005\u0019!V\u000f\u001d7fe)\u0012!IV\u0016\u0002/B\u0011\u0001,X\u0007\u00023*\u0011!lW\u0001\nk:\u001c\u0007.Z2lK\u0012T!\u0001X\u0017\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002_3\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u0017\r|g\u000e^3oi~#S-\u001d\u000b\u0003C\u0012\u0004\"\u0001\u00102\n\u0005\rl#\u0001B+oSRDq!\u001a\u0004\u0002\u0002\u0003\u0007q*A\u0002yIE\n\u0001bY8oi\u0016tG\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\t%T7\u000e\u001c\t\u0005g\u00011$\tC\u0003F\u0011\u0001\u0007q\tC\u0003L\u0011\u0001\u0007q\tC\u0003N\u0011\u0001\u0007q*A\u0004j]\u0012,\u0007p\u00144\u0015\u0005\u001d{\u0007\"\u00029\n\u0001\u0004y\u0014aA6fs\u0006!1/\u001b>f\u0003\u0015\t\u0007\u000f\u001d7z)\u0015\u0011E/\u001e<x\u0011\u0015\u00018\u00021\u00017\u0011\u0015)5\u00021\u0001H\u0011\u0015Y5\u00021\u0001H\u0011\u0015A8\u00021\u0001H\u0003\u0015\u0019\b.\u001b4u\u0003\r9W\r\u001e\u000b\bwz|\u0018\u0011AA\u0002!\raDPQ\u0005\u0003{6\u0012aa\u00149uS>t\u0007\"\u00029\r\u0001\u00041\u0004\"B#\r\u0001\u00049\u0005\"B&\r\u0001\u00049\u0005\"\u0002=\r\u0001\u00049\u0015\u0001C4fiR+\b\u000f\\3\u0015\u0015\u0005%\u00111BA\u0007\u0003\u001f\t\t\u0002\u0005\u0003=\'Z\u0012\u0005\"\u00029\u000e\u0001\u00041\u0004\"B#\u000e\u0001\u00049\u0005\"B&\u000e\u0001\u00049\u0005\"\u0002=\u000e\u0001\u00049\u0015!C4fi>\u0013X\t\\:f+\u0011\t9\"a\u0007\u0015\u0019\u0005e\u0011\u0011EA\u0012\u0003K\t9#!\u000b\u0011\u0007]\nY\u0002B\u0004\u0002\u001e9\u0011\r!a\b\u0003\u0005Y\u000b\u0014C\u0001\"@\u0011\u0015\u0001h\u00021\u00017\u0011\u0015)e\u00021\u0001H\u0011\u0015Ye\u00021\u0001H\u0011\u0015Ah\u00021\u0001H\u0011!\tYC\u0004CA\u0002\u00055\u0012!\u00014\u0011\u000bq\ny#!\u0007\n\u0007\u0005ERF\u0001\u0005=Eft\u0017-\\3?\u0003-\u0019wN\u001c;bS:\u001c8*Z=\u0015\u0015\u0005]\u0012QHA \u0003\u0003\n\u0019\u0005E\u0002=\u0003sI1!a\u000f.\u0005\u001d\u0011un\u001c7fC:DQ\u0001]\bA\u0002YBQ!R\bA\u0002\u001dCQaS\bA\u0002\u001dCQ\u0001_\bA\u0002\u001d\u000b\u0001bY8oi\u0006Lgn]\u000b\u0005\u0003\u0013\n\u0019\u0006\u0006\u0006\u00028\u0005-\u0013QJA+\u0003/BQ\u0001\u001d\tA\u0002YBq!a\u0014\u0011\u0001\u0004\t\t&A\u0003wC2,X\rE\u00028\u0003\'\"q!!\b\u0011\u0005\u0004\ty\u0002C\u0003L!\u0001\u0007q\tC\u0003y!\u0001\u0007q)A\u0004va\u0012\fG/\u001a3\u0016\t\u0005u\u00131\r\u000b\u000f\u0003?\n)\'a\u001a\u0002j\u0005-\u0014QNA8!\u0015\u0019DGNA1!\r9\u00141\r\u0003\b\u0003;\t\"\u0019AA\u0010\u0011\u0015\u0001\u0018\u00031\u00017\u0011\u001d\ty%\u0005a\u0001\u0003CBQ!R\tA\u0002\u001dCQaS\tA\u0002\u001dCQ\u0001_\tA\u0002\u001dCq!!\u001d\u0012\u0001\u0004\t9$\u0001\u0007sKBd\u0017mY3WC2,X-A\u0004sK6|g/\u001a3\u0016\t\u0005]\u0014Q\u0010\u000b\u000b\u0003s\ny(!!\u0002\u0004\u0006\u0015\u0005#B\u001a5m\u0005m\u0004cA\u001c\u0002~\u00119\u0011Q\u0004\nC\u0002\u0005}\u0001\"\u00029\u0013\u0001\u00041\u0004\"B#\u0013\u0001\u00049\u0005\"B&\u0013\u0001\u00049\u0005\"\u0002=\u0013\u0001\u00049\u0015\u0001\u00035bg:{G-Z:\u0016\u0005\u0005]\u0012!\u00038pI\u0016\f%/\u001b;z\u0003\u001d9W\r\u001e(pI\u0016$2AMAI\u0011\u0019\t\u0019*\u0006a\u0001\u000f\u0006)\u0011N\u001c3fq\u0006Q\u0001.Y:QCfdw.\u00193\u0002\u0019A\f\u0017\u0010\\8bI\u0006\u0013\u0018\u000e^=\u0002\r\u001d,GoS3z)\r1\u0014Q\u0014\u0005\u0007\u0003\'C\u0002\u0019A$\u0002\u0011\u001d,GOV1mk\u0016$2AQAR\u0011\u0019\t\u0019*\u0007a\u0001\u000f\u0006Qq-\u001a;QCfdw.\u00193\u0015\t\u0005%\u0011\u0011\u0016\u0005\u0007\u0003\'S\u0002\u0019A$\u0002\u000f\u001d,G\u000fS1tQR\u0019q)a,\t\r\u0005M5\u00041\u0001H\u0003\u001d1wN]3bG\",B!!.\u0002BR\u0019\u0011-a.\t\u000f\u0005-B\u00041\u0001\u0002:B9A(a/\u0002\n\u0005}\u0016bAA_[\tIa)\u001e8di&|g.\r\t\u0004o\u0005\u0005GABAb9\t\u0007!HA\u0001V\u000311wN]3bG\",e\u000e\u001e:z+\u0011\tI-!6\u0015\u0007\u0005\fY\rC\u0004\u0002,u\u0001\r!!4\u0011\u000fq\nyM\u000e\"\u0002T&\u0019\u0011\u0011[\u0017\u0003\u0013\u0019+hn\u0019;j_:\u0014\u0004cA\u001c\u0002V\u00121\u00111Y\u000fC\u0002i\nqBZ8sK\u0006\u001c\u0007nV5uQ\"\u000b7\u000f\u001b\u000b\u0004C\u0006m\u0007bBA\u0016=\u0001\u0007\u0011Q\u001c\t\by\u0005}gGQ$b\u0013\r\t\t/\f\u0002\n\rVt7\r^5p]N\n\u0011\u0002\u001e:b]N4wN]7\u0016\t\u0005\u001d\u0018Q\u001e\u000b\u0005\u0003S\f\t\u0010E\u00034\u0001Y\nY\u000fE\u00028\u0003[$a!a< \u0005\u0004Q$!A,\t\u000f\u0005-r\u00041\u0001\u0002tB9A(a47\u0005\u0006-\u0018AB3rk\u0006d7\u000f\u0006\u0003\u00028\u0005e\bBBA~A\u0001\u0007q(\u0001\u0003uQ\u0006$\u0018AB2p]\u000e\fG/\u0006\u0003\u0003\u0002\t\u001dAC\u0002B\u0002\u0005\u0013\u0011i\u0001E\u00034\u0001Y\u0012)\u0001E\u00028\u0005\u000f!q!!\b\"\u0005\u0004\ty\u0002C\u0004\u0002|\u0006\u0002\rAa\u0003\u0011\u000bM\"dG!\u0002\t\u000ba\f\u0003\u0019A$\u0002\u00135,\'oZ3J]R|W\u0003\u0002B\n\u0005C!\u0002B!\u0006\u0003$\t\u001d\"\u0011\u0007\u000b\u0004C\n]\u0001b\u0002B\rE\u0001\u0007!1D\u0001\u0007[\u0016\u0014x-\u001a4\u0011\u0013q\ny-!\u0003\u0003\u001e\tu\u0001#\u0002\u001fTm\t}\u0001cA\u001c\u0003\"\u00119\u0011Q\u0004\u0012C\u0002\u0005}\u0001bBA~E\u0001\u0007!Q\u0005\t\u0006gQ2$q\u0004\u0005\b\u0005S\u0011\u0003\u0019\u0001B\u0016\u0003\u001d\u0011W/\u001b7eKJ\u0004ba\rB\u0017m\t}\u0011b\u0001B\u0018S\tq\u0001*Y:i\u001b\u0006\u0004()^5mI\u0016\u0014\b\"\u0002=#\u0001\u00049\u0015a\u00022vS2$Gk\\\u000b\u0005\u0005o\u0011y\u0004F\u0002b\u0005sAqA!\u000b$\u0001\u0004\u0011Y\u0004\u0005\u00044\u0005[1$Q\b\t\u0004o\t}BaBA\u000fG\t\u0007\u0011qD\u0001\u000bM&dG/\u001a:J[BdG#\u0002\u001a\u0003F\t-\u0003b\u0002B$I\u0001\u0007!\u0011J\u0001\u0005aJ,G\rE\u0004=\u0003w\u000bI!a\u000e\t\u000f\t5C\u00051\u0001\u00028\u00059a\r\\5qa\u0016$\u0017\u0001B2paf$\u0012![\u0001\tQ\u0006\u001c\bnQ8eKR\tq)\u0001\rdC\u000eDW\r\u001a&bm\u0006\\U-_*fi\"\u000b7\u000f[\"pI\u0016\u0004
   #10 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #11 = Class              #10           // java/lang/invoke/MethodHandles$Lookup
   #12 = Utf8               java/lang/invoke/MethodHandles
   #13 = Class              #12           // java/lang/invoke/MethodHandles
   #14 = Utf8               Lookup
   #15 = Utf8               originalHash
   #16 = Utf8               I
   #17 = Utf8               hash
   #18 = Utf8               content
   #19 = Utf8               Lscala/collection/immutable/Vector;
   #20 = Utf8               Lscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;
   #21 = Utf8               ()I
   #22 = NameAndType        #15:#16       // originalHash:I
   #23 = Fieldref           #2.#22        // scala/collection/immutable/HashCollisionMapNode.originalHash:I
   #24 = Utf8               this
   #25 = Utf8               Lscala/collection/immutable/HashCollisionMapNode;
   #26 = NameAndType        #17:#16       // hash:I
   #27 = Fieldref           #2.#26        // scala/collection/immutable/HashCollisionMapNode.hash:I
   #28 = Utf8               ()Lscala/collection/immutable/Vector;
   #29 = Utf8               ()Lscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;
   #30 = NameAndType        #18:#19       // content:Lscala/collection/immutable/Vector;
   #31 = Fieldref           #2.#30        // scala/collection/immutable/HashCollisionMapNode.content:Lscala/collection/immutable/Vector;
   #32 = Utf8               content_$eq
   #33 = Utf8               (Lscala/collection/immutable/Vector;)V
   #34 = Utf8               (Lscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;)V
   #35 = Utf8               x$1
   #36 = Utf8               indexOf
   #37 = Utf8               (Ljava/lang/Object;)I
   #38 = Utf8               key
   #39 = NameAndType        #18:#28       // content:()Lscala/collection/immutable/Vector;
   #40 = Methodref          #2.#39        // scala/collection/immutable/HashCollisionMapNode.content:()Lscala/collection/immutable/Vector;
   #41 = Utf8               scala/collection/immutable/Vector
   #42 = Class              #41           // scala/collection/immutable/Vector
   #43 = Utf8               iterator
   #44 = Utf8               ()Lscala/collection/Iterator;
   #45 = NameAndType        #43:#44       // iterator:()Lscala/collection/Iterator;
   #46 = Methodref          #42.#45       // scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
   #47 = Utf8               scala/collection/Iterator
   #48 = Class              #47           // scala/collection/Iterator
   #49 = Utf8               hasNext
   #50 = Utf8               ()Z
   #51 = NameAndType        #49:#50       // hasNext:()Z
   #52 = InterfaceMethodref #48.#51       // scala/collection/Iterator.hasNext:()Z
   #53 = Utf8               next
   #54 = Utf8               ()Ljava/lang/Object;
   #55 = NameAndType        #53:#54       // next:()Ljava/lang/Object;
   #56 = InterfaceMethodref #48.#55       // scala/collection/Iterator.next:()Ljava/lang/Object;
   #57 = Utf8               scala/Tuple2
   #58 = Class              #57           // scala/Tuple2
   #59 = Utf8               _1
   #60 = NameAndType        #59:#54       // _1:()Ljava/lang/Object;
   #61 = Methodref          #58.#60       // scala/Tuple2._1:()Ljava/lang/Object;
   #62 = Utf8               scala/runtime/BoxesRunTime
   #63 = Class              #62           // scala/runtime/BoxesRunTime
   #64 = Utf8               equals
   #65 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #66 = NameAndType        #64:#65       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #67 = Methodref          #63.#66       // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #68 = Utf8               iter
   #69 = Utf8               Lscala/collection/Iterator;
   #70 = Utf8               i
   #71 = Utf8               Ljava/lang/Object;
   #72 = Utf8               size
   #73 = Utf8               length
   #74 = NameAndType        #73:#21       // length:()I
   #75 = Methodref          #42.#74       // scala/collection/immutable/Vector.length:()I
   #76 = Utf8               apply
   #77 = Utf8               (Ljava/lang/Object;III)Ljava/lang/Object;
   #78 = Utf8               (TK;III)TV;
   #79 = Utf8               shift
   #80 = Utf8               get
   #81 = Utf8               (Ljava/lang/Object;III)Lscala/Option;
   #82 = NameAndType        #80:#81       // get:(Ljava/lang/Object;III)Lscala/Option;
   #83 = Methodref          #2.#82        // scala/collection/immutable/HashCollisionMapNode.get:(Ljava/lang/Object;III)Lscala/Option;
   #84 = Utf8               scala/Option
   #85 = Class              #84           // scala/Option
   #86 = Utf8               isEmpty
   #87 = NameAndType        #86:#50       // isEmpty:()Z
   #88 = Methodref          #85.#87       // scala/Option.isEmpty:()Z
   #89 = Utf8               java/util/NoSuchElementException
   #90 = Class              #89           // java/util/NoSuchElementException
   #91 = Utf8               <init>
   #92 = Utf8               ()V
   #93 = NameAndType        #91:#92       // "<init>":()V
   #94 = Methodref          #90.#93       // java/util/NoSuchElementException."<init>":()V
   #95 = NameAndType        #80:#54       // get:()Ljava/lang/Object;
   #96 = Methodref          #85.#95       // scala/Option.get:()Ljava/lang/Object;
   #97 = Utf8               getOrElse_this
   #98 = Utf8               Lscala/Option;
   #99 = Utf8               (TK;III)Lscala/Option<TV;>;
  #100 = NameAndType        #17:#21       // hash:()I
  #101 = Methodref          #2.#100       // scala/collection/immutable/HashCollisionMapNode.hash:()I
  #102 = NameAndType        #36:#37       // indexOf:(Ljava/lang/Object;)I
  #103 = Methodref          #2.#102       // scala/collection/immutable/HashCollisionMapNode.indexOf:(Ljava/lang/Object;)I
  #104 = Utf8               scala/Some
  #105 = Class              #104          // scala/Some
  #106 = Utf8               (I)Ljava/lang/Object;
  #107 = NameAndType        #76:#106      // apply:(I)Ljava/lang/Object;
  #108 = Methodref          #42.#107      // scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
  #109 = Utf8               _2
  #110 = NameAndType        #109:#54      // _2:()Ljava/lang/Object;
  #111 = Methodref          #58.#110      // scala/Tuple2._2:()Ljava/lang/Object;
  #112 = Utf8               (Ljava/lang/Object;)V
  #113 = NameAndType        #91:#112      // "<init>":(Ljava/lang/Object;)V
  #114 = Methodref          #105.#113     // scala/Some."<init>":(Ljava/lang/Object;)V
  #115 = Utf8               scala/None$
  #116 = Class              #115          // scala/None$
  #117 = Utf8               MODULE$
  #118 = Utf8               Lscala/None$;
  #119 = NameAndType        #117:#118     // MODULE$:Lscala/None$;
  #120 = Fieldref           #116.#119     // scala/None$.MODULE$:Lscala/None$;
  #121 = Utf8               index
  #122 = Utf8               getTuple
  #123 = Utf8               (Ljava/lang/Object;III)Lscala/Tuple2;
  #124 = Utf8               (TK;III)Lscala/Tuple2<TK;TV;>;
  #125 = Utf8               getOrElse
  #126 = Utf8               (Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
  #127 = Utf8               <V1:Ljava/lang/Object;>(TK;IIILscala/Function0<TV1;>;)TV1;
  #128 = Utf8               f
  #129 = Utf8               scala/Function0
  #130 = Class              #129          // scala/Function0
  #131 = NameAndType        #76:#54       // apply:()Ljava/lang/Object;
  #132 = InterfaceMethodref #130.#131     // scala/Function0.apply:()Ljava/lang/Object;
  #133 = Utf8               Lscala/Function0;
  #134 = Utf8               containsKey
  #135 = Utf8               (Ljava/lang/Object;III)Z
  #136 = Utf8               (TK;III)Z
  #137 = Utf8               contains
  #138 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;II)Z
  #139 = Utf8               <V1:Ljava/lang/Object;>(TK;TV1;II)Z
  #140 = Utf8               value
  #141 = Utf8               updated
  #142 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/MapNode;
  #143 = Utf8               <V1:Ljava/lang/Object;>(TK;TV1;IIIZ)Lscala/collection/immutable/MapNode<TK;TV1;>;
  #144 = Utf8               replaceValue
  #145 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #146 = NameAndType        #91:#145      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #147 = Methodref          #58.#146      // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #148 = Utf8               (ILjava/lang/Object;)Lscala/collection/immutable/Vector;
  #149 = NameAndType        #141:#148     // updated:(ILjava/lang/Object;)Lscala/collection/immutable/Vector;
  #150 = Methodref          #42.#149      // scala/collection/immutable/Vector.updated:(ILjava/lang/Object;)Lscala/collection/immutable/Vector;
  #151 = Utf8               (IILscala/collection/immutable/Vector;)V
  #152 = NameAndType        #91:#151      // "<init>":(IILscala/collection/immutable/Vector;)V
  #153 = Methodref          #2.#152       // scala/collection/immutable/HashCollisionMapNode."<init>":(IILscala/collection/immutable/Vector;)V
  #154 = Utf8               appended
  #155 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/Vector;
  #156 = NameAndType        #154:#155     // appended:(Ljava/lang/Object;)Lscala/collection/immutable/Vector;
  #157 = Methodref          #42.#156      // scala/collection/immutable/Vector.appended:(Ljava/lang/Object;)Lscala/collection/immutable/Vector;
  #158 = Utf8               Z
  #159 = Utf8               removed
  #160 = Utf8               (Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
  #161 = Utf8               <V1:Ljava/lang/Object;>(TK;III)Lscala/collection/immutable/MapNode<TK;TV1;>;
  #162 = NameAndType        #134:#135     // containsKey:(Ljava/lang/Object;III)Z
  #163 = Methodref          #2.#162       // scala/collection/immutable/HashCollisionMapNode.containsKey:(Ljava/lang/Object;III)Z
  #164 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #165 = MethodType         #164          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #166 = Utf8               $anonfun$removed$1$adapted
  #167 = Utf8               (Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #168 = NameAndType        #166:#167     // $anonfun$removed$1$adapted:(Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #169 = Methodref          #2.#168       // scala/collection/immutable/HashCollisionMapNode.$anonfun$removed$1$adapted:(Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #170 = MethodHandle       6:#169        // REF_invokeStatic scala/collection/immutable/HashCollisionMapNode.$anonfun$removed$1$adapted:(Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
  #171 = Utf8               (Lscala/Tuple2;)Ljava/lang/Object;
  #172 = MethodType         #171          //  (Lscala/Tuple2;)Ljava/lang/Object;
  #173 = Integer            5
  #174 = Integer            1
  #175 = Utf8               java/lang/invoke/LambdaMetafactory
  #176 = Class              #175          // java/lang/invoke/LambdaMetafactory
  #177 = Utf8               altMetafactory
  #178 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #179 = NameAndType        #177:#178     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #180 = Methodref          #176.#179     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #181 = MethodHandle       6:#180        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #182 = Utf8               (Ljava/lang/Object;)Lscala/Function1;
  #183 = NameAndType        #76:#182      // apply:(Ljava/lang/Object;)Lscala/Function1;
  #184 = InvokeDynamic      #0:#183       // #0:apply:(Ljava/lang/Object;)Lscala/Function1;
  #185 = Utf8               filterNot
  #186 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #187 = NameAndType        #185:#186     // filterNot:(Lscala/Function1;)Ljava/lang/Object;
  #188 = Methodref          #42.#187      // scala/collection/immutable/Vector.filterNot:(Lscala/Function1;)Ljava/lang/Object;
  #189 = Utf8               scala/collection/SeqOps
  #190 = Class              #189          // scala/collection/SeqOps
  #191 = InterfaceMethodref #190.#74      // scala/collection/SeqOps.length:()I
  #192 = Utf8               scala/MatchError
  #193 = Class              #192          // scala/MatchError
  #194 = Methodref          #193.#113     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #195 = Utf8               scala/collection/immutable/BitmapIndexedMapNode
  #196 = Class              #195          // scala/collection/immutable/BitmapIndexedMapNode
  #197 = Utf8               scala/collection/immutable/Node$
  #198 = Class              #197          // scala/collection/immutable/Node$
  #199 = Utf8               Lscala/collection/immutable/Node$;
  #200 = NameAndType        #117:#199     // MODULE$:Lscala/collection/immutable/Node$;
  #201 = Fieldref           #198.#200     // scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
  #202 = Utf8               java/lang/Object
  #203 = Class              #202          // java/lang/Object
  #204 = Utf8               (II[Ljava/lang/Object;[III)V
  #205 = NameAndType        #91:#204      // "<init>":(II[Ljava/lang/Object;[III)V
  #206 = Methodref          #196.#205     // scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
  #207 = Utf8               k
  #208 = Utf8               v
  #209 = Utf8               updatedContent
  #210 = Utf8               maskFrom_shift
  #211 = Utf8               hasNodes
  #212 = Utf8               nodeArity
  #213 = Utf8               getNode
  #214 = Utf8               (I)Lscala/collection/immutable/MapNode;
  #215 = Utf8               (I)Lscala/collection/immutable/MapNode<TK;TV;>;
  #216 = Utf8               java/lang/IndexOutOfBoundsException
  #217 = Class              #216          // java/lang/IndexOutOfBoundsException
  #218 = Utf8               No sub-nodes present in hash-collision leaf node.
  #219 = String             #218          // No sub-nodes present in hash-collision leaf node.
  #220 = Utf8               (Ljava/lang/String;)V
  #221 = NameAndType        #91:#220      // "<init>":(Ljava/lang/String;)V
  #222 = Methodref          #217.#221     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #223 = Utf8               hasPayload
  #224 = Utf8               payloadArity
  #225 = Utf8               getKey
  #226 = Utf8               (I)TK;
  #227 = Utf8               getPayload
  #228 = Utf8               (I)Lscala/Tuple2;
  #229 = NameAndType        #227:#228     // getPayload:(I)Lscala/Tuple2;
  #230 = Methodref          #2.#229       // scala/collection/immutable/HashCollisionMapNode.getPayload:(I)Lscala/Tuple2;
  #231 = Utf8               getValue
  #232 = Utf8               (I)TV;
  #233 = Utf8               (I)Lscala/Tuple2<TK;TV;>;
  #234 = Utf8               getHash
  #235 = Utf8               (I)I
  #236 = NameAndType        #15:#21       // originalHash:()I
  #237 = Methodref          #2.#236       // scala/collection/immutable/HashCollisionMapNode.originalHash:()I
  #238 = Utf8               foreach
  #239 = Utf8               (Lscala/Function1;)V
  #240 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
  #241 = Utf8               vectorSliceCount
  #242 = NameAndType        #241:#21      // vectorSliceCount:()I
  #243 = Methodref          #42.#242      // scala/collection/immutable/Vector.vectorSliceCount:()I
  #244 = Utf8               scala/collection/immutable/VectorStatics$
  #245 = Class              #244          // scala/collection/immutable/VectorStatics$
  #246 = Utf8               Lscala/collection/immutable/VectorStatics$;
  #247 = NameAndType        #117:#246     // MODULE$:Lscala/collection/immutable/VectorStatics$;
  #248 = Fieldref           #245.#247     // scala/collection/immutable/VectorStatics$.MODULE$:Lscala/collection/immutable/VectorStatics$;
  #249 = Utf8               scala/collection/immutable/VectorInline$
  #250 = Class              #249          // scala/collection/immutable/VectorInline$
  #251 = Utf8               Lscala/collection/immutable/VectorInline$;
  #252 = NameAndType        #117:#251     // MODULE$:Lscala/collection/immutable/VectorInline$;
  #253 = Fieldref           #250.#252     // scala/collection/immutable/VectorInline$.MODULE$:Lscala/collection/immutable/VectorInline$;
  #254 = Utf8               java/lang/Math
  #255 = Class              #254          // java/lang/Math
  #256 = Utf8               abs
  #257 = NameAndType        #256:#235     // abs:(I)I
  #258 = Methodref          #255.#257     // java/lang/Math.abs:(I)I
  #259 = Utf8               vectorSlice
  #260 = Utf8               (I)[Ljava/lang/Object;
  #261 = NameAndType        #259:#260     // vectorSlice:(I)[Ljava/lang/Object;
  #262 = Methodref          #42.#261      // scala/collection/immutable/Vector.vectorSlice:(I)[Ljava/lang/Object;
  #263 = Utf8               scala/Function1
  #264 = Class              #263          // scala/Function1
  #265 = NameAndType        #76:#164      // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #266 = InterfaceMethodref #264.#265     // scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #267 = Utf8               [Ljava/lang/Object;
  #268 = Class              #267          // "[Ljava/lang/Object;"
  #269 = Utf8               foreachRec
  #270 = Utf8               (I[Ljava/lang/Object;Lscala/Function1;)V
  #271 = NameAndType        #269:#270     // foreachRec:(I[Ljava/lang/Object;Lscala/Function1;)V
  #272 = Methodref          #245.#271     // scala/collection/immutable/VectorStatics$.foreachRec:(I[Ljava/lang/Object;Lscala/Function1;)V
  #273 = Utf8               Lscala/Function1;
  #274 = Utf8               foreach_c
  #275 = Utf8               foreach_i
  #276 = Utf8               foreach_this
  #277 = Utf8               foreach_vectorSliceDim_c
  #278 = Utf8               foreach_foreachRec_l
  #279 = Utf8               foreach_foreachRec_i
  #280 = Utf8               foreach_foreachRec_len
  #281 = Utf8               foreach_foreachRec_this
  #282 = Utf8               foreach_foreachRec_level
  #283 = Utf8               foreach_foreachRec_a
  #284 = Utf8               foreachRec_l
  #285 = Utf8               foreachRec_i
  #286 = Utf8               foreachRec_len
  #287 = Utf8               foreachRec_a
  #288 = Utf8               foreachEntry
  #289 = Utf8               (Lscala/Function2;)V
  #290 = Utf8               <U:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TU;>;)V
  #291 = Utf8               $anonfun$foreachEntry$1
  #292 = Utf8               (Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
  #293 = NameAndType        #291:#292     // $anonfun$foreachEntry$1:(Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
  #294 = Methodref          #2.#293       // scala/collection/immutable/HashCollisionMapNode.$anonfun$foreachEntry$1:(Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
  #295 = MethodHandle       6:#294        // REF_invokeStatic scala/collection/immutable/HashCollisionMapNode.$anonfun$foreachEntry$1:(Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
  #296 = Utf8               (Lscala/Function2;)Lscala/Function1;
  #297 = NameAndType        #76:#296      // apply:(Lscala/Function2;)Lscala/Function1;
  #298 = InvokeDynamic      #1:#297       // #1:apply:(Lscala/Function2;)Lscala/Function1;
  #299 = Utf8               scala/Function2
  #300 = Class              #299          // scala/Function2
  #301 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #302 = NameAndType        #76:#301      // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #303 = InterfaceMethodref #300.#302     // scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #304 = Utf8               Lscala/Function2;
  #305 = Utf8               foreach_f
  #306 = Utf8               $anonfun$foreachEntry$1_k
  #307 = Utf8               $anonfun$foreachEntry$1_v
  #308 = Utf8               foreachWithHash
  #309 = Utf8               (Lscala/Function3;)V
  #310 = Utf8               (Lscala/Function3<TK;TV;Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;)V
  #311 = Utf8               java/lang/Integer
  #312 = Class              #311          // java/lang/Integer
  #313 = Utf8               valueOf
  #314 = Utf8               (I)Ljava/lang/Integer;
  #315 = NameAndType        #313:#314     // valueOf:(I)Ljava/lang/Integer;
  #316 = Methodref          #312.#315     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
  #317 = Utf8               scala/Function3
  #318 = Class              #317          // scala/Function3
  #319 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #320 = NameAndType        #76:#319      // apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #321 = InterfaceMethodref #318.#320     // scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #322 = Utf8               Lscala/Tuple2;
  #323 = Utf8               Lscala/Function3;
  #324 = Utf8               transform
  #325 = Utf8               (Lscala/Function2;)Lscala/collection/immutable/HashCollisionMapNode;
  #326 = Utf8               <W:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TW;>;)Lscala/collection/immutable/HashCollisionMapNode<TK;TW;>;
  #327 = Utf8               scala/collection/immutable/Vector$
  #328 = Class              #327          // scala/collection/immutable/Vector$
  #329 = Utf8               Lscala/collection/immutable/Vector$;
  #330 = NameAndType        #117:#329     // MODULE$:Lscala/collection/immutable/Vector$;
  #331 = Fieldref           #328.#330     // scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
  #332 = Utf8               scala/collection/immutable/VectorBuilder
  #333 = Class              #332          // scala/collection/immutable/VectorBuilder
  #334 = Methodref          #333.#93      // scala/collection/immutable/VectorBuilder."<init>":()V
  #335 = Utf8               addOne
  #336 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
  #337 = NameAndType        #335:#336     // addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
  #338 = Methodref          #333.#337     // scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
  #339 = Utf8               result
  #340 = NameAndType        #339:#28      // result:()Lscala/collection/immutable/Vector;
  #341 = Methodref          #333.#340     // scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
  #342 = Utf8               newValue
  #343 = Utf8               newContent
  #344 = Utf8               Lscala/collection/mutable/ReusableBuilder;
  #345 = Utf8               contentIter
  #346 = Utf8               anyChanges
  #347 = Utf8               addOne_elem
  #348 = Utf8               (Ljava/lang/Object;)Z
  #349 = Utf8               that
  #350 = Utf8               concat
  #351 = Utf8               (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/HashCollisionMapNode;
  #352 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;I)Lscala/collection/immutable/HashCollisionMapNode<TK;TV1;>;
  #353 = Utf8               addAll
  #354 = Utf8               (Lscala/collection/IterableOnce;)Lscala/collection/immutable/VectorBuilder;
  #355 = NameAndType        #353:#354     // addAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/VectorBuilder;
  #356 = Methodref          #333.#355     // scala/collection/immutable/VectorBuilder.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/VectorBuilder;
  #357 = Utf8               java/lang/UnsupportedOperationException
  #358 = Class              #357          // java/lang/UnsupportedOperationException
  #359 = Utf8               Cannot concatenate a HashCollisionMapNode with a BitmapIndexedMapNode
  #360 = String             #359          // Cannot concatenate a HashCollisionMapNode with a BitmapIndexedMapNode
  #361 = Methodref          #358.#221     // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
  #362 = Utf8               nextPayload
  #363 = Utf8               Lscala/collection/immutable/VectorBuilder;
  #364 = Utf8               Lscala/collection/immutable/MapNode;
  #365 = Utf8               mergeInto
  #366 = Utf8               (Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
  #367 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;ILscala/Function2<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TK;TV1;>;Lscala/Tuple2<TK;TV1;>;>;)V
  #368 = Utf8               builder
  #369 = Utf8               mergef
  #370 = Utf8               scala/reflect/ClassTag$
  #371 = Class              #370          // scala/reflect/ClassTag$
  #372 = Utf8               Lscala/reflect/ClassTag$;
  #373 = NameAndType        #117:#372     // MODULE$:Lscala/reflect/ClassTag$;
  #374 = Fieldref           #371.#373     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #375 = Utf8               AnyRef
  #376 = Utf8               ()Lscala/reflect/ClassTag;
  #377 = NameAndType        #375:#376     // AnyRef:()Lscala/reflect/ClassTag;
  #378 = Methodref          #371.#377     // scala/reflect/ClassTag$.AnyRef:()Lscala/reflect/ClassTag;
  #379 = Utf8               toArray
  #380 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #381 = NameAndType        #379:#380     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #382 = Methodref          #42.#381      // scala/collection/immutable/Vector.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #383 = Utf8               rightIndexOf$1
  #384 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)I
  #385 = NameAndType        #383:#384     // rightIndexOf$1:(Ljava/lang/Object;[Ljava/lang/Object;)I
  #386 = Methodref          #2.#385       // scala/collection/immutable/HashCollisionMapNode.rightIndexOf$1:(Ljava/lang/Object;[Ljava/lang/Object;)I
  #387 = Utf8               scala/collection/immutable/HashMapBuilder
  #388 = Class              #387          // scala/collection/immutable/HashMapBuilder
  #389 = Utf8               (Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
  #390 = NameAndType        #335:#389     // addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
  #391 = Methodref          #388.#390     // scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
  #392 = Utf8               java/lang/Exception
  #393 = Class              #392          // java/lang/Exception
  #394 = Utf8               Cannot merge HashCollisionMapNode with BitmapIndexedMapNode
  #395 = String             #394          // Cannot merge HashCollisionMapNode with BitmapIndexedMapNode
  #396 = Methodref          #393.#221     // java/lang/Exception."<init>":(Ljava/lang/String;)V
  #397 = Utf8               rightPayload
  #398 = Utf8               elem
  #399 = Utf8               rightArray
  #400 = Utf8               Lscala/collection/immutable/HashMapBuilder;
  #401 = Utf8               buildTo
  #402 = Utf8               (Lscala/collection/immutable/HashMapBuilder;)V
  #403 = Utf8               <V1:Ljava/lang/Object;>(Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;)V
  #404 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
  #405 = NameAndType        #335:#404     // addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
  #406 = Methodref          #388.#405     // scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
  #407 = Utf8               filterImpl
  #408 = Utf8               (Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
  #409 = Utf8               (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;Z)Lscala/collection/immutable/MapNode<TK;TV;>;
  #410 = Utf8               pred
  #411 = Utf8               flipped
  #412 = Utf8               prefix1
  #413 = Utf8               ()[Ljava/lang/Object;
  #414 = NameAndType        #412:#413     // prefix1:()[Ljava/lang/Object;
  #415 = Methodref          #42.#414      // scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
  #416 = Utf8               unboxToBoolean
  #417 = NameAndType        #416:#348     // unboxToBoolean:(Ljava/lang/Object;)Z
  #418 = Methodref          #63.#417      // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #419 = Utf8               bitCount
  #420 = NameAndType        #419:#235     // bitCount:(I)I
  #421 = Methodref          #312.#420     // java/lang/Integer.bitCount:(I)I
  #422 = Utf8               scala/collection/immutable/BigVector
  #423 = Class              #422          // scala/collection/immutable/BigVector
  #424 = Utf8               $anonfun$filterImpl$1
  #425 = Utf8               (Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #426 = NameAndType        #424:#425     // $anonfun$filterImpl$1:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #427 = Methodref          #42.#426      // scala/collection/immutable/Vector.$anonfun$filterImpl$1:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #428 = MethodHandle       6:#427        // REF_invokeStatic scala/collection/immutable/Vector.$anonfun$filterImpl$1:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #429 = Utf8               (Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #430 = NameAndType        #76:#429      // apply:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #431 = InvokeDynamic      #2:#430       // #2:apply:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #432 = Methodref          #423.#242     // scala/collection/immutable/BigVector.vectorSliceCount:()I
  #433 = Methodref          #423.#261     // scala/collection/immutable/BigVector.vectorSlice:(I)[Ljava/lang/Object;
  #434 = Utf8               scala/collection/immutable/Vector0$
  #435 = Class              #434          // scala/collection/immutable/Vector0$
  #436 = Utf8               Lscala/collection/immutable/Vector0$;
  #437 = NameAndType        #117:#436     // MODULE$:Lscala/collection/immutable/Vector0$;
  #438 = Fieldref           #435.#437     // scala/collection/immutable/Vector0$.MODULE$:Lscala/collection/immutable/Vector0$;
  #439 = Utf8               java/lang/System
  #440 = Class              #439          // java/lang/System
  #441 = Utf8               arraycopy
  #442 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V
  #443 = NameAndType        #441:#442     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #444 = Methodref          #440.#443     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
  #445 = Utf8               scala/collection/immutable/Vector1
  #446 = Class              #445          // scala/collection/immutable/Vector1
  #447 = Utf8               ([Ljava/lang/Object;)V
  #448 = NameAndType        #91:#447      // "<init>":([Ljava/lang/Object;)V
  #449 = Methodref          #446.#448     // scala/collection/immutable/Vector1."<init>":([Ljava/lang/Object;)V
  #450 = Utf8               initFrom
  #451 = NameAndType        #450:#447     // initFrom:([Ljava/lang/Object;)V
  #452 = Methodref          #333.#451     // scala/collection/immutable/VectorBuilder.initFrom:([Ljava/lang/Object;)V
  #453 = Utf8               $anonfun$filterImpl$2
  #454 = NameAndType        #453:#425     // $anonfun$filterImpl$2:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #455 = Methodref          #42.#454      // scala/collection/immutable/Vector.$anonfun$filterImpl$2:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #456 = MethodHandle       6:#455        // REF_invokeStatic scala/collection/immutable/Vector.$anonfun$filterImpl$2:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  #457 = InvokeDynamic      #3:#430       // #3:apply:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;)Lscala/Function1;
  #458 = Utf8               scala/collection/immutable/MapNode$
  #459 = Class              #458          // scala/collection/immutable/MapNode$
  #460 = Utf8               Lscala/collection/immutable/MapNode$;
  #461 = NameAndType        #117:#460     // MODULE$:Lscala/collection/immutable/MapNode$;
  #462 = Fieldref           #459.#461     // scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
  #463 = Utf8               empty
  #464 = Utf8               ()Lscala/collection/immutable/BitmapIndexedMapNode;
  #465 = NameAndType        #463:#464     // empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
  #466 = Methodref          #459.#465     // scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
  #467 = Utf8               head
  #468 = NameAndType        #467:#54      // head:()Ljava/lang/Object;
  #469 = Methodref          #42.#468      // scala/collection/immutable/Vector.head:()Ljava/lang/Object;
  #470 = Utf8               newContentLength
  #471 = Utf8               filterImpl_b
  #472 = Utf8               filterImpl_k
  #473 = Utf8               filterImpl_newData
  #474 = Utf8               filterImpl_bitmap
  #475 = Utf8               filterImpl_j
  #476 = Utf8               filterImpl_newLen
  #477 = Utf8               filterImpl_i
  #478 = Utf8               filterImpl_len
  #479 = Utf8               filterImpl_this
  #480 = Utf8               filterImpl_foreachRest_c
  #481 = Utf8               filterImpl_foreachRest_i
  #482 = Utf8               filterImpl_foreachRest_this
  #483 = Utf8               Lscala/collection/immutable/BigVector;
  #484 = Utf8               filterImpl_foreachRest_f
  #485 = Utf8               filterImpl_foreachRest_vectorSliceDim_c
  #486 = Utf8               filterImpl_foreachRest_foreachRec_l
  #487 = Utf8               filterImpl_foreachRest_foreachRec_i
  #488 = Utf8               filterImpl_foreachRest_foreachRec_len
  #489 = Utf8               filterImpl_foreachRest_foreachRec_this
  #490 = Utf8               filterImpl_foreachRest_foreachRec_level
  #491 = Utf8               filterImpl_foreachRest_foreachRec_a
  #492 = Utf8               copy
  #493 = Utf8               ()Lscala/collection/immutable/HashCollisionMapNode;
  #494 = Utf8               ()Lscala/collection/immutable/HashCollisionMapNode<TK;TV;>;
  #495 = Utf8               hashCode
  #496 = Utf8               Trie nodes do not support hashing.
  #497 = String             #496          // Trie nodes do not support hashing.
  #498 = Utf8               cachedJavaKeySetHashCode
  #499 = NameAndType        #72:#21       // size:()I
  #500 = Methodref          #2.#499       // scala/collection/immutable/HashCollisionMapNode.size:()I
  #501 = Utf8               ()Lscala/collection/immutable/MapNode;
  #502 = NameAndType        #492:#493     // copy:()Lscala/collection/immutable/HashCollisionMapNode;
  #503 = Methodref          #2.#502       // scala/collection/immutable/HashCollisionMapNode.copy:()Lscala/collection/immutable/HashCollisionMapNode;
  #504 = Utf8               (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/MapNode;
  #505 = NameAndType        #350:#351     // concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/HashCollisionMapNode;
  #506 = Methodref          #2.#505       // scala/collection/immutable/HashCollisionMapNode.concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/HashCollisionMapNode;
  #507 = Utf8               (Lscala/Function2;)Lscala/collection/immutable/MapNode;
  #508 = NameAndType        #324:#325     // transform:(Lscala/Function2;)Lscala/collection/immutable/HashCollisionMapNode;
  #509 = Methodref          #2.#508       // scala/collection/immutable/HashCollisionMapNode.transform:(Lscala/Function2;)Lscala/collection/immutable/HashCollisionMapNode;
  #510 = Utf8               (I)Lscala/collection/immutable/Node;
  #511 = NameAndType        #213:#214     // getNode:(I)Lscala/collection/immutable/MapNode;
  #512 = Methodref          #2.#511       // scala/collection/immutable/HashCollisionMapNode.getNode:(I)Lscala/collection/immutable/MapNode;
  #513 = Utf8               $anonfun$apply$1
  #514 = Utf8               ()Lscala/runtime/Nothing$;
  #515 = Utf8               $anonfun$removed$1
  #516 = Utf8               (Ljava/lang/Object;Lscala/Tuple2;)Z
  #517 = Utf8               key$1
  #518 = Utf8               keyValuePair
  #519 = Utf8               f$1
  #520 = Utf8               x0$1
  #521 = Utf8               rightArray$1
  #522 = Utf8               (IILscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;)V
  #523 = Methodref          #5.#93        // scala/collection/immutable/MapNode."<init>":()V
  #524 = Utf8               scala/Predef$
  #525 = Class              #524          // scala/Predef$
  #526 = Utf8               Lscala/Predef$;
  #527 = NameAndType        #117:#526     // MODULE$:Lscala/Predef$;
  #528 = Fieldref           #525.#527     // scala/Predef$.MODULE$:Lscala/Predef$;
  #529 = Utf8               require
  #530 = Utf8               (Z)V
  #531 = NameAndType        #529:#530     // require:(Z)V
  #532 = Methodref          #525.#531     // scala/Predef$.require:(Z)V
  #533 = Utf8               scala/runtime/Statics
  #534 = Class              #533          // scala/runtime/Statics
  #535 = Utf8               releaseFence
  #536 = NameAndType        #535:#92      // releaseFence:()V
  #537 = Methodref          #534.#536     // scala/runtime/Statics.releaseFence:()V
  #538 = NameAndType        #515:#516     // $anonfun$removed$1:(Ljava/lang/Object;Lscala/Tuple2;)Z
  #539 = Methodref          #2.#538       // scala/collection/immutable/HashCollisionMapNode.$anonfun$removed$1:(Ljava/lang/Object;Lscala/Tuple2;)Z
  #540 = Utf8               boxToBoolean
  #541 = Utf8               (Z)Ljava/lang/Boolean;
  #542 = NameAndType        #540:#541     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #543 = Methodref          #63.#542      // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #544 = Utf8               $deserializeLambda$
  #545 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #546 = Utf8               scala/runtime/LambdaDeserialize
  #547 = Class              #546          // scala/runtime/LambdaDeserialize
  #548 = Utf8               bootstrap
  #549 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #550 = NameAndType        #548:#549     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #551 = Methodref          #547.#550     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #552 = MethodHandle       6:#551        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #553 = Utf8               lambdaDeserialize
  #554 = NameAndType        #553:#545     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #555 = InvokeDynamic      #4:#554       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #556 = Utf8               Signature
  #557 = Utf8               Code
  #558 = Utf8               LineNumberTable
  #559 = Utf8               LocalVariableTable
  #560 = Utf8               MethodParameters
  #561 = Utf8               StackMapTable
  #562 = Utf8               InnerClasses
  #563 = Utf8               SourceFile
  #564 = Utf8               RuntimeVisibleAnnotations
  #565 = Utf8               BootstrapMethods
  #566 = Utf8               ScalaInlineInfo
  #567 = Utf8               ScalaSig
{
  private final int originalHash;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final int hash;
    descriptor: I
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private scala.collection.immutable.Vector<scala.Tuple2<K, V>> content;
    descriptor: Lscala/collection/immutable/Vector;
    flags: (0x0002) ACC_PRIVATE
    Signature: #20                          // Lscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;

  public int originalHash();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #23                 // Field originalHash:I
         4: ireturn
      LineNumberTable:
        line 1813: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public int hash();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #27                 // Field hash:I
         4: ireturn
      LineNumberTable:
        line 1814: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public scala.collection.immutable.Vector<scala.Tuple2<K, V>> content();
    descriptor: ()Lscala/collection/immutable/Vector;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #31                 // Field content:Lscala/collection/immutable/Vector;
         4: areturn
      LineNumberTable:
        line 1815: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashCollisionMapNode;
    Signature: #29                          // ()Lscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;

  public void content_$eq(scala.collection.immutable.Vector<scala.Tuple2<K, V>>);
    descriptor: (Lscala/collection/immutable/Vector;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: putfield      #31                 // Field content:Lscala/collection/immutable/Vector;
         5: return
      LineNumberTable:
        line 1815: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       6     1   x$1   Lscala/collection/immutable/Vector;
    Signature: #34                          // (Lscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;)V
    MethodParameters:
      Name                           Flags
      x$1                            final

  public int indexOf(java.lang.Object);
    descriptor: (Ljava/lang/Object;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
         7: astore_2
         8: iconst_0
         9: istore_3
        10: aload_2
        11: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        16: ifeq          46
        19: aload_2
        20: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        25: checkcast     #58                 // class scala/Tuple2
        28: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        31: aload_1
        32: invokestatic  #67                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        35: ifeq          40
        38: iload_3
        39: ireturn
        40: iinc          3, 1
        43: goto          10
        46: iconst_m1
        47: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ class scala/collection/Iterator, int ]
        frame_type = 29 /* same */
        frame_type = 5 /* same */
      LineNumberTable:
        line 1825: 0
        line 1826: 8
        line 1827: 10
        line 1828: 19
        line 1829: 40
        line 1827: 43
        line 1831: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            8      39     2  iter   Lscala/collection/Iterator;
           10      37     3     i   I
            0      48     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      48     1   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key                            final

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
         7: ireturn
      LineNumberTable:
        line 1834: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public V apply(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=5
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: iload         4
         6: invokevirtual #83                 // Method get:(Ljava/lang/Object;III)Lscala/Option;
         9: dup
        10: ifnonnull     15
        13: aconst_null
        14: athrow
        15: astore        5
        17: aload         5
        19: invokevirtual #88                 // Method scala/Option.isEmpty:()Z
        22: ifeq          33
        25: new           #90                 // class java/util/NoSuchElementException
        28: dup
        29: invokespecial #94                 // Method java/util/NoSuchElementException."<init>":()V
        32: athrow
        33: aload         5
        35: invokevirtual #96                 // Method scala/Option.get:()Ljava/lang/Object;
        38: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 79 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
        frame_type = 252 /* append */
          offset_delta = 17
          locals = [ class scala/Option ]
      LineNumberTable:
        line 1836: 0
        line 1836: 25
        line 1836: 33
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      39     1   key   Ljava/lang/Object;
            0      39     2 originalHash   I
            0      39     3  hash   I
            0      39     4 shift   I
           17      21     5 getOrElse_this   Lscala/Option;
    Signature: #78                          // (TK;III)TV;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public scala.Option<V> get(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=5
         0: aload_0
         1: invokevirtual #101                // Method hash:()I
         4: iload_3
         5: if_icmpne     48
         8: aload_0
         9: aload_1
        10: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
        13: istore        5
        15: iload         5
        17: iconst_0
        18: if_icmplt     44
        21: new           #105                // class scala/Some
        24: dup
        25: aload_0
        26: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        29: iload         5
        31: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
        34: checkcast     #58                 // class scala/Tuple2
        37: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        40: invokespecial #114                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        43: areturn
        44: getstatic     #120                // Field scala/None$.MODULE$:Lscala/None$;
        47: areturn
        48: getstatic     #120                // Field scala/None$.MODULE$:Lscala/None$;
        51: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 44
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 3
      LineNumberTable:
        line 1839: 0
        line 1840: 8
        line 1841: 15
        line 1842: 48
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      32     5 index   I
            0      52     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      52     1   key   Ljava/lang/Object;
            0      52     2 originalHash   I
            0      52     3  hash   I
            0      52     4 shift   I
    Signature: #99                          // (TK;III)Lscala/Option<TV;>;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public scala.Tuple2<K, V> getTuple(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=5
         0: aload_0
         1: aload_1
         2: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
         5: istore        5
         7: iload         5
         9: iconst_0
        10: if_icmplt     26
        13: aload_0
        14: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        17: iload         5
        19: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
        22: checkcast     #58                 // class scala/Tuple2
        25: areturn
        26: new           #90                 // class java/util/NoSuchElementException
        29: dup
        30: invokespecial #94                 // Method java/util/NoSuchElementException."<init>":()V
        33: athrow
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
      LineNumberTable:
        line 1845: 0
        line 1846: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      27     5 index   I
            0      34     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      34     1   key   Ljava/lang/Object;
            0      34     2 originalHash   I
            0      34     3  hash   I
            0      34     4 shift   I
    Signature: #124                         // (TK;III)Lscala/Tuple2<TK;TV;>;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public <V1 extends java.lang.Object> V1 getOrElse(K, int, int, int, scala.Function0<V1>);
    descriptor: (Ljava/lang/Object;IIILscala/Function0;)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=7, args_size=6
         0: aload_0
         1: invokevirtual #101                // Method hash:()I
         4: iload_3
         5: if_icmpne     60
         8: aload_0
         9: aload_1
        10: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
        13: istore        6
        15: iload         6
        17: tableswitch   { // -1 to -1
                      -1: 36
                 default: 44
            }
        36: aload         5
        38: invokeinterface #132,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        43: areturn
        44: aload_0
        45: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        48: iload         6
        50: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
        53: checkcast     #58                 // class scala/Tuple2
        56: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        59: areturn
        60: aload         5
        62: invokeinterface #132,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
        67: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ int ]
        frame_type = 7 /* same */
        frame_type = 250 /* chop */
          offset_delta = 15
      LineNumberTable:
        line 1850: 0
        line 1851: 8
        line 1852: 36
        line 1853: 44
        line 1855: 60
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      68     1   key   Ljava/lang/Object;
            0      68     2 originalHash   I
            0      68     3  hash   I
            0      68     4 shift   I
            0      68     5     f   Lscala/Function0;
    Signature: #127                         // <V1:Ljava/lang/Object;>(TK;IIILscala/Function0<TV1;>;)TV1;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final
      f                              final

  public boolean containsKey(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=5
         0: aload_0
         1: invokevirtual #101                // Method hash:()I
         4: iload_3
         5: if_icmpne     19
         8: aload_0
         9: aload_1
        10: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
        13: iconst_0
        14: if_icmplt     19
        17: iconst_1
        18: ireturn
        19: iconst_0
        20: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 19 /* same */
      LineNumberTable:
        line 1859: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      21     1   key   Ljava/lang/Object;
            0      21     2 originalHash   I
            0      21     3  hash   I
            0      21     4 shift   I
    Signature: #136                         // (TK;III)Z
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public <V1 extends java.lang.Object> boolean contains(K, V1, int, int);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;II)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=5
         0: aload_0
         1: invokevirtual #101                // Method hash:()I
         4: iload_3
         5: if_icmpne     50
         8: aload_0
         9: aload_1
        10: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
        13: istore        5
        15: iload         5
        17: iconst_0
        18: if_icmplt     44
        21: aload_0
        22: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        25: iload         5
        27: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
        30: checkcast     #58                 // class scala/Tuple2
        33: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        36: aload_2
        37: if_acmpne     44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: ifeq          50
        48: iconst_1
        49: ireturn
        50: iconst_0
        51: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 44
          locals = [ int ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 4
      LineNumberTable:
        line 1862: 0
        line 1863: 8
        line 1864: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           15      30     5 index   I
            0      52     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      52     1   key   Ljava/lang/Object;
            0      52     2 value   Ljava/lang/Object;
            0      52     3  hash   I
            0      52     4 shift   I
    Signature: #139                         // <V1:Ljava/lang/Object;>(TK;TV1;II)Z
    MethodParameters:
      Name                           Flags
      key                            final
      value                          final
      hash                           final
      shift                          final

  public <V1 extends java.lang.Object> scala.collection.immutable.MapNode<K, V1> updated(K, V1, int, int, int, boolean);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;IIIZ)Lscala/collection/immutable/MapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=8, args_size=7
         0: aload_0
         1: aload_1
         2: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
         5: istore        7
         7: iload         7
         9: iconst_0
        10: if_icmplt     70
        13: iload         6
        15: ifeq          68
        18: aload_0
        19: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        22: iload         7
        24: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
        27: checkcast     #58                 // class scala/Tuple2
        30: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        33: aload_2
        34: if_acmpne     39
        37: aload_0
        38: areturn
        39: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
        42: dup
        43: iload_3
        44: iload         4
        46: aload_0
        47: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        50: iload         7
        52: new           #58                 // class scala/Tuple2
        55: dup
        56: aload_1
        57: aload_2
        58: invokespecial #147                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        61: invokevirtual #150                // Method scala/collection/immutable/Vector.updated:(ILjava/lang/Object;)Lscala/collection/immutable/Vector;
        64: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
        67: areturn
        68: aload_0
        69: areturn
        70: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
        73: dup
        74: iload_3
        75: iload         4
        77: aload_0
        78: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        81: new           #58                 // class scala/Tuple2
        84: dup
        85: aload_1
        86: aload_2
        87: invokespecial #147                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        90: invokevirtual #157                // Method scala/collection/immutable/Vector.appended:(Ljava/lang/Object;)Lscala/collection/immutable/Vector;
        93: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
        96: areturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 39
          locals = [ int ]
        frame_type = 28 /* same */
        frame_type = 1 /* same */
      LineNumberTable:
        line 1868: 0
        line 1869: 7
        line 1870: 13
        line 1871: 18
        line 1872: 37
        line 1874: 39
        line 1877: 68
        line 1880: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            7      89     7 index   I
            0      97     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      97     1   key   Ljava/lang/Object;
            0      97     2 value   Ljava/lang/Object;
            0      97     3 originalHash   I
            0      97     4  hash   I
            0      97     5 shift   I
            0      97     6 replaceValue   Z
    Signature: #143                         // <V1:Ljava/lang/Object;>(TK;TV1;IIIZ)Lscala/collection/immutable/MapNode<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      key                            final
      value                          final
      originalHash                   final
      hash                           final
      shift                          final
      replaceValue                   final

  public <V1 extends java.lang.Object> scala.collection.immutable.MapNode<K, V1> removed(K, int, int, int);
    descriptor: (Ljava/lang/Object;III)Lscala/collection/immutable/MapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=11, args_size=5
         0: aload_0
         1: aload_1
         2: iload_2
         3: iload_3
         4: iload         4
         6: invokevirtual #163                // Method containsKey:(Ljava/lang/Object;III)Z
         9: ifne          14
        12: aload_0
        13: areturn
        14: aload_0
        15: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        18: aload_1
        19: invokedynamic #184,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;)Lscala/Function1;
        24: invokevirtual #188                // Method scala/collection/immutable/Vector.filterNot:(Lscala/Function1;)Ljava/lang/Object;
        27: checkcast     #42                 // class scala/collection/immutable/Vector
        30: astore        5
        32: aload         5
        34: ifnonnull     39
        37: aconst_null
        38: athrow
        39: aload         5
        41: invokeinterface #191,  1          // InterfaceMethod scala/collection/SeqOps.length:()I
        46: tableswitch   { // 1 to 1
                       1: 64
                 default: 162
            }
        64: aload         5
        66: iconst_0
        67: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
        70: checkcast     #58                 // class scala/Tuple2
        73: astore        6
        75: aload         6
        77: ifnull        97
        80: aload         6
        82: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        85: astore        7
        87: aload         6
        89: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        92: astore        8
        94: goto          106
        97: new           #193                // class scala/MatchError
       100: dup
       101: aconst_null
       102: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       105: athrow
       106: new           #196                // class scala/collection/immutable/BitmapIndexedMapNode
       109: dup
       110: getstatic     #201                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       113: pop
       114: getstatic     #201                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
       117: pop
       118: iconst_0
       119: istore        9
       121: iload_3
       122: iload         9
       124: iushr
       125: bipush        31
       127: iand
       128: istore        10
       130: iconst_1
       131: iload         10
       133: ishl
       134: iconst_0
       135: iconst_2
       136: anewarray     #203                // class java/lang/Object
       139: dup
       140: iconst_0
       141: aload         7
       143: aastore
       144: dup
       145: iconst_1
       146: aload         8
       148: aastore
       149: iconst_1
       150: newarray       int
       152: dup
       153: iconst_0
       154: iload_2
       155: iastore
       156: iconst_1
       157: iload_3
       158: invokespecial #206                // Method scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
       161: areturn
       162: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
       165: dup
       166: iload_2
       167: iload_3
       168: aload         5
       170: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
       173: areturn
      StackMapTable: number_of_entries = 6
        frame_type = 14 /* same */
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ class scala/collection/immutable/Vector ]
        frame_type = 24 /* same */
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class scala/Tuple2 ]
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 248 /* chop */
          offset_delta = 55
      LineNumberTable:
        line 1885: 0
        line 1886: 12
        line 1888: 14
        line 1891: 32
        line 1893: 64
        line 1894: 106
        line 1895: 162
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           87      10     7     k   Ljava/lang/Object;
           94       3     8     v   Ljava/lang/Object;
           32     141     5 updatedContent   Lscala/collection/immutable/Vector;
            0     174     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     174     1   key   Ljava/lang/Object;
            0     174     2 originalHash   I
            0     174     3  hash   I
            0     174     4 shift   I
          121       9     9 maskFrom_shift   I
    Signature: #161                         // <V1:Ljava/lang/Object;>(TK;III)Lscala/collection/immutable/MapNode<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      key                            final
      originalHash                   final
      hash                           final
      shift                          final

  public boolean hasNodes();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 1900: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public int nodeArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 1902: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public scala.collection.immutable.MapNode<K, V> getNode(int);
    descriptor: (I)Lscala/collection/immutable/MapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #217                // class java/lang/IndexOutOfBoundsException
         3: dup
         4: ldc           #219                // String No sub-nodes present in hash-collision leaf node.
         6: invokespecial #222                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 1905: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      10     1 index   I
    Signature: #215                         // (I)Lscala/collection/immutable/MapNode<TK;TV;>;
    MethodParameters:
      Name                           Flags
      index                          final

  public boolean hasPayload();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_1
         1: ireturn
      LineNumberTable:
        line 1907: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public int payloadArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
         7: ireturn
      LineNumberTable:
        line 1909: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public K getKey(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #230                // Method getPayload:(I)Lscala/Tuple2;
         5: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 1911: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       9     1 index   I
    Signature: #226                         // (I)TK;
    MethodParameters:
      Name                           Flags
      index                          final

  public V getValue(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #230                // Method getPayload:(I)Lscala/Tuple2;
         5: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
         8: areturn
      LineNumberTable:
        line 1912: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       9     1 index   I
    Signature: #232                         // (I)TV;
    MethodParameters:
      Name                           Flags
      index                          final

  public scala.Tuple2<K, V> getPayload(int);
    descriptor: (I)Lscala/Tuple2;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: iload_1
         5: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
         8: checkcast     #58                 // class scala/Tuple2
        11: areturn
      LineNumberTable:
        line 1914: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      12     1 index   I
    Signature: #233                         // (I)Lscala/Tuple2<TK;TV;>;
    MethodParameters:
      Name                           Flags
      index                          final

  public int getHash(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #237                // Method originalHash:()I
         4: ireturn
      LineNumberTable:
        line 1916: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       5     1 index   I
    MethodParameters:
      Name                           Flags
      index                          final

  public <U extends java.lang.Object> void foreach(scala.Function1<scala.Tuple2<K, V>, U>);
    descriptor: (Lscala/Function1;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=16, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore_2
        11: aload_2
        12: invokevirtual #243                // Method scala/collection/immutable/Vector.vectorSliceCount:()I
        15: istore_3
        16: iconst_0
        17: istore        4
        19: iload         4
        21: iload_3
        22: if_icmpge     221
        25: getstatic     #248                // Field scala/collection/immutable/VectorStatics$.MODULE$:Lscala/collection/immutable/VectorStatics$;
        28: getstatic     #253                // Field scala/collection/immutable/VectorInline$.MODULE$:Lscala/collection/immutable/VectorInline$;
        31: pop
        32: iload_3
        33: iconst_2
        34: idiv
        35: istore        5
        37: iload         5
        39: iconst_1
        40: iadd
        41: iload         4
        43: iload         5
        45: isub
        46: invokestatic  #258                // Method java/lang/Math.abs:(I)I
        49: isub
        50: iconst_1
        51: isub
        52: aload_2
        53: iload         4
        55: invokevirtual #262                // Method scala/collection/immutable/Vector.vectorSlice:(I)[Ljava/lang/Object;
        58: astore        8
        60: istore        7
        62: astore        6
        64: iconst_0
        65: istore        9
        67: aload         8
        69: arraylength
        70: istore        10
        72: iload         7
        74: iconst_0
        75: if_icmpne     103
        78: iload         9
        80: iload         10
        82: if_icmpge     209
        85: aload_1
        86: aload         8
        88: iload         9
        90: aaload
        91: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        96: pop
        97: iinc          9, 1
       100: goto          78
       103: iload         7
       105: iconst_1
       106: isub
       107: istore        11
       109: iload         9
       111: iload         10
       113: if_icmpge     209
       116: aload         8
       118: iload         9
       120: aaload
       121: checkcast     #268                // class "[Ljava/lang/Object;"
       124: astore        12
       126: iconst_0
       127: istore        13
       129: aload         12
       131: arraylength
       132: istore        14
       134: iload         11
       136: iconst_0
       137: if_icmpne     165
       140: iload         13
       142: iload         14
       144: if_icmpge     200
       147: aload_1
       148: aload         12
       150: iload         13
       152: aaload
       153: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       158: pop
       159: iinc          13, 1
       162: goto          140
       165: iload         11
       167: iconst_1
       168: isub
       169: istore        15
       171: iload         13
       173: iload         14
       175: if_icmpge     200
       178: aload         6
       180: iload         15
       182: aload         12
       184: iload         13
       186: aaload
       187: checkcast     #268                // class "[Ljava/lang/Object;"
       190: aload_1
       191: invokevirtual #272                // Method scala/collection/immutable/VectorStatics$.foreachRec:(I[Ljava/lang/Object;Lscala/Function1;)V
       194: iinc          13, 1
       197: goto          171
       200: aconst_null
       201: astore        12
       203: iinc          9, 1
       206: goto          109
       209: aconst_null
       210: astore        6
       212: aconst_null
       213: astore        8
       215: iinc          4, 1
       218: goto          19
       221: return
      StackMapTable: number_of_entries = 11
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Vector ]
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class scala/collection/immutable/Vector, int, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 58
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, class scala/collection/immutable/Vector, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 24 /* same */
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ class "[Ljava/lang/Object;", int, int ]
        frame_type = 24 /* same */
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 28
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, class scala/collection/immutable/Vector, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, class scala/collection/immutable/Vector, int, int ]
          stack = []
      LineNumberTable:
        line 1918: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     222     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     222     1     f   Lscala/Function1;
           16     205     3 foreach_c   I
           19     202     4 foreach_i   I
           11     210     2 foreach_this   Lscala/collection/immutable/Vector;
           37      13     5 foreach_vectorSliceDim_c   I
          109     100    11 foreach_foreachRec_l   I
           67     142     9 foreach_foreachRec_i   I
           72     137    10 foreach_foreachRec_len   I
           64     145     6 foreach_foreachRec_this   Lscala/collection/immutable/VectorStatics$;
           64     145     7 foreach_foreachRec_level   I
           64     145     8 foreach_foreachRec_a   [Ljava/lang/Object;
          171      29    15 foreachRec_l   I
          129      71    13 foreachRec_i   I
          134      66    14 foreachRec_len   I
          126      74    12 foreachRec_a   [Ljava/lang/Object;
    Signature: #240                         // <U:Ljava/lang/Object;>(Lscala/Function1<Lscala/Tuple2<TK;TV;>;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public <U extends java.lang.Object> void foreachEntry(scala.Function2<K, V, U>);
    descriptor: (Lscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=22, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: aload_1
         5: invokedynamic #298,  0            // InvokeDynamic #1:apply:(Lscala/Function2;)Lscala/Function1;
        10: astore_3
        11: dup
        12: ifnonnull     17
        15: aconst_null
        16: athrow
        17: astore_2
        18: aload_2
        19: invokevirtual #243                // Method scala/collection/immutable/Vector.vectorSliceCount:()I
        22: istore        4
        24: iconst_0
        25: istore        5
        27: iload         5
        29: iload         4
        31: if_icmpge     323
        34: getstatic     #248                // Field scala/collection/immutable/VectorStatics$.MODULE$:Lscala/collection/immutable/VectorStatics$;
        37: getstatic     #253                // Field scala/collection/immutable/VectorInline$.MODULE$:Lscala/collection/immutable/VectorInline$;
        40: pop
        41: iload         4
        43: iconst_2
        44: idiv
        45: istore        6
        47: iload         6
        49: iconst_1
        50: iadd
        51: iload         5
        53: iload         6
        55: isub
        56: invokestatic  #258                // Method java/lang/Math.abs:(I)I
        59: isub
        60: iconst_1
        61: isub
        62: aload_2
        63: iload         5
        65: invokevirtual #262                // Method scala/collection/immutable/Vector.vectorSlice:(I)[Ljava/lang/Object;
        68: astore        9
        70: istore        8
        72: astore        7
        74: iconst_0
        75: istore        10
        77: aload         9
        79: arraylength
        80: istore        11
        82: iload         8
        84: iconst_0
        85: if_icmpne     159
        88: iload         10
        90: iload         11
        92: if_icmpge     311
        95: aload         9
        97: iload         10
        99: aaload
       100: checkcast     #58                 // class scala/Tuple2
       103: astore        17
       105: aload         17
       107: ifnull        138
       110: aload         17
       112: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       115: astore        18
       117: aload         17
       119: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
       122: astore        19
       124: aload_1
       125: aload         18
       127: aload         19
       129: invokeinterface #303,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       134: pop
       135: goto          147
       138: new           #193                // class scala/MatchError
       141: dup
       142: aconst_null
       143: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       146: athrow
       147: aconst_null
       148: astore        18
       150: aconst_null
       151: astore        19
       153: iinc          10, 1
       156: goto          88
       159: iload         8
       161: iconst_1
       162: isub
       163: istore        12
       165: iload         10
       167: iload         11
       169: if_icmpge     311
       172: aload         9
       174: iload         10
       176: aaload
       177: checkcast     #268                // class "[Ljava/lang/Object;"
       180: astore        13
       182: iconst_0
       183: istore        14
       185: aload         13
       187: arraylength
       188: istore        15
       190: iload         12
       192: iconst_0
       193: if_icmpne     267
       196: iload         14
       198: iload         15
       200: if_icmpge     302
       203: aload         13
       205: iload         14
       207: aaload
       208: checkcast     #58                 // class scala/Tuple2
       211: astore        17
       213: aload         17
       215: ifnull        246
       218: aload         17
       220: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
       223: astore        20
       225: aload         17
       227: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
       230: astore        21
       232: aload_1
       233: aload         20
       235: aload         21
       237: invokeinterface #303,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       242: pop
       243: goto          255
       246: new           #193                // class scala/MatchError
       249: dup
       250: aconst_null
       251: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       254: athrow
       255: aconst_null
       256: astore        20
       258: aconst_null
       259: astore        21
       261: iinc          14, 1
       264: goto          196
       267: iload         12
       269: iconst_1
       270: isub
       271: istore        16
       273: iload         14
       275: iload         15
       277: if_icmpge     302
       280: aload         7
       282: iload         16
       284: aload         13
       286: iload         14
       288: aaload
       289: checkcast     #268                // class "[Ljava/lang/Object;"
       292: aload_3
       293: invokevirtual #272                // Method scala/collection/immutable/VectorStatics$.foreachRec:(I[Ljava/lang/Object;Lscala/Function1;)V
       296: iinc          14, 1
       299: goto          273
       302: aconst_null
       303: astore        13
       305: iinc          10, 1
       308: goto          165
       311: aconst_null
       312: astore        7
       314: aconst_null
       315: astore        9
       317: iinc          5, 1
       320: goto          27
       323: return
      StackMapTable: number_of_entries = 15
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, top, class scala/Function1 ]
          stack = [ class scala/collection/immutable/Vector ]
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 49
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, top, top, top, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 254 /* append */
          offset_delta = 30
          locals = [ class "[Ljava/lang/Object;", int, int ]
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [ top, class scala/Tuple2 ]
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, int, class "[Ljava/lang/Object;", int, int, top, class scala/Tuple2, top, top, class java/lang/Object, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 28
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/Vector, class scala/Function1, int, int ]
          stack = []
      LineNumberTable:
        line 1920: 0
        line 1920: 105
        line 1920: 147
        line 1920: 213
        line 1920: 255
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     324     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     324     1     f   Lscala/Function2;
           24     299     4 foreach_c   I
           27     296     5 foreach_i   I
           18     305     2 foreach_this   Lscala/collection/immutable/Vector;
           18     305     3 foreach_f   Lscala/Function1;
           47      13     6 foreach_vectorSliceDim_c   I
          165     146    12 foreach_foreachRec_l   I
           77     234    10 foreach_foreachRec_i   I
           82     229    11 foreach_foreachRec_len   I
           74     237     7 foreach_foreachRec_this   Lscala/collection/immutable/VectorStatics$;
           74     237     8 foreach_foreachRec_level   I
           74     237     9 foreach_foreachRec_a   [Ljava/lang/Object;
          273      29    16 foreachRec_l   I
          185     117    14 foreachRec_i   I
          190     112    15 foreachRec_len   I
          182     120    13 foreachRec_a   [Ljava/lang/Object;
          117      21    18 $anonfun$foreachEntry$1_k   Ljava/lang/Object;
          124      14    19 $anonfun$foreachEntry$1_v   Ljava/lang/Object;
          225      21    20 $anonfun$foreachEntry$1_k   Ljava/lang/Object;
          232      14    21 $anonfun$foreachEntry$1_v   Ljava/lang/Object;
    Signature: #290                         // <U:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TU;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public void foreachWithHash(scala.Function3<K, V, java.lang.Object, scala.runtime.BoxedUnit>);
    descriptor: (Lscala/Function3;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
         7: astore_2
         8: aload_2
         9: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        14: ifeq          52
        17: aload_2
        18: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        23: checkcast     #58                 // class scala/Tuple2
        26: astore_3
        27: aload_1
        28: aload_3
        29: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        32: aload_3
        33: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        36: aload_0
        37: invokevirtual #237                // Method originalHash:()I
        40: invokestatic  #316                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        43: invokeinterface #321,  4          // InterfaceMethod scala/Function3.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        48: pop
        49: goto          8
        52: return
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class scala/collection/Iterator ]
        frame_type = 43 /* same */
      LineNumberTable:
        line 1923: 0
        line 1924: 8
        line 1925: 17
        line 1926: 27
        line 1924: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           27      22     3  next   Lscala/Tuple2;
            8      44     2  iter   Lscala/collection/Iterator;
            0      53     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      53     1     f   Lscala/Function3;
    Signature: #310                         // (Lscala/Function3<TK;TV;Ljava/lang/Object;Lscala/runtime/BoxedUnit;>;)V
    MethodParameters:
      Name                           Flags
      f                              final

  public <W extends java.lang.Object> scala.collection.immutable.HashCollisionMapNode<K, W> transform(scala.Function2<K, V, W>);
    descriptor: (Lscala/Function2;)Lscala/collection/immutable/HashCollisionMapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=11, args_size=2
         0: getstatic     #331                // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
         3: pop
         4: new           #333                // class scala/collection/immutable/VectorBuilder
         7: dup
         8: invokespecial #334                // Method scala/collection/immutable/VectorBuilder."<init>":()V
        11: astore        9
        13: aload         9
        15: aconst_null
        16: astore        9
        18: astore_2
        19: aload_0
        20: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        23: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
        26: astore_3
        27: iconst_0
        28: istore        4
        30: aload_3
        31: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        36: ifeq          138
        39: aload_3
        40: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        45: checkcast     #58                 // class scala/Tuple2
        48: astore        5
        50: aload         5
        52: ifnull        72
        55: aload         5
        57: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        60: astore        6
        62: aload         5
        64: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        67: astore        7
        69: goto          81
        72: new           #193                // class scala/MatchError
        75: dup
        76: aconst_null
        77: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        80: athrow
        81: aload_1
        82: aload         6
        84: aload         7
        86: invokeinterface #303,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        91: astore        8
        93: new           #58                 // class scala/Tuple2
        96: dup
        97: aload         6
        99: aload         8
       101: invokespecial #147                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       104: astore        10
       106: aload_2
       107: aload         10
       109: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       112: pop
       113: aconst_null
       114: astore        10
       116: iload         4
       118: ifne          128
       121: aload         7
       123: aload         8
       125: if_acmpeq     132
       128: iconst_1
       129: goto          133
       132: iconst_0
       133: istore        4
       135: goto          30
       138: iload         4
       140: ifeq          163
       143: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
       146: dup
       147: aload_0
       148: invokevirtual #237                // Method originalHash:()I
       151: aload_0
       152: invokevirtual #101                // Method hash:()I
       155: aload_2
       156: invokevirtual #341                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
       159: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
       162: areturn
       163: aload_0
       164: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/VectorBuilder, class scala/collection/Iterator, int, top, top, top, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 41
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/VectorBuilder, class scala/collection/Iterator, int, class scala/Tuple2, top, top, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/VectorBuilder, class scala/collection/Iterator, int, class scala/Tuple2, class java/lang/Object, class java/lang/Object, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/VectorBuilder, class scala/collection/Iterator, int, class scala/Tuple2, class java/lang/Object, class java/lang/Object, class java/lang/Object, null, null ]
          stack = []
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function2, class scala/collection/immutable/VectorBuilder, class scala/collection/Iterator, int, top, top, top, top, null ]
          stack = []
        frame_type = 24 /* same */
      LineNumberTable:
        line 1931: 0
        line 1932: 19
        line 1934: 27
        line 1935: 30
        line 1936: 39
        line 1937: 81
        line 1938: 93
        line 1939: 116
        line 1935: 135
        line 1941: 138
        line 1942: 163
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           62      10     6     k   Ljava/lang/Object;
           69       3     7     v   Ljava/lang/Object;
           93      42     8 newValue   Ljava/lang/Object;
           19     145     2 newContent   Lscala/collection/mutable/ReusableBuilder;
           27     137     3 contentIter   Lscala/collection/Iterator;
           30     134     4 anyChanges   Z
            0     165     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     165     1     f   Lscala/Function2;
          106       7    10 addOne_elem   Ljava/lang/Object;
    Signature: #326                         // <W:Ljava/lang/Object;>(Lscala/Function2<TK;TV;TW;>;)Lscala/collection/immutable/HashCollisionMapNode<TK;TW;>;
    MethodParameters:
      Name                           Flags
      f                              final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=9, args_size=2
         0: aload_1
         1: instanceof    #2                  // class scala/collection/immutable/HashCollisionMapNode
         4: ifeq          155
         7: aload_1
         8: checkcast     #2                  // class scala/collection/immutable/HashCollisionMapNode
        11: astore_3
        12: aload_0
        13: aload_3
        14: if_acmpeq     146
        17: aload_0
        18: invokevirtual #101                // Method hash:()I
        21: aload_3
        22: invokevirtual #101                // Method hash:()I
        25: if_icmpne     150
        28: aload_0
        29: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        32: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
        35: aload_3
        36: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        39: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
        42: if_icmpne     150
        45: aload_0
        46: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        49: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
        52: astore        4
        54: aload         4
        56: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        61: ifeq          146
        64: aload         4
        66: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        71: checkcast     #58                 // class scala/Tuple2
        74: astore        5
        76: aload         5
        78: ifnull        98
        81: aload         5
        83: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        86: astore        6
        88: aload         5
        90: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        93: astore        7
        95: goto          107
        98: new           #193                // class scala/MatchError
       101: dup
       102: aconst_null
       103: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       106: athrow
       107: aload_3
       108: aload         6
       110: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
       113: istore        8
       115: iload         8
       117: iconst_0
       118: if_icmplt     144
       121: aload         7
       123: aload_3
       124: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
       127: iload         8
       129: invokevirtual #108                // Method scala/collection/immutable/Vector.apply:(I)Ljava/lang/Object;
       132: checkcast     #58                 // class scala/Tuple2
       135: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
       138: invokestatic  #67                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
       141: ifne          54
       144: iconst_0
       145: ireturn
       146: iconst_1
       147: goto          151
       150: iconst_0
       151: istore_2
       152: goto          157
       155: iconst_0
       156: istore_2
       157: iload_2
       158: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 254 /* append */
          offset_delta = 54
          locals = [ top, class scala/collection/immutable/HashCollisionMapNode, class scala/collection/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 43
          locals = [ class scala/Tuple2 ]
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 252 /* append */
          offset_delta = 36
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class java/lang/Object, top, class scala/collection/immutable/HashCollisionMapNode ]
          stack = []
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
      LineNumberTable:
        line 1947: 0
        line 1948: 12
        line 1949: 17
        line 1950: 28
        line 1951: 45
        line 1952: 54
        line 1953: 64
        line 1954: 107
        line 1955: 115
        line 1956: 144
        line 1959: 146
        line 1961: 155
        line 1946: 157
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           88      10     6   key   Ljava/lang/Object;
           95       3     7 value   Ljava/lang/Object;
          115      31     8 index   I
           54      92     4  iter   Lscala/collection/Iterator;
            0     159     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     159     1  that   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      that                           final

  public <V1 extends java.lang.Object> scala.collection.immutable.HashCollisionMapNode<K, V1> concat(scala.collection.immutable.MapNode<K, V1>, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/HashCollisionMapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=8, args_size=3
         0: aload_1
         1: instanceof    #2                  // class scala/collection/immutable/HashCollisionMapNode
         4: ifeq          141
         7: aload_1
         8: checkcast     #2                  // class scala/collection/immutable/HashCollisionMapNode
        11: astore        4
        13: aload         4
        15: aload_0
        16: if_acmpne     23
        19: aload_0
        20: goto          137
        23: aconst_null
        24: astore        5
        26: aload_0
        27: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        30: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
        33: astore        6
        35: aload         6
        37: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        42: ifeq          107
        45: aload         6
        47: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        52: checkcast     #58                 // class scala/Tuple2
        55: astore        7
        57: aload         4
        59: aload         7
        61: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        64: invokevirtual #103                // Method indexOf:(Ljava/lang/Object;)I
        67: iconst_0
        68: if_icmpge     35
        71: aload         5
        73: ifnonnull     96
        76: new           #333                // class scala/collection/immutable/VectorBuilder
        79: dup
        80: invokespecial #334                // Method scala/collection/immutable/VectorBuilder."<init>":()V
        83: astore        5
        85: aload         5
        87: aload         4
        89: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        92: invokevirtual #356                // Method scala/collection/immutable/VectorBuilder.addAll:(Lscala/collection/IterableOnce;)Lscala/collection/immutable/VectorBuilder;
        95: pop
        96: aload         5
        98: aload         7
       100: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       103: pop
       104: goto          35
       107: aload         5
       109: ifnonnull     117
       112: aload         4
       114: goto          137
       117: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
       120: dup
       121: aload_0
       122: invokevirtual #237                // Method originalHash:()I
       125: aload_0
       126: invokevirtual #101                // Method hash:()I
       129: aload         5
       131: invokevirtual #341                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
       134: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
       137: astore_3
       138: goto          168
       141: aload_1
       142: instanceof    #196                // class scala/collection/immutable/BitmapIndexedMapNode
       145: ifeq          159
       148: new           #358                // class java/lang/UnsupportedOperationException
       151: dup
       152: ldc_w         #360                // String Cannot concatenate a HashCollisionMapNode with a BitmapIndexedMapNode
       155: invokespecial #361                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       158: athrow
       159: new           #193                // class scala/MatchError
       162: dup
       163: aload_1
       164: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       167: athrow
       168: aload_3
       169: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 253 /* append */
          offset_delta = 23
          locals = [ top, class scala/collection/immutable/HashCollisionMapNode ]
        frame_type = 253 /* append */
          offset_delta = 11
          locals = [ class scala/collection/immutable/VectorBuilder, class scala/collection/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 60
          locals = [ class scala/Tuple2 ]
        frame_type = 250 /* chop */
          offset_delta = 10
        frame_type = 9 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/collection/immutable/MapNode, int, top, class scala/collection/immutable/HashCollisionMapNode ]
          stack = [ class scala/collection/immutable/HashCollisionMapNode ]
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 17 /* same */
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/collection/immutable/HashCollisionMapNode ]
      LineNumberTable:
        line 1965: 0
        line 1966: 13
        line 1967: 19
        line 1969: 23
        line 1970: 26
        line 1971: 35
        line 1972: 45
        line 1973: 57
        line 1974: 71
        line 1975: 76
        line 1976: 85
        line 1978: 96
        line 1981: 107
        line 1983: 141
        line 1985: 148
        line 1964: 159
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           57      50     7 nextPayload   Lscala/Tuple2;
           26     111     5 newContent   Lscala/collection/immutable/VectorBuilder;
           35     102     6  iter   Lscala/collection/Iterator;
            0     170     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     170     1  that   Lscala/collection/immutable/MapNode;
            0     170     2 shift   I
    Signature: #352                         // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;I)Lscala/collection/immutable/HashCollisionMapNode<TK;TV1;>;
    MethodParameters:
      Name                           Flags
      that                           final
      shift                          final

  public <V1 extends java.lang.Object> void mergeInto(scala.collection.immutable.MapNode<K, V1>, scala.collection.immutable.HashMapBuilder<K, V1>, int, scala.Function2<scala.Tuple2<K, V>, scala.Tuple2<K, V1>, scala.Tuple2<K, V1>>);
    descriptor: (Lscala/collection/immutable/MapNode;Lscala/collection/immutable/HashMapBuilder;ILscala/Function2;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=13, args_size=5
         0: aload_1
         1: instanceof    #2                  // class scala/collection/immutable/HashCollisionMapNode
         4: ifeq          168
         7: aload_1
         8: checkcast     #2                  // class scala/collection/immutable/HashCollisionMapNode
        11: astore        5
        13: aload_0
        14: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        17: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
        20: astore        6
        22: aload         5
        24: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        27: getstatic     #374                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        30: invokevirtual #378                // Method scala/reflect/ClassTag$.AnyRef:()Lscala/reflect/ClassTag;
        33: invokevirtual #382                // Method scala/collection/immutable/Vector.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
        36: checkcast     #268                // class "[Ljava/lang/Object;"
        39: astore        7
        41: aload         6
        43: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        48: ifeq          129
        51: aload         6
        53: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        58: checkcast     #58                 // class scala/Tuple2
        61: astore        8
        63: aload         8
        65: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        68: aload         7
        70: invokestatic  #386                // Method rightIndexOf$1:(Ljava/lang/Object;[Ljava/lang/Object;)I
        73: istore        9
        75: iload         9
        77: iconst_m1
        78: if_icmpne     91
        81: aload_2
        82: aload         8
        84: invokevirtual #391                // Method scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
        87: pop
        88: goto          41
        91: aload         7
        93: iload         9
        95: aaload
        96: checkcast     #58                 // class scala/Tuple2
        99: astore        10
       101: aload         7
       103: iload         9
       105: aconst_null
       106: aastore
       107: aload_2
       108: aload         4
       110: aload         8
       112: aload         10
       114: invokeinterface #303,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       119: checkcast     #58                 // class scala/Tuple2
       122: invokevirtual #391                // Method scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
       125: pop
       126: goto          41
       129: iconst_0
       130: istore        11
       132: iload         11
       134: aload         7
       136: arraylength
       137: if_icmpge     195
       140: aload         7
       142: iload         11
       144: aaload
       145: astore        12
       147: aload         12
       149: ifnull        162
       152: aload_2
       153: aload         12
       155: checkcast     #58                 // class scala/Tuple2
       158: invokevirtual #391                // Method scala/collection/immutable/HashMapBuilder.addOne:(Lscala/Tuple2;)Lscala/collection/immutable/HashMapBuilder;
       161: pop
       162: iinc          11, 1
       165: goto          132
       168: aload_1
       169: instanceof    #196                // class scala/collection/immutable/BitmapIndexedMapNode
       172: ifeq          186
       175: new           #393                // class java/lang/Exception
       178: dup
       179: ldc_w         #395                // String Cannot merge HashCollisionMapNode with BitmapIndexedMapNode
       182: invokespecial #396                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       185: athrow
       186: new           #193                // class scala/MatchError
       189: dup
       190: aload_1
       191: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       194: athrow
       195: return
      StackMapTable: number_of_entries = 8
        frame_type = 254 /* append */
          offset_delta = 41
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/collection/Iterator, class "[Ljava/lang/Object;" ]
        frame_type = 253 /* append */
          offset_delta = 49
          locals = [ class scala/Tuple2, int ]
        frame_type = 249 /* chop */
          offset_delta = 37
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/collection/immutable/MapNode, class scala/collection/immutable/HashMapBuilder, int, class scala/Function2, class scala/collection/immutable/HashCollisionMapNode, class scala/collection/Iterator, class "[Ljava/lang/Object;", top, top, top, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class java/lang/Object ]
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/collection/immutable/MapNode, class scala/collection/immutable/HashMapBuilder, int, class scala/Function2 ]
          stack = []
        frame_type = 17 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/collection/immutable/MapNode, class scala/collection/immutable/HashMapBuilder, int, class scala/Function2, class scala/collection/immutable/HashCollisionMapNode, class scala/collection/Iterator, class "[Ljava/lang/Object;", top, top, top, int ]
          stack = []
      LineNumberTable:
        line 1990: 0
        line 1991: 13
        line 1992: 22
        line 2004: 41
        line 2005: 51
        line 2006: 63
        line 2008: 75
        line 2009: 81
        line 2011: 91
        line 2012: 101
        line 2014: 107
        line 2004: 126
        line 2018: 129
        line 2019: 132
        line 2020: 140
        line 2021: 147
        line 2022: 162
        line 2019: 165
        line 2024: 168
        line 2025: 175
        line 1989: 186
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          101      25    10 rightPayload   Lscala/Tuple2;
           63      63     8 nextPayload   Lscala/Tuple2;
           75      51     9 index   I
          147      18    12  elem   Ljava/lang/Object;
           22     146     6  iter   Lscala/collection/Iterator;
           41     127     7 rightArray   [Ljava/lang/Object;
          132      36    11     i   I
            0     196     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0     196     1  that   Lscala/collection/immutable/MapNode;
            0     196     2 builder   Lscala/collection/immutable/HashMapBuilder;
            0     196     3 shift   I
            0     196     4 mergef   Lscala/Function2;
    Signature: #367                         // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/MapNode<TK;TV1;>;Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;ILscala/Function2<Lscala/Tuple2<TK;TV;>;Lscala/Tuple2<TK;TV1;>;Lscala/Tuple2<TK;TV1;>;>;)V
    MethodParameters:
      Name                           Flags
      that                           final
      builder                        final
      shift                          final
      mergef                         final

  public <V1 extends java.lang.Object> void buildTo(scala.collection.immutable.HashMapBuilder<K, V1>);
    descriptor: (Lscala/collection/immutable/HashMapBuilder;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=6, args_size=2
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: invokevirtual #46                 // Method scala/collection/immutable/Vector.iterator:()Lscala/collection/Iterator;
         7: astore_2
         8: aload_2
         9: invokeinterface #52,  1           // InterfaceMethod scala/collection/Iterator.hasNext:()Z
        14: ifeq          75
        17: aload_2
        18: invokeinterface #56,  1           // InterfaceMethod scala/collection/Iterator.next:()Ljava/lang/Object;
        23: checkcast     #58                 // class scala/Tuple2
        26: astore_3
        27: aload_3
        28: ifnull        46
        31: aload_3
        32: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        35: astore        4
        37: aload_3
        38: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        41: astore        5
        43: goto          55
        46: new           #193                // class scala/MatchError
        49: dup
        50: aconst_null
        51: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        54: athrow
        55: aload_1
        56: aload         4
        58: aload         5
        60: aload_0
        61: invokevirtual #237                // Method originalHash:()I
        64: aload_0
        65: invokevirtual #101                // Method hash:()I
        68: invokevirtual #406                // Method scala/collection/immutable/HashMapBuilder.addOne:(Ljava/lang/Object;Ljava/lang/Object;II)Lscala/collection/immutable/HashMapBuilder;
        71: pop
        72: goto          8
        75: return
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 8
          locals = [ class scala/collection/Iterator ]
        frame_type = 252 /* append */
          offset_delta = 37
          locals = [ class scala/Tuple2 ]
        frame_type = 253 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object ]
        frame_type = 248 /* chop */
          offset_delta = 19
      LineNumberTable:
        line 2030: 0
        line 2031: 8
        line 2032: 17
        line 2033: 55
        line 2031: 72
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37       9     4     k   Ljava/lang/Object;
           43       3     5     v   Ljava/lang/Object;
            8      67     2  iter   Lscala/collection/Iterator;
            0      76     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      76     1 builder   Lscala/collection/immutable/HashMapBuilder;
    Signature: #403                         // <V1:Ljava/lang/Object;>(Lscala/collection/immutable/HashMapBuilder<TK;TV1;>;)V
    MethodParameters:
      Name                           Flags
      builder                        final

  public scala.collection.immutable.MapNode<K, V> filterImpl(scala.Function1<scala.Tuple2<K, V>, java.lang.Object>, boolean);
    descriptor: (Lscala/Function1;Z)Lscala/collection/immutable/MapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=53, args_size=3
         0: aload_0
         1: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
         4: dup
         5: ifnonnull     10
         8: aconst_null
         9: athrow
        10: astore        8
        12: iconst_0
        13: istore        9
        15: aload         8
        17: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
        20: arraylength
        21: istore        10
        23: iload         9
        25: iload         10
        27: if_icmpeq     600
        30: aload_1
        31: aload         8
        33: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
        36: iload         9
        38: aaload
        39: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        44: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        47: iload_2
        48: if_icmpne     594
        51: iconst_0
        52: istore        11
        54: iload         9
        56: iconst_1
        57: iadd
        58: istore        12
        60: iload         12
        62: iload         10
        64: if_icmpge     103
        67: aload_1
        68: aload         8
        70: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
        73: iload         12
        75: aaload
        76: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        81: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        84: iload_2
        85: if_icmpeq     97
        88: iload         11
        90: iconst_1
        91: iload         12
        93: ishl
        94: ior
        95: istore        11
        97: iinc          12, 1
       100: goto          60
       103: iload         9
       105: iload         11
       107: invokestatic  #421                // Method java/lang/Integer.bitCount:(I)I
       110: iadd
       111: istore        13
       113: aload         8
       115: instanceof    #423                // class scala/collection/immutable/BigVector
       118: ifeq          499
       121: new           #333                // class scala/collection/immutable/VectorBuilder
       124: dup
       125: invokespecial #334                // Method scala/collection/immutable/VectorBuilder."<init>":()V
       128: astore        14
       130: iconst_0
       131: istore        15
       133: iload         15
       135: iload         9
       137: if_icmpge     160
       140: aload         14
       142: aload         8
       144: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
       147: iload         15
       149: aaload
       150: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       153: pop
       154: iinc          15, 1
       157: goto          133
       160: iload         9
       162: iconst_1
       163: iadd
       164: istore        15
       166: iload         9
       168: iload         13
       170: if_icmpeq     207
       173: iconst_1
       174: iload         15
       176: ishl
       177: iload         11
       179: iand
       180: iconst_0
       181: if_icmpeq     201
       184: aload         14
       186: aload         8
       188: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
       191: iload         15
       193: aaload
       194: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       197: pop
       198: iinc          9, 1
       201: iinc          15, 1
       204: goto          166
       207: aload         8
       209: checkcast     #423                // class scala/collection/immutable/BigVector
       212: aload_1
       213: iload_2
       214: aload         14
       216: invokedynamic #431,  0            // InvokeDynamic #2:apply:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;)Lscala/Function1;
       221: astore        20
       223: astore        19
       225: aload         19
       227: invokevirtual #432                // Method scala/collection/immutable/BigVector.vectorSliceCount:()I
       230: istore        21
       232: iconst_1
       233: istore        22
       235: iload         22
       237: iload         21
       239: if_icmpge     477
       242: getstatic     #248                // Field scala/collection/immutable/VectorStatics$.MODULE$:Lscala/collection/immutable/VectorStatics$;
       245: getstatic     #253                // Field scala/collection/immutable/VectorInline$.MODULE$:Lscala/collection/immutable/VectorInline$;
       248: pop
       249: iload         21
       251: iconst_2
       252: idiv
       253: istore        23
       255: iload         23
       257: iconst_1
       258: iadd
       259: iload         22
       261: iload         23
       263: isub
       264: invokestatic  #258                // Method java/lang/Math.abs:(I)I
       267: isub
       268: iconst_1
       269: isub
       270: aload         19
       272: iload         22
       274: invokevirtual #433                // Method scala/collection/immutable/BigVector.vectorSlice:(I)[Ljava/lang/Object;
       277: astore        26
       279: istore        25
       281: astore        24
       283: iconst_0
       284: istore        27
       286: aload         26
       288: arraylength
       289: istore        28
       291: iload         25
       293: iconst_0
       294: if_icmpne     340
       297: iload         27
       299: iload         28
       301: if_icmpge     465
       304: aload         26
       306: iload         27
       308: aaload
       309: astore        51
       311: aload_1
       312: aload         51
       314: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       319: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       322: iload_2
       323: if_icmpeq     334
       326: aload         14
       328: aload         51
       330: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       333: pop
       334: iinc          27, 1
       337: goto          297
       340: iload         25
       342: iconst_1
       343: isub
       344: istore        29
       346: iload         27
       348: iload         28
       350: if_icmpge     465
       353: aload         26
       355: iload         27
       357: aaload
       358: checkcast     #268                // class "[Ljava/lang/Object;"
       361: astore        43
       363: iconst_0
       364: istore        44
       366: aload         43
       368: arraylength
       369: istore        45
       371: iload         29
       373: iconst_0
       374: if_icmpne     420
       377: iload         44
       379: iload         45
       381: if_icmpge     456
       384: aload         43
       386: iload         44
       388: aaload
       389: astore        51
       391: aload_1
       392: aload         51
       394: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       399: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       402: iload_2
       403: if_icmpeq     414
       406: aload         14
       408: aload         51
       410: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       413: pop
       414: iinc          44, 1
       417: goto          377
       420: iload         29
       422: iconst_1
       423: isub
       424: istore        46
       426: iload         44
       428: iload         45
       430: if_icmpge     456
       433: aload         24
       435: iload         46
       437: aload         43
       439: iload         44
       441: aaload
       442: checkcast     #268                // class "[Ljava/lang/Object;"
       445: aload         20
       447: invokevirtual #272                // Method scala/collection/immutable/VectorStatics$.foreachRec:(I[Ljava/lang/Object;Lscala/Function1;)V
       450: iinc          44, 1
       453: goto          426
       456: aconst_null
       457: astore        43
       459: iinc          27, 1
       462: goto          346
       465: aconst_null
       466: astore        24
       468: aconst_null
       469: astore        26
       471: iinc          22, 1
       474: goto          235
       477: aconst_null
       478: astore        19
       480: aconst_null
       481: astore        20
       483: aconst_null
       484: astore        24
       486: aconst_null
       487: astore        26
       489: aload         14
       491: invokevirtual #341                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
       494: astore        41
       496: goto          921
       499: iload         13
       501: iconst_0
       502: if_icmpne     513
       505: getstatic     #438                // Field scala/collection/immutable/Vector0$.MODULE$:Lscala/collection/immutable/Vector0$;
       508: astore        41
       510: goto          921
       513: iload         13
       515: anewarray     #203                // class java/lang/Object
       518: astore        16
       520: aload         8
       522: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
       525: iconst_0
       526: aload         16
       528: iconst_0
       529: iload         9
       531: invokestatic  #444                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
       534: iload         9
       536: iconst_1
       537: iadd
       538: istore        17
       540: iload         9
       542: iload         13
       544: if_icmpeq     580
       547: iconst_1
       548: iload         17
       550: ishl
       551: iload         11
       553: iand
       554: iconst_0
       555: if_icmpeq     574
       558: aload         16
       560: iload         9
       562: aload         8
       564: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
       567: iload         17
       569: aaload
       570: aastore
       571: iinc          9, 1
       574: iinc          17, 1
       577: goto          540
       580: new           #446                // class scala/collection/immutable/Vector1
       583: dup
       584: aload         16
       586: invokespecial #449                // Method scala/collection/immutable/Vector1."<init>":([Ljava/lang/Object;)V
       589: astore        41
       591: goto          921
       594: iinc          9, 1
       597: goto          23
       600: aload         8
       602: instanceof    #423                // class scala/collection/immutable/BigVector
       605: ifeq          917
       608: new           #333                // class scala/collection/immutable/VectorBuilder
       611: dup
       612: invokespecial #334                // Method scala/collection/immutable/VectorBuilder."<init>":()V
       615: astore        18
       617: aload         18
       619: aload         8
       621: invokevirtual #415                // Method scala/collection/immutable/Vector.prefix1:()[Ljava/lang/Object;
       624: invokevirtual #452                // Method scala/collection/immutable/VectorBuilder.initFrom:([Ljava/lang/Object;)V
       627: aload         8
       629: checkcast     #423                // class scala/collection/immutable/BigVector
       632: aload_1
       633: iload_2
       634: aload         18
       636: invokedynamic #457,  0            // InvokeDynamic #3:apply:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;)Lscala/Function1;
       641: astore        31
       643: astore        30
       645: aload         30
       647: invokevirtual #432                // Method scala/collection/immutable/BigVector.vectorSliceCount:()I
       650: istore        32
       652: iconst_1
       653: istore        33
       655: iload         33
       657: iload         32
       659: if_icmpge     897
       662: getstatic     #248                // Field scala/collection/immutable/VectorStatics$.MODULE$:Lscala/collection/immutable/VectorStatics$;
       665: getstatic     #253                // Field scala/collection/immutable/VectorInline$.MODULE$:Lscala/collection/immutable/VectorInline$;
       668: pop
       669: iload         32
       671: iconst_2
       672: idiv
       673: istore        34
       675: iload         34
       677: iconst_1
       678: iadd
       679: iload         33
       681: iload         34
       683: isub
       684: invokestatic  #258                // Method java/lang/Math.abs:(I)I
       687: isub
       688: iconst_1
       689: isub
       690: aload         30
       692: iload         33
       694: invokevirtual #433                // Method scala/collection/immutable/BigVector.vectorSlice:(I)[Ljava/lang/Object;
       697: astore        37
       699: istore        36
       701: astore        35
       703: iconst_0
       704: istore        38
       706: aload         37
       708: arraylength
       709: istore        39
       711: iload         36
       713: iconst_0
       714: if_icmpne     760
       717: iload         38
       719: iload         39
       721: if_icmpge     885
       724: aload         37
       726: iload         38
       728: aaload
       729: astore        52
       731: aload_1
       732: aload         52
       734: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       739: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       742: iload_2
       743: if_icmpeq     754
       746: aload         18
       748: aload         52
       750: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       753: pop
       754: iinc          38, 1
       757: goto          717
       760: iload         36
       762: iconst_1
       763: isub
       764: istore        40
       766: iload         38
       768: iload         39
       770: if_icmpge     885
       773: aload         37
       775: iload         38
       777: aaload
       778: checkcast     #268                // class "[Ljava/lang/Object;"
       781: astore        47
       783: iconst_0
       784: istore        48
       786: aload         47
       788: arraylength
       789: istore        49
       791: iload         40
       793: iconst_0
       794: if_icmpne     840
       797: iload         48
       799: iload         49
       801: if_icmpge     876
       804: aload         47
       806: iload         48
       808: aaload
       809: astore        52
       811: aload_1
       812: aload         52
       814: invokeinterface #266,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       819: invokestatic  #418                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       822: iload_2
       823: if_icmpeq     834
       826: aload         18
       828: aload         52
       830: invokevirtual #338                // Method scala/collection/immutable/VectorBuilder.addOne:(Ljava/lang/Object;)Lscala/collection/immutable/VectorBuilder;
       833: pop
       834: iinc          48, 1
       837: goto          797
       840: iload         40
       842: iconst_1
       843: isub
       844: istore        50
       846: iload         48
       848: iload         49
       850: if_icmpge     876
       853: aload         35
       855: iload         50
       857: aload         47
       859: iload         48
       861: aaload
       862: checkcast     #268                // class "[Ljava/lang/Object;"
       865: aload         31
       867: invokevirtual #272                // Method scala/collection/immutable/VectorStatics$.foreachRec:(I[Ljava/lang/Object;Lscala/Function1;)V
       870: iinc          48, 1
       873: goto          846
       876: aconst_null
       877: astore        47
       879: iinc          38, 1
       882: goto          766
       885: aconst_null
       886: astore        35
       888: aconst_null
       889: astore        37
       891: iinc          33, 1
       894: goto          655
       897: aconst_null
       898: astore        30
       900: aconst_null
       901: astore        31
       903: aconst_null
       904: astore        35
       906: aconst_null
       907: astore        37
       909: aload         18
       911: invokevirtual #341                // Method scala/collection/immutable/VectorBuilder.result:()Lscala/collection/immutable/Vector;
       914: goto          919
       917: aload         8
       919: astore        41
       921: aload         41
       923: aconst_null
       924: astore        8
       926: aconst_null
       927: astore        14
       929: aconst_null
       930: astore        16
       932: aconst_null
       933: astore        18
       935: aconst_null
       936: astore        19
       938: aconst_null
       939: astore        20
       941: aconst_null
       942: astore        24
       944: aconst_null
       945: astore        26
       947: aconst_null
       948: astore        30
       950: aconst_null
       951: astore        31
       953: aconst_null
       954: astore        35
       956: aconst_null
       957: astore        37
       959: aconst_null
       960: astore        41
       962: astore_3
       963: aload_3
       964: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
       967: istore        4
       969: iload         4
       971: iconst_0
       972: if_icmpne     982
       975: getstatic     #462                // Field scala/collection/immutable/MapNode$.MODULE$:Lscala/collection/immutable/MapNode$;
       978: invokevirtual #466                // Method scala/collection/immutable/MapNode$.empty:()Lscala/collection/immutable/BitmapIndexedMapNode;
       981: areturn
       982: iload         4
       984: iconst_1
       985: if_icmpne     1089
       988: aload_3
       989: invokevirtual #469                // Method scala/collection/immutable/Vector.head:()Ljava/lang/Object;
       992: checkcast     #58                 // class scala/Tuple2
       995: astore        5
       997: aload         5
       999: ifnull        1019
      1002: aload         5
      1004: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
      1007: astore        6
      1009: aload         5
      1011: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
      1014: astore        7
      1016: goto          1028
      1019: new           #193                // class scala/MatchError
      1022: dup
      1023: aconst_null
      1024: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      1027: athrow
      1028: new           #196                // class scala/collection/immutable/BitmapIndexedMapNode
      1031: dup
      1032: getstatic     #201                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
      1035: pop
      1036: getstatic     #201                // Field scala/collection/immutable/Node$.MODULE$:Lscala/collection/immutable/Node$;
      1039: pop
      1040: aload_0
      1041: invokevirtual #101                // Method hash:()I
      1044: iconst_0
      1045: iushr
      1046: bipush        31
      1048: iand
      1049: istore        42
      1051: iconst_1
      1052: iload         42
      1054: ishl
      1055: iconst_0
      1056: iconst_2
      1057: anewarray     #203                // class java/lang/Object
      1060: dup
      1061: iconst_0
      1062: aload         6
      1064: aastore
      1065: dup
      1066: iconst_1
      1067: aload         7
      1069: aastore
      1070: iconst_1
      1071: newarray       int
      1073: dup
      1074: iconst_0
      1075: aload_0
      1076: invokevirtual #237                // Method originalHash:()I
      1079: iastore
      1080: iconst_1
      1081: aload_0
      1082: invokevirtual #101                // Method hash:()I
      1085: invokespecial #206                // Method scala/collection/immutable/BitmapIndexedMapNode."<init>":(II[Ljava/lang/Object;[III)V
      1088: areturn
      1089: iload         4
      1091: aload_0
      1092: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
      1095: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
      1098: if_icmpne     1103
      1101: aload_0
      1102: areturn
      1103: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
      1106: dup
      1107: aload_0
      1108: invokevirtual #237                // Method originalHash:()I
      1111: aload_0
      1112: invokevirtual #101                // Method hash:()I
      1115: aload_3
      1116: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
      1119: areturn
      StackMapTable: number_of_entries = 49
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Vector ]
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ int, int ]
        frame_type = 36 /* same */
        frame_type = 5 /* same */
        frame_type = 254 /* append */
          offset_delta = 29
          locals = [ int, class scala/collection/immutable/VectorBuilder, int ]
        frame_type = 26 /* same */
        frame_type = 5 /* same */
        frame_type = 34 /* same */
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 27
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, class "[Ljava/lang/Object;", int, int, top, top, top, top, top, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 29
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, class scala/collection/immutable/VectorBuilder, int, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 21
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int ]
          stack = []
        frame_type = 13 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, int, int, int, top, top, class "[Ljava/lang/Object;", int ]
          stack = []
        frame_type = 33 /* same */
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 13
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int ]
          stack = []
        frame_type = 5 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 54
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 61
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, top, top, top, top, top, top, top, top, top, top, top, top, class java/lang/Object ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 5
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int, int, top, top, top, top, top, top, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 254 /* append */
          offset_delta = 36
          locals = [ top, top, class java/lang/Object ]
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 252 /* append */
          offset_delta = 5
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 29
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int, int, class scala/collection/immutable/VectorStatics$, int, class "[Ljava/lang/Object;", int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 11
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, class scala/collection/immutable/VectorBuilder, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/BigVector, class scala/Function1, int, int ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 19
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int ]
          stack = []
        frame_type = 65 /* same_locals_1_stack_item */
          stack = [ class scala/collection/immutable/Vector ]
        frame_type = 255 /* full_frame */
          offset_delta = 1
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, top, top, top, top, top, class scala/collection/immutable/Vector, int, int, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, top, class scala/collection/immutable/Vector ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, class scala/collection/immutable/Vector, int, top, top, top, null, int, int, top, top, top, null, top, null, top, null, null, null, top, top, top, null, top, null, top, top, top, null, null, top, top, top, null, top, null, top, top, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 36
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, class scala/collection/immutable/Vector, int, class scala/Tuple2, top, top, null, int, int, top, top, top, null, top, null, top, null, null, null, top, top, top, null, top, null, top, top, top, null, null, top, top, top, null, top, null, top, top, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, class scala/collection/immutable/Vector, int, class scala/Tuple2, class java/lang/Object, class java/lang/Object, null, int, int, top, top, top, null, top, null, top, null, null, null, top, top, top, null, top, null, top, top, top, null, null, top, top, top, null, top, null, top, top, top, null ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 60
          locals = [ class scala/collection/immutable/HashCollisionMapNode, class scala/Function1, int, class scala/collection/immutable/Vector, int, top, top, top, null, int, int, top, top, top, null, top, null, top, null, null, null, top, top, top, null, top, null, top, top, top, null, null, top, top, top, null, top, null, top, top, top, null ]
          stack = []
        frame_type = 13 /* same */
      LineNumberTable:
        line 2038: 0
        line 2039: 963
        line 2040: 969
        line 2041: 975
        line 2042: 982
        line 2043: 988
        line 2044: 1028
        line 2045: 1089
        line 2046: 1103
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
         1009      10     6     k   Ljava/lang/Object;
         1016       3     7     v   Ljava/lang/Object;
          963     156     3 newContent   Lscala/collection/immutable/Vector;
          969     150     4 newContentLength   I
            0    1120     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0    1120     1  pred   Lscala/Function1;
            0    1120     2 flipped   Z
          130     369    14 filterImpl_b   Lscala/collection/immutable/VectorBuilder;
          133     366    15 filterImpl_k   I
          520      74    16 filterImpl_newData   [Ljava/lang/Object;
          540      54    17 filterImpl_k   I
           54     540    11 filterImpl_bitmap   I
           60     534    12 filterImpl_j   I
          113     481    13 filterImpl_newLen   I
          617     297    18 filterImpl_b   Lscala/collection/immutable/VectorBuilder;
           15     904     9 filterImpl_i   I
           23     896    10 filterImpl_len   I
           12     909     8 filterImpl_this   Lscala/collection/immutable/Vector;
          232     245    21 filterImpl_foreachRest_c   I
          235     242    22 filterImpl_foreachRest_i   I
          225     252    19 filterImpl_foreachRest_this   Lscala/collection/immutable/BigVector;
          225     252    20 filterImpl_foreachRest_f   Lscala/Function1;
          255      13    23 filterImpl_foreachRest_vectorSliceDim_c   I
          346     119    29 filterImpl_foreachRest_foreachRec_l   I
          286     179    27 filterImpl_foreachRest_foreachRec_i   I
          291     174    28 filterImpl_foreachRest_foreachRec_len   I
          283     182    24 filterImpl_foreachRest_foreachRec_this   Lscala/collection/immutable/VectorStatics$;
          283     182    25 filterImpl_foreachRest_foreachRec_level   I
          283     182    26 filterImpl_foreachRest_foreachRec_a   [Ljava/lang/Object;
          652     245    32 filterImpl_foreachRest_c   I
          655     242    33 filterImpl_foreachRest_i   I
          645     252    30 filterImpl_foreachRest_this   Lscala/collection/immutable/BigVector;
          645     252    31 filterImpl_foreachRest_f   Lscala/Function1;
          675      13    34 filterImpl_foreachRest_vectorSliceDim_c   I
          766     119    40 filterImpl_foreachRest_foreachRec_l   I
          706     179    38 filterImpl_foreachRest_foreachRec_i   I
          711     174    39 filterImpl_foreachRest_foreachRec_len   I
          703     182    35 filterImpl_foreachRest_foreachRec_this   Lscala/collection/immutable/VectorStatics$;
          703     182    36 filterImpl_foreachRest_foreachRec_level   I
          703     182    37 filterImpl_foreachRest_foreachRec_a   [Ljava/lang/Object;
          426      30    46 foreachRec_l   I
          366      90    44 foreachRec_i   I
          371      85    45 foreachRec_len   I
          363      93    43 foreachRec_a   [Ljava/lang/Object;
          846      30    50 foreachRec_l   I
          786      90    48 foreachRec_i   I
          791      85    49 foreachRec_len   I
          783      93    47 foreachRec_a   [Ljava/lang/Object;
    Signature: #409                         // (Lscala/Function1<Lscala/Tuple2<TK;TV;>;Ljava/lang/Object;>;Z)Lscala/collection/immutable/MapNode<TK;TV;>;
    MethodParameters:
      Name                           Flags
      pred                           final
      flipped                        final

  public scala.collection.immutable.HashCollisionMapNode<K, V> copy();
    descriptor: ()Lscala/collection/immutable/HashCollisionMapNode;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #2                  // class scala/collection/immutable/HashCollisionMapNode
         3: dup
         4: aload_0
         5: invokevirtual #237                // Method originalHash:()I
         8: aload_0
         9: invokevirtual #101                // Method hash:()I
        12: aload_0
        13: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        16: invokespecial #153                // Method "<init>":(IILscala/collection/immutable/Vector;)V
        19: areturn
      LineNumberTable:
        line 2049: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lscala/collection/immutable/HashCollisionMapNode;
    Signature: #494                         // ()Lscala/collection/immutable/HashCollisionMapNode<TK;TV;>;

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #358                // class java/lang/UnsupportedOperationException
         3: dup
         4: ldc_w         #497                // String Trie nodes do not support hashing.
         7: invokespecial #361                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        10: athrow
      LineNumberTable:
        line 2052: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public int cachedJavaKeySetHashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #500                // Method size:()I
         4: aload_0
         5: invokevirtual #101                // Method hash:()I
         8: imul
         9: ireturn
      LineNumberTable:
        line 2054: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public scala.collection.immutable.MapNode copy();
    descriptor: ()Lscala/collection/immutable/MapNode;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #503                // Method copy:()Lscala/collection/immutable/HashCollisionMapNode;
         4: areturn
      LineNumberTable:
        line 1812: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/immutable/HashCollisionMapNode;

  public scala.collection.immutable.MapNode concat(scala.collection.immutable.MapNode, int);
    descriptor: (Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/MapNode;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokevirtual #506                // Method concat:(Lscala/collection/immutable/MapNode;I)Lscala/collection/immutable/HashCollisionMapNode;
         6: areturn
      LineNumberTable:
        line 1812: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       7     1  that   Lscala/collection/immutable/MapNode;
            0       7     2 shift   I
    MethodParameters:
      Name                           Flags
      that                           final
      shift                          final

  public scala.collection.immutable.MapNode transform(scala.Function2);
    descriptor: (Lscala/Function2;)Lscala/collection/immutable/MapNode;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #509                // Method transform:(Lscala/Function2;)Lscala/collection/immutable/HashCollisionMapNode;
         5: areturn
      LineNumberTable:
        line 1812: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       6     1     f   Lscala/Function2;
    MethodParameters:
      Name                           Flags
      f                              final

  public java.lang.Object getPayload(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #230                // Method getPayload:(I)Lscala/Tuple2;
         5: areturn
      LineNumberTable:
        line 1812: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       6     1 index   I
    MethodParameters:
      Name                           Flags
      index                          final

  public scala.collection.immutable.Node getNode(int);
    descriptor: (I)Lscala/collection/immutable/Node;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #512                // Method getNode:(I)Lscala/collection/immutable/MapNode;
         5: areturn
      LineNumberTable:
        line 1812: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0       6     1 index   I
    MethodParameters:
      Name                           Flags
      index                          final

  public static final scala.runtime.Nothing$ $anonfun$apply$1();
    descriptor: ()Lscala/runtime/Nothing$;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #90                 // class java/util/NoSuchElementException
         3: dup
         4: invokespecial #94                 // Method java/util/NoSuchElementException."<init>":()V
         7: athrow
      LineNumberTable:
        line 1836: 0

  public static final boolean $anonfun$removed$1(java.lang.Object, scala.Tuple2);
    descriptor: (Ljava/lang/Object;Lscala/Tuple2;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         4: aload_0
         5: invokestatic  #67                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         8: ifeq          13
        11: iconst_1
        12: ireturn
        13: iconst_0
        14: ireturn
      StackMapTable: number_of_entries = 1
        frame_type = 13 /* same */
      LineNumberTable:
        line 1888: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0 key$1   Ljava/lang/Object;
            0      15     1 keyValuePair   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      key$1                          final
      keyValuePair                   final

  public static final java.lang.Object $anonfun$foreachEntry$1(scala.Function2, scala.Tuple2);
    descriptor: (Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=5, args_size=2
         0: aload_1
         1: ifnull        28
         4: aload_1
         5: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
         8: astore_3
         9: aload_1
        10: invokevirtual #111                // Method scala/Tuple2._2:()Ljava/lang/Object;
        13: astore        4
        15: aload_0
        16: aload_3
        17: aload         4
        19: invokeinterface #303,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        24: astore_2
        25: goto          37
        28: new           #193                // class scala/MatchError
        31: dup
        32: aconst_null
        33: invokespecial #194                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
        36: athrow
        37: aload_2
        38: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 28 /* same */
        frame_type = 254 /* append */
          offset_delta = 8
          locals = [ class java/lang/Object, class java/lang/Object, class java/lang/Object ]
      LineNumberTable:
        line 1920: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      19     3     k   Ljava/lang/Object;
           15      13     4     v   Ljava/lang/Object;
            0      39     0   f$1   Lscala/Function2;
            0      39     1  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      f$1                            final
      x0$1                           final

  private static final int rightIndexOf$1(java.lang.Object, java.lang.Object[]);
    descriptor: (Ljava/lang/Object;[Ljava/lang/Object;)I
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=4, args_size=2
         0: iconst_0
         1: istore_2
         2: iload_2
         3: aload_1
         4: arraylength
         5: if_icmpge     38
         8: aload_1
         9: iload_2
        10: aaload
        11: astore_3
        12: aload_3
        13: ifnull        32
        16: aload_3
        17: checkcast     #58                 // class scala/Tuple2
        20: invokevirtual #61                 // Method scala/Tuple2._1:()Ljava/lang/Object;
        23: aload_0
        24: invokestatic  #67                 // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        27: ifeq          32
        30: iload_2
        31: ireturn
        32: iinc          2, 1
        35: goto          2
        38: iconst_m1
        39: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 252 /* append */
          offset_delta = 29
          locals = [ class java/lang/Object ]
        frame_type = 250 /* chop */
          offset_delta = 5
      LineNumberTable:
        line 1995: 0
        line 1996: 2
        line 1997: 8
        line 1998: 12
        line 1999: 32
        line 1996: 35
        line 2001: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12      23     3  elem   Ljava/lang/Object;
            2      37     2     i   I
            0      40     0   key   Ljava/lang/Object;
            0      40     1 rightArray$1   [Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key                            final
      rightArray$1                   final

  public scala.collection.immutable.HashCollisionMapNode(int, int, scala.collection.immutable.Vector<scala.Tuple2<K, V>>);
    descriptor: (IILscala/collection/immutable/Vector;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=4
         0: aload_0
         1: iload_1
         2: putfield      #23                 // Field originalHash:I
         5: aload_0
         6: iload_2
         7: putfield      #27                 // Field hash:I
        10: aload_0
        11: aload_3
        12: putfield      #31                 // Field content:Lscala/collection/immutable/Vector;
        15: aload_0
        16: invokespecial #523                // Method scala/collection/immutable/MapNode."<init>":()V
        19: getstatic     #528                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        22: aload_0
        23: invokevirtual #40                 // Method content:()Lscala/collection/immutable/Vector;
        26: invokevirtual #75                 // Method scala/collection/immutable/Vector.length:()I
        29: iconst_2
        30: if_icmplt     37
        33: iconst_1
        34: goto          38
        37: iconst_0
        38: invokevirtual #532                // Method scala/Predef$.require:(Z)V
        41: invokestatic  #537                // Method scala/runtime/Statics.releaseFence:()V
        44: return
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 37
          locals = [ class scala/collection/immutable/HashCollisionMapNode, int, int, class scala/collection/immutable/Vector ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class scala/collection/immutable/HashCollisionMapNode, int, int, class scala/collection/immutable/Vector ]
          stack = [ class scala/Predef$, int ]
      LineNumberTable:
        line 1813: 0
        line 1814: 5
        line 1815: 10
        line 1816: 15
        line 1820: 19
        line 1822: 41
        line 1812: 44
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lscala/collection/immutable/HashCollisionMapNode;
            0      45     1 originalHash   I
            0      45     2  hash   I
            0      45     3 content   Lscala/collection/immutable/Vector;
    Signature: #522                         // (IILscala/collection/immutable/Vector<Lscala/Tuple2<TK;TV;>;>;)V
    MethodParameters:
      Name                           Flags
      originalHash                   final
      hash                           final
      content                        final

  public static final java.lang.Object $anonfun$removed$1$adapted(java.lang.Object, scala.Tuple2);
    descriptor: (Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #539                // Method $anonfun$removed$1:(Ljava/lang/Object;Lscala/Tuple2;)Z
         5: invokestatic  #543                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 1888: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 key$1   Ljava/lang/Object;
            0       9     1 keyValuePair   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      key$1                          final
      keyValuePair                   final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #555,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #14= #11 of #13;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
Signature: #3                           // <K:Ljava/lang/Object;V:Ljava/lang/Object;>Lscala/collection/immutable/MapNode<TK;TV;>;
SourceFile: "HashMap.scala"
RuntimeVisibleAnnotations:
  0: #7(#8=s#9)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\tec\u0001\u0002\u0015*\rAB\u0001\"\u0012\u0001\u0003\u0006\u0004%\tA\u0012\u0005\t\u0015\u0002\u0011\t\u0011)A\u0005\u000f\"A1\n\u0001BC\u0002\u0013\u0005a\t\u0003\u0005M\u0001\t\u0005\t\u0015!\u0003H\u0011!i\u0005A!a\u0001\n\u0003q\u0005\u0002C0\u0001\u0005\u0003\u0007I\u0011\u00011\t\u0011\u0019\u0004!\u0011!Q!\n=CQa\u001a\u0001\u0005\u0002!Da!\u001c\u0001\u0005\u0002%r\u0007\"B9\u0001\t\u00031\u0005\"\u0002:\u0001\t\u0003\u0019\b\"B=\u0001\t\u0003Q\bbBA\u0003\u0001\u0011\u0005\u0013q\u0001\u0005\b\u0003\'\u0001A\u0011AA\u000b\u0011\u001d\t\u0019\u0004\u0001C!\u0003kAq!!\u0012\u0001\t\u0003\t9\u0005C\u0004\u0002Z\u0001!\t!a\u0017\t\u000f\u0005M\u0004\u0001\"\u0001\u0002v!9\u0011q\u0011\u0001\u0005\u0002\u0005%\u0005BBAF\u0001\u0011\u0005a\tC\u0004\u0002\u000e\u0002!\t!a$\t\u000f\u0005U\u0005\u0001\"\u0001\u0002\n\"1\u0011q\u0013\u0001\u0005\u0002\u0019Cq!!\'\u0001\t\u0003\tY\nC\u0004\u0002 \u0002!\t!!)\t\u000f\u0005\u0015\u0006\u0001\"\u0001\u0002(\"9\u00111\u0016\u0001\u0005B\u00055\u0006bBAY\u0001\u0011\u0005\u00111\u0017\u0005\b\u0003\u000b\u0004A\u0011AAd\u0011\u001d\t9\u000e\u0001C!\u00033Dq!a9\u0001\t\u0003\n)\u000fC\u0004\u0002v\u0002!\t%a>\t\u000f\u0005u\b\u0001\"\u0011\u0002\u0000\"9!q\u0002\u0001\u0005B\tE\u0001b\u0002B\u001a\u0001\u0011\u0005#Q\u0007\u0005\b\u0005\u0003\u0002A\u0011\tB\"\u0011\u001d\u0011y\u0005\u0001C!\u0005#BqAa\u0015\u0001\t\u0003\u0012)\u0006\u0003\u0004\u0003X\u0001!\tE\u0012\u0002\u0015\u0011\u0006\u001c\bnQ8mY&\u001c\u0018n\u001c8NCBtu\u000eZ3\u000b\u0005)Z\u0013!C5n[V$\u0018M\u00197f\u0015\taS&\u0001\u0006d_2dWm\u0019;j_:T\u0011AL\u0001\u0006g\u000e\fG.Y\u0002\u0001+\r\t\u0004hQ\n\u0003\u0001I\u0002Ba\r\u001b7\u00056\t\u0011&\u0003\u00026S\t9Q*\u00199O_\u0012,\u0007CA\u001c9\u0019\u0001!Q!\u000f\u0001C\u0002i\u0012\u0011aS\t\u0003w}\u0002\"\u0001P\u001f\u000e\u00035J!AP\u0017\u0003\u000f9{G\u000f[5oOB\u0011A\bQ\u0005\u0003\u00036\u00121!\u00118z!\t94\t\u0002\u0004E\u0001\u0011\u0015\rA\u000f\u0002\u0002-\u0006aqN]5hS:\fG\u000eS1tQV\tq\t\u0005\u0002=\u0011&\u0011\u0011*\f\u0002\u0004\u0013:$\u0018!D8sS\u001eLg.\u00197ICND\u0007%\u0001\u0003iCND\u0017!\u00025bg\"\u0004\u0013aB2p]R,g\u000e^\u000b\u0002\u001fB\u00191\u0007\u0015*\n\u0005EK#A\u0002,fGR|\'\u000f\u0005\u0003=\'Z*\u0016B\u0001+.\u0005\u0019!V\u000f\u001d7fe)\u0012!IV\u0016\u0002/B\u0011\u0001,X\u0007\u00023*\u0011!lW\u0001\nk:\u001c\u0007.Z2lK\u0012T!\u0001X\u0017\u0002\u0015\u0005tgn\u001c;bi&|g.\u0003\u0002_3\n\tRO\\2iK\u000e\\W\r\u001a,be&\fgnY3\u0002\u0017\r|g\u000e^3oi~#S-\u001d\u000b\u0003C\u0012\u0004\"\u0001\u00102\n\u0005\rl#\u0001B+oSRDq!\u001a\u0004\u0002\u0002\u0003\u0007q*A\u0002yIE\n\u0001bY8oi\u0016tG\u000fI\u0001\u0007y%t\u0017\u000e\u001e \u0015\t%T7\u000e\u001c\t\u0005g\u00011$\tC\u0003F\u0011\u0001\u0007q\tC\u0003L\u0011\u0001\u0007q\tC\u0003N\u0011\u0001\u0007q*A\u0004j]\u0012,\u0007p\u00144\u0015\u0005\u001d{\u0007\"\u00029\n\u0001\u0004y\u0014aA6fs\u0006!1/\u001b>f\u0003\u0015\t\u0007\u000f\u001d7z)\u0015\u0011E/\u001e<x\u0011\u0015\u00018\u00021\u00017\u0011\u0015)5\u00021\u0001H\u0011\u0015Y5\u00021\u0001H\u0011\u0015A8\u00021\u0001H\u0003\u0015\u0019\b.\u001b4u\u0003\r9W\r\u001e\u000b\bwz|\u0018\u0011AA\u0002!\raDPQ\u0005\u0003{6\u0012aa\u00149uS>t\u0007\"\u00029\r\u0001\u00041\u0004\"B#\r\u0001\u00049\u0005\"B&\r\u0001\u00049\u0005\"\u0002=\r\u0001\u00049\u0015\u0001C4fiR+\b\u000f\\3\u0015\u0015\u0005%\u00111BA\u0007\u0003\u001f\t\t\u0002\u0005\u0003=\'Z\u0012\u0005\"\u00029\u000e\u0001\u00041\u0004\"B#\u000e\u0001\u00049\u0005\"B&\u000e\u0001\u00049\u0005\"\u0002=\u000e\u0001\u00049\u0015!C4fi>\u0013X\t\\:f+\u0011\t9\"a\u0007\u0015\u0019\u0005e\u0011\u0011EA\u0012\u0003K\t9#!\u000b\u0011\u0007]\nY\u0002B\u0004\u0002\u001e9\u0011\r!a\b\u0003\u0005Y\u000b\u0014C\u0001\"@\u0011\u0015\u0001h\u00021\u00017\u0011\u0015)e\u00021\u0001H\u0011\u0015Ye\u00021\u0001H\u0011\u0015Ah\u00021\u0001H\u0011!\tYC\u0004CA\u0002\u00055\u0012!\u00014\u0011\u000bq\ny#!\u0007\n\u0007\u0005ERF\u0001\u0005=Eft\u0017-\\3?\u0003-\u0019wN\u001c;bS:\u001c8*Z=\u0015\u0015\u0005]\u0012QHA \u0003\u0003\n\u0019\u0005E\u0002=\u0003sI1!a\u000f.\u0005\u001d\u0011un\u001c7fC:DQ\u0001]\bA\u0002YBQ!R\bA\u0002\u001dCQaS\bA\u0002\u001dCQ\u0001_\bA\u0002\u001d\u000b\u0001bY8oi\u0006Lgn]\u000b\u0005\u0003\u0013\n\u0019\u0006\u0006\u0006\u00028\u0005-\u0013QJA+\u0003/BQ\u0001\u001d\tA\u0002YBq!a\u0014\u0011\u0001\u0004\t\t&A\u0003wC2,X\rE\u00028\u0003\'\"q!!\b\u0011\u0005\u0004\ty\u0002C\u0003L!\u0001\u0007q\tC\u0003y!\u0001\u0007q)A\u0004va\u0012\fG/\u001a3\u0016\t\u0005u\u00131\r\u000b\u000f\u0003?\n)\'a\u001a\u0002j\u0005-\u0014QNA8!\u0015\u0019DGNA1!\r9\u00141\r\u0003\b\u0003;\t\"\u0019AA\u0010\u0011\u0015\u0001\u0018\u00031\u00017\u0011\u001d\ty%\u0005a\u0001\u0003CBQ!R\tA\u0002\u001dCQaS\tA\u0002\u001dCQ\u0001_\tA\u0002\u001dCq!!\u001d\u0012\u0001\u0004\t9$\u0001\u0007sKBd\u0017mY3WC2,X-A\u0004sK6|g/\u001a3\u0016\t\u0005]\u0014Q\u0010\u000b\u000b\u0003s\ny(!!\u0002\u0004\u0006\u0015\u0005#B\u001a5m\u0005m\u0004cA\u001c\u0002~\u00119\u0011Q\u0004\nC\u0002\u0005}\u0001\"\u00029\u0013\u0001\u00041\u0004\"B#\u0013\u0001\u00049\u0005\"B&\u0013\u0001\u00049\u0005\"\u0002=\u0013\u0001\u00049\u0015\u0001\u00035bg:{G-Z:\u0016\u0005\u0005]\u0012!\u00038pI\u0016\f%/\u001b;z\u0003\u001d9W\r\u001e(pI\u0016$2AMAI\u0011\u0019\t\u0019*\u0006a\u0001\u000f\u0006)\u0011N\u001c3fq\u0006Q\u0001.Y:QCfdw.\u00193\u0002\u0019A\f\u0017\u0010\\8bI\u0006\u0013\u0018\u000e^=\u0002\r\u001d,GoS3z)\r1\u0014Q\u0014\u0005\u0007\u0003\'C\u0002\u0019A$\u0002\u0011\u001d,GOV1mk\u0016$2AQAR\u0011\u0019\t\u0019*\u0007a\u0001\u000f\u0006Qq-\u001a;QCfdw.\u00193\u0015\t\u0005%\u0011\u0011\u0016\u0005\u0007\u0003\'S\u0002\u0019A$\u0002\u000f\u001d,G\u000fS1tQR\u0019q)a,\t\r\u0005M5\u00041\u0001H\u0003\u001d1wN]3bG\",B!!.\u0002BR\u0019\u0011-a.\t\u000f\u0005-B\u00041\u0001\u0002:B9A(a/\u0002\n\u0005}\u0016bAA_[\tIa)\u001e8di&|g.\r\t\u0004o\u0005\u0005GABAb9\t\u0007!HA\u0001V\u000311wN]3bG\",e\u000e\u001e:z+\u0011\tI-!6\u0015\u0007\u0005\fY\rC\u0004\u0002,u\u0001\r!!4\u0011\u000fq\nyM\u000e\"\u0002T&\u0019\u0011\u0011[\u0017\u0003\u0013\u0019+hn\u0019;j_:\u0014\u0004cA\u001c\u0002V\u00121\u00111Y\u000fC\u0002i\nqBZ8sK\u0006\u001c\u0007nV5uQ\"\u000b7\u000f\u001b\u000b\u0004C\u0006m\u0007bBA\u0016=\u0001\u0007\u0011Q\u001c\t\by\u0005}gGQ$b\u0013\r\t\t/\f\u0002\n\rVt7\r^5p]N\n\u0011\u0002\u001e:b]N4wN]7\u0016\t\u0005\u001d\u0018Q\u001e\u000b\u0005\u0003S\f\t\u0010E\u00034\u0001Y\nY\u000fE\u00028\u0003[$a!a< \u0005\u0004Q$!A,\t\u000f\u0005-r\u00041\u0001\u0002tB9A(a47\u0005\u0006-\u0018AB3rk\u0006d7\u000f\u0006\u0003\u00028\u0005e\bBBA~A\u0001\u0007q(\u0001\u0003uQ\u0006$\u0018AB2p]\u000e\fG/\u0006\u0003\u0003\u0002\t\u001dAC\u0002B\u0002\u0005\u0013\u0011i\u0001E\u00034\u0001Y\u0012)\u0001E\u00028\u0005\u000f!q!!\b\"\u0005\u0004\ty\u0002C\u0004\u0002|\u0006\u0002\rAa\u0003\u0011\u000bM\"dG!\u0002\t\u000ba\f\u0003\u0019A$\u0002\u00135,\'oZ3J]R|W\u0003\u0002B\n\u0005C!\u0002B!\u0006\u0003$\t\u001d\"\u0011\u0007\u000b\u0004C\n]\u0001b\u0002B\rE\u0001\u0007!1D\u0001\u0007[\u0016\u0014x-\u001a4\u0011\u0013q\ny-!\u0003\u0003\u001e\tu\u0001#\u0002\u001fTm\t}\u0001cA\u001c\u0003\"\u00119\u0011Q\u0004\u0012C\u0002\u0005}\u0001bBA~E\u0001\u0007!Q\u0005\t\u0006gQ2$q\u0004\u0005\b\u0005S\u0011\u0003\u0019\u0001B\u0016\u0003\u001d\u0011W/\u001b7eKJ\u0004ba\rB\u0017m\t}\u0011b\u0001B\u0018S\tq\u0001*Y:i\u001b\u0006\u0004()^5mI\u0016\u0014\b\"\u0002=#\u0001\u00049\u0015a\u00022vS2$Gk\\\u000b\u0005\u0005o\u0011y\u0004F\u0002b\u0005sAqA!\u000b$\u0001\u0004\u0011Y\u0004\u0005\u00044\u0005[1$Q\b\t\u0004o\t}BaBA\u000fG\t\u0007\u0011qD\u0001\u000bM&dG/\u001a:J[BdG#\u0002\u001a\u0003F\t-\u0003b\u0002B$I\u0001\u0007!\u0011J\u0001\u0005aJ,G\rE\u0004=\u0003w\u000bI!a\u000e\t\u000f\t5C\u00051\u0001\u00028\u00059a\r\\5qa\u0016$\u0017\u0001B2paf$\u0012![\u0001\tQ\u0006\u001c\bnQ8eKR\tq)\u0001\rdC\u000eDW\r\u001a&bm\u0006\\U-_*fi\"\u000b7\u000f[\"pI\u0016\u0004"
    )
BootstrapMethods:
  0: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #165 (Ljava/lang/Object;)Ljava/lang/Object;
      #170 REF_invokeStatic scala/collection/immutable/HashCollisionMapNode.$anonfun$removed$1$adapted:(Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #172 (Lscala/Tuple2;)Ljava/lang/Object;
      #173 5
      #174 1
      #172 (Lscala/Tuple2;)Ljava/lang/Object;
  1: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #165 (Ljava/lang/Object;)Ljava/lang/Object;
      #295 REF_invokeStatic scala/collection/immutable/HashCollisionMapNode.$anonfun$foreachEntry$1:(Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
      #172 (Lscala/Tuple2;)Ljava/lang/Object;
      #173 5
      #174 1
      #172 (Lscala/Tuple2;)Ljava/lang/Object;
  2: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #165 (Ljava/lang/Object;)Ljava/lang/Object;
      #428 REF_invokeStatic scala/collection/immutable/Vector.$anonfun$filterImpl$1:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
      #165 (Ljava/lang/Object;)Ljava/lang/Object;
      #174 1
  3: #181 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #165 (Ljava/lang/Object;)Ljava/lang/Object;
      #456 REF_invokeStatic scala/collection/immutable/Vector.$anonfun$filterImpl$2:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
      #165 (Ljava/lang/Object;)Ljava/lang/Object;
      #174 1
  4: #552 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #295 REF_invokeStatic scala/collection/immutable/HashCollisionMapNode.$anonfun$foreachEntry$1:(Lscala/Function2;Lscala/Tuple2;)Ljava/lang/Object;
      #170 REF_invokeStatic scala/collection/immutable/HashCollisionMapNode.$anonfun$removed$1$adapted:(Ljava/lang/Object;Lscala/Tuple2;)Ljava/lang/Object;
      #428 REF_invokeStatic scala/collection/immutable/Vector.$anonfun$filterImpl$1:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
      #456 REF_invokeStatic scala/collection/immutable/Vector.$anonfun$filterImpl$2:(Lscala/Function1;ZLscala/collection/immutable/VectorBuilder;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0xEA (unknown attribute)
   01 01 00 2E 02 01 02 02 01 01 23 01 24 01 02 03
   02 04 01 00 A6 00 A7 01 00 5B 00 97 01 00 4C 00
   4D 01 01 91 01 92 01 01 F2 00 15 01 01 5E 01 5F
   01 01 5E 01 F8 01 00 89 00 8A 01 00 86 00 87 01
   00 12 00 1C 01 00 20 00 21 01 01 EC 01 ED 01 01
   EC 01 F5 01 00 40 01 5C 01 01 97 01 98 01 00 EE
   00 EF 01 01 20 01 21 01 01 34 01 35 01 00 50 00
   51 01 00 EA 00 EB 01 00 E1 00 6A 01 00 D5 00 D6
   01 00 D5 01 FE 01 00 7D 00 7E 01 00 E3 00 6A 01
   00 E3 00 E4 01 00 7A 00 7B 01 00 E7 00 6A 01 00
   D3 00 32 01 00 DF 00 32 01 00 11 00 15 01 01 EF
   00 15 01 00 24 00 25 01 01 6D 01 6E 01 00 D4 00
   15 01 00 0F 00 15 01 00 E0 00 15 01 00 9F 00 A0
   01 01 7F 01 80 01 00 48 00 15 01 01 44 01 45 01
   01 44 01 FB 01 00 8D 00 8E 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
