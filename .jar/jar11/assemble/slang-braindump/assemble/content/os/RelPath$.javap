Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/RelPath$.class
  Last modified May 29, 2022; size 6935 bytes
  SHA-256 checksum c90be1eb7973dd6d49711b788573d66ee7e99f0334be88f6ebba9f94a45ed031
  Compiled from "Path.scala"
public final class os.RelPath$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // os/RelPath$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 15, attributes: 5
Constant pool:
    #1 = Utf8               os/RelPath$
    #2 = Class              #1            // os/RelPath$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               Path.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               scala/math/Ordering$Implicits$
   #12 = Class              #11           // scala/math/Ordering$Implicits$
   #13 = Utf8               scala/math/Ordering
   #14 = Class              #13           // scala/math/Ordering
   #15 = Utf8               Implicits$
   #16 = Utf8               scala/math/Ordering$Int$
   #17 = Class              #16           // scala/math/Ordering$Int$
   #18 = Utf8               Int$
   #19 = Utf8               scala/math/Ordering$String$
   #20 = Class              #19           // scala/math/Ordering$String$
   #21 = Utf8               String$
   #22 = Utf8               MODULE$
   #23 = Utf8               Los/RelPath$;
   #24 = Utf8               relPathOrdering
   #25 = Utf8               Lscala/math/Ordering;
   #26 = Utf8               Lscala/math/Ordering<Los/RelPath;>;
   #27 = Utf8               up
   #28 = Utf8               Los/RelPath;
   #29 = Utf8               rel
   #30 = Utf8               <clinit>
   #31 = Utf8               ()V
   #32 = Utf8               <init>
   #33 = NameAndType        #32:#31       // "<init>":()V
   #34 = Methodref          #2.#33        // os/RelPath$."<init>":()V
   #35 = NameAndType        #22:#23       // MODULE$:Los/RelPath$;
   #36 = Fieldref           #2.#35        // os/RelPath$.MODULE$:Los/RelPath$;
   #37 = Utf8               scala/package$
   #38 = Class              #37           // scala/package$
   #39 = Utf8               Lscala/package$;
   #40 = NameAndType        #22:#39       // MODULE$:Lscala/package$;
   #41 = Fieldref           #38.#40       // scala/package$.MODULE$:Lscala/package$;
   #42 = Utf8               Ordering
   #43 = Utf8               ()Lscala/math/Ordering$;
   #44 = NameAndType        #42:#43       // Ordering:()Lscala/math/Ordering$;
   #45 = Methodref          #38.#44       // scala/package$.Ordering:()Lscala/math/Ordering$;
   #46 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #47 = MethodType         #46           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #48 = Utf8               $anonfun$relPathOrdering$1
   #49 = Utf8               (Los/RelPath;)Lscala/Tuple3;
   #50 = NameAndType        #48:#49       // $anonfun$relPathOrdering$1:(Los/RelPath;)Lscala/Tuple3;
   #51 = Methodref          #2.#50        // os/RelPath$.$anonfun$relPathOrdering$1:(Los/RelPath;)Lscala/Tuple3;
   #52 = MethodHandle       6:#51         // REF_invokeStatic os/RelPath$.$anonfun$relPathOrdering$1:(Los/RelPath;)Lscala/Tuple3;
   #53 = MethodType         #49           //  (Los/RelPath;)Lscala/Tuple3;
   #54 = Integer            5
   #55 = Integer            1
   #56 = Utf8               java/lang/invoke/LambdaMetafactory
   #57 = Class              #56           // java/lang/invoke/LambdaMetafactory
   #58 = Utf8               altMetafactory
   #59 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #60 = NameAndType        #58:#59       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #61 = Methodref          #57.#60       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #62 = MethodHandle       6:#61         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #63 = Utf8               apply
   #64 = Utf8               ()Lscala/Function1;
   #65 = NameAndType        #63:#64       // apply:()Lscala/Function1;
   #66 = InvokeDynamic      #0:#65        // #0:apply:()Lscala/Function1;
   #67 = Utf8               scala/math/Ordering$
   #68 = Class              #67           // scala/math/Ordering$
   #69 = Utf8               Lscala/math/Ordering$;
   #70 = NameAndType        #22:#69       // MODULE$:Lscala/math/Ordering$;
   #71 = Fieldref           #68.#70       // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
   #72 = Utf8               Lscala/math/Ordering$Int$;
   #73 = NameAndType        #22:#72       // MODULE$:Lscala/math/Ordering$Int$;
   #74 = Fieldref           #17.#73       // scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
   #75 = Utf8               Lscala/math/Ordering$Implicits$;
   #76 = NameAndType        #22:#75       // MODULE$:Lscala/math/Ordering$Implicits$;
   #77 = Fieldref           #12.#76       // scala/math/Ordering$Implicits$.MODULE$:Lscala/math/Ordering$Implicits$;
   #78 = Utf8               Lscala/math/Ordering$String$;
   #79 = NameAndType        #22:#78       // MODULE$:Lscala/math/Ordering$String$;
   #80 = Fieldref           #20.#79       // scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
   #81 = Utf8               seqOrdering
   #82 = Utf8               (Lscala/math/Ordering;)Lscala/math/Ordering;
   #83 = NameAndType        #81:#82       // seqOrdering:(Lscala/math/Ordering;)Lscala/math/Ordering;
   #84 = Methodref          #12.#83       // scala/math/Ordering$Implicits$.seqOrdering:(Lscala/math/Ordering;)Lscala/math/Ordering;
   #85 = Utf8               Tuple3
   #86 = Utf8               (Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
   #87 = NameAndType        #85:#86       // Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
   #88 = Methodref          #68.#87       // scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
   #89 = Utf8               by
   #90 = Utf8               (Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
   #91 = NameAndType        #89:#90       // by:(Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
   #92 = Methodref          #68.#91       // scala/math/Ordering$.by:(Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
   #93 = NameAndType        #24:#25       // relPathOrdering:Lscala/math/Ordering;
   #94 = Fieldref           #2.#93        // os/RelPath$.relPathOrdering:Lscala/math/Ordering;
   #95 = Utf8               os/RelPath
   #96 = Class              #95           // os/RelPath
   #97 = Utf8               os/Internals$
   #98 = Class              #97           // os/Internals$
   #99 = Utf8               Los/Internals$;
  #100 = NameAndType        #22:#99       // MODULE$:Los/Internals$;
  #101 = Fieldref           #98.#100      // os/Internals$.MODULE$:Los/Internals$;
  #102 = Utf8               emptyStringArray
  #103 = Utf8               ()[Ljava/lang/String;
  #104 = NameAndType        #102:#103     // emptyStringArray:()[Ljava/lang/String;
  #105 = Methodref          #98.#104      // os/Internals$.emptyStringArray:()[Ljava/lang/String;
  #106 = Utf8               ([Ljava/lang/String;I)V
  #107 = NameAndType        #32:#106      // "<init>":([Ljava/lang/String;I)V
  #108 = Methodref          #96.#107      // os/RelPath."<init>":([Ljava/lang/String;I)V
  #109 = NameAndType        #27:#28       // up:Los/RelPath;
  #110 = Fieldref           #2.#109       // os/RelPath$.up:Los/RelPath;
  #111 = NameAndType        #29:#28       // rel:Los/RelPath;
  #112 = Fieldref           #2.#111       // os/RelPath$.rel:Los/RelPath;
  #113 = Utf8               (Ljava/lang/Object;Los/PathConvertible;)Los/RelPath;
  #114 = Utf8               <T:Ljava/lang/Object;>(TT;Los/PathConvertible<TT;>;)Los/RelPath;
  #115 = Utf8               f0
  #116 = Utf8               evidence$2
  #117 = Utf8               scala/Predef$
  #118 = Class              #117          // scala/Predef$
  #119 = Utf8               Lscala/Predef$;
  #120 = NameAndType        #22:#119      // MODULE$:Lscala/Predef$;
  #121 = Fieldref           #118.#120     // scala/Predef$.MODULE$:Lscala/Predef$;
  #122 = Utf8               implicitly
  #123 = NameAndType        #122:#46      // implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
  #124 = Methodref          #118.#123     // scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
  #125 = Utf8               os/PathConvertible
  #126 = Class              #125          // os/PathConvertible
  #127 = Utf8               (Ljava/lang/Object;)Ljava/nio/file/Path;
  #128 = NameAndType        #63:#127      // apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
  #129 = InterfaceMethodref #126.#128     // os/PathConvertible.apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
  #130 = Utf8               java/nio/file/Path
  #131 = Class              #130          // java/nio/file/Path
  #132 = Utf8               isAbsolute
  #133 = Utf8               ()Z
  #134 = NameAndType        #132:#133     // isAbsolute:()Z
  #135 = InterfaceMethodref #131.#134     // java/nio/file/Path.isAbsolute:()Z
  #136 = Utf8               ()Ljava/lang/Object;
  #137 = MethodType         #136          //  ()Ljava/lang/Object;
  #138 = Utf8               $anonfun$apply$1
  #139 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;
  #140 = NameAndType        #138:#139     // $anonfun$apply$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #141 = Methodref          #2.#140       // os/RelPath$.$anonfun$apply$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #142 = MethodHandle       6:#141        // REF_invokeStatic os/RelPath$.$anonfun$apply$1:(Ljava/nio/file/Path;)Ljava/lang/String;
  #143 = Utf8               ()Ljava/lang/String;
  #144 = MethodType         #143          //  ()Ljava/lang/String;
  #145 = Utf8               (Ljava/nio/file/Path;)Lscala/Function0;
  #146 = NameAndType        #63:#145      // apply:(Ljava/nio/file/Path;)Lscala/Function0;
  #147 = InvokeDynamic      #1:#146       // #1:apply:(Ljava/nio/file/Path;)Lscala/Function0;
  #148 = Utf8               require
  #149 = Utf8               (ZLscala/Function0;)V
  #150 = NameAndType        #148:#149     // require:(ZLscala/Function0;)V
  #151 = Methodref          #118.#150     // scala/Predef$.require:(ZLscala/Function0;)V
  #152 = Utf8               os/BasePath$
  #153 = Class              #152          // os/BasePath$
  #154 = Utf8               Los/BasePath$;
  #155 = NameAndType        #22:#154      // MODULE$:Los/BasePath$;
  #156 = Fieldref           #153.#155     // os/BasePath$.MODULE$:Los/BasePath$;
  #157 = Utf8               normalize
  #158 = Utf8               ()Ljava/nio/file/Path;
  #159 = NameAndType        #157:#158     // normalize:()Ljava/nio/file/Path;
  #160 = InterfaceMethodref #131.#159     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;
  #161 = Utf8               chunkify
  #162 = Utf8               (Ljava/nio/file/Path;)[Ljava/lang/String;
  #163 = NameAndType        #161:#162     // chunkify:(Ljava/nio/file/Path;)[Ljava/lang/String;
  #164 = Methodref          #153.#163     // os/BasePath$.chunkify:(Ljava/nio/file/Path;)[Ljava/lang/String;
  #165 = Utf8               scala/collection/ArrayOps$
  #166 = Class              #165          // scala/collection/ArrayOps$
  #167 = Utf8               Lscala/collection/ArrayOps$;
  #168 = NameAndType        #22:#167      // MODULE$:Lscala/collection/ArrayOps$;
  #169 = Fieldref           #166.#168     // scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
  #170 = Utf8               [Ljava/lang/Object;
  #171 = Class              #170          // "[Ljava/lang/Object;"
  #172 = Utf8               refArrayOps
  #173 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;
  #174 = NameAndType        #172:#173     // refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #175 = Methodref          #118.#174     // scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
  #176 = Utf8               $anonfun$apply$2$adapted
  #177 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;
  #178 = NameAndType        #176:#177     // $anonfun$apply$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #179 = Methodref          #2.#178       // os/RelPath$.$anonfun$apply$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #180 = MethodHandle       6:#179        // REF_invokeStatic os/RelPath$.$anonfun$apply$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #181 = MethodType         #177          //  (Ljava/lang/String;)Ljava/lang/Object;
  #182 = InvokeDynamic      #2:#65        // #2:apply:()Lscala/Function1;
  #183 = Utf8               partition$extension
  #184 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
  #185 = NameAndType        #183:#184     // partition$extension:(Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
  #186 = Methodref          #166.#185     // scala/collection/ArrayOps$.partition$extension:(Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
  #187 = Utf8               scala/Tuple2
  #188 = Class              #187          // scala/Tuple2
  #189 = Utf8               _1
  #190 = NameAndType        #189:#136     // _1:()Ljava/lang/Object;
  #191 = Methodref          #188.#190     // scala/Tuple2._1:()Ljava/lang/Object;
  #192 = Utf8               [Ljava/lang/String;
  #193 = Class              #192          // "[Ljava/lang/String;"
  #194 = Utf8               _2
  #195 = NameAndType        #194:#136     // _2:()Ljava/lang/Object;
  #196 = Methodref          #188.#195     // scala/Tuple2._2:()Ljava/lang/Object;
  #197 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #198 = NameAndType        #32:#197      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #199 = Methodref          #188.#198     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #200 = Utf8               scala/MatchError
  #201 = Class              #200          // scala/MatchError
  #202 = Utf8               (Ljava/lang/Object;)V
  #203 = NameAndType        #32:#202      // "<init>":(Ljava/lang/Object;)V
  #204 = Methodref          #201.#203     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #205 = Utf8               ups
  #206 = Utf8               rest
  #207 = Utf8               f
  #208 = Utf8               Ljava/nio/file/Path;
  #209 = Utf8               segments
  #210 = Utf8               this
  #211 = Utf8               Ljava/lang/Object;
  #212 = Utf8               Los/PathConvertible;
  #213 = Utf8               (Lscala/collection/immutable/IndexedSeq;I)Los/RelPath;
  #214 = Utf8               (Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;I)Los/RelPath;
  #215 = Utf8               segments0
  #216 = Utf8               $anonfun$apply$3$adapted
  #217 = NameAndType        #216:#177     // $anonfun$apply$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #218 = Methodref          #2.#217       // os/RelPath$.$anonfun$apply$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #219 = MethodHandle       6:#218        // REF_invokeStatic os/RelPath$.$anonfun$apply$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
  #220 = InvokeDynamic      #3:#65        // #3:apply:()Lscala/Function1;
  #221 = Utf8               scala/collection/immutable/IndexedSeq
  #222 = Class              #221          // scala/collection/immutable/IndexedSeq
  #223 = Utf8               foreach
  #224 = Utf8               (Lscala/Function1;)V
  #225 = NameAndType        #223:#224     // foreach:(Lscala/Function1;)V
  #226 = InterfaceMethodref #222.#225     // scala/collection/immutable/IndexedSeq.foreach:(Lscala/Function1;)V
  #227 = Utf8               scala/reflect/ClassTag$
  #228 = Class              #227          // scala/reflect/ClassTag$
  #229 = Utf8               Lscala/reflect/ClassTag$;
  #230 = NameAndType        #22:#229      // MODULE$:Lscala/reflect/ClassTag$;
  #231 = Fieldref           #228.#230     // scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
  #232 = Utf8               java/lang/String
  #233 = Class              #232          // java/lang/String
  #234 = Utf8               (Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #235 = NameAndType        #63:#234      // apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #236 = Methodref          #228.#235     // scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
  #237 = Utf8               toArray
  #238 = Utf8               (Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #239 = NameAndType        #237:#238     // toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #240 = InterfaceMethodref #222.#239     // scala/collection/immutable/IndexedSeq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
  #241 = Utf8               Lscala/collection/immutable/IndexedSeq;
  #242 = Utf8               I
  #243 = Utf8               ()Lscala/math/Ordering;
  #244 = Utf8               ()Lscala/math/Ordering<Los/RelPath;>;
  #245 = Utf8               ()Los/RelPath;
  #246 = Utf8               SubRelPath
  #247 = Utf8               (Los/SubPath;)Los/RelPath;
  #248 = Utf8               p
  #249 = Utf8               os/SubPath
  #250 = Class              #249          // os/SubPath
  #251 = NameAndType        #215:#103     // segments0:()[Ljava/lang/String;
  #252 = Methodref          #250.#251     // os/SubPath.segments0:()[Ljava/lang/String;
  #253 = Utf8               Los/SubPath;
  #254 = Utf8               f$1
  #255 = Utf8               java/lang/StringBuilder
  #256 = Class              #255          // java/lang/StringBuilder
  #257 = Integer            23
  #258 = Utf8               (I)V
  #259 = NameAndType        #32:#258      // "<init>":(I)V
  #260 = Methodref          #256.#259     // java/lang/StringBuilder."<init>":(I)V
  #261 = Utf8               append
  #262 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #263 = NameAndType        #261:#262     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #264 = Methodref          #256.#263     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #265 = Utf8                is not a relative path
  #266 = String             #265          //  is not a relative path
  #267 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #268 = NameAndType        #261:#267     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #269 = Methodref          #256.#268     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #270 = Utf8               toString
  #271 = NameAndType        #270:#143     // toString:()Ljava/lang/String;
  #272 = Methodref          #256.#271     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #273 = Utf8               $anonfun$apply$2
  #274 = Utf8               (Ljava/lang/String;)Z
  #275 = Utf8               x$5
  #276 = Utf8               ..
  #277 = String             #276          // ..
  #278 = Utf8               equals
  #279 = Utf8               (Ljava/lang/Object;)Z
  #280 = NameAndType        #278:#279     // equals:(Ljava/lang/Object;)Z
  #281 = Methodref          #4.#280       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #282 = Utf8               Ljava/lang/String;
  #283 = Utf8               $anonfun$apply$3
  #284 = Utf8               (Ljava/lang/String;)V
  #285 = Utf8               s
  #286 = Utf8               checkSegment
  #287 = NameAndType        #286:#284     // checkSegment:(Ljava/lang/String;)V
  #288 = Methodref          #153.#287     // os/BasePath$.checkSegment:(Ljava/lang/String;)V
  #289 = Utf8               rp
  #290 = Utf8               scala/Tuple3
  #291 = Class              #290          // scala/Tuple3
  #292 = Utf8               ()I
  #293 = NameAndType        #205:#292     // ups:()I
  #294 = Methodref          #96.#293      // os/RelPath.ups:()I
  #295 = Utf8               scala/runtime/BoxesRunTime
  #296 = Class              #295          // scala/runtime/BoxesRunTime
  #297 = Utf8               boxToInteger
  #298 = Utf8               (I)Ljava/lang/Integer;
  #299 = NameAndType        #297:#298     // boxToInteger:(I)Ljava/lang/Integer;
  #300 = Methodref          #296.#299     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #301 = Utf8               ()Lscala/collection/immutable/IndexedSeq;
  #302 = NameAndType        #209:#301     // segments:()Lscala/collection/immutable/IndexedSeq;
  #303 = Methodref          #96.#302      // os/RelPath.segments:()Lscala/collection/immutable/IndexedSeq;
  #304 = Utf8               length
  #305 = NameAndType        #304:#292     // length:()I
  #306 = InterfaceMethodref #222.#305     // scala/collection/immutable/IndexedSeq.length:()I
  #307 = Utf8               toIterable
  #308 = Utf8               ()Lscala/collection/Iterable;
  #309 = NameAndType        #307:#308     // toIterable:()Lscala/collection/Iterable;
  #310 = InterfaceMethodref #222.#309     // scala/collection/immutable/IndexedSeq.toIterable:()Lscala/collection/Iterable;
  #311 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #312 = NameAndType        #32:#311      // "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #313 = Methodref          #291.#312     // scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
  #314 = Methodref          #4.#33        // java/lang/Object."<init>":()V
  #315 = NameAndType        #273:#274     // $anonfun$apply$2:(Ljava/lang/String;)Z
  #316 = Methodref          #2.#315       // os/RelPath$.$anonfun$apply$2:(Ljava/lang/String;)Z
  #317 = Utf8               boxToBoolean
  #318 = Utf8               (Z)Ljava/lang/Boolean;
  #319 = NameAndType        #317:#318     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #320 = Methodref          #296.#319     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #321 = NameAndType        #283:#284     // $anonfun$apply$3:(Ljava/lang/String;)V
  #322 = Methodref          #2.#321       // os/RelPath$.$anonfun$apply$3:(Ljava/lang/String;)V
  #323 = Utf8               scala/runtime/BoxedUnit
  #324 = Class              #323          // scala/runtime/BoxedUnit
  #325 = Utf8               UNIT
  #326 = Utf8               Lscala/runtime/BoxedUnit;
  #327 = NameAndType        #325:#326     // UNIT:Lscala/runtime/BoxedUnit;
  #328 = Fieldref           #324.#327     // scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
  #329 = Utf8               $deserializeLambda$
  #330 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #331 = Utf8               scala/runtime/LambdaDeserialize
  #332 = Class              #331          // scala/runtime/LambdaDeserialize
  #333 = Utf8               bootstrap
  #334 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #335 = NameAndType        #333:#334     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #336 = Methodref          #332.#335     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #337 = MethodHandle       6:#336        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #338 = Utf8               lambdaDeserialize
  #339 = NameAndType        #338:#330     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #340 = InvokeDynamic      #4:#339       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #341 = Utf8               Signature
  #342 = Utf8               Code
  #343 = Utf8               LineNumberTable
  #344 = Utf8               StackMapTable
  #345 = Utf8               LocalVariableTable
  #346 = Utf8               MethodParameters
  #347 = Utf8               InnerClasses
  #348 = Utf8               SourceFile
  #349 = Utf8               BootstrapMethods
  #350 = Utf8               ScalaInlineInfo
  #351 = Utf8               Scala
{
  public static final os.RelPath$ MODULE$;
    descriptor: Los/RelPath$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static final scala.math.Ordering<os.RelPath> relPathOrdering;
    descriptor: Lscala/math/Ordering;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Signature: #26                          // Lscala/math/Ordering<Los/RelPath;>;

  private static final os.RelPath up;
    descriptor: Los/RelPath;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final os.RelPath rel;
    descriptor: Los/RelPath;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=7, locals=0, args_size=0
         0: new           #2                  // class os/RelPath$
         3: dup
         4: invokespecial #34                 // Method "<init>":()V
         7: putstatic     #36                 // Field MODULE$:Los/RelPath$;
        10: getstatic     #41                 // Field scala/package$.MODULE$:Lscala/package$;
        13: invokevirtual #45                 // Method scala/package$.Ordering:()Lscala/math/Ordering$;
        16: invokedynamic #66,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
        21: getstatic     #71                 // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        24: getstatic     #74                 // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
        27: getstatic     #74                 // Field scala/math/Ordering$Int$.MODULE$:Lscala/math/Ordering$Int$;
        30: getstatic     #77                 // Field scala/math/Ordering$Implicits$.MODULE$:Lscala/math/Ordering$Implicits$;
        33: getstatic     #80                 // Field scala/math/Ordering$String$.MODULE$:Lscala/math/Ordering$String$;
        36: invokevirtual #84                 // Method scala/math/Ordering$Implicits$.seqOrdering:(Lscala/math/Ordering;)Lscala/math/Ordering;
        39: invokevirtual #88                 // Method scala/math/Ordering$.Tuple3:(Lscala/math/Ordering;Lscala/math/Ordering;Lscala/math/Ordering;)Lscala/math/Ordering;
        42: invokevirtual #92                 // Method scala/math/Ordering$.by:(Lscala/Function1;Lscala/math/Ordering;)Lscala/math/Ordering;
        45: putstatic     #94                 // Field relPathOrdering:Lscala/math/Ordering;
        48: new           #96                 // class os/RelPath
        51: dup
        52: getstatic     #101                // Field os/Internals$.MODULE$:Los/Internals$;
        55: invokevirtual #105                // Method os/Internals$.emptyStringArray:()[Ljava/lang/String;
        58: iconst_1
        59: invokespecial #108                // Method os/RelPath."<init>":([Ljava/lang/String;I)V
        62: putstatic     #110                // Field up:Los/RelPath;
        65: new           #96                 // class os/RelPath
        68: dup
        69: getstatic     #101                // Field os/Internals$.MODULE$:Los/Internals$;
        72: invokevirtual #105                // Method os/Internals$.emptyStringArray:()[Ljava/lang/String;
        75: iconst_0
        76: invokespecial #108                // Method os/RelPath."<init>":([Ljava/lang/String;I)V
        79: putstatic     #112                // Field rel:Los/RelPath;
        82: return
      LineNumberTable:
        line 288: 0
        line 306: 10
        line 305: 45
        line 308: 48
        line 309: 65
        line 288: 82

  public <T extends java.lang.Object> os.RelPath apply(T, os.PathConvertible<T>);
    descriptor: (Ljava/lang/Object;Los/PathConvertible;)Los/RelPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=12, args_size=3
         0: getstatic     #121                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         3: aload_2
         4: invokevirtual #124                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
         7: checkcast     #126                // class os/PathConvertible
        10: aload_1
        11: invokeinterface #129,  2          // InterfaceMethod os/PathConvertible.apply:(Ljava/lang/Object;)Ljava/nio/file/Path;
        16: astore        4
        18: getstatic     #121                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        21: aload         4
        23: invokeinterface #135,  1          // InterfaceMethod java/nio/file/Path.isAbsolute:()Z
        28: ifne          35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: aload         4
        38: invokedynamic #147,  0            // InvokeDynamic #1:apply:(Ljava/nio/file/Path;)Lscala/Function0;
        43: invokevirtual #151                // Method scala/Predef$.require:(ZLscala/Function0;)V
        46: getstatic     #156                // Field os/BasePath$.MODULE$:Los/BasePath$;
        49: aload         4
        51: invokeinterface #160,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;
        56: invokevirtual #164                // Method os/BasePath$.chunkify:(Ljava/nio/file/Path;)[Ljava/lang/String;
        59: astore        5
        61: getstatic     #169                // Field scala/collection/ArrayOps$.MODULE$:Lscala/collection/ArrayOps$;
        64: getstatic     #121                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        67: aload         5
        69: checkcast     #171                // class "[Ljava/lang/Object;"
        72: invokevirtual #175                // Method scala/Predef$.refArrayOps:([Ljava/lang/Object;)Ljava/lang/Object;
        75: invokedynamic #182,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        80: invokevirtual #186                // Method scala/collection/ArrayOps$.partition$extension:(Ljava/lang/Object;Lscala/Function1;)Lscala/Tuple2;
        83: astore        7
        85: aload         7
        87: ifnull        125
        90: aload         7
        92: invokevirtual #191                // Method scala/Tuple2._1:()Ljava/lang/Object;
        95: checkcast     #193                // class "[Ljava/lang/String;"
        98: astore        8
       100: aload         7
       102: invokevirtual #196                // Method scala/Tuple2._2:()Ljava/lang/Object;
       105: checkcast     #193                // class "[Ljava/lang/String;"
       108: astore        9
       110: new           #188                // class scala/Tuple2
       113: dup
       114: aload         8
       116: aload         9
       118: invokespecial #199                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       121: astore_3
       122: goto          138
       125: goto          128
       128: new           #201                // class scala/MatchError
       131: dup
       132: aload         7
       134: invokespecial #204                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       137: athrow
       138: aload_3
       139: astore        6
       141: aload         6
       143: invokevirtual #191                // Method scala/Tuple2._1:()Ljava/lang/Object;
       146: checkcast     #193                // class "[Ljava/lang/String;"
       149: astore        10
       151: aload         6
       153: invokevirtual #196                // Method scala/Tuple2._2:()Ljava/lang/Object;
       156: checkcast     #193                // class "[Ljava/lang/String;"
       159: astore        11
       161: new           #96                 // class os/RelPath
       164: dup
       165: aload         11
       167: aload         10
       169: arraylength
       170: invokespecial #108                // Method os/RelPath."<init>":([Ljava/lang/String;I)V
       173: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 35
          locals = [ class os/RelPath$, class java/lang/Object, class os/PathConvertible, top, class java/nio/file/Path ]
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class os/RelPath$, class java/lang/Object, class os/PathConvertible, top, class java/nio/file/Path ]
          stack = [ class scala/Predef$, int ]
        frame_type = 254 /* append */
          offset_delta = 88
          locals = [ class "[Ljava/lang/String;", top, class scala/Tuple2 ]
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class os/RelPath$, class java/lang/Object, class os/PathConvertible, class scala/Tuple2, class java/nio/file/Path, class "[Ljava/lang/String;", top, class scala/Tuple2, class "[Ljava/lang/String;", class "[Ljava/lang/String;" ]
          stack = []
      LineNumberTable:
        line 290: 0
        line 292: 18
        line 294: 46
        line 295: 61
        line 296: 161
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          100      25     8   ups   [Ljava/lang/String;
          110      15     9  rest   [Ljava/lang/String;
           18     155     4     f   Ljava/nio/file/Path;
           61     112     5 segments   [Ljava/lang/String;
          151      22    10   ups   [Ljava/lang/String;
          161      12    11  rest   [Ljava/lang/String;
            0     174     0  this   Los/RelPath$;
            0     174     1    f0   Ljava/lang/Object;
            0     174     2 evidence$2   Los/PathConvertible;
    Signature: #114                         // <T:Ljava/lang/Object;>(TT;Los/PathConvertible<TT;>;)Los/RelPath;
    MethodParameters:
      Name                           Flags
      f0                             final
      evidence$2                     final

  public os.RelPath apply(scala.collection.immutable.IndexedSeq<java.lang.String>, int);
    descriptor: (Lscala/collection/immutable/IndexedSeq;I)Los/RelPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=3, args_size=3
         0: aload_1
         1: invokedynamic #220,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
         6: invokeinterface #226,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.foreach:(Lscala/Function1;)V
        11: new           #96                 // class os/RelPath
        14: dup
        15: aload_1
        16: getstatic     #231                // Field scala/reflect/ClassTag$.MODULE$:Lscala/reflect/ClassTag$;
        19: ldc           #233                // class java/lang/String
        21: invokevirtual #236                // Method scala/reflect/ClassTag$.apply:(Ljava/lang/Class;)Lscala/reflect/ClassTag;
        24: invokeinterface #240,  2          // InterfaceMethod scala/collection/immutable/IndexedSeq.toArray:(Lscala/reflect/ClassTag;)Ljava/lang/Object;
        29: checkcast     #193                // class "[Ljava/lang/String;"
        32: iload_2
        33: invokespecial #108                // Method os/RelPath."<init>":([Ljava/lang/String;I)V
        36: areturn
      LineNumberTable:
        line 300: 0
        line 301: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0  this   Los/RelPath$;
            0      37     1 segments0   Lscala/collection/immutable/IndexedSeq;
            0      37     2   ups   I
    Signature: #214                         // (Lscala/collection/immutable/IndexedSeq<Ljava/lang/String;>;I)Los/RelPath;
    MethodParameters:
      Name                           Flags
      segments0                      final
      ups                            final

  public scala.math.Ordering<os.RelPath> relPathOrdering();
    descriptor: ()Lscala/math/Ordering;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #94                 // Field relPathOrdering:Lscala/math/Ordering;
         3: areturn
      LineNumberTable:
        line 305: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/RelPath$;
    Signature: #244                         // ()Lscala/math/Ordering<Los/RelPath;>;

  public os.RelPath up();
    descriptor: ()Los/RelPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #110                // Field up:Los/RelPath;
         3: areturn
      LineNumberTable:
        line 308: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/RelPath$;

  public os.RelPath rel();
    descriptor: ()Los/RelPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #112                // Field rel:Los/RelPath;
         3: areturn
      LineNumberTable:
        line 309: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Los/RelPath$;

  public os.RelPath SubRelPath(os.SubPath);
    descriptor: (Los/SubPath;)Los/RelPath;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #96                 // class os/RelPath
         3: dup
         4: aload_1
         5: invokevirtual #252                // Method os/SubPath.segments0:()[Ljava/lang/String;
         8: iconst_0
         9: invokespecial #108                // Method os/RelPath."<init>":([Ljava/lang/String;I)V
        12: areturn
      LineNumberTable:
        line 310: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Los/RelPath$;
            0      13     1     p   Los/SubPath;
    MethodParameters:
      Name                           Flags
      p                              final

  public static final java.lang.String $anonfun$apply$1(java.nio.file.Path);
    descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #256                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #257                // int 23
         7: invokespecial #260                // Method java/lang/StringBuilder."<init>":(I)V
        10: aload_0
        11: invokevirtual #264                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        14: ldc_w         #266                // String  is not a relative path
        17: invokevirtual #269                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: invokevirtual #272                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        23: areturn
      LineNumberTable:
        line 292: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0   f$1   Ljava/nio/file/Path;
    MethodParameters:
      Name                           Flags
      f$1                            final

  public static final boolean $anonfun$apply$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #277                // String ..
         4: astore_1
         5: dup
         6: ifnonnull     17
         9: pop
        10: aload_1
        11: ifnull        24
        14: goto          28
        17: aload_1
        18: invokevirtual #281                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        21: ifeq          28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0   x$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final void $anonfun$apply$3(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #156                // Field os/BasePath$.MODULE$:Los/BasePath$;
         3: aload_0
         4: invokevirtual #288                // Method os/BasePath$.checkSegment:(Ljava/lang/String;)V
         7: return
      LineNumberTable:
        line 300: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public static final scala.Tuple3 $anonfun$relPathOrdering$1(os.RelPath);
    descriptor: (Los/RelPath;)Lscala/Tuple3;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=1, args_size=1
         0: new           #291                // class scala/Tuple3
         3: dup
         4: aload_0
         5: invokevirtual #294                // Method os/RelPath.ups:()I
         8: invokestatic  #300                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        11: aload_0
        12: invokevirtual #303                // Method os/RelPath.segments:()Lscala/collection/immutable/IndexedSeq;
        15: invokeinterface #306,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.length:()I
        20: invokestatic  #300                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        23: aload_0
        24: invokevirtual #303                // Method os/RelPath.segments:()Lscala/collection/immutable/IndexedSeq;
        27: invokeinterface #310,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.toIterable:()Lscala/collection/Iterable;
        32: invokespecial #313                // Method scala/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
        35: areturn
      LineNumberTable:
        line 306: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      36     0    rp   Los/RelPath;
    MethodParameters:
      Name                           Flags
      rp                             final

  private os.RelPath$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #314                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 316: 0
        line 288: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/RelPath$;

  public static final java.lang.Object $anonfun$apply$2$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #316                // Method $anonfun$apply$2:(Ljava/lang/String;)Z
         4: invokestatic  #320                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 295: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$5   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$5                            final

  public static final java.lang.Object $anonfun$apply$3$adapted(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #322                // Method $anonfun$apply$3:(Ljava/lang/String;)V
         4: getstatic     #328                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
         7: areturn
      LineNumberTable:
        line 300: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #340,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #15= #12 of #14;          // Implicits$=class scala/math/Ordering$Implicits$ of class scala/math/Ordering
  public static #18= #17 of #14;          // Int$=class scala/math/Ordering$Int$ of class scala/math/Ordering
  public static #21= #20 of #14;          // String$=class scala/math/Ordering$String$ of class scala/math/Ordering
SourceFile: "Path.scala"
BootstrapMethods:
  0: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #47 (Ljava/lang/Object;)Ljava/lang/Object;
      #52 REF_invokeStatic os/RelPath$.$anonfun$relPathOrdering$1:(Los/RelPath;)Lscala/Tuple3;
      #53 (Los/RelPath;)Lscala/Tuple3;
      #54 5
      #55 1
      #53 (Los/RelPath;)Lscala/Tuple3;
  1: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #137 ()Ljava/lang/Object;
      #142 REF_invokeStatic os/RelPath$.$anonfun$apply$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #144 ()Ljava/lang/String;
      #54 5
      #55 1
      #144 ()Ljava/lang/String;
  2: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #47 (Ljava/lang/Object;)Ljava/lang/Object;
      #180 REF_invokeStatic os/RelPath$.$anonfun$apply$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #181 (Ljava/lang/String;)Ljava/lang/Object;
      #54 5
      #55 1
      #181 (Ljava/lang/String;)Ljava/lang/Object;
  3: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #47 (Ljava/lang/Object;)Ljava/lang/Object;
      #219 REF_invokeStatic os/RelPath$.$anonfun$apply$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #181 (Ljava/lang/String;)Ljava/lang/Object;
      #54 5
      #55 1
      #181 (Ljava/lang/String;)Ljava/lang/Object;
  4: #337 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #142 REF_invokeStatic os/RelPath$.$anonfun$apply$1:(Ljava/nio/file/Path;)Ljava/lang/String;
      #180 REF_invokeStatic os/RelPath$.$anonfun$apply$2$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #219 REF_invokeStatic os/RelPath$.$anonfun$apply$3$adapted:(Ljava/lang/String;)Ljava/lang/Object;
      #52 REF_invokeStatic os/RelPath$.$anonfun$relPathOrdering$1:(Los/RelPath;)Lscala/Tuple3;
  ScalaInlineInfo: length = 0x45 (unknown attribute)
   01 01 00 0D 00 8A 00 8B 01 01 11 01 12 01 00 B0
   00 B1 01 01 1B 01 1C 01 00 D8 00 B1 01 00 30 00
   31 01 00 20 00 1F 01 00 F6 00 F7 01 00 3F 00 71
   01 00 3F 00 D5 01 00 1D 00 F5 01 00 18 00 F3 01
   00 1B 00 F5 01
  Scala: length = 0x0 (unknown attribute)

