Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/sireum/ContractUtil$.class
  Last modified May 29, 2022; size 9317 bytes
  SHA-256 checksum 8da7152dbc40a37acf0ba2c7dcc4ccc7b5fc5c8bbac817d173c59e16e74cff1c
  Compiled from "ContractUtil.scala"
public final class org.sireum.ContractUtil$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // org/sireum/ContractUtil$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 23, attributes: 5
Constant pool:
    #1 = Utf8               org/sireum/ContractUtil$
    #2 = Class              #1            // org/sireum/ContractUtil$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               ContractUtil.scala
    #6 = Utf8               java/lang/invoke/MethodHandles$Lookup
    #7 = Class              #6            // java/lang/invoke/MethodHandles$Lookup
    #8 = Utf8               java/lang/invoke/MethodHandles
    #9 = Class              #8            // java/lang/invoke/MethodHandles
   #10 = Utf8               Lookup
   #11 = Utf8               org/sireum/contract$All$
   #12 = Class              #11           // org/sireum/contract$All$
   #13 = Utf8               org/sireum/contract
   #14 = Class              #13           // org/sireum/contract
   #15 = Utf8               All$
   #16 = Utf8               org/sireum/package$$Boolean2B$
   #17 = Class              #16           // org/sireum/package$$Boolean2B$
   #18 = Utf8               org/sireum/package
   #19 = Class              #18           // org/sireum/package
   #20 = Utf8               $Boolean2B$
   #21 = Utf8               MODULE$
   #22 = Utf8               Lorg/sireum/ContractUtil$;
   #23 = Utf8               <clinit>
   #24 = Utf8               ()V
   #25 = Utf8               <init>
   #26 = NameAndType        #25:#24       // "<init>":()V
   #27 = Methodref          #2.#26        // org/sireum/ContractUtil$."<init>":()V
   #28 = NameAndType        #21:#22       // MODULE$:Lorg/sireum/ContractUtil$;
   #29 = Fieldref           #2.#28        // org/sireum/ContractUtil$.MODULE$:Lorg/sireum/ContractUtil$;
   #30 = Utf8               modPos
   #31 = Utf8               (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
   #32 = Utf8               n
   #33 = Utf8               m
   #34 = Utf8               org/sireum/B$
   #35 = Class              #34           // org/sireum/B$
   #36 = Utf8               Lorg/sireum/B$;
   #37 = NameAndType        #21:#36       // MODULE$:Lorg/sireum/B$;
   #38 = Fieldref           #35.#37       // org/sireum/B$.MODULE$:Lorg/sireum/B$;
   #39 = Utf8               org/sireum/Z
   #40 = Class              #39           // org/sireum/Z
   #41 = Utf8               $less
   #42 = Utf8               (Lorg/sireum/Z;)Z
   #43 = NameAndType        #41:#42       // $less:(Lorg/sireum/Z;)Z
   #44 = InterfaceMethodref #40.#43       // org/sireum/Z.$less:(Lorg/sireum/Z;)Z
   #45 = Utf8               $4B
   #46 = Utf8               (Z)Z
   #47 = NameAndType        #45:#46       // $4B:(Z)Z
   #48 = Methodref          #35.#47       // org/sireum/B$.$4B:(Z)Z
   #49 = Utf8               $minus
   #50 = Utf8               (Lorg/sireum/Z;)Lorg/sireum/Z;
   #51 = NameAndType        #49:#50       // $minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #52 = InterfaceMethodref #40.#51       // org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #53 = Utf8               this
   #54 = Utf8               Lorg/sireum/Z;
   #55 = Utf8               modNeg
   #56 = Utf8               org/sireum/Z$
   #57 = Class              #56           // org/sireum/Z$
   #58 = Utf8               Lorg/sireum/Z$;
   #59 = NameAndType        #21:#58       // MODULE$:Lorg/sireum/Z$;
   #60 = Fieldref           #57.#59       // org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
   #61 = Utf8               apply
   #62 = Utf8               (I)Lorg/sireum/Z;
   #63 = NameAndType        #61:#62       // apply:(I)Lorg/sireum/Z;
   #64 = Methodref          #57.#63       // org/sireum/Z$.apply:(I)Lorg/sireum/Z;
   #65 = Utf8               $plus
   #66 = NameAndType        #65:#50       // $plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #67 = InterfaceMethodref #40.#66       // org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
   #68 = Utf8               isEqualExcept
   #69 = Utf8               (Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
   #70 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;Lorg/sireum/IS<TI;TT;>;TI;)Z
   #71 = Utf8               s1
   #72 = Utf8               s2
   #73 = Utf8               i
   #74 = Utf8               org/sireum/IS
   #75 = Class              #74           // org/sireum/IS
   #76 = Utf8               size
   #77 = Utf8               ()Lorg/sireum/Z;
   #78 = NameAndType        #76:#77       // size:()Lorg/sireum/Z;
   #79 = Methodref          #75.#78       // org/sireum/IS.size:()Lorg/sireum/Z;
   #80 = Utf8               equals
   #81 = Utf8               (Ljava/lang/Object;)Z
   #82 = NameAndType        #80:#81       // equals:(Ljava/lang/Object;)Z
   #83 = Methodref          #4.#82        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #84 = Utf8               org/sireum/package$
   #85 = Class              #84           // org/sireum/package$
   #86 = Utf8               Lorg/sireum/package$;
   #87 = NameAndType        #21:#86       // MODULE$:Lorg/sireum/package$;
   #88 = Fieldref           #85.#87       // org/sireum/package$.MODULE$:Lorg/sireum/package$;
   #89 = Utf8               All
   #90 = Utf8               ()Lorg/sireum/contract$All$;
   #91 = NameAndType        #89:#90       // All:()Lorg/sireum/contract$All$;
   #92 = Methodref          #85.#91       // org/sireum/package$.All:()Lorg/sireum/contract$All$;
   #93 = Utf8               indices
   #94 = Utf8               ()Lorg/sireum/ZRange;
   #95 = NameAndType        #93:#94       // indices:()Lorg/sireum/ZRange;
   #96 = Methodref          #75.#95       // org/sireum/IS.indices:()Lorg/sireum/ZRange;
   #97 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #98 = MethodType         #97           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #99 = Utf8               $anonfun$isEqualExcept$1$adapted
  #100 = Utf8               (Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #101 = NameAndType        #99:#100      // $anonfun$isEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #102 = Methodref          #2.#101       // org/sireum/ContractUtil$.$anonfun$isEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #103 = MethodHandle       6:#102        // REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #104 = Integer            1
  #105 = Utf8               java/lang/invoke/LambdaMetafactory
  #106 = Class              #105          // java/lang/invoke/LambdaMetafactory
  #107 = Utf8               altMetafactory
  #108 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #109 = NameAndType        #107:#108     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #110 = Methodref          #106.#109     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #111 = MethodHandle       6:#110        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #112 = Utf8               (Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
  #113 = NameAndType        #61:#112      // apply:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
  #114 = InvokeDynamic      #0:#113       // #0:apply:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
  #115 = Utf8               (Lorg/sireum/ZRange;Lscala/Function1;)Z
  #116 = NameAndType        #61:#115      // apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
  #117 = Methodref          #12.#116      // org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
  #118 = NameAndType        #61:#46       // apply:(Z)Z
  #119 = Methodref          #35.#118      // org/sireum/B$.apply:(Z)Z
  #120 = Utf8               Lorg/sireum/IS;
  #121 = Utf8               Ljava/lang/Object;
  #122 = Utf8               isEqualExcept2
  #123 = Utf8               (Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #124 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;Lorg/sireum/IS<TI;TT;>;TI;TI;)Z
  #125 = Utf8               i1
  #126 = Utf8               i2
  #127 = Utf8               $anonfun$isEqualExcept2$1$adapted
  #128 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #129 = NameAndType        #127:#128     // $anonfun$isEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #130 = Methodref          #2.#129       // org/sireum/ContractUtil$.$anonfun$isEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #131 = MethodHandle       6:#130        // REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
  #132 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
  #133 = NameAndType        #61:#132      // apply:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
  #134 = InvokeDynamic      #1:#133       // #1:apply:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
  #135 = Utf8               msEqualExcept
  #136 = Utf8               (Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #137 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;Lorg/sireum/MS<TI;TT;>;TI;)Z
  #138 = Utf8               org/sireum/MS
  #139 = Class              #138          // org/sireum/MS
  #140 = Methodref          #139.#78      // org/sireum/MS.size:()Lorg/sireum/Z;
  #141 = Methodref          #139.#95      // org/sireum/MS.indices:()Lorg/sireum/ZRange;
  #142 = Utf8               $anonfun$msEqualExcept$1$adapted
  #143 = Utf8               (Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #144 = NameAndType        #142:#143     // $anonfun$msEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #145 = Methodref          #2.#144       // org/sireum/ContractUtil$.$anonfun$msEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #146 = MethodHandle       6:#145        // REF_invokeStatic org/sireum/ContractUtil$.$anonfun$msEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #147 = Utf8               (Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
  #148 = NameAndType        #61:#147      // apply:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
  #149 = InvokeDynamic      #2:#148       // #2:apply:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
  #150 = Utf8               Lorg/sireum/MS;
  #151 = Utf8               msEqualExcept2
  #152 = Utf8               (Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #153 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;Lorg/sireum/MS<TI;TT;>;TI;TI;)Z
  #154 = Utf8               $anonfun$msEqualExcept2$1$adapted
  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #156 = NameAndType        #154:#155     // $anonfun$msEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #157 = Methodref          #2.#156       // org/sireum/ContractUtil$.$anonfun$msEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #158 = MethodHandle       6:#157        // REF_invokeStatic org/sireum/ContractUtil$.$anonfun$msEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  #159 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
  #160 = NameAndType        #61:#159      // apply:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
  #161 = InvokeDynamic      #3:#160       // #3:apply:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
  #162 = Utf8               isAllIS
  #163 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;)Z
  #164 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;TT;)Z
  #165 = Utf8               s
  #166 = Utf8               e
  #167 = Utf8               $anonfun$isAllIS$1$adapted
  #168 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #169 = NameAndType        #167:#168     // $anonfun$isAllIS$1$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #170 = Methodref          #2.#169       // org/sireum/ContractUtil$.$anonfun$isAllIS$1$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #171 = MethodHandle       6:#170        // REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isAllIS$1$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #172 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;)Lscala/Function1;
  #173 = NameAndType        #61:#172      // apply:(Lorg/sireum/IS;Ljava/lang/Object;)Lscala/Function1;
  #174 = InvokeDynamic      #4:#173       // #4:apply:(Lorg/sireum/IS;Ljava/lang/Object;)Lscala/Function1;
  #175 = Utf8               isAllMS
  #176 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;)Z
  #177 = Utf8               <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;TT;)Z
  #178 = Utf8               $anonfun$isAllMS$1$adapted
  #179 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #180 = NameAndType        #178:#179     // $anonfun$isAllMS$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #181 = Methodref          #2.#180       // org/sireum/ContractUtil$.$anonfun$isAllMS$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #182 = MethodHandle       6:#181        // REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isAllMS$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
  #183 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;)Lscala/Function1;
  #184 = NameAndType        #61:#183      // apply:(Lorg/sireum/MS;Ljava/lang/Object;)Lscala/Function1;
  #185 = InvokeDynamic      #5:#184       // #5:apply:(Lorg/sireum/MS;Ljava/lang/Object;)Lscala/Function1;
  #186 = Utf8               $anonfun$isEqualExcept$1
  #187 = Utf8               (Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
  #188 = Utf8               i$1
  #189 = Utf8               s1$1
  #190 = Utf8               s2$1
  #191 = Utf8               j
  #192 = Utf8               scala/runtime/BoxesRunTime
  #193 = Class              #192          // scala/runtime/BoxesRunTime
  #194 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
  #195 = NameAndType        #80:#194      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #196 = Methodref          #193.#195     // scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
  #197 = Utf8               Lorg/sireum/package$$Boolean2B$;
  #198 = NameAndType        #21:#197      // MODULE$:Lorg/sireum/package$$Boolean2B$;
  #199 = Fieldref           #17.#198      // org/sireum/package$$Boolean2B$.MODULE$:Lorg/sireum/package$$Boolean2B$;
  #200 = NameAndType        #61:#97       // apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #201 = Methodref          #75.#200      // org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #202 = Utf8               $Boolean2B
  #203 = NameAndType        #202:#46      // $Boolean2B:(Z)Z
  #204 = Methodref          #85.#203      // org/sireum/package$.$Boolean2B:(Z)Z
  #205 = Utf8               $minus$greater$colon$extension
  #206 = Utf8               (ZZ)Z
  #207 = NameAndType        #205:#206     // $minus$greater$colon$extension:(ZZ)Z
  #208 = Methodref          #17.#207      // org/sireum/package$$Boolean2B$.$minus$greater$colon$extension:(ZZ)Z
  #209 = Utf8               $anonfun$isEqualExcept2$1
  #210 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
  #211 = Utf8               i1$1
  #212 = Utf8               i2$1
  #213 = Utf8               s1$2
  #214 = Utf8               s2$2
  #215 = Utf8               $anonfun$msEqualExcept$1
  #216 = Utf8               (Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #217 = Utf8               i$2
  #218 = Utf8               s1$3
  #219 = Utf8               s2$3
  #220 = Methodref          #139.#200     // org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
  #221 = Utf8               $anonfun$msEqualExcept2$1
  #222 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #223 = Utf8               i1$2
  #224 = Utf8               i2$2
  #225 = Utf8               s1$4
  #226 = Utf8               s2$4
  #227 = Utf8               $anonfun$isAllIS$1
  #228 = Utf8               (Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #229 = Utf8               s$1
  #230 = Utf8               e$1
  #231 = Utf8               $anonfun$isAllMS$1
  #232 = Utf8               (Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #233 = Utf8               s$2
  #234 = Utf8               e$2
  #235 = Methodref          #4.#26        // java/lang/Object."<init>":()V
  #236 = NameAndType        #186:#187     // $anonfun$isEqualExcept$1:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
  #237 = Methodref          #2.#236       // org/sireum/ContractUtil$.$anonfun$isEqualExcept$1:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
  #238 = Utf8               boxToBoolean
  #239 = Utf8               (Z)Ljava/lang/Boolean;
  #240 = NameAndType        #238:#239     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #241 = Methodref          #193.#240     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #242 = NameAndType        #209:#210     // $anonfun$isEqualExcept2$1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
  #243 = Methodref          #2.#242       // org/sireum/ContractUtil$.$anonfun$isEqualExcept2$1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
  #244 = NameAndType        #215:#216     // $anonfun$msEqualExcept$1:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #245 = Methodref          #2.#244       // org/sireum/ContractUtil$.$anonfun$msEqualExcept$1:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #246 = NameAndType        #221:#222     // $anonfun$msEqualExcept2$1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #247 = Methodref          #2.#246       // org/sireum/ContractUtil$.$anonfun$msEqualExcept2$1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
  #248 = NameAndType        #227:#228     // $anonfun$isAllIS$1:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #249 = Methodref          #2.#248       // org/sireum/ContractUtil$.$anonfun$isAllIS$1:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #250 = NameAndType        #231:#232     // $anonfun$isAllMS$1:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #251 = Methodref          #2.#250       // org/sireum/ContractUtil$.$anonfun$isAllMS$1:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
  #252 = Utf8               $deserializeLambda$
  #253 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #254 = Utf8               scala/runtime/LambdaDeserialize
  #255 = Class              #254          // scala/runtime/LambdaDeserialize
  #256 = Utf8               bootstrap
  #257 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #258 = NameAndType        #256:#257     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #259 = Methodref          #255.#258     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #260 = MethodHandle       6:#259        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #261 = Utf8               lambdaDeserialize
  #262 = NameAndType        #261:#253     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #263 = InvokeDynamic      #6:#262       // #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #264 = Utf8               Code
  #265 = Utf8               LineNumberTable
  #266 = Utf8               StackMapTable
  #267 = Utf8               LocalVariableTable
  #268 = Utf8               MethodParameters
  #269 = Utf8               Signature
  #270 = Utf8               InnerClasses
  #271 = Utf8               SourceFile
  #272 = Utf8               BootstrapMethods
  #273 = Utf8               ScalaInlineInfo
  #274 = Utf8               Scala
{
  public static final org.sireum.ContractUtil$ MODULE$;
    descriptor: Lorg/sireum/ContractUtil$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class org/sireum/ContractUtil$
         3: dup
         4: invokespecial #27                 // Method "<init>":()V
         7: putstatic     #29                 // Field MODULE$:Lorg/sireum/ContractUtil$;
        10: return
      LineNumberTable:
        line 28: 0

  public org.sireum.Z modPos(org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: aload_2
         5: invokeinterface #44,  2           // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        10: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        13: ifeq          20
        16: aload_1
        17: goto          27
        20: aload_1
        21: aload_2
        22: invokeinterface #52,  2           // InterfaceMethod org/sireum/Z.$minus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        27: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 20 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      28     0  this   Lorg/sireum/ContractUtil$;
            0      28     1     n   Lorg/sireum/Z;
            0      28     2     m   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final
      m                              final

  public org.sireum.Z modNeg(org.sireum.Z, org.sireum.Z);
    descriptor: (Lorg/sireum/Z;Lorg/sireum/Z;)Lorg/sireum/Z;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: getstatic     #60                 // Field org/sireum/Z$.MODULE$:Lorg/sireum/Z$;
         7: iconst_0
         8: invokevirtual #64                 // Method org/sireum/Z$.apply:(I)Lorg/sireum/Z;
        11: invokeinterface #44,  2           // InterfaceMethod org/sireum/Z.$less:(Lorg/sireum/Z;)Z
        16: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        19: ifeq          32
        22: aload_1
        23: aload_2
        24: invokeinterface #67,  2           // InterfaceMethod org/sireum/Z.$plus:(Lorg/sireum/Z;)Lorg/sireum/Z;
        29: goto          33
        32: aload_1
        33: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 32 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class org/sireum/Z ]
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lorg/sireum/ContractUtil$;
            0      34     1     n   Lorg/sireum/Z;
            0      34     2     m   Lorg/sireum/Z;
    MethodParameters:
      Name                           Flags
      n                              final
      m                              final

  public <I extends java.lang.Object, T extends java.lang.Object> boolean isEqualExcept(org.sireum.IS<I, T>, org.sireum.IS<I, T>, I);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=5, args_size=4
         0: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #79                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
         7: aload_2
         8: invokevirtual #79                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        11: astore        4
        13: dup
        14: ifnonnull     26
        17: pop
        18: aload         4
        20: ifnull        34
        23: goto          38
        26: aload         4
        28: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        42: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        45: invokevirtual #92                 // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
        48: aload_1
        49: invokevirtual #96                 // Method org/sireum/IS.indices:()Lorg/sireum/ZRange;
        52: aload_3
        53: aload_1
        54: aload_2
        55: invokedynamic #114,  0            // InvokeDynamic #0:apply:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
        60: invokevirtual #117                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        63: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        66: iand
        67: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        70: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/sireum/ContractUtil$, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ContractUtil$, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/sireum/ContractUtil$;
            0      71     1    s1   Lorg/sireum/IS;
            0      71     2    s2   Lorg/sireum/IS;
            0      71     3     i   Ljava/lang/Object;
    Signature: #70                          // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;Lorg/sireum/IS<TI;TT;>;TI;)Z
    MethodParameters:
      Name                           Flags
      s1                             final
      s2                             final
      i                              final

  public <I extends java.lang.Object, T extends java.lang.Object> boolean isEqualExcept2(org.sireum.IS<I, T>, org.sireum.IS<I, T>, I, I);
    descriptor: (Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=6, args_size=5
         0: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #79                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
         7: aload_2
         8: invokevirtual #79                 // Method org/sireum/IS.size:()Lorg/sireum/Z;
        11: astore        5
        13: dup
        14: ifnonnull     26
        17: pop
        18: aload         5
        20: ifnull        34
        23: goto          38
        26: aload         5
        28: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        42: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        45: invokevirtual #92                 // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
        48: aload_1
        49: invokevirtual #96                 // Method org/sireum/IS.indices:()Lorg/sireum/ZRange;
        52: aload_3
        53: aload         4
        55: aload_1
        56: aload_2
        57: invokedynamic #134,  0            // InvokeDynamic #1:apply:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;)Lscala/Function1;
        62: invokevirtual #117                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        65: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        68: iand
        69: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        72: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/sireum/ContractUtil$, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ContractUtil$, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lorg/sireum/ContractUtil$;
            0      73     1    s1   Lorg/sireum/IS;
            0      73     2    s2   Lorg/sireum/IS;
            0      73     3    i1   Ljava/lang/Object;
            0      73     4    i2   Ljava/lang/Object;
    Signature: #124                         // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;Lorg/sireum/IS<TI;TT;>;TI;TI;)Z
    MethodParameters:
      Name                           Flags
      s1                             final
      s2                             final
      i1                             final
      i2                             final

  public <I extends java.lang.Object, T extends java.lang.Object> boolean msEqualExcept(org.sireum.MS<I, T>, org.sireum.MS<I, T>, I);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=5, args_size=4
         0: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #140                // Method org/sireum/MS.size:()Lorg/sireum/Z;
         7: aload_2
         8: invokevirtual #140                // Method org/sireum/MS.size:()Lorg/sireum/Z;
        11: astore        4
        13: dup
        14: ifnonnull     26
        17: pop
        18: aload         4
        20: ifnull        34
        23: goto          38
        26: aload         4
        28: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        42: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        45: invokevirtual #92                 // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
        48: aload_1
        49: invokevirtual #141                // Method org/sireum/MS.indices:()Lorg/sireum/ZRange;
        52: aload_3
        53: aload_1
        54: aload_2
        55: invokedynamic #149,  0            // InvokeDynamic #2:apply:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
        60: invokevirtual #117                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        63: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        66: iand
        67: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        70: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/sireum/ContractUtil$, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ContractUtil$, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lorg/sireum/ContractUtil$;
            0      71     1    s1   Lorg/sireum/MS;
            0      71     2    s2   Lorg/sireum/MS;
            0      71     3     i   Ljava/lang/Object;
    Signature: #137                         // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;Lorg/sireum/MS<TI;TT;>;TI;)Z
    MethodParameters:
      Name                           Flags
      s1                             final
      s2                             final
      i                              final

  public <I extends java.lang.Object, T extends java.lang.Object> boolean msEqualExcept2(org.sireum.MS<I, T>, org.sireum.MS<I, T>, I, I);
    descriptor: (Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=6, args_size=5
         0: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
         3: aload_1
         4: invokevirtual #140                // Method org/sireum/MS.size:()Lorg/sireum/Z;
         7: aload_2
         8: invokevirtual #140                // Method org/sireum/MS.size:()Lorg/sireum/Z;
        11: astore        5
        13: dup
        14: ifnonnull     26
        17: pop
        18: aload         5
        20: ifnull        34
        23: goto          38
        26: aload         5
        28: invokevirtual #83                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        31: ifeq          38
        34: iconst_1
        35: goto          39
        38: iconst_0
        39: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        42: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        45: invokevirtual #92                 // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
        48: aload_1
        49: invokevirtual #141                // Method org/sireum/MS.indices:()Lorg/sireum/ZRange;
        52: aload_3
        53: aload         4
        55: aload_1
        56: aload_2
        57: invokedynamic #161,  0            // InvokeDynamic #3:apply:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;)Lscala/Function1;
        62: invokevirtual #117                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        65: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        68: iand
        69: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        72: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 26
          locals = [ class org/sireum/ContractUtil$, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, class org/sireum/Z ]
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 67 /* same_locals_1_stack_item */
          stack = [ class org/sireum/B$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/sireum/ContractUtil$, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, class java/lang/Object, class org/sireum/Z ]
          stack = [ class org/sireum/B$, int ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      73     0  this   Lorg/sireum/ContractUtil$;
            0      73     1    s1   Lorg/sireum/MS;
            0      73     2    s2   Lorg/sireum/MS;
            0      73     3    i1   Ljava/lang/Object;
            0      73     4    i2   Ljava/lang/Object;
    Signature: #153                         // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;Lorg/sireum/MS<TI;TT;>;TI;TI;)Z
    MethodParameters:
      Name                           Flags
      s1                             final
      s2                             final
      i1                             final
      i2                             final

  public <I extends java.lang.Object, T extends java.lang.Object> boolean isAllIS(org.sireum.IS<I, T>, T);
    descriptor: (Lorg/sireum/IS;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #92                 // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
         6: aload_1
         7: invokevirtual #96                 // Method org/sireum/IS.indices:()Lorg/sireum/ZRange;
        10: aload_1
        11: aload_2
        12: invokedynamic #174,  0            // InvokeDynamic #4:apply:(Lorg/sireum/IS;Ljava/lang/Object;)Lscala/Function1;
        17: invokevirtual #117                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        20: ireturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/ContractUtil$;
            0      21     1     s   Lorg/sireum/IS;
            0      21     2     e   Ljava/lang/Object;
    Signature: #164                         // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/IS<TI;TT;>;TT;)Z
    MethodParameters:
      Name                           Flags
      s                              final
      e                              final

  public <I extends java.lang.Object, T extends java.lang.Object> boolean isAllMS(org.sireum.MS<I, T>, T);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
         3: invokevirtual #92                 // Method org/sireum/package$.All:()Lorg/sireum/contract$All$;
         6: aload_1
         7: invokevirtual #141                // Method org/sireum/MS.indices:()Lorg/sireum/ZRange;
        10: aload_1
        11: aload_2
        12: invokedynamic #185,  0            // InvokeDynamic #5:apply:(Lorg/sireum/MS;Ljava/lang/Object;)Lscala/Function1;
        17: invokevirtual #117                // Method org/sireum/contract$All$.apply:(Lorg/sireum/ZRange;Lscala/Function1;)Z
        20: ireturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/sireum/ContractUtil$;
            0      21     1     s   Lorg/sireum/MS;
            0      21     2     e   Ljava/lang/Object;
    Signature: #177                         // <I:Ljava/lang/Object;T:Ljava/lang/Object;>(Lorg/sireum/MS<TI;TT;>;TT;)Z
    MethodParameters:
      Name                           Flags
      s                              final
      e                              final

  public static final boolean $anonfun$isEqualExcept$1(java.lang.Object, org.sireum.IS, org.sireum.IS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=5, args_size=4
         0: aload_3
         1: aload_0
         2: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         5: ifne          12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: istore        4
        15: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #199                // Field org/sireum/package$$Boolean2B$.MODULE$:Lorg/sireum/package$$Boolean2B$;
        21: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: aload_1
        25: aload_3
        26: invokevirtual #201                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        29: aload_2
        30: aload_3
        31: invokevirtual #201                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        34: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: invokevirtual #204                // Method org/sireum/package$.$Boolean2B:(Z)Z
        48: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        51: iload         4
        53: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        56: invokevirtual #208                // Method org/sireum/package$$Boolean2B$.$minus$greater$colon$extension:(ZZ)Z
        59: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        62: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class java/lang/Object, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/Object, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$, int ]
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0   i$1   Ljava/lang/Object;
            0      63     1  s1$1   Lorg/sireum/IS;
            0      63     2  s2$1   Lorg/sireum/IS;
            0      63     3     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i$1                            final
      s1$1                           final
      s2$1                           final
      j                              final

  public static final boolean $anonfun$isEqualExcept2$1(java.lang.Object, java.lang.Object, org.sireum.IS, org.sireum.IS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload         4
         2: aload_0
         3: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ifne          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: aload         4
        16: aload_1
        17: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        20: ifne          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: iand
        29: istore        5
        31: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        34: getstatic     #199                // Field org/sireum/package$$Boolean2B$.MODULE$:Lorg/sireum/package$$Boolean2B$;
        37: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        40: aload_2
        41: aload         4
        43: invokevirtual #201                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        46: aload_3
        47: aload         4
        49: invokevirtual #201                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        52: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: invokevirtual #204                // Method org/sireum/package$.$Boolean2B:(Z)Z
        66: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        69: iload         5
        71: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        74: invokevirtual #208                // Method org/sireum/package$$Boolean2B$.$minus$greater$colon$extension:(ZZ)Z
        77: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        80: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/Object, class java/lang/Object, class org/sireum/IS, class org/sireum/IS, class java/lang/Object ]
          stack = [ int, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class java/lang/Object, class java/lang/Object, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/Object, class java/lang/Object, class org/sireum/IS, class org/sireum/IS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$, int ]
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  i1$1   Ljava/lang/Object;
            0      81     1  i2$1   Ljava/lang/Object;
            0      81     2  s1$2   Lorg/sireum/IS;
            0      81     3  s2$2   Lorg/sireum/IS;
            0      81     4     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i1$1                           final
      i2$1                           final
      s1$2                           final
      s2$2                           final
      j                              final

  public static final boolean $anonfun$msEqualExcept$1(java.lang.Object, org.sireum.MS, org.sireum.MS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=5, args_size=4
         0: aload_3
         1: aload_0
         2: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         5: ifne          12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: istore        4
        15: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        18: getstatic     #199                // Field org/sireum/package$$Boolean2B$.MODULE$:Lorg/sireum/package$$Boolean2B$;
        21: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        24: aload_1
        25: aload_3
        26: invokevirtual #220                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        29: aload_2
        30: aload_3
        31: invokevirtual #220                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        34: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        37: ifeq          44
        40: iconst_1
        41: goto          45
        44: iconst_0
        45: invokevirtual #204                // Method org/sireum/package$.$Boolean2B:(Z)Z
        48: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        51: iload         4
        53: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        56: invokevirtual #208                // Method org/sireum/package$$Boolean2B$.$minus$greater$colon$extension:(ZZ)Z
        59: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        62: ireturn
      StackMapTable: number_of_entries = 4
        frame_type = 12 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 30
          locals = [ class java/lang/Object, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/Object, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$, int ]
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0   i$2   Ljava/lang/Object;
            0      63     1  s1$3   Lorg/sireum/MS;
            0      63     2  s2$3   Lorg/sireum/MS;
            0      63     3     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i$2                            final
      s1$3                           final
      s2$3                           final
      j                              final

  public static final boolean $anonfun$msEqualExcept2$1(java.lang.Object, java.lang.Object, org.sireum.MS, org.sireum.MS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=6, locals=6, args_size=5
         0: aload         4
         2: aload_0
         3: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         6: ifne          13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: aload         4
        16: aload_1
        17: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        20: ifne          27
        23: iconst_1
        24: goto          28
        27: iconst_0
        28: iand
        29: istore        5
        31: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        34: getstatic     #199                // Field org/sireum/package$$Boolean2B$.MODULE$:Lorg/sireum/package$$Boolean2B$;
        37: getstatic     #88                 // Field org/sireum/package$.MODULE$:Lorg/sireum/package$;
        40: aload_2
        41: aload         4
        43: invokevirtual #220                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        46: aload_3
        47: aload         4
        49: invokevirtual #220                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
        52: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
        55: ifeq          62
        58: iconst_1
        59: goto          63
        62: iconst_0
        63: invokevirtual #204                // Method org/sireum/package$.$Boolean2B:(Z)Z
        66: getstatic     #38                 // Field org/sireum/B$.MODULE$:Lorg/sireum/B$;
        69: iload         5
        71: invokevirtual #119                // Method org/sireum/B$.apply:(Z)Z
        74: invokevirtual #208                // Method org/sireum/package$$Boolean2B$.$minus$greater$colon$extension:(ZZ)Z
        77: invokevirtual #48                 // Method org/sireum/B$.$4B:(Z)Z
        80: ireturn
      StackMapTable: number_of_entries = 6
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/Object, class java/lang/Object, class org/sireum/MS, class org/sireum/MS, class java/lang/Object ]
          stack = [ int, int ]
        frame_type = 255 /* full_frame */
          offset_delta = 33
          locals = [ class java/lang/Object, class java/lang/Object, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class java/lang/Object, class java/lang/Object, class org/sireum/MS, class org/sireum/MS, class java/lang/Object, int ]
          stack = [ class org/sireum/B$, class org/sireum/package$$Boolean2B$, class org/sireum/package$, int ]
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      81     0  i1$2   Ljava/lang/Object;
            0      81     1  i2$2   Ljava/lang/Object;
            0      81     2  s1$4   Lorg/sireum/MS;
            0      81     3  s2$4   Lorg/sireum/MS;
            0      81     4     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i1$2                           final
      i2$2                           final
      s1$4                           final
      s2$4                           final
      j                              final

  public static final boolean $anonfun$isAllIS$1(org.sireum.IS, java.lang.Object, java.lang.Object);
    descriptor: (Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #201                // Method org/sireum/IS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         5: aload_1
         6: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         9: ifeq          16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0   s$1   Lorg/sireum/IS;
            0      18     1   e$1   Ljava/lang/Object;
            0      18     2     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$1                            final
      e$1                            final
      i                              final

  public static final boolean $anonfun$isAllMS$1(org.sireum.MS, java.lang.Object, java.lang.Object);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_2
         2: invokevirtual #220                // Method org/sireum/MS.apply:(Ljava/lang/Object;)Ljava/lang/Object;
         5: aload_1
         6: invokestatic  #196                // Method scala/runtime/BoxesRunTime.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
         9: ifeq          16
        12: iconst_1
        13: goto          17
        16: iconst_0
        17: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0   s$2   Lorg/sireum/MS;
            0      18     1   e$2   Ljava/lang/Object;
            0      18     2     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$2                            final
      e$2                            final
      i                              final

  private org.sireum.ContractUtil$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #235                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 28: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/sireum/ContractUtil$;

  public static final java.lang.Object $anonfun$isEqualExcept$1$adapted(java.lang.Object, org.sireum.IS, org.sireum.IS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #237                // Method $anonfun$isEqualExcept$1:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
         7: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   i$1   Ljava/lang/Object;
            0      11     1  s1$1   Lorg/sireum/IS;
            0      11     2  s2$1   Lorg/sireum/IS;
            0      11     3     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i$1                            final
      s1$1                           final
      s2$1                           final
      j                              final

  public static final java.lang.Object $anonfun$isEqualExcept2$1$adapted(java.lang.Object, java.lang.Object, org.sireum.IS, org.sireum.IS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #243                // Method $anonfun$isEqualExcept2$1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Z
         9: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        12: areturn
      LineNumberTable:
        line 38: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  i1$1   Ljava/lang/Object;
            0      13     1  i2$1   Ljava/lang/Object;
            0      13     2  s1$2   Lorg/sireum/IS;
            0      13     3  s2$2   Lorg/sireum/IS;
            0      13     4     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i1$1                           final
      i2$1                           final
      s1$2                           final
      s2$2                           final
      j                              final

  public static final java.lang.Object $anonfun$msEqualExcept$1$adapted(java.lang.Object, org.sireum.MS, org.sireum.MS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #245                // Method $anonfun$msEqualExcept$1:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
         7: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: areturn
      LineNumberTable:
        line 41: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0   i$2   Ljava/lang/Object;
            0      11     1  s1$3   Lorg/sireum/MS;
            0      11     2  s2$3   Lorg/sireum/MS;
            0      11     3     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i$2                            final
      s1$3                           final
      s2$3                           final
      j                              final

  public static final java.lang.Object $anonfun$msEqualExcept2$1$adapted(java.lang.Object, java.lang.Object, org.sireum.MS, org.sireum.MS, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #247                // Method $anonfun$msEqualExcept2$1:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Z
         9: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        12: areturn
      LineNumberTable:
        line 44: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  i1$2   Ljava/lang/Object;
            0      13     1  i2$2   Ljava/lang/Object;
            0      13     2  s1$4   Lorg/sireum/MS;
            0      13     3  s2$4   Lorg/sireum/MS;
            0      13     4     j   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      i1$2                           final
      i2$2                           final
      s1$4                           final
      s2$4                           final
      j                              final

  public static final java.lang.Object $anonfun$isAllIS$1$adapted(org.sireum.IS, java.lang.Object, java.lang.Object);
    descriptor: (Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #249                // Method $anonfun$isAllIS$1:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 46: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   s$1   Lorg/sireum/IS;
            0      10     1   e$1   Ljava/lang/Object;
            0      10     2     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$1                            final
      e$1                            final
      i                              final

  public static final java.lang.Object $anonfun$isAllMS$1$adapted(org.sireum.MS, java.lang.Object, java.lang.Object);
    descriptor: (Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #251                // Method $anonfun$isAllMS$1:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Z
         6: invokestatic  #241                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 48: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0   s$2   Lorg/sireum/MS;
            0      10     1   e$2   Ljava/lang/Object;
            0      10     2     i   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      s$2                            final
      e$2                            final
      i                              final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #263,  0            // InvokeDynamic #6:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #10= #7 of #9;      // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public #15= #12 of #14;                 // All$=class org/sireum/contract$All$ of class org/sireum/contract
  public static #20= #17 of #19;          // $Boolean2B$=class org/sireum/package$$Boolean2B$ of class org/sireum/package
SourceFile: "ContractUtil.scala"
BootstrapMethods:
  0: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #103 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 1
  1: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #131 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 1
  2: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #146 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$msEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 1
  3: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #158 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$msEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 1
  4: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #171 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isAllIS$1$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 1
  5: #111 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #182 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isAllMS$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #98 (Ljava/lang/Object;)Ljava/lang/Object;
      #104 1
  6: #260 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #171 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isAllIS$1$adapted:(Lorg/sireum/IS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #182 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isAllMS$1$adapted:(Lorg/sireum/MS;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      #103 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
      #131 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$isEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/IS;Lorg/sireum/IS;Ljava/lang/Object;)Ljava/lang/Object;
      #146 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$msEqualExcept$1$adapted:(Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
      #158 REF_invokeStatic org/sireum/ContractUtil$.$anonfun$msEqualExcept2$1$adapted:(Ljava/lang/Object;Ljava/lang/Object;Lorg/sireum/MS;Lorg/sireum/MS;Ljava/lang/Object;)Ljava/lang/Object;
  ScalaInlineInfo: length = 0x6D (unknown attribute)
   01 01 00 15 00 E3 00 E4 01 00 A7 00 A8 01 00 E7
   00 E8 01 00 B2 00 B3 01 00 BA 00 BB 01 00 63 00
   64 01 00 D1 00 D2 01 00 7F 00 80 01 00 D7 00 D8
   01 00 8E 00 8F 01 00 DD 00 DE 01 00 9A 00 9B 01
   00 19 00 18 01 00 A2 00 A3 01 00 AF 00 B0 01 00
   44 00 45 01 00 7A 00 7B 01 00 37 00 1F 01 00 1E
   00 1F 01 00 87 00 88 01 00 97 00 98 01
  Scala: length = 0x0 (unknown attribute)

