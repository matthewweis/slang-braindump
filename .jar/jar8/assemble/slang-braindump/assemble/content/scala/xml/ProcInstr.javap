Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/xml/ProcInstr.class
  Last modified May 29, 2022; size 6330 bytes
  SHA-256 checksum b39de74e6fa4edd148bb966ebaaa0fa84b6d4564636a1338ee1d28ed286a020c
  Compiled from "ProcInstr.scala"
public class scala.xml.ProcInstr extends scala.xml.SpecialNode implements scala.Product
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/xml/ProcInstr
  super_class: #4                         // scala/xml/SpecialNode
  interfaces: 1, fields: 2, methods: 19, attributes: 4
Constant pool:
    #1 = Utf8               scala/xml/ProcInstr
    #2 = Class              #1            // scala/xml/ProcInstr
    #3 = Utf8               scala/xml/SpecialNode
    #4 = Class              #3            // scala/xml/SpecialNode
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               ProcInstr.scala
    #8 = Utf8               Lscala/reflect/ScalaSignature;
    #9 = Utf8               bytes
   #10 = Utf8               \u0006\u0005\u0005\rd\u0001\u0002\u000e\u001c\u0001\u0002B\u0001\"\u000e\u0001\u0003\u0016\u0004%\tA\u000e\u0005\t\u007f\u0001\u0011\t\u0012)A\u0005o!A\u0001\t\u0001BK\u0002\u0013\u0005a\u0007\u0003\u0005B\u0001\tE\t\u0015!\u00038\u0011\u0015\u0011\u0005\u0001\"\u0001D\u0011\u00159\u0005\u0001\"\u0012I\u0011\u0015a\u0005\u0001\"\u0012I\u0011\u0015i\u0005\u0001\"\u0002O\u0011\u00151\u0006\u0001\"\u0011O\u0011\u00159\u0006\u0001\"\u0011Y\u0011\u001d1\u0007!!A\u0005\u0002\u001dDqA\u001b\u0001\u0012\u0002\u0013\u00051\u000eC\u0004w\u0001E\u0005I\u0011A6\t\u000f]\u0004\u0011\u0011!C!\u001d\"9\u0001\u0010AA\u0001\n\u0003I\bbB?\u0001\u0003\u0003%\tA \u0005\n\u0003\u0013\u0001\u0011\u0011!C!\u0003\u0017A\u0011\"!\u0006\u0001\u0003\u0003%\t%a\u0006\b\u0013\u0005m1$!A\t\u0002\u0005ua\u0001\u0003\u000e\u001c\u0003\u0003E\t!a\b\t\r\t#B\u0011AA\u001c\u0011%\tI\u0004FA\u0001\n\u000b\nY\u0004C\u0005\u0002>Q\t\t\u0011\"!\u0002@!I\u0011Q\t\u000b\u0002\u0002\u0013\u0005\u0015q\t\u0005\n\u00033\"\u0012\u0011!C\u0005\u00037\u0012\u0011\u0002\u0015:pG&s7\u000f\u001e:\u000b\u0005qi\u0012a\u0001=nY*\ta$A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\t\u0001\tS%\u000b\t\u0003E\rj\u0011aG\u0005\u0003Im\u00111b\u00159fG&\fGNT8eKB\u0011aeJ\u0007\u0002;%\u0011\u0001&\b\u0002\b!J|G-^2u!\tQ#G\u0004\u0002,a9\u0011AfL\u0007\u0002[)\u0011afH\u0001\u0007yI|w\u000e\u001e \n\u0003yI!!M\u000f\u0002\u000fA\f7m[1hK&\u00111\u0007\u000e\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003cu\ta\u0001^1sO\u0016$X#A\u001c\u0011\u0005abdBA\u001d;!\taS$\u0003\u0002<;\u00051\u0001K]3eK\u001aL!!\u0010 \u0003\rM#(/\u001b8h\u0015\tYT$A\u0004uCJ<W\r\u001e\u0011\u0002\u0011A\u0014xn\u0019;fqR\f\u0011\u0002\u001d:pGR,\u0007\u0010\u001e\u0011\u0002\rqJg.\u001b;?)\r!UI\u0012\t\u0003E\u0001AQ!N\u0003A\u0002]BQ\u0001Q\u0003A\u0002]\n1\u0003Z8D_2dWm\u0019;OC6,7\u000f]1dKN,\u0012!\u0013\t\u0003M)K!aS\u000f\u0003\u000f\t{w\u000e\\3b]\u0006YAm\u001c+sC:\u001chm\u001c:n\u0003\u0015a\u0017MY3m+\u0005y\u0005C\u0001)V\u001b\u0005\t&B\u0001*T\u0003\u0011a\u0017M\\4\u000b\u0003Q\u000bAA[1wC&\u0011Q(U\u0001\u0005i\u0016DH/A\u0006ck&dGm\u0015;sS:<GCA-b!\tQv,D\u0001\\\u0015\taV,A\u0004nkR\f\'\r\\3\u000b\u0005yk\u0012AC2pY2,7\r^5p]&\u0011\u0001m\u0017\u0002\u000e\'R\u0014\u0018N\\4Ck&dG-\u001a:\t\u000b\tT\u0001\u0019A2\u0002\u0005M\u0014\u0007C\u00013f\u001d\t1\u0003\'\u0003\u0002ai\u0005!1m\u001c9z)\r!\u0005.\u001b\u0005\bk-\u0001\n\u00111\u00018\u0011\u001d\u00015\u0002%AA\u0002]\nabY8qs\u0012\"WMZ1vYR$\u0013\'F\u0001mU\t9TnK\u0001o!\tyG/D\u0001q\u0015\t\t(/A\u0005v]\u000eDWmY6fI*\u00111/H\u0001\u000bC:tw\u000e^1uS>t\u0017BA;q\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00133\u00035\u0001(o\u001c3vGR\u0004&/\u001a4jq\u0006a\u0001O]8ek\u000e$\u0018I]5usV\t!\u0010\u0005\u0002\'w&\u0011A0\b\u0002\u0004\u0013:$\u0018A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0004\u007f\u0006\u0015\u0001c\u0001\u0014\u0002\u0002%\u0019\u00111A\u000f\u0003\u0007\u0005s\u0017\u0010\u0003\u0005\u0002\bA\t\t\u00111\u0001{\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\u0011\u0011Q\u0002\t\u0006\u0003\u001f\t\tb`\u0007\u0002;&\u0019\u00111C/\u0003\u0011%#XM]1u_J\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR\u0019q*!\u0007\t\u0011\u0005\u001d!#!AA\u0002i\f\u0011\u0002\u0015:pG&s7\u000f\u001e:\u0011\u0005\t\"2#\u0002\u000b\u0002\"\u00055\u0002cBA\u0012\u0003S9t\u0007R\u0007\u0003\u0003KQ1!a\n\u001e\u0003\u001d\u0011XO\u001c;j[\u0016LA!a\u000b\u0002&\t\t\u0012IY:ue\u0006\u001cGOR;oGRLwN\u001c\u001a\u0011\t\u0005=\u0012QG\u0007\u0003\u0003cQ1!a\rT\u0003\tIw.C\u00024\u0003c!\"!!\b\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012aT\u0001\u0006CB\u0004H.\u001f\u000b\u0006\t\u0006\u0005\u00131\t\u0005\u0006k]\u0001\ra\u000e\u0005\u0006\u0001^\u0001\raN\u0001\bk:\f\u0007\u000f\u001d7z)\u0011\tI%!\u0016\u0011\u000b\u0019\nY%a\u0014\n\u0007\u00055SD\u0001\u0004PaRLwN\u001c\t\u0006M\u0005EsgN\u0005\u0004\u0003\'j\"A\u0002+va2,\'\u0007\u0003\u0005\u0002Xa\t\t\u00111\u0001E\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003;\u00022\u0001UA0\u0013\r\t\t\'\u0015\u0002\u0007\u001f\nTWm\u0019;
   #11 = Utf8               target
   #12 = Utf8               Ljava/lang/String;
   #13 = Utf8               proctext
   #14 = Utf8               tupled
   #15 = Utf8               ()Lscala/Function1;
   #16 = Utf8               ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;Lscala/xml/ProcInstr;>;
   #17 = Utf8               scala/xml/ProcInstr$
   #18 = Class              #17           // scala/xml/ProcInstr$
   #19 = Utf8               MODULE$
   #20 = Utf8               Lscala/xml/ProcInstr$;
   #21 = NameAndType        #19:#20       // MODULE$:Lscala/xml/ProcInstr$;
   #22 = Fieldref           #18.#21       // scala/xml/ProcInstr$.MODULE$:Lscala/xml/ProcInstr$;
   #23 = NameAndType        #14:#15       // tupled:()Lscala/Function1;
   #24 = Methodref          #18.#23       // scala/xml/ProcInstr$.tupled:()Lscala/Function1;
   #25 = Utf8               curried
   #26 = Utf8               ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/xml/ProcInstr;>;>;
   #27 = NameAndType        #25:#15       // curried:()Lscala/Function1;
   #28 = Methodref          #18.#27       // scala/xml/ProcInstr$.curried:()Lscala/Function1;
   #29 = Utf8               productElementNames
   #30 = Utf8               ()Lscala/collection/Iterator;
   #31 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #32 = Utf8               productElementNames$
   #33 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #34 = NameAndType        #32:#33       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #35 = InterfaceMethodref #6.#34        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #36 = Utf8               this
   #37 = Utf8               Lscala/xml/ProcInstr;
   #38 = Utf8               ()Ljava/lang/String;
   #39 = NameAndType        #11:#12       // target:Ljava/lang/String;
   #40 = Fieldref           #2.#39        // scala/xml/ProcInstr.target:Ljava/lang/String;
   #41 = NameAndType        #13:#12       // proctext:Ljava/lang/String;
   #42 = Fieldref           #2.#41        // scala/xml/ProcInstr.proctext:Ljava/lang/String;
   #43 = Utf8               doCollectNamespaces
   #44 = Utf8               ()Z
   #45 = Utf8               doTransform
   #46 = Utf8               label
   #47 = Utf8               #PI
   #48 = String             #47           // #PI
   #49 = Utf8               text
   #50 = Utf8
   #51 = String             #50           //
   #52 = Utf8               buildString
   #53 = Utf8               (Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
   #54 = Utf8               sb
   #55 = Utf8               scala/collection/StringOps$
   #56 = Class              #55           // scala/collection/StringOps$
   #57 = Utf8               Lscala/collection/StringOps$;
   #58 = NameAndType        #19:#57       // MODULE$:Lscala/collection/StringOps$;
   #59 = Fieldref           #56.#58       // scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
   #60 = Utf8               scala/Predef$
   #61 = Class              #60           // scala/Predef$
   #62 = Utf8               Lscala/Predef$;
   #63 = NameAndType        #19:#62       // MODULE$:Lscala/Predef$;
   #64 = Fieldref           #61.#63       // scala/Predef$.MODULE$:Lscala/Predef$;
   #65 = Utf8               <?%s%s?>
   #66 = String             #65           // <?%s%s?>
   #67 = Utf8               augmentString
   #68 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #69 = NameAndType        #67:#68       // augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #70 = Methodref          #61.#69       // scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
   #71 = Utf8               scala/runtime/ScalaRunTime$
   #72 = Class              #71           // scala/runtime/ScalaRunTime$
   #73 = Utf8               Lscala/runtime/ScalaRunTime$;
   #74 = NameAndType        #19:#73       // MODULE$:Lscala/runtime/ScalaRunTime$;
   #75 = Fieldref           #72.#74       // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
   #76 = Utf8               java/lang/Object
   #77 = Class              #76           // java/lang/Object
   #78 = NameAndType        #11:#38       // target:()Ljava/lang/String;
   #79 = Methodref          #2.#78        // scala/xml/ProcInstr.target:()Ljava/lang/String;
   #80 = NameAndType        #13:#38       // proctext:()Ljava/lang/String;
   #81 = Methodref          #2.#80        // scala/xml/ProcInstr.proctext:()Ljava/lang/String;
   #82 = Utf8               equals
   #83 = Utf8               (Ljava/lang/Object;)Z
   #84 = NameAndType        #82:#83       // equals:(Ljava/lang/Object;)Z
   #85 = Methodref          #77.#84       // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #86 = Utf8               java/lang/StringBuilder
   #87 = Class              #86           // java/lang/StringBuilder
   #88 = Integer            1
   #89 = Utf8               <init>
   #90 = Utf8               (I)V
   #91 = NameAndType        #89:#90       // "<init>":(I)V
   #92 = Methodref          #87.#91       // java/lang/StringBuilder."<init>":(I)V
   #93 = Utf8
   #94 = String             #93           //
   #95 = Utf8               append
   #96 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
   #97 = NameAndType        #95:#96       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #98 = Methodref          #87.#97       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #99 = Utf8               toString
  #100 = NameAndType        #99:#38       // toString:()Ljava/lang/String;
  #101 = Methodref          #87.#100      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #102 = Utf8               genericWrapArray
  #103 = Utf8               (Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #104 = NameAndType        #102:#103     // genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #105 = Methodref          #72.#104      // scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #106 = Utf8               format$extension
  #107 = Utf8               (Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #108 = NameAndType        #106:#107     // format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #109 = Methodref          #56.#108      // scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
  #110 = Utf8               scala/collection/mutable/StringBuilder
  #111 = Class              #110          // scala/collection/mutable/StringBuilder
  #112 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #113 = NameAndType        #95:#112      // append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #114 = Methodref          #111.#113     // scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #115 = Utf8               Lscala/collection/mutable/StringBuilder;
  #116 = Utf8               java/lang/String
  #117 = Class              #116          // java/lang/String
  #118 = Utf8               [Ljava/lang/Object;
  #119 = Class              #118          // "[Ljava/lang/Object;"
  #120 = Utf8               copy
  #121 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;
  #122 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
  #123 = NameAndType        #89:#122      // "<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #124 = Methodref          #2.#123       // scala/xml/ProcInstr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
  #125 = Utf8               copy$default$1
  #126 = Utf8               copy$default$2
  #127 = Utf8               productPrefix
  #128 = Utf8               ProcInstr
  #129 = String             #128          // ProcInstr
  #130 = Utf8               productArity
  #131 = Utf8               ()I
  #132 = Utf8               productElement
  #133 = Utf8               (I)Ljava/lang/Object;
  #134 = Utf8               x$1
  #135 = Utf8               scala/runtime/Statics
  #136 = Class              #135          // scala/runtime/Statics
  #137 = Utf8               ioobe
  #138 = NameAndType        #137:#133     // ioobe:(I)Ljava/lang/Object;
  #139 = Methodref          #136.#138     // scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
  #140 = Utf8               I
  #141 = Utf8               productIterator
  #142 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #143 = Utf8               typedProductIterator
  #144 = NameAndType        #143:#33      // typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #145 = Methodref          #72.#144      // scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
  #146 = Utf8               productElementName
  #147 = Utf8               (I)Ljava/lang/String;
  #148 = String             #11           // target
  #149 = String             #13           // proctext
  #150 = Utf8               ()V
  #151 = NameAndType        #89:#150      // "<init>":()V
  #152 = Methodref          #4.#151       // scala/xml/SpecialNode."<init>":()V
  #153 = Utf8               $init$
  #154 = Utf8               (Lscala/Product;)V
  #155 = NameAndType        #153:#154     // $init$:(Lscala/Product;)V
  #156 = InterfaceMethodref #6.#155       // scala/Product.$init$:(Lscala/Product;)V
  #157 = Utf8               scala/xml/Utility$
  #158 = Class              #157          // scala/xml/Utility$
  #159 = Utf8               Lscala/xml/Utility$;
  #160 = NameAndType        #19:#159      // MODULE$:Lscala/xml/Utility$;
  #161 = Fieldref           #158.#160     // scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
  #162 = Utf8               isName
  #163 = Utf8               (Ljava/lang/String;)Z
  #164 = NameAndType        #162:#163     // isName:(Ljava/lang/String;)Z
  #165 = Methodref          #158.#164     // scala/xml/Utility$.isName:(Ljava/lang/String;)Z
  #166 = Utf8               java/lang/IllegalArgumentException
  #167 = Class              #166          // java/lang/IllegalArgumentException
  #168 = Integer            20
  #169 = Utf8                must be an XML Name
  #170 = String             #169          //  must be an XML Name
  #171 = Utf8               (Ljava/lang/String;)V
  #172 = NameAndType        #89:#171      // "<init>":(Ljava/lang/String;)V
  #173 = Methodref          #167.#172     // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
  #174 = Utf8               ?>
  #175 = String             #174          // ?>
  #176 = Utf8               contains
  #177 = Utf8               (Ljava/lang/CharSequence;)Z
  #178 = NameAndType        #176:#177     // contains:(Ljava/lang/CharSequence;)Z
  #179 = Methodref          #117.#178     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z
  #180 = Integer            21
  #181 = Utf8                may not contain \"?>\"
  #182 = String             #181          //  may not contain \"?>\"
  #183 = Utf8               toLowerCase
  #184 = NameAndType        #183:#38      // toLowerCase:()Ljava/lang/String;
  #185 = Methodref          #117.#184     // java/lang/String.toLowerCase:()Ljava/lang/String;
  #186 = Utf8               xml
  #187 = String             #186          // xml
  #188 = Integer            12
  #189 = Utf8                is reserved
  #190 = String             #189          //  is reserved
  #191 = Utf8               Code
  #192 = Utf8               Signature
  #193 = Utf8               LineNumberTable
  #194 = Utf8               LocalVariableTable
  #195 = Utf8               StackMapTable
  #196 = Utf8               MethodParameters
  #197 = Utf8               SourceFile
  #198 = Utf8               RuntimeVisibleAnnotations
  #199 = Utf8               ScalaInlineInfo
  #200 = Utf8               ScalaSig
{
  private final java.lang.String target;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final java.lang.String proctext;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  public static scala.Function1<scala.Tuple2<java.lang.String, java.lang.String>, scala.xml.ProcInstr> tupled();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #22                 // Field scala/xml/ProcInstr$.MODULE$:Lscala/xml/ProcInstr$;
         3: invokevirtual #24                 // Method scala/xml/ProcInstr$.tupled:()Lscala/Function1;
         6: areturn
    Signature: #16                          // ()Lscala/Function1<Lscala/Tuple2<Ljava/lang/String;Ljava/lang/String;>;Lscala/xml/ProcInstr;>;

  public static scala.Function1<java.lang.String, scala.Function1<java.lang.String, scala.xml.ProcInstr>> curried();
    descriptor: ()Lscala/Function1;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #22                 // Field scala/xml/ProcInstr$.MODULE$:Lscala/xml/ProcInstr$;
         3: invokevirtual #28                 // Method scala/xml/ProcInstr$.curried:()Lscala/Function1;
         6: areturn
    Signature: #26                          // ()Lscala/Function1<Ljava/lang/String;Lscala/Function1<Ljava/lang/String;Lscala/xml/ProcInstr;>;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #35                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/ProcInstr;
    Signature: #31                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public java.lang.String target();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #40                 // Field target:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/ProcInstr;

  public java.lang.String proctext();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #42                 // Field proctext:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/ProcInstr;

  public final boolean doCollectNamespaces();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/xml/ProcInstr;

  public final boolean doTransform();
    descriptor: ()Z
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/xml/ProcInstr;

  public final java.lang.String label();
    descriptor: ()Ljava/lang/String;
    flags: (0x0011) ACC_PUBLIC, ACC_FINAL
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #48                 // String #PI
         2: areturn
      LineNumberTable:
        line 34: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/xml/ProcInstr;

  public java.lang.String text();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #51                 // String
         2: areturn
      LineNumberTable:
        line 35: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/xml/ProcInstr;

  public scala.collection.mutable.StringBuilder buildString(scala.collection.mutable.StringBuilder);
    descriptor: (Lscala/collection/mutable/StringBuilder;)Lscala/collection/mutable/StringBuilder;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=10, locals=3, args_size=2
         0: aload_1
         1: getstatic     #59                 // Field scala/collection/StringOps$.MODULE$:Lscala/collection/StringOps$;
         4: getstatic     #64                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
         7: ldc           #66                 // String <?%s%s?>
         9: invokevirtual #70                 // Method scala/Predef$.augmentString:(Ljava/lang/String;)Ljava/lang/String;
        12: getstatic     #75                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        15: iconst_2
        16: anewarray     #77                 // class java/lang/Object
        19: dup
        20: iconst_0
        21: aload_0
        22: invokevirtual #79                 // Method target:()Ljava/lang/String;
        25: aastore
        26: dup
        27: iconst_1
        28: aload_0
        29: invokevirtual #81                 // Method proctext:()Ljava/lang/String;
        32: ldc           #51                 // String
        34: astore_2
        35: dup
        36: ifnonnull     47
        39: pop
        40: aload_2
        41: ifnull        54
        44: goto          59
        47: aload_2
        48: invokevirtual #85                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        51: ifeq          59
        54: ldc           #51                 // String
        56: goto          83
        59: new           #87                 // class java/lang/StringBuilder
        62: dup
        63: ldc           #88                 // int 1
        65: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(I)V
        68: ldc           #94                 // String
        70: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        73: aload_0
        74: invokevirtual #81                 // Method proctext:()Ljava/lang/String;
        77: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        80: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        83: aastore
        84: invokevirtual #105                // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        87: invokevirtual #109                // Method scala/collection/StringOps$.format$extension:(Ljava/lang/String;Lscala/collection/immutable/Seq;)Ljava/lang/String;
        90: invokevirtual #114                // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
        93: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 255 /* full_frame */
          offset_delta = 47
          locals = [ class scala/xml/ProcInstr, class scala/collection/mutable/StringBuilder, class java/lang/String ]
          stack = [ class scala/collection/mutable/StringBuilder, class scala/collection/StringOps$, class java/lang/String, class scala/runtime/ScalaRunTime$, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class scala/xml/ProcInstr, class scala/collection/mutable/StringBuilder, class java/lang/String ]
          stack = [ class scala/collection/mutable/StringBuilder, class scala/collection/StringOps$, class java/lang/String, class scala/runtime/ScalaRunTime$, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 4
          locals = [ class scala/xml/ProcInstr, class scala/collection/mutable/StringBuilder, class java/lang/String ]
          stack = [ class scala/collection/mutable/StringBuilder, class scala/collection/StringOps$, class java/lang/String, class scala/runtime/ScalaRunTime$, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int ]
        frame_type = 255 /* full_frame */
          offset_delta = 23
          locals = [ class scala/xml/ProcInstr, class scala/collection/mutable/StringBuilder, class java/lang/String ]
          stack = [ class scala/collection/mutable/StringBuilder, class scala/collection/StringOps$, class java/lang/String, class scala/runtime/ScalaRunTime$, class "[Ljava/lang/Object;", class "[Ljava/lang/Object;", int, class java/lang/String ]
      LineNumberTable:
        line 42: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      94     0  this   Lscala/xml/ProcInstr;
            0      94     1    sb   Lscala/collection/mutable/StringBuilder;
    MethodParameters:
      Name                           Flags
      sb                             final

  public scala.xml.ProcInstr copy(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Lscala/xml/ProcInstr;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: new           #2                  // class scala/xml/ProcInstr
         3: dup
         4: aload_1
         5: aload_2
         6: invokespecial #124                // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
         9: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/xml/ProcInstr;
            0      10     1 target   Ljava/lang/String;
            0      10     2 proctext   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      target                         final
      proctext                       final

  public java.lang.String copy$default$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #79                 // Method target:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/ProcInstr;

  public java.lang.String copy$default$2();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #81                 // Method proctext:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/xml/ProcInstr;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #129                // String ProcInstr
         2: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lscala/xml/ProcInstr;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lscala/xml/ProcInstr;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #79                 // Method target:()Ljava/lang/String;
        28: goto          45
        31: aload_0
        32: invokevirtual #81                 // Method proctext:()Ljava/lang/String;
        35: goto          45
        38: iload_1
        39: invokestatic  #139                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        42: goto          45
        45: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      46     0  this   Lscala/xml/ProcInstr;
            0      46     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
         3: aload_0
         4: invokevirtual #145                // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
         7: areturn
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/xml/ProcInstr;
    Signature: #142                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 29
                 default: 34
            }
        24: ldc           #148                // String target
        26: goto          44
        29: ldc           #149                // String proctext
        31: goto          44
        34: iload_1
        35: invokestatic  #139                // Method scala/runtime/Statics.ioobe:(I)Ljava/lang/Object;
        38: checkcast     #117                // class java/lang/String
        41: goto          44
        44: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 4 /* same */
        frame_type = 4 /* same */
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0  this   Lscala/xml/ProcInstr;
            0      45     1   x$1   I
    MethodParameters:
      Name                           Flags
      x$1                            final

  public scala.xml.ProcInstr(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #40                 // Field target:Ljava/lang/String;
         5: aload_0
         6: aload_2
         7: putfield      #42                 // Field proctext:Ljava/lang/String;
        10: aload_0
        11: invokespecial #152                // Method scala/xml/SpecialNode."<init>":()V
        14: aload_0
        15: invokestatic  #156                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        18: getstatic     #161                // Field scala/xml/Utility$.MODULE$:Lscala/xml/Utility$;
        21: aload_1
        22: invokevirtual #165                // Method scala/xml/Utility$.isName:(Ljava/lang/String;)Z
        25: ifne          57
        28: new           #167                // class java/lang/IllegalArgumentException
        31: dup
        32: new           #87                 // class java/lang/StringBuilder
        35: dup
        36: ldc           #168                // int 20
        38: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(I)V
        41: aload_1
        42: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        45: ldc           #170                // String  must be an XML Name
        47: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        50: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        53: invokespecial #173                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        56: athrow
        57: aload_2
        58: ldc           #175                // String ?>
        60: invokevirtual #179                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
        63: ifeq          95
        66: new           #167                // class java/lang/IllegalArgumentException
        69: dup
        70: new           #87                 // class java/lang/StringBuilder
        73: dup
        74: ldc           #180                // int 21
        76: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(I)V
        79: aload_2
        80: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        83: ldc           #182                // String  may not contain \"?>\"
        85: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        88: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        91: invokespecial #173                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        94: athrow
        95: aload_1
        96: invokevirtual #185                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
        99: ldc           #187                // String xml
       101: astore_3
       102: dup
       103: ifnonnull     114
       106: pop
       107: aload_3
       108: ifnull        121
       111: goto          150
       114: aload_3
       115: invokevirtual #85                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       118: ifeq          150
       121: new           #167                // class java/lang/IllegalArgumentException
       124: dup
       125: new           #87                 // class java/lang/StringBuilder
       128: dup
       129: ldc           #188                // int 12
       131: invokespecial #92                 // Method java/lang/StringBuilder."<init>":(I)V
       134: aload_1
       135: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       138: ldc           #190                // String  is reserved
       140: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       143: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       146: invokespecial #173                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       149: athrow
       150: return
      StackMapTable: number_of_entries = 5
        frame_type = 255 /* full_frame */
          offset_delta = 57
          locals = [ class scala/xml/ProcInstr, class java/lang/String, class java/lang/String ]
          stack = []
        frame_type = 37 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 18
          locals = [ class scala/xml/ProcInstr, class java/lang/String, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String ]
        frame_type = 6 /* same */
        frame_type = 28 /* same */
      LineNumberTable:
        line 23: 0
        line 24: 18
        line 25: 28
        line 26: 57
        line 27: 66
        line 28: 95
        line 29: 121
        line 23: 150
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     151     0  this   Lscala/xml/ProcInstr;
            0     151     1 target   Ljava/lang/String;
            0     151     2 proctext   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      target                         final
      proctext                       final
}
SourceFile: "ProcInstr.scala"
RuntimeVisibleAnnotations:
  0: #8(#9=s#10)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005\rd\u0001\u0002\u000e\u001c\u0001\u0002B\u0001\"\u000e\u0001\u0003\u0016\u0004%\tA\u000e\u0005\t\u007f\u0001\u0011\t\u0012)A\u0005o!A\u0001\t\u0001BK\u0002\u0013\u0005a\u0007\u0003\u0005B\u0001\tE\t\u0015!\u00038\u0011\u0015\u0011\u0005\u0001\"\u0001D\u0011\u00159\u0005\u0001\"\u0012I\u0011\u0015a\u0005\u0001\"\u0012I\u0011\u0015i\u0005\u0001\"\u0002O\u0011\u00151\u0006\u0001\"\u0011O\u0011\u00159\u0006\u0001\"\u0011Y\u0011\u001d1\u0007!!A\u0005\u0002\u001dDqA\u001b\u0001\u0012\u0002\u0013\u00051\u000eC\u0004w\u0001E\u0005I\u0011A6\t\u000f]\u0004\u0011\u0011!C!\u001d\"9\u0001\u0010AA\u0001\n\u0003I\bbB?\u0001\u0003\u0003%\tA \u0005\n\u0003\u0013\u0001\u0011\u0011!C!\u0003\u0017A\u0011\"!\u0006\u0001\u0003\u0003%\t%a\u0006\b\u0013\u0005m1$!A\t\u0002\u0005ua\u0001\u0003\u000e\u001c\u0003\u0003E\t!a\b\t\r\t#B\u0011AA\u001c\u0011%\tI\u0004FA\u0001\n\u000b\nY\u0004C\u0005\u0002>Q\t\t\u0011\"!\u0002@!I\u0011Q\t\u000b\u0002\u0002\u0013\u0005\u0015q\t\u0005\n\u00033\"\u0012\u0011!C\u0005\u00037\u0012\u0011\u0002\u0015:pG&s7\u000f\u001e:\u000b\u0005qi\u0012a\u0001=nY*\ta$A\u0003tG\u0006d\u0017m\u0001\u0001\u0014\t\u0001\tS%\u000b\t\u0003E\rj\u0011aG\u0005\u0003Im\u00111b\u00159fG&\fGNT8eKB\u0011aeJ\u0007\u0002;%\u0011\u0001&\b\u0002\b!J|G-^2u!\tQ#G\u0004\u0002,a9\u0011AfL\u0007\u0002[)\u0011afH\u0001\u0007yI|w\u000e\u001e \n\u0003yI!!M\u000f\u0002\u000fA\f7m[1hK&\u00111\u0007\u000e\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0003cu\ta\u0001^1sO\u0016$X#A\u001c\u0011\u0005abdBA\u001d;!\taS$\u0003\u0002<;\u00051\u0001K]3eK\u001aL!!\u0010 \u0003\rM#(/\u001b8h\u0015\tYT$A\u0004uCJ<W\r\u001e\u0011\u0002\u0011A\u0014xn\u0019;fqR\f\u0011\u0002\u001d:pGR,\u0007\u0010\u001e\u0011\u0002\rqJg.\u001b;?)\r!UI\u0012\t\u0003E\u0001AQ!N\u0003A\u0002]BQ\u0001Q\u0003A\u0002]\n1\u0003Z8D_2dWm\u0019;OC6,7\u000f]1dKN,\u0012!\u0013\t\u0003M)K!aS\u000f\u0003\u000f\t{w\u000e\\3b]\u0006YAm\u001c+sC:\u001chm\u001c:n\u0003\u0015a\u0017MY3m+\u0005y\u0005C\u0001)V\u001b\u0005\t&B\u0001*T\u0003\u0011a\u0017M\\4\u000b\u0003Q\u000bAA[1wC&\u0011Q(U\u0001\u0005i\u0016DH/A\u0006ck&dGm\u0015;sS:<GCA-b!\tQv,D\u0001\\\u0015\taV,A\u0004nkR\f\'\r\\3\u000b\u0005yk\u0012AC2pY2,7\r^5p]&\u0011\u0001m\u0017\u0002\u000e\'R\u0014\u0018N\\4Ck&dG-\u001a:\t\u000b\tT\u0001\u0019A2\u0002\u0005M\u0014\u0007C\u00013f\u001d\t1\u0003\'\u0003\u0002ai\u0005!1m\u001c9z)\r!\u0005.\u001b\u0005\bk-\u0001\n\u00111\u00018\u0011\u001d\u00015\u0002%AA\u0002]\nabY8qs\u0012\"WMZ1vYR$\u0013\'F\u0001mU\t9TnK\u0001o!\tyG/D\u0001q\u0015\t\t(/A\u0005v]\u000eDWmY6fI*\u00111/H\u0001\u000bC:tw\u000e^1uS>t\u0017BA;q\u0005E)hn\u00195fG.,GMV1sS\u0006t7-Z\u0001\u000fG>\u0004\u0018\u0010\n3fM\u0006,H\u000e\u001e\u00133\u00035\u0001(o\u001c3vGR\u0004&/\u001a4jq\u0006a\u0001O]8ek\u000e$\u0018I]5usV\t!\u0010\u0005\u0002\'w&\u0011A0\b\u0002\u0004\u0013:$\u0018A\u00049s_\u0012,8\r^#mK6,g\u000e\u001e\u000b\u0004\u007f\u0006\u0015\u0001c\u0001\u0014\u0002\u0002%\u0019\u00111A\u000f\u0003\u0007\u0005s\u0017\u0010\u0003\u0005\u0002\bA\t\t\u00111\u0001{\u0003\rAH%M\u0001\u0010aJ|G-^2u\u0013R,\'/\u0019;peV\u0011\u0011Q\u0002\t\u0006\u0003\u001f\t\tb`\u0007\u0002;&\u0019\u00111C/\u0003\u0011%#XM]1u_J\f!\u0003\u001d:pIV\u001cG/\u00127f[\u0016tGOT1nKR\u0019q*!\u0007\t\u0011\u0005\u001d!#!AA\u0002i\f\u0011\u0002\u0015:pG&s7\u000f\u001e:\u0011\u0005\t\"2#\u0002\u000b\u0002\"\u00055\u0002cBA\u0012\u0003S9t\u0007R\u0007\u0003\u0003KQ1!a\n\u001e\u0003\u001d\u0011XO\u001c;j[\u0016LA!a\u000b\u0002&\t\t\u0012IY:ue\u0006\u001cGOR;oGRLwN\u001c\u001a\u0011\t\u0005=\u0012QG\u0007\u0003\u0003cQ1!a\rT\u0003\tIw.C\u00024\u0003c!\"!!\b\u0002\u0011Q|7\u000b\u001e:j]\u001e$\u0012aT\u0001\u0006CB\u0004H.\u001f\u000b\u0006\t\u0006\u0005\u00131\t\u0005\u0006k]\u0001\ra\u000e\u0005\u0006\u0001^\u0001\raN\u0001\bk:\f\u0007\u000f\u001d7z)\u0011\tI%!\u0016\u0011\u000b\u0019\nY%a\u0014\n\u0007\u00055SD\u0001\u0004PaRLwN\u001c\t\u0006M\u0005EsgN\u0005\u0004\u0003\'j\"A\u0002+va2,\'\u0007\u0003\u0005\u0002Xa\t\t\u00111\u0001E\u0003\rAH\u0005M\u0001\roJLG/\u001a*fa2\f7-\u001a\u000b\u0003\u0003;\u00022\u0001UA0\u0013\r\t\t\'\u0015\u0002\u0007\u001f\nTWm\u0019;"
    )
  ScalaInlineInfo: length = 0x59 (unknown attribute)
   01 00 00 11 00 59 00 7A 00 00 34 00 35 00 00 78
   00 79 00 00 7D 00 26 00 00 7E 00 26 00 00 2B 00
   2C 01 00 2D 00 2C 01 00 2E 00 26 01 00 0D 00 26
   00 00 82 00 83 00 00 84 00 85 00 00 92 00 93 00
   00 1D 00 1E 00 00 8D 00 1E 00 00 7F 00 26 00 00
   0B 00 26 00 00 31 00 26 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
