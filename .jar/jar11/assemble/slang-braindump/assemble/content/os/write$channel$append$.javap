Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/os/write$channel$append$.class
  Last modified May 29, 2022; size 6505 bytes
  SHA-256 checksum 71882762ce45315d24bf781c88c2a40b5c2b41359893841959a3c26c27a2ce5a
  Compiled from "ReadWriteOps.scala"
public class os.write$channel$append$ extends java.lang.Object implements scala.Function1<os.Path, java.nio.channels.SeekableByteChannel>
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // os/write$channel$append$
  super_class: #5                         // java/lang/Object
  interfaces: 1, fields: 1, methods: 31, attributes: 5
Constant pool:
    #1 = Utf8               os/write$channel$append$
    #2 = Class              #1            // os/write$channel$append$
    #3 = Utf8               Ljava/lang/Object;Lscala/Function1<Los/Path;Ljava/nio/channels/SeekableByteChannel;>;
    #4 = Utf8               java/lang/Object
    #5 = Class              #4            // java/lang/Object
    #6 = Utf8               scala/Function1
    #7 = Class              #6            // scala/Function1
    #8 = Utf8               ReadWriteOps.scala
    #9 = Utf8               os/write$channel$
   #10 = Class              #9            // os/write$channel$
   #11 = Utf8               os/write
   #12 = Class              #11           // os/write
   #13 = Utf8               channel$
   #14 = Utf8               append$
   #15 = Utf8               MODULE$
   #16 = Utf8               Los/write$channel$append$;
   #17 = Utf8               <clinit>
   #18 = Utf8               ()V
   #19 = Utf8               <init>
   #20 = NameAndType        #19:#18       // "<init>":()V
   #21 = Methodref          #2.#20        // os/write$channel$append$."<init>":()V
   #22 = NameAndType        #15:#16       // MODULE$:Los/write$channel$append$;
   #23 = Fieldref           #2.#22        // os/write$channel$append$.MODULE$:Los/write$channel$append$;
   #24 = Utf8               $init$
   #25 = Utf8               (Lscala/Function1;)V
   #26 = NameAndType        #24:#25       // $init$:(Lscala/Function1;)V
   #27 = InterfaceMethodref #7.#26        // scala/Function1.$init$:(Lscala/Function1;)V
   #28 = Utf8               apply$mcZD$sp
   #29 = Utf8               (D)Z
   #30 = Utf8               v1
   #31 = Utf8               apply$mcZD$sp$
   #32 = Utf8               (Lscala/Function1;D)Z
   #33 = NameAndType        #31:#32       // apply$mcZD$sp$:(Lscala/Function1;D)Z
   #34 = InterfaceMethodref #7.#33        // scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
   #35 = Utf8               this
   #36 = Utf8               D
   #37 = Utf8               apply$mcDD$sp
   #38 = Utf8               (D)D
   #39 = Utf8               apply$mcDD$sp$
   #40 = Utf8               (Lscala/Function1;D)D
   #41 = NameAndType        #39:#40       // apply$mcDD$sp$:(Lscala/Function1;D)D
   #42 = InterfaceMethodref #7.#41        // scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
   #43 = Utf8               apply$mcFD$sp
   #44 = Utf8               (D)F
   #45 = Utf8               apply$mcFD$sp$
   #46 = Utf8               (Lscala/Function1;D)F
   #47 = NameAndType        #45:#46       // apply$mcFD$sp$:(Lscala/Function1;D)F
   #48 = InterfaceMethodref #7.#47        // scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
   #49 = Utf8               apply$mcID$sp
   #50 = Utf8               (D)I
   #51 = Utf8               apply$mcID$sp$
   #52 = Utf8               (Lscala/Function1;D)I
   #53 = NameAndType        #51:#52       // apply$mcID$sp$:(Lscala/Function1;D)I
   #54 = InterfaceMethodref #7.#53        // scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
   #55 = Utf8               apply$mcJD$sp
   #56 = Utf8               (D)J
   #57 = Utf8               apply$mcJD$sp$
   #58 = Utf8               (Lscala/Function1;D)J
   #59 = NameAndType        #57:#58       // apply$mcJD$sp$:(Lscala/Function1;D)J
   #60 = InterfaceMethodref #7.#59        // scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
   #61 = Utf8               apply$mcVD$sp
   #62 = Utf8               (D)V
   #63 = Utf8               apply$mcVD$sp$
   #64 = Utf8               (Lscala/Function1;D)V
   #65 = NameAndType        #63:#64       // apply$mcVD$sp$:(Lscala/Function1;D)V
   #66 = InterfaceMethodref #7.#65        // scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
   #67 = Utf8               apply$mcZF$sp
   #68 = Utf8               (F)Z
   #69 = Utf8               apply$mcZF$sp$
   #70 = Utf8               (Lscala/Function1;F)Z
   #71 = NameAndType        #69:#70       // apply$mcZF$sp$:(Lscala/Function1;F)Z
   #72 = InterfaceMethodref #7.#71        // scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
   #73 = Utf8               F
   #74 = Utf8               apply$mcDF$sp
   #75 = Utf8               (F)D
   #76 = Utf8               apply$mcDF$sp$
   #77 = Utf8               (Lscala/Function1;F)D
   #78 = NameAndType        #76:#77       // apply$mcDF$sp$:(Lscala/Function1;F)D
   #79 = InterfaceMethodref #7.#78        // scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
   #80 = Utf8               apply$mcFF$sp
   #81 = Utf8               (F)F
   #82 = Utf8               apply$mcFF$sp$
   #83 = Utf8               (Lscala/Function1;F)F
   #84 = NameAndType        #82:#83       // apply$mcFF$sp$:(Lscala/Function1;F)F
   #85 = InterfaceMethodref #7.#84        // scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
   #86 = Utf8               apply$mcIF$sp
   #87 = Utf8               (F)I
   #88 = Utf8               apply$mcIF$sp$
   #89 = Utf8               (Lscala/Function1;F)I
   #90 = NameAndType        #88:#89       // apply$mcIF$sp$:(Lscala/Function1;F)I
   #91 = InterfaceMethodref #7.#90        // scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
   #92 = Utf8               apply$mcJF$sp
   #93 = Utf8               (F)J
   #94 = Utf8               apply$mcJF$sp$
   #95 = Utf8               (Lscala/Function1;F)J
   #96 = NameAndType        #94:#95       // apply$mcJF$sp$:(Lscala/Function1;F)J
   #97 = InterfaceMethodref #7.#96        // scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
   #98 = Utf8               apply$mcVF$sp
   #99 = Utf8               (F)V
  #100 = Utf8               apply$mcVF$sp$
  #101 = Utf8               (Lscala/Function1;F)V
  #102 = NameAndType        #100:#101     // apply$mcVF$sp$:(Lscala/Function1;F)V
  #103 = InterfaceMethodref #7.#102       // scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
  #104 = Utf8               apply$mcZI$sp
  #105 = Utf8               (I)Z
  #106 = Utf8               apply$mcZI$sp$
  #107 = Utf8               (Lscala/Function1;I)Z
  #108 = NameAndType        #106:#107     // apply$mcZI$sp$:(Lscala/Function1;I)Z
  #109 = InterfaceMethodref #7.#108       // scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
  #110 = Utf8               I
  #111 = Utf8               apply$mcDI$sp
  #112 = Utf8               (I)D
  #113 = Utf8               apply$mcDI$sp$
  #114 = Utf8               (Lscala/Function1;I)D
  #115 = NameAndType        #113:#114     // apply$mcDI$sp$:(Lscala/Function1;I)D
  #116 = InterfaceMethodref #7.#115       // scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
  #117 = Utf8               apply$mcFI$sp
  #118 = Utf8               (I)F
  #119 = Utf8               apply$mcFI$sp$
  #120 = Utf8               (Lscala/Function1;I)F
  #121 = NameAndType        #119:#120     // apply$mcFI$sp$:(Lscala/Function1;I)F
  #122 = InterfaceMethodref #7.#121       // scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
  #123 = Utf8               apply$mcII$sp
  #124 = Utf8               (I)I
  #125 = Utf8               apply$mcII$sp$
  #126 = Utf8               (Lscala/Function1;I)I
  #127 = NameAndType        #125:#126     // apply$mcII$sp$:(Lscala/Function1;I)I
  #128 = InterfaceMethodref #7.#127       // scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
  #129 = Utf8               apply$mcJI$sp
  #130 = Utf8               (I)J
  #131 = Utf8               apply$mcJI$sp$
  #132 = Utf8               (Lscala/Function1;I)J
  #133 = NameAndType        #131:#132     // apply$mcJI$sp$:(Lscala/Function1;I)J
  #134 = InterfaceMethodref #7.#133       // scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
  #135 = Utf8               apply$mcVI$sp
  #136 = Utf8               (I)V
  #137 = Utf8               apply$mcVI$sp$
  #138 = Utf8               (Lscala/Function1;I)V
  #139 = NameAndType        #137:#138     // apply$mcVI$sp$:(Lscala/Function1;I)V
  #140 = InterfaceMethodref #7.#139       // scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
  #141 = Utf8               apply$mcZJ$sp
  #142 = Utf8               (J)Z
  #143 = Utf8               apply$mcZJ$sp$
  #144 = Utf8               (Lscala/Function1;J)Z
  #145 = NameAndType        #143:#144     // apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #146 = InterfaceMethodref #7.#145       // scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
  #147 = Utf8               J
  #148 = Utf8               apply$mcDJ$sp
  #149 = Utf8               (J)D
  #150 = Utf8               apply$mcDJ$sp$
  #151 = Utf8               (Lscala/Function1;J)D
  #152 = NameAndType        #150:#151     // apply$mcDJ$sp$:(Lscala/Function1;J)D
  #153 = InterfaceMethodref #7.#152       // scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
  #154 = Utf8               apply$mcFJ$sp
  #155 = Utf8               (J)F
  #156 = Utf8               apply$mcFJ$sp$
  #157 = Utf8               (Lscala/Function1;J)F
  #158 = NameAndType        #156:#157     // apply$mcFJ$sp$:(Lscala/Function1;J)F
  #159 = InterfaceMethodref #7.#158       // scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
  #160 = Utf8               apply$mcIJ$sp
  #161 = Utf8               (J)I
  #162 = Utf8               apply$mcIJ$sp$
  #163 = Utf8               (Lscala/Function1;J)I
  #164 = NameAndType        #162:#163     // apply$mcIJ$sp$:(Lscala/Function1;J)I
  #165 = InterfaceMethodref #7.#164       // scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
  #166 = Utf8               apply$mcJJ$sp
  #167 = Utf8               (J)J
  #168 = Utf8               apply$mcJJ$sp$
  #169 = Utf8               (Lscala/Function1;J)J
  #170 = NameAndType        #168:#169     // apply$mcJJ$sp$:(Lscala/Function1;J)J
  #171 = InterfaceMethodref #7.#170       // scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
  #172 = Utf8               apply$mcVJ$sp
  #173 = Utf8               (J)V
  #174 = Utf8               apply$mcVJ$sp$
  #175 = Utf8               (Lscala/Function1;J)V
  #176 = NameAndType        #174:#175     // apply$mcVJ$sp$:(Lscala/Function1;J)V
  #177 = InterfaceMethodref #7.#176       // scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
  #178 = Utf8               compose
  #179 = Utf8               (Lscala/Function1;)Lscala/Function1;
  #180 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/Path;>;)Lscala/Function1<TA;Ljava/nio/channels/SeekableByteChannel;>;
  #181 = Utf8               g
  #182 = Utf8               compose$
  #183 = Utf8               (Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #184 = NameAndType        #182:#183     // compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #185 = InterfaceMethodref #7.#184       // scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #186 = Utf8               Lscala/Function1;
  #187 = Utf8               andThen
  #188 = Utf8               <A:Ljava/lang/Object;>(Lscala/Function1<Ljava/nio/channels/SeekableByteChannel;TA;>;)Lscala/Function1<Los/Path;TA;>;
  #189 = Utf8               andThen$
  #190 = NameAndType        #189:#183     // andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #191 = InterfaceMethodref #7.#190       // scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
  #192 = Utf8               toString
  #193 = Utf8               ()Ljava/lang/String;
  #194 = Utf8               toString$
  #195 = Utf8               (Lscala/Function1;)Ljava/lang/String;
  #196 = NameAndType        #194:#195     // toString$:(Lscala/Function1;)Ljava/lang/String;
  #197 = InterfaceMethodref #7.#196       // scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
  #198 = Utf8               apply
  #199 = Utf8               (Los/Path;)Ljava/nio/channels/SeekableByteChannel;
  #200 = Utf8               p
  #201 = Utf8               Los/write$channel$;
  #202 = NameAndType        #15:#201      // MODULE$:Los/write$channel$;
  #203 = Fieldref           #10.#202      // os/write$channel$.MODULE$:Los/write$channel$;
  #204 = Utf8               scala/package$
  #205 = Class              #204          // scala/package$
  #206 = Utf8               Lscala/package$;
  #207 = NameAndType        #15:#206      // MODULE$:Lscala/package$;
  #208 = Fieldref           #205.#207     // scala/package$.MODULE$:Lscala/package$;
  #209 = Utf8               Seq
  #210 = Utf8               ()Lscala/collection/immutable/Seq$;
  #211 = NameAndType        #209:#210     // Seq:()Lscala/collection/immutable/Seq$;
  #212 = Methodref          #205.#211     // scala/package$.Seq:()Lscala/collection/immutable/Seq$;
  #213 = Utf8               scala/runtime/ScalaRunTime$
  #214 = Class              #213          // scala/runtime/ScalaRunTime$
  #215 = Utf8               Lscala/runtime/ScalaRunTime$;
  #216 = NameAndType        #15:#215      // MODULE$:Lscala/runtime/ScalaRunTime$;
  #217 = Fieldref           #214.#216     // scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
  #218 = Utf8               java/nio/file/StandardOpenOption
  #219 = Class              #218          // java/nio/file/StandardOpenOption
  #220 = Utf8               CREATE
  #221 = Utf8               Ljava/nio/file/StandardOpenOption;
  #222 = NameAndType        #220:#221     // CREATE:Ljava/nio/file/StandardOpenOption;
  #223 = Fieldref           #219.#222     // java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
  #224 = Utf8               APPEND
  #225 = NameAndType        #224:#221     // APPEND:Ljava/nio/file/StandardOpenOption;
  #226 = Fieldref           #219.#225     // java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;
  #227 = Utf8               WRITE
  #228 = NameAndType        #227:#221     // WRITE:Ljava/nio/file/StandardOpenOption;
  #229 = Fieldref           #219.#228     // java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
  #230 = Utf8               [Ljava/lang/Object;
  #231 = Class              #230          // "[Ljava/lang/Object;"
  #232 = Utf8               wrapRefArray
  #233 = Utf8               ([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #234 = NameAndType        #232:#233     // wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #235 = Methodref          #214.#234     // scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
  #236 = Utf8               scala/collection/immutable/Seq$
  #237 = Class              #236          // scala/collection/immutable/Seq$
  #238 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #239 = NameAndType        #198:#238     // apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #240 = Methodref          #237.#239     // scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
  #241 = Utf8               scala/collection/immutable/Seq
  #242 = Class              #241          // scala/collection/immutable/Seq
  #243 = Utf8               write
  #244 = Utf8               (Los/Path;Lscala/collection/immutable/Seq;)Ljava/nio/channels/SeekableByteChannel;
  #245 = NameAndType        #243:#244     // write:(Los/Path;Lscala/collection/immutable/Seq;)Ljava/nio/channels/SeekableByteChannel;
  #246 = Methodref          #10.#245      // os/write$channel$.write:(Los/Path;Lscala/collection/immutable/Seq;)Ljava/nio/channels/SeekableByteChannel;
  #247 = Utf8               Los/Path;
  #248 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #249 = Utf8               os/Path
  #250 = Class              #249          // os/Path
  #251 = NameAndType        #198:#199     // apply:(Los/Path;)Ljava/nio/channels/SeekableByteChannel;
  #252 = Methodref          #2.#251       // os/write$channel$append$.apply:(Los/Path;)Ljava/nio/channels/SeekableByteChannel;
  #253 = Utf8               Ljava/lang/Object;
  #254 = Methodref          #5.#20        // java/lang/Object."<init>":()V
  #255 = Utf8               Code
  #256 = Utf8               LineNumberTable
  #257 = Utf8               LocalVariableTable
  #258 = Utf8               MethodParameters
  #259 = Utf8               Signature
  #260 = Utf8               InnerClasses
  #261 = Utf8               SourceFile
  #262 = Utf8               ScalaInlineInfo
  #263 = Utf8               Scala
{
  public static final os.write$channel$append$ MODULE$;
    descriptor: Los/write$channel$append$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class os/write$channel$append$
         3: dup
         4: invokespecial #21                 // Method "<init>":()V
         7: putstatic     #23                 // Field MODULE$:Los/write$channel$append$;
        10: getstatic     #23                 // Field MODULE$:Los/write$channel$append$;
        13: invokestatic  #27                 // InterfaceMethod scala/Function1.$init$:(Lscala/Function1;)V
        16: return
      LineNumberTable:
        line 167: 0

  public boolean apply$mcZD$sp(double);
    descriptor: (D)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #34                 // InterfaceMethod scala/Function1.apply$mcZD$sp$:(Lscala/Function1;D)Z
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDD$sp(double);
    descriptor: (D)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #42                 // InterfaceMethod scala/Function1.apply$mcDD$sp$:(Lscala/Function1;D)D
         5: dreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFD$sp(double);
    descriptor: (D)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #48                 // InterfaceMethod scala/Function1.apply$mcFD$sp$:(Lscala/Function1;D)F
         5: freturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcID$sp(double);
    descriptor: (D)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #54                 // InterfaceMethod scala/Function1.apply$mcID$sp$:(Lscala/Function1;D)I
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJD$sp(double);
    descriptor: (D)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #60                 // InterfaceMethod scala/Function1.apply$mcJD$sp$:(Lscala/Function1;D)J
         5: lreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVD$sp(double);
    descriptor: (D)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: dload_1
         2: invokestatic  #66                 // InterfaceMethod scala/Function1.apply$mcVD$sp$:(Lscala/Function1;D)V
         5: return
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   D
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZF$sp(float);
    descriptor: (F)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #72                 // InterfaceMethod scala/Function1.apply$mcZF$sp$:(Lscala/Function1;F)Z
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDF$sp(float);
    descriptor: (F)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #79                 // InterfaceMethod scala/Function1.apply$mcDF$sp$:(Lscala/Function1;F)D
         5: dreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFF$sp(float);
    descriptor: (F)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #85                 // InterfaceMethod scala/Function1.apply$mcFF$sp$:(Lscala/Function1;F)F
         5: freturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIF$sp(float);
    descriptor: (F)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #91                 // InterfaceMethod scala/Function1.apply$mcIF$sp$:(Lscala/Function1;F)I
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJF$sp(float);
    descriptor: (F)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #97                 // InterfaceMethod scala/Function1.apply$mcJF$sp$:(Lscala/Function1;F)J
         5: lreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVF$sp(float);
    descriptor: (F)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: fload_1
         2: invokestatic  #103                // InterfaceMethod scala/Function1.apply$mcVF$sp$:(Lscala/Function1;F)V
         5: return
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   F
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZI$sp(int);
    descriptor: (I)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #109                // InterfaceMethod scala/Function1.apply$mcZI$sp$:(Lscala/Function1;I)Z
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDI$sp(int);
    descriptor: (I)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #116                // InterfaceMethod scala/Function1.apply$mcDI$sp$:(Lscala/Function1;I)D
         5: dreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFI$sp(int);
    descriptor: (I)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #122                // InterfaceMethod scala/Function1.apply$mcFI$sp$:(Lscala/Function1;I)F
         5: freturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcII$sp(int);
    descriptor: (I)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #128                // InterfaceMethod scala/Function1.apply$mcII$sp$:(Lscala/Function1;I)I
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJI$sp(int);
    descriptor: (I)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #134                // InterfaceMethod scala/Function1.apply$mcJI$sp$:(Lscala/Function1;I)J
         5: lreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVI$sp(int);
    descriptor: (I)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokestatic  #140                // InterfaceMethod scala/Function1.apply$mcVI$sp$:(Lscala/Function1;I)V
         5: return
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   I
    MethodParameters:
      Name                           Flags
      v1                             final

  public boolean apply$mcZJ$sp(long);
    descriptor: (J)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #146                // InterfaceMethod scala/Function1.apply$mcZJ$sp$:(Lscala/Function1;J)Z
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public double apply$mcDJ$sp(long);
    descriptor: (J)D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #153                // InterfaceMethod scala/Function1.apply$mcDJ$sp$:(Lscala/Function1;J)D
         5: dreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public float apply$mcFJ$sp(long);
    descriptor: (J)F
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #159                // InterfaceMethod scala/Function1.apply$mcFJ$sp$:(Lscala/Function1;J)F
         5: freturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public int apply$mcIJ$sp(long);
    descriptor: (J)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #165                // InterfaceMethod scala/Function1.apply$mcIJ$sp$:(Lscala/Function1;J)I
         5: ireturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public long apply$mcJJ$sp(long);
    descriptor: (J)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #171                // InterfaceMethod scala/Function1.apply$mcJJ$sp$:(Lscala/Function1;J)J
         5: lreturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public void apply$mcVJ$sp(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_0
         1: lload_1
         2: invokestatic  #177                // InterfaceMethod scala/Function1.apply$mcVJ$sp$:(Lscala/Function1;J)V
         5: return
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1    v1   J
    MethodParameters:
      Name                           Flags
      v1                             final

  public <A extends java.lang.Object> scala.Function1<A, java.nio.channels.SeekableByteChannel> compose(scala.Function1<A, os.Path>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #185                // InterfaceMethod scala/Function1.compose$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1     g   Lscala/Function1;
    Signature: #180                         // <A:Ljava/lang/Object;>(Lscala/Function1<TA;Los/Path;>;)Lscala/Function1<TA;Ljava/nio/channels/SeekableByteChannel;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public <A extends java.lang.Object> scala.Function1<os.Path, A> andThen(scala.Function1<java.nio.channels.SeekableByteChannel, A>);
    descriptor: (Lscala/Function1;)Lscala/Function1;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #191                // InterfaceMethod scala/Function1.andThen$:(Lscala/Function1;Lscala/Function1;)Lscala/Function1;
         5: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Los/write$channel$append$;
            0       6     1     g   Lscala/Function1;
    Signature: #188                         // <A:Ljava/lang/Object;>(Lscala/Function1<Ljava/nio/channels/SeekableByteChannel;TA;>;)Lscala/Function1<Los/Path;TA;>;
    MethodParameters:
      Name                           Flags
      g                              final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #197                // InterfaceMethod scala/Function1.toString$:(Lscala/Function1;)Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/write$channel$append$;

  public java.nio.channels.SeekableByteChannel apply(os.Path);
    descriptor: (Los/Path;)Ljava/nio/channels/SeekableByteChannel;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=2, args_size=2
         0: getstatic     #203                // Field os/write$channel$.MODULE$:Los/write$channel$;
         3: aload_1
         4: getstatic     #208                // Field scala/package$.MODULE$:Lscala/package$;
         7: invokevirtual #212                // Method scala/package$.Seq:()Lscala/collection/immutable/Seq$;
        10: getstatic     #217                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
        13: iconst_3
        14: anewarray     #219                // class java/nio/file/StandardOpenOption
        17: dup
        18: iconst_0
        19: getstatic     #223                // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;
        22: aastore
        23: dup
        24: iconst_1
        25: getstatic     #226                // Field java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;
        28: aastore
        29: dup
        30: iconst_2
        31: getstatic     #229                // Field java/nio/file/StandardOpenOption.WRITE:Ljava/nio/file/StandardOpenOption;
        34: aastore
        35: checkcast     #231                // class "[Ljava/lang/Object;"
        38: invokevirtual #235                // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
        41: invokevirtual #240                // Method scala/collection/immutable/Seq$.apply:(Lscala/collection/immutable/Seq;)Lscala/collection/SeqOps;
        44: checkcast     #242                // class scala/collection/immutable/Seq
        47: invokevirtual #246                // Method os/write$channel$.write:(Los/Path;Lscala/collection/immutable/Seq;)Ljava/nio/channels/SeekableByteChannel;
        50: areturn
      LineNumberTable:
        line 169: 0
        line 170: 4
        line 171: 19
        line 172: 25
        line 173: 31
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      51     0  this   Los/write$channel$append$;
            0      51     1     p   Los/Path;
    MethodParameters:
      Name                           Flags
      p                              final

  public java.lang.Object apply(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #250                // class os/Path
         5: invokevirtual #252                // Method apply:(Los/Path;)Ljava/nio/channels/SeekableByteChannel;
         8: areturn
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Los/write$channel$append$;
            0       9     1    v1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      v1                             final

  public os.write$channel$append$();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #254                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 167: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Los/write$channel$append$;
}
InnerClasses:
  public static #13= #10 of #12;          // channel$=class os/write$channel$ of class os/write
  public static #14= #2 of #10;           // append$=class os/write$channel$append$ of class os/write$channel$
Signature: #3                           // Ljava/lang/Object;Lscala/Function1<Los/Path;Ljava/nio/channels/SeekableByteChannel;>;
SourceFile: "ReadWriteOps.scala"
  ScalaInlineInfo: length = 0x9A (unknown attribute)
   01 01 00 1E 00 13 00 12 01 00 BB 00 B3 01 00 C6
   00 F8 01 00 C6 00 C7 01 00 25 00 26 01 00 4A 00
   4B 01 00 6F 00 70 01 00 94 00 95 01 00 2B 00 2C
   01 00 50 00 51 01 00 75 00 76 01 00 9A 00 9B 01
   00 31 00 32 01 00 56 00 57 01 00 7B 00 7C 01 00
   A0 00 A1 01 00 37 00 38 01 00 5C 00 5D 01 00 81
   00 82 01 00 A6 00 A7 01 00 3D 00 3E 01 00 62 00
   63 01 00 87 00 88 01 00 AC 00 AD 01 00 1C 00 1D
   01 00 43 00 44 01 00 68 00 69 01 00 8D 00 8E 01
   00 B2 00 B3 01 00 C0 00 C1 01
  Scala: length = 0x0 (unknown attribute)

