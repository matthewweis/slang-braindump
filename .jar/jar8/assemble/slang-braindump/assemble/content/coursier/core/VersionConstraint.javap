Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/VersionConstraint.class
  Last modified May 29, 2022; size 11517 bytes
  SHA-256 checksum 14886b5e07d6d5a1c83e59c2ea4bc949964dcd2f19ce748196bd36326c2a9cdb
  Compiled from "VersionConstraint.scala"
public final class coursier.core.VersionConstraint implements scala.Product,java.io.Serializable
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/VersionConstraint
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 2, methods: 31, attributes: 6
Constant pool:
    #1 = Utf8               coursier/core/VersionConstraint
    #2 = Class              #1            // coursier/core/VersionConstraint
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               scala/Product
    #6 = Class              #5            // scala/Product
    #7 = Utf8               java/io/Serializable
    #8 = Class              #7            // java/io/Serializable
    #9 = Utf8               VersionConstraint.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0005]d\u0001B\u0010!\u0005\u0015B\u0001b\u000f\u0001\u0003\u0006\u0004%\t\u0001\u0010\u0005\t\u0003\u0002\u0011\t\u0011)A\u0005{!A!\t\u0001BC\u0002\u0013\u00051\t\u0003\u0005K\u0001\t\u0005\t\u0015!\u0003E\u0011\u0015Y\u0005\u0001\"\u0001M\u0011\u0015\u0001\u0006\u0001\"\u0001R\u0011\u0015)\u0006\u0001\"\u0001W\u0011\u0015i\u0006\u0001\"\u0001_\u0011\u0015A\u0007\u0001\"\u0001j\u0011\u0015Y\u0007\u0001\"\u0001m\u0011\u0015q\u0007\u0001\"\u0011p\u0011\u00159\b\u0001\"\u0011y\u0011\u0015q\b\u0001\"\u0011\u0000\u0011\u001d\t\u0019\u0001\u0001C!\u0003\u000bAq!!\u0004\u0001\t\u0013\ty\u0001C\u0004\u0002\u0018\u0001!\t%!\u0007\t\u000f\u0005m\u0001\u0001\"\u0011\u0002\u001e!9\u0011q\u0004\u0001\u0005B\u0005\u0005\u0002bBA\u0014\u0001\u0011\u0005\u0013\u0011F\u0004\b\u0003[\u0001\u0003\u0012AA\u0018\r\u0019y\u0002\u0005#\u0001\u00022!11*\u0006C\u0001\u0003{AaAQ\u000b\u0005\u0002\u0005}\u0002BB\u001e\u0016\t\u0003\t)\u0005C\u0005\u0002JU\u0011\r\u0011\"\u0001\u0002L!9\u0011QJ\u000b!\u0002\u0013i\u0005bBA(+\u0011\u0005\u0011\u0011\u000b\u0005\b\u0003?*B\u0011AA1\u0011\u001d\t)\'\u0006C\u0001\u0003OB\u0011\"!\u001c\u0016\u0003\u0003%I!a\u001c\u0003#Y+\'o]5p]\u000e{gn\u001d;sC&tGO\u0003\u0002\"E\u0005!1m\u001c:f\u0015\u0005\u0019\u0013\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M!\u0001A\n\u00170!\t9#&D\u0001)\u0015\u0005I\u0013!B:dC2\f\u0017BA\u0016)\u0005\u0019\te.\u001f*fMB\u0011q%L\u0005\u0003]!\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u00021q9\u0011\u0011G\u000e\b\u0003eUj\u0011a\r\u0006\u0003i\u0011\na\u0001\u0010:p_Rt\u0014\"A\u0015\n\u0005]B\u0013a\u00029bG.\fw-Z\u0005\u0003si\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!a\u000e\u0015\u0002\u0011%tG/\u001a:wC2,\u0012!\u0010\t\u0003}}j\u0011\u0001I\u0005\u0003\u0001\u0002\u0012qBV3sg&|g.\u00138uKJ4\u0018\r\\\u0001\nS:$XM\u001d<bY\u0002\n\u0011\u0002\u001d:fM\u0016\u0014(/\u001a3\u0016\u0003\u0011\u00032\u0001M#H\u0013\t1%HA\u0002TKF\u0004\"A\u0010%\n\u0005%\u0003#a\u0002,feNLwN\\\u0001\u000baJ,g-\u001a:sK\u0012\u0004\u0013A\u0002\u001fj]&$h\bF\u0002N\u001d>\u0003\"A\u0010\u0001\t\u000bm*\u0001\u0019A\u001f\t\u000b\t+\u0001\u0019\u0001#\u0002\u000f%\u001ch+\u00197jIV\t!\u000b\u0005\u0002(\'&\u0011A\u000b\u000b\u0002\b\u0005>|G.Z1o\u0003\u0015\u0011G.\u001a8e+\u00059\u0006cA\u0014Y5&\u0011\u0011\f\u000b\u0002\u0007\u001fB$\u0018n\u001c8\u0011\tAZVhR\u0005\u00039j\u0012a!R5uQ\u0016\u0014\u0018\u0001\u0002:faJ,\u0012a\u0018\t\u0004Oa\u0003\u0007CA1f\u001d\t\u00117\r\u0005\u00023Q%\u0011A\rK\u0001\u0007!J,G-\u001a4\n\u0005\u0019<\'AB*ue&twM\u0003\u0002eQ\u0005aq/\u001b;i\u0013:$XM\u001d<bYR\u0011QJ\u001b\u0005\u0006w%\u0001\r!P\u0001\u000eo&$\b\u000e\u0015:fM\u0016\u0014(/\u001a3\u0015\u00055k\u0007\"\u0002\"\u000b\u0001\u0004!\u0015\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003A\u0004\"!\u001d<\u000e\u0003IT!a\u001d;\u0002\t1\fgn\u001a\u0006\u0002k\u0006!!.\u0019<b\u0013\t1\'/\u0001\u0005dC:,\u0015/^1m)\t\u0011\u0016\u0010C\u0003{\u0019\u0001\u000710A\u0002pE*\u0004\"a\n?\n\u0005uD#aA!os\u00061Q-];bYN$2AUA\u0001\u0011\u0015QX\u00021\u0001|\u0003!A\u0017m\u001d5D_\u0012,GCAA\u0004!\r9\u0013\u0011B\u0005\u0004\u0003\u0017A#aA%oi\u0006)A/\u001e9mKV\u0011\u0011\u0011\u0003\t\u0006O\u0005MQ\bR\u0005\u0004\u0003+A#A\u0002+va2,\'\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0002a\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011qA\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\rY\u00181\u0005\u0005\b\u0003K\u0011\u0002\u0019AA\u0004\u0003\u0005q\u0017A\u00059s_\u0012,8\r^#mK6,g\u000e\u001e(b[\u0016$2\u0001]A\u0016\u0011\u001d\t)c\u0005a\u0001\u0003\u000f\t\u0011CV3sg&|gnQ8ogR\u0014\u0018-\u001b8u!\tqTc\u0005\u0003\u0016M\u0005M\u0002\u0003BA\u001b\u0003wi!!a\u000e\u000b\u0007\u0005eB/\u0001\u0002j_&\u0019\u0011(a\u000e\u0015\u0005\u0005=BcA\'\u0002B!1\u00111I\fA\u0002\u001d\u000bqA^3sg&|g\u000eF\u0002N\u0003\u000fBQa\u000f\rA\u0002u\n1!\u00197m+\u0005i\u0015\u0001B1mY\u0002\nQ!\\3sO\u0016$B!a\u0015\u0002VA\u0019q\u0005W\'\t\u000f\u0005]3\u00041\u0001\u0002Z\u0005Y1m\u001c8tiJ\f\u0017N\u001c;t!\u00119\u00131L\'\n\u0007\u0005u\u0003F\u0001\u0006=e\u0016\u0004X-\u0019;fIz\nAB]3mCb,G-T3sO\u0016$2!TA2\u0011\u001d\t9\u0006\ba\u0001\u00033\nQ!\u00199qYf$R!TA5\u0003WBQaO\u000fA\u0002uBQAQ\u000fA\u0002\u0011\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!!\u001d\u0011\u0007E\f\u0019(C\u0002\u0002vI\u0014aa\u00142kK\u000e$\b
   #13 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #14 = Class              #13           // java/lang/invoke/MethodHandles$Lookup
   #15 = Utf8               java/lang/invoke/MethodHandles
   #16 = Class              #15           // java/lang/invoke/MethodHandles
   #17 = Utf8               Lookup
   #18 = Utf8               interval
   #19 = Utf8               Lcoursier/core/VersionInterval;
   #20 = Utf8               preferred
   #21 = Utf8               Lscala/collection/immutable/Seq;
   #22 = Utf8               Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;
   #23 = Utf8               apply
   #24 = Utf8               (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
   #25 = Utf8               (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;)Lcoursier/core/VersionConstraint;
   #26 = Utf8               coursier/core/VersionConstraint$
   #27 = Class              #26           // coursier/core/VersionConstraint$
   #28 = Utf8               MODULE$
   #29 = Utf8               Lcoursier/core/VersionConstraint$;
   #30 = NameAndType        #28:#29       // MODULE$:Lcoursier/core/VersionConstraint$;
   #31 = Fieldref           #27.#30       // coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
   #32 = NameAndType        #23:#24       // apply:(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
   #33 = Methodref          #27.#32       // coursier/core/VersionConstraint$.apply:(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
   #34 = Utf8               relaxedMerge
   #35 = Utf8               (Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
   #36 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/VersionConstraint;>;)Lcoursier/core/VersionConstraint;
   #37 = Utf8               constraints
   #38 = NameAndType        #34:#35       // relaxedMerge:(Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
   #39 = Methodref          #27.#38       // coursier/core/VersionConstraint$.relaxedMerge:(Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
   #40 = Utf8               merge
   #41 = Utf8               (Lscala/collection/immutable/Seq;)Lscala/Option;
   #42 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/VersionConstraint;>;)Lscala/Option<Lcoursier/core/VersionConstraint;>;
   #43 = NameAndType        #40:#41       // merge:(Lscala/collection/immutable/Seq;)Lscala/Option;
   #44 = Methodref          #27.#43       // coursier/core/VersionConstraint$.merge:(Lscala/collection/immutable/Seq;)Lscala/Option;
   #45 = Utf8               all
   #46 = Utf8               ()Lcoursier/core/VersionConstraint;
   #47 = NameAndType        #45:#46       // all:()Lcoursier/core/VersionConstraint;
   #48 = Methodref          #27.#47       // coursier/core/VersionConstraint$.all:()Lcoursier/core/VersionConstraint;
   #49 = Utf8               productIterator
   #50 = Utf8               ()Lscala/collection/Iterator;
   #51 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
   #52 = Utf8               productIterator$
   #53 = Utf8               (Lscala/Product;)Lscala/collection/Iterator;
   #54 = NameAndType        #52:#53       // productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #55 = InterfaceMethodref #6.#54        // scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
   #56 = Utf8               this
   #57 = Utf8               Lcoursier/core/VersionConstraint;
   #58 = Utf8               productElementNames
   #59 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/String;>;
   #60 = Utf8               productElementNames$
   #61 = NameAndType        #60:#53       // productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #62 = InterfaceMethodref #6.#61        // scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
   #63 = Utf8               ()Lcoursier/core/VersionInterval;
   #64 = NameAndType        #18:#19       // interval:Lcoursier/core/VersionInterval;
   #65 = Fieldref           #2.#64        // coursier/core/VersionConstraint.interval:Lcoursier/core/VersionInterval;
   #66 = Utf8               ()Lscala/collection/immutable/Seq;
   #67 = Utf8               ()Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;
   #68 = NameAndType        #20:#21       // preferred:Lscala/collection/immutable/Seq;
   #69 = Fieldref           #2.#68        // coursier/core/VersionConstraint.preferred:Lscala/collection/immutable/Seq;
   #70 = Utf8               isValid
   #71 = Utf8               ()Z
   #72 = NameAndType        #18:#63       // interval:()Lcoursier/core/VersionInterval;
   #73 = Methodref          #2.#72        // coursier/core/VersionConstraint.interval:()Lcoursier/core/VersionInterval;
   #74 = Utf8               coursier/core/VersionInterval
   #75 = Class              #74           // coursier/core/VersionInterval
   #76 = NameAndType        #70:#71       // isValid:()Z
   #77 = Methodref          #75.#76       // coursier/core/VersionInterval.isValid:()Z
   #78 = NameAndType        #20:#66       // preferred:()Lscala/collection/immutable/Seq;
   #79 = Methodref          #2.#78        // coursier/core/VersionConstraint.preferred:()Lscala/collection/immutable/Seq;
   #80 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #81 = MethodType         #80           //  (Ljava/lang/Object;)Ljava/lang/Object;
   #82 = Utf8               $anonfun$isValid$1$adapted
   #83 = Utf8               (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
   #84 = NameAndType        #82:#83       // $anonfun$isValid$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
   #85 = Methodref          #2.#84        // coursier/core/VersionConstraint.$anonfun$isValid$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
   #86 = MethodHandle       6:#85         // REF_invokeStatic coursier/core/VersionConstraint.$anonfun$isValid$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
   #87 = Utf8               (Lcoursier/core/Version;)Ljava/lang/Object;
   #88 = MethodType         #87           //  (Lcoursier/core/Version;)Ljava/lang/Object;
   #89 = Integer            5
   #90 = Integer            1
   #91 = Utf8               java/lang/invoke/LambdaMetafactory
   #92 = Class              #91           // java/lang/invoke/LambdaMetafactory
   #93 = Utf8               altMetafactory
   #94 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = NameAndType        #93:#94       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = Methodref          #92.#95       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #97 = MethodHandle       6:#96         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #98 = Utf8               (Lcoursier/core/VersionConstraint;)Lscala/Function1;
   #99 = NameAndType        #23:#98       // apply:(Lcoursier/core/VersionConstraint;)Lscala/Function1;
  #100 = InvokeDynamic      #0:#99        // #0:apply:(Lcoursier/core/VersionConstraint;)Lscala/Function1;
  #101 = Utf8               scala/collection/immutable/Seq
  #102 = Class              #101          // scala/collection/immutable/Seq
  #103 = Utf8               forall
  #104 = Utf8               (Lscala/Function1;)Z
  #105 = NameAndType        #103:#104     // forall:(Lscala/Function1;)Z
  #106 = InterfaceMethodref #102.#105     // scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
  #107 = Utf8               blend
  #108 = Utf8               ()Lscala/Option;
  #109 = Utf8               ()Lscala/Option<Lscala/util/Either<Lcoursier/core/VersionInterval;Lcoursier/core/Version;>;>;
  #110 = Methodref          #2.#76        // coursier/core/VersionConstraint.isValid:()Z
  #111 = Utf8               $anonfun$blend$1$adapted
  #112 = NameAndType        #111:#83      // $anonfun$blend$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
  #113 = Methodref          #2.#112       // coursier/core/VersionConstraint.$anonfun$blend$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
  #114 = MethodHandle       6:#113        // REF_invokeStatic coursier/core/VersionConstraint.$anonfun$blend$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
  #115 = InvokeDynamic      #1:#99        // #1:apply:(Lcoursier/core/VersionConstraint;)Lscala/Function1;
  #116 = Utf8               filter
  #117 = Utf8               (Lscala/Function1;)Ljava/lang/Object;
  #118 = NameAndType        #116:#117     // filter:(Lscala/Function1;)Ljava/lang/Object;
  #119 = InterfaceMethodref #102.#118     // scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
  #120 = Utf8               isEmpty
  #121 = NameAndType        #120:#71      // isEmpty:()Z
  #122 = InterfaceMethodref #102.#121     // scala/collection/immutable/Seq.isEmpty:()Z
  #123 = Utf8               scala/Some
  #124 = Class              #123          // scala/Some
  #125 = Utf8               scala/package$
  #126 = Class              #125          // scala/package$
  #127 = Utf8               Lscala/package$;
  #128 = NameAndType        #28:#127      // MODULE$:Lscala/package$;
  #129 = Fieldref           #126.#128     // scala/package$.MODULE$:Lscala/package$;
  #130 = Utf8               Left
  #131 = Utf8               ()Lscala/util/Left$;
  #132 = NameAndType        #130:#131     // Left:()Lscala/util/Left$;
  #133 = Methodref          #126.#132     // scala/package$.Left:()Lscala/util/Left$;
  #134 = Utf8               scala/util/Left$
  #135 = Class              #134          // scala/util/Left$
  #136 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #137 = NameAndType        #23:#136      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #138 = Methodref          #135.#137     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #139 = Utf8               <init>
  #140 = Utf8               (Ljava/lang/Object;)V
  #141 = NameAndType        #139:#140     // "<init>":(Ljava/lang/Object;)V
  #142 = Methodref          #124.#141     // scala/Some."<init>":(Ljava/lang/Object;)V
  #143 = Utf8               Right
  #144 = Utf8               ()Lscala/util/Right$;
  #145 = NameAndType        #143:#144     // Right:()Lscala/util/Right$;
  #146 = Methodref          #126.#145     // scala/package$.Right:()Lscala/util/Right$;
  #147 = Utf8               scala/math/Ordering$
  #148 = Class              #147          // scala/math/Ordering$
  #149 = Utf8               Lscala/math/Ordering$;
  #150 = NameAndType        #28:#149      // MODULE$:Lscala/math/Ordering$;
  #151 = Fieldref           #148.#150     // scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
  #152 = Utf8               scala/Predef$
  #153 = Class              #152          // scala/Predef$
  #154 = Utf8               Lscala/Predef$;
  #155 = NameAndType        #28:#154      // MODULE$:Lscala/Predef$;
  #156 = Fieldref           #153.#155     // scala/Predef$.MODULE$:Lscala/Predef$;
  #157 = Utf8               $conforms
  #158 = Utf8               ()Lscala/Function1;
  #159 = NameAndType        #157:#158     // $conforms:()Lscala/Function1;
  #160 = Methodref          #153.#159     // scala/Predef$.$conforms:()Lscala/Function1;
  #161 = Utf8               ordered
  #162 = Utf8               (Lscala/Function1;)Lscala/math/Ordering;
  #163 = NameAndType        #161:#162     // ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #164 = Methodref          #148.#163     // scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
  #165 = Utf8               max
  #166 = Utf8               (Lscala/math/Ordering;)Ljava/lang/Object;
  #167 = NameAndType        #165:#166     // max:(Lscala/math/Ordering;)Ljava/lang/Object;
  #168 = InterfaceMethodref #102.#167     // scala/collection/immutable/Seq.max:(Lscala/math/Ordering;)Ljava/lang/Object;
  #169 = Utf8               scala/util/Right$
  #170 = Class              #169          // scala/util/Right$
  #171 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #172 = NameAndType        #23:#171      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #173 = Methodref          #170.#172     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #174 = Utf8               scala/None$
  #175 = Class              #174          // scala/None$
  #176 = Utf8               Lscala/None$;
  #177 = NameAndType        #28:#176      // MODULE$:Lscala/None$;
  #178 = Fieldref           #175.#177     // scala/None$.MODULE$:Lscala/None$;
  #179 = Utf8               scala/Option
  #180 = Class              #179          // scala/Option
  #181 = Utf8               preferredInInterval
  #182 = Utf8               repr
  #183 = Utf8               ()Lscala/Option<Ljava/lang/String;>;
  #184 = NameAndType        #107:#108     // blend:()Lscala/Option;
  #185 = Methodref          #2.#184       // coursier/core/VersionConstraint.blend:()Lscala/Option;
  #186 = Utf8               $anonfun$repr$1
  #187 = Utf8               (Lscala/util/Either;)Ljava/lang/String;
  #188 = NameAndType        #186:#187     // $anonfun$repr$1:(Lscala/util/Either;)Ljava/lang/String;
  #189 = Methodref          #2.#188       // coursier/core/VersionConstraint.$anonfun$repr$1:(Lscala/util/Either;)Ljava/lang/String;
  #190 = MethodHandle       6:#189        // REF_invokeStatic coursier/core/VersionConstraint.$anonfun$repr$1:(Lscala/util/Either;)Ljava/lang/String;
  #191 = MethodType         #187          //  (Lscala/util/Either;)Ljava/lang/String;
  #192 = NameAndType        #23:#158      // apply:()Lscala/Function1;
  #193 = InvokeDynamic      #2:#192       // #2:apply:()Lscala/Function1;
  #194 = Utf8               map
  #195 = Utf8               (Lscala/Function1;)Lscala/Option;
  #196 = NameAndType        #194:#195     // map:(Lscala/Function1;)Lscala/Option;
  #197 = Methodref          #180.#196     // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #198 = Utf8               withInterval
  #199 = Utf8               (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
  #200 = Utf8               (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)V
  #201 = NameAndType        #139:#200     // "<init>":(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)V
  #202 = Methodref          #2.#201       // coursier/core/VersionConstraint."<init>":(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)V
  #203 = Utf8               withPreferred
  #204 = Utf8               (Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;)Lcoursier/core/VersionConstraint;
  #205 = Utf8               toString
  #206 = Utf8               ()Ljava/lang/String;
  #207 = Utf8               java/lang/StringBuilder
  #208 = Class              #207          // java/lang/StringBuilder
  #209 = Utf8               VersionConstraint(
  #210 = String             #209          // VersionConstraint(
  #211 = Utf8               (Ljava/lang/String;)V
  #212 = NameAndType        #139:#211     // "<init>":(Ljava/lang/String;)V
  #213 = Methodref          #208.#212     // java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
  #214 = Utf8               java/lang/String
  #215 = Class              #214          // java/lang/String
  #216 = Utf8               valueOf
  #217 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;
  #218 = NameAndType        #216:#217     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #219 = Methodref          #215.#218     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
  #220 = Utf8               append
  #221 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #222 = NameAndType        #220:#221     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #223 = Methodref          #208.#222     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #224 = Utf8               ,
  #225 = String             #224          // ,
  #226 = Utf8               )
  #227 = String             #226          // )
  #228 = NameAndType        #205:#206     // toString:()Ljava/lang/String;
  #229 = Methodref          #208.#228     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #230 = Utf8               b
  #231 = Utf8               Ljava/lang/StringBuilder;
  #232 = Utf8               canEqual
  #233 = Utf8               (Ljava/lang/Object;)Z
  #234 = Utf8               obj
  #235 = Utf8               Ljava/lang/Object;
  #236 = Utf8               equals
  #237 = NameAndType        #232:#233     // canEqual:(Ljava/lang/Object;)Z
  #238 = Methodref          #2.#237       // coursier/core/VersionConstraint.canEqual:(Ljava/lang/Object;)Z
  #239 = NameAndType        #236:#233     // equals:(Ljava/lang/Object;)Z
  #240 = Methodref          #4.#239       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #241 = Utf8               other
  #242 = Utf8               hashCode
  #243 = Utf8               ()I
  #244 = Utf8               VersionConstraint
  #245 = String             #244          // VersionConstraint
  #246 = Utf8               scala/runtime/Statics
  #247 = Class              #246          // scala/runtime/Statics
  #248 = Utf8               anyHash
  #249 = Utf8               (Ljava/lang/Object;)I
  #250 = NameAndType        #248:#249     // anyHash:(Ljava/lang/Object;)I
  #251 = Methodref          #247.#250     // scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
  #252 = Utf8               code
  #253 = Utf8               I
  #254 = Utf8               tuple
  #255 = Utf8               ()Lscala/Tuple2;
  #256 = Utf8               ()Lscala/Tuple2<Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;>;
  #257 = Utf8               scala/Tuple2
  #258 = Class              #257          // scala/Tuple2
  #259 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #260 = NameAndType        #139:#259     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #261 = Methodref          #258.#260     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #262 = Utf8               productPrefix
  #263 = Utf8               productArity
  #264 = Utf8               productElement
  #265 = Utf8               (I)Ljava/lang/Object;
  #266 = Utf8               n
  #267 = Utf8               java/lang/IndexOutOfBoundsException
  #268 = Class              #267          // java/lang/IndexOutOfBoundsException
  #269 = Utf8               scala/runtime/BoxesRunTime
  #270 = Class              #269          // scala/runtime/BoxesRunTime
  #271 = Utf8               boxToInteger
  #272 = Utf8               (I)Ljava/lang/Integer;
  #273 = NameAndType        #271:#272     // boxToInteger:(I)Ljava/lang/Integer;
  #274 = Methodref          #270.#273     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #275 = Methodref          #4.#228       // java/lang/Object.toString:()Ljava/lang/String;
  #276 = Methodref          #268.#212     // java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
  #277 = Utf8               productElementName
  #278 = Utf8               (I)Ljava/lang/String;
  #279 = String             #18           // interval
  #280 = String             #20           // preferred
  #281 = Utf8               $anonfun$isValid$2
  #282 = Utf8               (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #283 = Utf8               $this
  #284 = Utf8               v$1
  #285 = Utf8               to
  #286 = Utf8               coursier/core/Version
  #287 = Class              #286          // coursier/core/Version
  #288 = Utf8               compare
  #289 = Utf8               (Lcoursier/core/Version;)I
  #290 = NameAndType        #288:#289     // compare:(Lcoursier/core/Version;)I
  #291 = Methodref          #287.#290     // coursier/core/Version.compare:(Lcoursier/core/Version;)I
  #292 = Utf8               toIncluded
  #293 = NameAndType        #292:#71      // toIncluded:()Z
  #294 = Methodref          #75.#293      // coursier/core/VersionInterval.toIncluded:()Z
  #295 = Utf8               cmp
  #296 = Utf8               Lcoursier/core/Version;
  #297 = Utf8               $anonfun$isValid$1
  #298 = Utf8               (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
  #299 = Utf8               v
  #300 = Utf8               contains
  #301 = Utf8               (Lcoursier/core/Version;)Z
  #302 = NameAndType        #300:#301     // contains:(Lcoursier/core/Version;)Z
  #303 = Methodref          #75.#302      // coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
  #304 = NameAndType        #285:#108     // to:()Lscala/Option;
  #305 = Methodref          #75.#304      // coursier/core/VersionInterval.to:()Lscala/Option;
  #306 = Utf8               $anonfun$isValid$2$adapted
  #307 = Utf8               (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #308 = NameAndType        #306:#307     // $anonfun$isValid$2$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #309 = Methodref          #2.#308       // coursier/core/VersionConstraint.$anonfun$isValid$2$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #310 = MethodHandle       6:#309        // REF_invokeStatic coursier/core/VersionConstraint.$anonfun$isValid$2$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
  #311 = Utf8               (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Lscala/Function1;
  #312 = NameAndType        #23:#311      // apply:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Lscala/Function1;
  #313 = InvokeDynamic      #3:#312       // #3:apply:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Lscala/Function1;
  #314 = Methodref          #180.#105     // scala/Option.forall:(Lscala/Function1;)Z
  #315 = Utf8               $anonfun$blend$1
  #316 = Utf8               version
  #317 = Utf8               x0$1
  #318 = Utf8               scala/util/Left
  #319 = Class              #318          // scala/util/Left
  #320 = Utf8               value
  #321 = Utf8               ()Ljava/lang/Object;
  #322 = NameAndType        #320:#321     // value:()Ljava/lang/Object;
  #323 = Methodref          #319.#322     // scala/util/Left.value:()Ljava/lang/Object;
  #324 = Utf8               coursier/core/VersionInterval$
  #325 = Class              #324          // coursier/core/VersionInterval$
  #326 = Utf8               Lcoursier/core/VersionInterval$;
  #327 = NameAndType        #28:#326      // MODULE$:Lcoursier/core/VersionInterval$;
  #328 = Fieldref           #325.#327     // coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
  #329 = Utf8               zero
  #330 = NameAndType        #329:#63      // zero:()Lcoursier/core/VersionInterval;
  #331 = Methodref          #325.#330     // coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
  #332 = Utf8               scala/util/Either
  #333 = Class              #332          // scala/util/Either
  #334 = Utf8
  #335 = String             #334          //
  #336 = NameAndType        #182:#206     // repr:()Ljava/lang/String;
  #337 = Methodref          #75.#336      // coursier/core/VersionInterval.repr:()Ljava/lang/String;
  #338 = Utf8               scala/util/Right
  #339 = Class              #338          // scala/util/Right
  #340 = Methodref          #339.#322     // scala/util/Right.value:()Ljava/lang/Object;
  #341 = Methodref          #287.#336     // coursier/core/Version.repr:()Ljava/lang/String;
  #342 = Utf8               scala/MatchError
  #343 = Class              #342          // scala/MatchError
  #344 = Methodref          #343.#141     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #345 = Utf8               itv
  #346 = Utf8               Lscala/util/Either;
  #347 = Utf8               (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;)V
  #348 = Utf8               ()V
  #349 = NameAndType        #139:#348     // "<init>":()V
  #350 = Methodref          #4.#349       // java/lang/Object."<init>":()V
  #351 = Utf8               $init$
  #352 = Utf8               (Lscala/Product;)V
  #353 = NameAndType        #351:#352     // $init$:(Lscala/Product;)V
  #354 = InterfaceMethodref #6.#353       // scala/Product.$init$:(Lscala/Product;)V
  #355 = NameAndType        #297:#298     // $anonfun$isValid$1:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
  #356 = Methodref          #2.#355       // coursier/core/VersionConstraint.$anonfun$isValid$1:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
  #357 = Utf8               boxToBoolean
  #358 = Utf8               (Z)Ljava/lang/Boolean;
  #359 = NameAndType        #357:#358     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #360 = Methodref          #270.#359     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #361 = NameAndType        #315:#298     // $anonfun$blend$1:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
  #362 = Methodref          #2.#361       // coursier/core/VersionConstraint.$anonfun$blend$1:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
  #363 = NameAndType        #281:#282     // $anonfun$isValid$2:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #364 = Methodref          #2.#363       // coursier/core/VersionConstraint.$anonfun$isValid$2:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Z
  #365 = Utf8               $deserializeLambda$
  #366 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #367 = Utf8               scala/runtime/LambdaDeserialize
  #368 = Class              #367          // scala/runtime/LambdaDeserialize
  #369 = Utf8               bootstrap
  #370 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #371 = NameAndType        #369:#370     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #372 = Methodref          #368.#371     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #373 = MethodHandle       6:#372        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #374 = Utf8               lambdaDeserialize
  #375 = NameAndType        #374:#366     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #376 = InvokeDynamic      #4:#375       // #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #377 = Utf8               Signature
  #378 = Utf8               Code
  #379 = Utf8               MethodParameters
  #380 = Utf8               LineNumberTable
  #381 = Utf8               LocalVariableTable
  #382 = Utf8               StackMapTable
  #383 = Utf8               InnerClasses
  #384 = Utf8               SourceFile
  #385 = Utf8               RuntimeVisibleAnnotations
  #386 = Utf8               BootstrapMethods
  #387 = Utf8               ScalaInlineInfo
  #388 = Utf8               ScalaSig
{
  private final coursier.core.VersionInterval interval;
    descriptor: Lcoursier/core/VersionInterval;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final scala.collection.immutable.Seq<coursier.core.Version> preferred;
    descriptor: Lscala/collection/immutable/Seq;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL
    Signature: #22                          // Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;

  public static coursier.core.VersionConstraint apply(coursier.core.VersionInterval, scala.collection.immutable.Seq<coursier.core.Version>);
    descriptor: (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #31                 // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: aload_0
         4: aload_1
         5: invokevirtual #33                 // Method coursier/core/VersionConstraint$.apply:(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
         8: areturn
    Signature: #25                          // (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;)Lcoursier/core/VersionConstraint;
    MethodParameters:
      Name                           Flags
      interval                       final
      preferred                      final

  public static coursier.core.VersionConstraint relaxedMerge(scala.collection.immutable.Seq<coursier.core.VersionConstraint>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #31                 // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: aload_0
         4: invokevirtual #39                 // Method coursier/core/VersionConstraint$.relaxedMerge:(Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
         7: areturn
    Signature: #36                          // (Lscala/collection/immutable/Seq<Lcoursier/core/VersionConstraint;>;)Lcoursier/core/VersionConstraint;
    MethodParameters:
      Name                           Flags
      constraints                    final

  public static scala.Option<coursier.core.VersionConstraint> merge(scala.collection.immutable.Seq<coursier.core.VersionConstraint>);
    descriptor: (Lscala/collection/immutable/Seq;)Lscala/Option;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #31                 // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: aload_0
         4: invokevirtual #44                 // Method coursier/core/VersionConstraint$.merge:(Lscala/collection/immutable/Seq;)Lscala/Option;
         7: areturn
    Signature: #42                          // (Lscala/collection/immutable/Seq<Lcoursier/core/VersionConstraint;>;)Lscala/Option<Lcoursier/core/VersionConstraint;>;
    MethodParameters:
      Name                           Flags
      constraints                    final

  public static coursier.core.VersionConstraint all();
    descriptor: ()Lcoursier/core/VersionConstraint;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #31                 // Field coursier/core/VersionConstraint$.MODULE$:Lcoursier/core/VersionConstraint$;
         3: invokevirtual #48                 // Method coursier/core/VersionConstraint$.all:()Lcoursier/core/VersionConstraint;
         6: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #55                 // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionConstraint;
    Signature: #51                          // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public scala.collection.Iterator<java.lang.String> productElementNames();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #62                 // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionConstraint;
    Signature: #59                          // ()Lscala/collection/Iterator<Ljava/lang/String;>;

  public coursier.core.VersionInterval interval();
    descriptor: ()Lcoursier/core/VersionInterval;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #65                 // Field interval:Lcoursier/core/VersionInterval;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionConstraint;

  public scala.collection.immutable.Seq<coursier.core.Version> preferred();
    descriptor: ()Lscala/collection/immutable/Seq;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #69                 // Field preferred:Lscala/collection/immutable/Seq;
         4: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/VersionConstraint;
    Signature: #67                          // ()Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;

  public boolean isValid();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
         4: invokevirtual #77                 // Method coursier/core/VersionInterval.isValid:()Z
         7: ifeq          32
        10: aload_0
        11: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        14: aload_0
        15: invokedynamic #100,  0            // InvokeDynamic #0:apply:(Lcoursier/core/VersionConstraint;)Lscala/Function1;
        20: invokeinterface #106,  2          // InterfaceMethod scala/collection/immutable/Seq.forall:(Lscala/Function1;)Z
        25: ifeq          32
        28: iconst_1
        29: goto          33
        32: iconst_0
        33: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 32 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      34     0  this   Lcoursier/core/VersionConstraint;

  public scala.Option<scala.util.Either<coursier.core.VersionInterval, coursier.core.Version>> blend();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=2, args_size=1
         0: aload_0
         1: invokevirtual #110                // Method isValid:()Z
         4: ifeq          95
         7: aload_0
         8: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        11: aload_0
        12: invokedynamic #115,  0            // InvokeDynamic #1:apply:(Lcoursier/core/VersionConstraint;)Lscala/Function1;
        17: invokeinterface #119,  2          // InterfaceMethod scala/collection/immutable/Seq.filter:(Lscala/Function1;)Ljava/lang/Object;
        22: checkcast     #102                // class scala/collection/immutable/Seq
        25: astore_1
        26: aload_1
        27: invokeinterface #122,  1          // InterfaceMethod scala/collection/immutable/Seq.isEmpty:()Z
        32: ifeq          58
        35: new           #124                // class scala/Some
        38: dup
        39: getstatic     #129                // Field scala/package$.MODULE$:Lscala/package$;
        42: invokevirtual #133                // Method scala/package$.Left:()Lscala/util/Left$;
        45: aload_0
        46: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        49: invokevirtual #138                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        52: invokespecial #142                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        55: goto          92
        58: new           #124                // class scala/Some
        61: dup
        62: getstatic     #129                // Field scala/package$.MODULE$:Lscala/package$;
        65: invokevirtual #146                // Method scala/package$.Right:()Lscala/util/Right$;
        68: aload_1
        69: getstatic     #151                // Field scala/math/Ordering$.MODULE$:Lscala/math/Ordering$;
        72: getstatic     #156                // Field scala/Predef$.MODULE$:Lscala/Predef$;
        75: invokevirtual #160                // Method scala/Predef$.$conforms:()Lscala/Function1;
        78: invokevirtual #164                // Method scala/math/Ordering$.ordered:(Lscala/Function1;)Lscala/math/Ordering;
        81: invokeinterface #168,  2          // InterfaceMethod scala/collection/immutable/Seq.max:(Lscala/math/Ordering;)Ljava/lang/Object;
        86: invokevirtual #173                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        89: invokespecial #142                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        92: goto          98
        95: getstatic     #178                // Field scala/None$.MODULE$:Lscala/None$;
        98: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 58
          locals = [ class scala/collection/immutable/Seq ]
        frame_type = 97 /* same_locals_1_stack_item */
          stack = [ class scala/Some ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class scala/Option ]
      LineNumberTable:
        line 21: 0
        line 22: 7
        line 24: 26
        line 25: 35
        line 27: 58
        line 29: 95
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           26      66     1 preferredInInterval   Lscala/collection/immutable/Seq;
            0      99     0  this   Lcoursier/core/VersionConstraint;
    Signature: #109                         // ()Lscala/Option<Lscala/util/Either<Lcoursier/core/VersionInterval;Lcoursier/core/Version;>;>;

  public scala.Option<java.lang.String> repr();
    descriptor: ()Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #185                // Method blend:()Lscala/Option;
         4: invokedynamic #193,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
         9: invokevirtual #197                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        12: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/VersionConstraint;
    Signature: #183                         // ()Lscala/Option<Ljava/lang/String;>;

  public coursier.core.VersionConstraint withInterval(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Lcoursier/core/VersionConstraint;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class coursier/core/VersionConstraint
         3: dup
         4: aload_1
         5: aload_0
         6: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
         9: invokespecial #202                // Method "<init>":(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)V
        12: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/VersionConstraint;
            0      13     1 interval   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      interval                       final

  public coursier.core.VersionConstraint withPreferred(scala.collection.immutable.Seq<coursier.core.Version>);
    descriptor: (Lscala/collection/immutable/Seq;)Lcoursier/core/VersionConstraint;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: new           #2                  // class coursier/core/VersionConstraint
         3: dup
         4: aload_0
         5: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
         8: aload_1
         9: invokespecial #202                // Method "<init>":(Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)V
        12: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcoursier/core/VersionConstraint;
            0      13     1 preferred   Lscala/collection/immutable/Seq;
    Signature: #204                         // (Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;)Lcoursier/core/VersionConstraint;
    MethodParameters:
      Name                           Flags
      preferred                      final

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=1
         0: new           #208                // class java/lang/StringBuilder
         3: dup
         4: ldc           #210                // String VersionConstraint(
         6: invokespecial #213                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
         9: astore_1
        10: aload_1
        11: aload_0
        12: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        15: invokestatic  #219                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        18: invokevirtual #223                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        21: pop
        22: aload_1
        23: ldc           #225                // String ,
        25: invokevirtual #223                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        28: pop
        29: aload_1
        30: aload_0
        31: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        34: invokestatic  #219                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
        37: invokevirtual #223                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        40: pop
        41: aload_1
        42: ldc           #227                // String )
        44: invokevirtual #223                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        47: pop
        48: aload_1
        49: invokevirtual #229                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        52: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           10      42     1     b   Ljava/lang/StringBuilder;
            0      53     0  this   Lcoursier/core/VersionConstraint;

  public boolean canEqual(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: ifnull        15
         4: aload_1
         5: instanceof    #2                  // class coursier/core/VersionConstraint
         8: ifeq          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/VersionConstraint;
            0      17     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     89
         5: aload_0
         6: aload_1
         7: invokevirtual #238                // Method canEqual:(Ljava/lang/Object;)Z
        10: ifeq          93
        13: aload_1
        14: checkcast     #2                  // class coursier/core/VersionConstraint
        17: astore_2
        18: iconst_1
        19: ifeq          85
        22: aload_0
        23: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        26: aload_2
        27: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        30: astore_3
        31: dup
        32: ifnonnull     43
        35: pop
        36: aload_3
        37: ifnull        50
        40: goto          85
        43: aload_3
        44: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ifeq          85
        50: aload_0
        51: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        54: aload_2
        55: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        58: astore        4
        60: dup
        61: ifnonnull     73
        64: pop
        65: aload         4
        67: ifnull        81
        70: goto          85
        73: aload         4
        75: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        78: ifeq          85
        81: iconst_1
        82: goto          86
        85: iconst_0
        86: ifeq          93
        89: iconst_1
        90: goto          94
        93: iconst_0
        94: ireturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class coursier/core/VersionConstraint, class java/lang/Object, class coursier/core/VersionConstraint, class coursier/core/VersionInterval ]
          stack = [ class coursier/core/VersionInterval ]
        frame_type = 6 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/core/VersionConstraint, class java/lang/Object, class coursier/core/VersionConstraint, class coursier/core/VersionInterval, class scala/collection/immutable/Seq ]
          stack = [ class scala/collection/immutable/Seq ]
        frame_type = 7 /* same */
        frame_type = 249 /* chop */
          offset_delta = 3
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           18      68     2 other   Lcoursier/core/VersionConstraint;
            0      95     0  this   Lcoursier/core/VersionConstraint;
            0      95     1   obj   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      obj                            final

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: bipush        17
         2: ldc           #245                // String VersionConstraint
         4: invokestatic  #251                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
         7: iadd
         8: istore_1
         9: bipush        37
        11: iload_1
        12: imul
        13: aload_0
        14: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        17: invokestatic  #251                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        20: iadd
        21: istore_1
        22: bipush        37
        24: iload_1
        25: imul
        26: aload_0
        27: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        30: invokestatic  #251                // Method scala/runtime/Statics.anyHash:(Ljava/lang/Object;)I
        33: iadd
        34: istore_1
        35: bipush        37
        37: iload_1
        38: imul
        39: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      30     1  code   I
            0      40     0  this   Lcoursier/core/VersionConstraint;

  private scala.Tuple2<coursier.core.VersionInterval, scala.collection.immutable.Seq<coursier.core.Version>> tuple();
    descriptor: ()Lscala/Tuple2;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=4, locals=1, args_size=1
         0: new           #258                // class scala/Tuple2
         3: dup
         4: aload_0
         5: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
         8: aload_0
         9: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        12: invokespecial #261                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        15: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lcoursier/core/VersionConstraint;
    Signature: #256                         // ()Lscala/Tuple2<Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;>;

  public java.lang.String productPrefix();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc           #245                // String VersionConstraint
         2: areturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       3     0  this   Lcoursier/core/VersionConstraint;

  public int productArity();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_2
         1: ireturn
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/VersionConstraint;

  public java.lang.Object productElement(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 31
                 default: 38
            }
        24: aload_0
        25: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        28: goto          53
        31: aload_0
        32: invokevirtual #79                 // Method preferred:()Lscala/collection/immutable/Seq;
        35: goto          53
        38: new           #268                // class java/lang/IndexOutOfBoundsException
        41: dup
        42: iload_2
        43: invokestatic  #274                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        46: invokevirtual #275                // Method java/lang/Object.toString:()Ljava/lang/String;
        49: invokespecial #276                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        52: athrow
        53: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 6 /* same */
        frame_type = 6 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/Object ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lcoursier/core/VersionConstraint;
            0      54     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public java.lang.String productElementName(int);
    descriptor: (I)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: iload_1
         1: istore_2
         2: iload_2
         3: tableswitch   { // 0 to 1
                       0: 24
                       1: 30
                 default: 36
            }
        24: ldc_w         #279                // String interval
        27: goto          51
        30: ldc_w         #280                // String preferred
        33: goto          51
        36: new           #268                // class java/lang/IndexOutOfBoundsException
        39: dup
        40: iload_2
        41: invokestatic  #274                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
        44: invokevirtual #275                // Method java/lang/Object.toString:()Ljava/lang/String;
        47: invokespecial #276                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
        50: athrow
        51: areturn
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 24
          locals = [ int ]
        frame_type = 5 /* same */
        frame_type = 5 /* same */
        frame_type = 78 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 7: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      52     0  this   Lcoursier/core/VersionConstraint;
            0      52     1     n   I
    MethodParameters:
      Name                           Flags
      n                              final

  public static final boolean $anonfun$isValid$2(coursier.core.VersionConstraint, coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=3
         0: aload_1
         1: aload_2
         2: invokevirtual #291                // Method coursier/core/Version.compare:(Lcoursier/core/Version;)I
         5: istore_3
         6: iload_3
         7: iconst_0
         8: if_icmplt     26
        11: iload_3
        12: iconst_0
        13: if_icmpne     30
        16: aload_0
        17: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        20: invokevirtual #294                // Method coursier/core/VersionInterval.toIncluded:()Z
        23: ifeq          30
        26: iconst_1
        27: goto          31
        30: iconst_0
        31: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 26
          locals = [ int ]
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 15: 0
        line 16: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      25     3   cmp   I
            0      32     0 $this   Lcoursier/core/VersionConstraint;
            0      32     1   v$1   Lcoursier/core/Version;
            0      32     2    to   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      v$1                            final
      to                             final

  public static final boolean $anonfun$isValid$1(coursier.core.VersionConstraint, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
         4: aload_1
         5: invokevirtual #303                // Method coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
         8: ifne          31
        11: aload_0
        12: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
        15: invokevirtual #305                // Method coursier/core/VersionInterval.to:()Lscala/Option;
        18: aload_0
        19: aload_1
        20: invokedynamic #313,  0            // InvokeDynamic #3:apply:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Lscala/Function1;
        25: invokevirtual #314                // Method scala/Option.forall:(Lscala/Function1;)Z
        28: ifeq          35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: ireturn
      StackMapTable: number_of_entries = 3
        frame_type = 31 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 13: 0
        line 14: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      37     0 $this   Lcoursier/core/VersionConstraint;
            0      37     1     v   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      v                              final

  public static final boolean $anonfun$blend$1(coursier.core.VersionConstraint, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #73                 // Method interval:()Lcoursier/core/VersionInterval;
         4: aload_1
         5: invokevirtual #303                // Method coursier/core/VersionInterval.contains:(Lcoursier/core/Version;)Z
         8: ireturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/core/VersionConstraint;
            0       9     1 version   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      version                        final

  public static final java.lang.String $anonfun$repr$1(scala.util.Either);
    descriptor: (Lscala/util/Either;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=8, args_size=1
         0: aload_0
         1: astore_2
         2: aload_2
         3: instanceof    #319                // class scala/util/Left
         6: ifeq          69
         9: aload_2
        10: checkcast     #319                // class scala/util/Left
        13: astore_3
        14: aload_3
        15: invokevirtual #323                // Method scala/util/Left.value:()Ljava/lang/Object;
        18: checkcast     #75                 // class coursier/core/VersionInterval
        21: astore        4
        23: aload         4
        25: getstatic     #328                // Field coursier/core/VersionInterval$.MODULE$:Lcoursier/core/VersionInterval$;
        28: invokevirtual #331                // Method coursier/core/VersionInterval$.zero:()Lcoursier/core/VersionInterval;
        31: astore        5
        33: dup
        34: ifnonnull     46
        37: pop
        38: aload         5
        40: ifnull        54
        43: goto          60
        46: aload         5
        48: invokevirtual #240                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        51: ifeq          60
        54: ldc_w         #335                // String
        57: goto          65
        60: aload         4
        62: invokevirtual #337                // Method coursier/core/VersionInterval.repr:()Ljava/lang/String;
        65: astore_1
        66: goto          116
        69: goto          72
        72: aload_2
        73: instanceof    #339                // class scala/util/Right
        76: ifeq          104
        79: aload_2
        80: checkcast     #339                // class scala/util/Right
        83: astore        6
        85: aload         6
        87: invokevirtual #340                // Method scala/util/Right.value:()Ljava/lang/Object;
        90: checkcast     #287                // class coursier/core/Version
        93: astore        7
        95: aload         7
        97: invokevirtual #341                // Method coursier/core/Version.repr:()Ljava/lang/String;
       100: astore_1
       101: goto          116
       104: goto          107
       107: new           #343                // class scala/MatchError
       110: dup
       111: aload_2
       112: invokespecial #344                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       115: athrow
       116: aload_1
       117: areturn
      StackMapTable: number_of_entries = 9
        frame_type = 255 /* full_frame */
          offset_delta = 46
          locals = [ class scala/util/Either, top, class scala/util/Either, class scala/util/Left, class coursier/core/VersionInterval, class coursier/core/VersionInterval ]
          stack = [ class coursier/core/VersionInterval ]
        frame_type = 7 /* same */
        frame_type = 5 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 248 /* chop */
          offset_delta = 3
        frame_type = 2 /* same */
        frame_type = 31 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 8
          locals = [ class scala/util/Either, class java/lang/String, class scala/util/Either ]
          stack = []
      LineNumberTable:
        line 32: 0
        line 33: 2
        line 34: 23
        line 35: 54
        line 37: 60
        line 33: 69
        line 38: 72
        line 32: 107
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           23      46     4   itv   Lcoursier/core/VersionInterval;
           95       9     7     v   Lcoursier/core/Version;
            0     118     0  x0$1   Lscala/util/Either;
    MethodParameters:
      Name                           Flags
      x0$1                           final

  public coursier.core.VersionConstraint(coursier.core.VersionInterval, scala.collection.immutable.Seq<coursier.core.Version>);
    descriptor: (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: putfield      #65                 // Field interval:Lcoursier/core/VersionInterval;
         5: aload_0
         6: aload_2
         7: putfield      #69                 // Field preferred:Lscala/collection/immutable/Seq;
        10: aload_0
        11: invokespecial #350                // Method java/lang/Object."<init>":()V
        14: aload_0
        15: invokestatic  #354                // InterfaceMethod scala/Product.$init$:(Lscala/Product;)V
        18: return
      LineNumberTable:
        line 7: 0
        line 42: 10
        line 7: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lcoursier/core/VersionConstraint;
            0      19     1 interval   Lcoursier/core/VersionInterval;
            0      19     2 preferred   Lscala/collection/immutable/Seq;
    Signature: #347                         // (Lcoursier/core/VersionInterval;Lscala/collection/immutable/Seq<Lcoursier/core/Version;>;)V
    MethodParameters:
      Name                           Flags
      interval                       final
      preferred                      final

  public static final java.lang.Object $anonfun$isValid$1$adapted(coursier.core.VersionConstraint, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #356                // Method $anonfun$isValid$1:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
         5: invokestatic  #360                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/core/VersionConstraint;
            0       9     1     v   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final
      v                              final

  public static final java.lang.Object $anonfun$blend$1$adapted(coursier.core.VersionConstraint, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokestatic  #362                // Method $anonfun$blend$1:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Z
         5: invokestatic  #360                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         8: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0 $this   Lcoursier/core/VersionConstraint;
            0       9     1 version   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final
      version                        final

  public static final java.lang.Object $anonfun$isValid$2$adapted(coursier.core.VersionConstraint, coursier.core.Version, coursier.core.Version);
    descriptor: (Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokestatic  #364                // Method $anonfun$isValid$2:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Z
         6: invokestatic  #360                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         9: areturn
      LineNumberTable:
        line 14: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/VersionConstraint;
            0      10     1   v$1   Lcoursier/core/Version;
            0      10     2    to   Lcoursier/core/Version;
    MethodParameters:
      Name                           Flags
      $this                          final
      v$1                            final
      to                             final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #376,  0            // InvokeDynamic #4:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #17= #14 of #16;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "VersionConstraint.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0005]d\u0001B\u0010!\u0005\u0015B\u0001b\u000f\u0001\u0003\u0006\u0004%\t\u0001\u0010\u0005\t\u0003\u0002\u0011\t\u0011)A\u0005{!A!\t\u0001BC\u0002\u0013\u00051\t\u0003\u0005K\u0001\t\u0005\t\u0015!\u0003E\u0011\u0015Y\u0005\u0001\"\u0001M\u0011\u0015\u0001\u0006\u0001\"\u0001R\u0011\u0015)\u0006\u0001\"\u0001W\u0011\u0015i\u0006\u0001\"\u0001_\u0011\u0015A\u0007\u0001\"\u0001j\u0011\u0015Y\u0007\u0001\"\u0001m\u0011\u0015q\u0007\u0001\"\u0011p\u0011\u00159\b\u0001\"\u0011y\u0011\u0015q\b\u0001\"\u0011\u0000\u0011\u001d\t\u0019\u0001\u0001C!\u0003\u000bAq!!\u0004\u0001\t\u0013\ty\u0001C\u0004\u0002\u0018\u0001!\t%!\u0007\t\u000f\u0005m\u0001\u0001\"\u0011\u0002\u001e!9\u0011q\u0004\u0001\u0005B\u0005\u0005\u0002bBA\u0014\u0001\u0011\u0005\u0013\u0011F\u0004\b\u0003[\u0001\u0003\u0012AA\u0018\r\u0019y\u0002\u0005#\u0001\u00022!11*\u0006C\u0001\u0003{AaAQ\u000b\u0005\u0002\u0005}\u0002BB\u001e\u0016\t\u0003\t)\u0005C\u0005\u0002JU\u0011\r\u0011\"\u0001\u0002L!9\u0011QJ\u000b!\u0002\u0013i\u0005bBA(+\u0011\u0005\u0011\u0011\u000b\u0005\b\u0003?*B\u0011AA1\u0011\u001d\t)\'\u0006C\u0001\u0003OB\u0011\"!\u001c\u0016\u0003\u0003%I!a\u001c\u0003#Y+\'o]5p]\u000e{gn\u001d;sC&tGO\u0003\u0002\"E\u0005!1m\u001c:f\u0015\u0005\u0019\u0013\u0001C2pkJ\u001c\u0018.\u001a:\u0004\u0001M!\u0001A\n\u00170!\t9#&D\u0001)\u0015\u0005I\u0013!B:dC2\f\u0017BA\u0016)\u0005\u0019\te.\u001f*fMB\u0011q%L\u0005\u0003]!\u0012q\u0001\u0015:pIV\u001cG\u000f\u0005\u00021q9\u0011\u0011G\u000e\b\u0003eUj\u0011a\r\u0006\u0003i\u0011\na\u0001\u0010:p_Rt\u0014\"A\u0015\n\u0005]B\u0013a\u00029bG.\fw-Z\u0005\u0003si\u0012AbU3sS\u0006d\u0017N_1cY\u0016T!a\u000e\u0015\u0002\u0011%tG/\u001a:wC2,\u0012!\u0010\t\u0003}}j\u0011\u0001I\u0005\u0003\u0001\u0002\u0012qBV3sg&|g.\u00138uKJ4\u0018\r\\\u0001\nS:$XM\u001d<bY\u0002\n\u0011\u0002\u001d:fM\u0016\u0014(/\u001a3\u0016\u0003\u0011\u00032\u0001M#H\u0013\t1%HA\u0002TKF\u0004\"A\u0010%\n\u0005%\u0003#a\u0002,feNLwN\\\u0001\u000baJ,g-\u001a:sK\u0012\u0004\u0013A\u0002\u001fj]&$h\bF\u0002N\u001d>\u0003\"A\u0010\u0001\t\u000bm*\u0001\u0019A\u001f\t\u000b\t+\u0001\u0019\u0001#\u0002\u000f%\u001ch+\u00197jIV\t!\u000b\u0005\u0002(\'&\u0011A\u000b\u000b\u0002\b\u0005>|G.Z1o\u0003\u0015\u0011G.\u001a8e+\u00059\u0006cA\u0014Y5&\u0011\u0011\f\u000b\u0002\u0007\u001fB$\u0018n\u001c8\u0011\tAZVhR\u0005\u00039j\u0012a!R5uQ\u0016\u0014\u0018\u0001\u0002:faJ,\u0012a\u0018\t\u0004Oa\u0003\u0007CA1f\u001d\t\u00117\r\u0005\u00023Q%\u0011A\rK\u0001\u0007!J,G-\u001a4\n\u0005\u0019<\'AB*ue&twM\u0003\u0002eQ\u0005aq/\u001b;i\u0013:$XM\u001d<bYR\u0011QJ\u001b\u0005\u0006w%\u0001\r!P\u0001\u000eo&$\b\u000e\u0015:fM\u0016\u0014(/\u001a3\u0015\u00055k\u0007\"\u0002\"\u000b\u0001\u0004!\u0015\u0001\u0003;p\'R\u0014\u0018N\\4\u0015\u0003A\u0004\"!\u001d<\u000e\u0003IT!a\u001d;\u0002\t1\fgn\u001a\u0006\u0002k\u0006!!.\u0019<b\u0013\t1\'/\u0001\u0005dC:,\u0015/^1m)\t\u0011\u0016\u0010C\u0003{\u0019\u0001\u000710A\u0002pE*\u0004\"a\n?\n\u0005uD#aA!os\u00061Q-];bYN$2AUA\u0001\u0011\u0015QX\u00021\u0001|\u0003!A\u0017m\u001d5D_\u0012,GCAA\u0004!\r9\u0013\u0011B\u0005\u0004\u0003\u0017A#aA%oi\u0006)A/\u001e9mKV\u0011\u0011\u0011\u0003\t\u0006O\u0005MQ\bR\u0005\u0004\u0003+A#A\u0002+va2,\'\'A\u0007qe>$Wo\u0019;Qe\u00164\u0017\u000e_\u000b\u0002a\u0006a\u0001O]8ek\u000e$\u0018I]5usV\u0011\u0011qA\u0001\u000faJ|G-^2u\u000b2,W.\u001a8u)\rY\u00181\u0005\u0005\b\u0003K\u0011\u0002\u0019AA\u0004\u0003\u0005q\u0017A\u00059s_\u0012,8\r^#mK6,g\u000e\u001e(b[\u0016$2\u0001]A\u0016\u0011\u001d\t)c\u0005a\u0001\u0003\u000f\t\u0011CV3sg&|gnQ8ogR\u0014\u0018-\u001b8u!\tqTc\u0005\u0003\u0016M\u0005M\u0002\u0003BA\u001b\u0003wi!!a\u000e\u000b\u0007\u0005eB/\u0001\u0002j_&\u0019\u0011(a\u000e\u0015\u0005\u0005=BcA\'\u0002B!1\u00111I\fA\u0002\u001d\u000bqA^3sg&|g\u000eF\u0002N\u0003\u000fBQa\u000f\rA\u0002u\n1!\u00197m+\u0005i\u0015\u0001B1mY\u0002\nQ!\\3sO\u0016$B!a\u0015\u0002VA\u0019q\u0005W\'\t\u000f\u0005]3\u00041\u0001\u0002Z\u0005Y1m\u001c8tiJ\f\u0017N\u001c;t!\u00119\u00131L\'\n\u0007\u0005u\u0003F\u0001\u0006=e\u0016\u0004X-\u0019;fIz\nAB]3mCb,G-T3sO\u0016$2!TA2\u0011\u001d\t9\u0006\ba\u0001\u00033\nQ!\u00199qYf$R!TA5\u0003WBQaO\u000fA\u0002uBQAQ\u000fA\u0002\u0011\u000bAb\u001e:ji\u0016\u0014V\r\u001d7bG\u0016$\"!!\u001d\u0011\u0007E\f\u0019(C\u0002\u0002vI\u0014aa\u00142kK\u000e$\b"
    )
BootstrapMethods:
  0: #97 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #81 (Ljava/lang/Object;)Ljava/lang/Object;
      #86 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$isValid$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
      #88 (Lcoursier/core/Version;)Ljava/lang/Object;
      #89 5
      #90 1
      #88 (Lcoursier/core/Version;)Ljava/lang/Object;
  1: #97 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #81 (Ljava/lang/Object;)Ljava/lang/Object;
      #114 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$blend$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
      #88 (Lcoursier/core/Version;)Ljava/lang/Object;
      #89 5
      #90 1
      #88 (Lcoursier/core/Version;)Ljava/lang/Object;
  2: #97 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #81 (Ljava/lang/Object;)Ljava/lang/Object;
      #190 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$repr$1:(Lscala/util/Either;)Ljava/lang/String;
      #191 (Lscala/util/Either;)Ljava/lang/String;
      #89 5
      #90 1
      #191 (Lscala/util/Either;)Ljava/lang/String;
  3: #97 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #81 (Ljava/lang/Object;)Ljava/lang/Object;
      #310 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$isValid$2$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #88 (Lcoursier/core/Version;)Ljava/lang/Object;
      #89 5
      #90 1
      #88 (Lcoursier/core/Version;)Ljava/lang/Object;
  4: #373 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #114 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$blend$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
      #86 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$isValid$1$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;)Ljava/lang/Object;
      #310 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$isValid$2$adapted:(Lcoursier/core/VersionConstraint;Lcoursier/core/Version;Lcoursier/core/Version;)Ljava/lang/Object;
      #190 REF_invokeStatic coursier/core/VersionConstraint.$anonfun$repr$1:(Lscala/util/Either;)Ljava/lang/String;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 01 00 1A 01 3B 01 2A 01 00 6F 00 53 01 01 29
   01 2A 01 00 52 00 53 01 01 19 01 1A 01 01 32 01
   33 01 00 BA 00 BB 01 00 8B 00 C8 01 00 6B 00 6C
   01 00 E8 00 E9 01 00 EC 00 E9 01 00 F2 00 F3 01
   00 12 00 3F 01 00 46 00 47 01 00 14 00 42 01 01
   07 00 F3 01 01 08 01 09 01 01 15 01 16 01 00 3A
   00 32 01 00 31 00 32 01 01 06 00 CE 01 00 B6 00
   6C 01 00 CD 00 CE 01 00 FE 00 FF 01 00 C6 00 C7
   01 00 CB 00 23 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
