Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/compatibility/package$.class
  Last modified May 29, 2022; size 11131 bytes
  SHA-256 checksum de49dab5d82159f70553bded7fda8dfb88f9fef5d865872fca2ce29e214ab696
  Compiled from "package.scala"
public final class coursier.core.compatibility.package$
  minor version: 0
  major version: 52
  flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER
  this_class: #2                          // coursier/core/compatibility/package$
  super_class: #4                         // java/lang/Object
  interfaces: 0, fields: 4, methods: 31, attributes: 5
Constant pool:
    #1 = Utf8               coursier/core/compatibility/package$
    #2 = Class              #1            // coursier/core/compatibility/package$
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               package.scala
    #6 = Utf8               coursier/core/compatibility/package$$anon$1
    #7 = Class              #6            // coursier/core/compatibility/package$$anon$1
    #8 = Utf8               coursier/core/compatibility/package$$anonfun$coloredOutput$2
    #9 = Class              #8            // coursier/core/compatibility/package$$anonfun$coloredOutput$2
   #10 = Utf8               coursier/core/compatibility/package$XmlHandler
   #11 = Class              #10           // coursier/core/compatibility/package$XmlHandler
   #12 = Utf8               coursier/core/compatibility/package
   #13 = Class              #12           // coursier/core/compatibility/package
   #14 = Utf8               XmlHandler
   #15 = Utf8               coursier/util/Xml$Node
   #16 = Class              #15           // coursier/util/Xml$Node
   #17 = Utf8               coursier/util/Xml
   #18 = Class              #17           // coursier/util/Xml
   #19 = Utf8               Node
   #20 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #21 = Class              #20           // java/lang/invoke/MethodHandles$Lookup
   #22 = Utf8               java/lang/invoke/MethodHandles
   #23 = Class              #22           // java/lang/invoke/MethodHandles
   #24 = Utf8               Lookup
   #25 = Utf8               MODULE$
   #26 = Utf8               Lcoursier/core/compatibility/package$;
   #27 = Utf8               spf
   #28 = Utf8               Ljavax/xml/parsers/SAXParserFactory;
   #29 = Utf8               utf8Bom
   #30 = Utf8               Ljava/lang/String;
   #31 = Utf8               bitmap$0
   #32 = Utf8               Z
   #33 = Utf8               <clinit>
   #34 = Utf8               ()V
   #35 = Utf8               <init>
   #36 = NameAndType        #35:#34       // "<init>":()V
   #37 = Methodref          #2.#36        // coursier/core/compatibility/package$."<init>":()V
   #38 = NameAndType        #25:#26       // MODULE$:Lcoursier/core/compatibility/package$;
   #39 = Fieldref           #2.#38        // coursier/core/compatibility/package$.MODULE$:Lcoursier/core/compatibility/package$;
   #40 = Utf8               ﻿
   #41 = String             #40           // ﻿
   #42 = NameAndType        #29:#30       // utf8Bom:Ljava/lang/String;
   #43 = Fieldref           #2.#42        // coursier/core/compatibility/package$.utf8Bom:Ljava/lang/String;
   #44 = Utf8               RichChar
   #45 = Utf8               (C)C
   #46 = Utf8               c
   #47 = Utf8               this
   #48 = Utf8               C
   #49 = Utf8               ()Ljava/lang/String;
   #50 = Utf8               entityIdx
   #51 = Utf8               (Ljava/lang/String;I)Lscala/Option;
   #52 = Utf8               (Ljava/lang/String;I)Lscala/Option<Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;
   #53 = Utf8               s
   #54 = Utf8               fromIdx
   #55 = Utf8               scala/Option$
   #56 = Class              #55           // scala/Option$
   #57 = Utf8               Lscala/Option$;
   #58 = NameAndType        #25:#57       // MODULE$:Lscala/Option$;
   #59 = Fieldref           #56.#58       // scala/Option$.MODULE$:Lscala/Option$;
   #60 = Utf8               empty
   #61 = Utf8               ()Lscala/Option;
   #62 = NameAndType        #60:#61       // empty:()Lscala/Option;
   #63 = Methodref          #56.#62       // scala/Option$.empty:()Lscala/Option;
   #64 = Utf8               scala/Option
   #65 = Class              #64           // scala/Option
   #66 = Utf8               isEmpty
   #67 = Utf8               ()Z
   #68 = NameAndType        #66:#67       // isEmpty:()Z
   #69 = Methodref          #65.#68       // scala/Option.isEmpty:()Z
   #70 = Utf8               java/lang/String
   #71 = Class              #70           // java/lang/String
   #72 = Utf8               length
   #73 = Utf8               ()I
   #74 = NameAndType        #72:#73       // length:()I
   #75 = Methodref          #71.#74       // java/lang/String.length:()I
   #76 = Utf8               charAt
   #77 = Utf8               (I)C
   #78 = NameAndType        #76:#77       // charAt:(I)C
   #79 = Methodref          #71.#78       // java/lang/String.charAt:(I)C
   #80 = Utf8               scala/Predef$
   #81 = Class              #80           // scala/Predef$
   #82 = Utf8               Lscala/Predef$;
   #83 = NameAndType        #25:#82       // MODULE$:Lscala/Predef$;
   #84 = Fieldref           #81.#83       // scala/Predef$.MODULE$:Lscala/Predef$;
   #85 = Utf8               assert
   #86 = Utf8               (Z)V
   #87 = NameAndType        #85:#86       // assert:(Z)V
   #88 = Methodref          #81.#87       // scala/Predef$.assert:(Z)V
   #89 = Utf8               scala/Some
   #90 = Class              #89           // scala/Some
   #91 = Utf8               scala/Tuple2$mcII$sp
   #92 = Class              #91           // scala/Tuple2$mcII$sp
   #93 = Utf8               (II)V
   #94 = NameAndType        #35:#93       // "<init>":(II)V
   #95 = Methodref          #92.#94       // scala/Tuple2$mcII$sp."<init>":(II)V
   #96 = Utf8               (Ljava/lang/Object;)V
   #97 = NameAndType        #35:#96       // "<init>":(Ljava/lang/Object;)V
   #98 = Methodref          #90.#97       // scala/Some."<init>":(Ljava/lang/Object;)V
   #99 = Utf8               start
  #100 = Utf8               I
  #101 = Utf8               isAlpha
  #102 = Utf8               i
  #103 = Utf8               found
  #104 = Utf8               Lscala/Option;
  #105 = Utf8               entityIdx$default$2
  #106 = Utf8               substituteEntities
  #107 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
  #108 = Utf8               scala/runtime/LazyRef
  #109 = Class              #108          // scala/runtime/LazyRef
  #110 = Methodref          #109.#36      // scala/runtime/LazyRef."<init>":()V
  #111 = Utf8               scala/collection/mutable/StringBuilder
  #112 = Class              #111          // scala/collection/mutable/StringBuilder
  #113 = Methodref          #112.#36      // scala/collection/mutable/StringBuilder."<init>":()V
  #114 = NameAndType        #29:#49       // utf8Bom:()Ljava/lang/String;
  #115 = Methodref          #2.#114       // coursier/core/compatibility/package$.utf8Bom:()Ljava/lang/String;
  #116 = NameAndType        #50:#51       // entityIdx:(Ljava/lang/String;I)Lscala/Option;
  #117 = Methodref          #2.#116       // coursier/core/compatibility/package$.entityIdx:(Ljava/lang/String;I)Lscala/Option;
  #118 = Utf8               nonEmpty
  #119 = NameAndType        #118:#67      // nonEmpty:()Z
  #120 = Methodref          #65.#119      // scala/Option.nonEmpty:()Z
  #121 = Utf8               get
  #122 = Utf8               ()Ljava/lang/Object;
  #123 = NameAndType        #121:#122     // get:()Ljava/lang/Object;
  #124 = Methodref          #65.#123      // scala/Option.get:()Ljava/lang/Object;
  #125 = Utf8               scala/Tuple2
  #126 = Class              #125          // scala/Tuple2
  #127 = Utf8               _1$mcI$sp
  #128 = NameAndType        #127:#73      // _1$mcI$sp:()I
  #129 = Methodref          #126.#128     // scala/Tuple2._1$mcI$sp:()I
  #130 = Utf8               _2$mcI$sp
  #131 = NameAndType        #130:#73      // _2$mcI$sp:()I
  #132 = Methodref          #126.#131     // scala/Tuple2._2$mcI$sp:()I
  #133 = Utf8               a$1
  #134 = Utf8               (Lscala/runtime/LazyRef;Ljava/lang/String;)[C
  #135 = NameAndType        #133:#134     // a$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
  #136 = Methodref          #2.#135       // coursier/core/compatibility/package$.a$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
  #137 = Utf8               appendAll
  #138 = Utf8               ([CII)Lscala/collection/mutable/StringBuilder;
  #139 = NameAndType        #137:#138     // appendAll:([CII)Lscala/collection/mutable/StringBuilder;
  #140 = Methodref          #112.#139     // scala/collection/mutable/StringBuilder.appendAll:([CII)Lscala/collection/mutable/StringBuilder;
  #141 = Utf8               substring
  #142 = Utf8               (II)Ljava/lang/String;
  #143 = NameAndType        #141:#142     // substring:(II)Ljava/lang/String;
  #144 = Methodref          #71.#143      // java/lang/String.substring:(II)Ljava/lang/String;
  #145 = Utf8               coursier/core/compatibility/Entities$
  #146 = Class              #145          // coursier/core/compatibility/Entities$
  #147 = Utf8               Lcoursier/core/compatibility/Entities$;
  #148 = NameAndType        #25:#147      // MODULE$:Lcoursier/core/compatibility/Entities$;
  #149 = Fieldref           #146.#148     // coursier/core/compatibility/Entities$.MODULE$:Lcoursier/core/compatibility/Entities$;
  #150 = Utf8               map
  #151 = Utf8               ()Lscala/collection/immutable/Map;
  #152 = NameAndType        #150:#151     // map:()Lscala/collection/immutable/Map;
  #153 = Methodref          #146.#152     // coursier/core/compatibility/Entities$.map:()Lscala/collection/immutable/Map;
  #154 = MethodType         #122          //  ()Ljava/lang/Object;
  #155 = Utf8               $anonfun$substituteEntities$1
  #156 = NameAndType        #155:#107     // $anonfun$substituteEntities$1:(Ljava/lang/String;)Ljava/lang/String;
  #157 = Methodref          #2.#156       // coursier/core/compatibility/package$.$anonfun$substituteEntities$1:(Ljava/lang/String;)Ljava/lang/String;
  #158 = MethodHandle       6:#157        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$substituteEntities$1:(Ljava/lang/String;)Ljava/lang/String;
  #159 = MethodType         #49           //  ()Ljava/lang/String;
  #160 = Integer            5
  #161 = Integer            1
  #162 = Utf8               java/lang/invoke/LambdaMetafactory
  #163 = Class              #162          // java/lang/invoke/LambdaMetafactory
  #164 = Utf8               altMetafactory
  #165 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #166 = NameAndType        #164:#165     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #167 = Methodref          #163.#166     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #168 = MethodHandle       6:#167        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #169 = Utf8               apply
  #170 = Utf8               (Ljava/lang/String;)Lscala/Function0;
  #171 = NameAndType        #169:#170     // apply:(Ljava/lang/String;)Lscala/Function0;
  #172 = InvokeDynamic      #0:#171       // #0:apply:(Ljava/lang/String;)Lscala/Function0;
  #173 = Utf8               scala/collection/immutable/Map
  #174 = Class              #173          // scala/collection/immutable/Map
  #175 = Utf8               getOrElse
  #176 = Utf8               (Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #177 = NameAndType        #175:#176     // getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #178 = InterfaceMethodref #174.#177     // scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
  #179 = Utf8               (Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #180 = NameAndType        #137:#179     // appendAll:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #181 = Methodref          #112.#180     // scala/collection/mutable/StringBuilder.appendAll:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
  #182 = Utf8               result
  #183 = NameAndType        #182:#49      // result:()Ljava/lang/String;
  #184 = Methodref          #112.#183     // scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
  #185 = Utf8               from
  #186 = Utf8               to
  #187 = Utf8               name
  #188 = Utf8               replacement
  #189 = Utf8               a$lzy
  #190 = Utf8               Lscala/runtime/LazyRef;
  #191 = Utf8               b
  #192 = Utf8               Lscala/collection/mutable/StringBuilder;
  #193 = Utf8               j
  #194 = Utf8               xmlPreprocess
  #195 = NameAndType        #106:#107     // substituteEntities:(Ljava/lang/String;)Ljava/lang/String;
  #196 = Methodref          #2.#195       // coursier/core/compatibility/package$.substituteEntities:(Ljava/lang/String;)Ljava/lang/String;
  #197 = Utf8               spf$lzycompute
  #198 = Utf8               ()Ljavax/xml/parsers/SAXParserFactory;
  #199 = NameAndType        #31:#32       // bitmap$0:Z
  #200 = Fieldref           #2.#199       // coursier/core/compatibility/package$.bitmap$0:Z
  #201 = Utf8               javax/xml/parsers/SAXParserFactory
  #202 = Class              #201          // javax/xml/parsers/SAXParserFactory
  #203 = Utf8               newInstance
  #204 = NameAndType        #203:#198     // newInstance:()Ljavax/xml/parsers/SAXParserFactory;
  #205 = Methodref          #202.#204     // javax/xml/parsers/SAXParserFactory.newInstance:()Ljavax/xml/parsers/SAXParserFactory;
  #206 = Utf8               setNamespaceAware
  #207 = NameAndType        #206:#86      // setNamespaceAware:(Z)V
  #208 = Methodref          #202.#207     // javax/xml/parsers/SAXParserFactory.setNamespaceAware:(Z)V
  #209 = NameAndType        #27:#28       // spf:Ljavax/xml/parsers/SAXParserFactory;
  #210 = Fieldref           #2.#209       // coursier/core/compatibility/package$.spf:Ljavax/xml/parsers/SAXParserFactory;
  #211 = Utf8               java/lang/Throwable
  #212 = Class              #211          // java/lang/Throwable
  #213 = Utf8               spf0
  #214 = NameAndType        #197:#198     // spf$lzycompute:()Ljavax/xml/parsers/SAXParserFactory;
  #215 = Methodref          #2.#214       // coursier/core/compatibility/package$.spf$lzycompute:()Ljavax/xml/parsers/SAXParserFactory;
  #216 = Utf8               xmlParseSax
  #217 = Utf8               (Ljava/lang/String;Lcoursier/util/SaxHandler;)Lcoursier/util/SaxHandler;
  #218 = Utf8               str
  #219 = Utf8               handler
  #220 = NameAndType        #194:#107     // xmlPreprocess:(Ljava/lang/String;)Ljava/lang/String;
  #221 = Methodref          #2.#220       // coursier/core/compatibility/package$.xmlPreprocess:(Ljava/lang/String;)Ljava/lang/String;
  #222 = NameAndType        #27:#198      // spf:()Ljavax/xml/parsers/SAXParserFactory;
  #223 = Methodref          #2.#222       // coursier/core/compatibility/package$.spf:()Ljavax/xml/parsers/SAXParserFactory;
  #224 = Utf8               newSAXParser
  #225 = Utf8               ()Ljavax/xml/parsers/SAXParser;
  #226 = NameAndType        #224:#225     // newSAXParser:()Ljavax/xml/parsers/SAXParser;
  #227 = Methodref          #202.#226     // javax/xml/parsers/SAXParserFactory.newSAXParser:()Ljavax/xml/parsers/SAXParser;
  #228 = Utf8               javax/xml/parsers/SAXParser
  #229 = Class              #228          // javax/xml/parsers/SAXParser
  #230 = Utf8               getXMLReader
  #231 = Utf8               ()Lorg/xml/sax/XMLReader;
  #232 = NameAndType        #230:#231     // getXMLReader:()Lorg/xml/sax/XMLReader;
  #233 = Methodref          #229.#232     // javax/xml/parsers/SAXParser.getXMLReader:()Lorg/xml/sax/XMLReader;
  #234 = Utf8               (Lcoursier/util/SaxHandler;)V
  #235 = NameAndType        #35:#234      // "<init>":(Lcoursier/util/SaxHandler;)V
  #236 = Methodref          #11.#235      // coursier/core/compatibility/package$XmlHandler."<init>":(Lcoursier/util/SaxHandler;)V
  #237 = Utf8               org/xml/sax/XMLReader
  #238 = Class              #237          // org/xml/sax/XMLReader
  #239 = Utf8               setContentHandler
  #240 = Utf8               (Lorg/xml/sax/ContentHandler;)V
  #241 = NameAndType        #239:#240     // setContentHandler:(Lorg/xml/sax/ContentHandler;)V
  #242 = InterfaceMethodref #238.#241     // org/xml/sax/XMLReader.setContentHandler:(Lorg/xml/sax/ContentHandler;)V
  #243 = Utf8               org/xml/sax/InputSource
  #244 = Class              #243          // org/xml/sax/InputSource
  #245 = Utf8               java/io/CharArrayReader
  #246 = Class              #245          // java/io/CharArrayReader
  #247 = Utf8               toCharArray
  #248 = Utf8               ()[C
  #249 = NameAndType        #247:#248     // toCharArray:()[C
  #250 = Methodref          #71.#249      // java/lang/String.toCharArray:()[C
  #251 = Utf8               ([C)V
  #252 = NameAndType        #35:#251      // "<init>":([C)V
  #253 = Methodref          #246.#252     // java/io/CharArrayReader."<init>":([C)V
  #254 = Utf8               (Ljava/io/Reader;)V
  #255 = NameAndType        #35:#254      // "<init>":(Ljava/io/Reader;)V
  #256 = Methodref          #244.#255     // org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
  #257 = Utf8               parse
  #258 = Utf8               (Lorg/xml/sax/InputSource;)V
  #259 = NameAndType        #257:#258     // parse:(Lorg/xml/sax/InputSource;)V
  #260 = InterfaceMethodref #238.#259     // org/xml/sax/XMLReader.parse:(Lorg/xml/sax/InputSource;)V
  #261 = Utf8               str0
  #262 = Utf8               saxParser
  #263 = Utf8               Ljavax/xml/parsers/SAXParser;
  #264 = Utf8               xmlReader
  #265 = Utf8               Lorg/xml/sax/XMLReader;
  #266 = Utf8               Lcoursier/util/SaxHandler;
  #267 = Utf8               xmlParseDom
  #268 = Utf8               (Ljava/lang/String;)Lscala/util/Either;
  #269 = Utf8               (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/util/Xml$Node;>;
  #270 = Utf8               java/lang/Exception
  #271 = Class              #270          // java/lang/Exception
  #272 = Utf8               scala/package$
  #273 = Class              #272          // scala/package$
  #274 = Utf8               Lscala/package$;
  #275 = NameAndType        #25:#274      // MODULE$:Lscala/package$;
  #276 = Fieldref           #273.#275     // scala/package$.MODULE$:Lscala/package$;
  #277 = Utf8               Right
  #278 = Utf8               ()Lscala/util/Right$;
  #279 = NameAndType        #277:#278     // Right:()Lscala/util/Right$;
  #280 = Methodref          #273.#279     // scala/package$.Right:()Lscala/util/Right$;
  #281 = Utf8               scala/xml/XML$
  #282 = Class              #281          // scala/xml/XML$
  #283 = Utf8               Lscala/xml/XML$;
  #284 = NameAndType        #25:#283      // MODULE$:Lscala/xml/XML$;
  #285 = Fieldref           #282.#284     // scala/xml/XML$.MODULE$:Lscala/xml/XML$;
  #286 = Utf8               loadString
  #287 = Utf8               (Ljava/lang/String;)Lscala/xml/Node;
  #288 = NameAndType        #286:#287     // loadString:(Ljava/lang/String;)Lscala/xml/Node;
  #289 = Methodref          #282.#288     // scala/xml/XML$.loadString:(Ljava/lang/String;)Lscala/xml/Node;
  #290 = Utf8               scala/util/Right$
  #291 = Class              #290          // scala/util/Right$
  #292 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #293 = NameAndType        #169:#292     // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #294 = Methodref          #291.#293     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #295 = Utf8               Left
  #296 = Utf8               ()Lscala/util/Left$;
  #297 = NameAndType        #295:#296     // Left:()Lscala/util/Left$;
  #298 = Methodref          #273.#297     // scala/package$.Left:()Lscala/util/Left$;
  #299 = Utf8               java/lang/StringBuilder
  #300 = Class              #299          // java/lang/StringBuilder
  #301 = Integer            0
  #302 = Utf8               (I)V
  #303 = NameAndType        #35:#302      // "<init>":(I)V
  #304 = Methodref          #300.#303     // java/lang/StringBuilder."<init>":(I)V
  #305 = Utf8               toString
  #306 = NameAndType        #305:#49      // toString:()Ljava/lang/String;
  #307 = Methodref          #271.#306     // java/lang/Exception.toString:()Ljava/lang/String;
  #308 = Utf8               append
  #309 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #310 = NameAndType        #308:#309     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #311 = Methodref          #300.#310     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #312 = Utf8               getMessage
  #313 = NameAndType        #312:#49      // getMessage:()Ljava/lang/String;
  #314 = Methodref          #271.#313     // java/lang/Exception.getMessage:()Ljava/lang/String;
  #315 = Utf8               (Ljava/lang/Object;)Lscala/Option;
  #316 = NameAndType        #169:#315     // apply:(Ljava/lang/Object;)Lscala/Option;
  #317 = Methodref          #56.#316      // scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
  #318 = Utf8               $anonfun$xmlParseDom$1
  #319 = NameAndType        #318:#49      // $anonfun$xmlParseDom$1:()Ljava/lang/String;
  #320 = Methodref          #2.#319       // coursier/core/compatibility/package$.$anonfun$xmlParseDom$1:()Ljava/lang/String;
  #321 = MethodHandle       6:#320        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$1:()Ljava/lang/String;
  #322 = Utf8               ()Lscala/Function0;
  #323 = NameAndType        #169:#322     // apply:()Lscala/Function0;
  #324 = InvokeDynamic      #1:#323       // #1:apply:()Lscala/Function0;
  #325 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #326 = MethodType         #325          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #327 = Utf8               $anonfun$xmlParseDom$2
  #328 = NameAndType        #327:#107     // $anonfun$xmlParseDom$2:(Ljava/lang/String;)Ljava/lang/String;
  #329 = Methodref          #2.#328       // coursier/core/compatibility/package$.$anonfun$xmlParseDom$2:(Ljava/lang/String;)Ljava/lang/String;
  #330 = MethodHandle       6:#329        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$2:(Ljava/lang/String;)Ljava/lang/String;
  #331 = MethodType         #107          //  (Ljava/lang/String;)Ljava/lang/String;
  #332 = Utf8               ()Lscala/Function1;
  #333 = NameAndType        #169:#332     // apply:()Lscala/Function1;
  #334 = InvokeDynamic      #2:#333       // #2:apply:()Lscala/Function1;
  #335 = Utf8               fold
  #336 = Utf8               (Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #337 = NameAndType        #335:#336     // fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #338 = Methodref          #65.#337      // scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
  #339 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #340 = NameAndType        #308:#339     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #341 = Methodref          #300.#340     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
  #342 = Methodref          #300.#306     // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #343 = Utf8               scala/util/Left$
  #344 = Class              #343          // scala/util/Left$
  #345 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #346 = NameAndType        #169:#345     // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #347 = Methodref          #344.#346     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #348 = Utf8               scala/util/Either
  #349 = Class              #348          // scala/util/Either
  #350 = Utf8               $anonfun$xmlParseDom$3
  #351 = Utf8               (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #352 = NameAndType        #350:#351     // $anonfun$xmlParseDom$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #353 = Methodref          #2.#352       // coursier/core/compatibility/package$.$anonfun$xmlParseDom$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #354 = MethodHandle       6:#353        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #355 = MethodType         #351          //  (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #356 = InvokeDynamic      #3:#333       // #3:apply:()Lscala/Function1;
  #357 = Utf8               (Lscala/Function1;)Lscala/util/Either;
  #358 = NameAndType        #150:#357     // map:(Lscala/Function1;)Lscala/util/Either;
  #359 = Methodref          #349.#358     // scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
  #360 = Utf8               e
  #361 = Utf8               Ljava/lang/Exception;
  #362 = Utf8               content
  #363 = Utf8               Lscala/util/Either;
  #364 = Utf8               xmlFromElem
  #365 = Utf8               elem
  #366 = Utf8               coursier$core$compatibility$package$$fromNode$1
  #367 = Utf8               (Lscala/xml/Node;)Lcoursier/util/Xml$Node;
  #368 = NameAndType        #366:#367     // coursier$core$compatibility$package$$fromNode$1:(Lscala/xml/Node;)Lcoursier/util/Xml$Node;
  #369 = Methodref          #2.#368       // coursier/core/compatibility/package$.coursier$core$compatibility$package$$fromNode$1:(Lscala/xml/Node;)Lcoursier/util/Xml$Node;
  #370 = Utf8               Lscala/xml/Elem;
  #371 = Utf8               xmlParse
  #372 = Utf8               $anonfun$xmlParse$1
  #373 = NameAndType        #372:#49      // $anonfun$xmlParse$1:()Ljava/lang/String;
  #374 = Methodref          #2.#373       // coursier/core/compatibility/package$.$anonfun$xmlParse$1:()Ljava/lang/String;
  #375 = MethodHandle       6:#374        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$1:()Ljava/lang/String;
  #376 = InvokeDynamic      #4:#323       // #4:apply:()Lscala/Function0;
  #377 = Utf8               $anonfun$xmlParse$2
  #378 = NameAndType        #377:#107     // $anonfun$xmlParse$2:(Ljava/lang/String;)Ljava/lang/String;
  #379 = Methodref          #2.#378       // coursier/core/compatibility/package$.$anonfun$xmlParse$2:(Ljava/lang/String;)Ljava/lang/String;
  #380 = MethodHandle       6:#379        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$2:(Ljava/lang/String;)Ljava/lang/String;
  #381 = InvokeDynamic      #5:#333       // #5:apply:()Lscala/Function1;
  #382 = Utf8               $anonfun$xmlParse$3
  #383 = NameAndType        #382:#351     // $anonfun$xmlParse$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #384 = Methodref          #2.#383       // coursier/core/compatibility/package$.$anonfun$xmlParse$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #385 = MethodHandle       6:#384        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #386 = InvokeDynamic      #6:#333       // #6:apply:()Lscala/Function1;
  #387 = Utf8               encodeURIComponent
  #388 = Utf8               java/net/URI
  #389 = Class              #388          // java/net/URI
  #390 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
  #391 = NameAndType        #35:#390      // "<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
  #392 = Methodref          #389.#391     // java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
  #393 = Utf8               toASCIIString
  #394 = NameAndType        #393:#49      // toASCIIString:()Ljava/lang/String;
  #395 = Methodref          #389.#394     // java/net/URI.toASCIIString:()Ljava/lang/String;
  #396 = Utf8               regexLookbehind
  #397 = Utf8               <=
  #398 = String             #397          // <=
  #399 = Utf8               coloredOutput
  #400 = Utf8               INSIDE_EMACS
  #401 = String             #400          // INSIDE_EMACS
  #402 = Utf8               java/lang/System
  #403 = Class              #402          // java/lang/System
  #404 = Utf8               getenv
  #405 = NameAndType        #404:#107     // getenv:(Ljava/lang/String;)Ljava/lang/String;
  #406 = Methodref          #403.#405     // java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
  #407 = Utf8               COURSIER_PROGRESS
  #408 = String             #407          // COURSIER_PROGRESS
  #409 = Utf8               $anonfun$coloredOutput$1
  #410 = NameAndType        #409:#107     // $anonfun$coloredOutput$1:(Ljava/lang/String;)Ljava/lang/String;
  #411 = Methodref          #2.#410       // coursier/core/compatibility/package$.$anonfun$coloredOutput$1:(Ljava/lang/String;)Ljava/lang/String;
  #412 = MethodHandle       6:#411        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$coloredOutput$1:(Ljava/lang/String;)Ljava/lang/String;
  #413 = InvokeDynamic      #7:#333       // #7:apply:()Lscala/Function1;
  #414 = Utf8               (Lscala/Function1;)Lscala/Option;
  #415 = NameAndType        #150:#414     // map:(Lscala/Function1;)Lscala/Option;
  #416 = Methodref          #65.#415      // scala/Option.map:(Lscala/Function1;)Lscala/Option;
  #417 = Methodref          #9.#36        // coursier/core/compatibility/package$$anonfun$coloredOutput$2."<init>":()V
  #418 = Utf8               collect
  #419 = Utf8               (Lscala/PartialFunction;)Lscala/Option;
  #420 = NameAndType        #418:#419     // collect:(Lscala/PartialFunction;)Lscala/Option;
  #421 = Methodref          #65.#420      // scala/Option.collect:(Lscala/PartialFunction;)Lscala/Option;
  #422 = MethodType         #67           //  ()Z
  #423 = Utf8               $anonfun$coloredOutput$3
  #424 = NameAndType        #423:#67      // $anonfun$coloredOutput$3:()Z
  #425 = Methodref          #2.#424       // coursier/core/compatibility/package$.$anonfun$coloredOutput$3:()Z
  #426 = MethodHandle       6:#425        // REF_invokeStatic coursier/core/compatibility/package$.$anonfun$coloredOutput$3:()Z
  #427 = Utf8               apply$mcZ$sp
  #428 = Utf8               ()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #429 = NameAndType        #427:#428     // apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #430 = InvokeDynamic      #8:#429       // #8:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
  #431 = Utf8               (Lscala/Function0;)Ljava/lang/Object;
  #432 = NameAndType        #175:#431     // getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #433 = Methodref          #65.#432      // scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
  #434 = Utf8               scala/runtime/BoxesRunTime
  #435 = Class              #434          // scala/runtime/BoxesRunTime
  #436 = Utf8               unboxToBoolean
  #437 = Utf8               (Ljava/lang/Object;)Z
  #438 = NameAndType        #436:#437     // unboxToBoolean:(Ljava/lang/Object;)Z
  #439 = Methodref          #435.#438     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #440 = Utf8               hasConsole
  #441 = Utf8               console
  #442 = Utf8               ()Ljava/io/Console;
  #443 = NameAndType        #441:#442     // console:()Ljava/io/Console;
  #444 = Methodref          #403.#443     // java/lang/System.console:()Ljava/io/Console;
  #445 = Utf8               a$lzycompute$1
  #446 = Utf8               a$lzy$1
  #447 = Utf8               s$1
  #448 = Utf8               initialized
  #449 = NameAndType        #448:#67      // initialized:()Z
  #450 = Methodref          #109.#449     // scala/runtime/LazyRef.initialized:()Z
  #451 = Utf8               value
  #452 = NameAndType        #451:#122     // value:()Ljava/lang/Object;
  #453 = Methodref          #109.#452     // scala/runtime/LazyRef.value:()Ljava/lang/Object;
  #454 = Utf8               [C
  #455 = Class              #454          // "[C"
  #456 = Utf8               initialize
  #457 = NameAndType        #456:#325     // initialize:(Ljava/lang/Object;)Ljava/lang/Object;
  #458 = Methodref          #109.#457     // scala/runtime/LazyRef.initialize:(Ljava/lang/Object;)Ljava/lang/Object;
  #459 = NameAndType        #445:#134     // a$lzycompute$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
  #460 = Methodref          #2.#459       // coursier/core/compatibility/package$.a$lzycompute$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
  #461 = Utf8               name$1
  #462 = Utf8
  #463 = String             #462          //
  #464 = Utf8               x$1
  #465 = Integer            3
  #466 = Utf8                (
  #467 = String             #466          //  (
  #468 = Utf8               )
  #469 = String             #468          // )
  #470 = NameAndType        #364:#351     // xmlFromElem:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #471 = Methodref          #2.#470       // coursier/core/compatibility/package$.xmlFromElem:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  #472 = Utf8               node
  #473 = Utf8               (Lscala/xml/Node;)V
  #474 = NameAndType        #35:#473      // "<init>":(Lscala/xml/Node;)V
  #475 = Methodref          #7.#474       // coursier/core/compatibility/package$$anon$1."<init>":(Lscala/xml/Node;)V
  #476 = Utf8               Lscala/xml/Node;
  #477 = Utf8               x$2
  #478 = Utf8               x$3
  #479 = Utf8               java/util/Locale
  #480 = Class              #479          // java/util/Locale
  #481 = Utf8               ROOT
  #482 = Utf8               Ljava/util/Locale;
  #483 = NameAndType        #481:#482     // ROOT:Ljava/util/Locale;
  #484 = Fieldref           #480.#483     // java/util/Locale.ROOT:Ljava/util/Locale;
  #485 = Utf8               toLowerCase
  #486 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
  #487 = NameAndType        #485:#486     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #488 = Methodref          #71.#487      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
  #489 = Utf8               COURSIER_NO_TERM
  #490 = String             #489          // COURSIER_NO_TERM
  #491 = Methodref          #4.#36        // java/lang/Object."<init>":()V
  #492 = Utf8               $deserializeLambda$
  #493 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #494 = Utf8               scala/runtime/LambdaDeserialize
  #495 = Class              #494          // scala/runtime/LambdaDeserialize
  #496 = Utf8               bootstrap
  #497 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #498 = NameAndType        #496:#497     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #499 = Methodref          #495.#498     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #500 = MethodHandle       6:#499        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #501 = Utf8               lambdaDeserialize
  #502 = NameAndType        #501:#493     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #503 = InvokeDynamic      #9:#502       // #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #504 = Utf8               Code
  #505 = Utf8               LineNumberTable
  #506 = Utf8               LocalVariableTable
  #507 = Utf8               MethodParameters
  #508 = Utf8               StackMapTable
  #509 = Utf8               Signature
  #510 = Utf8               Deprecated
  #511 = Utf8               InnerClasses
  #512 = Utf8               SourceFile
  #513 = Utf8               BootstrapMethods
  #514 = Utf8               ScalaInlineInfo
  #515 = Utf8               Scala
{
  public static final coursier.core.compatibility.package$ MODULE$;
    descriptor: Lcoursier/core/compatibility/package$;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  private static javax.xml.parsers.SAXParserFactory spf;
    descriptor: Ljavax/xml/parsers/SAXParserFactory;
    flags: (0x000a) ACC_PRIVATE, ACC_STATIC

  private static final java.lang.String utf8Bom;
    descriptor: Ljava/lang/String;
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static volatile boolean bitmap$0;
    descriptor: Z
    flags: (0x004a) ACC_PRIVATE, ACC_STATIC, ACC_VOLATILE

  public static {};
    descriptor: ()V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #2                  // class coursier/core/compatibility/package$
         3: dup
         4: invokespecial #37                 // Method "<init>":()V
         7: putstatic     #39                 // Field MODULE$:Lcoursier/core/compatibility/package$;
        10: ldc           #41                 // String ﻿
        12: putstatic     #43                 // Field utf8Bom:Ljava/lang/String;
        15: return
      LineNumberTable:
        line 15: 0
        line 22: 10
        line 15: 15

  public char RichChar(char);
    descriptor: (C)C
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: iload_1
         1: ireturn
      LineNumberTable:
        line 17: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/compatibility/package$;
            0       2     1     c   C
    MethodParameters:
      Name                           Flags
      c                              final

  private java.lang.String utf8Bom();
    descriptor: ()Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #43                 // Field utf8Bom:Ljava/lang/String;
         3: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/compatibility/package$;

  private scala.Option<scala.Tuple2<java.lang.Object, java.lang.Object>> entityIdx(java.lang.String, int);
    descriptor: (Ljava/lang/String;I)Lscala/Option;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=6, locals=8, args_size=3
         0: iload_2
         1: istore_3
         2: getstatic     #59                 // Field scala/Option$.MODULE$:Lscala/Option$;
         5: invokevirtual #63                 // Method scala/Option$.empty:()Lscala/Option;
         8: astore        4
        10: aload         4
        12: invokevirtual #69                 // Method scala/Option.isEmpty:()Z
        15: ifeq          188
        18: iload_3
        19: aload_1
        20: invokevirtual #75                 // Method java/lang/String.length:()I
        23: if_icmpge     188
        26: aload_1
        27: iload_3
        28: invokevirtual #79                 // Method java/lang/String.charAt:(I)C
        31: bipush        38
        33: if_icmpne     181
        36: iload_3
        37: istore        5
        39: iload_3
        40: iconst_1
        41: iadd
        42: istore_3
        43: iconst_1
        44: istore        6
        46: iload         6
        48: ifeq          107
        51: iload_3
        52: aload_1
        53: invokevirtual #75                 // Method java/lang/String.length:()I
        56: if_icmpge     107
        59: aload_1
        60: iload_3
        61: invokevirtual #79                 // Method java/lang/String.charAt:(I)C
        64: istore        7
        66: iload         7
        68: bipush        97
        70: if_icmplt     80
        73: iload         7
        75: bipush        122
        77: if_icmple     100
        80: iload         7
        82: bipush        65
        84: if_icmplt     94
        87: iload         7
        89: bipush        90
        91: if_icmple     100
        94: iconst_0
        95: istore        6
        97: goto          104
       100: iload_3
       101: iconst_1
       102: iadd
       103: istore_3
       104: goto          46
       107: iload         5
       109: iconst_1
       110: iadd
       111: iload_3
       112: if_icmpge     178
       115: iload_3
       116: aload_1
       117: invokevirtual #75                 // Method java/lang/String.length:()I
       120: if_icmpge     178
       123: getstatic     #84                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       126: iload         6
       128: ifne          135
       131: iconst_1
       132: goto          136
       135: iconst_0
       136: invokevirtual #88                 // Method scala/Predef$.assert:(Z)V
       139: aload_1
       140: iload_3
       141: invokevirtual #79                 // Method java/lang/String.charAt:(I)C
       144: bipush        59
       146: if_icmpne     175
       149: iload_3
       150: iconst_1
       151: iadd
       152: istore_3
       153: new           #90                 // class scala/Some
       156: dup
       157: new           #92                 // class scala/Tuple2$mcII$sp
       160: dup
       161: iload         5
       163: iload_3
       164: invokespecial #95                 // Method scala/Tuple2$mcII$sp."<init>":(II)V
       167: invokespecial #98                 // Method scala/Some."<init>":(Ljava/lang/Object;)V
       170: astore        4
       172: goto          175
       175: goto          178
       178: goto          185
       181: iload_3
       182: iconst_1
       183: iadd
       184: istore_3
       185: goto          10
       188: aload         4
       190: areturn
      StackMapTable: number_of_entries = 14
        frame_type = 253 /* append */
          offset_delta = 10
          locals = [ int, class scala/Option ]
        frame_type = 253 /* append */
          offset_delta = 35
          locals = [ int, int ]
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ int ]
        frame_type = 13 /* same */
        frame_type = 5 /* same */
        frame_type = 3 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 91 /* same_locals_1_stack_item */
          stack = [ class scala/Predef$ ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class coursier/core/compatibility/package$, class java/lang/String, int, int, class scala/Option, int, int ]
          stack = [ class scala/Predef$, int ]
        frame_type = 38 /* same */
        frame_type = 2 /* same */
        frame_type = 249 /* chop */
          offset_delta = 2
        frame_type = 3 /* same */
        frame_type = 2 /* same */
      LineNumberTable:
        line 26: 0
        line 27: 2
        line 28: 10
        line 29: 26
        line 30: 36
        line 31: 39
        line 32: 43
        line 33: 46
        line 34: 59
        line 35: 66
        line 36: 94
        line 38: 100
        line 33: 104
        line 40: 107
        line 41: 123
        line 42: 139
        line 43: 149
        line 44: 153
        line 42: 175
        line 40: 178
        line 48: 181
        line 29: 185
        line 51: 188
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           66      38     7     c   C
           39     139     5 start   I
           46     132     6 isAlpha   Z
            2     188     3     i   I
           10     180     4 found   Lscala/Option;
            0     191     0  this   Lcoursier/core/compatibility/package$;
            0     191     1     s   Ljava/lang/String;
            0     191     2 fromIdx   I
    Signature: #52                          // (Ljava/lang/String;I)Lscala/Option<Lscala/Tuple2<Ljava/lang/Object;Ljava/lang/Object;>;>;
    MethodParameters:
      Name                           Flags
      s                              final
      fromIdx                        final

  private int entityIdx$default$2();
    descriptor: ()I
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 24: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/compatibility/package$;

  private java.lang.String substituteEntities(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=5, locals=11, args_size=2
         0: new           #109                // class scala/runtime/LazyRef
         3: dup
         4: invokespecial #110                // Method scala/runtime/LazyRef."<init>":()V
         7: astore_2
         8: new           #112                // class scala/collection/mutable/StringBuilder
        11: dup
        12: invokespecial #113                // Method scala/collection/mutable/StringBuilder."<init>":()V
        15: astore_3
        16: iconst_0
        17: istore        4
        19: iconst_0
        20: istore        5
        22: iload         5
        24: aload_1
        25: invokevirtual #75                 // Method java/lang/String.length:()I
        28: if_icmpge     70
        31: iload         5
        33: aload_0
        34: invokespecial #115                // Method utf8Bom:()Ljava/lang/String;
        37: invokevirtual #75                 // Method java/lang/String.length:()I
        40: if_icmpge     70
        43: aload_1
        44: iload         4
        46: invokevirtual #79                 // Method java/lang/String.charAt:(I)C
        49: aload_0
        50: invokespecial #115                // Method utf8Bom:()Ljava/lang/String;
        53: iload         5
        55: invokevirtual #79                 // Method java/lang/String.charAt:(I)C
        58: if_icmpne     70
        61: iload         5
        63: iconst_1
        64: iadd
        65: istore        5
        67: goto          22
        70: iload         5
        72: aload_0
        73: invokespecial #115                // Method utf8Bom:()Ljava/lang/String;
        76: invokevirtual #75                 // Method java/lang/String.length:()I
        79: if_icmpne     89
        82: iload         5
        84: istore        4
        86: goto          89
        89: getstatic     #59                 // Field scala/Option$.MODULE$:Lscala/Option$;
        92: invokevirtual #63                 // Method scala/Option$.empty:()Lscala/Option;
        95: astore        6
        97: aload_0
        98: aload_1
        99: iload         4
       101: invokespecial #117                // Method entityIdx:(Ljava/lang/String;I)Lscala/Option;
       104: astore        6
       106: aload         6
       108: invokevirtual #120                // Method scala/Option.nonEmpty:()Z
       111: ifeq          206
       114: aload         6
       116: invokevirtual #124                // Method scala/Option.get:()Ljava/lang/Object;
       119: checkcast     #126                // class scala/Tuple2
       122: invokevirtual #129                // Method scala/Tuple2._1$mcI$sp:()I
       125: istore        7
       127: aload         6
       129: invokevirtual #124                // Method scala/Option.get:()Ljava/lang/Object;
       132: checkcast     #126                // class scala/Tuple2
       135: invokevirtual #132                // Method scala/Tuple2._2$mcI$sp:()I
       138: istore        8
       140: aload_3
       141: aload_2
       142: aload_1
       143: invokestatic  #136                // Method a$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
       146: iload         4
       148: iload         7
       150: iload         4
       152: isub
       153: invokevirtual #140                // Method scala/collection/mutable/StringBuilder.appendAll:([CII)Lscala/collection/mutable/StringBuilder;
       156: pop
       157: aload_1
       158: iload         7
       160: iload         8
       162: invokevirtual #144                // Method java/lang/String.substring:(II)Ljava/lang/String;
       165: astore        9
       167: getstatic     #149                // Field coursier/core/compatibility/Entities$.MODULE$:Lcoursier/core/compatibility/Entities$;
       170: invokevirtual #153                // Method coursier/core/compatibility/Entities$.map:()Lscala/collection/immutable/Map;
       173: aload         9
       175: aload         9
       177: invokedynamic #172,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function0;
       182: invokeinterface #178,  3          // InterfaceMethod scala/collection/immutable/Map.getOrElse:(Ljava/lang/Object;Lscala/Function0;)Ljava/lang/Object;
       187: checkcast     #71                 // class java/lang/String
       190: astore        10
       192: aload_3
       193: aload         10
       195: invokevirtual #181                // Method scala/collection/mutable/StringBuilder.appendAll:(Ljava/lang/String;)Lscala/collection/mutable/StringBuilder;
       198: pop
       199: iload         8
       201: istore        4
       203: goto          97
       206: iload         4
       208: iconst_0
       209: if_icmpne     216
       212: aload_1
       213: goto          237
       216: aload_3
       217: aload_2
       218: aload_1
       219: invokestatic  #136                // Method a$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
       222: iload         4
       224: aload_1
       225: invokevirtual #75                 // Method java/lang/String.length:()I
       228: iload         4
       230: isub
       231: invokevirtual #140                // Method scala/collection/mutable/StringBuilder.appendAll:([CII)Lscala/collection/mutable/StringBuilder;
       234: invokevirtual #184                // Method scala/collection/mutable/StringBuilder.result:()Ljava/lang/String;
       237: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 255 /* full_frame */
          offset_delta = 22
          locals = [ class coursier/core/compatibility/package$, class java/lang/String, class scala/runtime/LazyRef, class scala/collection/mutable/StringBuilder, int, int ]
          stack = []
        frame_type = 47 /* same */
        frame_type = 18 /* same */
        frame_type = 252 /* append */
          offset_delta = 7
          locals = [ class scala/Option ]
        frame_type = 251 /* same_frame_extended */
          offset_delta = 108
        frame_type = 9 /* same */
        frame_type = 84 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
      LineNumberTable:
        line 57: 0
        line 56: 8
        line 59: 16
        line 61: 19
        line 62: 22
        line 63: 61
        line 65: 70
        line 66: 82
        line 68: 89
        line 70: 97
        line 71: 106
        line 73: 114
        line 74: 127
        line 76: 140
        line 78: 157
        line 79: 167
        line 80: 192
        line 82: 199
        line 72: 203
        line 85: 206
        line 86: 212
        line 88: 216
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
          127      76     7  from   I
          140      63     8    to   I
          167      36     9  name   Ljava/lang/String;
          192      11    10 replacement   Ljava/lang/String;
            8     229     2 a$lzy   Lscala/runtime/LazyRef;
           16     221     3     b   Lscala/collection/mutable/StringBuilder;
           19     218     4     i   I
           22     215     5     j   I
           97     140     6 found   Lscala/Option;
            0     238     0  this   Lcoursier/core/compatibility/package$;
            0     238     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String xmlPreprocess(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #196                // Method substituteEntities:(Ljava/lang/String;)Ljava/lang/String;
         5: areturn
      LineNumberTable:
        line 92: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lcoursier/core/compatibility/package$;
            0       6     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  private javax.xml.parsers.SAXParserFactory spf$lzycompute();
    descriptor: ()Ljavax/xml/parsers/SAXParserFactory;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #200                // Field bitmap$0:Z
         7: ifne          27
        10: invokestatic  #205                // Method javax/xml/parsers/SAXParserFactory.newInstance:()Ljavax/xml/parsers/SAXParserFactory;
        13: astore_2
        14: aload_2
        15: iconst_0
        16: invokevirtual #208                // Method javax/xml/parsers/SAXParserFactory.setNamespaceAware:(Z)V
        19: aload_2
        20: putstatic     #210                // Field spf:Ljavax/xml/parsers/SAXParserFactory;
        23: iconst_1
        24: putstatic     #200                // Field bitmap$0:Z
        27: aload_1
        28: monitorexit
        29: goto          35
        32: aload_1
        33: monitorexit
        34: athrow
        35: getstatic     #210                // Field spf:Ljavax/xml/parsers/SAXParserFactory;
        38: areturn
      Exception table:
         from    to  target type
             4    27    32   any
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class coursier/core/compatibility/package$ ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 2 /* same */
      LineNumberTable:
        line 103: 0
        line 104: 10
        line 105: 14
        line 106: 19
        line 103: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           14       6     2  spf0   Ljavax/xml/parsers/SAXParserFactory;
            0      39     0  this   Lcoursier/core/compatibility/package$;

  private javax.xml.parsers.SAXParserFactory spf();
    descriptor: ()Ljavax/xml/parsers/SAXParserFactory;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: getstatic     #200                // Field bitmap$0:Z
         3: ifne          13
         6: aload_0
         7: invokespecial #215                // Method spf$lzycompute:()Ljavax/xml/parsers/SAXParserFactory;
        10: goto          16
        13: getstatic     #210                // Field spf:Ljavax/xml/parsers/SAXParserFactory;
        16: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class javax/xml/parsers/SAXParserFactory ]
      LineNumberTable:
        line 103: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      17     0  this   Lcoursier/core/compatibility/package$;

  public coursier.util.SaxHandler xmlParseSax(java.lang.String, coursier.util.SaxHandler);
    descriptor: (Ljava/lang/String;Lcoursier/util/SaxHandler;)Lcoursier/util/SaxHandler;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=6, args_size=3
         0: aload_0
         1: aload_1
         2: invokevirtual #221                // Method xmlPreprocess:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_3
         6: aload_0
         7: invokespecial #223                // Method spf:()Ljavax/xml/parsers/SAXParserFactory;
        10: invokevirtual #227                // Method javax/xml/parsers/SAXParserFactory.newSAXParser:()Ljavax/xml/parsers/SAXParser;
        13: astore        4
        15: aload         4
        17: invokevirtual #233                // Method javax/xml/parsers/SAXParser.getXMLReader:()Lorg/xml/sax/XMLReader;
        20: astore        5
        22: aload         5
        24: new           #11                 // class coursier/core/compatibility/package$XmlHandler
        27: dup
        28: aload_2
        29: invokespecial #236                // Method coursier/core/compatibility/package$XmlHandler."<init>":(Lcoursier/util/SaxHandler;)V
        32: invokeinterface #242,  2          // InterfaceMethod org/xml/sax/XMLReader.setContentHandler:(Lorg/xml/sax/ContentHandler;)V
        37: aload         5
        39: new           #244                // class org/xml/sax/InputSource
        42: dup
        43: new           #246                // class java/io/CharArrayReader
        46: dup
        47: aload_3
        48: invokevirtual #250                // Method java/lang/String.toCharArray:()[C
        51: invokespecial #253                // Method java/io/CharArrayReader."<init>":([C)V
        54: invokespecial #256                // Method org/xml/sax/InputSource."<init>":(Ljava/io/Reader;)V
        57: invokeinterface #260,  2          // InterfaceMethod org/xml/sax/XMLReader.parse:(Lorg/xml/sax/InputSource;)V
        62: aload_2
        63: areturn
      LineNumberTable:
        line 111: 0
        line 113: 6
        line 114: 15
        line 115: 22
        line 116: 37
        line 117: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            6      57     3  str0   Ljava/lang/String;
           15      48     4 saxParser   Ljavax/xml/parsers/SAXParser;
           22      41     5 xmlReader   Lorg/xml/sax/XMLReader;
            0      64     0  this   Lcoursier/core/compatibility/package$;
            0      64     1   str   Ljava/lang/String;
            0      64     2 handler   Lcoursier/util/SaxHandler;
    MethodParameters:
      Name                           Flags
      str                            final
      handler                        final

  public scala.util.Either<java.lang.String, coursier.util.Xml$Node> xmlParseDom(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #221                // Method xmlPreprocess:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_2
         6: getstatic     #276                // Field scala/package$.MODULE$:Lscala/package$;
         9: invokevirtual #280                // Method scala/package$.Right:()Lscala/util/Right$;
        12: getstatic     #285                // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
        15: aload_2
        16: invokevirtual #289                // Method scala/xml/XML$.loadString:(Ljava/lang/String;)Lscala/xml/Node;
        19: invokevirtual #294                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        22: goto          87
        25: astore        4
        27: getstatic     #276                // Field scala/package$.MODULE$:Lscala/package$;
        30: invokevirtual #298                // Method scala/package$.Left:()Lscala/util/Left$;
        33: new           #300                // class java/lang/StringBuilder
        36: dup
        37: ldc_w         #301                // int 0
        40: invokespecial #304                // Method java/lang/StringBuilder."<init>":(I)V
        43: aload         4
        45: invokevirtual #307                // Method java/lang/Exception.toString:()Ljava/lang/String;
        48: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        51: getstatic     #59                 // Field scala/Option$.MODULE$:Lscala/Option$;
        54: aload         4
        56: invokevirtual #314                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
        59: invokevirtual #317                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        62: invokedynamic #324,  0            // InvokeDynamic #1:apply:()Lscala/Function0;
        67: invokedynamic #334,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        72: invokevirtual #338                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        75: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        78: invokevirtual #342                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        81: invokevirtual #347                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        84: goto          87
        87: astore_3
        88: aload_3
        89: invokedynamic #356,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
        94: invokevirtual #359                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        97: areturn
      Exception table:
         from    to  target type
             6    22    25   Class java/lang/Exception
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class coursier/core/compatibility/package$, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/Exception ]
        frame_type = 125 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 122: 0
        line 125: 6
        line 126: 27
        line 128: 88
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      59     4     e   Ljava/lang/Exception;
            6      91     2 content   Ljava/lang/String;
           88       9     3 parse   Lscala/util/Either;
            0      98     0  this   Lcoursier/core/compatibility/package$;
            0      98     1     s   Ljava/lang/String;
    Signature: #269                         // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/util/Xml$Node;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public coursier.util.Xml$Node xmlFromElem(scala.xml.Elem);
    descriptor: (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=2, args_size=2
         0: aload_1
         1: invokestatic  #369                // Method coursier$core$compatibility$package$$fromNode$1:(Lscala/xml/Node;)Lcoursier/util/Xml$Node;
         4: areturn
      LineNumberTable:
        line 163: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/compatibility/package$;
            0       5     1  elem   Lscala/xml/Elem;
    MethodParameters:
      Name                           Flags
      elem                           final

  public scala.util.Either<java.lang.String, coursier.util.Xml$Node> xmlParse(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/util/Either;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=2
         0: aload_0
         1: aload_1
         2: invokespecial #196                // Method substituteEntities:(Ljava/lang/String;)Ljava/lang/String;
         5: astore_2
         6: getstatic     #276                // Field scala/package$.MODULE$:Lscala/package$;
         9: invokevirtual #280                // Method scala/package$.Right:()Lscala/util/Right$;
        12: getstatic     #285                // Field scala/xml/XML$.MODULE$:Lscala/xml/XML$;
        15: aload_2
        16: invokevirtual #289                // Method scala/xml/XML$.loadString:(Ljava/lang/String;)Lscala/xml/Node;
        19: invokevirtual #294                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        22: goto          87
        25: astore        4
        27: getstatic     #276                // Field scala/package$.MODULE$:Lscala/package$;
        30: invokevirtual #298                // Method scala/package$.Left:()Lscala/util/Left$;
        33: new           #300                // class java/lang/StringBuilder
        36: dup
        37: ldc_w         #301                // int 0
        40: invokespecial #304                // Method java/lang/StringBuilder."<init>":(I)V
        43: aload         4
        45: invokevirtual #307                // Method java/lang/Exception.toString:()Ljava/lang/String;
        48: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        51: getstatic     #59                 // Field scala/Option$.MODULE$:Lscala/Option$;
        54: aload         4
        56: invokevirtual #314                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
        59: invokevirtual #317                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        62: invokedynamic #376,  0            // InvokeDynamic #4:apply:()Lscala/Function0;
        67: invokedynamic #381,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
        72: invokevirtual #338                // Method scala/Option.fold:(Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
        75: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
        78: invokevirtual #342                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        81: invokevirtual #347                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        84: goto          87
        87: astore_3
        88: aload_3
        89: invokedynamic #386,  0            // InvokeDynamic #6:apply:()Lscala/Function1;
        94: invokevirtual #359                // Method scala/util/Either.map:(Lscala/Function1;)Lscala/util/Either;
        97: areturn
      Exception table:
         from    to  target type
             6    22    25   Class java/lang/Exception
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 25
          locals = [ class coursier/core/compatibility/package$, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/Exception ]
        frame_type = 125 /* same_locals_1_stack_item */
          stack = [ class scala/util/Either ]
      LineNumberTable:
        line 168: 0
        line 171: 6
        line 172: 27
        line 174: 88
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           25      59     4     e   Ljava/lang/Exception;
            6      91     2 content   Ljava/lang/String;
           88       9     3 parse   Lscala/util/Either;
            0      98     0  this   Lcoursier/core/compatibility/package$;
            0      98     1     s   Ljava/lang/String;
    Signature: #269                         // (Ljava/lang/String;)Lscala/util/Either<Ljava/lang/String;Lcoursier/util/Xml$Node;>;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String encodeURIComponent(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=9, locals=2, args_size=2
         0: new           #389                // class java/net/URI
         3: dup
         4: aconst_null
         5: aconst_null
         6: aconst_null
         7: iconst_m1
         8: aload_1
         9: aconst_null
        10: aconst_null
        11: invokespecial #392                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
        14: invokevirtual #395                // Method java/net/URI.toASCIIString:()Ljava/lang/String;
        17: areturn
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lcoursier/core/compatibility/package$;
            0      18     1     s   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      s                              final

  public java.lang.String regexLookbehind();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: ldc_w         #398                // String <=
         3: areturn
      LineNumberTable:
        line 180: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/compatibility/package$;

  public boolean coloredOutput();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: ldc_w         #401                // String INSIDE_EMACS
         3: invokestatic  #406                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         6: ifnonnull     57
         9: getstatic     #59                 // Field scala/Option$.MODULE$:Lscala/Option$;
        12: ldc_w         #408                // String COURSIER_PROGRESS
        15: invokestatic  #406                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
        18: invokevirtual #317                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
        21: invokedynamic #413,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
        26: invokevirtual #416                // Method scala/Option.map:(Lscala/Function1;)Lscala/Option;
        29: new           #9                  // class coursier/core/compatibility/package$$anonfun$coloredOutput$2
        32: dup
        33: invokespecial #417                // Method coursier/core/compatibility/package$$anonfun$coloredOutput$2."<init>":()V
        36: invokevirtual #421                // Method scala/Option.collect:(Lscala/PartialFunction;)Lscala/Option;
        39: invokedynamic #430,  0            // InvokeDynamic #8:apply$mcZ$sp:()Lscala/runtime/java8/JFunction0$mcZ$sp;
        44: invokevirtual #433                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
        47: invokestatic  #439                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
        50: ifeq          57
        53: iconst_1
        54: goto          58
        57: iconst_0
        58: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 57 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 184: 0
        line 185: 9
        line 186: 21
        line 187: 29
        line 192: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      59     0  this   Lcoursier/core/compatibility/package$;

  public boolean hasConsole();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: invokestatic  #444                // Method java/lang/System.console:()Ljava/io/Console;
         3: ifnull        10
         6: iconst_1
         7: goto          11
        10: iconst_0
        11: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 10 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 197: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lcoursier/core/compatibility/package$;
    Deprecated: true

  private static final char[] a$lzycompute$1(scala.runtime.LazyRef, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/String;)[C
    flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=4, args_size=2
         0: aload_0
         1: dup
         2: astore_2
         3: monitorenter
         4: aload_0
         5: invokevirtual #450                // Method scala/runtime/LazyRef.initialized:()Z
         8: ifeq          21
        11: aload_0
        12: invokevirtual #453                // Method scala/runtime/LazyRef.value:()Ljava/lang/Object;
        15: checkcast     #455                // class "[C"
        18: goto          32
        21: aload_0
        22: aload_1
        23: invokevirtual #250                // Method java/lang/String.toCharArray:()[C
        26: invokevirtual #458                // Method scala/runtime/LazyRef.initialize:(Ljava/lang/Object;)Ljava/lang/Object;
        29: checkcast     #455                // class "[C"
        32: astore_3
        33: aload_2
        34: monitorexit
        35: aload_3
        36: goto          42
        39: aload_2
        40: monitorexit
        41: athrow
        42: areturn
      Exception table:
         from    to  target type
             4    33    39   any
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ class scala/runtime/LazyRef ]
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class "[C" ]
        frame_type = 70 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 255 /* full_frame */
          offset_delta = 2
          locals = [ class scala/runtime/LazyRef, class java/lang/String, class scala/runtime/LazyRef, class "[C" ]
          stack = [ class "[C" ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0 a$lzy$1   Lscala/runtime/LazyRef;
            0      43     1   s$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      a$lzy$1                        final
      s$1                            final

  private static final char[] a$1(scala.runtime.LazyRef, java.lang.String);
    descriptor: (Lscala/runtime/LazyRef;Ljava/lang/String;)[C
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokevirtual #450                // Method scala/runtime/LazyRef.initialized:()Z
         4: ifeq          17
         7: aload_0
         8: invokevirtual #453                // Method scala/runtime/LazyRef.value:()Ljava/lang/Object;
        11: checkcast     #455                // class "[C"
        14: goto          22
        17: aload_0
        18: aload_1
        19: invokestatic  #460                // Method a$lzycompute$1:(Lscala/runtime/LazyRef;Ljava/lang/String;)[C
        22: areturn
      StackMapTable: number_of_entries = 2
        frame_type = 17 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class "[C" ]
      LineNumberTable:
        line 57: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0 a$lzy$1   Lscala/runtime/LazyRef;
            0      23     1   s$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      a$lzy$1                        final
      s$1                            final

  public static final java.lang.String $anonfun$substituteEntities$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: areturn
      LineNumberTable:
        line 79: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0 name$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      name$1                         final

  public static final java.lang.String $anonfun$xmlParseDom$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #463                // String
         3: areturn
      LineNumberTable:
        line 126: 0

  public static final java.lang.String $anonfun$xmlParseDom$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #300                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #465                // int 3
         7: invokespecial #304                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #467                // String  (
        13: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #469                // String )
        23: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #342                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 126: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0   x$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static final coursier.util.Xml$Node $anonfun$xmlParseDom$3(scala.xml.Elem);
    descriptor: (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #39                 // Field MODULE$:Lcoursier/core/compatibility/package$;
         3: aload_0
         4: invokevirtual #471                // Method xmlFromElem:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
         7: areturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  elem   Lscala/xml/Elem;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static final coursier.util.Xml$Node coursier$core$compatibility$package$$fromNode$1(scala.xml.Node);
    descriptor: (Lscala/xml/Node;)Lcoursier/util/Xml$Node;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    Code:
      stack=3, locals=1, args_size=1
         0: new           #7                  // class coursier/core/compatibility/package$$anon$1
         3: dup
         4: aload_0
         5: invokespecial #475                // Method coursier/core/compatibility/package$$anon$1."<init>":(Lscala/xml/Node;)V
         8: areturn
      LineNumberTable:
        line 134: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  node   Lscala/xml/Node;
    MethodParameters:
      Name                           Flags
      node                           final

  public static final java.lang.String $anonfun$xmlParse$1();
    descriptor: ()Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #463                // String
         3: areturn
      LineNumberTable:
        line 172: 0

  public static final java.lang.String $anonfun$xmlParse$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=3, locals=1, args_size=1
         0: new           #300                // class java/lang/StringBuilder
         3: dup
         4: ldc_w         #465                // int 3
         7: invokespecial #304                // Method java/lang/StringBuilder."<init>":(I)V
        10: ldc_w         #467                // String  (
        13: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        16: aload_0
        17: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        20: ldc_w         #469                // String )
        23: invokevirtual #311                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        26: invokevirtual #342                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        29: areturn
      LineNumberTable:
        line 172: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0   x$2   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static final coursier.util.Xml$Node $anonfun$xmlParse$3(scala.xml.Elem);
    descriptor: (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #39                 // Field MODULE$:Lcoursier/core/compatibility/package$;
         3: aload_0
         4: invokevirtual #471                // Method xmlFromElem:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
         7: areturn
      LineNumberTable:
        line 174: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  elem   Lscala/xml/Elem;
    MethodParameters:
      Name                           Flags
      elem                           final

  public static final java.lang.String $anonfun$coloredOutput$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getstatic     #484                // Field java/util/Locale.ROOT:Ljava/util/Locale;
         4: invokevirtual #488                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 186: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$3   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      x$3                            final

  public static final boolean $anonfun$coloredOutput$3();
    descriptor: ()Z
    flags: (0x1019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: ldc_w         #490                // String COURSIER_NO_TERM
         3: invokestatic  #406                // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
         6: ifnonnull     13
         9: iconst_1
        10: goto          14
        13: iconst_0
        14: ireturn
      StackMapTable: number_of_entries = 2
        frame_type = 13 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
      LineNumberTable:
        line 192: 0

  private coursier.core.compatibility.package$();
    descriptor: ()V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #491                // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 199: 0
        line 15: 4
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/compatibility/package$;

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #503,  0            // InvokeDynamic #9:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public final #7;                        // class coursier/core/compatibility/package$$anon$1
  public final #9;                        // class coursier/core/compatibility/package$$anonfun$coloredOutput$2
  public static final #14= #11 of #13;    // XmlHandler=class coursier/core/compatibility/package$XmlHandler of class coursier/core/compatibility/package
  public static #19= #16 of #18;          // Node=class coursier/util/Xml$Node of class coursier/util/Xml
  public static final #24= #21 of #23;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
SourceFile: "package.scala"
BootstrapMethods:
  0: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #154 ()Ljava/lang/Object;
      #158 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$substituteEntities$1:(Ljava/lang/String;)Ljava/lang/String;
      #159 ()Ljava/lang/String;
      #160 5
      #161 1
      #159 ()Ljava/lang/String;
  1: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #154 ()Ljava/lang/Object;
      #321 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$1:()Ljava/lang/String;
      #159 ()Ljava/lang/String;
      #160 5
      #161 1
      #159 ()Ljava/lang/String;
  2: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #326 (Ljava/lang/Object;)Ljava/lang/Object;
      #330 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$2:(Ljava/lang/String;)Ljava/lang/String;
      #331 (Ljava/lang/String;)Ljava/lang/String;
      #160 5
      #161 1
      #331 (Ljava/lang/String;)Ljava/lang/String;
  3: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #326 (Ljava/lang/Object;)Ljava/lang/Object;
      #354 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
      #355 (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
      #160 5
      #161 1
      #355 (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  4: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #154 ()Ljava/lang/Object;
      #375 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$1:()Ljava/lang/String;
      #159 ()Ljava/lang/String;
      #160 5
      #161 1
      #159 ()Ljava/lang/String;
  5: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #326 (Ljava/lang/Object;)Ljava/lang/Object;
      #380 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$2:(Ljava/lang/String;)Ljava/lang/String;
      #331 (Ljava/lang/String;)Ljava/lang/String;
      #160 5
      #161 1
      #331 (Ljava/lang/String;)Ljava/lang/String;
  6: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #326 (Ljava/lang/Object;)Ljava/lang/Object;
      #385 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
      #355 (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
      #160 5
      #161 1
      #355 (Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  7: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #326 (Ljava/lang/Object;)Ljava/lang/Object;
      #412 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$coloredOutput$1:(Ljava/lang/String;)Ljava/lang/String;
      #331 (Ljava/lang/String;)Ljava/lang/String;
      #160 5
      #161 1
      #331 (Ljava/lang/String;)Ljava/lang/String;
  8: #168 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #422 ()Z
      #426 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$coloredOutput$3:()Z
      #422 ()Z
      #161 1
  9: #500 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #412 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$coloredOutput$1:(Ljava/lang/String;)Ljava/lang/String;
      #426 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$coloredOutput$3:()Z
      #158 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$substituteEntities$1:(Ljava/lang/String;)Ljava/lang/String;
      #375 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$1:()Ljava/lang/String;
      #380 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$2:(Ljava/lang/String;)Ljava/lang/String;
      #385 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParse$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
      #321 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$1:()Ljava/lang/String;
      #330 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$2:(Ljava/lang/String;)Ljava/lang/String;
      #354 REF_invokeStatic coursier/core/compatibility/package$.$anonfun$xmlParseDom$3:(Lscala/xml/Elem;)Lcoursier/util/Xml$Node;
  ScalaInlineInfo: length = 0x95 (unknown attribute)
   01 01 00 1D 01 99 00 6B 01 01 A7 00 43 01 00 9B
   00 6B 01 01 74 00 31 01 01 79 00 6B 01 01 7E 01
   5D 01 01 3E 00 31 01 01 47 00 6B 01 01 5C 01 5D
   01 00 23 00 22 01 00 2C 00 2D 01 00 85 00 86 01
   01 BD 00 86 01 01 8F 00 43 01 01 6E 01 6F 01 01
   83 00 6B 01 00 32 00 33 01 00 69 00 49 01 01 B8
   00 43 01 01 8C 00 31 01 00 1B 00 C6 01 00 C5 00
   C6 01 00 6A 00 6B 01 00 1D 00 31 01 01 6C 01 5D
   01 01 73 01 0C 01 01 0B 01 0C 01 00 D8 00 D9 01
   00 C2 00 6B 01
  Scala: length = 0x0 (unknown attribute)

