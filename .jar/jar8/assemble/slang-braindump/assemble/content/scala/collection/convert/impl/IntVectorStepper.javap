Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/scala/collection/convert/impl/IntVectorStepper.class
  Last modified May 29, 2022; size 5916 bytes
  SHA-256 checksum 21189bdca92a244b5d40fa73532c351c43b543f27c12fba3a4c73f770201f7d3
  Compiled from "VectorStepper.scala"
public class scala.collection.convert.impl.IntVectorStepper extends scala.collection.convert.impl.VectorStepperBase<scala.collection.IntStepper, scala.collection.convert.impl.IntVectorStepper> implements scala.collection.IntStepper
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #2                          // scala/collection/convert/impl/IntVectorStepper
  super_class: #5                         // scala/collection/convert/impl/VectorStepperBase
  interfaces: 1, fields: 0, methods: 24, attributes: 6
Constant pool:
    #1 = Utf8               scala/collection/convert/impl/IntVectorStepper
    #2 = Class              #1            // scala/collection/convert/impl/IntVectorStepper
    #3 = Utf8               Lscala/collection/convert/impl/VectorStepperBase<Lscala/collection/IntStepper;Lscala/collection/convert/impl/IntVectorStepper;>;Lscala/collection/IntStepper;
    #4 = Utf8               scala/collection/convert/impl/VectorStepperBase
    #5 = Class              #4            // scala/collection/convert/impl/VectorStepperBase
    #6 = Utf8               scala/collection/IntStepper
    #7 = Class              #6            // scala/collection/IntStepper
    #8 = Utf8               VectorStepper.scala
    #9 = Utf8               Lscala/reflect/ScalaSignature;
   #10 = Utf8               bytes
   #11 = Utf8               \u0006\u0005i2Q\u0001C\u0005\u0001\u001bEA\u0001b\u0007\u0001\u0003\u0002\u0003\u0006I!\b\u0005\tC\u0001\u0011\t\u0011)A\u0005;!I!\u0005\u0001B\u0001B\u0003%Qd\t\u0005\nK\u0001\u0011\t\u0011)A\u0005M1BQA\f\u0001\u0005\u0002=BQ\u0001\u000e\u0001\u0005\u0002UBQA\u000e\u0001\u0005\u0002]\u0012\u0001#\u00138u-\u0016\u001cGo\u001c:Ti\u0016\u0004\b/\u001a:\u000b\u0005)Y\u0011\u0001B5na2T!\u0001D\u0007\u0002\u000f\r|gN^3si*\u0011abD\u0001\u000bG>dG.Z2uS>t\'\"\u0001\t\u0002\u000bM\u001c\u0017\r\\1\u0014\u0007\u0001\u0011b\u0003\u0005\u0003\u0014)YQR\"A\u0005\n\u0005UI!!\u0005,fGR|\'o\u0015;faB,\'OQ1tKB\u0011q\u0003G\u0007\u0002\u001b%\u0011\u0011$\u0004\u0002\u000b\u0013:$8\u000b^3qa\u0016\u0014\bCA\n\u0001\u0003\ry\u0016\u000eM\u0002\u0001!\tqr$D\u0001\u0010\u0013\t\u0001sBA\u0002J]R\f1aX5O\u0003%yF-[:qY\u0006Lh*\u0003\u0002%)\u0005AA-[:qY\u0006Lh*\u0001\u0004`iJ,hn\u001b\t\u0004=\u001dJ\u0013B\u0001\u0015\u0010\u0005\u0015\t%O]1z!\tq\"&\u0003\u0002,\u001f\t1\u0011I\\=SK\u001aL!!\f\u000b\u0002\u000bQ\u0014XO\\6\u0002\rqJg.\u001b;?)\u0015Q\u0002\'\r\u001a4\u0011\u0015YR\u00011\u0001\u001e\u0011\u0015\tS\u00011\u0001\u001e\u0011\u0015\u0011S\u00011\u0001\u001e\u0011\u0015)S\u00011\u0001\'\u0003!qW\r\u001f;Ti\u0016\u0004H#A\u000f\u0002\u0013M,W.[2m_:,GC\u0001\u000e9\u0011\u0015It\u00011\u0001\u001e\u0003\u0011A\u0017\r\u001c4
   #12 = Utf8               java/util/PrimitiveIterator$OfInt
   #13 = Class              #12           // java/util/PrimitiveIterator$OfInt
   #14 = Utf8               java/util/PrimitiveIterator
   #15 = Class              #14           // java/util/PrimitiveIterator
   #16 = Utf8               OfInt
   #17 = Utf8               java/util/Spliterator$OfInt
   #18 = Class              #17           // java/util/Spliterator$OfInt
   #19 = Utf8               java/util/Spliterator
   #20 = Class              #19           // java/util/Spliterator
   #21 = Utf8               spliterator
   #22 = Utf8               ()Ljava/util/Spliterator$OfInt;
   #23 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfInt;
   #24 = Utf8               spliterator$
   #25 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #26 = NameAndType        #24:#25       // spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #27 = InterfaceMethodref #7.#26        // scala/collection/IntStepper.spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
   #28 = Utf8               this
   #29 = Utf8               Lscala/collection/convert/impl/IntVectorStepper;
   #30 = Utf8               javaIterator
   #31 = Utf8               ()Ljava/util/PrimitiveIterator$OfInt;
   #32 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfInt;
   #33 = Utf8               javaIterator$
   #34 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #35 = NameAndType        #33:#34       // javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #36 = InterfaceMethodref #7.#35        // scala/collection/IntStepper.javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
   #37 = Utf8               spliterator$mcI$sp
   #38 = Utf8               ()Ljava/util/Spliterator;
   #39 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;
   #40 = Utf8               spliterator$mcI$sp$
   #41 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #42 = NameAndType        #40:#41       // spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #43 = InterfaceMethodref #7.#42        // scala/collection/IntStepper.spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
   #44 = Utf8               javaIterator$mcI$sp
   #45 = Utf8               ()Ljava/util/Iterator;
   #46 = Utf8               <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;
   #47 = Utf8               javaIterator$mcI$sp$
   #48 = Utf8               (Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #49 = NameAndType        #47:#48       // javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #50 = InterfaceMethodref #7.#49        // scala/collection/IntStepper.javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
   #51 = Utf8               nextStep$mcD$sp
   #52 = Utf8               ()D
   #53 = Utf8               scala/collection/Stepper
   #54 = Class              #53           // scala/collection/Stepper
   #55 = Utf8               nextStep$mcD$sp$
   #56 = Utf8               (Lscala/collection/Stepper;)D
   #57 = NameAndType        #55:#56       // nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #58 = InterfaceMethodref #54.#57       // scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
   #59 = Utf8               nextStep$mcJ$sp
   #60 = Utf8               ()J
   #61 = Utf8               nextStep$mcJ$sp$
   #62 = Utf8               (Lscala/collection/Stepper;)J
   #63 = NameAndType        #61:#62       // nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #64 = InterfaceMethodref #54.#63       // scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
   #65 = Utf8               trySplit$mcD$sp
   #66 = Utf8               ()Lscala/collection/Stepper;
   #67 = Utf8               ()Lscala/collection/Stepper<Ljava/lang/Object;>;
   #68 = Utf8               trySplit$mcD$sp$
   #69 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #70 = NameAndType        #68:#69       // trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #71 = InterfaceMethodref #54.#70       // scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #72 = Utf8               trySplit$mcI$sp
   #73 = Utf8               trySplit$mcI$sp$
   #74 = NameAndType        #73:#69       // trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #75 = InterfaceMethodref #54.#74       // scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #76 = Utf8               trySplit$mcJ$sp
   #77 = Utf8               trySplit$mcJ$sp$
   #78 = NameAndType        #77:#69       // trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #79 = InterfaceMethodref #54.#78       // scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
   #80 = Utf8               spliterator$mcD$sp
   #81 = Utf8               spliterator$mcD$sp$
   #82 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #83 = NameAndType        #81:#82       // spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #84 = InterfaceMethodref #54.#83       // scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #85 = Utf8               spliterator$mcJ$sp
   #86 = Utf8               spliterator$mcJ$sp$
   #87 = NameAndType        #86:#82       // spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #88 = InterfaceMethodref #54.#87       // scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
   #89 = Utf8               javaIterator$mcD$sp
   #90 = Utf8               javaIterator$mcD$sp$
   #91 = Utf8               (Lscala/collection/Stepper;)Ljava/util/Iterator;
   #92 = NameAndType        #90:#91       // javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #93 = InterfaceMethodref #54.#92       // scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #94 = Utf8               javaIterator$mcJ$sp
   #95 = Utf8               javaIterator$mcJ$sp$
   #96 = NameAndType        #95:#91       // javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #97 = InterfaceMethodref #54.#96       // scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
   #98 = Utf8               iterator
   #99 = Utf8               ()Lscala/collection/Iterator;
  #100 = Utf8               ()Lscala/collection/Iterator<Ljava/lang/Object;>;
  #101 = Utf8               iterator$
  #102 = Utf8               (Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #103 = NameAndType        #101:#102     // iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #104 = InterfaceMethodref #54.#103      // scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
  #105 = Utf8               nextStep
  #106 = Utf8               ()I
  #107 = Utf8               nextStep$mcI$sp
  #108 = NameAndType        #107:#106     // nextStep$mcI$sp:()I
  #109 = Methodref          #2.#108       // scala/collection/convert/impl/IntVectorStepper.nextStep$mcI$sp:()I
  #110 = Utf8               semiclone
  #111 = Utf8               (I)Lscala/collection/convert/impl/IntVectorStepper;
  #112 = Utf8               half
  #113 = Utf8               i0
  #114 = NameAndType        #113:#106     // i0:()I
  #115 = Methodref          #2.#114       // scala/collection/convert/impl/IntVectorStepper.i0:()I
  #116 = Utf8               displayN
  #117 = NameAndType        #116:#106     // displayN:()I
  #118 = Methodref          #2.#117       // scala/collection/convert/impl/IntVectorStepper.displayN:()I
  #119 = Utf8               trunk
  #120 = Utf8               ()[Ljava/lang/Object;
  #121 = NameAndType        #119:#120     // trunk:()[Ljava/lang/Object;
  #122 = Methodref          #2.#121       // scala/collection/convert/impl/IntVectorStepper.trunk:()[Ljava/lang/Object;
  #123 = Utf8               <init>
  #124 = Utf8               (III[Ljava/lang/Object;)V
  #125 = NameAndType        #123:#124     // "<init>":(III[Ljava/lang/Object;)V
  #126 = Methodref          #2.#125       // scala/collection/convert/impl/IntVectorStepper."<init>":(III[Ljava/lang/Object;)V
  #127 = Utf8               index_$eq
  #128 = Utf8               (I)V
  #129 = NameAndType        #127:#128     // index_$eq:(I)V
  #130 = Methodref          #2.#129       // scala/collection/convert/impl/IntVectorStepper.index_$eq:(I)V
  #131 = Utf8               index1_$eq
  #132 = NameAndType        #131:#128     // index1_$eq:(I)V
  #133 = Methodref          #2.#132       // scala/collection/convert/impl/IntVectorStepper.index1_$eq:(I)V
  #134 = Utf8               i0_$eq
  #135 = NameAndType        #134:#128     // i0_$eq:(I)V
  #136 = Methodref          #2.#135       // scala/collection/convert/impl/IntVectorStepper.i0_$eq:(I)V
  #137 = Utf8               ans
  #138 = Utf8               I
  #139 = Utf8               hasStep
  #140 = Utf8               ()Z
  #141 = NameAndType        #139:#140     // hasStep:()Z
  #142 = Methodref          #2.#141       // scala/collection/convert/impl/IntVectorStepper.hasStep:()Z
  #143 = Utf8               index
  #144 = NameAndType        #143:#106     // index:()I
  #145 = Methodref          #2.#144       // scala/collection/convert/impl/IntVectorStepper.index:()I
  #146 = Utf8               advanceData
  #147 = NameAndType        #146:#128     // advanceData:(I)V
  #148 = Methodref          #2.#147       // scala/collection/convert/impl/IntVectorStepper.advanceData:(I)V
  #149 = Utf8               leaves
  #150 = NameAndType        #149:#120     // leaves:()[Ljava/lang/Object;
  #151 = Methodref          #2.#150       // scala/collection/convert/impl/IntVectorStepper.leaves:()[Ljava/lang/Object;
  #152 = Utf8               scala/runtime/BoxesRunTime
  #153 = Class              #152          // scala/runtime/BoxesRunTime
  #154 = Utf8               unboxToInt
  #155 = Utf8               (Ljava/lang/Object;)I
  #156 = NameAndType        #154:#155     // unboxToInt:(Ljava/lang/Object;)I
  #157 = Methodref          #153.#156     // scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
  #158 = Utf8               scala/collection/Stepper$
  #159 = Class              #158          // scala/collection/Stepper$
  #160 = Utf8               MODULE$
  #161 = Utf8               Lscala/collection/Stepper$;
  #162 = NameAndType        #160:#161     // MODULE$:Lscala/collection/Stepper$;
  #163 = Fieldref           #159.#162     // scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
  #164 = Utf8               java/util/NoSuchElementException
  #165 = Class              #164          // java/util/NoSuchElementException
  #166 = Utf8               Empty Stepper
  #167 = String             #166          // Empty Stepper
  #168 = Utf8               (Ljava/lang/String;)V
  #169 = NameAndType        #123:#168     // "<init>":(Ljava/lang/String;)V
  #170 = Methodref          #165.#169     // java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
  #171 = Utf8               trySplit
  #172 = Utf8               ()Ljava/lang/Object;
  #173 = NameAndType        #171:#172     // trySplit:()Ljava/lang/Object;
  #174 = Methodref          #2.#173       // scala/collection/convert/impl/IntVectorStepper.trySplit:()Ljava/lang/Object;
  #175 = Utf8               ()Lscala/collection/IntStepper;
  #176 = NameAndType        #30:#31       // javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
  #177 = Methodref          #2.#176       // scala/collection/convert/impl/IntVectorStepper.javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
  #178 = NameAndType        #21:#22       // spliterator:()Ljava/util/Spliterator$OfInt;
  #179 = Methodref          #2.#178       // scala/collection/convert/impl/IntVectorStepper.spliterator:()Ljava/util/Spliterator$OfInt;
  #180 = Utf8               (I)Ljava/lang/Object;
  #181 = NameAndType        #110:#111     // semiclone:(I)Lscala/collection/convert/impl/IntVectorStepper;
  #182 = Methodref          #2.#181       // scala/collection/convert/impl/IntVectorStepper.semiclone:(I)Lscala/collection/convert/impl/IntVectorStepper;
  #183 = NameAndType        #105:#106     // nextStep:()I
  #184 = Methodref          #2.#183       // scala/collection/convert/impl/IntVectorStepper.nextStep:()I
  #185 = Utf8               boxToInteger
  #186 = Utf8               (I)Ljava/lang/Integer;
  #187 = NameAndType        #185:#186     // boxToInteger:(I)Ljava/lang/Integer;
  #188 = Methodref          #153.#187     // scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
  #189 = Utf8               _i0
  #190 = Utf8               _iN
  #191 = Utf8               _displayN
  #192 = Utf8               _trunk
  #193 = Methodref          #5.#125       // scala/collection/convert/impl/VectorStepperBase."<init>":(III[Ljava/lang/Object;)V
  #194 = Utf8               [Ljava/lang/Object;
  #195 = Utf8               Code
  #196 = Utf8               LineNumberTable
  #197 = Utf8               LocalVariableTable
  #198 = Utf8               Signature
  #199 = Utf8               MethodParameters
  #200 = Utf8               StackMapTable
  #201 = Utf8               InnerClasses
  #202 = Utf8               SourceFile
  #203 = Utf8               RuntimeVisibleAnnotations
  #204 = Utf8               ScalaInlineInfo
  #205 = Utf8               ScalaSig
{
  public <B extends java.lang.Object> java.util.Spliterator$OfInt spliterator();
    descriptor: ()Ljava/util/Spliterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #27                 // InterfaceMethod scala/collection/IntStepper.spliterator$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #23                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator$OfInt;

  public <B extends java.lang.Object> java.util.PrimitiveIterator$OfInt javaIterator();
    descriptor: ()Ljava/util/PrimitiveIterator$OfInt;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #36                 // InterfaceMethod scala/collection/IntStepper.javaIterator$:(Lscala/collection/IntStepper;)Ljava/util/PrimitiveIterator$OfInt;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #32                          // <B:Ljava/lang/Object;>()Ljava/util/PrimitiveIterator$OfInt;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcI$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #43                 // InterfaceMethod scala/collection/IntStepper.spliterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcI$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #50                 // InterfaceMethod scala/collection/IntStepper.javaIterator$mcI$sp$:(Lscala/collection/IntStepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #46                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public double nextStep$mcD$sp();
    descriptor: ()D
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #58                 // InterfaceMethod scala/collection/Stepper.nextStep$mcD$sp$:(Lscala/collection/Stepper;)D
         4: dreturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public long nextStep$mcJ$sp();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #64                 // InterfaceMethod scala/collection/Stepper.nextStep$mcJ$sp$:(Lscala/collection/Stepper;)J
         4: lreturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcD$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #71                 // InterfaceMethod scala/collection/Stepper.trySplit$mcD$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcI$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #75                 // InterfaceMethod scala/collection/Stepper.trySplit$mcI$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public scala.collection.Stepper<java.lang.Object> trySplit$mcJ$sp();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #79                 // InterfaceMethod scala/collection/Stepper.trySplit$mcJ$sp$:(Lscala/collection/Stepper;)Lscala/collection/Stepper;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #67                          // ()Lscala/collection/Stepper<Ljava/lang/Object;>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcD$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #84                 // InterfaceMethod scala/collection/Stepper.spliterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Spliterator<?> spliterator$mcJ$sp();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #88                 // InterfaceMethod scala/collection/Stepper.spliterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Spliterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #39                          // <B:Ljava/lang/Object;>()Ljava/util/Spliterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcD$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #93                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcD$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #46                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public <B extends java.lang.Object> java.util.Iterator<?> javaIterator$mcJ$sp();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #97                 // InterfaceMethod scala/collection/Stepper.javaIterator$mcJ$sp$:(Lscala/collection/Stepper;)Ljava/util/Iterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #46                          // <B:Ljava/lang/Object;>()Ljava/util/Iterator<*>;

  public scala.collection.Iterator<java.lang.Object> iterator();
    descriptor: ()Lscala/collection/Iterator;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #104                // InterfaceMethod scala/collection/Stepper.iterator$:(Lscala/collection/Stepper;)Lscala/collection/Iterator;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;
    Signature: #100                         // ()Lscala/collection/Iterator<Ljava/lang/Object;>;

  public int nextStep();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #109                // Method nextStep$mcI$sp:()I
         4: ireturn
      LineNumberTable:
        line 100: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public scala.collection.convert.impl.IntVectorStepper semiclone(int);
    descriptor: (I)Lscala/collection/convert/impl/IntVectorStepper;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=2
         0: new           #2                  // class scala/collection/convert/impl/IntVectorStepper
         3: dup
         4: aload_0
         5: invokevirtual #115                // Method i0:()I
         8: iload_1
         9: aload_0
        10: invokevirtual #118                // Method displayN:()I
        13: aload_0
        14: invokevirtual #122                // Method trunk:()[Ljava/lang/Object;
        17: invokespecial #126                // Method "<init>":(III[Ljava/lang/Object;)V
        20: astore_2
        21: aload_0
        22: bipush        32
        24: invokevirtual #130                // Method index_$eq:(I)V
        27: aload_0
        28: bipush        32
        30: invokevirtual #133                // Method index1_$eq:(I)V
        33: aload_0
        34: iload_1
        35: invokevirtual #136                // Method i0_$eq:(I)V
        38: aload_2
        39: areturn
      LineNumberTable:
        line 107: 0
        line 108: 21
        line 109: 27
        line 110: 33
        line 111: 38
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           21      18     2   ans   Lscala/collection/convert/impl/IntVectorStepper;
            0      40     0  this   Lscala/collection/convert/impl/IntVectorStepper;
            0      40     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public int nextStep$mcI$sp();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #142                // Method hasStep:()Z
         4: ifeq          57
         7: aload_0
         8: aload_0
         9: invokevirtual #145                // Method index:()I
        12: iconst_1
        13: iadd
        14: invokevirtual #130                // Method index_$eq:(I)V
        17: aload_0
        18: invokevirtual #145                // Method index:()I
        21: bipush        32
        23: if_icmplt     34
        26: aload_0
        27: aload_0
        28: invokevirtual #115                // Method i0:()I
        31: invokevirtual #148                // Method advanceData:(I)V
        34: aload_0
        35: aload_0
        36: invokevirtual #115                // Method i0:()I
        39: iconst_1
        40: iadd
        41: invokevirtual #136                // Method i0_$eq:(I)V
        44: aload_0
        45: invokevirtual #151                // Method leaves:()[Ljava/lang/Object;
        48: aload_0
        49: invokevirtual #145                // Method index:()I
        52: aaload
        53: invokestatic  #157                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
        56: ireturn
        57: getstatic     #163                // Field scala/collection/Stepper$.MODULE$:Lscala/collection/Stepper$;
        60: pop
        61: new           #165                // class java/util/NoSuchElementException
        64: dup
        65: ldc           #167                // String Empty Stepper
        67: invokespecial #170                // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
        70: athrow
      StackMapTable: number_of_entries = 2
        frame_type = 34 /* same */
        frame_type = 22 /* same */
      LineNumberTable:
        line 100: 0
        line 101: 7
        line 102: 17
        line 103: 34
        line 104: 44
        line 105: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      71     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public scala.collection.Stepper trySplit();
    descriptor: ()Lscala/collection/Stepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #174                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #54                 // class scala/collection/Stepper
         7: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public scala.collection.IntStepper trySplit();
    descriptor: ()Lscala/collection/IntStepper;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #174                // Method trySplit:()Ljava/lang/Object;
         4: checkcast     #7                  // class scala/collection/IntStepper
         7: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public java.util.Iterator javaIterator();
    descriptor: ()Ljava/util/Iterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #177                // Method javaIterator:()Ljava/util/PrimitiveIterator$OfInt;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public java.util.Spliterator spliterator();
    descriptor: ()Ljava/util/Spliterator;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #179                // Method spliterator:()Ljava/util/Spliterator$OfInt;
         4: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public java.lang.Object semiclone(int);
    descriptor: (I)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: iload_1
         2: invokevirtual #182                // Method semiclone:(I)Lscala/collection/convert/impl/IntVectorStepper;
         5: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lscala/collection/convert/impl/IntVectorStepper;
            0       6     1  half   I
    MethodParameters:
      Name                           Flags
      half                           final

  public java.lang.Object nextStep();
    descriptor: ()Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #184                // Method nextStep:()I
         4: invokestatic  #188                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
         7: areturn
      LineNumberTable:
        line 97: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lscala/collection/convert/impl/IntVectorStepper;

  public scala.collection.convert.impl.IntVectorStepper(int, int, int, java.lang.Object[]);
    descriptor: (III[Ljava/lang/Object;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: iload_1
         2: iload_2
         3: iload_3
         4: aload         4
         6: invokespecial #193                // Method scala/collection/convert/impl/VectorStepperBase."<init>":(III[Ljava/lang/Object;)V
         9: return
      LineNumberTable:
        line 98: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lscala/collection/convert/impl/IntVectorStepper;
            0      10     1   _i0   I
            0      10     2   _iN   I
            0      10     3 _displayN   I
            0      10     4 _trunk   [Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      _i0                            final
      _iN                            final
      _displayN                      final
      _trunk                         final
}
InnerClasses:
  public static #16= #13 of #15;          // OfInt=class java/util/PrimitiveIterator$OfInt of class java/util/PrimitiveIterator
  public static #16= #18 of #20;          // OfInt=class java/util/Spliterator$OfInt of class java/util/Spliterator
Signature: #3                           // Lscala/collection/convert/impl/VectorStepperBase<Lscala/collection/IntStepper;Lscala/collection/convert/impl/IntVectorStepper;>;Lscala/collection/IntStepper;
SourceFile: "VectorStepper.scala"
RuntimeVisibleAnnotations:
  0: #9(#10=s#11)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005i2Q\u0001C\u0005\u0001\u001bEA\u0001b\u0007\u0001\u0003\u0002\u0003\u0006I!\b\u0005\tC\u0001\u0011\t\u0011)A\u0005;!I!\u0005\u0001B\u0001B\u0003%Qd\t\u0005\nK\u0001\u0011\t\u0011)A\u0005M1BQA\f\u0001\u0005\u0002=BQ\u0001\u000e\u0001\u0005\u0002UBQA\u000e\u0001\u0005\u0002]\u0012\u0001#\u00138u-\u0016\u001cGo\u001c:Ti\u0016\u0004\b/\u001a:\u000b\u0005)Y\u0011\u0001B5na2T!\u0001D\u0007\u0002\u000f\r|gN^3si*\u0011abD\u0001\u000bG>dG.Z2uS>t\'\"\u0001\t\u0002\u000bM\u001c\u0017\r\\1\u0014\u0007\u0001\u0011b\u0003\u0005\u0003\u0014)YQR\"A\u0005\n\u0005UI!!\u0005,fGR|\'o\u0015;faB,\'OQ1tKB\u0011q\u0003G\u0007\u0002\u001b%\u0011\u0011$\u0004\u0002\u000b\u0013:$8\u000b^3qa\u0016\u0014\bCA\n\u0001\u0003\ry\u0016\u000eM\u0002\u0001!\tqr$D\u0001\u0010\u0013\t\u0001sBA\u0002J]R\f1aX5O\u0003%yF-[:qY\u0006Lh*\u0003\u0002%)\u0005AA-[:qY\u0006Lh*\u0001\u0004`iJ,hn\u001b\t\u0004=\u001dJ\u0013B\u0001\u0015\u0010\u0005\u0015\t%O]1z!\tq\"&\u0003\u0002,\u001f\t1\u0011I\\=SK\u001aL!!\f\u000b\u0002\u000bQ\u0014XO\\6\u0002\rqJg.\u001b;?)\u0015Q\u0002\'\r\u001a4\u0011\u0015YR\u00011\u0001\u001e\u0011\u0015\tS\u00011\u0001\u001e\u0011\u0015\u0011S\u00011\u0001\u001e\u0011\u0015)S\u00011\u0001\'\u0003!qW\r\u001f;Ti\u0016\u0004H#A\u000f\u0002\u0013M,W.[2m_:,GC\u0001\u000e9\u0011\u0015It\u00011\u0001\u001e\u0003\u0011A\u0017\r\u001c4"
    )
  ScalaInlineInfo: length = 0x7C (unknown attribute)
   01 00 00 18 00 7B 00 7C 00 00 62 00 63 00 00 1E
   00 2D 00 00 1E 00 1F 00 00 59 00 2D 00 00 2C 00
   2D 00 00 5E 00 2D 00 00 69 00 6A 00 00 69 00 AC
   00 00 33 00 34 00 00 6B 00 6A 00 00 3B 00 3C 00
   00 6E 00 B4 00 00 6E 00 6F 00 00 15 00 16 00 00
   15 00 26 00 00 50 00 26 00 00 25 00 26 00 00 55
   00 26 00 00 AB 00 AF 00 00 AB 00 42 00 00 41 00
   42 00 00 48 00 42 00 00 4C 00 42 00
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
