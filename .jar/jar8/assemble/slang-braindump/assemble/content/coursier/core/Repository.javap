Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/coursier/core/Repository.class
  Last modified May 29, 2022; size 19937 bytes
  SHA-256 checksum 659a2100cdf1fb05dccfb126977bc8fd661a52c66b8c9b50890d29015c86f304
  Compiled from "Repository.scala"
public interface coursier.core.Repository extends java.io.Serializable,coursier.core.ArtifactSource
  minor version: 0
  major version: 52
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #2                          // coursier/core/Repository
  super_class: #4                         // java/lang/Object
  interfaces: 2, fields: 0, methods: 28, attributes: 6
Constant pool:
    #1 = Utf8               coursier/core/Repository
    #2 = Class              #1            // coursier/core/Repository
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               java/io/Serializable
    #6 = Class              #5            // java/io/Serializable
    #7 = Utf8               coursier/core/ArtifactSource
    #8 = Class              #7            // coursier/core/ArtifactSource
    #9 = Utf8               Repository.scala
   #10 = Utf8               Lscala/reflect/ScalaSignature;
   #11 = Utf8               bytes
   #12 = Utf8               \u0006\u0005\u0015uhACA>\u0003{\u0002\n1!\u0001\u0002\b\"9\u0011Q\u0017\u0001\u0005\u0002\u0005]\u0006bBA`\u0001\u0011\u0005\u0011\u0011\u0019\u0005\b\u0003\'\u0004a\u0011AAk\u0011\u001d)\t\u0007\u0001C\u0001\u000bGBq!b \u0001\t\u0003)\t\tC\u0004\u0006\"\u0002!\t!\"\u0005\t\u000f\tE\u0007\u0001\"\u0001\u0006$\"9!\u0011\u001b\u0001\u0005\u0002\u0015\u0015\u0007bBCq\u0001\u0011EQ1]\u0004\t\u0005_\ti\b#\u0001\u00032\u0019A\u00111PA?\u0011\u0003\u0011\u0019\u0004C\u0004\u0003D-!\tA!\u0012\u0006\r\t\u001d3\u0002\u0001B%\r\u0019\u0011\tgC\u0002\u0003d!Q!1\u000e\b\u0003\u0006\u0004%\tA!\u001c\t\u0015\t=dB!A!\u0002\u0013\u0011\t\u0006C\u0004\u0003D9!\tA!\u001d\t\u000f\ted\u0002\"\u0001\u0003n!9!1\u0010\b\u0005\u0002\t5\u0004\"\u0003B?\u001d\u0005\u0005I\u0011\tB@\u0011%\u00119IDA\u0001\n\u0003\u0012I\tC\u0005\u0003\u0016.\t\t\u0011b\u0001\u0003\u0018\u001aI!1T\u0006\u0011\u0002\u0007\u0005!Q\u0014\u0005\b\u0003k;B\u0011AA\\\u0011\u001d\u0011\tk\u0006D\u0001\u0005GCqAa1\u0018\r\u0003\u0011)\rC\u0004\u0003R^1\tAa5\t\u000f\tew\u0003\"\u0003\u0003\\\"9A\u0011^\f\u0005\n\u0011-\bb\u0002C{/\u0011%Aq\u001f\u0005\b\u000b\u000b9B\u0011BC\u0004\u0011\u001d)ya\u0006C\u0001\u000b#Aq!b\u0005\u0018\t\u0003))\u0002C\u0005\u0006 ]\t\n\u0011\"\u0001\u0006\"!9QQE\f\u0005\u0006\u0015\u001d\u0002bBC\u0013/\u0011\u0015Q\u0011G\u0004\b\u0005O\\\u0001\u0012\u0001Bu\r\u001d\u0011Yj\u0003E\u0001\u0005WDqAa\u0011\'\t\u0003\u0011iOB\u0004\u0003p\u001a\n\tC!=\t\u000f\t\r\u0003\u0006\"\u0001\u0003z\"9!q \u0015\u0007\u0002\u0005\u0005\u0007bBB\u0001Q\u0019\u000511A\u0004\b\t71\u0003\u0012AB\u0007\r\u001d\u0011yO\nE\u0001\u0007\u0013AqAa\u0011.\t\u0003\u0019YA\u0002\u0004\u0004\u00105\u00121\u0011\u0003\u0005\u000b\u0005\u007f|#Q1A\u0005\u0002\u0005\u0005\u0007BCB\n_\t\u0005\t\u0015!\u0003\u0002D\"9!1I\u0018\u0005\u0002\rU\u0001bBB\u0001_\u0011\u000511\u0001\u0005\b\u0007;yC\u0011AB\u0010\u0011\u001d\u0019\u0019c\fC!\u0007KAqa!\r0\t\u0003\u001a\u0019\u0004C\u0004\u0003\b>\"\te!\u000f\t\u000f\tut\u0006\"\u0011\u0003\u0000!91QH\u0018\u0005\n\r}\u0002bBB$_\u0011\u00053\u0011\n\u0005\b\u0007\u0017zC\u0011IB\u0002\u0011\u001d\u0019ie\fC!\u0007\u001fBqa!\u00160\t\u0003\u001a9fB\u0004\u0004\\5B\ta!\u0018\u0007\u000f\r=Q\u0006#\u0001\u0004`!9!1I \u0005\u0002\r\u0005\u0004bBB2\u007f\u0011\u00051Q\r\u0005\n\u0007Sz\u0014\u0011!C\u0005\u0007W2aaa\u0002.\u0005\ru\u0007B\u0003BQ\u0007\n\u0015\r\u0011\"\u0001\u0004`\"Q1\u0011]\"\u0003\u0002\u0003\u0006IA!3\t\u0015\t}8I!b\u0001\n\u0003\t\t\r\u0003\u0006\u0004\u0014\r\u0013\t\u0011)A\u0005\u0003\u0007D!b!\u0001D\u0005\u000b\u0007I\u0011AB\u0002\u0011)\u0019\tj\u0011B\u0001B\u0003%!\u0011\u0011\u0005\u000b\u0007\u000f\u001b%Q1A\u0005\u0002\u0005\u0005\u0007BCBr\u0007\n\u0005\t\u0015!\u0003\u0002D\"9!1I\"\u0005\u0002\r\u0015\bbBBO\u0007\u0012\u00051q\u0014\u0005\b\u0007_\u001cE\u0011ABy\u0011\u001d\u0019ib\u0011C\u0001\u0007kDqaa,D\t\u0003\u0019I\u0010C\u0004\u0004~\u000e#\taa@\t\u000f\r\r2\t\"\u0011\u0004&!91\u0011G\"\u0005B\u0011\r\u0001b\u0002BD\u0007\u0012\u0005Cq\u0001\u0005\b\u0005{\u001aE\u0011\tB@\u0011\u001d\u0019id\u0011C\u0005\t\u0017Aqaa\u0012D\t\u0003\u001aI\u0005C\u0004\u0004L\r#\tea\u0001\t\u000f\r53\t\"\u0011\u0005\u0014!91QK\"\u0005B\u0011]qaBB:[!\u00051Q\u000f\u0004\b\u0007\u000fi\u0003\u0012AB<\u0011\u001d\u0011\u0019\u0005\u0018C\u0001\u0007sBqaa\u0019]\t\u0003\u0019Y\bC\u0005\u0004jq\u000b\t\u0011\"\u0003\u0004l\u001911\u0011R\u0017\u0003\u0007\u0017C!Ba\u0007a\u0005\u000b\u0007I\u0011ABG\u0011)\u0019y\t\u0019B\u0001B\u0003%!Q\u0004\u0005\u000b\u0005\u007f\u0004\'Q1A\u0005\u0002\u0005\u0005\u0007BCB\nA\n\u0005\t\u0015!\u0003\u0002D\"Q1\u0011\u00011\u0003\u0006\u0004%\taa\u0001\t\u0015\rE\u0005M!A!\u0002\u0013\u0011\t\tC\u0004\u0003D\u0001$\taa%\t\u000f\ru\u0005\r\"\u0001\u0004 \"91\u0011\u00151\u0005\u0002\r\r\u0006bBBSA\u0012\u00051q\u0015\u0005\b\u0007;\u0001G\u0011ABV\u0011\u001d\u0019y\u000b\u0019C\u0001\u0007cCqaa\ta\t\u0003\u001a)\u0003C\u0004\u00042\u0001$\te!.\t\u000f\t\u001d\u0005\r\"\u0011\u0004:\"9!Q\u00101\u0005B\t}\u0004bBB\u001fA\u0012%1Q\u0018\u0005\b\u0007\u000f\u0002G\u0011IB%\u0011\u001d\u0019Y\u0005\u0019C!\u0007\u0007Aqa!\u0014a\t\u0003\u001a)\rC\u0004\u0004V\u0001$\te!3\b\u000f\r5W\u0006#\u0001\u0004P\u001a91\u0011R\u0017\t\u0002\rE\u0007b\u0002B\"o\u0012\u000511\u001b\u0005\b\u0007G:H\u0011ABk\u0011%\u0019Ig^A\u0001\n\u0013\u0019Y\u0007C\u0005\u0004j5\n\t\u0011\"\u0003\u0004l!9AQ\u0004\u0014\u0005\u0002\u0011}aA\u0002C\u0017M\t!y\u0003\u0003\u0006\u0003\u0000v\u0014\t\u0011)A\u0005\u0003\u0007D!\u0002b\u000e~\u0005\u0003\u0005\u000b\u0011\u0002BZ\u0011\u001d\u0011\u0019% C\u0001\ts9\u0011\u0002\"\u0011\'\u0003\u0003E\t\u0001b\u0011\u0007\u0013\u00115b%!A\t\u0002\u0011\u0015\u0003\u0002\u0003B\"\u0003\u000b!\t\u0001b\u0012\t\u0015\u0011%\u0013QAI\u0001\n\u0003!Y\u0005\u0003\u0006\u0004j\u0005\u0015\u0011\u0011!C\u0005\u0007W2a\u0001\"\u0019\'\u0005\u0011\r\u0004b\u0003BQ\u0003\u001b\u0011\t\u0011)A\u0005\u0005\u0013D1Ba@\u0002\u000e\t\u0005\t\u0015!\u0003\u0002D\"Y1\u0011AA\u0007\u0005\u0003\u0005\u000b\u0011\u0002BA\u0011-!9$!\u0004\u0003\u0002\u0003\u0006IAa-\t\u0011\t\r\u0013Q\u0002C\u0001\tK:\u0011\u0002\"\u001d\'\u0003\u0003E\t\u0001b\u001d\u0007\u0013\u0011\u0005d%!A\t\u0002\u0011U\u0004\u0002\u0003B\"\u00037!\t\u0001b\u001e\t\u0015\u0011e\u00141DI\u0001\n\u0003!Y\u0005\u0003\u0006\u0004j\u0005m\u0011\u0011!C\u0005\u0007W2a\u0001b\u001f\'\u0005\u0011u\u0004b\u0003B\u000e\u0003G\u0011\t\u0011)A\u0005\u0005;A1Ba@\u0002$\t\u0005\t\u0015!\u0003\u0002D\"Y1\u0011AA\u0012\u0005\u0003\u0005\u000b\u0011\u0002BA\u0011-!9$a\t\u0003\u0002\u0003\u0006IAa-\t\u0011\t\r\u00131\u0005C\u0001\t\u007f:\u0011\u0002b#\'\u0003\u0003E\t\u0001\"$\u0007\u0013\u0011md%!A\t\u0002\u0011=\u0005\u0002\u0003B\"\u0003c!\t\u0001\"%\t\u0015\u0011e\u0014\u0011GI\u0001\n\u0003!Y\u0005\u0003\u0006\u0004j\u0005E\u0012\u0011!C\u0005\u0007W2a\u0001b%\'\u0005\u0011U\u0005b\u0003B\u0000\u0003s\u0011\t\u0011)A\u0005\u0003\u0007D\u0001Ba\u0011\u0002:\u0011\u0005Aq\u0013\u0004\u0007\t;3#\u0001b(\t\u0017\t}\u0018q\bBC\u0002\u0013\u0005A\u0011\u0015\u0005\f\u0007\'\tyD!A!\u0002\u0013\u0011Y\u0010C\u0006\u0005$\u0006}\"Q1A\u0005\u0002\u0011\u0015\u0006b\u0003CT\u0003\u007f\u0011\t\u0011)A\u0005\u0005sC\u0001Ba\u0011\u0002@\u0011\u0005A\u0011\u0016\u0005\t\u0007;\ty\u0004\"\u0001\u00052\"AAQWA \t\u0003!9\f\u0003\u0005\u0004$\u0005}B\u0011IB\u0013\u0011!\u0019\t$a\u0010\u0005B\u0011m\u0006\u0002\u0003BD\u0003\u007f!\t\u0005b0\t\u0011\tu\u0014q\bC!\u0005\u007fB\u0001b!\u0010\u0002@\u0011%A1\u0019\u0005\t\u0007\u000f\ny\u0004\"\u0011\u0004J!A11JA \t\u0003\u001a\u0019\u0001\u0003\u0005\u0004N\u0005}B\u0011\tCd\u0011!\u0019)&a\u0010\u0005B\u0011-wa\u0002ChM!\u0005A\u0011\u001b\u0004\b\t;3\u0003\u0012\u0001Cj\u0011!\u0011\u0019%a\u0019\u0005\u0002\u0011U\u0007\u0002CB2\u0003G\"\t\u0001b6\t\u0015\r%\u00141MA\u0001\n\u0013\u0019YgB\u0005\u0003\u0016.\t\t\u0011#\u0001\u0006>\u0019I!\u0011M\u0006\u0002\u0002#\u0005Qq\b\u0005\t\u0005\u0007\ni\u0007\"\u0001\u0006B!AQ1IA7\t\u000b))\u0005\u0003\u0005\u0006L\u00055DQAC\'\u0011))\t&!\u001c\u0002\u0002\u0013\u0015Q1\u000b\u0005\u000b\u000b/\ni\'!A\u0005\u0006\u0015e\u0003\"CB5\u0017\u0005\u0005I\u0011BB6\u0005)\u0011V\r]8tSR|\'/\u001f\u0006\u0005\u0003\u007f\n\t)\u0001\u0003d_J,\'BAAB\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\b\u0001\u0005%\u0015QSAW!\u0011\tY)!%\u000e\u0005\u00055%BAAH\u0003\u0015\u00198-\u00197b\u0013\u0011\t\u0019*!$\u0003\r\u0005s\u0017PU3g!\u0011\t9*a*\u000f\t\u0005e\u00151\u0015\b\u0005\u00037\u000b\t+\u0004\u0002\u0002\u001e*!\u0011qTAC\u0003\u0019a$o\\8u}%\u0011\u0011qR\u0005\u0005\u0003K\u000bi)A\u0004qC\u000e\\\u0017mZ3\n\t\u0005%\u00161\u0016\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0005\u0003K\u000bi\t\u0005\u0003\u00020\u0006EVBAA?\u0013\u0011\t\u0019,! \u0003\u001d\u0005\u0013H/\u001b4bGR\u001cv.\u001e:dK\u00061A%\u001b8ji\u0012\"\"!!/\u0011\t\u0005-\u00151X\u0005\u0005\u0003{\u000biI\u0001\u0003V]&$\u0018\u0001\u0002:faJ,\"!a1\u0011\t\u0005\u0015\u0017Q\u001a\b\u0005\u0003\u000f\fI\r\u0005\u0003\u0002\u001c\u00065\u0015\u0002BAf\u0003\u001b\u000ba\u0001\u0015:fI\u00164\u0017\u0002BAh\u0003#\u0014aa\u0015;sS:<\'\u0002BAf\u0003\u001b\u000bAAZ5oIV!\u0011q[Av)!\tIN!\u0007\u0003$\t\u001dB\u0003BAn\u0005\u001f\u0001\"\"!8\u0002d\u0006\u001d\u00181\u0019B\u0002\u001b\t\tyN\u0003\u0003\u0002b\u0006\u0005\u0015\u0001B;uS2LA!!:\u0002`\n9Q)\u001b;iKJ$\u0006\u0003BAu\u0003Wd\u0001\u0001B\u0004\u0002n\u000e\u0011\r!a<\u0003\u0003\u0019+B!!=\u0002\u0000F!\u00111_A}!\u0011\tY)!>\n\t\u0005]\u0018Q\u0012\u0002\b\u001d>$\b.\u001b8h!\u0011\tY)a?\n\t\u0005u\u0018Q\u0012\u0002\u0004\u0003:LH\u0001\u0003B\u0001\u0003W\u0014\r!!=\u0003\u0003}\u0003\u0002\"a#\u0003\u0006\u00055&\u0011B\u0005\u0005\u0005\u000f\tiI\u0001\u0004UkBdWM\r\t\u0005\u0003_\u0013Y!\u0003\u0003\u0003\u000e\u0005u$a\u0002)s_*,7\r\u001e\u0005\b\u0005#\u0019\u00019\u0001B\n\u0003\u00051\u0005CBAo\u0005+\t9/\u0003\u0003\u0003\u0018\u0005}\'!B\'p]\u0006$\u0007b\u0002B\u000e\u0007\u0001\u0007!QD\u0001\u0007[>$W\u000f\\3\u0011\t\u0005=&qD\u0005\u0005\u0005C\tiH\u0001\u0004N_\u0012,H.\u001a\u0005\b\u0005K\u0019\u0001\u0019AAb\u0003\u001d1XM]:j_:DqA!\u000b\u0004\u0001\u0004\u0011Y#A\u0003gKR\u001c\u0007\u000eE\u0003\u0003.5\t9OD\u0002\u00020*\t!BU3q_NLGo\u001c:z!\r\tykC\n\u0006\u0017\u0005%%Q\u0007\t\u0005\u0005o\u0011\t%\u0004\u0002\u0003:)!!1\bB\u001f\u0003\tIwN\u0003\u0002\u0003@\u0005!!.\u0019<b\u0013\u0011\tIK!\u000f\u0002\rqJg.\u001b;?)\t\u0011\tDA\u0003GKR\u001c\u0007.\u0006\u0003\u0003L\tm\u0003\u0003CAF\u0005\u001b\u0012\tFa\u0016\n\t\t=\u0013Q\u0012\u0002\n\rVt7\r^5p]F\u0002B!!8\u0003T%!!QKAp\u0005!\t%\u000f^5gC\u000e$\bCCAo\u0003G\u0014I&a1\u0002DB!\u0011\u0011\u001eB.\t\u001d\ti/\u0004b\u0001\u0005;*B!!=\u0003`\u0011A!\u0011\u0001B.\u0005\u0004\t\tP\u0001\nBeRLg-Y2u\u000bb$XM\\:j_:\u001c8c\u0001\b\u0003fA!\u00111\u0012B4\u0013\u0011\u0011I\'!$\u0003\r\u0005s\u0017PV1m\u0003))h\u000eZ3sYfLgnZ\u000b\u0003\u0005#\n1\"\u001e8eKJd\u00170\u001b8hAQ!!1\u000fB<!\r\u0011)HD\u0007\u0002\u0017!9!1N\tA\u0002\tE\u0013\u0001F<ji\"$UMZ1vYR\u001c\u0005.Z2lgVl7/\u0001\u000bxSRDG)\u001a4bk2$8+[4oCR,(/Z\u0001\tQ\u0006\u001c\bnQ8eKR\u0011!\u0011\u0011\t\u0005\u0003\u0017\u0013\u0019)\u0003\u0003\u0003\u0006\u00065%aA%oi\u00061Q-];bYN$BAa#\u0003\u0012B!\u00111\u0012BG\u0013\u0011\u0011y)!$\u0003\u000f\t{w\u000e\\3b]\"I!1S\u000b\u0002\u0002\u0003\u0007\u0011\u0011`\u0001\u0004q\u0012\n\u0014AE!si&4\u0017m\u0019;FqR,gn]5p]N$BAa\u001d\u0003\u001a\"9!1\u000e\fA\u0002\tE#\u0001C\"p[BdW\r^3\u0016\t\t}%qU\n\u0004/\u0005%\u0015\u0001D8sO\u0006t\u0017N_1uS>tG\u0003\u0002BS\u0005\u007f\u0003b!!;\u0003(\n5FaBAw/\t\u0007!\u0011V\u000b\u0005\u0003c\u0014Y\u000b\u0002\u0005\u0003\u0002\t\u001d&\u0019AAy!!\t9Ja,\u00034\ne\u0016\u0002\u0002BY\u0003W\u0013a!R5uQ\u0016\u0014\b\u0003BAL\u0005kKAAa.\u0002,\nIA\u000b\u001b:po\u0006\u0014G.\u001a\t\u0007\u0003/\u0013Y,a1\n\t\tu\u00161\u0016\u0002\u0004\'\u0016\f\bb\u0002Ba3\u0001\u0007\u00111Y\u0001\u0007aJ,g-\u001b=\u0002\u00155|G-\u001e7f\u001d\u0006lW\r\u0006\u0004\u0003&\n\u001d\'q\u001a\u0005\b\u0005CS\u0002\u0019\u0001Be!\u0011\tyKa3\n\t\t5\u0017Q\u0010\u0002\r\u001fJ<\u0017M\\5{CRLwN\u001c\u0005\b\u0005\u0003T\u0002\u0019AAb\u0003!1XM]:j_:\u001cHC\u0002BS\u0005+\u00149\u000eC\u0004\u0003\u001cm\u0001\rA!\b\t\u000f\t\u00057\u00041\u0001\u0002D\u0006\u0019qN]4\u0015\t\tuG1\u001d\u000b\u0005\u0005?$i\u000e\u0005\u0004\u0002j\n\u001d&\u0011\u001d\t\t\u0003/\u0013yKa-\u0003dB!!Q]A \u001d\r\u0011)(J\u0001\t\u0007>l\u0007\u000f\\3uKB\u0019!Q\u000f\u0014\u0014\u0007\u0019\nI\t\u0006\u0002\u0003j\n)\u0011J\u001c9viN9\u0001&!#\u0003t\u0006U\u0005\u0003BAF\u0005kLAAa>\u0002\u000e\n9\u0001K]8ek\u000e$HC\u0001B~!\r\u0011i\u0010K\u0007\u0002M\u0005)\u0011N\u001c9vi\u0006!aM]8n+\t\u0011\t)\u000b\u0003)\u0007>\u0002\'\u0001\u0002(b[\u0016\u001cR!LAE\u0005k!\"a!\u0004\u0011\u0007\tuXFA\u0002Pe\u001e\u001cra\fB~\u0005g\f)*\u0001\u0004j]B,H\u000f\t\u000b\u0005\u0007/\u0019Y\u0002E\u0002\u0004\u001a=j\u0011!\f\u0005\b\u0005\u007f\u0014\u0004\u0019AAb\u0003%9\u0018\u000e\u001e5J]B,H\u000f\u0006\u0003\u0004\u0018\r\u0005\u0002b\u0002B\u0000i\u0001\u0007\u00111Y\u0001\ti>\u001cFO]5oOR\u00111q\u0005\t\u0005\u0007S\u0019y#\u0004\u0002\u0004,)!1Q\u0006B\u001f\u0003\u0011a\u0017M\\4\n\t\u0005=71F\u0001\tG\u0006tW)];bYR!!1RB\u001b\u0011\u001d\u00199D\u000ea\u0001\u0003s\f1a\u001c2k)\u0011\u0011Yia\u000f\t\u000f\r]r\u00071\u0001\u0002z\u0006)A/\u001e9mKV\u00111\u0011\t\t\u0007\u0003\u0017\u001b\u0019%a1\n\t\r\u0015\u0013Q\u0012\u0002\u0007)V\u0004H.Z\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\u00199#\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0001\bqe>$Wo\u0019;FY\u0016lWM\u001c;\u0015\t\u0005e8\u0011\u000b\u0005\b\u0007\'b\u0004\u0019\u0001BA\u0003\u0005q\u0017A\u00059s_\u0012,8\r^#mK6,g\u000e\u001e(b[\u0016$Baa\n\u0004Z!911K\u001fA\u0002\t\u0005\u0015aA(sOB\u00191\u0011D \u0014\u000b}\nII!\u000e\u0015\u0005\ru\u0013!B1qa2LH\u0003BB\f\u0007OBqAa@B\u0001\u0004\t\u0019-\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0004nA!1\u0011FB8\u0013\u0011\u0019\tha\u000b\u0003\r=\u0013\'.Z2u\u0003\u0011q\u0015-\\3\u0011\u0007\reAlE\u0003]\u0003\u0013\u0013)\u0004\u0006\u0002\u0004vQQ1QPB@\u0007\u0003\u001b\u0019i!\"\u0011\u0007\re1\tC\u0004\u0003\"z\u0003\rA!3\t\u000f\t}h\f1\u0001\u0002D\"91\u0011\u00010A\u0002\t\u0005\u0005bBBD=\u0002\u0007\u00111Y\u0001\u000fe\u0016\fX/\u001b:fIN+hMZ5y\u0005\r1VM]\n\bA\nm(1_AK+\t\u0011i\"A\u0004n_\u0012,H.\u001a\u0011\u0002\u000b\u0019\u0014x.\u001c\u0011\u0015\u0011\rU5qSBM\u00077\u00032a!\u0007a\u0011\u001d\u0011Yb\u001aa\u0001\u0005;AqAa@h\u0001\u0004\t\u0019\rC\u0004\u0004\u0002\u001d\u0004\rA!!\u0002\u0011=\u0014x-\u00138qkR,\"aa\u0006\u0002\u00139\fW.Z%oaV$XCAB?\u0003)9\u0018\u000e\u001e5N_\u0012,H.\u001a\u000b\u0005\u0007+\u001bI\u000bC\u0004\u0003\u001c)\u0004\rA!\b\u0015\t\rU5Q\u0016\u0005\b\u0005\u007f\\\u0007\u0019AAb\u0003!9\u0018\u000e\u001e5Ge>lG\u0003BBK\u0007gCqa!\u0001m\u0001\u0004\u0011\t\t\u0006\u0003\u0003\f\u000e]\u0006bBB\u001c]\u0002\u0007\u0011\u0011 \u000b\u0005\u0005\u0017\u001bY\fC\u0004\u00048=\u0004\r!!?\u0016\u0005\r}\u0006CCAF\u0007\u0003\u0014i\"a1\u0003\u0002&!11YAG\u0005\u0019!V\u000f\u001d7fgQ!\u0011\u0011`Bd\u0011\u001d\u0019\u0019\u0006\u001ea\u0001\u0005\u0003#Baa\n\u0004L\"911K;A\u0002\t\u0005\u0015a\u0001,feB\u00191\u0011D<\u0014\u000b]\fII!\u000e\u0015\u0005\r=G\u0003CBK\u0007/\u001cIna7\t\u000f\tm\u0011\u00101\u0001\u0003\u001e!9!q`=A\u0002\u0005\r\u0007bBB\u0001s\u0002\u0007!\u0011Q\n\b\u0007\nm(1_AK+\t\u0011I-A\u0007pe\u001e\fg.\u001b>bi&|g\u000eI\u0001\u0010e\u0016\fX/\u001b:fIN+hMZ5yAQQ1QPBt\u0007S\u001cYo!<\t\u000f\t\u0005F\n1\u0001\u0003J\"9!q \'A\u0002\u0005\r\u0007bBB\u0001\u0019\u0002\u0007!\u0011\u0011\u0005\b\u0007\u000fc\u0005\u0019AAb\u0003A9\u0018\u000e\u001e5Pe\u001e\fg.\u001b>bi&|g\u000e\u0006\u0003\u0004~\rM\bb\u0002BQ\u001d\u0002\u0007!\u0011\u001a\u000b\u0005\u0007{\u001a9\u0010C\u0004\u0003\u0000>\u0003\r!a1\u0015\t\ru41 \u0005\b\u0007\u0003\u0001\u0006\u0019\u0001BA\u0003I9\u0018\u000e\u001e5SKF,\u0018N]3e\'V4g-\u001b=\u0015\t\ruD\u0011\u0001\u0005\b\u0007\u000f\u000b\u0006\u0019AAb)\u0011\u0011Y\t\"\u0002\t\u000f\r]2\u000b1\u0001\u0002zR!!1\u0012C\u0005\u0011\u001d\u00199\u0004\u0016a\u0001\u0003s,\"\u0001\"\u0004\u0011\u0019\u0005-Eq\u0002Be\u0003\u0007\u0014\t)a1\n\t\u0011E\u0011Q\u0012\u0002\u0007)V\u0004H.\u001a\u001b\u0015\t\u0005eHQ\u0003\u0005\b\u0007\'J\u0006\u0019\u0001BA)\u0011\u00199\u0003\"\u0007\t\u000f\rM#\f1\u0001\u0003\u0002\u0006)\u0011J\u001c9vi\u0006)\u0001/\u0019:tKRAA\u0011\u0005C\u0012\tK!I\u0003\u0005\u0005\u0002\u0018\n=&1\u0017B~\u0011\u001d\u0011y\u0010 a\u0001\u0003\u0007Dq\u0001b\n}\u0001\u0004\t\u0019-\u0001\u0007tG\u0006d\u0017MV3sg&|g\u000eC\u0004\u0005,q\u0004\r!a1\u0002%M\u001c\u0017\r\\1CS:\f\'/\u001f,feNLwN\u001c\u0002\u0017\u0007>l\u0007\u000f\\3uS:<wJ]4Fq\u000e,\u0007\u000f^5p]N\u0019Q\u0010\"\r\u0011\t\u0005]E1G\u0005\u0005\tk\tYKA\u0005Fq\u000e,\u0007\u000f^5p]\u0006)1-Y;tKR1A1\bC\u001f\t\u007f\u00012A!@~\u0011!\u0011y0!\u0001A\u0002\u0005\r\u0007B\u0003C\u001c\u0003\u0003\u0001\n\u00111\u0001\u00034\u000612i\\7qY\u0016$\u0018N\\4Pe\u001e,\u0005pY3qi&|g\u000e\u0005\u0003\u0003~\u0006\u00151CBA\u0003\u0003\u0013\u0013)\u0004\u0006\u0002\u0005D\u0005YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uII*\"\u0001\"\u0014+\t\tMFqJ\u0016\u0003\t#\u0002B\u0001b\u0015\u0005^5\u0011AQ\u000b\u0006\u0005\t/\"I&A\u0005v]\u000eDWmY6fI*!A1LAG\u0003)\tgN\\8uCRLwN\\\u0005\u0005\t?\")FA\tv]\u000eDWmY6fIZ\u000b\'/[1oG\u0016\u0014qcQ8na2,G/\u001b8h\u001d\u0006lW-\u0012=dKB$\u0018n\u001c8\u0014\t\u00055A\u0011\u0007\u000b\u000b\tO\"I\u0007b\u001b\u0005n\u0011=\u0004\u0003\u0002B\u007f\u0003\u001bA\u0001B!)\u0002\u0018\u0001\u0007!\u0011\u001a\u0005\t\u0005\u007f\f9\u00021\u0001\u0002D\"A1\u0011AA\f\u0001\u0004\u0011\t\t\u0003\u0006\u00058\u0005]\u0001\u0013!a\u0001\u0005g\u000bqcQ8na2,G/\u001b8h\u001d\u0006lW-\u0012=dKB$\u0018n\u001c8\u0011\t\tu\u00181D\n\u0007\u00037\tII!\u000e\u0015\u0005\u0011M\u0014a\u0007\u0013mKN\u001c\u0018N\\5uI\u001d\u0014X-\u0019;fe\u0012\"WMZ1vYR$CG\u0001\u000eD_6\u0004H.\u001a;j]\u001e4VM]:j_:,\u0005pY3qi&|gn\u0005\u0003\u0002$\u0011EBC\u0003CA\t\u0007#)\tb\"\u0005\nB!!Q`A\u0012\u0011!\u0011Y\"!\fA\u0002\tu\u0001\u0002\u0003B\u0000\u0003[\u0001\r!a1\t\u0011\r\u0005\u0011Q\u0006a\u0001\u0005\u0003C!\u0002b\u000e\u0002.A\u0005\t\u0019\u0001BZ\u0003i\u0019u.\u001c9mKRLgn\u001a,feNLwN\\#yG\u0016\u0004H/[8o!\u0011\u0011i0!\r\u0014\r\u0005E\u0012\u0011\u0012B\u001b)\t!iI\u0001\bNC24wN]7fI&s\u0007/\u001e;\u0014\t\u0005eB\u0011\u0007\u000b\u0005\t3#Y\n\u0005\u0003\u0003~\u0006e\u0002\u0002\u0003B\u0000\u0003{\u0001\r!a1\u0003\rI+7/\u001e7u\'!\ty$!#\u0003t\u0006UUC\u0001B~\u0003-\u0019w.\u001c9mKRLwN\\:\u0016\u0005\te\u0016\u0001D2p[BdW\r^5p]N\u0004CC\u0002CV\t[#y\u000b\u0005\u0003\u0003~\u0006}\u0002\u0002\u0003B\u0000\u0003\u0013\u0002\rAa?\t\u0011\u0011\r\u0016\u0011\na\u0001\u0005s#B\u0001b+\u00054\"A!q`A&\u0001\u0004\u0011Y0A\bxSRD7i\\7qY\u0016$\u0018n\u001c8t)\u0011!Y\u000b\"/\t\u0011\u0011\r\u0016Q\na\u0001\u0005s#BAa#\u0005>\"A1qGA)\u0001\u0004\tI\u0010\u0006\u0003\u0003\f\u0012\u0005\u0007\u0002CB\u001c\u0003\'\u0002\r!!?\u0016\u0005\u0011\u0015\u0007\u0003CAF\u0005\u000b\u0011YP!/\u0015\t\u0005eH\u0011\u001a\u0005\t\u0007\'\ni\u00061\u0001\u0003\u0002R!1q\u0005Cg\u0011!\u0019\u0019&a\u0018A\u0002\t\u0005\u0015A\u0002*fgVdG\u000f\u0005\u0003\u0003~\u0006\r4CBA2\u0003\u0013\u0013)\u0004\u0006\u0002\u0005RR1A1\u0016Cm\t7D\u0001Ba@\u0002h\u0001\u0007!1 \u0005\t\tG\u000b9\u00071\u0001\u0003:\"9!\u0011\u0003\u000fA\u0004\u0011}\u0007CBAo\u0005+!\t\u000f\u0005\u0003\u0002j\n\u001d\u0006bBBO9\u0001\u0007AQ\u001d\t\u0004\tO|cb\u0001BsY\u0005!a.Y7f)\u0011!i\u000f\"=\u0015\t\t}Gq\u001e\u0005\b\u0005#i\u00029\u0001Cp\u0011\u001d\u0019\t+\ba\u0001\tg\u00042\u0001b:D\u0003\u0019A\u0017m](sOR1A\u0011 C\u0000\u000b\u0003!B\u0001b?\u0005~B1\u0011\u0011\u001eBT\u0005\u0017CqA!\u0005\u001f\u0001\b!y\u000eC\u0004\u0004\u001ez\u0001\r\u0001\":\t\u000f\u0015\ra\u00041\u0001\u0003\f\u00069\u0001/\u0019:uS\u0006d\u0017a\u00025bg:\u000bW.\u001a\u000b\u0005\u000b\u0013)i\u0001\u0006\u0003\u0005|\u0016-\u0001b\u0002B\t?\u0001\u000fAq\u001c\u0005\b\u0007C{\u0002\u0019\u0001Cz\u0003-\u0019(\r^!uiJ\u001cF/\u001e2\u0016\u0005\t-\u0015!\u00035bg6{G-\u001e7f)\u0019)9\"b\u0007\u0006\u001eQ!A1`C\r\u0011\u001d\u0011\t\"\ta\u0002\t?DqAa\u0007\"\u0001\u0004\u0011i\u0002C\u0005\u0006\u0010\u0005\u0002\n\u00111\u0001\u0003\f\u0006\u0019\u0002.Y:N_\u0012,H.\u001a\u0013eK\u001a\fW\u000f\u001c;%eU\u0011Q1\u0005\u0016\u0005\u0005\u0017#y%\u0001\u0005d_6\u0004H.\u001a;f)\u0011)I#\"\f\u0015\t\t}W1\u0006\u0005\b\u0005#\u0019\u00039\u0001Cp\u0011\u001d\u0011yp\ta\u0001\u000b_\u00012A!:))!)\u0019$b\u000e\u0006:\u0015mB\u0003\u0002Bp\u000bkAqA!\u0005%\u0001\b!y\u000eC\u0004\u0003\u0000\u0012\u0002\r!a1\t\u000f\u0011\u001dB\u00051\u0001\u0002D\"9A1\u0006\u0013A\u0002\u0005\r\u0007\u0003\u0002B;\u0003[\u001aB!!\u001c\u0002\nR\u0011QQH\u0001\u001fo&$\b\u000eR3gCVdGo\u00115fG.\u001cX/\\:%Kb$XM\\:j_:$BA!\u0015\u0006H!AQ\u0011JA9\u0001\u0004\u0011\u0019(A\u0003%i\"L7/\u0001\u0010xSRDG)\u001a4bk2$8+[4oCR,(/\u001a\u0013fqR,gn]5p]R!!\u0011KC(\u0011!)I%a\u001dA\u0002\tM\u0014A\u00055bg\"\u001cu\u000eZ3%Kb$XM\\:j_:$BAa \u0006V!AQ\u0011JA;\u0001\u0004\u0011\u0019(\u0001\tfcV\fGn\u001d\u0013fqR,gn]5p]R!Q1LC0)\u0011\u0011Y)\"\u0018\t\u0015\tM\u0015qOA\u0001\u0002\u0004\tI\u0010\u0003\u0005\u0006J\u0005]\u0004\u0019\u0001B:\u0003E1\u0017N\u001c3NCf\u0014W-\u00138uKJ4\u0018\r\\\u000b\u0005\u000bK*i\u0007\u0006\u0005\u0006h\u0015]T\u0011PC>)\u0011)I\'b\u001d\u0011\u0015\u0005u\u00171]C6\u0003\u0007\u0014\u0019\u0001\u0005\u0003\u0002j\u00165DaBAw\t\t\u0007QqN\u000b\u0005\u0003c,\t\b\u0002\u0005\u0003\u0002\u00155$\u0019AAy\u0011\u001d\u0011\t\u0002\u0002a\u0002\u000bk\u0002b!!8\u0003\u0016\u0015-\u0004b\u0002B\u000e\t\u0001\u0007!Q\u0004\u0005\b\u0005K!\u0001\u0019AAb\u0011\u001d\u0011I\u0003\u0002a\u0001\u000b{\u0002RA!\f\u000e\u000bW\n1bY8na2,G/Z(qiV!Q1QCI)\u0011)))\"(\u0015\t\u0015\u001dUq\u0013\t\u0007\u0003\u0017+I)\"$\n\t\u0015-\u0015Q\u0012\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u000b\t5r#b$\u0011\t\u0005%X\u0011\u0013\u0003\b\u0003[,!\u0019ACJ+\u0011\t\t0\"&\u0005\u0011\t\u0005Q\u0011\u0013b\u0001\u0003cD\u0011\"\"\'\u0006\u0003\u0003\u0005\u001d!b\'\u0002\u0015\u00154\u0018\u000eZ3oG\u0016$\u0013\u0007\u0005\u0004\u0002^\nUQq\u0012\u0005\b\u0005S)\u0001\u0019ACP!\u0015\u0011i#DCH\u0003Y1XM]:j_:\u001c8\t[3dW\"\u000b7/T8ek2,W\u0003BCS\u000b[#b!b*\u0006@\u0016\u0005G\u0003BCU\u000bw\u0003\"\"!8\u0002d\u0016-\u00161YCZ!\u0011\tI/\",\u0005\u000f\u00055xA1\u0001\u00060V!\u0011\u0011_CY\t!\u0011\t!\",C\u0002\u0005E\b\u0003CAF\u0005\u000b)),a1\u0011\t\u0005=VqW\u0005\u0005\u000bs\u000biH\u0001\u0005WKJ\u001c\u0018n\u001c8t\u0011\u001d\u0011\tb\u0002a\u0002\u000b{\u0003b!!8\u0003\u0016\u0015-\u0006b\u0002B\u000e\u000f\u0001\u0007!Q\u0004\u0005\b\u0005S9\u0001\u0019ACb!\u0015\u0011i#DCV+\u0011)9-b4\u0015\u0011\u0015%W\u0011\\Cn\u000b?$B!b3\u0006VBQ\u0011Q\\Ar\u000b\u001b\f\u0019-b-\u0011\t\u0005%Xq\u001a\u0003\b\u0003[D!\u0019ACi+\u0011\t\t0b5\u0005\u0011\t\u0005Qq\u001ab\u0001\u0003cDqA!\u0005\t\u0001\b)9\u000e\u0005\u0004\u0002^\nUQQ\u001a\u0005\b\u00057A\u0001\u0019\u0001B\u000f\u0011\u001d\u0011I\u0003\u0003a\u0001\u000b;\u0004RA!\f\u000e\u000b\u001bDq!\")\t\u0001\u0004\u0011Y)A\u0007gKR\u001c\u0007NV3sg&|gn]\u000b\u0005\u000bK,i\u000f\u0006\u0004\u0006h\u0016]X\u0011 \u000b\u0005\u000bS,\u0019\u0010\u0005\u0006\u0002^\u0006\rX1^Ab\u000bg\u0003B!!;\u0006n\u00129\u0011Q^\u0005C\u0002\u0015=X\u0003BAy\u000bc$\u0001B!\u0001\u0006n\n\u0007\u0011\u0011\u001f\u0005\b\u0005#I\u00019AC{!\u0019\tiN!\u0006\u0006l\"9!1D\u0005A\u0002\tu\u0001b\u0002B\u0015\u0013\u0001\u0007Q1 \t\u0006\u0005[iQ1\u001e
   #13 = Utf8               coursier/core/Repository$ArtifactExtensions
   #14 = Class              #13           // coursier/core/Repository$ArtifactExtensions
   #15 = Utf8               ArtifactExtensions
   #16 = Utf8               coursier/core/Repository$ArtifactExtensions$
   #17 = Class              #16           // coursier/core/Repository$ArtifactExtensions$
   #18 = Utf8
   #19 = Utf8               coursier/core/Repository$Complete
   #20 = Class              #19           // coursier/core/Repository$Complete
   #21 = Utf8               Complete
   #22 = Utf8               coursier/core/Repository$Complete$
   #23 = Class              #22           // coursier/core/Repository$Complete$
   #24 = Utf8               java/lang/invoke/MethodHandles$Lookup
   #25 = Class              #24           // java/lang/invoke/MethodHandles$Lookup
   #26 = Utf8               java/lang/invoke/MethodHandles
   #27 = Class              #26           // java/lang/invoke/MethodHandles
   #28 = Utf8               Lookup
   #29 = Utf8               scala/Predef$ArrowAssoc$
   #30 = Class              #29           // scala/Predef$ArrowAssoc$
   #31 = Utf8               scala/Predef
   #32 = Class              #31           // scala/Predef
   #33 = Utf8               (Lcoursier/util/Artifact;)Lcoursier/util/Artifact;
   #34 = Utf8               underlying
   #35 = Utf8               coursier/core/Repository$
   #36 = Class              #35           // coursier/core/Repository$
   #37 = Utf8               MODULE$
   #38 = Utf8               Lcoursier/core/Repository$;
   #39 = NameAndType        #37:#38       // MODULE$:Lcoursier/core/Repository$;
   #40 = Fieldref           #36.#39       // coursier/core/Repository$.MODULE$:Lcoursier/core/Repository$;
   #41 = NameAndType        #15:#33       // ArtifactExtensions:(Lcoursier/util/Artifact;)Lcoursier/util/Artifact;
   #42 = Methodref          #36.#41       // coursier/core/Repository$.ArtifactExtensions:(Lcoursier/util/Artifact;)Lcoursier/util/Artifact;
   #43 = Utf8               repr$
   #44 = Utf8               (Lcoursier/core/Repository;)Ljava/lang/String;
   #45 = Utf8               $this
   #46 = Utf8               repr
   #47 = Utf8               ()Ljava/lang/String;
   #48 = NameAndType        #46:#47       // repr:()Ljava/lang/String;
   #49 = InterfaceMethodref #2.#48        // coursier/core/Repository.repr:()Ljava/lang/String;
   #50 = Utf8               Lcoursier/core/Repository;
   #51 = Utf8               toString
   #52 = NameAndType        #51:#47       // toString:()Ljava/lang/String;
   #53 = Methodref          #4.#52        // java/lang/Object.toString:()Ljava/lang/String;
   #54 = Utf8               this
   #55 = Utf8               find
   #56 = Utf8               (Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #57 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
   #58 = Utf8               module
   #59 = Utf8               version
   #60 = Utf8               fetch
   #61 = Utf8               F
   #62 = Utf8               findMaybeInterval$
   #63 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #64 = Utf8               findMaybeInterval
   #65 = NameAndType        #64:#56       // findMaybeInterval:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #66 = InterfaceMethodref #2.#65        // coursier/core/Repository.findMaybeInterval:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
   #67 = Utf8               Lcoursier/core/Module;
   #68 = Utf8               Ljava/lang/String;
   #69 = Utf8               Lscala/Function1;
   #70 = Utf8               Lcoursier/util/Monad;
   #71 = Utf8               coursier/core/Parse$
   #72 = Class              #71           // coursier/core/Parse$
   #73 = Utf8               Lcoursier/core/Parse$;
   #74 = NameAndType        #37:#73       // MODULE$:Lcoursier/core/Parse$;
   #75 = Fieldref           #72.#74       // coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
   #76 = Utf8               versionInterval
   #77 = Utf8               (Ljava/lang/String;)Lscala/Option;
   #78 = NameAndType        #76:#77       // versionInterval:(Ljava/lang/String;)Lscala/Option;
   #79 = Methodref          #72.#78       // coursier/core/Parse$.versionInterval:(Ljava/lang/String;)Lscala/Option;
   #80 = Utf8               ()Ljava/lang/Object;
   #81 = MethodType         #80           //  ()Ljava/lang/Object;
   #82 = Utf8               $anonfun$findMaybeInterval$1
   #83 = NameAndType        #82:#77       // $anonfun$findMaybeInterval$1:(Ljava/lang/String;)Lscala/Option;
   #84 = InterfaceMethodref #2.#83        // coursier/core/Repository.$anonfun$findMaybeInterval$1:(Ljava/lang/String;)Lscala/Option;
   #85 = MethodHandle       6:#84         // REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$1:(Ljava/lang/String;)Lscala/Option;
   #86 = Utf8               ()Lscala/Option;
   #87 = MethodType         #86           //  ()Lscala/Option;
   #88 = Integer            5
   #89 = Integer            1
   #90 = Utf8               java/lang/invoke/LambdaMetafactory
   #91 = Class              #90           // java/lang/invoke/LambdaMetafactory
   #92 = Utf8               altMetafactory
   #93 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #94 = NameAndType        #92:#93       // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #95 = Methodref          #91.#94       // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #96 = MethodHandle       6:#95         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
   #97 = Utf8               apply
   #98 = Utf8               (Ljava/lang/String;)Lscala/Function0;
   #99 = NameAndType        #97:#98       // apply:(Ljava/lang/String;)Lscala/Function0;
  #100 = InvokeDynamic      #0:#99        // #0:apply:(Ljava/lang/String;)Lscala/Function0;
  #101 = Utf8               scala/Option
  #102 = Class              #101          // scala/Option
  #103 = Utf8               orElse
  #104 = Utf8               (Lscala/Function0;)Lscala/Option;
  #105 = NameAndType        #103:#104     // orElse:(Lscala/Function0;)Lscala/Option;
  #106 = Methodref          #102.#105     // scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
  #107 = Utf8               $anonfun$findMaybeInterval$2
  #108 = NameAndType        #107:#77      // $anonfun$findMaybeInterval$2:(Ljava/lang/String;)Lscala/Option;
  #109 = InterfaceMethodref #2.#108       // coursier/core/Repository.$anonfun$findMaybeInterval$2:(Ljava/lang/String;)Lscala/Option;
  #110 = MethodHandle       6:#109        // REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$2:(Ljava/lang/String;)Lscala/Option;
  #111 = InvokeDynamic      #1:#99        // #1:apply:(Ljava/lang/String;)Lscala/Function0;
  #112 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #113 = MethodType         #112          //  (Ljava/lang/Object;)Ljava/lang/Object;
  #114 = Utf8               $anonfun$findMaybeInterval$3$adapted
  #115 = Utf8               (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #116 = NameAndType        #114:#115     // $anonfun$findMaybeInterval$3$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #117 = InterfaceMethodref #2.#116       // coursier/core/Repository.$anonfun$findMaybeInterval$3$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #118 = MethodHandle       6:#117        // REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$3$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #119 = MethodType         #115          //  (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  #120 = Utf8               ()Lscala/Function1;
  #121 = NameAndType        #97:#120      // apply:()Lscala/Function1;
  #122 = InvokeDynamic      #2:#121       // #2:apply:()Lscala/Function1;
  #123 = Utf8               filter
  #124 = Utf8               (Lscala/Function1;)Lscala/Option;
  #125 = NameAndType        #123:#124     // filter:(Lscala/Function1;)Lscala/Option;
  #126 = Methodref          #102.#125     // scala/Option.filter:(Lscala/Function1;)Lscala/Option;
  #127 = Utf8               scala/None$
  #128 = Class              #127          // scala/None$
  #129 = Utf8               Lscala/None$;
  #130 = NameAndType        #37:#129      // MODULE$:Lscala/None$;
  #131 = Fieldref           #128.#130     // scala/None$.MODULE$:Lscala/None$;
  #132 = Utf8               equals
  #133 = Utf8               (Ljava/lang/Object;)Z
  #134 = NameAndType        #132:#133     // equals:(Ljava/lang/Object;)Z
  #135 = Methodref          #4.#134       // java/lang/Object.equals:(Ljava/lang/Object;)Z
  #136 = NameAndType        #55:#56       // find:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #137 = InterfaceMethodref #2.#136       // coursier/core/Repository.find:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #138 = Utf8               scala/Some
  #139 = Class              #138          // scala/Some
  #140 = Utf8               value
  #141 = NameAndType        #140:#80      // value:()Ljava/lang/Object;
  #142 = Methodref          #139.#141     // scala/Some.value:()Ljava/lang/Object;
  #143 = Utf8               coursier/core/VersionInterval
  #144 = Class              #143          // coursier/core/VersionInterval
  #145 = Utf8               versions
  #146 = Utf8               (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #147 = NameAndType        #145:#146     // versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #148 = InterfaceMethodref #2.#147       // coursier/core/Repository.versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #149 = Utf8               $anonfun$findMaybeInterval$4
  #150 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
  #151 = NameAndType        #149:#150     // $anonfun$findMaybeInterval$4:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
  #152 = InterfaceMethodref #2.#151       // coursier/core/Repository.$anonfun$findMaybeInterval$4:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
  #153 = MethodHandle       6:#152        // REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$4:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
  #154 = Utf8               (Lscala/Tuple2;)Lcoursier/util/EitherT;
  #155 = MethodType         #154          //  (Lscala/Tuple2;)Lcoursier/util/EitherT;
  #156 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
  #157 = NameAndType        #97:#156      // apply:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
  #158 = InvokeDynamic      #3:#157       // #3:apply:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
  #159 = Utf8               coursier/util/EitherT
  #160 = Class              #159          // coursier/util/EitherT
  #161 = Utf8               flatMap
  #162 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #163 = NameAndType        #161:#162     // flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #164 = Methodref          #160.#163     // coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #165 = Utf8               scala/MatchError
  #166 = Class              #165          // scala/MatchError
  #167 = Utf8               <init>
  #168 = Utf8               (Ljava/lang/Object;)V
  #169 = NameAndType        #167:#168     // "<init>":(Ljava/lang/Object;)V
  #170 = Methodref          #166.#169     // scala/MatchError."<init>":(Ljava/lang/Object;)V
  #171 = Utf8               coursier/core/Module
  #172 = Class              #171          // coursier/core/Module
  #173 = Utf8               java/lang/String
  #174 = Class              #173          // java/lang/String
  #175 = Utf8               scala/Function1
  #176 = Class              #175          // scala/Function1
  #177 = Utf8               coursier/util/Monad
  #178 = Class              #177          // coursier/util/Monad
  #179 = Utf8               itv
  #180 = Utf8               Lcoursier/core/VersionInterval;
  #181 = Utf8               completeOpt$
  #182 = Utf8               (Lcoursier/core/Repository;Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #183 = Utf8               evidence$1
  #184 = Utf8               completeOpt
  #185 = Utf8               (Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #186 = NameAndType        #184:#185     // completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #187 = InterfaceMethodref #2.#186       // coursier/core/Repository.completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
  #188 = Utf8               <F:Ljava/lang/Object;>(Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lscala/Option<Lcoursier/core/Repository$Complete<TF;>;>;
  #189 = Utf8               versionsCheckHasModule$
  #190 = Utf8               (Lcoursier/core/Repository;)Z
  #191 = Utf8               versionsCheckHasModule
  #192 = Utf8               ()Z
  #193 = NameAndType        #191:#192     // versionsCheckHasModule:()Z
  #194 = InterfaceMethodref #2.#193       // coursier/core/Repository.versionsCheckHasModule:()Z
  #195 = Utf8               versions$
  #196 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #197 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
  #198 = Utf8               (Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #199 = NameAndType        #145:#198     // versions:(Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #200 = InterfaceMethodref #2.#199       // coursier/core/Repository.versions:(Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #201 = Utf8               (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
  #202 = Utf8               Z
  #203 = Utf8               <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;ZLcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
  #204 = Utf8               fetchVersions
  #205 = NameAndType        #204:#146     // fetchVersions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #206 = InterfaceMethodref #2.#205       // coursier/core/Repository.fetchVersions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #207 = Utf8               hasModule$default$2
  #208 = NameAndType        #207:#192     // hasModule$default$2:()Z
  #209 = InterfaceMethodref #20.#208      // coursier/core/Repository$Complete.hasModule$default$2:()Z
  #210 = Utf8               hasModule
  #211 = Utf8               (Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #212 = NameAndType        #210:#211     // hasModule:(Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #213 = InterfaceMethodref #20.#212      // coursier/core/Repository$Complete.hasModule:(Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
  #214 = Utf8               $anonfun$versions$1$adapted
  #215 = Utf8               (Ljava/lang/Object;)Lscala/util/Right;
  #216 = NameAndType        #214:#215     // $anonfun$versions$1$adapted:(Ljava/lang/Object;)Lscala/util/Right;
  #217 = InterfaceMethodref #2.#216       // coursier/core/Repository.$anonfun$versions$1$adapted:(Ljava/lang/Object;)Lscala/util/Right;
  #218 = MethodHandle       6:#217        // REF_invokeStatic coursier/core/Repository.$anonfun$versions$1$adapted:(Ljava/lang/Object;)Lscala/util/Right;
  #219 = MethodType         #215          //  (Ljava/lang/Object;)Lscala/util/Right;
  #220 = InvokeDynamic      #4:#121       // #4:apply:()Lscala/Function1;
  #221 = Utf8               map
  #222 = Utf8               (Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #223 = NameAndType        #221:#222     // map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #224 = InterfaceMethodref #178.#223     // coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
  #225 = Methodref          #160.#169     // coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
  #226 = Utf8               $anonfun$versions$2$adapted
  #227 = Utf8               (Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
  #228 = NameAndType        #226:#227     // $anonfun$versions$2$adapted:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
  #229 = InterfaceMethodref #2.#228       // coursier/core/Repository.$anonfun$versions$2$adapted:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
  #230 = MethodHandle       6:#229        // REF_invokeStatic coursier/core/Repository.$anonfun$versions$2$adapted:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
  #231 = Utf8               (Ljava/lang/Object;)Lcoursier/util/EitherT;
  #232 = MethodType         #231          //  (Ljava/lang/Object;)Lcoursier/util/EitherT;
  #233 = Utf8               (Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
  #234 = NameAndType        #97:#233      // apply:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
  #235 = InvokeDynamic      #5:#234       // #5:apply:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
  #236 = Utf8               c
  #237 = Utf8               Lcoursier/core/Repository$Complete;
  #238 = Utf8               fetchVersions$
  #239 = Utf8               scala/package$
  #240 = Class              #239          // scala/package$
  #241 = Utf8               Lscala/package$;
  #242 = NameAndType        #37:#241      // MODULE$:Lscala/package$;
  #243 = Fieldref           #240.#242     // scala/package$.MODULE$:Lscala/package$;
  #244 = Utf8               Right
  #245 = Utf8               ()Lscala/util/Right$;
  #246 = NameAndType        #244:#245     // Right:()Lscala/util/Right$;
  #247 = Methodref          #240.#246     // scala/package$.Right:()Lscala/util/Right$;
  #248 = Utf8               scala/Tuple2
  #249 = Class              #248          // scala/Tuple2
  #250 = Utf8               coursier/core/Versions$
  #251 = Class              #250          // coursier/core/Versions$
  #252 = Utf8               Lcoursier/core/Versions$;
  #253 = NameAndType        #37:#252      // MODULE$:Lcoursier/core/Versions$;
  #254 = Fieldref           #251.#253     // coursier/core/Versions$.MODULE$:Lcoursier/core/Versions$;
  #255 = Utf8               empty
  #256 = Utf8               ()Lcoursier/core/Versions;
  #257 = NameAndType        #255:#256     // empty:()Lcoursier/core/Versions;
  #258 = Methodref          #251.#257     // coursier/core/Versions$.empty:()Lcoursier/core/Versions;
  #259 = String             #18           //
  #260 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
  #261 = NameAndType        #167:#260     // "<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #262 = Methodref          #249.#261     // scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
  #263 = Utf8               scala/util/Right$
  #264 = Class              #263          // scala/util/Right$
  #265 = NameAndType        #97:#215      // apply:(Ljava/lang/Object;)Lscala/util/Right;
  #266 = Methodref          #264.#265     // scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
  #267 = Utf8               point
  #268 = NameAndType        #267:#112     // point:(Ljava/lang/Object;)Ljava/lang/Object;
  #269 = InterfaceMethodref #178.#268     // coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
  #270 = Utf8               version$1
  #271 = Utf8               multiVersionInterval
  #272 = NameAndType        #271:#77      // multiVersionInterval:(Ljava/lang/String;)Lscala/Option;
  #273 = Methodref          #72.#272      // coursier/core/Parse$.multiVersionInterval:(Ljava/lang/String;)Lscala/Option;
  #274 = Utf8               ivyLatestSubRevisionInterval
  #275 = NameAndType        #274:#77      // ivyLatestSubRevisionInterval:(Ljava/lang/String;)Lscala/Option;
  #276 = Methodref          #72.#275      // coursier/core/Parse$.ivyLatestSubRevisionInterval:(Ljava/lang/String;)Lscala/Option;
  #277 = Utf8               $anonfun$findMaybeInterval$3
  #278 = Utf8               (Lcoursier/core/VersionInterval;)Z
  #279 = Utf8               x$1
  #280 = Utf8               isValid
  #281 = NameAndType        #280:#192     // isValid:()Z
  #282 = Methodref          #144.#281     // coursier/core/VersionInterval.isValid:()Z
  #283 = Utf8               $anonfun$findMaybeInterval$5
  #284 = Utf8               (Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
  #285 = Utf8               versions0$1
  #286 = Utf8               t
  #287 = Utf8               Lscala/Predef$ArrowAssoc$;
  #288 = NameAndType        #37:#287      // MODULE$:Lscala/Predef$ArrowAssoc$;
  #289 = Fieldref           #30.#288      // scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
  #290 = Utf8               scala/Predef$
  #291 = Class              #290          // scala/Predef$
  #292 = Utf8               Lscala/Predef$;
  #293 = NameAndType        #37:#292      // MODULE$:Lscala/Predef$;
  #294 = Fieldref           #291.#293     // scala/Predef$.MODULE$:Lscala/Predef$;
  #295 = Utf8               _1
  #296 = NameAndType        #295:#80      // _1:()Ljava/lang/Object;
  #297 = Methodref          #249.#296     // scala/Tuple2._1:()Ljava/lang/Object;
  #298 = Utf8               ArrowAssoc
  #299 = NameAndType        #298:#112     // ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #300 = Methodref          #291.#299     // scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
  #301 = Utf8               _2
  #302 = NameAndType        #301:#80      // _2:()Ljava/lang/Object;
  #303 = Methodref          #249.#302     // scala/Tuple2._2:()Ljava/lang/Object;
  #304 = Utf8               coursier/core/Project
  #305 = Class              #304          // coursier/core/Project
  #306 = Methodref          #139.#169     // scala/Some."<init>":(Ljava/lang/Object;)V
  #307 = Utf8               withVersions
  #308 = Utf8               (Lscala/Option;)Lcoursier/core/Project;
  #309 = NameAndType        #307:#308     // withVersions:(Lscala/Option;)Lcoursier/core/Project;
  #310 = Methodref          #305.#309     // coursier/core/Project.withVersions:(Lscala/Option;)Lcoursier/core/Project;
  #311 = Utf8               $minus$greater$extension
  #312 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #313 = NameAndType        #311:#312     // $minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #314 = Methodref          #30.#313      // scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
  #315 = Utf8               Lcoursier/core/Versions;
  #316 = Utf8               Lscala/Tuple2;
  #317 = Utf8               itv$1
  #318 = Utf8               F$1
  #319 = Utf8               module$1
  #320 = Utf8               fetch$1
  #321 = Utf8               x0$1
  #322 = Utf8               coursier/core/Versions
  #323 = Class              #322          // coursier/core/Versions
  #324 = Utf8               inInterval
  #325 = Utf8               (Lcoursier/core/VersionInterval;)Lscala/Option;
  #326 = NameAndType        #324:#325     // inInterval:(Lcoursier/core/VersionInterval;)Lscala/Option;
  #327 = Methodref          #323.#326     // coursier/core/Versions.inInterval:(Lcoursier/core/VersionInterval;)Lscala/Option;
  #328 = Utf8               java/lang/StringBuilder
  #329 = Class              #328          // java/lang/StringBuilder
  #330 = Integer            25
  #331 = Utf8               (I)V
  #332 = NameAndType        #167:#331     // "<init>":(I)V
  #333 = Methodref          #329.#332     // java/lang/StringBuilder."<init>":(I)V
  #334 = Utf8               No version found for
  #335 = String             #334          // No version found for
  #336 = Utf8               append
  #337 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #338 = NameAndType        #336:#337     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #339 = Methodref          #329.#338     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #340 = Utf8                in
  #341 = String             #340          //  in
  #342 = Methodref          #329.#52      // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #343 = Utf8               Left
  #344 = Utf8               ()Lscala/util/Left$;
  #345 = NameAndType        #343:#344     // Left:()Lscala/util/Left$;
  #346 = Methodref          #240.#345     // scala/package$.Left:()Lscala/util/Left$;
  #347 = Utf8               scala/util/Left$
  #348 = Class              #347          // scala/util/Left$
  #349 = Utf8               (Ljava/lang/Object;)Lscala/util/Left;
  #350 = NameAndType        #97:#349      // apply:(Ljava/lang/Object;)Lscala/util/Left;
  #351 = Methodref          #348.#350     // scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
  #352 = NameAndType        #283:#284     // $anonfun$findMaybeInterval$5:(Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
  #353 = InterfaceMethodref #2.#352       // coursier/core/Repository.$anonfun$findMaybeInterval$5:(Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
  #354 = MethodHandle       6:#353        // REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$5:(Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
  #355 = Utf8               (Lscala/Tuple2;)Lscala/Tuple2;
  #356 = MethodType         #355          //  (Lscala/Tuple2;)Lscala/Tuple2;
  #357 = Utf8               (Lcoursier/core/Versions;)Lscala/Function1;
  #358 = NameAndType        #97:#357      // apply:(Lcoursier/core/Versions;)Lscala/Function1;
  #359 = InvokeDynamic      #6:#358       // #6:apply:(Lcoursier/core/Versions;)Lscala/Function1;
  #360 = NameAndType        #221:#162     // map:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #361 = Methodref          #160.#360     // coursier/util/EitherT.map:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
  #362 = Utf8               reason
  #363 = Utf8               version0
  #364 = Utf8               versions0
  #365 = Utf8               versionsUrl
  #366 = Utf8               $anonfun$versions$1
  #367 = Utf8               (Z)Lscala/util/Right;
  #368 = Utf8               x$2
  #369 = Utf8               scala/runtime/BoxesRunTime
  #370 = Class              #369          // scala/runtime/BoxesRunTime
  #371 = Utf8               boxToBoolean
  #372 = Utf8               (Z)Ljava/lang/Boolean;
  #373 = NameAndType        #371:#372     // boxToBoolean:(Z)Ljava/lang/Boolean;
  #374 = Methodref          #370.#373     // scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
  #375 = Utf8               $anonfun$versions$2
  #376 = Utf8               (Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Z)Lcoursier/util/EitherT;
  #377 = Utf8               F$2
  #378 = Utf8               module$2
  #379 = Utf8               fetch$2
  #380 = Integer            14
  #381 = Methodref          #172.#48      // coursier/core/Module.repr:()Ljava/lang/String;
  #382 = Utf8                not found on
  #383 = String             #382          //  not found on
  #384 = Utf8               $init$
  #385 = Utf8               (Lcoursier/core/Repository;)V
  #386 = NameAndType        #277:#278     // $anonfun$findMaybeInterval$3:(Lcoursier/core/VersionInterval;)Z
  #387 = InterfaceMethodref #2.#386       // coursier/core/Repository.$anonfun$findMaybeInterval$3:(Lcoursier/core/VersionInterval;)Z
  #388 = Utf8               unboxToBoolean
  #389 = NameAndType        #388:#133     // unboxToBoolean:(Ljava/lang/Object;)Z
  #390 = Methodref          #370.#389     // scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
  #391 = NameAndType        #366:#367     // $anonfun$versions$1:(Z)Lscala/util/Right;
  #392 = InterfaceMethodref #2.#391       // coursier/core/Repository.$anonfun$versions$1:(Z)Lscala/util/Right;
  #393 = Utf8               Ljava/lang/Object;
  #394 = NameAndType        #375:#376     // $anonfun$versions$2:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Z)Lcoursier/util/EitherT;
  #395 = InterfaceMethodref #2.#394       // coursier/core/Repository.$anonfun$versions$2:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Z)Lcoursier/util/EitherT;
  #396 = Utf8               $deserializeLambda$
  #397 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #398 = Utf8               scala/runtime/LambdaDeserialize
  #399 = Class              #398          // scala/runtime/LambdaDeserialize
  #400 = Utf8               bootstrap
  #401 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #402 = NameAndType        #400:#401     // bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #403 = Methodref          #399.#402     // scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #404 = MethodHandle       6:#403        // REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
  #405 = Utf8               lambdaDeserialize
  #406 = NameAndType        #405:#397     // lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #407 = InvokeDynamic      #7:#406       // #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
  #408 = Utf8               Code
  #409 = Utf8               MethodParameters
  #410 = Utf8               LineNumberTable
  #411 = Utf8               LocalVariableTable
  #412 = Utf8               Signature
  #413 = Utf8               StackMapTable
  #414 = Utf8               InnerClasses
  #415 = Utf8               SourceFile
  #416 = Utf8               RuntimeVisibleAnnotations
  #417 = Utf8               BootstrapMethods
  #418 = Utf8               ScalaInlineInfo
  #419 = Utf8               ScalaSig
{
  public static coursier.util.Artifact ArtifactExtensions(coursier.util.Artifact);
    descriptor: (Lcoursier/util/Artifact;)Lcoursier/util/Artifact;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #40                 // Field coursier/core/Repository$.MODULE$:Lcoursier/core/Repository$;
         3: aload_0
         4: invokevirtual #42                 // Method coursier/core/Repository$.ArtifactExtensions:(Lcoursier/util/Artifact;)Lcoursier/util/Artifact;
         7: areturn
    MethodParameters:
      Name                           Flags
      underlying                     final

  public static java.lang.String repr$(coursier.core.Repository);
    descriptor: (Lcoursier/core/Repository;)Ljava/lang/String;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #49                 // InterfaceMethod repr:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 11: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/core/Repository;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default java.lang.String repr();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #53                 // Method java/lang/Object.toString:()Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 12: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcoursier/core/Repository;

  public abstract <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.ArtifactSource, coursier.core.Project>> find(coursier.core.Module, java.lang.String, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Signature: #57                          // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      fetch                          final
      F                              final

  public static coursier.util.EitherT findMaybeInterval$(coursier.core.Repository, coursier.core.Module, java.lang.String, scala.Function1, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository;Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokespecial #66                 // InterfaceMethod findMaybeInterval:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         9: areturn
      LineNumberTable:
        line 22: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/Repository;
            0      10     1 module   Lcoursier/core/Module;
            0      10     2 version   Ljava/lang/String;
            0      10     3 fetch   Lscala/Function1;
            0      10     4     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      module                         final
      version                        final
      fetch                          final
      F                              final

  public default <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.ArtifactSource, coursier.core.Project>> findMaybeInterval(coursier.core.Module, java.lang.String, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=9, args_size=5
         0: getstatic     #75                 // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
         3: aload_2
         4: invokevirtual #79                 // Method coursier/core/Parse$.versionInterval:(Ljava/lang/String;)Lscala/Option;
         7: aload_2
         8: invokedynamic #100,  0            // InvokeDynamic #0:apply:(Ljava/lang/String;)Lscala/Function0;
        13: invokevirtual #106                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        16: aload_2
        17: invokedynamic #111,  0            // InvokeDynamic #1:apply:(Ljava/lang/String;)Lscala/Function0;
        22: invokevirtual #106                // Method scala/Option.orElse:(Lscala/Function0;)Lscala/Option;
        25: invokedynamic #122,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
        30: invokevirtual #126                // Method scala/Option.filter:(Lscala/Function1;)Lscala/Option;
        33: astore        6
        35: getstatic     #131                // Field scala/None$.MODULE$:Lscala/None$;
        38: aload         6
        40: invokevirtual #135                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        43: ifeq          62
        46: aload_0
        47: aload_1
        48: aload_2
        49: aload_3
        50: aload         4
        52: invokeinterface #137,  5          // InterfaceMethod find:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        57: astore        5
        59: goto          136
        62: goto          65
        65: aload         6
        67: instanceof    #139                // class scala/Some
        70: ifeq          123
        73: aload         6
        75: checkcast     #139                // class scala/Some
        78: astore        7
        80: aload         7
        82: invokevirtual #142                // Method scala/Some.value:()Ljava/lang/Object;
        85: checkcast     #144                // class coursier/core/VersionInterval
        88: astore        8
        90: aload_0
        91: aload_1
        92: aload_3
        93: aload         4
        95: invokeinterface #148,  4          // InterfaceMethod versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       100: aload_0
       101: aload         8
       103: aload_2
       104: aload         4
       106: aload_1
       107: aload_3
       108: invokedynamic #158,  0            // InvokeDynamic #3:apply:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
       113: aload         4
       115: invokevirtual #164                // Method coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       118: astore        5
       120: goto          136
       123: goto          126
       126: new           #166                // class scala/MatchError
       129: dup
       130: aload         6
       132: invokespecial #170                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       135: athrow
       136: aload         5
       138: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 62
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 57 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository, class coursier/core/Module, class java/lang/String, class scala/Function1, class coursier/util/Monad, class coursier/util/EitherT, class scala/Option ]
          stack = []
      LineNumberTable:
        line 29: 0
        line 30: 7
        line 31: 16
        line 32: 25
        line 33: 35
        line 34: 46
        line 33: 62
        line 35: 65
        line 36: 90
        line 35: 123
        line 32: 126
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           90      33     8   itv   Lcoursier/core/VersionInterval;
            0     139     0  this   Lcoursier/core/Repository;
            0     139     1 module   Lcoursier/core/Module;
            0     139     2 version   Ljava/lang/String;
            0     139     3 fetch   Lscala/Function1;
            0     139     4     F   Lcoursier/util/Monad;
    Signature: #57                          // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/ArtifactSource;Lcoursier/core/Project;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      version                        final
      fetch                          final
      F                              final

  public static scala.Option completeOpt$(coursier.core.Repository, scala.Function1, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository;Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: invokespecial #187                // InterfaceMethod completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
         6: areturn
      LineNumberTable:
        line 49: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0 $this   Lcoursier/core/Repository;
            0       7     1 fetch   Lscala/Function1;
            0       7     2 evidence$1   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      fetch                          final
      evidence$1                     final

  public default <F extends java.lang.Object> scala.Option<coursier.core.Repository$Complete<F>> completeOpt(scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=3, args_size=3
         0: getstatic     #131                // Field scala/None$.MODULE$:Lscala/None$;
         3: areturn
      LineNumberTable:
        line 50: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       4     0  this   Lcoursier/core/Repository;
            0       4     1 fetch   Lscala/Function1;
            0       4     2 evidence$1   Lcoursier/util/Monad;
    Signature: #188                         // <F:Ljava/lang/Object;>(Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lscala/Option<Lcoursier/core/Repository$Complete<TF;>;>;
    MethodParameters:
      Name                           Flags
      fetch                          final
      evidence$1                     final

  public static boolean versionsCheckHasModule$(coursier.core.Repository);
    descriptor: (Lcoursier/core/Repository;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #194                // InterfaceMethod versionsCheckHasModule:()Z
         4: ireturn
      LineNumberTable:
        line 52: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0 $this   Lcoursier/core/Repository;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public default boolean versionsCheckHasModule();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: iconst_0
         1: ireturn
      LineNumberTable:
        line 53: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       2     0  this   Lcoursier/core/Repository;

  public static coursier.util.EitherT versions$(coursier.core.Repository, coursier.core.Module, scala.Function1, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokespecial #148                // InterfaceMethod versions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         7: areturn
      LineNumberTable:
        line 55: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/core/Repository;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 fetch   Lscala/Function1;
            0       8     3     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      module                         final
      fetch                          final
      F                              final

  public default <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.Versions, java.lang.String>> versions(coursier.core.Module, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: iconst_0
         4: aload_3
         5: invokeinterface #200,  5          // InterfaceMethod versions:(Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
        10: areturn
      LineNumberTable:
        line 61: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lcoursier/core/Repository;
            0      11     1 module   Lcoursier/core/Module;
            0      11     2 fetch   Lscala/Function1;
            0      11     3     F   Lcoursier/util/Monad;
    Signature: #197                         // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      fetch                          final
      F                              final

  public static coursier.util.EitherT versions$(coursier.core.Repository, coursier.core.Module, scala.Function1, boolean, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: iload_3
         4: aload         4
         6: invokespecial #200                // InterfaceMethod versions:(Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
         9: areturn
      LineNumberTable:
        line 63: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0 $this   Lcoursier/core/Repository;
            0      10     1 module   Lcoursier/core/Module;
            0      10     2 fetch   Lscala/Function1;
            0      10     3 versionsCheckHasModule   Z
            0      10     4     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      module                         final
      fetch                          final
      versionsCheckHasModule         final
      F                              final

  public default <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.Versions, java.lang.String>> versions(coursier.core.Module, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, boolean, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Lscala/Function1;ZLcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=7, locals=9, args_size=5
         0: iload_3
         1: ifeq          143
         4: aload_0
         5: aload_2
         6: aload         4
         8: invokeinterface #187,  3          // InterfaceMethod completeOpt:(Lscala/Function1;Lcoursier/util/Monad;)Lscala/Option;
        13: astore        6
        15: getstatic     #131                // Field scala/None$.MODULE$:Lscala/None$;
        18: aload         6
        20: invokevirtual #135                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        23: ifeq          41
        26: aload_0
        27: aload_1
        28: aload_2
        29: aload         4
        31: invokeinterface #206,  4          // InterfaceMethod fetchVersions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        36: astore        5
        38: goto          138
        41: goto          44
        44: aload         6
        46: instanceof    #139                // class scala/Some
        49: ifeq          125
        52: aload         6
        54: checkcast     #139                // class scala/Some
        57: astore        7
        59: aload         7
        61: invokevirtual #142                // Method scala/Some.value:()Ljava/lang/Object;
        64: checkcast     #20                 // class coursier/core/Repository$Complete
        67: astore        8
        69: new           #160                // class coursier/util/EitherT
        72: dup
        73: aload         4
        75: aload         8
        77: aload_1
        78: aload         8
        80: invokeinterface #209,  1          // InterfaceMethod coursier/core/Repository$Complete.hasModule$default$2:()Z
        85: aload         4
        87: invokeinterface #213,  4          // InterfaceMethod coursier/core/Repository$Complete.hasModule:(Lcoursier/core/Module;ZLcoursier/util/Monad;)Ljava/lang/Object;
        92: invokedynamic #220,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
        97: invokeinterface #224,  3          // InterfaceMethod coursier/util/Monad.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       102: invokespecial #225                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       105: aload_0
       106: aload         4
       108: aload_1
       109: aload_2
       110: invokedynamic #235,  0            // InvokeDynamic #5:apply:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;)Lscala/Function1;
       115: aload         4
       117: invokevirtual #164                // Method coursier/util/EitherT.flatMap:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       120: astore        5
       122: goto          138
       125: goto          128
       128: new           #166                // class scala/MatchError
       131: dup
       132: aload         6
       134: invokespecial #170                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       137: athrow
       138: aload         5
       140: goto          153
       143: aload_0
       144: aload_1
       145: aload_2
       146: aload         4
       148: invokeinterface #206,  4          // InterfaceMethod fetchVersions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       153: areturn
      StackMapTable: number_of_entries = 7
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ top, class scala/Option ]
        frame_type = 2 /* same */
        frame_type = 251 /* same_frame_extended */
          offset_delta = 80
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository, class coursier/core/Module, class scala/Function1, int, class coursier/util/Monad, class coursier/util/EitherT, class scala/Option ]
          stack = []
        frame_type = 249 /* chop */
          offset_delta = 4
        frame_type = 73 /* same_locals_1_stack_item */
          stack = [ class coursier/util/EitherT ]
      LineNumberTable:
        line 70: 0
        line 71: 4
        line 72: 15
        line 73: 44
        line 74: 69
        line 73: 125
        line 71: 128
        line 82: 143
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           69      56     8     c   Lcoursier/core/Repository$Complete;
            0     154     0  this   Lcoursier/core/Repository;
            0     154     1 module   Lcoursier/core/Module;
            0     154     2 fetch   Lscala/Function1;
            0     154     3 versionsCheckHasModule   Z
            0     154     4     F   Lcoursier/util/Monad;
    Signature: #203                         // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;ZLcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      fetch                          final
      versionsCheckHasModule         final
      F                              final

  public static coursier.util.EitherT fetchVersions$(coursier.core.Repository, coursier.core.Module, scala.Function1, coursier.util.Monad);
    descriptor: (Lcoursier/core/Repository;Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokespecial #206                // InterfaceMethod fetchVersions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
         7: areturn
      LineNumberTable:
        line 84: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 $this   Lcoursier/core/Repository;
            0       8     1 module   Lcoursier/core/Module;
            0       8     2 fetch   Lscala/Function1;
            0       8     3     F   Lcoursier/util/Monad;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      module                         final
      fetch                          final
      F                              final

  public default <F extends java.lang.Object> coursier.util.EitherT<F, java.lang.String, scala.Tuple2<coursier.core.Versions, java.lang.String>> fetchVersions(coursier.core.Module, scala.Function1<coursier.util.Artifact, coursier.util.EitherT<F, java.lang.String, java.lang.String>>, coursier.util.Monad<F>);
    descriptor: (Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=8, locals=4, args_size=4
         0: new           #160                // class coursier/util/EitherT
         3: dup
         4: aload_3
         5: getstatic     #243                // Field scala/package$.MODULE$:Lscala/package$;
         8: invokevirtual #247                // Method scala/package$.Right:()Lscala/util/Right$;
        11: new           #249                // class scala/Tuple2
        14: dup
        15: getstatic     #254                // Field coursier/core/Versions$.MODULE$:Lcoursier/core/Versions$;
        18: invokevirtual #258                // Method coursier/core/Versions$.empty:()Lcoursier/core/Versions;
        21: ldc_w         #259                // String
        24: invokespecial #262                // Method scala/Tuple2."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
        27: invokevirtual #266                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        30: invokeinterface #269,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        35: invokespecial #225                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        38: areturn
      LineNumberTable:
        line 90: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      39     0  this   Lcoursier/core/Repository;
            0      39     1 module   Lcoursier/core/Module;
            0      39     2 fetch   Lscala/Function1;
            0      39     3     F   Lcoursier/util/Monad;
    Signature: #197                         // <F:Ljava/lang/Object;>(Lcoursier/core/Module;Lscala/Function1<Lcoursier/util/Artifact;Lcoursier/util/EitherT<TF;Ljava/lang/String;Ljava/lang/String;>;>;Lcoursier/util/Monad<TF;>;)Lcoursier/util/EitherT<TF;Ljava/lang/String;Lscala/Tuple2<Lcoursier/core/Versions;Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      module                         final
      fetch                          final
      F                              final

  public static scala.Option $anonfun$findMaybeInterval$1(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #273                // Method coursier/core/Parse$.multiVersionInterval:(Ljava/lang/String;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 30: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 version$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version$1                      final

  public static scala.Option $anonfun$findMaybeInterval$2(java.lang.String);
    descriptor: (Ljava/lang/String;)Lscala/Option;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #75                 // Field coursier/core/Parse$.MODULE$:Lcoursier/core/Parse$;
         3: aload_0
         4: invokevirtual #276                // Method coursier/core/Parse$.ivyLatestSubRevisionInterval:(Ljava/lang/String;)Lscala/Option;
         7: areturn
      LineNumberTable:
        line 31: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0 version$1   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      version$1                      final

  public static boolean $anonfun$findMaybeInterval$3(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Z
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokevirtual #282                // Method coursier/core/VersionInterval.isValid:()Z
         4: ireturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0   x$1   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static scala.Tuple2 $anonfun$findMaybeInterval$5(coursier.core.Versions, scala.Tuple2);
    descriptor: (Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=6, locals=2, args_size=2
         0: getstatic     #289                // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
         3: getstatic     #294                // Field scala/Predef$.MODULE$:Lscala/Predef$;
         6: aload_1
         7: invokevirtual #297                // Method scala/Tuple2._1:()Ljava/lang/Object;
        10: invokevirtual #300                // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
        13: aload_1
        14: invokevirtual #303                // Method scala/Tuple2._2:()Ljava/lang/Object;
        17: checkcast     #305                // class coursier/core/Project
        20: new           #139                // class scala/Some
        23: dup
        24: aload_0
        25: invokespecial #306                // Method scala/Some."<init>":(Ljava/lang/Object;)V
        28: invokevirtual #310                // Method coursier/core/Project.withVersions:(Lscala/Option;)Lcoursier/core/Project;
        31: invokevirtual #314                // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
        34: areturn
      LineNumberTable:
        line 44: 3
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0 versions0$1   Lcoursier/core/Versions;
            0      35     1     t   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      versions0$1                    final
      t                              final

  public static coursier.util.EitherT $anonfun$findMaybeInterval$4(coursier.core.Repository, coursier.core.VersionInterval, java.lang.String, coursier.util.Monad, coursier.core.Module, scala.Function1, scala.Tuple2);
    descriptor: (Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=16, args_size=7
         0: aload         6
         2: astore        9
         4: aload         9
         6: ifnull        190
         9: aload         9
        11: invokevirtual #297                // Method scala/Tuple2._1:()Ljava/lang/Object;
        14: checkcast     #323                // class coursier/core/Versions
        17: astore        10
        19: aload         9
        21: invokevirtual #303                // Method scala/Tuple2._2:()Ljava/lang/Object;
        24: checkcast     #174                // class java/lang/String
        27: astore        11
        29: aload         10
        31: aload_1
        32: invokevirtual #327                // Method coursier/core/Versions.inInterval:(Lcoursier/core/VersionInterval;)Lscala/Option;
        35: astore        12
        37: getstatic     #131                // Field scala/None$.MODULE$:Lscala/None$;
        40: aload         12
        42: invokevirtual #135                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        45: ifeq          113
        48: new           #329                // class java/lang/StringBuilder
        51: dup
        52: ldc_w         #330                // int 25
        55: invokespecial #333                // Method java/lang/StringBuilder."<init>":(I)V
        58: ldc_w         #335                // String No version found for
        61: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        64: aload_2
        65: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        68: ldc_w         #341                // String  in
        71: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        74: aload         11
        76: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        79: invokevirtual #342                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        82: astore        13
        84: new           #160                // class coursier/util/EitherT
        87: dup
        88: aload_3
        89: getstatic     #243                // Field scala/package$.MODULE$:Lscala/package$;
        92: invokevirtual #346                // Method scala/package$.Left:()Lscala/util/Left$;
        95: aload         13
        97: invokevirtual #351                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
       100: invokeinterface #269,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
       105: invokespecial #225                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
       108: astore        8
       110: goto          183
       113: goto          116
       116: aload         12
       118: instanceof    #139                // class scala/Some
       121: ifeq          170
       124: aload         12
       126: checkcast     #139                // class scala/Some
       129: astore        14
       131: aload         14
       133: invokevirtual #142                // Method scala/Some.value:()Ljava/lang/Object;
       136: checkcast     #174                // class java/lang/String
       139: astore        15
       141: aload_0
       142: aload         4
       144: aload         15
       146: aload         5
       148: aload_3
       149: invokeinterface #137,  5          // InterfaceMethod find:(Lcoursier/core/Module;Ljava/lang/String;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       154: aload         10
       156: invokedynamic #359,  0            // InvokeDynamic #6:apply:(Lcoursier/core/Versions;)Lscala/Function1;
       161: aload_3
       162: invokevirtual #361                // Method coursier/util/EitherT.map:(Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
       165: astore        8
       167: goto          183
       170: goto          173
       173: new           #166                // class scala/MatchError
       176: dup
       177: aload         12
       179: invokespecial #170                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       182: athrow
       183: aload         8
       185: astore        7
       187: goto          203
       190: goto          193
       193: new           #166                // class scala/MatchError
       196: dup
       197: aload         9
       199: invokespecial #170                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       202: athrow
       203: aload         7
       205: areturn
      StackMapTable: number_of_entries = 8
        frame_type = 255 /* full_frame */
          offset_delta = 113
          locals = [ class coursier/core/Repository, class coursier/core/VersionInterval, class java/lang/String, class coursier/util/Monad, class coursier/core/Module, class scala/Function1, class scala/Tuple2, top, top, class scala/Tuple2, class coursier/core/Versions, class java/lang/String, class scala/Option ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 53 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository, class coursier/core/VersionInterval, class java/lang/String, class coursier/util/Monad, class coursier/core/Module, class scala/Function1, class scala/Tuple2, top, class coursier/util/EitherT, class scala/Tuple2, class coursier/core/Versions, class java/lang/String, class scala/Option ]
          stack = []
        frame_type = 255 /* full_frame */
          offset_delta = 6
          locals = [ class coursier/core/Repository, class coursier/core/VersionInterval, class java/lang/String, class coursier/util/Monad, class coursier/core/Module, class scala/Function1, class scala/Tuple2, top, top, class scala/Tuple2 ]
          stack = []
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 9
          locals = [ class coursier/core/Repository, class coursier/core/VersionInterval, class java/lang/String, class coursier/util/Monad, class coursier/core/Module, class scala/Function1, class scala/Tuple2, class coursier/util/EitherT, class coursier/util/EitherT, class scala/Tuple2, class coursier/core/Versions, class java/lang/String, class scala/Option ]
          stack = []
      LineNumberTable:
        line 36: 0
        line 37: 4
        line 38: 29
        line 39: 37
        line 40: 48
        line 41: 84
        line 39: 113
        line 42: 116
        line 43: 141
        line 44: 154
        line 42: 170
        line 38: 173
        line 37: 190
        line 36: 193
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           84      24    13 reason   Ljava/lang/String;
          141      29    15 version0   Ljava/lang/String;
           19     171    10 versions0   Lcoursier/core/Versions;
           29     161    11 versionsUrl   Ljava/lang/String;
            0     206     0 $this   Lcoursier/core/Repository;
            0     206     1 itv$1   Lcoursier/core/VersionInterval;
            0     206     2 version$1   Ljava/lang/String;
            0     206     3   F$1   Lcoursier/util/Monad;
            0     206     4 module$1   Lcoursier/core/Module;
            0     206     5 fetch$1   Lscala/Function1;
            0     206     6  x0$1   Lscala/Tuple2;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      itv$1                          final
      version$1                      final
      F$1                            final
      module$1                       final
      fetch$1                        final
      x0$1                           final

  public static scala.util.Right $anonfun$versions$1(boolean);
    descriptor: (Z)Lscala/util/Right;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #243                // Field scala/package$.MODULE$:Lscala/package$;
         3: invokevirtual #247                // Method scala/package$.Right:()Lscala/util/Right$;
         6: iload_0
         7: invokestatic  #374                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
        10: invokevirtual #266                // Method scala/util/Right$.apply:(Ljava/lang/Object;)Lscala/util/Right;
        13: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0   x$2   Z
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static coursier.util.EitherT $anonfun$versions$2(coursier.core.Repository, coursier.util.Monad, coursier.core.Module, scala.Function1, boolean);
    descriptor: (Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Z)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=7, locals=7, args_size=5
         0: iload         4
         2: istore        6
         4: iconst_0
         5: iload         6
         7: if_icmpne     72
        10: new           #160                // class coursier/util/EitherT
        13: dup
        14: aload_1
        15: getstatic     #243                // Field scala/package$.MODULE$:Lscala/package$;
        18: invokevirtual #346                // Method scala/package$.Left:()Lscala/util/Left$;
        21: new           #329                // class java/lang/StringBuilder
        24: dup
        25: ldc_w         #380                // int 14
        28: invokespecial #333                // Method java/lang/StringBuilder."<init>":(I)V
        31: aload_2
        32: invokevirtual #381                // Method coursier/core/Module.repr:()Ljava/lang/String;
        35: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        38: ldc_w         #383                // String  not found on
        41: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        44: aload_0
        45: invokeinterface #49,  1           // InterfaceMethod repr:()Ljava/lang/String;
        50: invokevirtual #339                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        53: invokevirtual #342                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        56: invokevirtual #351                // Method scala/util/Left$.apply:(Ljava/lang/Object;)Lscala/util/Left;
        59: invokeinterface #269,  2          // InterfaceMethod coursier/util/Monad.point:(Ljava/lang/Object;)Ljava/lang/Object;
        64: invokespecial #225                // Method coursier/util/EitherT."<init>":(Ljava/lang/Object;)V
        67: astore        5
        69: goto          111
        72: goto          75
        75: iconst_1
        76: iload         6
        78: if_icmpne     95
        81: aload_0
        82: aload_2
        83: aload_3
        84: aload_1
        85: invokeinterface #206,  4          // InterfaceMethod fetchVersions:(Lcoursier/core/Module;Lscala/Function1;Lcoursier/util/Monad;)Lcoursier/util/EitherT;
        90: astore        5
        92: goto          111
        95: goto          98
        98: new           #166                // class scala/MatchError
       101: dup
       102: iload         6
       104: invokestatic  #374                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       107: invokespecial #170                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
       110: athrow
       111: aload         5
       113: areturn
      StackMapTable: number_of_entries = 5
        frame_type = 253 /* append */
          offset_delta = 72
          locals = [ top, int ]
        frame_type = 2 /* same */
        frame_type = 19 /* same */
        frame_type = 2 /* same */
        frame_type = 255 /* full_frame */
          offset_delta = 12
          locals = [ class coursier/core/Repository, class coursier/util/Monad, class coursier/core/Module, class scala/Function1, int, class coursier/util/EitherT, int ]
          stack = []
      LineNumberTable:
        line 74: 0
        line 75: 4
        line 76: 10
        line 75: 72
        line 77: 75
        line 78: 81
        line 77: 95
        line 74: 98
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     114     0 $this   Lcoursier/core/Repository;
            0     114     1   F$2   Lcoursier/util/Monad;
            0     114     2 module$2   Lcoursier/core/Module;
            0     114     3 fetch$2   Lscala/Function1;
            0     114     4  x0$1   Z
    MethodParameters:
      Name                           Flags
      $this                          final synthetic
      F$2                            final
      module$2                       final
      fetch$2                        final
      x0$1                           final

  public static void $init$(coursier.core.Repository);
    descriptor: (Lcoursier/core/Repository;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=0, locals=1, args_size=1
         0: return
      LineNumberTable:
        line 9: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       1     0 $this   Lcoursier/core/Repository;
    MethodParameters:
      Name                           Flags
      $this                          final synthetic

  public static java.lang.Object $anonfun$findMaybeInterval$3$adapted(coursier.core.VersionInterval);
    descriptor: (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #387                // InterfaceMethod $anonfun$findMaybeInterval$3:(Lcoursier/core/VersionInterval;)Z
         4: invokestatic  #374                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
         7: areturn
      LineNumberTable:
        line 32: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$1   Lcoursier/core/VersionInterval;
    MethodParameters:
      Name                           Flags
      x$1                            final

  public static scala.util.Right $anonfun$versions$1$adapted(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Lscala/util/Right;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokestatic  #390                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         4: invokestatic  #392                // InterfaceMethod $anonfun$versions$1:(Z)Lscala/util/Right;
         7: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0   x$2   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      x$2                            final

  public static coursier.util.EitherT $anonfun$versions$2$adapted(coursier.core.Repository, coursier.util.Monad, coursier.core.Module, scala.Function1, java.lang.Object);
    descriptor: (Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
    flags: (0x1009) ACC_PUBLIC, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=5, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: aload         4
         6: invokestatic  #390                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
         9: invokestatic  #395                // InterfaceMethod $anonfun$versions$2:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Z)Lcoursier/util/EitherT;
        12: areturn
      LineNumberTable:
        line 74: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0 $this   Lcoursier/core/Repository;
            0      13     1   F$2   Lcoursier/util/Monad;
            0      13     2 module$2   Lcoursier/core/Module;
            0      13     3 fetch$2   Lscala/Function1;
            0      13     4  x0$1   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      $this                          final
      F$2                            final
      module$2                       final
      fetch$2                        final
      x0$1                           final

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokedynamic #407,  0            // InvokeDynamic #7:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
         6: areturn
}
InnerClasses:
  public static final #15= #14 of #2;     // ArtifactExtensions=class coursier/core/Repository$ArtifactExtensions of class coursier/core/Repository
  public static #18= #17 of #2;           // =class coursier/core/Repository$ArtifactExtensions$ of class coursier/core/Repository
  public static #21= #20 of #2;           // Complete=class coursier/core/Repository$Complete of class coursier/core/Repository
  public static #18= #23 of #2;           // =class coursier/core/Repository$Complete$ of class coursier/core/Repository
  public static final #28= #25 of #27;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
  public static #18= #30 of #32;          // =class scala/Predef$ArrowAssoc$ of class scala/Predef
SourceFile: "Repository.scala"
RuntimeVisibleAnnotations:
  0: #10(#11=s#12)
    scala.reflect.ScalaSignature(
      bytes="\u0006\u0005\u0015uhACA>\u0003{\u0002\n1!\u0001\u0002\b\"9\u0011Q\u0017\u0001\u0005\u0002\u0005]\u0006bBA`\u0001\u0011\u0005\u0011\u0011\u0019\u0005\b\u0003\'\u0004a\u0011AAk\u0011\u001d)\t\u0007\u0001C\u0001\u000bGBq!b \u0001\t\u0003)\t\tC\u0004\u0006\"\u0002!\t!\"\u0005\t\u000f\tE\u0007\u0001\"\u0001\u0006$\"9!\u0011\u001b\u0001\u0005\u0002\u0015\u0015\u0007bBCq\u0001\u0011EQ1]\u0004\t\u0005_\ti\b#\u0001\u00032\u0019A\u00111PA?\u0011\u0003\u0011\u0019\u0004C\u0004\u0003D-!\tA!\u0012\u0006\r\t\u001d3\u0002\u0001B%\r\u0019\u0011\tgC\u0002\u0003d!Q!1\u000e\b\u0003\u0006\u0004%\tA!\u001c\t\u0015\t=dB!A!\u0002\u0013\u0011\t\u0006C\u0004\u0003D9!\tA!\u001d\t\u000f\ted\u0002\"\u0001\u0003n!9!1\u0010\b\u0005\u0002\t5\u0004\"\u0003B?\u001d\u0005\u0005I\u0011\tB@\u0011%\u00119IDA\u0001\n\u0003\u0012I\tC\u0005\u0003\u0016.\t\t\u0011b\u0001\u0003\u0018\u001aI!1T\u0006\u0011\u0002\u0007\u0005!Q\u0014\u0005\b\u0003k;B\u0011AA\\\u0011\u001d\u0011\tk\u0006D\u0001\u0005GCqAa1\u0018\r\u0003\u0011)\rC\u0004\u0003R^1\tAa5\t\u000f\tew\u0003\"\u0003\u0003\\\"9A\u0011^\f\u0005\n\u0011-\bb\u0002C{/\u0011%Aq\u001f\u0005\b\u000b\u000b9B\u0011BC\u0004\u0011\u001d)ya\u0006C\u0001\u000b#Aq!b\u0005\u0018\t\u0003))\u0002C\u0005\u0006 ]\t\n\u0011\"\u0001\u0006\"!9QQE\f\u0005\u0006\u0015\u001d\u0002bBC\u0013/\u0011\u0015Q\u0011G\u0004\b\u0005O\\\u0001\u0012\u0001Bu\r\u001d\u0011Yj\u0003E\u0001\u0005WDqAa\u0011\'\t\u0003\u0011iOB\u0004\u0003p\u001a\n\tC!=\t\u000f\t\r\u0003\u0006\"\u0001\u0003z\"9!q \u0015\u0007\u0002\u0005\u0005\u0007bBB\u0001Q\u0019\u000511A\u0004\b\t71\u0003\u0012AB\u0007\r\u001d\u0011yO\nE\u0001\u0007\u0013AqAa\u0011.\t\u0003\u0019YA\u0002\u0004\u0004\u00105\u00121\u0011\u0003\u0005\u000b\u0005\u007f|#Q1A\u0005\u0002\u0005\u0005\u0007BCB\n_\t\u0005\t\u0015!\u0003\u0002D\"9!1I\u0018\u0005\u0002\rU\u0001bBB\u0001_\u0011\u000511\u0001\u0005\b\u0007;yC\u0011AB\u0010\u0011\u001d\u0019\u0019c\fC!\u0007KAqa!\r0\t\u0003\u001a\u0019\u0004C\u0004\u0003\b>\"\te!\u000f\t\u000f\tut\u0006\"\u0011\u0003\u0000!91QH\u0018\u0005\n\r}\u0002bBB$_\u0011\u00053\u0011\n\u0005\b\u0007\u0017zC\u0011IB\u0002\u0011\u001d\u0019ie\fC!\u0007\u001fBqa!\u00160\t\u0003\u001a9fB\u0004\u0004\\5B\ta!\u0018\u0007\u000f\r=Q\u0006#\u0001\u0004`!9!1I \u0005\u0002\r\u0005\u0004bBB2\u007f\u0011\u00051Q\r\u0005\n\u0007Sz\u0014\u0011!C\u0005\u0007W2aaa\u0002.\u0005\ru\u0007B\u0003BQ\u0007\n\u0015\r\u0011\"\u0001\u0004`\"Q1\u0011]\"\u0003\u0002\u0003\u0006IA!3\t\u0015\t}8I!b\u0001\n\u0003\t\t\r\u0003\u0006\u0004\u0014\r\u0013\t\u0011)A\u0005\u0003\u0007D!b!\u0001D\u0005\u000b\u0007I\u0011AB\u0002\u0011)\u0019\tj\u0011B\u0001B\u0003%!\u0011\u0011\u0005\u000b\u0007\u000f\u001b%Q1A\u0005\u0002\u0005\u0005\u0007BCBr\u0007\n\u0005\t\u0015!\u0003\u0002D\"9!1I\"\u0005\u0002\r\u0015\bbBBO\u0007\u0012\u00051q\u0014\u0005\b\u0007_\u001cE\u0011ABy\u0011\u001d\u0019ib\u0011C\u0001\u0007kDqaa,D\t\u0003\u0019I\u0010C\u0004\u0004~\u000e#\taa@\t\u000f\r\r2\t\"\u0011\u0004&!91\u0011G\"\u0005B\u0011\r\u0001b\u0002BD\u0007\u0012\u0005Cq\u0001\u0005\b\u0005{\u001aE\u0011\tB@\u0011\u001d\u0019id\u0011C\u0005\t\u0017Aqaa\u0012D\t\u0003\u001aI\u0005C\u0004\u0004L\r#\tea\u0001\t\u000f\r53\t\"\u0011\u0005\u0014!91QK\"\u0005B\u0011]qaBB:[!\u00051Q\u000f\u0004\b\u0007\u000fi\u0003\u0012AB<\u0011\u001d\u0011\u0019\u0005\u0018C\u0001\u0007sBqaa\u0019]\t\u0003\u0019Y\bC\u0005\u0004jq\u000b\t\u0011\"\u0003\u0004l\u001911\u0011R\u0017\u0003\u0007\u0017C!Ba\u0007a\u0005\u000b\u0007I\u0011ABG\u0011)\u0019y\t\u0019B\u0001B\u0003%!Q\u0004\u0005\u000b\u0005\u007f\u0004\'Q1A\u0005\u0002\u0005\u0005\u0007BCB\nA\n\u0005\t\u0015!\u0003\u0002D\"Q1\u0011\u00011\u0003\u0006\u0004%\taa\u0001\t\u0015\rE\u0005M!A!\u0002\u0013\u0011\t\tC\u0004\u0003D\u0001$\taa%\t\u000f\ru\u0005\r\"\u0001\u0004 \"91\u0011\u00151\u0005\u0002\r\r\u0006bBBSA\u0012\u00051q\u0015\u0005\b\u0007;\u0001G\u0011ABV\u0011\u001d\u0019y\u000b\u0019C\u0001\u0007cCqaa\ta\t\u0003\u001a)\u0003C\u0004\u00042\u0001$\te!.\t\u000f\t\u001d\u0005\r\"\u0011\u0004:\"9!Q\u00101\u0005B\t}\u0004bBB\u001fA\u0012%1Q\u0018\u0005\b\u0007\u000f\u0002G\u0011IB%\u0011\u001d\u0019Y\u0005\u0019C!\u0007\u0007Aqa!\u0014a\t\u0003\u001a)\rC\u0004\u0004V\u0001$\te!3\b\u000f\r5W\u0006#\u0001\u0004P\u001a91\u0011R\u0017\t\u0002\rE\u0007b\u0002B\"o\u0012\u000511\u001b\u0005\b\u0007G:H\u0011ABk\u0011%\u0019Ig^A\u0001\n\u0013\u0019Y\u0007C\u0005\u0004j5\n\t\u0011\"\u0003\u0004l!9AQ\u0004\u0014\u0005\u0002\u0011}aA\u0002C\u0017M\t!y\u0003\u0003\u0006\u0003\u0000v\u0014\t\u0011)A\u0005\u0003\u0007D!\u0002b\u000e~\u0005\u0003\u0005\u000b\u0011\u0002BZ\u0011\u001d\u0011\u0019% C\u0001\ts9\u0011\u0002\"\u0011\'\u0003\u0003E\t\u0001b\u0011\u0007\u0013\u00115b%!A\t\u0002\u0011\u0015\u0003\u0002\u0003B\"\u0003\u000b!\t\u0001b\u0012\t\u0015\u0011%\u0013QAI\u0001\n\u0003!Y\u0005\u0003\u0006\u0004j\u0005\u0015\u0011\u0011!C\u0005\u0007W2a\u0001\"\u0019\'\u0005\u0011\r\u0004b\u0003BQ\u0003\u001b\u0011\t\u0011)A\u0005\u0005\u0013D1Ba@\u0002\u000e\t\u0005\t\u0015!\u0003\u0002D\"Y1\u0011AA\u0007\u0005\u0003\u0005\u000b\u0011\u0002BA\u0011-!9$!\u0004\u0003\u0002\u0003\u0006IAa-\t\u0011\t\r\u0013Q\u0002C\u0001\tK:\u0011\u0002\"\u001d\'\u0003\u0003E\t\u0001b\u001d\u0007\u0013\u0011\u0005d%!A\t\u0002\u0011U\u0004\u0002\u0003B\"\u00037!\t\u0001b\u001e\t\u0015\u0011e\u00141DI\u0001\n\u0003!Y\u0005\u0003\u0006\u0004j\u0005m\u0011\u0011!C\u0005\u0007W2a\u0001b\u001f\'\u0005\u0011u\u0004b\u0003B\u000e\u0003G\u0011\t\u0011)A\u0005\u0005;A1Ba@\u0002$\t\u0005\t\u0015!\u0003\u0002D\"Y1\u0011AA\u0012\u0005\u0003\u0005\u000b\u0011\u0002BA\u0011-!9$a\t\u0003\u0002\u0003\u0006IAa-\t\u0011\t\r\u00131\u0005C\u0001\t\u007f:\u0011\u0002b#\'\u0003\u0003E\t\u0001\"$\u0007\u0013\u0011md%!A\t\u0002\u0011=\u0005\u0002\u0003B\"\u0003c!\t\u0001\"%\t\u0015\u0011e\u0014\u0011GI\u0001\n\u0003!Y\u0005\u0003\u0006\u0004j\u0005E\u0012\u0011!C\u0005\u0007W2a\u0001b%\'\u0005\u0011U\u0005b\u0003B\u0000\u0003s\u0011\t\u0011)A\u0005\u0003\u0007D\u0001Ba\u0011\u0002:\u0011\u0005Aq\u0013\u0004\u0007\t;3#\u0001b(\t\u0017\t}\u0018q\bBC\u0002\u0013\u0005A\u0011\u0015\u0005\f\u0007\'\tyD!A!\u0002\u0013\u0011Y\u0010C\u0006\u0005$\u0006}\"Q1A\u0005\u0002\u0011\u0015\u0006b\u0003CT\u0003\u007f\u0011\t\u0011)A\u0005\u0005sC\u0001Ba\u0011\u0002@\u0011\u0005A\u0011\u0016\u0005\t\u0007;\ty\u0004\"\u0001\u00052\"AAQWA \t\u0003!9\f\u0003\u0005\u0004$\u0005}B\u0011IB\u0013\u0011!\u0019\t$a\u0010\u0005B\u0011m\u0006\u0002\u0003BD\u0003\u007f!\t\u0005b0\t\u0011\tu\u0014q\bC!\u0005\u007fB\u0001b!\u0010\u0002@\u0011%A1\u0019\u0005\t\u0007\u000f\ny\u0004\"\u0011\u0004J!A11JA \t\u0003\u001a\u0019\u0001\u0003\u0005\u0004N\u0005}B\u0011\tCd\u0011!\u0019)&a\u0010\u0005B\u0011-wa\u0002ChM!\u0005A\u0011\u001b\u0004\b\t;3\u0003\u0012\u0001Cj\u0011!\u0011\u0019%a\u0019\u0005\u0002\u0011U\u0007\u0002CB2\u0003G\"\t\u0001b6\t\u0015\r%\u00141MA\u0001\n\u0013\u0019YgB\u0005\u0003\u0016.\t\t\u0011#\u0001\u0006>\u0019I!\u0011M\u0006\u0002\u0002#\u0005Qq\b\u0005\t\u0005\u0007\ni\u0007\"\u0001\u0006B!AQ1IA7\t\u000b))\u0005\u0003\u0005\u0006L\u00055DQAC\'\u0011))\t&!\u001c\u0002\u0002\u0013\u0015Q1\u000b\u0005\u000b\u000b/\ni\'!A\u0005\u0006\u0015e\u0003\"CB5\u0017\u0005\u0005I\u0011BB6\u0005)\u0011V\r]8tSR|\'/\u001f\u0006\u0005\u0003\u007f\n\t)\u0001\u0003d_J,\'BAAB\u0003!\u0019w.\u001e:tS\u0016\u00148\u0001A\n\b\u0001\u0005%\u0015QSAW!\u0011\tY)!%\u000e\u0005\u00055%BAAH\u0003\u0015\u00198-\u00197b\u0013\u0011\t\u0019*!$\u0003\r\u0005s\u0017PU3g!\u0011\t9*a*\u000f\t\u0005e\u00151\u0015\b\u0005\u00037\u000b\t+\u0004\u0002\u0002\u001e*!\u0011qTAC\u0003\u0019a$o\\8u}%\u0011\u0011qR\u0005\u0005\u0003K\u000bi)A\u0004qC\u000e\\\u0017mZ3\n\t\u0005%\u00161\u0016\u0002\r\'\u0016\u0014\u0018.\u00197ju\u0006\u0014G.\u001a\u0006\u0005\u0003K\u000bi\t\u0005\u0003\u00020\u0006EVBAA?\u0013\u0011\t\u0019,! \u0003\u001d\u0005\u0013H/\u001b4bGR\u001cv.\u001e:dK\u00061A%\u001b8ji\u0012\"\"!!/\u0011\t\u0005-\u00151X\u0005\u0005\u0003{\u000biI\u0001\u0003V]&$\u0018\u0001\u0002:faJ,\"!a1\u0011\t\u0005\u0015\u0017Q\u001a\b\u0005\u0003\u000f\fI\r\u0005\u0003\u0002\u001c\u00065\u0015\u0002BAf\u0003\u001b\u000ba\u0001\u0015:fI\u00164\u0017\u0002BAh\u0003#\u0014aa\u0015;sS:<\'\u0002BAf\u0003\u001b\u000bAAZ5oIV!\u0011q[Av)!\tIN!\u0007\u0003$\t\u001dB\u0003BAn\u0005\u001f\u0001\"\"!8\u0002d\u0006\u001d\u00181\u0019B\u0002\u001b\t\tyN\u0003\u0003\u0002b\u0006\u0005\u0015\u0001B;uS2LA!!:\u0002`\n9Q)\u001b;iKJ$\u0006\u0003BAu\u0003Wd\u0001\u0001B\u0004\u0002n\u000e\u0011\r!a<\u0003\u0003\u0019+B!!=\u0002\u0000F!\u00111_A}!\u0011\tY)!>\n\t\u0005]\u0018Q\u0012\u0002\b\u001d>$\b.\u001b8h!\u0011\tY)a?\n\t\u0005u\u0018Q\u0012\u0002\u0004\u0003:LH\u0001\u0003B\u0001\u0003W\u0014\r!!=\u0003\u0003}\u0003\u0002\"a#\u0003\u0006\u00055&\u0011B\u0005\u0005\u0005\u000f\tiI\u0001\u0004UkBdWM\r\t\u0005\u0003_\u0013Y!\u0003\u0003\u0003\u000e\u0005u$a\u0002)s_*,7\r\u001e\u0005\b\u0005#\u0019\u00019\u0001B\n\u0003\u00051\u0005CBAo\u0005+\t9/\u0003\u0003\u0003\u0018\u0005}\'!B\'p]\u0006$\u0007b\u0002B\u000e\u0007\u0001\u0007!QD\u0001\u0007[>$W\u000f\\3\u0011\t\u0005=&qD\u0005\u0005\u0005C\tiH\u0001\u0004N_\u0012,H.\u001a\u0005\b\u0005K\u0019\u0001\u0019AAb\u0003\u001d1XM]:j_:DqA!\u000b\u0004\u0001\u0004\u0011Y#A\u0003gKR\u001c\u0007\u000eE\u0003\u0003.5\t9OD\u0002\u00020*\t!BU3q_NLGo\u001c:z!\r\tykC\n\u0006\u0017\u0005%%Q\u0007\t\u0005\u0005o\u0011\t%\u0004\u0002\u0003:)!!1\bB\u001f\u0003\tIwN\u0003\u0002\u0003@\u0005!!.\u0019<b\u0013\u0011\tIK!\u000f\u0002\rqJg.\u001b;?)\t\u0011\tDA\u0003GKR\u001c\u0007.\u0006\u0003\u0003L\tm\u0003\u0003CAF\u0005\u001b\u0012\tFa\u0016\n\t\t=\u0013Q\u0012\u0002\n\rVt7\r^5p]F\u0002B!!8\u0003T%!!QKAp\u0005!\t%\u000f^5gC\u000e$\bCCAo\u0003G\u0014I&a1\u0002DB!\u0011\u0011\u001eB.\t\u001d\ti/\u0004b\u0001\u0005;*B!!=\u0003`\u0011A!\u0011\u0001B.\u0005\u0004\t\tP\u0001\nBeRLg-Y2u\u000bb$XM\\:j_:\u001c8c\u0001\b\u0003fA!\u00111\u0012B4\u0013\u0011\u0011I\'!$\u0003\r\u0005s\u0017PV1m\u0003))h\u000eZ3sYfLgnZ\u000b\u0003\u0005#\n1\"\u001e8eKJd\u00170\u001b8hAQ!!1\u000fB<!\r\u0011)HD\u0007\u0002\u0017!9!1N\tA\u0002\tE\u0013\u0001F<ji\"$UMZ1vYR\u001c\u0005.Z2lgVl7/\u0001\u000bxSRDG)\u001a4bk2$8+[4oCR,(/Z\u0001\tQ\u0006\u001c\bnQ8eKR\u0011!\u0011\u0011\t\u0005\u0003\u0017\u0013\u0019)\u0003\u0003\u0003\u0006\u00065%aA%oi\u00061Q-];bYN$BAa#\u0003\u0012B!\u00111\u0012BG\u0013\u0011\u0011y)!$\u0003\u000f\t{w\u000e\\3b]\"I!1S\u000b\u0002\u0002\u0003\u0007\u0011\u0011`\u0001\u0004q\u0012\n\u0014AE!si&4\u0017m\u0019;FqR,gn]5p]N$BAa\u001d\u0003\u001a\"9!1\u000e\fA\u0002\tE#\u0001C\"p[BdW\r^3\u0016\t\t}%qU\n\u0004/\u0005%\u0015\u0001D8sO\u0006t\u0017N_1uS>tG\u0003\u0002BS\u0005\u007f\u0003b!!;\u0003(\n5FaBAw/\t\u0007!\u0011V\u000b\u0005\u0003c\u0014Y\u000b\u0002\u0005\u0003\u0002\t\u001d&\u0019AAy!!\t9Ja,\u00034\ne\u0016\u0002\u0002BY\u0003W\u0013a!R5uQ\u0016\u0014\b\u0003BAL\u0005kKAAa.\u0002,\nIA\u000b\u001b:po\u0006\u0014G.\u001a\t\u0007\u0003/\u0013Y,a1\n\t\tu\u00161\u0016\u0002\u0004\'\u0016\f\bb\u0002Ba3\u0001\u0007\u00111Y\u0001\u0007aJ,g-\u001b=\u0002\u00155|G-\u001e7f\u001d\u0006lW\r\u0006\u0004\u0003&\n\u001d\'q\u001a\u0005\b\u0005CS\u0002\u0019\u0001Be!\u0011\tyKa3\n\t\t5\u0017Q\u0010\u0002\r\u001fJ<\u0017M\\5{CRLwN\u001c\u0005\b\u0005\u0003T\u0002\u0019AAb\u0003!1XM]:j_:\u001cHC\u0002BS\u0005+\u00149\u000eC\u0004\u0003\u001cm\u0001\rA!\b\t\u000f\t\u00057\u00041\u0001\u0002D\u0006\u0019qN]4\u0015\t\tuG1\u001d\u000b\u0005\u0005?$i\u000e\u0005\u0004\u0002j\n\u001d&\u0011\u001d\t\t\u0003/\u0013yKa-\u0003dB!!Q]A \u001d\r\u0011)(J\u0001\t\u0007>l\u0007\u000f\\3uKB\u0019!Q\u000f\u0014\u0014\u0007\u0019\nI\t\u0006\u0002\u0003j\n)\u0011J\u001c9viN9\u0001&!#\u0003t\u0006U\u0005\u0003BAF\u0005kLAAa>\u0002\u000e\n9\u0001K]8ek\u000e$HC\u0001B~!\r\u0011i\u0010K\u0007\u0002M\u0005)\u0011N\u001c9vi\u0006!aM]8n+\t\u0011\t)\u000b\u0003)\u0007>\u0002\'\u0001\u0002(b[\u0016\u001cR!LAE\u0005k!\"a!\u0004\u0011\u0007\tuXFA\u0002Pe\u001e\u001cra\fB~\u0005g\f)*\u0001\u0004j]B,H\u000f\t\u000b\u0005\u0007/\u0019Y\u0002E\u0002\u0004\u001a=j\u0011!\f\u0005\b\u0005\u007f\u0014\u0004\u0019AAb\u0003%9\u0018\u000e\u001e5J]B,H\u000f\u0006\u0003\u0004\u0018\r\u0005\u0002b\u0002B\u0000i\u0001\u0007\u00111Y\u0001\ti>\u001cFO]5oOR\u00111q\u0005\t\u0005\u0007S\u0019y#\u0004\u0002\u0004,)!1Q\u0006B\u001f\u0003\u0011a\u0017M\\4\n\t\u0005=71F\u0001\tG\u0006tW)];bYR!!1RB\u001b\u0011\u001d\u00199D\u000ea\u0001\u0003s\f1a\u001c2k)\u0011\u0011Yia\u000f\t\u000f\r]r\u00071\u0001\u0002z\u0006)A/\u001e9mKV\u00111\u0011\t\t\u0007\u0003\u0017\u001b\u0019%a1\n\t\r\u0015\u0013Q\u0012\u0002\u0007)V\u0004H.Z\u0019\u0002\u001bA\u0014x\u000eZ;diB\u0013XMZ5y+\t\u00199#\u0001\u0007qe>$Wo\u0019;Be&$\u00180\u0001\bqe>$Wo\u0019;FY\u0016lWM\u001c;\u0015\t\u0005e8\u0011\u000b\u0005\b\u0007\'b\u0004\u0019\u0001BA\u0003\u0005q\u0017A\u00059s_\u0012,8\r^#mK6,g\u000e\u001e(b[\u0016$Baa\n\u0004Z!911K\u001fA\u0002\t\u0005\u0015aA(sOB\u00191\u0011D \u0014\u000b}\nII!\u000e\u0015\u0005\ru\u0013!B1qa2LH\u0003BB\f\u0007OBqAa@B\u0001\u0004\t\u0019-\u0001\u0007xe&$XMU3qY\u0006\u001cW\r\u0006\u0002\u0004nA!1\u0011FB8\u0013\u0011\u0019\tha\u000b\u0003\r=\u0013\'.Z2u\u0003\u0011q\u0015-\\3\u0011\u0007\reAlE\u0003]\u0003\u0013\u0013)\u0004\u0006\u0002\u0004vQQ1QPB@\u0007\u0003\u001b\u0019i!\"\u0011\u0007\re1\tC\u0004\u0003\"z\u0003\rA!3\t\u000f\t}h\f1\u0001\u0002D\"91\u0011\u00010A\u0002\t\u0005\u0005bBBD=\u0002\u0007\u00111Y\u0001\u000fe\u0016\fX/\u001b:fIN+hMZ5y\u0005\r1VM]\n\bA\nm(1_AK+\t\u0011i\"A\u0004n_\u0012,H.\u001a\u0011\u0002\u000b\u0019\u0014x.\u001c\u0011\u0015\u0011\rU5qSBM\u00077\u00032a!\u0007a\u0011\u001d\u0011Yb\u001aa\u0001\u0005;AqAa@h\u0001\u0004\t\u0019\rC\u0004\u0004\u0002\u001d\u0004\rA!!\u0002\u0011=\u0014x-\u00138qkR,\"aa\u0006\u0002\u00139\fW.Z%oaV$XCAB?\u0003)9\u0018\u000e\u001e5N_\u0012,H.\u001a\u000b\u0005\u0007+\u001bI\u000bC\u0004\u0003\u001c)\u0004\rA!\b\u0015\t\rU5Q\u0016\u0005\b\u0005\u007f\\\u0007\u0019AAb\u0003!9\u0018\u000e\u001e5Ge>lG\u0003BBK\u0007gCqa!\u0001m\u0001\u0004\u0011\t\t\u0006\u0003\u0003\f\u000e]\u0006bBB\u001c]\u0002\u0007\u0011\u0011 \u000b\u0005\u0005\u0017\u001bY\fC\u0004\u00048=\u0004\r!!?\u0016\u0005\r}\u0006CCAF\u0007\u0003\u0014i\"a1\u0003\u0002&!11YAG\u0005\u0019!V\u000f\u001d7fgQ!\u0011\u0011`Bd\u0011\u001d\u0019\u0019\u0006\u001ea\u0001\u0005\u0003#Baa\n\u0004L\"911K;A\u0002\t\u0005\u0015a\u0001,feB\u00191\u0011D<\u0014\u000b]\fII!\u000e\u0015\u0005\r=G\u0003CBK\u0007/\u001cIna7\t\u000f\tm\u0011\u00101\u0001\u0003\u001e!9!q`=A\u0002\u0005\r\u0007bBB\u0001s\u0002\u0007!\u0011Q\n\b\u0007\nm(1_AK+\t\u0011I-A\u0007pe\u001e\fg.\u001b>bi&|g\u000eI\u0001\u0010e\u0016\fX/\u001b:fIN+hMZ5yAQQ1QPBt\u0007S\u001cYo!<\t\u000f\t\u0005F\n1\u0001\u0003J\"9!q \'A\u0002\u0005\r\u0007bBB\u0001\u0019\u0002\u0007!\u0011\u0011\u0005\b\u0007\u000fc\u0005\u0019AAb\u0003A9\u0018\u000e\u001e5Pe\u001e\fg.\u001b>bi&|g\u000e\u0006\u0003\u0004~\rM\bb\u0002BQ\u001d\u0002\u0007!\u0011\u001a\u000b\u0005\u0007{\u001a9\u0010C\u0004\u0003\u0000>\u0003\r!a1\u0015\t\ru41 \u0005\b\u0007\u0003\u0001\u0006\u0019\u0001BA\u0003I9\u0018\u000e\u001e5SKF,\u0018N]3e\'V4g-\u001b=\u0015\t\ruD\u0011\u0001\u0005\b\u0007\u000f\u000b\u0006\u0019AAb)\u0011\u0011Y\t\"\u0002\t\u000f\r]2\u000b1\u0001\u0002zR!!1\u0012C\u0005\u0011\u001d\u00199\u0004\u0016a\u0001\u0003s,\"\u0001\"\u0004\u0011\u0019\u0005-Eq\u0002Be\u0003\u0007\u0014\t)a1\n\t\u0011E\u0011Q\u0012\u0002\u0007)V\u0004H.\u001a\u001b\u0015\t\u0005eHQ\u0003\u0005\b\u0007\'J\u0006\u0019\u0001BA)\u0011\u00199\u0003\"\u0007\t\u000f\rM#\f1\u0001\u0003\u0002\u0006)\u0011J\u001c9vi\u0006)\u0001/\u0019:tKRAA\u0011\u0005C\u0012\tK!I\u0003\u0005\u0005\u0002\u0018\n=&1\u0017B~\u0011\u001d\u0011y\u0010 a\u0001\u0003\u0007Dq\u0001b\n}\u0001\u0004\t\u0019-\u0001\u0007tG\u0006d\u0017MV3sg&|g\u000eC\u0004\u0005,q\u0004\r!a1\u0002%M\u001c\u0017\r\\1CS:\f\'/\u001f,feNLwN\u001c\u0002\u0017\u0007>l\u0007\u000f\\3uS:<wJ]4Fq\u000e,\u0007\u000f^5p]N\u0019Q\u0010\"\r\u0011\t\u0005]E1G\u0005\u0005\tk\tYKA\u0005Fq\u000e,\u0007\u000f^5p]\u0006)1-Y;tKR1A1\bC\u001f\t\u007f\u00012A!@~\u0011!\u0011y0!\u0001A\u0002\u0005\r\u0007B\u0003C\u001c\u0003\u0003\u0001\n\u00111\u0001\u00034\u000612i\\7qY\u0016$\u0018N\\4Pe\u001e,\u0005pY3qi&|g\u000e\u0005\u0003\u0003~\u0006\u00151CBA\u0003\u0003\u0013\u0013)\u0004\u0006\u0002\u0005D\u0005YB\u0005\\3tg&t\u0017\u000e\u001e\u0013he\u0016\fG/\u001a:%I\u00164\u0017-\u001e7uII*\"\u0001\"\u0014+\t\tMFqJ\u0016\u0003\t#\u0002B\u0001b\u0015\u0005^5\u0011AQ\u000b\u0006\u0005\t/\"I&A\u0005v]\u000eDWmY6fI*!A1LAG\u0003)\tgN\\8uCRLwN\\\u0005\u0005\t?\")FA\tv]\u000eDWmY6fIZ\u000b\'/[1oG\u0016\u0014qcQ8na2,G/\u001b8h\u001d\u0006lW-\u0012=dKB$\u0018n\u001c8\u0014\t\u00055A\u0011\u0007\u000b\u000b\tO\"I\u0007b\u001b\u0005n\u0011=\u0004\u0003\u0002B\u007f\u0003\u001bA\u0001B!)\u0002\u0018\u0001\u0007!\u0011\u001a\u0005\t\u0005\u007f\f9\u00021\u0001\u0002D\"A1\u0011AA\f\u0001\u0004\u0011\t\t\u0003\u0006\u00058\u0005]\u0001\u0013!a\u0001\u0005g\u000bqcQ8na2,G/\u001b8h\u001d\u0006lW-\u0012=dKB$\u0018n\u001c8\u0011\t\tu\u00181D\n\u0007\u00037\tII!\u000e\u0015\u0005\u0011M\u0014a\u0007\u0013mKN\u001c\u0018N\\5uI\u001d\u0014X-\u0019;fe\u0012\"WMZ1vYR$CG\u0001\u000eD_6\u0004H.\u001a;j]\u001e4VM]:j_:,\u0005pY3qi&|gn\u0005\u0003\u0002$\u0011EBC\u0003CA\t\u0007#)\tb\"\u0005\nB!!Q`A\u0012\u0011!\u0011Y\"!\fA\u0002\tu\u0001\u0002\u0003B\u0000\u0003[\u0001\r!a1\t\u0011\r\u0005\u0011Q\u0006a\u0001\u0005\u0003C!\u0002b\u000e\u0002.A\u0005\t\u0019\u0001BZ\u0003i\u0019u.\u001c9mKRLgn\u001a,feNLwN\\#yG\u0016\u0004H/[8o!\u0011\u0011i0!\r\u0014\r\u0005E\u0012\u0011\u0012B\u001b)\t!iI\u0001\bNC24wN]7fI&s\u0007/\u001e;\u0014\t\u0005eB\u0011\u0007\u000b\u0005\t3#Y\n\u0005\u0003\u0003~\u0006e\u0002\u0002\u0003B\u0000\u0003{\u0001\r!a1\u0003\rI+7/\u001e7u\'!\ty$!#\u0003t\u0006UUC\u0001B~\u0003-\u0019w.\u001c9mKRLwN\\:\u0016\u0005\te\u0016\u0001D2p[BdW\r^5p]N\u0004CC\u0002CV\t[#y\u000b\u0005\u0003\u0003~\u0006}\u0002\u0002\u0003B\u0000\u0003\u0013\u0002\rAa?\t\u0011\u0011\r\u0016\u0011\na\u0001\u0005s#B\u0001b+\u00054\"A!q`A&\u0001\u0004\u0011Y0A\bxSRD7i\\7qY\u0016$\u0018n\u001c8t)\u0011!Y\u000b\"/\t\u0011\u0011\r\u0016Q\na\u0001\u0005s#BAa#\u0005>\"A1qGA)\u0001\u0004\tI\u0010\u0006\u0003\u0003\f\u0012\u0005\u0007\u0002CB\u001c\u0003\'\u0002\r!!?\u0016\u0005\u0011\u0015\u0007\u0003CAF\u0005\u000b\u0011YP!/\u0015\t\u0005eH\u0011\u001a\u0005\t\u0007\'\ni\u00061\u0001\u0003\u0002R!1q\u0005Cg\u0011!\u0019\u0019&a\u0018A\u0002\t\u0005\u0015A\u0002*fgVdG\u000f\u0005\u0003\u0003~\u0006\r4CBA2\u0003\u0013\u0013)\u0004\u0006\u0002\u0005RR1A1\u0016Cm\t7D\u0001Ba@\u0002h\u0001\u0007!1 \u0005\t\tG\u000b9\u00071\u0001\u0003:\"9!\u0011\u0003\u000fA\u0004\u0011}\u0007CBAo\u0005+!\t\u000f\u0005\u0003\u0002j\n\u001d\u0006bBBO9\u0001\u0007AQ\u001d\t\u0004\tO|cb\u0001BsY\u0005!a.Y7f)\u0011!i\u000f\"=\u0015\t\t}Gq\u001e\u0005\b\u0005#i\u00029\u0001Cp\u0011\u001d\u0019\t+\ba\u0001\tg\u00042\u0001b:D\u0003\u0019A\u0017m](sOR1A\u0011 C\u0000\u000b\u0003!B\u0001b?\u0005~B1\u0011\u0011\u001eBT\u0005\u0017CqA!\u0005\u001f\u0001\b!y\u000eC\u0004\u0004\u001ez\u0001\r\u0001\":\t\u000f\u0015\ra\u00041\u0001\u0003\f\u00069\u0001/\u0019:uS\u0006d\u0017a\u00025bg:\u000bW.\u001a\u000b\u0005\u000b\u0013)i\u0001\u0006\u0003\u0005|\u0016-\u0001b\u0002B\t?\u0001\u000fAq\u001c\u0005\b\u0007C{\u0002\u0019\u0001Cz\u0003-\u0019(\r^!uiJ\u001cF/\u001e2\u0016\u0005\t-\u0015!\u00035bg6{G-\u001e7f)\u0019)9\"b\u0007\u0006\u001eQ!A1`C\r\u0011\u001d\u0011\t\"\ta\u0002\t?DqAa\u0007\"\u0001\u0004\u0011i\u0002C\u0005\u0006\u0010\u0005\u0002\n\u00111\u0001\u0003\f\u0006\u0019\u0002.Y:N_\u0012,H.\u001a\u0013eK\u001a\fW\u000f\u001c;%eU\u0011Q1\u0005\u0016\u0005\u0005\u0017#y%\u0001\u0005d_6\u0004H.\u001a;f)\u0011)I#\"\f\u0015\t\t}W1\u0006\u0005\b\u0005#\u0019\u00039\u0001Cp\u0011\u001d\u0011yp\ta\u0001\u000b_\u00012A!:))!)\u0019$b\u000e\u0006:\u0015mB\u0003\u0002Bp\u000bkAqA!\u0005%\u0001\b!y\u000eC\u0004\u0003\u0000\u0012\u0002\r!a1\t\u000f\u0011\u001dB\u00051\u0001\u0002D\"9A1\u0006\u0013A\u0002\u0005\r\u0007\u0003\u0002B;\u0003[\u001aB!!\u001c\u0002\nR\u0011QQH\u0001\u001fo&$\b\u000eR3gCVdGo\u00115fG.\u001cX/\\:%Kb$XM\\:j_:$BA!\u0015\u0006H!AQ\u0011JA9\u0001\u0004\u0011\u0019(A\u0003%i\"L7/\u0001\u0010xSRDG)\u001a4bk2$8+[4oCR,(/\u001a\u0013fqR,gn]5p]R!!\u0011KC(\u0011!)I%a\u001dA\u0002\tM\u0014A\u00055bg\"\u001cu\u000eZ3%Kb$XM\\:j_:$BAa \u0006V!AQ\u0011JA;\u0001\u0004\u0011\u0019(\u0001\tfcV\fGn\u001d\u0013fqR,gn]5p]R!Q1LC0)\u0011\u0011Y)\"\u0018\t\u0015\tM\u0015qOA\u0001\u0002\u0004\tI\u0010\u0003\u0005\u0006J\u0005]\u0004\u0019\u0001B:\u0003E1\u0017N\u001c3NCf\u0014W-\u00138uKJ4\u0018\r\\\u000b\u0005\u000bK*i\u0007\u0006\u0005\u0006h\u0015]T\u0011PC>)\u0011)I\'b\u001d\u0011\u0015\u0005u\u00171]C6\u0003\u0007\u0014\u0019\u0001\u0005\u0003\u0002j\u00165DaBAw\t\t\u0007QqN\u000b\u0005\u0003c,\t\b\u0002\u0005\u0003\u0002\u00155$\u0019AAy\u0011\u001d\u0011\t\u0002\u0002a\u0002\u000bk\u0002b!!8\u0003\u0016\u0015-\u0004b\u0002B\u000e\t\u0001\u0007!Q\u0004\u0005\b\u0005K!\u0001\u0019AAb\u0011\u001d\u0011I\u0003\u0002a\u0001\u000b{\u0002RA!\f\u000e\u000bW\n1bY8na2,G/Z(qiV!Q1QCI)\u0011)))\"(\u0015\t\u0015\u001dUq\u0013\t\u0007\u0003\u0017+I)\"$\n\t\u0015-\u0015Q\u0012\u0002\u0007\u001fB$\u0018n\u001c8\u0011\u000b\t5r#b$\u0011\t\u0005%X\u0011\u0013\u0003\b\u0003[,!\u0019ACJ+\u0011\t\t0\"&\u0005\u0011\t\u0005Q\u0011\u0013b\u0001\u0003cD\u0011\"\"\'\u0006\u0003\u0003\u0005\u001d!b\'\u0002\u0015\u00154\u0018\u000eZ3oG\u0016$\u0013\u0007\u0005\u0004\u0002^\nUQq\u0012\u0005\b\u0005S)\u0001\u0019ACP!\u0015\u0011i#DCH\u0003Y1XM]:j_:\u001c8\t[3dW\"\u000b7/T8ek2,W\u0003BCS\u000b[#b!b*\u0006@\u0016\u0005G\u0003BCU\u000bw\u0003\"\"!8\u0002d\u0016-\u00161YCZ!\u0011\tI/\",\u0005\u000f\u00055xA1\u0001\u00060V!\u0011\u0011_CY\t!\u0011\t!\",C\u0002\u0005E\b\u0003CAF\u0005\u000b)),a1\u0011\t\u0005=VqW\u0005\u0005\u000bs\u000biH\u0001\u0005WKJ\u001c\u0018n\u001c8t\u0011\u001d\u0011\tb\u0002a\u0002\u000b{\u0003b!!8\u0003\u0016\u0015-\u0006b\u0002B\u000e\u000f\u0001\u0007!Q\u0004\u0005\b\u0005S9\u0001\u0019ACb!\u0015\u0011i#DCV+\u0011)9-b4\u0015\u0011\u0015%W\u0011\\Cn\u000b?$B!b3\u0006VBQ\u0011Q\\Ar\u000b\u001b\f\u0019-b-\u0011\t\u0005%Xq\u001a\u0003\b\u0003[D!\u0019ACi+\u0011\t\t0b5\u0005\u0011\t\u0005Qq\u001ab\u0001\u0003cDqA!\u0005\t\u0001\b)9\u000e\u0005\u0004\u0002^\nUQQ\u001a\u0005\b\u00057A\u0001\u0019\u0001B\u000f\u0011\u001d\u0011I\u0003\u0003a\u0001\u000b;\u0004RA!\f\u000e\u000b\u001bDq!\")\t\u0001\u0004\u0011Y)A\u0007gKR\u001c\u0007NV3sg&|gn]\u000b\u0005\u000bK,i\u000f\u0006\u0004\u0006h\u0016]X\u0011 \u000b\u0005\u000bS,\u0019\u0010\u0005\u0006\u0002^\u0006\rX1^Ab\u000bg\u0003B!!;\u0006n\u00129\u0011Q^\u0005C\u0002\u0015=X\u0003BAy\u000bc$\u0001B!\u0001\u0006n\n\u0007\u0011\u0011\u001f\u0005\b\u0005#I\u00019AC{!\u0019\tiN!\u0006\u0006l\"9!1D\u0005A\u0002\tu\u0001b\u0002B\u0015\u0013\u0001\u0007Q1 \t\u0006\u0005[iQ1\u001e"
    )
BootstrapMethods:
  0: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #81 ()Ljava/lang/Object;
      #85 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$1:(Ljava/lang/String;)Lscala/Option;
      #87 ()Lscala/Option;
      #88 5
      #89 1
      #87 ()Lscala/Option;
  1: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #81 ()Ljava/lang/Object;
      #110 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$2:(Ljava/lang/String;)Lscala/Option;
      #87 ()Lscala/Option;
      #88 5
      #89 1
      #87 ()Lscala/Option;
  2: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #113 (Ljava/lang/Object;)Ljava/lang/Object;
      #118 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$3$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
      #119 (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
      #88 5
      #89 1
      #119 (Lcoursier/core/VersionInterval;)Ljava/lang/Object;
  3: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #113 (Ljava/lang/Object;)Ljava/lang/Object;
      #153 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$4:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
      #155 (Lscala/Tuple2;)Lcoursier/util/EitherT;
      #88 5
      #89 1
      #155 (Lscala/Tuple2;)Lcoursier/util/EitherT;
  4: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #113 (Ljava/lang/Object;)Ljava/lang/Object;
      #218 REF_invokeStatic coursier/core/Repository.$anonfun$versions$1$adapted:(Ljava/lang/Object;)Lscala/util/Right;
      #219 (Ljava/lang/Object;)Lscala/util/Right;
      #88 5
      #89 1
      #219 (Ljava/lang/Object;)Lscala/util/Right;
  5: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #113 (Ljava/lang/Object;)Ljava/lang/Object;
      #230 REF_invokeStatic coursier/core/Repository.$anonfun$versions$2$adapted:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
      #232 (Ljava/lang/Object;)Lcoursier/util/EitherT;
      #88 5
      #89 1
      #232 (Ljava/lang/Object;)Lcoursier/util/EitherT;
  6: #96 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #113 (Ljava/lang/Object;)Ljava/lang/Object;
      #354 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$5:(Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
      #356 (Lscala/Tuple2;)Lscala/Tuple2;
      #88 5
      #89 1
      #356 (Lscala/Tuple2;)Lscala/Tuple2;
  7: #404 REF_invokeStatic scala/runtime/LambdaDeserialize.bootstrap:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/invoke/MethodHandle;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #85 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$1:(Ljava/lang/String;)Lscala/Option;
      #110 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$2:(Ljava/lang/String;)Lscala/Option;
      #118 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$3$adapted:(Lcoursier/core/VersionInterval;)Ljava/lang/Object;
      #153 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$4:(Lcoursier/core/Repository;Lcoursier/core/VersionInterval;Ljava/lang/String;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Lscala/Tuple2;)Lcoursier/util/EitherT;
      #354 REF_invokeStatic coursier/core/Repository.$anonfun$findMaybeInterval$5:(Lcoursier/core/Versions;Lscala/Tuple2;)Lscala/Tuple2;
      #218 REF_invokeStatic coursier/core/Repository.$anonfun$versions$1$adapted:(Ljava/lang/Object;)Lscala/util/Right;
      #230 REF_invokeStatic coursier/core/Repository.$anonfun$versions$2$adapted:(Lcoursier/core/Repository;Lcoursier/util/Monad;Lcoursier/core/Module;Lscala/Function1;Ljava/lang/Object;)Lcoursier/util/EitherT;
  ScalaInlineInfo: length = 0x86 (unknown attribute)
   01 00 00 1A 00 54 00 4F 01 00 6D 00 4F 01 01 18
   01 19 01 00 74 00 75 01 00 97 00 98 01 01 1E 01
   1F 01 01 71 01 72 01 00 D8 00 D9 01 01 7A 01 7B
   01 00 E4 00 E5 01 01 83 01 84 01 00 BA 00 BB 00
   00 B7 00 B8 01 00 CE 00 94 00 00 F0 00 C6 01 00
   39 00 3A 00 00 42 00 3A 00 00 40 00 41 01 00 30
   00 31 00 00 2D 00 2E 01 00 93 00 94 00 00 93 00
   C8 00 00 C5 00 C6 01 00 C5 00 CB 01 00 C1 00 C2
   00 00 BF 00 C0 01
  ScalaSig: length = 0x3 (unknown attribute)
   05 02 00
