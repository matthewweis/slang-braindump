Classfile /Users/mw/Projects/slang-braindump/.jar/jar8/assemble/slang-braindump/assemble/content/org/kohsuke/github/GHEventPayload$IssueComment.class
  Last modified May 29, 2022; size 2392 bytes
  SHA-256 checksum e6065bc432f7df5aae8885c97b325923f4feb607da621468ce427eb08404bf71
  Compiled from "GHEventPayload.java"
public class org.kohsuke.github.GHEventPayload$IssueComment extends org.kohsuke.github.GHEventPayload
  minor version: 0
  major version: 52
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #13                         // org/kohsuke/github/GHEventPayload$IssueComment
  super_class: #14                        // org/kohsuke/github/GHEventPayload
  interfaces: 0, fields: 3, methods: 8, attributes: 2
Constant pool:
   #1 = Methodref          #14.#61        // org/kohsuke/github/GHEventPayload."<init>":()V
   #2 = Fieldref           #13.#62        // org/kohsuke/github/GHEventPayload$IssueComment.comment:Lorg/kohsuke/github/GHIssueComment;
   #3 = Fieldref           #13.#63        // org/kohsuke/github/GHEventPayload$IssueComment.changes:Lorg/kohsuke/github/GHEventPayload$CommentChanges;
   #4 = Class              #64            // java/lang/RuntimeException
   #5 = String             #65            // Do not use this method.
   #6 = Methodref          #4.#66         // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #7 = Fieldref           #13.#67        // org/kohsuke/github/GHEventPayload$IssueComment.issue:Lorg/kohsuke/github/GHIssue;
   #8 = Methodref          #14.#68        // org/kohsuke/github/GHEventPayload.lateBind:()V
   #9 = Methodref          #13.#69        // org/kohsuke/github/GHEventPayload$IssueComment.getRepository:()Lorg/kohsuke/github/GHRepository;
  #10 = Methodref          #70.#71        // org/kohsuke/github/GHIssue.wrap:(Lorg/kohsuke/github/GHRepository;)Lorg/kohsuke/github/GHIssue;
  #11 = Methodref          #72.#73        // org/kohsuke/github/GHIssueComment.wrapUp:(Lorg/kohsuke/github/GHIssue;)Lorg/kohsuke/github/GHIssueComment;
  #12 = Methodref          #14.#74        // org/kohsuke/github/GHEventPayload.getRoot:()Lorg/kohsuke/github/GitHub;
  #13 = Class              #75            // org/kohsuke/github/GHEventPayload$IssueComment
  #14 = Class              #76            // org/kohsuke/github/GHEventPayload
  #15 = Utf8               comment
  #16 = Utf8               Lorg/kohsuke/github/GHIssueComment;
  #17 = Utf8               issue
  #18 = Utf8               Lorg/kohsuke/github/GHIssue;
  #19 = Utf8               changes
  #20 = Class              #77            // org/kohsuke/github/GHEventPayload$CommentChanges
  #21 = Utf8               CommentChanges
  #22 = Utf8               InnerClasses
  #23 = Utf8               Lorg/kohsuke/github/GHEventPayload$CommentChanges;
  #24 = Utf8               <init>
  #25 = Utf8               ()V
  #26 = Utf8               Code
  #27 = Utf8               LineNumberTable
  #28 = Utf8               LocalVariableTable
  #29 = Utf8               this
  #30 = Utf8               IssueComment
  #31 = Utf8               Lorg/kohsuke/github/GHEventPayload$IssueComment;
  #32 = Utf8               getComment
  #33 = Utf8               ()Lorg/kohsuke/github/GHIssueComment;
  #34 = Utf8               RuntimeInvisibleAnnotations
  #35 = Utf8               Ledu/umd/cs/findbugs/annotations/SuppressFBWarnings;
  #36 = Utf8               value
  #37 = Utf8               EI_EXPOSE_REP
  #38 = Utf8               justification
  #39 = Utf8               Expected
  #40 = Utf8               getChanges
  #41 = Utf8               ()Lorg/kohsuke/github/GHEventPayload$CommentChanges;
  #42 = Utf8               setComment
  #43 = Utf8               (Lorg/kohsuke/github/GHIssueComment;)V
  #44 = Utf8               Deprecated
  #45 = Utf8               RuntimeVisibleAnnotations
  #46 = Utf8               Ljava/lang/Deprecated;
  #47 = Utf8               getIssue
  #48 = Utf8               ()Lorg/kohsuke/github/GHIssue;
  #49 = Utf8               setIssue
  #50 = Utf8               (Lorg/kohsuke/github/GHIssue;)V
  #51 = Utf8               lateBind
  #52 = Utf8               repository
  #53 = Utf8               Lorg/kohsuke/github/GHRepository;
  #54 = Utf8               StackMapTable
  #55 = Class              #78            // org/kohsuke/github/GHRepository
  #56 = Utf8               getRoot
  #57 = Utf8               ()Lorg/kohsuke/github/GitHub;
  #58 = Utf8               Expected behavior
  #59 = Utf8               SourceFile
  #60 = Utf8               GHEventPayload.java
  #61 = NameAndType        #24:#25        // "<init>":()V
  #62 = NameAndType        #15:#16        // comment:Lorg/kohsuke/github/GHIssueComment;
  #63 = NameAndType        #19:#23        // changes:Lorg/kohsuke/github/GHEventPayload$CommentChanges;
  #64 = Utf8               java/lang/RuntimeException
  #65 = Utf8               Do not use this method.
  #66 = NameAndType        #24:#79        // "<init>":(Ljava/lang/String;)V
  #67 = NameAndType        #17:#18        // issue:Lorg/kohsuke/github/GHIssue;
  #68 = NameAndType        #51:#25        // lateBind:()V
  #69 = NameAndType        #80:#81        // getRepository:()Lorg/kohsuke/github/GHRepository;
  #70 = Class              #82            // org/kohsuke/github/GHIssue
  #71 = NameAndType        #83:#84        // wrap:(Lorg/kohsuke/github/GHRepository;)Lorg/kohsuke/github/GHIssue;
  #72 = Class              #85            // org/kohsuke/github/GHIssueComment
  #73 = NameAndType        #86:#87        // wrapUp:(Lorg/kohsuke/github/GHIssue;)Lorg/kohsuke/github/GHIssueComment;
  #74 = NameAndType        #56:#57        // getRoot:()Lorg/kohsuke/github/GitHub;
  #75 = Utf8               org/kohsuke/github/GHEventPayload$IssueComment
  #76 = Utf8               org/kohsuke/github/GHEventPayload
  #77 = Utf8               org/kohsuke/github/GHEventPayload$CommentChanges
  #78 = Utf8               org/kohsuke/github/GHRepository
  #79 = Utf8               (Ljava/lang/String;)V
  #80 = Utf8               getRepository
  #81 = Utf8               ()Lorg/kohsuke/github/GHRepository;
  #82 = Utf8               org/kohsuke/github/GHIssue
  #83 = Utf8               wrap
  #84 = Utf8               (Lorg/kohsuke/github/GHRepository;)Lorg/kohsuke/github/GHIssue;
  #85 = Utf8               org/kohsuke/github/GHIssueComment
  #86 = Utf8               wrapUp
  #87 = Utf8               (Lorg/kohsuke/github/GHIssue;)Lorg/kohsuke/github/GHIssueComment;
{
  private org.kohsuke.github.GHIssueComment comment;
    descriptor: Lorg/kohsuke/github/GHIssueComment;
    flags: (0x0002) ACC_PRIVATE

  private org.kohsuke.github.GHIssue issue;
    descriptor: Lorg/kohsuke/github/GHIssue;
    flags: (0x0002) ACC_PRIVATE

  private org.kohsuke.github.GHEventPayload$CommentChanges changes;
    descriptor: Lorg/kohsuke/github/GHEventPayload$CommentChanges;
    flags: (0x0002) ACC_PRIVATE

  public org.kohsuke.github.GHEventPayload$IssueComment();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method org/kohsuke/github/GHEventPayload."<init>":()V
         4: return
      LineNumberTable:
        line 637: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;

  public org.kohsuke.github.GHIssueComment getComment();
    descriptor: ()Lorg/kohsuke/github/GHIssueComment;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field comment:Lorg/kohsuke/github/GHIssueComment;
         4: areturn
      LineNumberTable:
        line 649: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;
    RuntimeInvisibleAnnotations:
      0: #35(#36=[s#37],#38=s#39)
        edu.umd.cs.findbugs.annotations.SuppressFBWarnings(
          value=["EI_EXPOSE_REP"]
          justification="Expected"
        )

  public org.kohsuke.github.GHEventPayload$CommentChanges getChanges();
    descriptor: ()Lorg/kohsuke/github/GHEventPayload$CommentChanges;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #3                  // Field changes:Lorg/kohsuke/github/GHEventPayload$CommentChanges;
         4: areturn
      LineNumberTable:
        line 658: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;

  public void setComment(org.kohsuke.github.GHIssueComment);
    descriptor: (Lorg/kohsuke/github/GHIssueComment;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #4                  // class java/lang/RuntimeException
         3: dup
         4: ldc           #5                  // String Do not use this method.
         6: invokespecial #6                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 670: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;
            0      10     1 comment   Lorg/kohsuke/github/GHIssueComment;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #46()
        java.lang.Deprecated

  public org.kohsuke.github.GHIssue getIssue();
    descriptor: ()Lorg/kohsuke/github/GHIssue;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #7                  // Field issue:Lorg/kohsuke/github/GHIssue;
         4: areturn
      LineNumberTable:
        line 680: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;
    RuntimeInvisibleAnnotations:
      0: #35(#36=[s#37],#38=s#39)
        edu.umd.cs.findbugs.annotations.SuppressFBWarnings(
          value=["EI_EXPOSE_REP"]
          justification="Expected"
        )

  public void setIssue(org.kohsuke.github.GHIssue);
    descriptor: (Lorg/kohsuke/github/GHIssue;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #4                  // class java/lang/RuntimeException
         3: dup
         4: ldc           #5                  // String Do not use this method.
         6: invokespecial #6                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 692: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;
            0      10     1 issue   Lorg/kohsuke/github/GHIssue;
    Deprecated: true
    RuntimeVisibleAnnotations:
      0: #46()
        java.lang.Deprecated

  void lateBind();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method org/kohsuke/github/GHEventPayload.lateBind:()V
         4: aload_0
         5: invokevirtual #9                  // Method getRepository:()Lorg/kohsuke/github/GHRepository;
         8: astore_1
         9: aload_1
        10: ifnull        22
        13: aload_0
        14: getfield      #7                  // Field issue:Lorg/kohsuke/github/GHIssue;
        17: aload_1
        18: invokevirtual #10                 // Method org/kohsuke/github/GHIssue.wrap:(Lorg/kohsuke/github/GHRepository;)Lorg/kohsuke/github/GHIssue;
        21: pop
        22: aload_0
        23: getfield      #2                  // Field comment:Lorg/kohsuke/github/GHIssueComment;
        26: aload_0
        27: getfield      #7                  // Field issue:Lorg/kohsuke/github/GHIssue;
        30: invokevirtual #11                 // Method org/kohsuke/github/GHIssueComment.wrapUp:(Lorg/kohsuke/github/GHIssue;)Lorg/kohsuke/github/GHIssueComment;
        33: pop
        34: return
      LineNumberTable:
        line 697: 0
        line 698: 4
        line 699: 9
        line 700: 13
        line 702: 22
        line 703: 34
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;
            9      26     1 repository   Lorg/kohsuke/github/GHRepository;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class org/kohsuke/github/GHRepository ]

  public org.kohsuke.github.GitHub getRoot();
    descriptor: ()Lorg/kohsuke/github/GitHub;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #12                 // Method org/kohsuke/github/GHEventPayload.getRoot:()Lorg/kohsuke/github/GitHub;
         4: areturn
      LineNumberTable:
        line 637: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/kohsuke/github/GHEventPayload$IssueComment;
    RuntimeVisibleAnnotations:
      0: #46()
        java.lang.Deprecated
    RuntimeInvisibleAnnotations:
      0: #35(#36=[s#37],#38=s#58)
        edu.umd.cs.findbugs.annotations.SuppressFBWarnings(
          value=["EI_EXPOSE_REP"]
          justification="Expected behavior"
        )
}
SourceFile: "GHEventPayload.java"
InnerClasses:
  public static #21= #20 of #14;          // CommentChanges=class org/kohsuke/github/GHEventPayload$CommentChanges of class org/kohsuke/github/GHEventPayload
  public static #30= #13 of #14;          // IssueComment=class org/kohsuke/github/GHEventPayload$IssueComment of class org/kohsuke/github/GHEventPayload
