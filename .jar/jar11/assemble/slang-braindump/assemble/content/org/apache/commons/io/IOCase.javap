Classfile /Users/mw/Projects/slang-braindump/.jar/jar11/assemble/slang-braindump/assemble/content/org/apache/commons/io/IOCase.class
  Last modified May 29, 2022; size 3904 bytes
  SHA-256 checksum 3925fb7a0b1d4a2c48afb8d60ab61feb017ca56bd8b985058d2cccf225a6689e
  Compiled from "IOCase.java"
public final class org.apache.commons.io.IOCase extends java.lang.Enum<org.apache.commons.io.IOCase>
  minor version: 0
  major version: 52
  flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM
  this_class: #4                          // org/apache/commons/io/IOCase
  super_class: #40                        // java/lang/Enum
  interfaces: 0, fields: 7, methods: 15, attributes: 2
Constant pool:
    #1 = Fieldref           #4.#106       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;
    #2 = Methodref          #107.#108     // "[Lorg/apache/commons/io/IOCase;".clone:()Ljava/lang/Object;
    #3 = Class              #55           // "[Lorg/apache/commons/io/IOCase;"
    #4 = Class              #109          // org/apache/commons/io/IOCase
    #5 = Methodref          #40.#110      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
    #6 = Methodref          #4.#111       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;
    #7 = Methodref          #4.#112       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;
    #8 = Methodref          #113.#114     // java/lang/String.equals:(Ljava/lang/Object;)Z
    #9 = Class              #115          // java/lang/IllegalArgumentException
   #10 = Class              #116          // java/lang/StringBuilder
   #11 = Methodref          #10.#117      // java/lang/StringBuilder."<init>":()V
   #12 = String             #118          // Invalid IOCase name:
   #13 = Methodref          #10.#119      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
   #14 = Methodref          #10.#120      // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #15 = Methodref          #9.#121       // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #16 = Methodref          #40.#122      // java/lang/Enum."<init>":(Ljava/lang/String;I)V
   #17 = Fieldref           #4.#123       // org/apache/commons/io/IOCase.name:Ljava/lang/String;
   #18 = Fieldref           #4.#124       // org/apache/commons/io/IOCase.sensitive:Z
   #19 = Methodref          #4.#125       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
   #20 = String             #79           // str1
   #21 = Methodref          #126.#127     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
   #22 = String             #80           // str2
   #23 = Methodref          #113.#128     // java/lang/String.compareTo:(Ljava/lang/String;)I
   #24 = Methodref          #113.#129     // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
   #25 = Methodref          #113.#130     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
   #26 = Methodref          #113.#131     // java/lang/String.length:()I
   #27 = Methodref          #113.#132     // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
   #28 = Methodref          #4.#133       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z
   #29 = String             #41           // SENSITIVE
   #30 = String             #134          // Sensitive
   #31 = Methodref          #4.#135       // org/apache/commons/io/IOCase."<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
   #32 = Fieldref           #4.#136       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;
   #33 = String             #43           // INSENSITIVE
   #34 = String             #137          // Insensitive
   #35 = Fieldref           #4.#138       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;
   #36 = String             #44           // SYSTEM
   #37 = String             #139          // System
   #38 = Methodref          #140.#141     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z
   #39 = Fieldref           #4.#142       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;
   #40 = Class              #143          // java/lang/Enum
   #41 = Utf8               SENSITIVE
   #42 = Utf8               Lorg/apache/commons/io/IOCase;
   #43 = Utf8               INSENSITIVE
   #44 = Utf8               SYSTEM
   #45 = Utf8               serialVersionUID
   #46 = Utf8               J
   #47 = Utf8               ConstantValue
   #48 = Long               -6343169151696340687l
   #50 = Utf8               name
   #51 = Utf8               Ljava/lang/String;
   #52 = Utf8               sensitive
   #53 = Utf8               Z
   #54 = Utf8               $VALUES
   #55 = Utf8               [Lorg/apache/commons/io/IOCase;
   #56 = Utf8               values
   #57 = Utf8               ()[Lorg/apache/commons/io/IOCase;
   #58 = Utf8               Code
   #59 = Utf8               LineNumberTable
   #60 = Utf8               valueOf
   #61 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
   #62 = Utf8               LocalVariableTable
   #63 = Utf8               forName
   #64 = Utf8               ioCase
   #65 = Utf8               StackMapTable
   #66 = Utf8               <init>
   #67 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)V
   #68 = Utf8               this
   #69 = Utf8               Signature
   #70 = Utf8               (Ljava/lang/String;Z)V
   #71 = Utf8               readResolve
   #72 = Utf8               ()Ljava/lang/Object;
   #73 = Utf8               getName
   #74 = Utf8               ()Ljava/lang/String;
   #75 = Utf8               isCaseSensitive
   #76 = Utf8               ()Z
   #77 = Utf8               checkCompareTo
   #78 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I
   #79 = Utf8               str1
   #80 = Utf8               str2
   #81 = Utf8               checkEquals
   #82 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z
   #83 = Utf8               checkStartsWith
   #84 = Utf8               str
   #85 = Utf8               start
   #86 = Class              #144          // java/lang/String
   #87 = Class              #109          // org/apache/commons/io/IOCase
   #88 = Utf8               checkEndsWith
   #89 = Utf8               end
   #90 = Utf8               endLen
   #91 = Utf8               I
   #92 = Utf8               checkIndexOf
   #93 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I
   #94 = Utf8               i
   #95 = Utf8               strStartIndex
   #96 = Utf8               search
   #97 = Utf8               endIndex
   #98 = Utf8               checkRegionMatches
   #99 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z
  #100 = Utf8               toString
  #101 = Utf8               <clinit>
  #102 = Utf8               ()V
  #103 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;
  #104 = Utf8               SourceFile
  #105 = Utf8               IOCase.java
  #106 = NameAndType        #54:#55       // $VALUES:[Lorg/apache/commons/io/IOCase;
  #107 = Class              #55           // "[Lorg/apache/commons/io/IOCase;"
  #108 = NameAndType        #145:#72      // clone:()Ljava/lang/Object;
  #109 = Utf8               org/apache/commons/io/IOCase
  #110 = NameAndType        #60:#146      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
  #111 = NameAndType        #56:#57       // values:()[Lorg/apache/commons/io/IOCase;
  #112 = NameAndType        #73:#74       // getName:()Ljava/lang/String;
  #113 = Class              #144          // java/lang/String
  #114 = NameAndType        #147:#148     // equals:(Ljava/lang/Object;)Z
  #115 = Utf8               java/lang/IllegalArgumentException
  #116 = Utf8               java/lang/StringBuilder
  #117 = NameAndType        #66:#102      // "<init>":()V
  #118 = Utf8               Invalid IOCase name:
  #119 = NameAndType        #149:#150     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #120 = NameAndType        #100:#74      // toString:()Ljava/lang/String;
  #121 = NameAndType        #66:#151      // "<init>":(Ljava/lang/String;)V
  #122 = NameAndType        #66:#152      // "<init>":(Ljava/lang/String;I)V
  #123 = NameAndType        #50:#51       // name:Ljava/lang/String;
  #124 = NameAndType        #52:#53       // sensitive:Z
  #125 = NameAndType        #63:#61       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
  #126 = Class              #153          // java/util/Objects
  #127 = NameAndType        #154:#155     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #128 = NameAndType        #156:#157     // compareTo:(Ljava/lang/String;)I
  #129 = NameAndType        #158:#157     // compareToIgnoreCase:(Ljava/lang/String;)I
  #130 = NameAndType        #159:#160     // equalsIgnoreCase:(Ljava/lang/String;)Z
  #131 = NameAndType        #161:#162     // length:()I
  #132 = NameAndType        #163:#164     // regionMatches:(ZILjava/lang/String;II)Z
  #133 = NameAndType        #98:#99       // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z
  #134 = Utf8               Sensitive
  #135 = NameAndType        #66:#67       // "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
  #136 = NameAndType        #41:#42       // SENSITIVE:Lorg/apache/commons/io/IOCase;
  #137 = Utf8               Insensitive
  #138 = NameAndType        #43:#42       // INSENSITIVE:Lorg/apache/commons/io/IOCase;
  #139 = Utf8               System
  #140 = Class              #165          // org/apache/commons/io/FilenameUtils
  #141 = NameAndType        #166:#76      // isSystemWindows:()Z
  #142 = NameAndType        #44:#42       // SYSTEM:Lorg/apache/commons/io/IOCase;
  #143 = Utf8               java/lang/Enum
  #144 = Utf8               java/lang/String
  #145 = Utf8               clone
  #146 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
  #147 = Utf8               equals
  #148 = Utf8               (Ljava/lang/Object;)Z
  #149 = Utf8               append
  #150 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #151 = Utf8               (Ljava/lang/String;)V
  #152 = Utf8               (Ljava/lang/String;I)V
  #153 = Utf8               java/util/Objects
  #154 = Utf8               requireNonNull
  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
  #156 = Utf8               compareTo
  #157 = Utf8               (Ljava/lang/String;)I
  #158 = Utf8               compareToIgnoreCase
  #159 = Utf8               equalsIgnoreCase
  #160 = Utf8               (Ljava/lang/String;)Z
  #161 = Utf8               length
  #162 = Utf8               ()I
  #163 = Utf8               regionMatches
  #164 = Utf8               (ZILjava/lang/String;II)Z
  #165 = Utf8               org/apache/commons/io/FilenameUtils
  #166 = Utf8               isSystemWindows
{
  public static final org.apache.commons.io.IOCase SENSITIVE;
    descriptor: Lorg/apache/commons/io/IOCase;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final org.apache.commons.io.IOCase INSENSITIVE;
    descriptor: Lorg/apache/commons/io/IOCase;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  public static final org.apache.commons.io.IOCase SYSTEM;
    descriptor: Lorg/apache/commons/io/IOCase;
    flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM

  private static final long serialVersionUID;
    descriptor: J
    flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL
    ConstantValue: long -6343169151696340687l

  private final java.lang.String name;
    descriptor: Ljava/lang/String;
    flags: (0x0012) ACC_PRIVATE, ACC_FINAL

  private final transient boolean sensitive;
    descriptor: Z
    flags: (0x0092) ACC_PRIVATE, ACC_FINAL, ACC_TRANSIENT

  private static final org.apache.commons.io.IOCase[] $VALUES;
    descriptor: [Lorg/apache/commons/io/IOCase;
    flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC

  public static org.apache.commons.io.IOCase[] values();
    descriptor: ()[Lorg/apache/commons/io/IOCase;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/IOCase;
         3: invokevirtual #2                  // Method "[Lorg/apache/commons/io/IOCase;".clone:()Ljava/lang/Object;
         6: checkcast     #3                  // class "[Lorg/apache/commons/io/IOCase;"
         9: areturn
      LineNumberTable:
        line 36: 0

  public static org.apache.commons.io.IOCase valueOf(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: ldc           #4                  // class org/apache/commons/io/IOCase
         2: aload_0
         3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
         6: checkcast     #4                  // class org/apache/commons/io/IOCase
         9: areturn
      LineNumberTable:
        line 36: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  name   Ljava/lang/String;

  public static org.apache.commons.io.IOCase forName(java.lang.String);
    descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=5, args_size=1
         0: invokestatic  #6                  // Method values:()[Lorg/apache/commons/io/IOCase;
         3: astore_1
         4: aload_1
         5: arraylength
         6: istore_2
         7: iconst_0
         8: istore_3
         9: iload_3
        10: iload_2
        11: if_icmpge     40
        14: aload_1
        15: iload_3
        16: aaload
        17: astore        4
        19: aload         4
        21: invokevirtual #7                  // Method getName:()Ljava/lang/String;
        24: aload_0
        25: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        28: ifeq          34
        31: aload         4
        33: areturn
        34: iinc          3, 1
        37: goto          9
        40: new           #9                  // class java/lang/IllegalArgumentException
        43: dup
        44: new           #10                 // class java/lang/StringBuilder
        47: dup
        48: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
        51: ldc           #12                 // String Invalid IOCase name:
        53: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        56: aload_0
        57: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        60: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        63: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        66: athrow
      LineNumberTable:
        line 80: 0
        line 82: 19
        line 84: 31
        line 80: 34
        line 87: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           19      15     4 ioCase   Lorg/apache/commons/io/IOCase;
            0      67     0  name   Ljava/lang/String;
      StackMapTable: number_of_entries = 3
        frame_type = 254 /* append */
          offset_delta = 9
          locals = [ class "[Lorg/apache/commons/io/IOCase;", int, int ]
        frame_type = 24 /* same */
        frame_type = 248 /* chop */
          offset_delta = 5

  private org.apache.commons.io.IOCase(java.lang.String, boolean);
    descriptor: (Ljava/lang/String;ILjava/lang/String;Z)V
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=3, locals=5, args_size=5
         0: aload_0
         1: aload_1
         2: iload_2
         3: invokespecial #16                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
         6: aload_0
         7: aload_3
         8: putfield      #17                 // Field name:Ljava/lang/String;
        11: aload_0
        12: iload         4
        14: putfield      #18                 // Field sensitive:Z
        17: return
      LineNumberTable:
        line 97: 0
        line 98: 6
        line 99: 11
        line 100: 17
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/apache/commons/io/IOCase;
            0      18     3  name   Ljava/lang/String;
            0      18     4 sensitive   Z
    Signature: #70                          // (Ljava/lang/String;Z)V

  private java.lang.Object readResolve();
    descriptor: ()Ljava/lang/Object;
    flags: (0x0002) ACC_PRIVATE
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #17                 // Field name:Ljava/lang/String;
         4: invokestatic  #19                 // Method forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;
         7: areturn
      LineNumberTable:
        line 109: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/apache/commons/io/IOCase;

  public java.lang.String getName();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #17                 // Field name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 119: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/IOCase;

  public boolean isCaseSensitive();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #18                 // Field sensitive:Z
         4: ireturn
      LineNumberTable:
        line 128: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/IOCase;

  public int checkCompareTo(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ldc           #20                 // String str1
         3: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: aload_2
         8: ldc           #22                 // String str2
        10: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        13: pop
        14: aload_0
        15: getfield      #18                 // Field sensitive:Z
        18: ifeq          29
        21: aload_1
        22: aload_2
        23: invokevirtual #23                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
        26: goto          34
        29: aload_1
        30: aload_2
        31: invokevirtual #24                 // Method java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I
        34: ireturn
      LineNumberTable:
        line 144: 0
        line 145: 7
        line 146: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/apache/commons/io/IOCase;
            0      35     1  str1   Ljava/lang/String;
            0      35     2  str2   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 29 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean checkEquals(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=3
         0: aload_1
         1: ldc           #20                 // String str1
         3: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
         6: pop
         7: aload_2
         8: ldc           #22                 // String str2
        10: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
        13: pop
        14: aload_0
        15: getfield      #18                 // Field sensitive:Z
        18: ifeq          29
        21: aload_1
        22: aload_2
        23: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        26: goto          34
        29: aload_1
        30: aload_2
        31: invokevirtual #25                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
        34: ireturn
      LineNumberTable:
        line 161: 0
        line 162: 7
        line 163: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      35     0  this   Lorg/apache/commons/io/IOCase;
            0      35     1  str1   Ljava/lang/String;
            0      35     2  str2   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 29 /* same */
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ int ]

  public boolean checkStartsWith(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=3, args_size=3
         0: aload_1
         1: aload_0
         2: getfield      #18                 // Field sensitive:Z
         5: ifne          12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: iconst_0
        14: aload_2
        15: iconst_0
        16: aload_2
        17: invokevirtual #26                 // Method java/lang/String.length:()I
        20: invokevirtual #27                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
        23: ireturn
      LineNumberTable:
        line 178: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/apache/commons/io/IOCase;
            0      24     1   str   Ljava/lang/String;
            0      24     2 start   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/io/IOCase, class java/lang/String, class java/lang/String ]
          stack = [ class java/lang/String, int ]

  public boolean checkEndsWith(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=3
         0: aload_2
         1: invokevirtual #26                 // Method java/lang/String.length:()I
         4: istore_3
         5: aload_1
         6: aload_0
         7: getfield      #18                 // Field sensitive:Z
        10: ifne          17
        13: iconst_1
        14: goto          18
        17: iconst_0
        18: aload_1
        19: invokevirtual #26                 // Method java/lang/String.length:()I
        22: iload_3
        23: isub
        24: aload_2
        25: iconst_0
        26: iload_3
        27: invokevirtual #27                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
        30: ireturn
      LineNumberTable:
        line 193: 0
        line 194: 5
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      31     0  this   Lorg/apache/commons/io/IOCase;
            0      31     1   str   Ljava/lang/String;
            0      31     2   end   Ljava/lang/String;
            5      26     3 endLen   I
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class org/apache/commons/io/IOCase, class java/lang/String, class java/lang/String, int ]
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/io/IOCase, class java/lang/String, class java/lang/String, int ]
          stack = [ class java/lang/String, int ]

  public int checkIndexOf(java.lang.String, int, java.lang.String);
    descriptor: (Ljava/lang/String;ILjava/lang/String;)I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=6, args_size=4
         0: aload_1
         1: invokevirtual #26                 // Method java/lang/String.length:()I
         4: aload_3
         5: invokevirtual #26                 // Method java/lang/String.length:()I
         8: isub
         9: istore        4
        11: iload         4
        13: iload_2
        14: if_icmplt     47
        17: iload_2
        18: istore        5
        20: iload         5
        22: iload         4
        24: if_icmpgt     47
        27: aload_0
        28: aload_1
        29: iload         5
        31: aload_3
        32: invokevirtual #28                 // Method checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z
        35: ifeq          41
        38: iload         5
        40: ireturn
        41: iinc          5, 1
        44: goto          20
        47: iconst_m1
        48: ireturn
      LineNumberTable:
        line 213: 0
        line 214: 11
        line 215: 17
        line 216: 27
        line 217: 38
        line 215: 41
        line 221: 47
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           20      27     5     i   I
            0      49     0  this   Lorg/apache/commons/io/IOCase;
            0      49     1   str   Ljava/lang/String;
            0      49     2 strStartIndex   I
            0      49     3 search   Ljava/lang/String;
           11      38     4 endIndex   I
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ int, int ]
        frame_type = 20 /* same */
        frame_type = 250 /* chop */
          offset_delta = 5

  public boolean checkRegionMatches(java.lang.String, int, java.lang.String);
    descriptor: (Ljava/lang/String;ILjava/lang/String;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=6, locals=4, args_size=4
         0: aload_1
         1: aload_0
         2: getfield      #18                 // Field sensitive:Z
         5: ifne          12
         8: iconst_1
         9: goto          13
        12: iconst_0
        13: iload_2
        14: aload_3
        15: iconst_0
        16: aload_3
        17: invokevirtual #26                 // Method java/lang/String.length:()I
        20: invokevirtual #27                 // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z
        23: ireturn
      LineNumberTable:
        line 237: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/apache/commons/io/IOCase;
            0      24     1   str   Ljava/lang/String;
            0      24     2 strStartIndex   I
            0      24     3 search   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 76 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/apache/commons/io/IOCase, class java/lang/String, int, class java/lang/String ]
          stack = [ class java/lang/String, int ]

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #17                 // Field name:Ljava/lang/String;
         4: areturn
      LineNumberTable:
        line 248: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lorg/apache/commons/io/IOCase;

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=6, locals=0, args_size=0
         0: new           #4                  // class org/apache/commons/io/IOCase
         3: dup
         4: ldc           #29                 // String SENSITIVE
         6: iconst_0
         7: ldc           #30                 // String Sensitive
         9: iconst_1
        10: invokespecial #31                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
        13: putstatic     #32                 // Field SENSITIVE:Lorg/apache/commons/io/IOCase;
        16: new           #4                  // class org/apache/commons/io/IOCase
        19: dup
        20: ldc           #33                 // String INSENSITIVE
        22: iconst_1
        23: ldc           #34                 // String Insensitive
        25: iconst_0
        26: invokespecial #31                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
        29: putstatic     #35                 // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;
        32: new           #4                  // class org/apache/commons/io/IOCase
        35: dup
        36: ldc           #36                 // String SYSTEM
        38: iconst_2
        39: ldc           #37                 // String System
        41: invokestatic  #38                 // Method org/apache/commons/io/FilenameUtils.isSystemWindows:()Z
        44: ifne          51
        47: iconst_1
        48: goto          52
        51: iconst_0
        52: invokespecial #31                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;Z)V
        55: putstatic     #39                 // Field SYSTEM:Lorg/apache/commons/io/IOCase;
        58: iconst_3
        59: anewarray     #4                  // class org/apache/commons/io/IOCase
        62: dup
        63: iconst_0
        64: getstatic     #32                 // Field SENSITIVE:Lorg/apache/commons/io/IOCase;
        67: aastore
        68: dup
        69: iconst_1
        70: getstatic     #35                 // Field INSENSITIVE:Lorg/apache/commons/io/IOCase;
        73: aastore
        74: dup
        75: iconst_2
        76: getstatic     #39                 // Field SYSTEM:Lorg/apache/commons/io/IOCase;
        79: aastore
        80: putstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/IOCase;
        83: return
      LineNumberTable:
        line 41: 0
        line 46: 16
        line 60: 32
        line 36: 58
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 51
          locals = []
          stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = []
          stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String, int ]
}
Signature: #103                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;
SourceFile: "IOCase.java"
